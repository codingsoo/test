[
  {
    "number": 26284,
    "title": "openssl with ChaCha20-Poly1305 to encrypt file",
    "created_at": "2024-12-30T03:00:57Z",
    "closed_at": "2024-12-30T16:58:05Z",
    "labels": [
      "branch: master",
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/26284",
    "body": "Need to know openssl 1.1.x or openssl 3.x had the feature of using ChaCha20-Poly1305 to encrypt file\r\nI would appreciate your engineer give an example on how to do it from commandline.\r\nThank you.\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/26284/comments",
    "author": "nonvwvnon",
    "comments": [
      {
        "user": "0xGSMonkey",
        "created_at": "2024-12-30T06:27:47Z",
        "body": "Have you tried using ```openssl list -all-algorithms``` ? There are so many algorithms. "
      },
      {
        "user": "t8m",
        "created_at": "2024-12-30T16:56:49Z",
        "body": "No, it is not possible to encrypt a file with Chacha20-Poly1305 from an openssl command line.\r\n"
      },
      {
        "user": "t8m",
        "created_at": "2024-12-30T16:58:05Z",
        "body": "Actually a duplicate of #24421"
      }
    ]
  },
  {
    "number": 25790,
    "title": "Configuring available TLS groups using negation",
    "created_at": "2024-10-24T11:55:30Z",
    "closed_at": "2024-11-04T10:51:44Z",
    "labels": [
      "branch: master",
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/25790",
    "body": "We are setting up some tests that should confirm correct TLS configuration of our application.\r\n\r\nWe'd like to show that for example the client will fail if a server is not configured to use `x25519` so we want to do something similar to\r\n\r\n```\r\n[tls_system_default]\r\nSSLCipherSuite = DEFAULT:!kDHE\r\n```\r\n\r\nie.\r\n\r\n```\r\n[tls_system_default]\r\nGroups = DEFAULT:!x25519\r\n```\r\n\r\nIs that currently possible or is it feasible as a feature request?",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/25790/comments",
    "author": "fwh-dc",
    "comments": [
      {
        "user": "t8m",
        "created_at": "2024-10-24T13:13:16Z",
        "body": "> Is that currently possible or is it feasible as a feature request?\r\n\r\nCurrently not possible, but IMO a reasonable RFE.\r\n"
      }
    ]
  },
  {
    "number": 25695,
    "title": "Warning and failed Test on AIX with sendmmsg and recvmmsg",
    "created_at": "2024-10-15T11:16:20Z",
    "closed_at": "2024-10-15T13:19:51Z",
    "labels": [
      "help wanted",
      "triaged: bug"
    ],
    "url": "https://github.com/openssl/openssl/issues/25695",
    "body": "I get a warning during `make` and later I get an error in `make test` for the same piece of code (sendmmsg and recvmmsg)\r\nMaybe related to #23594 #23751 \r\n\r\nAIX 7.3\r\nOpenSSL Version 3.2.2\r\ngcc 11.2.0\r\n\r\nCondifguration:\r\n```\r\nbash-5.2$ sudo ./config aix64-gcc --prefix=$openSslInstallDir --openssldir=$openSslInstallSslDir --libdir=lib\r\nConfiguring OpenSSL version 3.3.2 for target aix64-gcc\r\nUsing os-specific seed configuration\r\nCreated configdata.pm\r\nRunning configdata.pm\r\nCreated Makefile.in\r\nCreated Makefile\r\nCreated include/openssl/configuration.h\r\n```\r\n```\r\nbash-5.2$ perl configdata.pm --dump\r\n\r\nCommand line (with current working directory = .):\r\n\r\n    perl ./Configure aix64-gcc --prefix=/path/to/openssl/install --openssldir=/path/to/openssl/install/ssl --libdir=lib\r\n\r\nPerl information:\r\n\r\n    perl\r\n    5.34.1 for aix-thread-multi\r\n\r\nEnabled features:\r\n\r\n    apps\r\n    argon2\r\n    aria\r\n    asm\r\n    async\r\n    atexit\r\n    autoalginit\r\n    autoerrinit\r\n    autoload-config\r\n    bf\r\n    blake2\r\n    bulk\r\n    cached-fetch\r\n    camellia\r\n    capieng\r\n    cast\r\n    chacha\r\n    cmac\r\n    cmp\r\n    cms\r\n    comp\r\n    ct\r\n    default-thread-pool\r\n    deprecated\r\n    des\r\n    dgram\r\n    dh\r\n    docs\r\n    dsa\r\n    dso\r\n    dtls\r\n    dynamic-engine\r\n    ec\r\n    ec2m\r\n    ecdh\r\n    ecdsa\r\n    ecx\r\n    engine\r\n    err\r\n    filenames\r\n    gost\r\n    http\r\n    idea\r\n    legacy\r\n    loadereng\r\n    makedepend\r\n    md4\r\n    mdc2\r\n    module\r\n    multiblock\r\n    nextprotoneg\r\n    ocb\r\n    ocsp\r\n    padlockeng\r\n    pic\r\n    pinshared\r\n    poly1305\r\n    posix-io\r\n    psk\r\n    quic\r\n    unstable-qlog\r\n    rc2\r\n    rc4\r\n    rdrand\r\n    rfc3779\r\n    rmd160\r\n    scrypt\r\n    secure-memory\r\n    seed\r\n    shared\r\n    siphash\r\n    siv\r\n    sm2\r\n    sm2-precomp\r\n    sm3\r\n    sm4\r\n    sock\r\n    srp\r\n    srtp\r\n    sse2\r\n    ssl\r\n    ssl-trace\r\n    static-engine\r\n    stdio\r\n    tests\r\n    thread-pool\r\n    threads\r\n    tls\r\n    ts\r\n    ui-console\r\n    whirlpool\r\n    tls1\r\n    tls1-method\r\n    tls1_1\r\n    tls1_1-method\r\n    tls1_2\r\n    tls1_2-method\r\n    tls1_3\r\n    dtls1\r\n    dtls1-method\r\n    dtls1_2\r\n    dtls1_2-method\r\n\r\nDisabled features:\r\n\r\n    acvp-tests          [cascade]        OPENSSL_NO_ACVP_TESTS\r\n    afalgeng            [not-linux]      OPENSSL_NO_AFALGENG\r\n    asan                [default]        OPENSSL_NO_ASAN\r\n    brotli              [default]        OPENSSL_NO_BROTLI\r\n    brotli-dynamic      [default]        OPENSSL_NO_BROTLI_DYNAMIC\r\n    buildtest-c++       [default]\r\n    winstore            [not-windows]    OPENSSL_NO_WINSTORE\r\n    crypto-mdebug       [default]        OPENSSL_NO_CRYPTO_MDEBUG\r\n    devcryptoeng        [default]        OPENSSL_NO_DEVCRYPTOENG\r\n    ec_nistp_64_gcc_128 [default]        OPENSSL_NO_EC_NISTP_64_GCC_128\r\n    egd                 [default]        OPENSSL_NO_EGD\r\n    external-tests      [default]        OPENSSL_NO_EXTERNAL_TESTS\r\n    fips                [default]\r\n    fips-securitychecks [cascade]        OPENSSL_NO_FIPS_SECURITYCHECKS\r\n    fuzz-afl            [default]        OPENSSL_NO_FUZZ_AFL\r\n    fuzz-libfuzzer      [default]        OPENSSL_NO_FUZZ_LIBFUZZER\r\n    ktls                [default]        OPENSSL_NO_KTLS\r\n    md2                 [default]        OPENSSL_NO_MD2 (skip crypto/md2)\r\n    msan                [default]        OPENSSL_NO_MSAN\r\n    rc5                 [default]        OPENSSL_NO_RC5 (skip crypto/rc5)\r\n    sctp                [default]        OPENSSL_NO_SCTP\r\n    tfo                 [default]        OPENSSL_NO_TFO\r\n    trace               [default]        OPENSSL_NO_TRACE\r\n    ubsan               [default]        OPENSSL_NO_UBSAN\r\n    unit-test           [default]        OPENSSL_NO_UNIT_TEST\r\n    uplink              [no uplink_arch] OPENSSL_NO_UPLINK\r\n    weak-ssl-ciphers    [default]        OPENSSL_NO_WEAK_SSL_CIPHERS\r\n    zlib                [default]        OPENSSL_NO_ZLIB\r\n    zlib-dynamic        [default]        OPENSSL_NO_ZLIB_DYNAMIC\r\n    zstd                [default]        OPENSSL_NO_ZSTD\r\n    zstd-dynamic        [default]        OPENSSL_NO_ZSTD_DYNAMIC\r\n    ssl3                [default]        OPENSSL_NO_SSL3\r\n    ssl3-method         [default]        OPENSSL_NO_SSL3_METHOD\r\n\r\nConfig target attributes:\r\n\r\n    AR => \"ar -X64\",\r\n    ARFLAGS => \"qc\",\r\n    CC => \"gcc\",\r\n    CFLAGS => \"-O\",\r\n    HASHBANGPERL => \"/usr/bin/env perl\",\r\n    RANLIB => \"ranlib -X64\",\r\n    RC => \"windres\",\r\n    asm_arch => \"ppc64\",\r\n    bn_ops => \"SIXTY_FOUR_BIT_LONG RC4_CHAR\",\r\n    build_file => \"Makefile\",\r\n    build_scheme => [ \"unified\", \"unix\" ],\r\n    cflags => \"-maix64 -pthread\",\r\n    cppflags => \"\",\r\n    defines => [ \"OPENSSL_BUILDING_OPENSSL\" ],\r\n    disable => [  ],\r\n    dso_scheme => \"dlfcn\",\r\n    enable => [  ],\r\n    ex_libs => \"-pthread\",\r\n    includes => [  ],\r\n    lflags => \"-Wl,-bsvr4\",\r\n    lib_cflags => \"\",\r\n    lib_cppflags => \"-DB_ENDIAN\",\r\n    lib_defines => [  ],\r\n    module_cflags => \"\",\r\n    module_cxxflags => undef,\r\n    module_ldflags => \"-Wl,-G,-bsymbolic,-bnoentry\",\r\n    perl_platform => \"AIX\",\r\n    perlasm_scheme => \"aix64\",\r\n    shared_cflag => \"\",\r\n    shared_defflag => \"-Wl,-bE:\",\r\n    shared_defines => [  ],\r\n    shared_extension => \"64.so.\\$(SHLIB_VERSION_NUMBER)\",\r\n    shared_fipsflag => \"-Wl,-binitfini:_init:_cleanup\",\r\n    shared_ldflag => \"-shared -static-libgcc -Wl,-G,-bsymbolic,-bnoentry\",\r\n    shared_rcflag => \"\",\r\n    shared_target => \"aix\",\r\n    sys_id => \"AIX\",\r\n    thread_defines => [  ],\r\n    thread_scheme => \"pthreads\",\r\n    unistd => \"<unistd.h>\",\r\n\r\nRecorded environment:\r\n\r\n    AR =\r\n    ARFLAGS =\r\n    AS =\r\n    ASFLAGS =\r\n    BUILDFILE =\r\n    CC = /path/to/gcc-11 -Werror\r\n    CFLAGS =\r\n    CPP =\r\n    CPPDEFINES =\r\n    CPPFLAGS =\r\n    CPPINCLUDES =\r\n    CROSS_COMPILE =\r\n    CXX = /path/to/g++-11 -Werror\r\n    CXXFLAGS =\r\n    HASHBANGPERL =\r\n    LD =\r\n    LDFLAGS =\r\n    LDLIBS =\r\n    MT =\r\n    MTFLAGS =\r\n    OPENSSL_LOCAL_CONFIG_DIR =\r\n    PERL =\r\n    RANLIB =\r\n    RC =\r\n    RCFLAGS =\r\n    RM =\r\n    WINDRES =\r\n    __CNF_CFLAGS =\r\n    __CNF_CPPDEFINES =\r\n    __CNF_CPPFLAGS =\r\n    __CNF_CPPINCLUDES =\r\n    __CNF_CXXFLAGS =\r\n    __CNF_LDFLAGS =\r\n    __CNF_LDLIBS =\r\n\r\nMakevars:\r\n\r\n    AR              = ar -X64\r\n    ARFLAGS         = qc\r\n    ASFLAGS         =\r\n    CC              = /path/to/gcc-11 -Werror\r\n    CFLAGS          = -O\r\n    CPPDEFINES      =\r\n    CPPFLAGS        =\r\n    CPPINCLUDES     =\r\n    CXX             = /path/to/g++-11 -Werror\r\n    CXXFLAGS        =\r\n    HASHBANGPERL    = /usr/bin/env perl\r\n    LDFLAGS         =\r\n    LDLIBS          =\r\n    PERL            = perl\r\n    RANLIB          = ranlib -X64\r\n    RC              = windres\r\n    RCFLAGS         =\r\n\r\nNOTE: These variables only represent the configuration view.  The build file\r\ntemplate may have processed these variables further, please have a look at the\r\nbuild file for more exact data:\r\n    Makefile\r\n\r\nbuild file:\r\n\r\n    Makefile\r\n\r\nbuild file templates:\r\n\r\n    Configurations/common0.tmpl\r\n    Configurations/unix-Makefile.tmpl\r\n```\r\n\r\nWarning:\r\n```\r\n/path/to/gcc-11 -Werror  -I. -Iinclude -Iproviders/common/include -Iproviders/implementations/include  -DAES_ASM -DECP_NISTZ256_ASM -DKECCAK1600_ASM -DOPENSSL_BN_ASM_MONT -DOPENSSL_CPUID_OBJ -DPOLY1305_ASM -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DVPAES_ASM -DX25519_ASM -maix64 -pthread -O -DB_ENDIAN -DOPENSSL_PIC -DOPENSSLDIR=\"\\\"/path/to/openssl/install/ssl\\\"\" -DENGINESDIR=\"\\\"/path/to/openssl/install/lib/engines-3\\\"\" -DMODULESDIR=\"\\\"/path/to/openssl/install/lib/ossl-modules\\\"\" -DOPENSSL_BUILDING_OPENSSL -DNDEBUG  -MMD -MF crypto/bio/libcrypto-lib-bss_dgram.d.tmp -MT crypto/bio/libcrypto-lib-bss_dgram.o -c -o crypto/bio/libcrypto-lib-bss_dgram.o crypto/bio/bss_dgram.c\r\ncrypto/bio/bss_dgram.c: In function 'dgram_sendmmsg':\r\ncrypto/bio/bss_dgram.c:1394:11: error: implicit declaration of function 'sendmmsg'; did you mean 'sendmsg'? [-Werror=implicit-function-declaration]\r\n 1394 |     ret = sendmmsg(b->num, mh, num_msg, sysflags);\r\n      |           ^~~~~~~~\r\n      |           sendmsg\r\ncrypto/bio/bss_dgram.c: In function 'dgram_recvmmsg':\r\ncrypto/bio/bss_dgram.c:1587:11: error: implicit declaration of function 'recvmmsg'; did you mean 'recvmsg'? [-Werror=implicit-function-declaration]\r\n 1587 |     ret = recvmmsg(b->num, mh, num_msg, sysflags, NULL);\r\n      |           ^~~~~~~~\r\n      |           recvmsg\r\n\r\n```\r\nTest:\r\n```\r\n04-test_bio_dgram.t .....................\r\n        # INFO:  @ test/bio_dgram_test.c:120\r\n        # # Testing with AF_INET, local=1\r\n        #\r\n        # ERROR: (bool) 'do_sendmmsg(b1, tx_msg, 2, 0, &num_processed) == true' failed @ test/bio_dgram_test.c:277\r\n        # false\r\n        # 00000001:error:8000003A:system library:dgram_sendmmsg:Destination address required:crypto/bio/bss_dgram.c:1396:\r\n        # 00000001:error:1000006F:BIO routines:dgram_sendmmsg:local address not available:crypto/bio/bss_dgram.c:1379:\r\n        # 00000001:error:1000006F:BIO routines:dgram_sendmmsg:local address not available:crypto/bio/bss_dgram.c:1386:\r\n        # OPENSSL_TEST_RAND_SEED=1728990901\r\n        not ok 3 - iteration 3\r\n```",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/25695/comments",
    "author": "Enc-EE",
    "comments": [
      {
        "user": "t8m",
        "created_at": "2024-10-15T13:19:51Z",
        "body": "Duplicate of #23751 "
      },
      {
        "user": "t8m",
        "created_at": "2024-10-15T13:28:36Z",
        "body": "Does this patch help?\r\n```patch\r\ndiff --git a/crypto/bio/bss_dgram.c b/crypto/bio/bss_dgram.c\r\nindex 1ab8c5fd70..ea2550859c 100644\r\n--- a/crypto/bio/bss_dgram.c\r\n+++ b/crypto/bio/bss_dgram.c\r\n@@ -66,7 +66,7 @@\r\n    #undef NO_RECVMSG\r\n    #define NO_RECVMSG\r\n # endif\r\n-# if defined(__ANDROID_API__) && __ANDROID_API__ < 21\r\n+# if (defined(__ANDROID_API__) && __ANDROID_API__ < 21) || defined(_AIX)\r\n #  undef NO_RECVMMSG\r\n #  define NO_RECVMMSG\r\n # endif\r\n```\r\n\r\nI've closed it as duplicate although it seems that that was an older AIX which apparently does not have sendmmsg/recvmmsg() at all. Where your version seems to have it but in a header file that we do not include and possibly not working. IMO the simplest fix is to not use it which would fix also the AIX 7.1 version build.\r\n\r\n"
      }
    ]
  },
  {
    "number": 25569,
    "title": "OpenSSL Initialization Failure Due to Manually Mapped DLLs Not Recognized by GetModuleHandleExA",
    "created_at": "2024-09-29T21:58:05Z",
    "closed_at": "2024-09-30T13:06:42Z",
    "labels": [
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/25569",
    "body": "Say we stop using `LoadLibraryA` instead we create its equivalent for security purposes, the module we map windows wont be aware of it, for OpenSSL modules, when we map it, and attempt to initialize OpenSSL, its failing to robustly initialize on that Context, the reason exaclty becouse of `ossl_init_load_crypto_nodelete`, who returns false inside Crypto Initialize routine, becouse of the fact that WinApi `GetModuleHandleExA` is not aware of the manually mapped modules, how to approach this problem? notice that appart from that, when redirecting to another legit module, and forcing the function to return true, everything initialize as expected and OpenSSL works as normal (Sanity Tested Extensively).\r\nVersion 1.1.1w\r\nto reproduce the issue simply use any dll manual mapper and simply call `OPENSSL_init_crypto`",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/25569/comments",
    "author": "pinwhell",
    "comments": [
      {
        "user": "nhorman",
        "created_at": "2024-09-30T08:50:17Z",
        "body": "Some Front matter: Openssl 1.1.1w is no longer supported.\n\nThat said, I don't think what you're trying to do is possible at the moment.  Doing the wrapping that you describe seems like it would prevent the use of GetModuleHandleEx.\n\nThat said, how are you creating the equivalent of LoadLibraryA?  Are you creating and linking to a separate DLL?"
      },
      {
        "user": "tom-cosgrove-arm",
        "created_at": "2024-09-30T09:09:45Z",
        "body": "Is this an issue in OpenSSL, or should it be a discussion?"
      },
      {
        "user": "nhorman",
        "created_at": "2024-09-30T09:11:47Z",
        "body": "I think thats to be determined.  Currently whats being attempted I don't think can be done.  The question to answer is, should it be possible?  i.e. is this a feature request?"
      },
      {
        "user": "tom-cosgrove-arm",
        "created_at": "2024-09-30T09:35:45Z",
        "body": "> The question to answer is, should it be possible?\r\n\r\n`LoadLibraryA` is a fundamental operating system API. Replacing these is almost certainly going to cause problems in some use-cases.\r\n\r\n> Say we stop using `LoadLibraryA` instead we create its equivalent for security purposes\r\n\r\nWithout knowing how the \"equivalent\" is created, and what \"security purposes\" means, this is a very vague requirement.\r\n\r\n> `GetModuleHandleExA` is not aware of the manually mapped modules\r\n\r\nSince `GetModuleHandleExA` is a fundamental operating system API that works with `LoadLibraryA`, it's clear that the \"equivalent to LoadLibraryA\" API isn't really equivalent.\r\n\r\nIt may be that what the OP wants (\"securing\" `LoadLibraryA` for an unspecified meaning of \"securing\") could be achieved by hooking `LoadLibraryA` and only allowing whitelisted requests through."
      },
      {
        "user": "nhorman",
        "created_at": "2024-09-30T10:03:06Z",
        "body": "@tom-cosgrove-arm are you suggesting that LoadLibraryA is a weak symbol that the author can override and call the underlying function after passing a whitelist test?  That would make sense"
      },
      {
        "user": "pinwhell",
        "created_at": "2024-09-30T11:32:08Z",
        "body": "not exaclty guys, let me explain why it precisely fails!, that call to GetModuleHandleEx was to pin the current OpenSSL module so it cant be unloaded, as you can see this action fails becouse the Module is not mapped by the OS, instead by us!, so the os is not aware of such module thus the reason why GetModuleHandleEx fails!, i was experimenting did a patch to that single thing, and OpenSSL succesfully initialized, worked, and was extensively tested, and passed all tests"
      },
      {
        "user": "pinwhell",
        "created_at": "2024-09-30T11:33:00Z",
        "body": "when i said, \"Replaced\" LoadLibraryA, i was refering mimicing its action, meaning manually loading the DLL instead of calling LoadLibraryA directly, and yes its a OpenSSL issue"
      },
      {
        "user": "nhorman",
        "created_at": "2024-09-30T12:02:50Z",
        "body": "You're still not being particularly clear in what you are trying to do.  Its clear that the call to GetModuleHandleEx pins libcrypto.so so that it can't be unloaded.\r\n\r\nFrom that we can conclude that the ability to pin a library is a requirement for openssl on windows.\r\n\r\nWhats unclear is exactly how you are mimicing the loading of libcrypto.  If you are not calling LoadLibraryA, what are you doing?  Are you just opening the file, memory mapping it, and resolving symbols on your own?\r\n\r\nIf so, OpenSSL was never meant to be loaded in that fashion.  Its always been assumed that the library is loaded by the operating systems, using API's that inform the OS of that operation. Thats not a bug, its a design choice.\r\n\r\nYou can continue to explore this approach, and if you have a proposed change, please feel free to post it, and we will gladly review it, but I expect your use case is not one openssl will likely choose to support natively"
      },
      {
        "user": "pinwhell",
        "created_at": "2024-09-30T12:48:37Z",
        "body": "> You're still not being particularly clear in what you are trying to do.  Its clear that the call to GetModuleHandleEx pins libcrypto.so so that it can't be unloaded.\n> \n> \n> \n> From that we can conclude that the ability to pin a library is a requirement for openssl on windows.\n> \n> \n> \n> Whats unclear is exactly how you are mimicing the loading of libcrypto.  If you are not calling LoadLibraryA, what are you doing?  Are you just opening the file, memory mapping it, and resolving symbols on your own?\n> \n> \n> \n> If so, OpenSSL was never meant to be loaded in that fashion.  Its always been assumed that the library is loaded by the operating systems, using API's that inform the OS of that operation. Thats not a bug, its a design choice.\n> \n> \n> \n> You can continue to explore this approach, and if you have a proposed change, please feel free to post it, and we will gladly review it, but I expect your use case is not one openssl will likely choose to support natively\n\nI am mapping the library, solving its imports, handling relocations, handling TLS, which is enough to make everything works, as you see for security reasons I am not mapping it in the OS records of loaded libs, otherwise simply call LoadLib in the first place and problem solved, maybe there could be a option to control pinning mechanism manually so users can selectively decide if pinning or not, to avoid this type of problems, I guess it definitely an edge case probably beyond scope of OpenSSL, but could be cool to support that bare metal like environment"
      },
      {
        "user": "mattcaswell",
        "created_at": "2024-09-30T12:58:16Z",
        "body": "You can compile OpenSSL with \"no-pinshared\" to turn off pinning."
      },
      {
        "user": "pinwhell",
        "created_at": "2024-09-30T13:06:34Z",
        "body": "> You can compile OpenSSL with \"no-pinshared\" to turn off pinning.\n\nIf this is such an option I do believe it would be the ideal solution, I wasn't aware of it, Just to be clear for anyone who might get the same problem, on the 1.1.1w just handling this issue, OpenSSL seems to behave properly when manually mapped, Thanks guys ..."
      }
    ]
  },
  {
    "number": 25493,
    "title": "Segment faults due to lack of NULL ptr check on EC_POINT *point",
    "created_at": "2024-09-19T17:01:58Z",
    "closed_at": "2024-11-04T07:34:06Z",
    "labels": [
      "help wanted",
      "triaged: bug"
    ],
    "url": "https://github.com/openssl/openssl/issues/25493",
    "body": "Reproducible:\r\nInitialization of OpenSC/HSM and key generation:\r\n    ```\r\n    $alias p11=\"pkcs11-tool --module /vault1317/libckteec.so\"\r\n\r\n    $p11 --init-token --label mytoken --so-pin 1234567890\r\n\r\n    $p11 --label mytoken --login --so-pin 1234567890 --init-pin --pin 12345\r\n\r\n    $p11 -l --pin 12345 --keypairgen --key-type EC:secp521r1 --label mykey\r\n    ```\r\n\r\nTrigger the bug:\r\n    ```\r\n    $/usr/local/ssl/bin/openssl pkey -engine pkcs11 -inform engine -in \"pkcs11:token=mytoken;pin-value=12345;object=mykey\" -pubout -text\r\n    ```\r\n\r\ncoredump:\r\n```\r\n(gdb) bt\r\n#0  0x0000007fb2d13588 in EC_POINT_point2oct () from /lib/aarch64-linux-gnu/libcrypto.so.3\r\n#1  0x0000007fb2d08938 in i2o_ECPublicKey () from /lib/aarch64-linux-gnu/libcrypto.so.3\r\n#2  0x0000007fb2d05e28 in ?? () from /lib/aarch64-linux-gnu/libcrypto.so.3\r\n#3  0x0000007fb2e4cecc in i2d_PUBKEY () from /lib/aarch64-linux-gnu/libcrypto.so.3\r\n#4  0x0000007fb2dc789c in PEM_ASN1_write_bio () from /lib/aarch64-linux-gnu/libcrypto.so.3\r\n#5  0x0000007fb2dc59f0 in PEM_write_bio_PUBKEY () from /lib/aarch64-linux-gnu/libcrypto.so.3\r\n#6  0x000000556852a444 in ?? ()\r\n#7  0x00000055685245a4 in ?? ()\r\n#8  0x00000055685020ec in ?? ()\r\n#9  0x0000007fb2a07740 in __libc_start_call_main (main=main@entry=0x5568501f40, argc=argc@entry=10, argv=argv@entry=0x7fdb9b12a8) at ../sysdeps/nptl/libc_start_call_main.h:58\r\n#10 0x0000007fb2a07818 in __libc_start_main_impl (main=0x5568501f40, argc=10, argv=0x7fdb9b12a8, init=<optimized out>, fini=<optimized out>, rtld_fini=<optimized out>, stack_end=<optimized out>)\r\n    at ../csu/libc-start.c:360\r\n#11 0x0000005568502230 in ?? ()\r\n\r\n```\r\nI'll send a workaround patch over a PR afterward. Thanks",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/25493/comments",
    "author": "citypw",
    "comments": [
      {
        "user": "fwh-dc",
        "created_at": "2024-11-04T07:34:06Z",
        "body": "Closing this issue since the related PR has been merged."
      }
    ]
  },
  {
    "number": 25270,
    "title": "Inaccurate comments about default nonce length in aesccm.c",
    "created_at": "2024-08-22T09:42:05Z",
    "closed_at": "2024-09-05T15:26:38Z",
    "labels": [
      "good first issue",
      "help wanted",
      "triaged: documentation"
    ],
    "url": "https://github.com/openssl/openssl/issues/25270",
    "body": "In aesccm.c, the comments in the following code are inaccurate, may mislead developers.\r\n```\r\n    /* Set nonce length if default 96 bits is not appropriate */\r\n    params[0] = OSSL_PARAM_construct_size_t(OSSL_CIPHER_PARAM_AEAD_IVLEN,\r\n                                            &ccm_nonce_len);\r\n```\r\n\r\nIn the implementation of the AES-CCM encryption algorithm in OpenSSL, the default nonce length is 7.\r\n```\r\nstatic size_t ccm_get_ivlen(PROV_CCM_CTX *ctx)\r\n{\r\n    return 15 - ctx->l;\r\n}\r\nvoid ossl_ccm_initctx(PROV_CCM_CTX *ctx, size_t keybits, const PROV_CCM_HW *hw)\r\n{\r\n    ctx->keylen = keybits / 8;\r\n    ctx->key_set = 0;\r\n    ctx->iv_set = 0;\r\n    ctx->tag_set = 0;\r\n    ctx->len_set = 0;\r\n    ctx->l = 8;\r\n    ctx->m = 12;\r\n    ctx->tls_aad_len = UNINITIALISED_SIZET;\r\n    ctx->hw = hw;\r\n}\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/25270/comments",
    "author": "lan1120",
    "comments": [
      {
        "user": "mattcaswell",
        "created_at": "2024-08-22T10:32:43Z",
        "body": "Yeah - this report looks correct.\r\n\r\n> In the implementation of the AES-CCM encryption algorithm in OpenSSL, the default nonce length is 7.\r\n\r\nNote that the default is 7 *bytes*, i.e. 56 bits. This is probably a confusion with GCM where the default is 12 (96 bits) - or maybe just a typo."
      }
    ]
  },
  {
    "number": 24892,
    "title": "LeakSanitizer: detected memory leaks",
    "created_at": "2024-07-15T12:08:08Z",
    "closed_at": "2024-08-01T09:39:40Z",
    "labels": [
      "branch: master",
      "help wanted",
      "triaged: bug",
      "branch: 3.0",
      "branch: 3.1",
      "branch: 3.2",
      "branch: 3.3"
    ],
    "url": "https://github.com/openssl/openssl/issues/24892",
    "body": "I am using OpenSSL version 3.0.9 and observed a memory leak error when running the following command on the arm platform.\r\n**LD_PRELOAD=/usr/lib64/libasan.so.6  ./openssl_3/bin/openssl dgst -list**\r\nUse the built-in libasan of the system to sterilize addresses.\r\n\r\nThe command output is as follows:\r\n```\r\nSupported digests:\r\n-blake2b512                -blake2s256                -md4\r\n-md5                       -md5-sha1                  -mdc2\r\n-ripemd                    -ripemd160                 -rmd160\r\n-sha1                      -sha224                    -sha256\r\n-sha3-224                  -sha3-256                  -sha3-384\r\n-sha3-512                  -sha384                    -sha512\r\n-sha512-224                -sha512-256                -shake128\r\n-shake256                  -sm3                       -ssl3-md5\r\n-ssl3-sha1                 -whirlpool\r\n\r\n=================================================================\r\n==645655==ERROR: LeakSanitizer: detected memory leaks\r\n\r\nDirect leak of 4560 byte(s) in 19 object(s) allocated from:\r\n    #0 0xffffb7beee10 in __interceptor_malloc ../../../../libsanitizer/asan/asan_malloc_linux.cpp:149\r\n    #1 0xffffb77cc760 in CRYPTO_malloc crypto/mem.c:190\r\n    #2 0xffffb77cc78c in CRYPTO_zalloc crypto/mem.c:197\r\n    #3 0xffffb7781a40 in evp_md_new crypto/evp/digest.c:863\r\n    #4 0xffffb7781d78 in evp_md_from_algorithm crypto/evp/digest.c:943\r\n    #5 0xffffb7797004 in construct_evp_method crypto/evp/evp_fetch.c:239\r\n    #6 0xffffb77c77ec in ossl_method_construct_this crypto/core_fetch.c:109\r\n    #7 0xffffb77c70c4 in algorithm_do_map crypto/core_algorithm.c:77\r\n    #8 0xffffb77c7200 in algorithm_do_this crypto/core_algorithm.c:122\r\n    #9 0xffffb77db8a0 in ossl_provider_doall_activated crypto/provider_core.c:1431\r\n    #10 0xffffb77c7300 in ossl_algorithm_do_all crypto/core_algorithm.c:162\r\n    #11 0xffffb77c7918 in ossl_method_construct crypto/core_fetch.c:153\r\n    #12 0xffffb77973b8 in inner_evp_generic_fetch crypto/evp/evp_fetch.c:344\r\n    #13 0xffffb77975b0 in evp_generic_fetch crypto/evp/evp_fetch.c:396\r\n    #14 0xffffb7782380 in EVP_MD_fetch crypto/evp/digest.c:1073\r\n    #15 0x4335e4 in show_digests (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4335e4)\r\n    #16 0xffffb77f0668 in OBJ_NAME_do_all_sorted crypto/objects/o_names.c:346\r\n    #17 0x4343c8 in dgst_main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4343c8)\r\n    #18 0x4422e8 in do_cmd (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4422e8)\r\n    #19 0x421e70 in main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421e70)\r\n    #20 0xffffb7405ffc in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\r\n    #21 0xffffb74060d4 in __libc_start_main_impl ../csu/libc-start.c:409\r\n    #22 0x421fac in _start (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421fac)\r\n\r\nIndirect leak of 1064 byte(s) in 19 object(s) allocated from:\r\n    #0 0xffffb7beee10 in __interceptor_malloc ../../../../libsanitizer/asan/asan_malloc_linux.cpp:149\r\n    #1 0xffffb77cc760 in CRYPTO_malloc crypto/mem.c:190\r\n    #2 0xffffb77cc78c in CRYPTO_zalloc crypto/mem.c:197\r\n    #3 0xffffb77de248 in CRYPTO_THREAD_lock_new crypto/threads_pthread.c:50\r\n    #4 0xffffb7781a54 in evp_md_new crypto/evp/digest.c:866\r\n    #5 0xffffb7781d78 in evp_md_from_algorithm crypto/evp/digest.c:943\r\n    #6 0xffffb7797004 in construct_evp_method crypto/evp/evp_fetch.c:239\r\n    #7 0xffffb77c77ec in ossl_method_construct_this crypto/core_fetch.c:109\r\n    #8 0xffffb77c70c4 in algorithm_do_map crypto/core_algorithm.c:77\r\n    #9 0xffffb77c7200 in algorithm_do_this crypto/core_algorithm.c:122\r\n    #10 0xffffb77db8a0 in ossl_provider_doall_activated crypto/provider_core.c:1431\r\n    #11 0xffffb77c7300 in ossl_algorithm_do_all crypto/core_algorithm.c:162\r\n    #12 0xffffb77c7918 in ossl_method_construct crypto/core_fetch.c:153\r\n    #13 0xffffb77973b8 in inner_evp_generic_fetch crypto/evp/evp_fetch.c:344\r\n    #14 0xffffb77975b0 in evp_generic_fetch crypto/evp/evp_fetch.c:396\r\n    #15 0xffffb7782380 in EVP_MD_fetch crypto/evp/digest.c:1073\r\n    #16 0x4335e4 in show_digests (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4335e4)\r\n    #17 0xffffb77f0668 in OBJ_NAME_do_all_sorted crypto/objects/o_names.c:346\r\n    #18 0x4343c8 in dgst_main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4343c8)\r\n    #19 0x4422e8 in do_cmd (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4422e8)\r\n    #20 0x421e70 in main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421e70)\r\n    #21 0xffffb7405ffc in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\r\n    #22 0xffffb74060d4 in __libc_start_main_impl ../csu/libc-start.c:409\r\n    #23 0x421fac in _start (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421fac)\r\n\r\nIndirect leak of 224 byte(s) in 1 object(s) allocated from:\r\n    #0 0xffffb7beee10 in __interceptor_malloc ../../../../libsanitizer/asan/asan_malloc_linux.cpp:149\r\n    #1 0xffffb77cc760 in CRYPTO_malloc crypto/mem.c:190\r\n    #2 0xffffb77cc78c in CRYPTO_zalloc crypto/mem.c:197\r\n    #3 0xffffb77d9968 in provider_new crypto/provider_core.c:459\r\n    #4 0xffffb77db590 in provider_activate_fallbacks crypto/provider_core.c:1315\r\n    #5 0xffffb77db6f4 in ossl_provider_doall_activated crypto/provider_core.c:1370\r\n    #6 0xffffb77c7300 in ossl_algorithm_do_all crypto/core_algorithm.c:162\r\n    #7 0xffffb77c7918 in ossl_method_construct crypto/core_fetch.c:153\r\n    #8 0xffffb77973b8 in inner_evp_generic_fetch crypto/evp/evp_fetch.c:344\r\n    #9 0xffffb77975b0 in evp_generic_fetch crypto/evp/evp_fetch.c:396\r\n    #10 0xffffb7782380 in EVP_MD_fetch crypto/evp/digest.c:1073\r\n    #11 0x4335e4 in show_digests (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4335e4)\r\n    #12 0xffffb77f0668 in OBJ_NAME_do_all_sorted crypto/objects/o_names.c:346\r\n    #13 0x4343c8 in dgst_main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4343c8)\r\n    #14 0x4422e8 in do_cmd (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4422e8)\r\n    #15 0x421e70 in main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421e70)\r\n    #16 0xffffb7405ffc in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\r\n    #17 0xffffb74060d4 in __libc_start_main_impl ../csu/libc-start.c:409\r\n    #18 0x421fac in _start (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421fac)\r\n\r\nIndirect leak of 175 byte(s) in 19 object(s) allocated from:\r\n    #0 0xffffb7beee10 in __interceptor_malloc ../../../../libsanitizer/asan/asan_malloc_linux.cpp:149\r\n    #1 0xffffb77cc760 in CRYPTO_malloc crypto/mem.c:190\r\n    #2 0xffffb77cebe8 in CRYPTO_strndup crypto/o_str.c:43\r\n    #3 0xffffb77c7418 in ossl_algorithm_get1_first_name crypto/core_algorithm.c:195\r\n    #4 0xffffb7781e50 in evp_md_from_algorithm crypto/evp/digest.c:959\r\n    #5 0xffffb7797004 in construct_evp_method crypto/evp/evp_fetch.c:239\r\n    #6 0xffffb77c77ec in ossl_method_construct_this crypto/core_fetch.c:109\r\n    #7 0xffffb77c70c4 in algorithm_do_map crypto/core_algorithm.c:77\r\n    #8 0xffffb77c7200 in algorithm_do_this crypto/core_algorithm.c:122\r\n    #9 0xffffb77db8a0 in ossl_provider_doall_activated crypto/provider_core.c:1431\r\n    #10 0xffffb77c7300 in ossl_algorithm_do_all crypto/core_algorithm.c:162\r\n    #11 0xffffb77c7918 in ossl_method_construct crypto/core_fetch.c:153\r\n    #12 0xffffb77973b8 in inner_evp_generic_fetch crypto/evp/evp_fetch.c:344\r\n    #13 0xffffb77975b0 in evp_generic_fetch crypto/evp/evp_fetch.c:396\r\n    #14 0xffffb7782380 in EVP_MD_fetch crypto/evp/digest.c:1073\r\n    #15 0x4335e4 in show_digests (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4335e4)\r\n    #16 0xffffb77f0668 in OBJ_NAME_do_all_sorted crypto/objects/o_names.c:346\r\n    #17 0x4343c8 in dgst_main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4343c8)\r\n    #18 0x4422e8 in do_cmd (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4422e8)\r\n    #19 0x421e70 in main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421e70)\r\n    #20 0xffffb7405ffc in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\r\n    #21 0xffffb74060d4 in __libc_start_main_impl ../csu/libc-start.c:409\r\n    #22 0x421fac in _start (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421fac)\r\n\r\nIndirect leak of 96 byte(s) in 1 object(s) allocated from:\r\n    #0 0xffffb7beee10 in __interceptor_malloc ../../../../libsanitizer/asan/asan_malloc_linux.cpp:149\r\n    #1 0xffffb77cc760 in CRYPTO_malloc crypto/mem.c:190\r\n    #2 0xffffb77cc78c in CRYPTO_zalloc crypto/mem.c:197\r\n    #3 0xffffb7675d8c in BIO_meth_new crypto/bio/bio_meth.c:38\r\n    #4 0xffffb78a2ec0 in ossl_bio_prov_init_bio_method providers/common/bio_prov.c:210\r\n    #5 0xffffb78a2314 in ossl_default_provider_init providers/defltprov.c:582\r\n    #6 0xffffb77da9a8 in provider_init crypto/provider_core.c:930\r\n    #7 0xffffb77dafa8 in provider_activate crypto/provider_core.c:1128\r\n    #8 0xffffb77db5d0 in provider_activate_fallbacks crypto/provider_core.c:1329\r\n    #9 0xffffb77db6f4 in ossl_provider_doall_activated crypto/provider_core.c:1370\r\n    #10 0xffffb77c7300 in ossl_algorithm_do_all crypto/core_algorithm.c:162\r\n    #11 0xffffb77c7918 in ossl_method_construct crypto/core_fetch.c:153\r\n    #12 0xffffb77973b8 in inner_evp_generic_fetch crypto/evp/evp_fetch.c:344\r\n    #13 0xffffb77975b0 in evp_generic_fetch crypto/evp/evp_fetch.c:396\r\n    #14 0xffffb7782380 in EVP_MD_fetch crypto/evp/digest.c:1073\r\n    #15 0x4335e4 in show_digests (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4335e4)\r\n    #16 0xffffb77f0668 in OBJ_NAME_do_all_sorted crypto/objects/o_names.c:346\r\n    #17 0x4343c8 in dgst_main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4343c8)\r\n    #18 0x4422e8 in do_cmd (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4422e8)\r\n    #19 0x421e70 in main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421e70)\r\n    #20 0xffffb7405ffc in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\r\n    #21 0xffffb74060d4 in __libc_start_main_impl ../csu/libc-start.c:409\r\n    #22 0x421fac in _start (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421fac)\r\n\r\nIndirect leak of 56 byte(s) in 1 object(s) allocated from:\r\n    #0 0xffffb7beee10 in __interceptor_malloc ../../../../libsanitizer/asan/asan_malloc_linux.cpp:149\r\n    #1 0xffffb77cc760 in CRYPTO_malloc crypto/mem.c:190\r\n    #2 0xffffb77cc78c in CRYPTO_zalloc crypto/mem.c:197\r\n    #3 0xffffb77de248 in CRYPTO_THREAD_lock_new crypto/threads_pthread.c:50\r\n    #4 0xffffb77d99e0 in provider_new crypto/provider_core.c:471\r\n    #5 0xffffb77db590 in provider_activate_fallbacks crypto/provider_core.c:1315\r\n    #6 0xffffb77db6f4 in ossl_provider_doall_activated crypto/provider_core.c:1370\r\n    #7 0xffffb77c7300 in ossl_algorithm_do_all crypto/core_algorithm.c:162\r\n    #8 0xffffb77c7918 in ossl_method_construct crypto/core_fetch.c:153\r\n    #9 0xffffb77973b8 in inner_evp_generic_fetch crypto/evp/evp_fetch.c:344\r\n    #10 0xffffb77975b0 in evp_generic_fetch crypto/evp/evp_fetch.c:396\r\n    #11 0xffffb7782380 in EVP_MD_fetch crypto/evp/digest.c:1073\r\n    #12 0x4335e4 in show_digests (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4335e4)\r\n    #13 0xffffb77f0668 in OBJ_NAME_do_all_sorted crypto/objects/o_names.c:346\r\n    #14 0x4343c8 in dgst_main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4343c8)\r\n    #15 0x4422e8 in do_cmd (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4422e8)\r\n    #16 0x421e70 in main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421e70)\r\n    #17 0xffffb7405ffc in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\r\n    #18 0xffffb74060d4 in __libc_start_main_impl ../csu/libc-start.c:409\r\n    #19 0x421fac in _start (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421fac)\r\n\r\nIndirect leak of 56 byte(s) in 1 object(s) allocated from:\r\n    #0 0xffffb7beee10 in __interceptor_malloc ../../../../libsanitizer/asan/asan_malloc_linux.cpp:149\r\n    #1 0xffffb77cc760 in CRYPTO_malloc crypto/mem.c:190\r\n    #2 0xffffb77cc78c in CRYPTO_zalloc crypto/mem.c:197\r\n    #3 0xffffb77de248 in CRYPTO_THREAD_lock_new crypto/threads_pthread.c:50\r\n    #4 0xffffb77d9a00 in provider_new crypto/provider_core.c:472\r\n    #5 0xffffb77db590 in provider_activate_fallbacks crypto/provider_core.c:1315\r\n    #6 0xffffb77db6f4 in ossl_provider_doall_activated crypto/provider_core.c:1370\r\n    #7 0xffffb77c7300 in ossl_algorithm_do_all crypto/core_algorithm.c:162\r\n    #8 0xffffb77c7918 in ossl_method_construct crypto/core_fetch.c:153\r\n    #9 0xffffb77973b8 in inner_evp_generic_fetch crypto/evp/evp_fetch.c:344\r\n    #10 0xffffb77975b0 in evp_generic_fetch crypto/evp/evp_fetch.c:396\r\n    #11 0xffffb7782380 in EVP_MD_fetch crypto/evp/digest.c:1073\r\n    #12 0x4335e4 in show_digests (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4335e4)\r\n    #13 0xffffb77f0668 in OBJ_NAME_do_all_sorted crypto/objects/o_names.c:346\r\n    #14 0x4343c8 in dgst_main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4343c8)\r\n    #15 0x4422e8 in do_cmd (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4422e8)\r\n    #16 0x421e70 in main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421e70)\r\n    #17 0xffffb7405ffc in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\r\n    #18 0xffffb74060d4 in __libc_start_main_impl ../csu/libc-start.c:409\r\n    #19 0x421fac in _start (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421fac)\r\n\r\nIndirect leak of 32 byte(s) in 1 object(s) allocated from:\r\n    #0 0xffffb7beee10 in __interceptor_malloc ../../../../libsanitizer/asan/asan_malloc_linux.cpp:149\r\n    #1 0xffffb77cc760 in CRYPTO_malloc crypto/mem.c:190\r\n    #2 0xffffb784eac4 in OPENSSL_sk_deep_copy crypto/stack/stack.c:87\r\n    #3 0xffffb77d8e00 in sk_INFOPAIR_deep_copy crypto/provider_local.h:16\r\n    #4 0xffffb77d9a64 in provider_new crypto/provider_core.c:474\r\n    #5 0xffffb77db590 in provider_activate_fallbacks crypto/provider_core.c:1315\r\n    #6 0xffffb77db6f4 in ossl_provider_doall_activated crypto/provider_core.c:1370\r\n    #7 0xffffb77c7300 in ossl_algorithm_do_all crypto/core_algorithm.c:162\r\n    #8 0xffffb77c7918 in ossl_method_construct crypto/core_fetch.c:153\r\n    #9 0xffffb77973b8 in inner_evp_generic_fetch crypto/evp/evp_fetch.c:344\r\n    #10 0xffffb77975b0 in evp_generic_fetch crypto/evp/evp_fetch.c:396\r\n    #11 0xffffb7782380 in EVP_MD_fetch crypto/evp/digest.c:1073\r\n    #12 0x4335e4 in show_digests (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4335e4)\r\n    #13 0xffffb77f0668 in OBJ_NAME_do_all_sorted crypto/objects/o_names.c:346\r\n    #14 0x4343c8 in dgst_main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4343c8)\r\n    #15 0x4422e8 in do_cmd (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4422e8)\r\n    #16 0x421e70 in main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421e70)\r\n    #17 0xffffb7405ffc in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\r\n    #18 0xffffb74060d4 in __libc_start_main_impl ../csu/libc-start.c:409\r\n    #19 0x421fac in _start (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421fac)\r\n\r\nIndirect leak of 24 byte(s) in 1 object(s) allocated from:\r\n    #0 0xffffb7beee10 in __interceptor_malloc ../../../../libsanitizer/asan/asan_malloc_linux.cpp:149\r\n    #1 0xffffb77cc760 in CRYPTO_malloc crypto/mem.c:190\r\n    #2 0xffffb77cc78c in CRYPTO_zalloc crypto/mem.c:197\r\n    #3 0xffffb790174c in ossl_prov_ctx_new providers/common/provider_ctx.c:16\r\n    #4 0xffffb78a22f4 in ossl_default_provider_init providers/defltprov.c:581\r\n    #5 0xffffb77da9a8 in provider_init crypto/provider_core.c:930\r\n    #6 0xffffb77dafa8 in provider_activate crypto/provider_core.c:1128\r\n    #7 0xffffb77db5d0 in provider_activate_fallbacks crypto/provider_core.c:1329\r\n    #8 0xffffb77db6f4 in ossl_provider_doall_activated crypto/provider_core.c:1370\r\n    #9 0xffffb77c7300 in ossl_algorithm_do_all crypto/core_algorithm.c:162\r\n    #10 0xffffb77c7918 in ossl_method_construct crypto/core_fetch.c:153\r\n    #11 0xffffb77973b8 in inner_evp_generic_fetch crypto/evp/evp_fetch.c:344\r\n    #12 0xffffb77975b0 in evp_generic_fetch crypto/evp/evp_fetch.c:396\r\n    #13 0xffffb7782380 in EVP_MD_fetch crypto/evp/digest.c:1073\r\n    #14 0x4335e4 in show_digests (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4335e4)\r\n    #15 0xffffb77f0668 in OBJ_NAME_do_all_sorted crypto/objects/o_names.c:346\r\n    #16 0x4343c8 in dgst_main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4343c8)\r\n    #17 0x4422e8 in do_cmd (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4422e8)\r\n    #18 0x421e70 in main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421e70)\r\n    #19 0xffffb7405ffc in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\r\n    #20 0xffffb74060d4 in __libc_start_main_impl ../csu/libc-start.c:409\r\n    #21 0x421fac in _start (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421fac)\r\n\r\nIndirect leak of 19 byte(s) in 1 object(s) allocated from:\r\n    #0 0xffffb7beee10 in __interceptor_malloc ../../../../libsanitizer/asan/asan_malloc_linux.cpp:149\r\n    #1 0xffffb77cc760 in CRYPTO_malloc crypto/mem.c:190\r\n    #2 0xffffb77ceb70 in CRYPTO_strdup crypto/o_str.c:27\r\n    #3 0xffffb7675db0 in BIO_meth_new crypto/bio/bio_meth.c:41\r\n    #4 0xffffb78a2ec0 in ossl_bio_prov_init_bio_method providers/common/bio_prov.c:210\r\n    #5 0xffffb78a2314 in ossl_default_provider_init providers/defltprov.c:582\r\n    #6 0xffffb77da9a8 in provider_init crypto/provider_core.c:930\r\n    #7 0xffffb77dafa8 in provider_activate crypto/provider_core.c:1128\r\n    #8 0xffffb77db5d0 in provider_activate_fallbacks crypto/provider_core.c:1329\r\n    #9 0xffffb77db6f4 in ossl_provider_doall_activated crypto/provider_core.c:1370\r\n    #10 0xffffb77c7300 in ossl_algorithm_do_all crypto/core_algorithm.c:162\r\n    #11 0xffffb77c7918 in ossl_method_construct crypto/core_fetch.c:153\r\n    #12 0xffffb77973b8 in inner_evp_generic_fetch crypto/evp/evp_fetch.c:344\r\n    #13 0xffffb77975b0 in evp_generic_fetch crypto/evp/evp_fetch.c:396\r\n    #14 0xffffb7782380 in EVP_MD_fetch crypto/evp/digest.c:1073\r\n    #15 0x4335e4 in show_digests (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4335e4)\r\n    #16 0xffffb77f0668 in OBJ_NAME_do_all_sorted crypto/objects/o_names.c:346\r\n    #17 0x4343c8 in dgst_main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4343c8)\r\n    #18 0x4422e8 in do_cmd (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4422e8)\r\n    #19 0x421e70 in main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421e70)\r\n    #20 0xffffb7405ffc in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\r\n    #21 0xffffb74060d4 in __libc_start_main_impl ../csu/libc-start.c:409\r\n    #22 0x421fac in _start (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421fac)\r\n\r\nIndirect leak of 8 byte(s) in 1 object(s) allocated from:\r\n    #0 0xffffb7beee10 in __interceptor_malloc ../../../../libsanitizer/asan/asan_malloc_linux.cpp:149\r\n    #1 0xffffb77cc760 in CRYPTO_malloc crypto/mem.c:190\r\n    #2 0xffffb77ceb70 in CRYPTO_strdup crypto/o_str.c:27\r\n    #3 0xffffb77d9a30 in provider_new crypto/provider_core.c:473\r\n    #4 0xffffb77db590 in provider_activate_fallbacks crypto/provider_core.c:1315\r\n    #5 0xffffb77db6f4 in ossl_provider_doall_activated crypto/provider_core.c:1370\r\n    #6 0xffffb77c7300 in ossl_algorithm_do_all crypto/core_algorithm.c:162\r\n    #7 0xffffb77c7918 in ossl_method_construct crypto/core_fetch.c:153\r\n    #8 0xffffb77973b8 in inner_evp_generic_fetch crypto/evp/evp_fetch.c:344\r\n    #9 0xffffb77975b0 in evp_generic_fetch crypto/evp/evp_fetch.c:396\r\n    #10 0xffffb7782380 in EVP_MD_fetch crypto/evp/digest.c:1073\r\n    #11 0x4335e4 in show_digests (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4335e4)\r\n    #12 0xffffb77f0668 in OBJ_NAME_do_all_sorted crypto/objects/o_names.c:346\r\n    #13 0x4343c8 in dgst_main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4343c8)\r\n    #14 0x4422e8 in do_cmd (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4422e8)\r\n    #15 0x421e70 in main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421e70)\r\n    #16 0xffffb7405ffc in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\r\n    #17 0xffffb74060d4 in __libc_start_main_impl ../csu/libc-start.c:409\r\n    #18 0x421fac in _start (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421fac)\r\n\r\nIndirect leak of 1 byte(s) in 1 object(s) allocated from:\r\n    #0 0xffffb7beee10 in __interceptor_malloc ../../../../libsanitizer/asan/asan_malloc_linux.cpp:149\r\n    #1 0xffffb77cc760 in CRYPTO_malloc crypto/mem.c:190\r\n    #2 0xffffb77cc82c in CRYPTO_realloc crypto/mem.c:213\r\n    #3 0xffffb77dbe40 in ossl_provider_set_operation_bit crypto/provider_core.c:1627\r\n    #4 0xffffb77c7788 in ossl_method_construct_postcondition crypto/core_fetch.c:99\r\n    #5 0xffffb77c7128 in algorithm_do_map crypto/core_algorithm.c:84\r\n    #6 0xffffb77c7200 in algorithm_do_this crypto/core_algorithm.c:122\r\n    #7 0xffffb77db8a0 in ossl_provider_doall_activated crypto/provider_core.c:1431\r\n    #8 0xffffb77c7300 in ossl_algorithm_do_all crypto/core_algorithm.c:162\r\n    #9 0xffffb77c7918 in ossl_method_construct crypto/core_fetch.c:153\r\n    #10 0xffffb77973b8 in inner_evp_generic_fetch crypto/evp/evp_fetch.c:344\r\n    #11 0xffffb77975b0 in evp_generic_fetch crypto/evp/evp_fetch.c:396\r\n    #12 0xffffb7782380 in EVP_MD_fetch crypto/evp/digest.c:1073\r\n    #13 0x4335e4 in show_digests (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4335e4)\r\n    #14 0xffffb77f0668 in OBJ_NAME_do_all_sorted crypto/objects/o_names.c:346\r\n    #15 0x4343c8 in dgst_main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4343c8)\r\n    #16 0x4422e8 in do_cmd (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x4422e8)\r\n    #17 0x421e70 in main (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421e70)\r\n    #18 0xffffb7405ffc in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58\r\n    #19 0xffffb74060d4 in __libc_start_main_impl ../csu/libc-start.c:409\r\n    #20 0x421fac in _start (/home/test1/sse_test/KunpengTrunk/st_install_dir/openssl_3/bin/openssl+0x421fac)\r\n\r\nSUMMARY: AddressSanitizer: 6315 byte(s) leaked in 66 allocation(s).\r\n```\r\n\r\nHas anyone encountered a similar error? Is this a false positive from libasan or does the OpenSSL 3.0.9 code actually leak some memory?\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/24892/comments",
    "author": "daming6",
    "comments": [
      {
        "user": "nhorman",
        "created_at": "2024-07-15T12:16:58Z",
        "body": "It looks like maybe show_digests may have just forgotten to issue a call to EVP_MD_free at the end of the function.  Would you like to create a PR for this?"
      },
      {
        "user": "daming6",
        "created_at": "2024-07-15T12:28:48Z",
        "body": "> It looks like maybe show_digests may have just forgotten to issue a call to EVP_MD_free at the end of the function. Would you like to create a PR for this?\r\n\r\nIt seems that you have an idea to solve these errors. It would be great if someone could solve this problem by merging the PR to openssl-3.0.9. I don't know how to solve this problem for the moment. Thank you for your reply."
      },
      {
        "user": "nhorman",
        "created_at": "2024-07-15T12:45:40Z",
        "body": "There is no PR for this at the moment, and I described how to fix it.  If you are unable, I'll mark this as a community issue, as I'm not sure when this will be able to be planned"
      },
      {
        "user": "daming6",
        "created_at": "2024-07-16T01:20:22Z",
        "body": "> There is no PR for this at the moment, and I described how to fix it. If you are unable, I'll mark this as a community issue, as I'm not sure when this will be able to be planned\r\n\r\nOKay, please help mark this as a community issue."
      }
    ]
  },
  {
    "number": 24838,
    "title": "Cross Compile to x86_64-linux-android",
    "created_at": "2024-07-10T14:24:55Z",
    "closed_at": "2024-07-10T14:54:49Z",
    "labels": [
      "branch: master",
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/24838",
    "body": "I am trying to cross compile OpenSSL on Windows x64 targeting x86_64-linux-android using `cargo build --target=x86_64-linux-android`. However, during the compilation process, the path for the `mysys` Perl installation inside of the OpenSSL make file is being overridden with a Windows-style path, leading to an invalid path and a compiler crash. \r\n\r\n**Issue:**\r\n\r\nWhen using `cargo` to build a project that depends on OpenSSL for the target `x86_64-linux-android`, the `mysys` Perl path is incorrectly being replaced with a Windows-style path, causing the compiler to fail to locate the Perl executable. \r\n\r\n**Steps to Reproduce:**\r\n\r\nNote: Only replicatable in a Windows Environment.\r\n\r\n1. Install the `x86_64-linux-android` target for Rust.\r\n2. Install msys or any other UNIX compatable Perl.\r\n3. Target the correct version of Perl inside .cargo/config.toml.\r\n2. Create a simple Rust project that depends on OpenSSL.\r\n3. Run `cargo build --target=x86_64-linux-android`.\r\n\r\n**Expected Behavior:**\r\n\r\nThe compiler should correctly locate and use the `mysys` Perl installation at the specified path.\r\n\r\n**Actual Behavior:**\r\n\r\nThe `mysys` Perl path is overridden with a Windows-style path, which results in the compiler failing to find the Perl executable and crashing.\r\n\r\n**Environment:**\r\n\r\n- Windows x64\r\n- Rust toolchain: rustc 1.79.0 (129f3b996 2024-06-10)\r\n- OpenSSL version: [Specify your OpenSSL version here]\r\n- `mysys` Perl installation: [Specify the path to your `mysys` Perl installation here]\r\n\r\n**Log Output:**\r\n\r\n```\r\n--- stderr\r\n  /usr/bin/sh: line 1: C:msys64usrbinperl.exe: command not found\r\n  make: *** [Makefile:2906: builddata.pm] Error 127\r\n  thread 'main' panicked at C:\\Users\\PFG346\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\openssl-src-300.3.1+3.3.1\\src\\lib.rs:621:9:\r\n```\r\n\r\nI believe this issue is related to the cross-compilation environment not correctly handling the `mysys` Perl path.\r\nI would appreciate any guidance on how to resolve this issue.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/24838/comments",
    "author": "cyokenn",
    "comments": [
      {
        "user": "t8m",
        "created_at": "2024-07-10T14:50:16Z",
        "body": "Crosscompiling on Windows to Linux (or other posix-like systems) is not supported.\r\n\r\nMaking this a community feature request and labeling with help wanted as it is unlikely to be a priority for the OpenSSL team any time soon."
      },
      {
        "user": "t8m",
        "created_at": "2024-07-10T14:54:49Z",
        "body": "Actually a duplicate of #24700 "
      }
    ]
  },
  {
    "number": 23706,
    "title": "Trust Anchor for CMP IR",
    "created_at": "2024-02-28T11:44:33Z",
    "closed_at": "2024-06-17T08:56:35Z",
    "labels": [
      "help wanted",
      "triaged: bug",
      "triaged: question"
    ],
    "url": "https://github.com/openssl/openssl/issues/23706",
    "body": "Hi,\r\nI'm performing CMP IR operation by setting the CMP CTX APIs.\r\n\r\nBut I don't have the trust anchor for setting it to CMP_CTX for performing IR. we have gone through the docs and tried using the OSSL_CMP_CTX_set_option(cmpCtx, **OSSL_CMP_OPT_PERMIT_TA_IN_EXTRACERTS_FOR_IR**, 1); so that extracerts output that is generated as part of IR will be used as trust anchor.  So, I'm not setting the **OSSL_CMP_CTX_set0_trustedStore** , thinking after setting that option(**OSSL_CMP_OPT_PERMIT_TA_IN_EXTRACERTS_FOR_IR**)  will be enough to perform IR, but IR is failing saying, \r\n**00C73F5B8D7F0000:error:1D0000B3:CMP routines:OSSL_CMP_validate_msg:missing trust anchor:crypto/cmp/cmp_vfy.c:624:\r\n00C73F5B8D7F0000:error:1D00008C:CMP routines:ossl_cmp_msg_check_update:error validating protection:crypto/cmp/cmp_vfy.c:716:**\r\n\r\nSince we **don't have trust anchor CA cert** how can we achieve **IR**. **Also, we don't want to use the Preshared Key and reference number (OSSL_CMP_CTX_set1_referenceValue, OSSL_CMP_CTX_set1_secretValue)**.\r\n\r\n**Is there any way we can get trust anchor on the go?**\r\n\r\nThanks in advance.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/23706/comments",
    "author": "sumanth797",
    "comments": [
      {
        "user": "DDvO",
        "created_at": "2024-03-11T11:37:57Z",
        "body": "The `OSSL_CMP_OPT_PERMIT_TA_IN_EXTRACERTS_FOR_IR` is just a quirk to support some legacy 3GPP feature.\r\nIt is not advisable to use, which I'm going to make more clear in the doc.\r\n\r\n> **Is there any way we can get trust anchor on the go?**\r\n\r\nAre you aware that this is dangerous?\r\nNote that the certificate received in the extraCerts field has not been authenticated at all.\r\nTaking it over as a trust anchor (TA) implements trust-on-first-use (TOFU) an can go pretty wrong\r\nunless the client can verify by some other means that this cert is authentic and acceptable to use as a TA.\r\n\r\nDon't you have a better way of (securely) obtaining a trust anchor beforehand?"
      },
      {
        "user": "DDvO",
        "created_at": "2024-03-11T12:18:05Z",
        "body": "Nevertheless, it turns out that when adding the check leading to the error quoted above \r\nin #19729, I made a mistake, which is going to be fixed by #23814.\r\n\r\nFor the time being, as a workaround you can add a dummy trust store to the client to make the call succeed -\r\nif you still **really** want/need to use `OSSL_CMP_OPT_PERMIT_TA_IN_EXTRACERTS_FOR_IR`."
      },
      {
        "user": "sumanth797",
        "created_at": "2024-03-12T12:05:43Z",
        "body": "Hi @DDvO ,\r\nThanks for the reply, For time being can you suggest us how to add dummy trust store on the client side to make it succeed. \r\nAny steps?"
      },
      {
        "user": "DDvO",
        "created_at": "2024-03-14T09:38:42Z",
        "body": "> For time being can you suggest us how to add dummy trust store on the client side to make it succeed. Any steps?\r\n\r\n`X509_STORE *store = X509_STORE_new();`"
      },
      {
        "user": "sumanth797",
        "created_at": "2024-03-16T10:43:32Z",
        "body": "Hi @DDvO ,\r\n\r\nThis is how i tried using dummy trust store,\r\n\r\nOSSL_CMP_CTX_set_option(cmpCtx, OSSL_CMP_OPT_PERMIT_TA_IN_EXTRACERTS_FOR_IR, 1);\r\n\r\nX509_STORE *store = X509_STORE_new();\r\nif (!OSSL_CMP_CTX_set0_trustedStore(cmpCtx, store))\r\n{\r\n  std::cout << \"CMPClient:CMPIRRequest::setting OSSL_CMP_CTX_set0_trustedStore failed.\\n\";\r\n}\r\n\r\nAnd then i executed IR, and it failed,\r\n\r\n0027DBF4427F0000:error:1D000091:CMP routines:check_msg_find_cert:no suitable sender cert:crypto/cmp/cmp_vfy.c:518:for msg sender name = /C=FI/O=MN/CN=RootCA\r\n0027DBF4427F0000:error:1D00008C:CMP routines:ossl_cmp_msg_check_update:error validating protection:crypto/cmp/cmp_vfy.c:716:\r\n\r\nAm I missing something for dummy store?"
      },
      {
        "user": "DDvO",
        "created_at": "2024-03-17T17:04:27Z",
        "body": "Does the response meet the documented conditions?\r\n> If the option OSSL_CMP_OPT_PERMIT_TA_IN_EXTRACERTS_FOR_IR was set by calling\r\nL<OSSL_CMP_CTX_set_option(3)>, for an Initialization Response (IP) message\r\nany self-issued certificate from the I<msg> extraCerts field may be used\r\nas a trust anchor for the path verification of an 'acceptable' cert if it can be\r\nused also to validate the issued certificate returned in the IP message.\r\n\r\nThe following option allows tracing the validation of the protection of the response message:\r\n```\r\nOSSL_CMP_CTX_set_log_verbosity(cmpCtx , OSSL_CMP_LOG_TRACE)\r\n```"
      }
    ]
  },
  {
    "number": 23260,
    "title": "The s->options and method->mask types are inconsistent in ILP32",
    "created_at": "2024-01-11T03:33:19Z",
    "closed_at": "2024-06-23T14:39:35Z",
    "labels": [
      "branch: master",
      "good first issue",
      "help wanted",
      "triaged: bug"
    ],
    "url": "https://github.com/openssl/openssl/issues/23260",
    "body": "The type of s->options is changed to uint64_t in OpenSSL 3.0，the type of method->mask is always unsigned long. \r\n\r\nIf someone develops a new protocol, will define a macro to disable protocol, and use it in new_protocol_method, such as:\r\n```\r\ndefine SSL_OP_NO_NEW_PROTOCOL     SSL_OP_BIT(37)\r\n\r\nIMPLEMENT_new_protocol__meth_func(NEW_PROTOCOL_VERSION, 0, SSL_OP_NO_NEW_PROTOCOL ,\r\n                          new_protocol_method,\r\n                          ossl_statem_accept,\r\n                          ossl_statem_connect, new_protocol_enc_data)\r\n```\r\n\r\nbut method->mask will not work in ILP32, bacase method->mask is 32-bit.\r\n```\r\nstatic int ssl_method_error(const SSL *s, const SSL_METHOD *method)\r\n{\r\n    ...\r\n    if ((s->options & method->mask) != 0)\r\n        return SSL_R_UNSUPPORTED_PROTOCOL;\r\n    ...\r\n}\r\n```\r\n\r\nSo can I change the mask of ssl_method_st to uint64_t?",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/23260/comments",
    "author": "lan1120",
    "comments": [
      {
        "user": "t8m",
        "created_at": "2024-01-11T08:47:56Z",
        "body": "No need to change this on released branches as we won't add more protocols there.\r\n"
      },
      {
        "user": "erbsland-dev",
        "created_at": "2024-06-20T18:16:11Z",
        "body": "@t8m I verified this and found that in cases of protocol extensions, new protocols could not be supported with the `struct ssl_method_st` structure using a 32-bit `mask`. The same issue applies to the `flags` field in the structure, which is currently defined as `unsigned`. Since the `SSL_OP_*` flags have now reached bit 35, the flags field should also be extended to 64 bits.\r\n\r\nSwitching these variables from 32-bit to 64-bit should have minimal negative impact, other than requiring a few extra bytes of memory in certain cases.\r\n\r\nShall I create a PR for this change? The PR verification process should help identify any potential issues or platform dependencies."
      }
    ]
  },
  {
    "number": 23058,
    "title": "Enable ZLIB without TLS compression",
    "created_at": "2023-12-14T20:51:41Z",
    "closed_at": "2023-12-22T13:20:05Z",
    "labels": [
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/23058",
    "body": "TLSv1.2 and less makes compression available at protocol level. This leads to problems such as the CRIME attack and therefore I had the openssl compiled with no-zlib.\r\nNo I would like to compile openssl with zlib due to compressed certificates but I would still like not to allow zlib at TLS level. My understanding is that this is currently not possible. The define OPENSSL_NO_COMP in ssl/ covers the instances of compression at TLS level but \"no-comp\" can't be used at configure time because this also disables all compression including for certificates.\r\n\r\nIs this correct? If so, would it be possible to introduce another define so that it is possible to use zlib compression certificates while disabling zlib compression at TLS protocol level?",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/23058/comments",
    "author": "sebastianas",
    "comments": [
      {
        "user": "t8m",
        "created_at": "2023-12-15T11:27:38Z",
        "body": "This could be a valid feature. On the other hand TLS compression is disabled in TLS connections by default and you won't get it negotiated unless you call SSL_COMP_add_compression_method() in your application.\r\n"
      },
      {
        "user": "sebastianas",
        "created_at": "2023-12-18T20:38:16Z",
        "body": "On 2023-12-15 03:27:50 [-0800], Tomáš Mráz wrote:\r\n> This could be a valid feature. On the other hand TLS compression is\r\n> disabled in TLS connections by default and you won't get it negotiated\r\n> unless you call SSL_COMP_add_compression_method() in your application.\r\n\r\nI was under the impression that this is enabled by default if available.\r\nHowever, if this is not the case then it would work me to enable zlib\r\nand allow the individual application use if it is safe to do so.\r\n\r\nThank you.\r\n\r\nSebastian\r\n"
      },
      {
        "user": "t8m",
        "created_at": "2023-12-19T17:57:52Z",
        "body": "No, TLS compression is never enabled by default. @mattcaswell please correct me if I am wrong."
      },
      {
        "user": "mattcaswell",
        "created_at": "2023-12-20T09:45:36Z",
        "body": "From OpenSSL 1.1.0 and above TLS compression was disabled by default, i.e. the TLS runtime option `SSL_OP_NO_COMPRESSION` is set by default. To enable it you have to explicitly clear that option on your `SSL_CTX`/`SSL`.\r\n\r\nFrom OpenSSL 3.2.0 and above the default security level has changed to 2. TLS compression is disallowed at security level 2 and above. Therefore in OpenSSL 3.2.0 and above, in order to enable TLS compression you would have to clear the option mentioned above *and* reduce the security level to 1 or lower.\r\n\r\nWe could probably do with improving out documentation on the second point because its not really mentioned anywhere."
      },
      {
        "user": "mattcaswell",
        "created_at": "2023-12-20T09:48:38Z",
        "body": "> you won't get it negotiated unless you call SSL_COMP_add_compression_method() in your application.\r\n\r\nNote that this is *not* necessary. The compression methods will be loaded by default and used if the runtime options and security level allow."
      },
      {
        "user": "mattcaswell",
        "created_at": "2023-12-20T10:14:48Z",
        "body": "> We could probably do with improving out documentation on the second point because its not really mentioned anywhere.\r\n\r\n#23104"
      },
      {
        "user": "t8m",
        "created_at": "2023-12-20T13:10:31Z",
        "body": "@sebastianas given the above can we close this RFE?"
      },
      {
        "user": "sebastianas",
        "created_at": "2023-12-22T10:06:15Z",
        "body": "On 2023-12-20 05:10:42 [-0800], Tomáš Mráz wrote:\r\n> @sebastianas given the above can we close this RFE?\r\n\r\nYes, thank you.\r\n\r\nSebastian\r\n"
      }
    ]
  },
  {
    "number": 22289,
    "title": "Windows crossbuild: Building for i586 and below does not work",
    "created_at": "2023-10-05T06:38:08Z",
    "closed_at": "2023-10-18T01:37:15Z",
    "labels": [
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/22289",
    "body": "I used this script to build OpenSSL 3.1.3 on Linux, for Windows:\r\n```bash\r\n#!/usr/bin/env bash\r\ngit branch -D \"local-build\"\r\nset -e\r\ngit checkout \"tags/openssl-3.1.3\" -b \"local-build\"\r\n\r\nexport CFLAGS=\"-D_WIN32_WINNT=0x0501 -march=i586\"\r\nexport CXXFLAGS=\"$CFLAGS\"\r\nexport CPPFLAGS=\"$CFLAGS\"\r\n./Configure mingw --cross-compile-prefix=\"i686-w64-mingw32-\" --prefix=\"$PWD/usr\" no-asm 386\r\nmake depend -j$(nproc)\r\nmake -j$(nproc)\r\nmake install_sw\r\n```\r\n.\r\nThe resulting openssl.exe does not run on the Pentium 1 (i586), only the Pentium 2 (i686) and up.\r\n\r\n**If I build for i486 (change -march=i586 to -march=i486 in script), I get this error:**\r\n<details>\r\n<summary>Spoiler</summary>\r\n\r\n```\r\n${LDCMD:-i686-w64-mingw32-gcc} -m32 -D_WIN32_WINNT=0x0501 -march=i486   \\\r\n\t-o test/algorithmid_test.exe \\\r\n\ttest/algorithmid_test-bin-algorithmid_test.obj \\\r\n\ttest/libtestutil.a libcrypto.a -lws2_32 -lgdi32 -lcrypt32 \r\ncollect2: error: ld returned 1 exit status\r\nmake[1]: *** [Makefile:4457: libcrypto-3.dll] Error 1\r\nmake[1]: *** Waiting for unfinished jobs....\r\n/usr/bin/i686-w64-mingw32-ld: libcrypto.a(libcrypto-lib-threads_win.obj):threads_win.c:(.text+0x31c): undefined reference to `__sync_val_compare_and_swap_8'\r\n/usr/bin/i686-w64-mingw32-ld: libcrypto.a(libcrypto-lib-threads_win.obj):threads_win.c:(.text+0x3bb): undefined reference to `__sync_val_compare_and_swap_8'\r\n/usr/bin/i686-w64-mingw32-ld: libcrypto.a(libcrypto-lib-threads_win.obj):threads_win.c:(.text+0x31c): undefined reference to `__sync_val_compare_and_swap_8'\r\n/usr/bin/i686-w64-mingw32-ld: libcrypto.a(libcrypto-lib-threads_win.obj):threads_win.c:(.text+0x3bb): undefined reference to `__sync_val_compare_and_swap_8'\r\n/usr/bin/i686-w64-mingw32-ld: libcrypto.a(libcrypto-lib-threads_win.obj):threads_win.c:(.text+0x31c): undefined reference to `__sync_val_compare_and_swap_8'\r\n/usr/bin/i686-w64-mingw32-ld: libcrypto.a(libcrypto-lib-threads_win.obj):threads_win.c:(.text+0x3bb): undefined reference to `__sync_val_compare_and_swap_8'\r\ncollect2: error: ld returned 1 exit status\r\nmake[1]: *** [Makefile:22380: fuzz/punycode-test.exe] Error 1\r\ncollect2: error: ld returned 1 exit status\r\nmake[1]: *** [Makefile:22517: test/algorithmid_test.exe] Error 1\r\ncollect2: error: ld returned 1 exit status\r\nmake[1]: *** [Makefile:22255: fuzz/cmp-test.exe] Error 1\r\nmake[1]: Leaving directory '/home/fierelier/Documents/openssl-windows-crossbuild/openssl_source'\r\nmake: *** [Makefile:3255: build_sw] Error 2\r\n\r\n```\r\n\r\n</details>\r\n\r\n**Here's the config dump of the i586 build:**\r\n<details>\r\n<summary>Spoiler</summary>\r\n\r\n```\r\n\r\nCommand line (with current working directory = .):\r\n\r\n    /usr/bin/perl ./Configure mingw --cross-compile-prefix=i686-w64-mingw32- --prefix=/home/fierelier/Documents/openssl-windows-crossbuild/openssl_source/usr no-asm 386\r\n\r\nPerl information:\r\n\r\n    /usr/bin/perl\r\n    5.36.0 for x86_64-linux-gnu-thread-multi\r\n\r\nEnabled features:\r\n\r\n    aria\r\n    async\r\n    autoalginit\r\n    autoerrinit\r\n    autoload-config\r\n    bf\r\n    blake2\r\n    bulk\r\n    cached-fetch\r\n    camellia\r\n    capieng\r\n    cast\r\n    chacha\r\n    cmac\r\n    cmp\r\n    cms\r\n    comp\r\n    ct\r\n    deprecated\r\n    des\r\n    dgram\r\n    dh\r\n    dsa\r\n    dso\r\n    dtls\r\n    dynamic-engine\r\n    ec\r\n    ec2m\r\n    ecdh\r\n    ecdsa\r\n    engine\r\n    err\r\n    filenames\r\n    gost\r\n    idea\r\n    legacy\r\n    loadereng\r\n    makedepend\r\n    md4\r\n    mdc2\r\n    module\r\n    multiblock\r\n    nextprotoneg\r\n    ocb\r\n    ocsp\r\n    padlockeng\r\n    pic\r\n    pinshared\r\n    poly1305\r\n    posix-io\r\n    psk\r\n    rc2\r\n    rc4\r\n    rdrand\r\n    rfc3779\r\n    rmd160\r\n    scrypt\r\n    secure-memory\r\n    seed\r\n    shared\r\n    siphash\r\n    siv\r\n    sm2\r\n    sm3\r\n    sm4\r\n    sock\r\n    srp\r\n    srtp\r\n    ssl\r\n    ssl-trace\r\n    static-engine\r\n    stdio\r\n    tests\r\n    threads\r\n    tls\r\n    ts\r\n    ui-console\r\n    uplink\r\n    whirlpool\r\n    tls1\r\n    tls1-method\r\n    tls1_1\r\n    tls1_1-method\r\n    tls1_2\r\n    tls1_2-method\r\n    tls1_3\r\n    dtls1\r\n    dtls1-method\r\n    dtls1_2\r\n    dtls1_2-method\r\n\r\nDisabled features:\r\n\r\n    acvp-tests          [cascade]   OPENSSL_NO_ACVP_TESTS\r\n    afalgeng            [not-linux] OPENSSL_NO_AFALGENG\r\n    asan                [default]   OPENSSL_NO_ASAN\r\n    asm                 [option]    OPENSSL_NO_ASM\r\n    buildtest-c++       [default]   \r\n    crypto-mdebug       [default]   OPENSSL_NO_CRYPTO_MDEBUG\r\n    devcryptoeng        [default]   OPENSSL_NO_DEVCRYPTOENG\r\n    ec_nistp_64_gcc_128 [default]   OPENSSL_NO_EC_NISTP_64_GCC_128\r\n    egd                 [default]   OPENSSL_NO_EGD\r\n    external-tests      [default]   OPENSSL_NO_EXTERNAL_TESTS\r\n    fips                [default]   \r\n    fips-securitychecks [cascade]   OPENSSL_NO_FIPS_SECURITYCHECKS\r\n    fuzz-afl            [default]   OPENSSL_NO_FUZZ_AFL\r\n    fuzz-libfuzzer      [default]   OPENSSL_NO_FUZZ_LIBFUZZER\r\n    ktls                [default]   OPENSSL_NO_KTLS\r\n    md2                 [default]   OPENSSL_NO_MD2 (skip crypto/md2)\r\n    msan                [default]   OPENSSL_NO_MSAN\r\n    rc5                 [default]   OPENSSL_NO_RC5 (skip crypto/rc5)\r\n    sctp                [default]   OPENSSL_NO_SCTP\r\n    sse2                [cascade]   \r\n    trace               [default]   OPENSSL_NO_TRACE\r\n    ubsan               [default]   OPENSSL_NO_UBSAN\r\n    unit-test           [default]   OPENSSL_NO_UNIT_TEST\r\n    weak-ssl-ciphers    [default]   OPENSSL_NO_WEAK_SSL_CIPHERS\r\n    zlib                [default]   \r\n    zlib-dynamic        [default]   \r\n    ssl3                [default]   OPENSSL_NO_SSL3\r\n    ssl3-method         [default]   OPENSSL_NO_SSL3_METHOD\r\n\r\nConfig target attributes:\r\n\r\n    AR => \"ar\",\r\n    ARFLAGS => \"qc\",\r\n    CC => \"gcc\",\r\n    CFLAGS => \"-Wall -O3 -fomit-frame-pointer\",\r\n    HASHBANGPERL => \"/usr/bin/env perl\",\r\n    RANLIB => \"ranlib\",\r\n    RC => \"windres\",\r\n    asm_arch => \"x86\",\r\n    bn_ops => \"BN_LLONG\",\r\n    build_file => \"Makefile\",\r\n    build_scheme => [ \"unified\", \"unix\" ],\r\n    cflags => \"-m32\",\r\n    cppflags => \"-DUNICODE -D_UNICODE -DWIN32_LEAN_AND_MEAN -D_MT\",\r\n    defines => [ \"OPENSSL_BUILDING_OPENSSL\" ],\r\n    disable => [  ],\r\n    dso_scheme => \"win32\",\r\n    enable => [  ],\r\n    ex_libs => \"-lws2_32 -lgdi32 -lcrypt32\",\r\n    includes => [  ],\r\n    lflags => \"\",\r\n    lib_cflags => \"\",\r\n    lib_cppflags => \"-DL_ENDIAN\",\r\n    lib_defines => [  ],\r\n    module_cflags => \"\",\r\n    module_cxxflags => undef,\r\n    module_ldflags => \"-static-libgcc -shared -Wl,--enable-auto-image-base\",\r\n    multilib => \"\",\r\n    perl_platform => \"mingw\",\r\n    perlasm_scheme => \"coff\",\r\n    shared_argfileflag => \"\\@\",\r\n    shared_cflag => \"\",\r\n    shared_cppflags => \"_WINDLL\",\r\n    shared_defflag => \"\",\r\n    shared_defines => [  ],\r\n    shared_impflag => \"-Wl,--out-implib=\",\r\n    shared_ldflag => \"-static-libgcc -shared -Wl,--enable-auto-image-base\",\r\n    shared_rcflag => \"--target=pe-i386\",\r\n    shared_target => \"mingw-shared\",\r\n    sys_id => \"MINGW32\",\r\n    thread_defines => [  ],\r\n    thread_scheme => \"winthreads\",\r\n    unistd => \"<unistd.h>\",\r\n    uplink_arch => \"x86\",\r\n\r\nRecorded environment:\r\n\r\n    AR = \r\n    ARFLAGS = \r\n    AS = \r\n    ASFLAGS = \r\n    BUILDFILE = \r\n    CC = \r\n    CFLAGS = -D_WIN32_WINNT=0x0501 -march=i586\r\n    CPP = \r\n    CPPDEFINES = \r\n    CPPFLAGS = -D_WIN32_WINNT=0x0501 -march=i586\r\n    CPPINCLUDES = \r\n    CROSS_COMPILE = \r\n    CXX = \r\n    CXXFLAGS = -D_WIN32_WINNT=0x0501 -march=i586\r\n    HASHBANGPERL = \r\n    LD = \r\n    LDFLAGS = \r\n    LDLIBS = \r\n    MT = \r\n    MTFLAGS = \r\n    OPENSSL_LOCAL_CONFIG_DIR = \r\n    PERL = \r\n    RANLIB = \r\n    RC = \r\n    RCFLAGS = \r\n    RM = \r\n    WINDRES = \r\n    __CNF_CFLAGS = \r\n    __CNF_CPPDEFINES = \r\n    __CNF_CPPFLAGS = \r\n    __CNF_CPPINCLUDES = \r\n    __CNF_CXXFLAGS = \r\n    __CNF_LDFLAGS = \r\n    __CNF_LDLIBS = \r\n\r\nMakevars:\r\n\r\n    AR              = i686-w64-mingw32-ar\r\n    ARFLAGS         = qc\r\n    CC              = i686-w64-mingw32-gcc\r\n    CFLAGS          = -D_WIN32_WINNT=0x0501 -march=i586\r\n    CPPDEFINES      = \r\n    CPPFLAGS        = -D_WIN32_WINNT=0x0501 -march=i586\r\n    CPPINCLUDES     = \r\n    CROSS_COMPILE   = i686-w64-mingw32-\r\n    CXXFLAGS        = -D_WIN32_WINNT=0x0501 -march=i586\r\n    HASHBANGPERL    = /usr/bin/env perl\r\n    LDFLAGS         = \r\n    LDLIBS          = \r\n    PERL            = /usr/bin/perl\r\n    RANLIB          = i686-w64-mingw32-ranlib\r\n    RC              = i686-w64-mingw32-windres\r\n    RCFLAGS         = \r\n\r\nNOTE: These variables only represent the configuration view.  The build file\r\ntemplate may have processed these variables further, please have a look at the\r\nbuild file for more exact data:\r\n    Makefile\r\n\r\nbuild file:\r\n\r\n    Makefile\r\n\r\nbuild file templates:\r\n\r\n    Configurations/common0.tmpl\r\n    Configurations/unix-Makefile.tmpl\r\n```\r\n\r\n</details>",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/22289/comments",
    "author": "Fierelier",
    "comments": [
      {
        "user": "Fierelier",
        "created_at": "2023-10-05T10:19:31Z",
        "body": "@t8m Why tag this as a feature request? `./Configure 386` is supposed to generate 80386 compatible code, right?"
      },
      {
        "user": "t8m",
        "created_at": "2023-10-05T10:49:48Z",
        "body": "> @t8m Why tag this as a feature request? `./Configure 386` is supposed to generate 80386 compatible code, right?\r\n\r\nYes, although nowadays it is quite useless. \r\n\r\nHowever that does not necessarily mean it has to work on Windows mingw crossbuilds.\r\n"
      },
      {
        "user": "Fierelier",
        "created_at": "2023-10-18T01:37:15Z",
        "body": "**Fixed:** My MinGW toolchain was compiled for i686, and therefore the libraries it links the binaries to are too. I compiled an i486 MinGW toolchain, and I was able to make a successful i586 build."
      }
    ]
  },
  {
    "number": 22228,
    "title": "Unit test failures on AIX 7.2 XLClang 16.1 32bit with OpenSSL 3.0.11",
    "created_at": "2023-09-30T02:10:48Z",
    "closed_at": "2023-11-02T20:29:40Z",
    "labels": [
      "branch: master",
      "help wanted",
      "triaged: bug",
      "branch: 3.0",
      "branch: 3.1",
      "branch: 3.2"
    ],
    "url": "https://github.com/openssl/openssl/issues/22228",
    "body": "Apologies for not having the verbose logs but it's late on a Friday..\r\n\r\nOnly happens on 32bit. 64bit works fine.\r\nThe job actually hangs after this strangely enough. I've reproduced it twice.\r\nThe last build we had successfully compile was v3.0.9. \r\n\r\nUnit test log:\r\n```\r\n17:27:53 70-test_clienthello.t .............. ok\r\n17:31:46 \r\n17:31:46 # The results of this test will end up in test-runs/test_comp\r\n17:31:46 Proxy started on port [::1]:49620\r\n17:31:46 Engine \"ossltest\" set.\r\n17:31:46 Using default temp DH parameters\r\n17:31:46 ACCEPT [::1]:49621\r\n17:31:46 Server responds on [::1]:49621\r\n17:31:46 Engine \"ossltest\" set.\r\n17:31:46 s_client didn't try to connect\r\n17:31:46 CONNECTION FAILURE\r\n17:31:46 00000001:error:0A000126:SSL routines:ssl3_read_n:unexpected eof while reading:ssl/record/rec_layer_s3.c:304:\r\n17:31:46    0 items in the session cache\r\n17:31:46    0 client connects (SSL_connect())\r\n17:31:46    0 client renegotiates (SSL_connect())\r\n17:31:46    0 client connects that finished\r\n17:31:46    1 server accepts (SSL_accept())\r\n17:31:46    0 server renegotiates (SSL_accept())\r\n17:31:46    0 server accepts that finished\r\n17:31:46    0 session cache hits\r\n17:31:46    0 session cache misses\r\n17:31:46    0 session cache timeouts\r\n17:31:46    0 callback cache hits\r\n17:31:46    0 cache full overflows (20480 allowed)\r\n17:31:46 00000001:error:8000004F:system library:BIO_connect:Connection refused:crypto/bio/bio_sock2.c:114:calling connect()\r\n17:31:46 00000001:error:10000067:BIO routines:BIO_connect:connect error:crypto/bio/bio_sock2.c:116:\r\n17:31:46 connect:errno=7970-test_comp.t .....................\r\n17:31:46 Dubious, test returned 29 (wstat 7424, 0x1d00)\r\n17:31:46 No subtests run\r\n17:35:39 \r\n17:35:39 # The results of this test will end up in test-runs/test_key_share\r\n17:35:39 Proxy started on port [::1]:49625\r\n17:35:39 Engine \"ossltest\" set.\r\n17:35:39 Using default temp DH parameters\r\n17:35:39 ACCEPT [::1]:49626\r\n17:35:39 Server responds on [::1]:49626\r\n17:35:39 Engine \"ossltest\" set.\r\n17:35:39 s_client didn't try to connect\r\n17:35:39 CONNECTION FAILURE\r\n17:35:39 00000001:error:0A000126:SSL routines:ssl3_read_n:unexpected eof while reading:ssl/record/rec_layer_s3.c:304:\r\n17:35:39    0 items in the session cache\r\n17:35:39    0 client connects (SSL_connect())\r\n17:35:39    0 client renegotiates (SSL_connect())\r\n17:35:39    0 client connects that finished\r\n17:35:39    1 server accepts (SSL_accept())\r\n17:35:39    0 server renegotiates (SSL_accept())\r\n17:35:39    0 server accepts that finished\r\n17:35:39    0 session cache hits\r\n17:35:39    0 session cache misses\r\n17:35:39    0 session cache timeouts\r\n17:35:39    0 callback cache hits\r\n17:35:39    0 cache full overflows (20480 allowed)\r\n17:35:39 00000001:error:8000004F:system library:BIO_connect:Connection refused:crypto/bio/bio_sock2.c:114:calling connect()\r\n17:35:39 00000001:error:10000067:BIO routines:BIO_connect:connect error:crypto/bio/bio_sock2.c:116:\r\n17:35:39 connect:errno=7970-test_key_share.t ................\r\n17:35:39 Dubious, test returned 29 (wstat 7424, 0x1d00)\r\n17:35:39 No subtests run\r\n17:35:39 70-test_packet.t ................... ok\r\n17:35:39 70-test_recordlen.t ................ ok\r\n17:39:20 \r\n17:39:20 Proxy started on port [::1]:49630\r\n17:39:20 Engine \"ossltest\" set.\r\n17:39:20 Using default temp DH parameters\r\n17:39:20 ACCEPT [::1]:49631\r\n17:39:20 Server responds on [::1]:49631\r\n17:39:20 Engine \"ossltest\" set.\r\n17:39:20 s_client didn't try to connect\r\n17:39:20 # Looks like your test exited with 29 before it could output anything.\r\n17:39:20 CONNECTION FAILURE\r\n17:39:20 00000001:error:0A000126:SSL routines:ssl3_read_n:unexpected eof while reading:ssl/record/rec_layer_s3.c:304:\r\n17:39:20    0 items in the session cache\r\n17:39:20    0 client connects (SSL_connect())\r\n17:39:20    0 client renegotiates (SSL_connect())\r\n17:39:20    0 client connects that finished\r\n17:39:20    1 server accepts (SSL_accept())\r\n17:39:20    0 server renegotiates (SSL_accept())\r\n17:39:20    0 server accepts that finished\r\n17:39:20    0 session cache hits\r\n17:39:20    0 session cache misses\r\n17:39:20    0 session cache timeouts\r\n17:39:20    0 callback cache hits\r\n17:39:20    0 cache full overflows (20480 allowed)\r\n17:39:20 00000001:error:8000004F:system library:BIO_connect:Connection refused:crypto/bio/bio_sock2.c:114:calling connect()\r\n17:39:20 00000001:error:10000067:BIO routines:BIO_connect:connect error:crypto/bio/bio_sock2.c:116:\r\n17:39:20 connect:errno=7970-test_renegotiation.t ............\r\n17:39:20 Dubious, test returned 29 (wstat 7424, 0x1d00)\r\n17:39:20 Failed 5/5 subtests\r\n17:39:20 70-test_servername.t ............... ok\r\n```\r\n\r\nbuildconfig:\r\n```\r\n-bash-5.0$ cat buildconfig.txt\r\n\r\nCommand line (with current working directory = .):\r\n\r\n    perl ./Configure aix-cc shared enable-fips -DBROKEN_CLANG_ATOMICS no-asm\r\n\r\nPerl information:\r\n\r\n    perl\r\n    5.20.1 for aix-thread-multi\r\n\r\nEnabled features:\r\n\r\n    acvp-tests\r\n    aria\r\n    async\r\n    autoalginit\r\n    autoerrinit\r\n    autoload-config\r\n    bf\r\n    blake2\r\n    bulk\r\n    cached-fetch\r\n    camellia\r\n    capieng\r\n    cast\r\n    chacha\r\n    cmac\r\n    cmp\r\n    cms\r\n    comp\r\n    ct\r\n    deprecated\r\n    des\r\n    dgram\r\n    dh\r\n    dsa\r\n    dso\r\n    dtls\r\n    dynamic-engine\r\n    ec\r\n    ec2m\r\n    ecdh\r\n    ecdsa\r\n    engine\r\n    err\r\n    filenames\r\n    fips\r\n    fips-securitychecks\r\n    gost\r\n    idea\r\n    legacy\r\n    loadereng\r\n    makedepend\r\n    md4\r\n    mdc2\r\n    module\r\n    multiblock\r\n    nextprotoneg\r\n    ocb\r\n    ocsp\r\n    padlockeng\r\n    pic\r\n    pinshared\r\n    poly1305\r\n    posix-io\r\n    psk\r\n    rc2\r\n    rc4\r\n    rdrand\r\n    rfc3779\r\n    rmd160\r\n    scrypt\r\n    secure-memory\r\n    seed\r\n    shared\r\n    siphash\r\n    siv\r\n    sm2\r\n    sm3\r\n    sm4\r\n    sock\r\n    srp\r\n    srtp\r\n    sse2\r\n    ssl\r\n    ssl-trace\r\n    static-engine\r\n    stdio\r\n    tests\r\n    threads\r\n    tls\r\n    ts\r\n    ui-console\r\n    whirlpool\r\n    tls1\r\n    tls1-method\r\n    tls1_1\r\n    tls1_1-method\r\n    tls1_2\r\n    tls1_2-method\r\n    tls1_3\r\n    dtls1\r\n    dtls1-method\r\n    dtls1_2\r\n    dtls1_2-method\r\n\r\nDisabled features:\r\n\r\n    afalgeng            [not-linux]      OPENSSL_NO_AFALGENG\r\n    asan                [default]        OPENSSL_NO_ASAN\r\n    asm                 [option]         OPENSSL_NO_ASM\r\n    buildtest-c++       [default]\r\n    crypto-mdebug       [default]        OPENSSL_NO_CRYPTO_MDEBUG\r\n    devcryptoeng        [default]        OPENSSL_NO_DEVCRYPTOENG\r\n    ec_nistp_64_gcc_128 [default]        OPENSSL_NO_EC_NISTP_64_GCC_128\r\n    egd                 [default]        OPENSSL_NO_EGD\r\n    external-tests      [default]        OPENSSL_NO_EXTERNAL_TESTS\r\n    fuzz-afl            [default]        OPENSSL_NO_FUZZ_AFL\r\n    fuzz-libfuzzer      [default]        OPENSSL_NO_FUZZ_LIBFUZZER\r\n    ktls                [default]        OPENSSL_NO_KTLS\r\n    md2                 [default]        OPENSSL_NO_MD2 (skip crypto/md2)\r\n    msan                [default]        OPENSSL_NO_MSAN\r\n    rc5                 [default]        OPENSSL_NO_RC5 (skip crypto/rc5)\r\n    sctp                [default]        OPENSSL_NO_SCTP\r\n    trace               [default]        OPENSSL_NO_TRACE\r\n    ubsan               [default]        OPENSSL_NO_UBSAN\r\n    unit-test           [default]        OPENSSL_NO_UNIT_TEST\r\n    uplink              [no uplink_arch] OPENSSL_NO_UPLINK\r\n    weak-ssl-ciphers    [default]        OPENSSL_NO_WEAK_SSL_CIPHERS\r\n    zlib                [default]\r\n    zlib-dynamic        [default]\r\n    ssl3                [default]        OPENSSL_NO_SSL3\r\n    ssl3-method         [default]        OPENSSL_NO_SSL3_METHOD\r\n\r\nConfig target attributes:\r\n\r\n    AR => \"ar -X32\",\r\n    ARFLAGS => \"qc\",\r\n    CC => \"cc\",\r\n    CFLAGS => \"-O\",\r\n    HASHBANGPERL => \"/usr/bin/env perl\",\r\n    RANLIB => \"ranlib -X32\",\r\n    RC => \"windres\",\r\n    asm_arch => \"ppc32\",\r\n    bn_ops => \"BN_LLONG RC4_CHAR\",\r\n    build_file => \"Makefile\",\r\n    build_scheme => [ \"unified\", \"unix\" ],\r\n    cflags => \"-q32 -qmaxmem=16384 -qro -qroconst -qthreaded\",\r\n    cppflags => \"-D_THREAD_SAFE\",\r\n    defines => [ \"OPENSSL_BUILDING_OPENSSL\" ],\r\n    disable => [  ],\r\n    dso_scheme => \"dlfcn\",\r\n    enable => [  ],\r\n    ex_libs => \"-lpthreads\",\r\n    includes => [  ],\r\n    lflags => \"-Wl,-bsvr4\",\r\n    lib_cflags => \"\",\r\n    lib_cppflags => \"-DB_ENDIAN\",\r\n    lib_defines => [  ],\r\n    module_cflags => \"-qpic\",\r\n    module_cxxflags => undef,\r\n    module_ldflags => \"-Wl,-G,-bsymbolic,-bnoentry\",\r\n    perl_platform => \"AIX\",\r\n    perlasm_scheme => \"aix32\",\r\n    shared_cflag => \"-qpic\",\r\n    shared_defflag => \"-Wl,-bE:\",\r\n    shared_defines => [  ],\r\n    shared_fipsflag => \"-Wl,-binitfini:_init:_cleanup\",\r\n    shared_ldflag => \"-Wl,-G,-bsymbolic,-bnoentry\",\r\n    shared_rcflag => \"\",\r\n    shared_target => \"aix\",\r\n    sys_id => \"AIX\",\r\n    thread_defines => [  ],\r\n    thread_scheme => \"pthreads\",\r\n    unistd => \"<unistd.h>\",\r\n\r\nRecorded environment:\r\n\r\n    AR =\r\n    BUILDFILE =\r\n    CC = xlclang\r\n    CFLAGS =\r\n    CPPFLAGS =\r\n    CROSS_COMPILE =\r\n    CXX = xlclang++\r\n    CXXFLAGS =\r\n    HASHBANGPERL =\r\n    LDFLAGS =\r\n    LDLIBS =\r\n    OPENSSL_LOCAL_CONFIG_DIR =\r\n    PERL =\r\n    RANLIB =\r\n    RC =\r\n    RCFLAGS =\r\n    WINDRES =\r\n    __CNF_CFLAGS =\r\n    __CNF_CPPDEFINES =\r\n    __CNF_CPPFLAGS =\r\n    __CNF_CPPINCLUDES =\r\n    __CNF_CXXFLAGS =\r\n    __CNF_LDFLAGS =\r\n    __CNF_LDLIBS =\r\n\r\nMakevars:\r\n\r\n    AR              = ar -X32\r\n    ARFLAGS         = qc\r\n    CC              = xlclang\r\n    CFLAGS          = -O\r\n    CPPDEFINES      = BROKEN_CLANG_ATOMICS\r\n    CPPFLAGS        =\r\n    CPPINCLUDES     =\r\n    CXX             = xlclang++\r\n    CXXFLAGS        =\r\n    HASHBANGPERL    = /usr/bin/env perl\r\n    LDFLAGS         =\r\n    LDLIBS          =\r\n    PERL            = perl\r\n    RANLIB          = ranlib -X32\r\n    RC              = windres\r\n    RCFLAGS         =\r\n\r\nNOTE: These variables only represent the configuration view.  The build file\r\ntemplate may have processed these variables further, please have a look at the\r\nbuild file for more exact data:\r\n    Makefile\r\n\r\nbuild file:\r\n\r\n    Makefile\r\n\r\nbuild file templates:\r\n\r\n    Configurations/common0.tmpl\r\n    Configurations/unix-Makefile.tmpl\r\n```",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/22228/comments",
    "author": "robmcgee-mag",
    "comments": [
      {
        "user": "paulidale",
        "created_at": "2023-09-30T06:34:34Z",
        "body": "The project does not have access to such an AIX machine and the platform is unadopted.\r\nWe'll have a look but no guarantees there will be any progress."
      },
      {
        "user": "nhorman",
        "created_at": "2023-10-03T12:16:33Z",
        "body": " 00000001:error:8000004F:system library:BIO_connect:Connection refused:crypto/bio/bio_sock2.c:114:calling connect\r\n\r\nkinda seems like you maybe have the AIX equivalent of an iptables rule thats blocking connections from s_client?  Just a guess mind you.  Might be worth re-running with any traffic policing rules flushed"
      },
      {
        "user": "robmcgee-mag",
        "created_at": "2023-10-03T18:38:02Z",
        "body": "Thanks, I'll take a look into that and get you verbose logs. "
      },
      {
        "user": "robmcgee-mag",
        "created_at": "2023-10-03T20:20:02Z",
        "body": "It doesn't look like our firewall settings have changed since we built with v3.0.9.\r\nHere are the verbose logs:\r\n```\r\n12:27:16 70-test_clienthello.t ..............\r\n12:27:16 # The results of this test will end up in test-runs/test_clienthello\r\n12:27:16 1..1\r\n12:27:16     # Subtest: ../../test/clienthellotest\r\n12:27:16     1..1\r\n12:27:16         # Subtest: test_client_hello\r\n12:27:16         1..4\r\n12:27:16         ok 1 - iteration 1\r\n12:27:16         ok 2 - iteration 2\r\n12:27:16         ok 3 - iteration 3\r\n12:27:16         ok 4 - iteration 4\r\n12:27:16     ok 1 - test_client_hello\r\n12:27:16 ../../util/wrap.pl ../../test/clienthellotest ../../test/session.pem => 0\r\n12:27:16 ok 1 - running clienthellotest\r\n12:27:16 ok\r\n12:31:09 70-test_comp.t .....................\r\n12:31:09 # The results of this test will end up in test-runs/test_comp\r\n12:31:09 Proxy started on port [::1]:46739\r\n12:31:09 Server command: ../../util/wrap.pl ../../apps/openssl s_server -max_protocol TLSv1.3 -no_comp -rev -engine ossltest -ext_cache -accept [::1]:0 -cert ../../apps/server.pem -cert2 ../../apps/server.pem -naccept 1 -cipher AES128-SHA -ciphersuites TLS_AES_128_GCM_SHA256\r\n12:31:09 Engine \"ossltest\" set.\r\n12:31:09 Using default temp DH parameters\r\n12:31:09 ACCEPT [::1]:46740\r\n12:31:09 Server responds on [::1]:46740\r\n12:31:09 Client command: ../../util/wrap.pl ../../apps/openssl s_client -max_protocol TLSv1.3 -engine ossltest -connect [::1]:46739 -servername localhost\r\n12:31:09 Engine \"ossltest\" set.\r\n12:31:09 s_client didn't try to connect\r\n12:31:09 CONNECTION FAILURE\r\n12:31:09 00000001:error:0A000126:SSL routines:ssl3_read_n:unexpected eof while reading:ssl/record/rec_layer_s3.c:304:\r\n12:31:09    0 items in the session cache\r\n12:31:09    0 client connects (SSL_connect())\r\n12:31:09    0 client renegotiates (SSL_connect())\r\n12:31:09    0 client connects that finished\r\n12:31:09    1 server accepts (SSL_accept())\r\n12:31:09    0 server renegotiates (SSL_accept())\r\n12:31:09    0 server accepts that finished\r\n12:31:09    0 session cache hits\r\n12:31:09    0 session cache misses\r\n12:31:09    0 session cache timeouts\r\n12:31:09    0 callback cache hits\r\n12:31:09    0 cache full overflows (20480 allowed)\r\n12:31:09 00000001:error:8000004F:system library:BIO_connect:Connection refused:crypto/bio/bio_sock2.c:114:calling connect()\r\n12:31:09 00000001:error:10000067:BIO routines:BIO_connect:connect error:crypto/bio/bio_sock2.c:116:\r\n12:31:09 connect:errno=79\r\n12:31:09 Dubious, test returned 29 (wstat 7424, 0x1d00)\r\n12:31:09 No subtests run\r\n12:35:02 70-test_key_share.t ................\r\n12:35:02 # The results of this test will end up in test-runs/test_key_share\r\n12:35:02 Proxy started on port [::1]:46744\r\n12:35:02 Server command: ../../util/wrap.pl ../../apps/openssl s_server -max_protocol TLSv1.3 -no_comp -rev -engine ossltest -ext_cache -accept [::1]:0 -cert ../../apps/server.pem -cert2 ../../apps/server.pem -naccept 1 -cipher AES128-SHA -ciphersuites TLS_AES_128_GCM_SHA256 -groups P-256\r\n12:35:02 Engine \"ossltest\" set.\r\n12:35:02 Using default temp DH parameters\r\n12:35:02 ACCEPT [::1]:46745\r\n12:35:02 Server responds on [::1]:46745\r\n12:35:02 Client command: ../../util/wrap.pl ../../apps/openssl s_client -max_protocol TLSv1.3 -engine ossltest -connect [::1]:46744 -servername localhost\r\n12:35:02 Engine \"ossltest\" set.\r\n12:35:02 s_client didn't try to connect\r\n12:35:02 CONNECTION FAILURE\r\n12:35:02 00000001:error:0A000126:SSL routines:ssl3_read_n:unexpected eof while reading:ssl/record/rec_layer_s3.c:304:\r\n12:35:02    0 items in the session cache\r\n12:35:02    0 client connects (SSL_connect())\r\n12:35:02    0 client renegotiates (SSL_connect())\r\n12:35:02    0 client connects that finished\r\n12:35:02    1 server accepts (SSL_accept())\r\n12:35:02    0 server renegotiates (SSL_accept())\r\n12:35:02    0 server accepts that finished\r\n12:35:02    0 session cache hits\r\n12:35:02    0 session cache misses\r\n12:35:02    0 session cache timeouts\r\n12:35:02    0 callback cache hits\r\n12:35:02    0 cache full overflows (20480 allowed)\r\n12:35:02 00000001:error:8000004F:system library:BIO_connect:Connection refused:crypto/bio/bio_sock2.c:114:calling connect()\r\n12:35:02 00000001:error:10000067:BIO routines:BIO_connect:connect error:crypto/bio/bio_sock2.c:116:\r\n12:35:02 connect:errno=79\r\n12:35:02 Dubious, test returned 29 (wstat 7424, 0x1d00)\r\n12:35:02 No subtests run\r\n12:35:02 70-test_packet.t ...................\r\n12:35:02 # The results of this test will end up in test-runs/test_packet\r\n12:35:02 1..1\r\n12:35:02     # Subtest: ../../test/packettest\r\n12:35:02     1..23\r\n12:35:02     ok 1 - test_PACKET_buf_init\r\n12:35:02     ok 2 - test_PACKET_null_init\r\n12:35:02     ok 3 - test_PACKET_remaining\r\n12:35:02     ok 4 - test_PACKET_end\r\n12:35:02     ok 5 - test_PACKET_equal\r\n12:35:02     ok 6 - test_PACKET_get_1\r\n12:35:02     ok 7 - test_PACKET_get_4\r\n12:35:02     ok 8 - test_PACKET_get_net_2\r\n12:35:02     ok 9 - test_PACKET_get_net_3\r\n12:35:02     ok 10 - test_PACKET_get_net_4\r\n12:35:02     ok 11 - test_PACKET_get_sub_packet\r\n12:35:02     ok 12 - test_PACKET_get_bytes\r\n12:35:02     ok 13 - test_PACKET_copy_bytes\r\n12:35:02     ok 14 - test_PACKET_copy_all\r\n12:35:02     ok 15 - test_PACKET_memdup\r\n12:35:02     ok 16 - test_PACKET_strndup\r\n12:35:02     ok 17 - test_PACKET_contains_zero_byte\r\n12:35:02     ok 18 - test_PACKET_forward\r\n12:35:02     ok 19 - test_PACKET_get_length_prefixed_1\r\n12:35:02     ok 20 - test_PACKET_get_length_prefixed_2\r\n12:35:02     ok 21 - test_PACKET_get_length_prefixed_3\r\n12:35:02     ok 22 - test_PACKET_as_length_prefixed_1\r\n12:35:02     ok 23 - test_PACKET_as_length_prefixed_2\r\n12:35:02 ../../util/wrap.pl ../../test/packettest => 0\r\n12:35:02 ok 1 - running packettest\r\n12:35:02 ok\r\n12:35:02 70-test_recordlen.t ................\r\n12:35:02 # The results of this test will end up in test-runs/test_recordlen\r\n12:35:02 1..1\r\n12:35:02     # Subtest: ../../test/recordlentest\r\n12:35:02     1..1\r\n12:35:02         # Subtest: test_record_overflow\r\n12:35:02         1..6\r\n12:35:02         ok 1 - iteration 1\r\n12:35:02         ok 2 - iteration 2\r\n12:35:02         ok 3 - iteration 3\r\n12:35:02         ok 4 - iteration 4\r\n12:35:02         ok 5 - iteration 5\r\n12:35:02         ok 6 - iteration 6\r\n12:35:02     ok 1 - test_record_overflow\r\n12:35:02 ../../util/wrap.pl ../../test/recordlentest ../../apps/server.pem ../../apps/server.pem => 0\r\n12:35:02 ok 1 - running recordlentest\r\n12:35:02 ok\r\n12:38:40 70-test_renegotiation.t ............\r\n12:38:40 # The results of this test will end up in test-runs/test_renegotiation\r\n12:38:40 1..5\r\n12:38:40 Proxy started on port [::1]:46749\r\n12:38:40 Server command: ../../util/wrap.pl ../../apps/openssl s_server -max_protocol TLSv1.3 -no_comp -rev -engine ossltest -ext_cache -accept [::1]:0 -cert ../../apps/server.pem -cert2 ../../apps/server.pem -naccept 1 -cipher AES128-SHA -ciphersuites TLS_AES_128_GCM_SHA256 -client_renegotiation\r\n12:38:40 Engine \"ossltest\" set.\r\n12:38:40 Using default temp DH parameters\r\n12:38:40 ACCEPT [::1]:46750\r\n12:38:40 Server responds on [::1]:46750\r\n12:38:40 Client command: ../../util/wrap.pl ../../apps/openssl s_client -max_protocol TLSv1.3 -engine ossltest -connect [::1]:46749 -no_tls1_3 -servername localhost\r\n12:38:40 Engine \"ossltest\" set.\r\n12:38:40 s_client didn't try to connect\r\n12:38:40 # Looks like your test exited with 29 before it could output anything.\r\n12:38:40 CONNECTION FAILURE\r\n12:38:40 00000001:error:0A000126:SSL routines:ssl3_read_n:unexpected eof while reading:ssl/record/rec_layer_s3.c:304:\r\n12:38:40    0 items in the session cache\r\n12:38:40    0 client connects (SSL_connect())\r\n12:38:40    0 client renegotiates (SSL_connect())\r\n12:38:40    0 client connects that finished\r\n12:38:40    1 server accepts (SSL_accept())\r\n12:38:40    0 server renegotiates (SSL_accept())\r\n12:38:40    0 server accepts that finished\r\n12:38:40    0 session cache hits\r\n12:38:40    0 session cache misses\r\n12:38:40    0 session cache timeouts\r\n12:38:40    0 callback cache hits\r\n12:38:40    0 cache full overflows (20480 allowed)\r\n12:38:40 00000001:error:8000004F:system library:BIO_connect:Connection refused:crypto/bio/bio_sock2.c:114:calling connect()\r\n12:38:40 00000001:error:10000067:BIO routines:BIO_connect:connect error:crypto/bio/bio_sock2.c:116:\r\n12:38:40 connect:errno=79\r\n12:38:40 Dubious, test returned 29 (wstat 7424, 0x1d00)\r\n12:38:40 Failed 5/5 subtests\r\n12:38:40 70-test_servername.t ...............\r\n12:38:40 # The results of this test will end up in test-runs/test_servername\r\n12:38:40 1..1\r\n12:38:40     # Subtest: ../../test/servername_test\r\n12:38:40     1..1\r\n12:38:40         # Subtest: test_servername\r\n12:38:40         1..3\r\n12:38:40         ok 1 - iteration 1\r\n12:38:40         ok 2 - iteration 2\r\n12:38:40         ok 3 - iteration 3\r\n12:38:40     ok 1 - test_servername\r\n12:38:40 ../../util/wrap.pl ../../test/servername_test ../../apps/server.pem ../../apps/server.pem => 0\r\n12:38:40 ok 1 - running servername_test\r\n```"
      },
      {
        "user": "robmcgee-mag",
        "created_at": "2023-10-12T23:05:38Z",
        "body": "For the record, I'm seeing the same errors on v3.0.10 so the break must have been introduced then. v3.0.9 worked fine."
      },
      {
        "user": "robmcgee-mag",
        "created_at": "2023-11-02T20:29:41Z",
        "body": "No longer seeing this on v3.0.12. Closing."
      }
    ]
  },
  {
    "number": 22148,
    "title": "OpenSSL should support a method for providers to self-activate by installing a file",
    "created_at": "2023-09-19T17:56:07Z",
    "closed_at": "2023-11-03T08:09:25Z",
    "labels": [
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/22148",
    "body": "To support the OQS provider of PKCS11 provider in distributions, it would be best if installation of the package that contains the provider module can automatically add the provider to OpenSSL's configuration.\r\n\r\nOne possible solution for this would be a `include.d` directive that works like `include` but instead takes a directory and includes all `.cnf` files in that directory. This would allow distributions to configure their copy of OpenSSL with a default include directory for configuration files, e.g., `/etc/openssl/providers.conf.d`, add `include.d /etc/openssl/providers.conf.d` to the main `openssl.cnf`.\r\n\r\n3rd party providers such as oqsprovider or pkcs11-provider could then install `/etc/openssl/providers.conf.d/oqs.cnf` or `/etc/openssl/providers.conf.d/pkcs11.cnf` that load and enable these providers, and automatically remove the configuration when uninstalling the package.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/22148/comments",
    "author": "neverpanic",
    "comments": [
      {
        "user": "beldmit",
        "created_at": "2023-09-19T18:10:14Z",
        "body": "A side comment: currently we have a recursive parsing of config. It means that, to activate a provider, we need a ref to its section from the providers section. I'm not sure if smth like \r\n\r\n```\r\n[provider_sect]\r\nmy_prov = my_sect\r\n[my_sect]\r\nparam1=value1\r\nactivate=1\r\n```\r\n\r\nin the included file will work. If it doesn't, we should deal with it."
      },
      {
        "user": "mattcaswell",
        "created_at": "2023-09-20T07:12:53Z",
        "body": "I like this idea, although the issue @beldmit raises is a concern, so we'd need to figure out a solution to that."
      },
      {
        "user": "neverpanic",
        "created_at": "2023-09-20T10:26:06Z",
        "body": "This already works, but it does introduce a dependency between the configuration files:\r\n\r\n`openssl.cnf`:\r\n```ini\r\nopenssl_conf = openssl_init\r\n\r\nconfig_diagnostics = 1\r\n\r\n[openssl_init]\r\nproviders = provider_sect\r\n\r\n[provider_sect]\r\ndefault = default_sect\r\n[default_sect]\r\nactivate = 1\r\n\r\n.include legacyprov.cnf\r\n```\r\n\r\n`legacyprov.cnf`:\r\n```ini\r\n[provider_sect]\r\nlegacy = legacy_sect\r\n\r\n[legacy_sect]\r\nactivate = 1\r\n```\r\n\r\n```bash\r\nOPENSSL_CONF=openssl.cnf openssl list -providers\r\nProviders:\r\n  default\r\n    name: OpenSSL Default Provider\r\n    version: 3.0.9\r\n    status: active\r\n  legacy\r\n    name: OpenSSL Legacy Provider\r\n    version: 3.0.9\r\n    status: active\r\n```\r\n\r\nThe included configuration file needs to know the name of the provider section in the main OpenSSL config file. If that name changes, this stops working."
      },
      {
        "user": "beldmit",
        "created_at": "2023-09-20T10:40:15Z",
        "body": "> The included configuration file needs to know the name of the provider section in the main OpenSSL config file. If that name changes, this stops working.\r\n\r\nIt shouldn't be a big deal for a distribution, right?"
      },
      {
        "user": "Deepanshi3112",
        "created_at": "2023-09-24T09:57:31Z",
        "body": "@beldmit a nice idea though \n"
      },
      {
        "user": "xhanulik",
        "created_at": "2023-11-02T14:51:33Z",
        "body": "The described functionality for `include.d` should be already implemented as `include` directive supports taking directory and including all configuration files in that directory. I've implemented test which covers including configuration files with the provider section in #22598."
      },
      {
        "user": "t8m",
        "created_at": "2023-11-02T15:54:40Z",
        "body": "Yes, it was always the intention that this should work."
      },
      {
        "user": "t8m",
        "created_at": "2023-11-02T15:55:57Z",
        "body": "So do we still have an issue here?"
      },
      {
        "user": "beldmit",
        "created_at": "2023-11-02T18:54:31Z",
        "body": "I think no, it just works "
      },
      {
        "user": "t8m",
        "created_at": "2023-11-03T08:09:25Z",
        "body": "Closing this then."
      }
    ]
  },
  {
    "number": 21702,
    "title": "Cross compiling for mingw64: undefined reference to `win32_utf8argv'",
    "created_at": "2023-08-10T04:12:40Z",
    "closed_at": "2023-08-10T10:12:14Z",
    "labels": [
      "help wanted",
      "triaged: bug"
    ],
    "url": "https://github.com/openssl/openssl/issues/21702",
    "body": "I'm trying to compile so that I can use ssl stuff for a project on a windows machine. I've tried compiling the programs I need with MSYS2 but no matter which environment I used, each needed a specific library or header that each of them couldn't handle.\r\n\r\nSo I'm on a WSL with Ubuntu (should be latest) I've installed what I believe to be everything needed to compile mingw libs and such.\r\n\r\nI'm running these commands:\r\n\r\n```\r\n./Configure mingw64 --cross-compile-prefix=x86_64-w64-mingw32-\r\nmake\r\n```\r\n\r\nI'm getting this error:\r\n\r\n```\r\n${LDCMD:-x86_64-w64-mingw32-gcc} -m64 -Wall -O3 -L.   \\\r\n        -o apps/openssl.exe \\\r\n        apps/lib/openssl-bin-cmp_mock_srv.obj \\\r\n        apps/openssl-bin-asn1parse.obj apps/openssl-bin-ca.obj \\\r\n        apps/openssl-bin-ciphers.obj apps/openssl-bin-cmp.obj \\\r\n        apps/openssl-bin-cms.obj apps/openssl-bin-crl.obj \\\r\n        apps/openssl-bin-crl2pkcs7.obj apps/openssl-bin-dgst.obj \\\r\n        apps/openssl-bin-dhparam.obj apps/openssl-bin-dsa.obj \\\r\n        apps/openssl-bin-dsaparam.obj apps/openssl-bin-ec.obj \\\r\n        apps/openssl-bin-ecparam.obj apps/openssl-bin-enc.obj \\\r\n        apps/openssl-bin-engine.obj apps/openssl-bin-errstr.obj \\\r\n        apps/openssl-bin-fipsinstall.obj apps/openssl-bin-gendsa.obj \\\r\n        apps/openssl-bin-genpkey.obj apps/openssl-bin-genrsa.obj \\\r\n        apps/openssl-bin-info.obj apps/openssl-bin-kdf.obj \\\r\n        apps/openssl-bin-list.obj apps/openssl-bin-mac.obj \\\r\n        apps/openssl-bin-nseq.obj apps/openssl-bin-ocsp.obj \\\r\n        apps/openssl-bin-openssl.obj \\\r\n        apps/openssl-bin-openssl.res.obj apps/openssl-bin-passwd.obj \\\r\n        apps/openssl-bin-pkcs12.obj apps/openssl-bin-pkcs7.obj \\\r\n        apps/openssl-bin-pkcs8.obj apps/openssl-bin-pkey.obj \\\r\n        apps/openssl-bin-pkeyparam.obj apps/openssl-bin-pkeyutl.obj \\\r\n        apps/openssl-bin-prime.obj apps/openssl-bin-progs.obj \\\r\n        apps/openssl-bin-rand.obj apps/openssl-bin-rehash.obj \\\r\n        apps/openssl-bin-req.obj apps/openssl-bin-rsa.obj \\\r\n        apps/openssl-bin-rsautl.obj apps/openssl-bin-s_client.obj \\\r\n        apps/openssl-bin-s_server.obj apps/openssl-bin-s_time.obj \\\r\n        apps/openssl-bin-sess_id.obj apps/openssl-bin-smime.obj \\\r\n        apps/openssl-bin-speed.obj apps/openssl-bin-spkac.obj \\\r\n        apps/openssl-bin-srp.obj apps/openssl-bin-storeutl.obj \\\r\n        apps/openssl-bin-ts.obj apps/openssl-bin-verify.obj \\\r\n        apps/openssl-bin-version.obj apps/openssl-bin-x509.obj \\\r\n        apps/libapps.a -lssl -lcrypto -lws2_32 -lgdi32 -lcrypt32\r\n/usr/bin/x86_64-w64-mingw32-ld: apps/openssl-bin-openssl.obj:openssl.c:(.text.startup+0x63): undefined reference to `win32_utf8argv'\r\ncollect2: error: ld returned 1 exit status\r\nmake[1]: *** [Makefile:21812: apps/openssl.exe] Error 1\r\nmake[1]: Leaving directory '/home/merc/openssl-3.1.2'\r\nmake: *** [Makefile:3314: build_sw] Error 2\r\n```\r\n\r\nI'm no C expert so I'm not sure how this function is not being linked. I'm sorry in advanced if I'm missing anything else to help debug this.\r\n\r\nAlso to add, if this gets fixed wherever that may be, here or locally, is there anything else I should be adding to install libs and headers to the correct paths, or since I'm already using the mingw64 target, it'll figure it out?",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/21702/comments",
    "author": "Merculous",
    "comments": [
      {
        "user": "mattcaswell",
        "created_at": "2023-08-10T09:28:15Z",
        "body": "Hmm. That is strange. This works for me just fine cross-compiling OpenSSL 3.1.2 for mingw64 using a native Ubuntu system (I don't have access to a WSL environment).\r\n\r\nThe function `win32_utf8argv` is defined in the apps/lib/win32_init.c file. Has that been compiled correctly? i.e. does there exist a file `apps/lib/libapps-lib-win32_init.obj`?\r\n\r\nIf so does it contain the expected symbol? For me, I see this:\r\n\r\n````\r\n$ nm apps/lib/libapps-lib-win32_init.obj | grep win32_utf8argv\r\n0000000000000390 T win32_utf8argv\r\n````\r\nWhich confirms that the symbol exists as expected in the obj file.\r\n\r\nIn the apps directory you should see a libapps.a file. It might also be useful to check if the symbol exists in that file, e.g. for me I see this:\r\n\r\n````\r\n$ nm apps/libapps.a | grep win32_utf8argv\r\n0000000000000390 T win32_utf8argv\r\n````\r\n"
      },
      {
        "user": "Merculous",
        "created_at": "2023-08-10T09:36:17Z",
        "body": "They both exist, however win32_utf8argv doesn't show from the libapps.a file.\r\n\r\nI only have this for the object file.\r\n\r\n```\r\nnm apps/lib/libapps-lib-win32_init.obj | grep win32_utf8argv\r\n0000000000000390 T win32_utf8argv\r\n```\r\n"
      },
      {
        "user": "mattcaswell",
        "created_at": "2023-08-10T09:44:27Z",
        "body": "Please delete the apps/libapps.a file and remake it like this:\r\n\r\n````\r\nrm apps/libapps.a\r\nmake apps/libapps.a >out.log\r\n````\r\nPlease post the contents of the out.log file that gets created here. Mine looks like this:\r\n\r\n````\r\nrm -f apps/libapps.a\r\nx86_64-w64-mingw32-ar qc apps/libapps.a apps/lib/libapps-lib-app_libctx.obj apps/lib/libapps-lib-app_params.obj apps/lib/libapps-lib-app_provider.obj apps/lib/libapps-lib-app_rand.obj apps/lib/libapps-lib-app_x509.obj apps/lib/libapps-lib-apps.obj apps/lib/libapps-lib-apps_ui.obj apps/lib/libapps-lib-columns.obj apps/lib/libapps-lib-engine.obj apps/lib/libapps-lib-engine_loader.obj apps/lib/libapps-lib-fmt.obj apps/lib/libapps-lib-http_server.obj apps/lib/libapps-lib-names.obj apps/lib/libapps-lib-opt.obj apps/lib/libapps-lib-s_cb.obj apps/lib/libapps-lib-s_socket.obj apps/lib/libapps-lib-tlssrp_depr.obj apps/lib/libapps-lib-win32_init.obj\r\nx86_64-w64-mingw32-ranlib apps/libapps.a || echo Never mind.\r\n````\r\n\r\n"
      },
      {
        "user": "Merculous",
        "created_at": "2023-08-10T10:10:13Z",
        "body": "Wow, this is embarrassing. I think this was just an oblivious mistake I've made. I reinstalled a new wsl ubuntu vm and now it works. I also tried on a native ubuntu and they compiled without errors. I'm sorry for wasting your time.\r\n\r\nI do remember that I was trying to set environment variables so I don't have to keep track of the flags and such I'd have to set, because I needed to use cmake later. I believe my script which did that was most likely bad and screwed up the compilation.\r\n\r\nSo, I don't think this is an actual issue, sorry for wasting your time, I should've done more testing. Well, I guess you can close this? I'm sure everything is actually proper. I'm just dumb enough to not try and see if this was my own doing.\r\n\r\nI had some other issues regarding the undefined reference too, but I just needed to install the binutils package. So, I'm just going to blame this on me."
      },
      {
        "user": "tom-cosgrove-arm",
        "created_at": "2023-08-10T10:12:14Z",
        "body": "Closing as not an issue - no worries, we all make mistakes, thanks for letting us know so we can close this"
      }
    ]
  },
  {
    "number": 21582,
    "title": "ssl3_get_message() is mentioned in source code comments, but it does not exist",
    "created_at": "2023-07-28T07:45:55Z",
    "closed_at": "2023-09-02T14:31:05Z",
    "labels": [
      "good first issue",
      "help wanted",
      "triaged: documentation"
    ],
    "url": "https://github.com/openssl/openssl/issues/21582",
    "body": "I expect the name to have changed at some point, what is the new name?",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/21582/comments",
    "author": "fwh-dc",
    "comments": [
      {
        "user": "mattcaswell",
        "created_at": "2023-07-28T08:29:05Z",
        "body": "It got split into two in OpenSSL 1.1.0 and is now called `tls_get_message_header` and `tls_get_message_body`"
      },
      {
        "user": "heygauri",
        "created_at": "2023-08-27T13:40:04Z",
        "body": "Hello, I'm interested in contributing to this issue. Additionally, I'd like to clarify the scope of the work involved. It seems that the tasks can be summarized as follows:\r\n\r\n- Replacing instances of \"ssl3_get_message()\" with \"tls_get_message_header\" or \"tls_get_message_body\" in source code comments.\r\n- Ensuring that the documentation is updated to reflect these changes.\r\n\r\nCould you please confirm if this understanding is accurate? If so, I'm keen on working on this issue. Thank you!"
      },
      {
        "user": "mattcaswell",
        "created_at": "2023-08-29T07:28:49Z",
        "body": "> Replacing instances of \"ssl3_get_message()\" with \"tls_get_message_header\" or \"tls_get_message_body\" in source code comments.\r\n\r\nYes.\r\n\r\n> Ensuring that the documentation is updated to reflect these changes.\r\n\r\nAs far as I can tell this isn't referred to anywhere outside of the source code comments so there shouldn't be anything else to do.\r\n\r\nYou should target the master branch in any change that you make."
      }
    ]
  },
  {
    "number": 21534,
    "title": "Unreachable code and many other problems in x509\\by_file.c",
    "created_at": "2023-07-24T12:28:22Z",
    "closed_at": "2023-08-04T19:07:20Z",
    "labels": [
      "good first issue",
      "help wanted",
      "triaged: cleanup"
    ],
    "url": "https://github.com/openssl/openssl/issues/21534",
    "body": "OpenSSL 3.0, 3.1, master\r\n\r\nI see a number of problems in file x509\\by_file.c:\r\n1) Unreachable code\r\nIt is impossible to get to lines 146-147 and 208-209\r\n```\r\nif (ret == 0)\r\n    ERR_raise(ERR_LIB_X509, X509_R_NO_CERTIFICATE_FOUND);\r\n```\r\nin functions `X509_load_cert_file_ex()`  and `X509_load_crl_file`\r\n\r\n2) Lots of redundant code\r\nFor example, in function `X509_load_cert_file_ex`\r\non line 99, if `in` equal NULL call goto and execute free `in` (it`s NULL) and `x` (it`s NULL also). On lines 132-133 execute free `x`, but after that we go to the lines under `err`, where we free again `x`.\r\nAnd similar in other places in code.\r\n\r\n3) No oiptimal check\r\nOn lines 104-107 in `X509_load_cert_file_ex` there is check \r\n```\r\nif (type != X509_FILETYPE_PEM && type != X509_FILETYPE_ASN1) {\r\n    ERR_raise(ERR_LIB_X509, X509_R_BAD_X509_FILETYPE);\r\n    goto err;\r\n}\r\n```\r\nbut it would be more optimal to use `else` on line 146 instead of it\r\n\r\n4) Breaking the code style\r\n\r\nWhat about this? Can I fix it all in one PR?",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/21534/comments",
    "author": "nv-dmd",
    "comments": [
      {
        "user": "t8m",
        "created_at": "2023-07-24T13:43:27Z",
        "body": "In general just cleanups or refactorings should go into master branch. If there is anything that is a bug fix (unreachable code isn't such case, but maybe some unreachable code can be a consequence of a bug), it should go into all 3.x branches. \r\n\r\nSo please submit one PR for this kind of changes but if you find a bug, a separate PR for 3.x backport might be needed."
      }
    ]
  },
  {
    "number": 21449,
    "title": "AppleTV OpenSSL keep crashing",
    "created_at": "2023-07-13T13:36:28Z",
    "closed_at": "2023-08-24T14:10:33Z",
    "labels": [
      "help wanted",
      "triaged: bug"
    ],
    "url": "https://github.com/openssl/openssl/issues/21449",
    "body": "The 5% of my users get into this OpenSSL crash on AppleTV. After some investigation, I believe this happens when making a network request to play video (http, https, etc):\r\n\r\n```\r\nSIGSEGV 0x0000000000000000\r\n0\r\nAppName\r\nOPENSSL_strcasecmp + 4344932564\r\n1\r\nAppName\r\nobj_name_cmp + 4345074288\r\n2\r\nAppName\r\ngetrn + 4344887892\r\n3\r\nAppName\r\nOPENSSL_LH_insert + 4344886804\r\n4\r\nAppName\r\nlh_OBJ_NAME_insert + 4345072364\r\n5\r\nAppName\r\nOBJ_NAME_add + 4345072060\r\n6\r\nAppName\r\nopenssl_add_all_ciphers_int + 4344593380\r\n7\r\nAppName\r\nossl_init_add_all_ciphers + 4344917204\r\n8\r\nAppName\r\nossl_init_add_all_ciphers_ossl_ + 4344916440\r\n9\r\nlibsystem_pthread.dylib\r\n__pthread_once_handler + 68\r\n10\r\nlibsystem_platform.dylib\r\n_os_once_callout + 28\r\n11\r\nlibsystem_pthread.dylib\r\npthread_once + 92\r\n12\r\nAppName\r\nCRYPTO_THREAD_run_once + 4344995508\r\n13\r\nAppName\r\nOPENSSL_init_crypto + 4344915260\r\n14\r\nAppName\r\nOPENSSL_init_ssl + 97016\r\n15\r\nAppName\r\nSSL_CTX_new_ex + 114816\r\n16\r\nAppName\r\nSSL_CTX_new + 117008\r\n17\r\nAppName\r\ntls_open + 4343277252\r\n18\r\nAppName\r\nclosure #1 in MEPlayerItem.read() + 4337670108\r\n19\r\nAppName\r\n<compiler-generated> - Line 4337679804\r\npartial apply for closure #1 in MEPlayerItem.prepareToPlay() + 4337679804\r\n20\r\nAppName\r\n<compiler-generated> - Line 4335567676\r\nthunk for @escaping @callee_guaranteed () -> () + 4335567676\r\n21\r\nFoundation\r\n__NSBLOCKOPERATION_IS_CALLING_OUT_TO_A_BLOCK__ + 16\r\n22\r\nFoundation\r\n-[NSBlockOperation main] + 100\r\n23\r\nFoundation\r\n__NSOPERATION_IS_INVOKING_MAIN__ + 12\r\n24\r\nFoundation\r\n-[NSOperation start] + 684\r\n25\r\nFoundation\r\n__NSOPERATIONQUEUE_IS_STARTING_AN_OPERATION__ + 12\r\n26\r\nFoundation\r\n__NSOQSchedule_f + 168\r\n27\r\nlibdispatch.dylib\r\n_dispatch_block_async_invoke2 + 104\r\n28\r\nlibdispatch.dylib\r\n_dispatch_client_callout + 16\r\n29\r\nlibdispatch.dylib\r\n_dispatch_continuation_pop + 444\r\n30\r\nlibdispatch.dylib\r\n_dispatch_async_redirect_invoke + 760\r\n31\r\nlibdispatch.dylib\r\n_dispatch_root_queue_drain + 340\r\n32\r\nlibdispatch.dylib\r\n_dispatch_worker_thread2 + 172\r\n33\r\nlibsystem_pthread.dylib\r\n_pthread_wqthread + 224\r\n34\r\nlibsystem_pthread.dylib\r\nstart_wqthread + 8\r\n```",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/21449/comments",
    "author": "matteogobbi",
    "comments": [
      {
        "user": "paulidale",
        "created_at": "2023-07-16T23:45:57Z",
        "body": "Can you provide any further details?  OpenSSL version for a start but a trackback with debug information or a reproducer would be ideal."
      },
      {
        "user": "matteogobbi",
        "created_at": "2023-07-17T10:29:29Z",
        "body": "Hello. Version 3.0.7 but I think it could happen also with later versions. Stack trace information is attached.This is reproduced by thousands of users when they try to play https streamings. Unfortunately I don’t have other info to attach. Sent from my iPhoneOn Jul 17, 2023, at 1:46 AM, Pauli ***@***.***> wrote:﻿\r\nCan you provide any further details?  OpenSSL version for a start but a trackback with debug information or a reproducer would be ideal.\r\n\r\n—Reply to this email directly, view it on GitHub, or unsubscribe.You are receiving this because you authored the thread.Message ID: ***@***.***>"
      },
      {
        "user": "t8m",
        "created_at": "2023-07-17T12:10:03Z",
        "body": "This sounds like some problem with the application - i.e., some race condition when initializing OpenSSL. As a workaround I'd recommend calling OPENSSL_init_ssl() on application startup instead of relying on implicit initialization.\r\n"
      },
      {
        "user": "matteogobbi",
        "created_at": "2023-08-01T12:53:24Z",
        "body": "After further investigation, this crashes only with certain URLs. I tried with certain `.ts` streams and it does crash, whereas with others it doesn't. Here a local stack trace:\r\n\r\n```\r\n#0\t0x0000000101c617d4 in OPENSSL_strcasecmp ()\r\n#1\t0x0000000101c806b4 in obj_name_cmp ()\r\n#2\t0x0000000101c5700c in getrn ()\r\n#3\t0x0000000101c56c7f in OPENSSL_LH_insert ()\r\n#4\t0x0000000101c7fead in lh_OBJ_NAME_insert ()\r\n#5\t0x0000000101c7fdbc in OBJ_NAME_add ()\r\n#6\t0x0000000101bfd8e2 in openssl_add_all_ciphers_int ()\r\n#7\t0x0000000101c5dc49 in ossl_init_add_all_ciphers ()\r\n#8\t0x0000000101c5d949 in ossl_init_add_all_ciphers_ossl_ ()\r\n#9\t0x0000000111ec9946 in __pthread_once_handler ()\r\n#10\t0x00000001118f1f86 in _os_once_callout ()\r\n#11\t0x0000000111ec98f4 in pthread_once ()\r\n#12\t0x0000000101c713fd in CRYPTO_THREAD_run_once ()\r\n#13\t0x0000000101c5d4f9 in OPENSSL_init_crypto ()\r\n#14\t0x0000000101ece1fb in OPENSSL_init_ssl ()\r\n#15\t0x000000010139f3f0 in SSL_library_init at /Users/UserName/AppName/AppName-iOS/Pods/FFmpegKit/Sources/FFmpegKit/include/openssl_shim.h:14\r\n#16\t0x000000010138bca5 in closure #1 in variable initialization expression of static MEPlayerItem.onceInitial at /Users/UserName/AppName/AppName-iOS/Pods/KSPlayer/Sources/KSPlayer/MEPlayer/MEPlayerItem.swift:89\r\n#17\t0x000000010138bc79 in one-time initialization function for onceInitial at /Users/UserName/AppName/AppName-iOS/Pods/KSPlayer/Sources/KSPlayer/MEPlayer/MEPlayerItem.swift:88\r\n#18\t0x00000001117e4e2b in _dispatch_client_callout ()\r\n#19\t0x00000001117e6469 in _dispatch_once_callout ()\r\n#20\t0x000000010138ca2a in MEPlayerItem.onceInitial.unsafeMutableAddressor at /Users/UserName/AppName/AppName-iOS/Pods/KSPlayer/Sources/KSPlayer/MEPlayer/MEPlayerItem.swift:88\r\n#21\t0x000000010138d772 in MEPlayerItem.init(url:options:) at /Users/UserName/AppName/AppName-iOS/Pods/KSPlayer/Sources/KSPlayer/MEPlayer/MEPlayerItem.swift:136\r\n#22\t0x000000010138ce2d in MEPlayerItem.__allocating_init(url:options:) ()\r\n#23\t0x000000010130f774 in KSMEPlayer.init(url:options:) at /Users/UserName/AppName/AppName-iOS/Pods/KSPlayer/Sources/KSPlayer/MEPlayer/KSMEPlayer.swift:96\r\n#24\t0x000000010130f212 in KSMEPlayer.__allocating_init(url:options:) ()\r\n#25\t0x000000010131732d in protocol witness for MediaPlayerProtocol.init(url:options:) in conformance KSMEPlayer ()\r\n#26\t0x0000000101342e96 in KSPlayerLayer.init(url:options:delegate:) at /Users/UserName/AppName/AppName-iOS/Pods/KSPlayer/Sources/KSPlayer/AVPlayer/KSPlayerLayer.swift:172\r\n#27\t0x00000001013425e2 in KSPlayerLayer.__allocating_init(url:options:delegate:) ()\r\n#28\t0x00000001013dc055 in PlayerView.set(url:options:) at /Users/UserName/AppName/AppName-iOS/Pods/KSPlayer/Sources/KSPlayer/Core/PlayerView.swift:152\r\n#29\t0x0000000101425185 in VideoPlayerView.set(resource:definitionIndex:isSetUrl:) at /Users/UserName/AppName/AppName-iOS/Pods/KSPlayer/Sources/KSPlayer/Video/VideoPlayerView.swift:349\r\n#30\t0x0000000101425339 in VideoPlayerView.set(url:options:) at /Users/UserName/AppName/AppName-iOS/Pods/KSPlayer/Sources/KSPlayer/Video/VideoPlayerView.swift:354\r\n```"
      },
      {
        "user": "matteogobbi",
        "created_at": "2023-08-01T15:08:36Z",
        "body": "Ok I can confirm that where I put `SSL_library_init()` even at app startup in the `AppDelegate`, the app crashes:\r\n\r\n```\r\n#0\t0x0000000105d9f7d4 in OPENSSL_strcasecmp ()\r\n#1\t0x0000000105dbe6b4 in obj_name_cmp ()\r\n#2\t0x0000000105d9500c in getrn ()\r\n#3\t0x0000000105d94c7f in OPENSSL_LH_insert ()\r\n#4\t0x0000000105dbdead in lh_OBJ_NAME_insert ()\r\n#5\t0x0000000105dbddbc in OBJ_NAME_add ()\r\n#6\t0x0000000105d3b8e2 in openssl_add_all_ciphers_int ()\r\n#7\t0x0000000105d9bc49 in ossl_init_add_all_ciphers ()\r\n#8\t0x0000000105d9b949 in ossl_init_add_all_ciphers_ossl_ ()\r\n#9\t0x00000001184e0946 in __pthread_once_handler ()\r\n#10\t0x00000001183a7f86 in _os_once_callout ()\r\n#11\t0x00000001184e08f4 in pthread_once ()\r\n#12\t0x0000000105daf3fd in CRYPTO_THREAD_run_once ()\r\n#13\t0x0000000105d9b4f9 in OPENSSL_init_crypto ()\r\n#14\t0x000000010600c1fb in OPENSSL_init_ssl ()\r\n#15\t0x0000000104fdbbe2 in SSL_library_init at /Path/openssl_shim.h:14\r\n```"
      },
      {
        "user": "jamuir",
        "created_at": "2023-08-24T02:10:52Z",
        "body": "@matteogobbi :  can you tell me how to reproduce the crash in a dev environment?"
      },
      {
        "user": "matteogobbi",
        "created_at": "2023-08-24T08:29:20Z",
        "body": "I think it was an old version of OpenSSL Sent from my iPhoneOn Aug 24, 2023, at 4:11 AM, James Muir ***@***.***> wrote:﻿\r\n@matteogobbi :  can you tell me how to reproduce the crash in a dev environment?\r\n\r\n—Reply to this email directly, view it on GitHub, or unsubscribe.You are receiving this because you were mentioned.Message ID: ***@***.***>"
      },
      {
        "user": "jamuir",
        "created_at": "2023-08-24T13:43:20Z",
        "body": "I am able to install old versions of OpenSSL.\r\n\r\nWhat is missing from the conversation here is a procedure to reproduce the defect (i.e. you did not provide any **steps-to-reproduce**).\r\n\r\nWould you be able to provide those details?   What steps should I follow to reproduce this defect?"
      },
      {
        "user": "matteogobbi",
        "created_at": "2023-08-24T13:49:45Z",
        "body": "It’s not reproducible in todays versions. This version was probably from 10-12 years ago. And it was a hidden library in my project conflicting with most recent ones. It’s pointless to do through that now. You can close the ticket. However, I was able to reproduce the bug simili initializing OpenSSL. Thank you. Sent from my iPhoneOn Aug 24, 2023, at 3:43 PM, James Muir ***@***.***> wrote:﻿\r\nI am able to install old versions of OpenSSL.\r\nWhat is missing from the conversation here is a procedure to reproduce the defect (i.e. you did not provide any steps-to-reproduce).\r\nWould you be able to provide those details?   What steps should I follow to reproduce this defect?\r\n\r\n—Reply to this email directly, view it on GitHub, or unsubscribe.You are receiving this because you were mentioned.Message ID: ***@***.***>"
      },
      {
        "user": "t8m",
        "created_at": "2023-08-24T14:10:33Z",
        "body": "I am closing this as obsolete now."
      }
    ]
  },
  {
    "number": 21330,
    "title": "No pointer check for NULL before it is dereferenced in evp_pkey_asn1_ctrl",
    "created_at": "2023-06-30T12:55:41Z",
    "closed_at": "2023-07-07T09:08:15Z",
    "labels": [
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/21330",
    "body": "OpenSSL 3.0.7\r\n\r\nIn function evp_pkey_asn1_ctrl, there is no pointer check to NULL before it is dereferenced. This function is used in functions\r\nEVP_PKEY_set1_encoded_public_key, EVP_PKEY_get1_encoded_public_key, EVP_PKEY_get_default_digest_nid. \r\nFunctions EVP_PKEY_set1_encoded_public_key and EVP_PKEY_get1_encoded_public_key are deprecated in OpenSSL 3.0, but function EVP_PKEY_get_default_digest_nid can be used. In EVP_PKEY_get_default_digest_nid (and other depreceted functions) can be passed NULL as the 1st argument, next this NULL pointer is passed as 1st argument in call to function evp_pkey_asn1_ctrl, where it is dereferenced.\r\n\r\nMaybe need to add a check EVP_PKEY *pkey to NULL in a function evp_pkey_asn1_ctrl and return -2 if it equal NULL?",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/21330/comments",
    "author": "nv-dmd",
    "comments": [
      {
        "user": "nv-dmd",
        "created_at": "2023-07-05T07:13:39Z",
        "body": "What about this issuer? Can I make PR?"
      },
      {
        "user": "t8m",
        "created_at": "2023-07-05T10:45:28Z",
        "body": "We do not do similar NULL checks in other similar functions. I am not sure this is really worth it."
      },
      {
        "user": "nv-dmd",
        "created_at": "2023-07-06T12:28:07Z",
        "body": "Maybe then add a check to NULL the 1st argument in the functions EVP_PKEY_set1_encoded_public_key, EVP_PKEY_get1_encoded_public_key, EVP_PKEY_get_default_digest_nid and return 0 if equal NULL?"
      },
      {
        "user": "paulidale",
        "created_at": "2023-07-07T02:55:40Z",
        "body": "That would be okay I think."
      },
      {
        "user": "nv-dmd",
        "created_at": "2023-07-07T09:08:15Z",
        "body": "Sorry. I missed that this issue has already been fixed in the pull request #20294. \r\nClose this issue/"
      }
    ]
  },
  {
    "number": 21287,
    "title": "No target for ARM64 iOS simulator",
    "created_at": "2023-06-27T04:58:54Z",
    "closed_at": "2023-07-25T10:33:58Z",
    "labels": [
      "branch: master",
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/21287",
    "body": "Currently, there are no targets for building OpenSSL for the iOS simulator as ARM64 (to use the Simulator on M1/M2 devices). The iossimulator-xcrun target will always build for x86_64 at the moment.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/21287/comments",
    "author": "sylveon",
    "comments": [
      {
        "user": "tom-cosgrove-arm",
        "created_at": "2023-06-28T14:16:06Z",
        "body": "> The `iossimulator-xcrun` target will always build for `x86_64` at the moment.\r\n\r\nI don't see that.\r\n\r\nIf I run `perl Configure iossimulator-xcrun` then `make` on an Apple Silicon Mac, I see (pick a random `.o`)\r\n\r\n```\r\n$ file crypto/evp/libcrypto-lib-p_verify.o\r\ncrypto/evp/libcrypto-lib-p_verify.o: Mach-O 64-bit object arm64\r\n```\r\n\r\nand\r\n\r\n```\r\n$ lipo -archs libcrypto.a\r\narm64\r\n```\r\n\r\nI also don't see where `x86_64` is forced in the `iossimulator-xcrun`, `ios-common` or `darwin-common` configurations"
      },
      {
        "user": "sylveon",
        "created_at": "2023-06-28T14:21:26Z",
        "body": "Sorry, should've mentioned the CI machines I'm using still run on Intel-based Macs, so x86_64 is what gets picked in this case since no architecture is forced. Perhaps there should be extra targets so we can force a specific architecture for Simulator builds (x86_64 build on ARM and ARM build on x86_64)"
      }
    ]
  },
  {
    "number": 21259,
    "title": "Configuration step for DJGPP/Watt32 does not work",
    "created_at": "2023-06-21T23:18:24Z",
    "closed_at": "2024-02-22T15:52:15Z",
    "labels": [
      "branch: 1.1.1",
      "help wanted",
      "triaged: bug"
    ],
    "url": "https://github.com/openssl/openssl/issues/21259",
    "body": "Hi there, attempting to build OpenSSL on linux using the DJGPP/Watt32 toolchain does not work as intended\r\n\r\nSimply running the following configure statement:\r\n\r\n```\r\n# ./Configure no-threads -DOPENSSL_DEV_NO_ATOMICS --prefix=$HOME/djgpp DJGPP\r\nConfiguring OpenSSL version 1.1.1u (0x1010115fL) for DJGPP\r\n```\r\n\r\nrenders the following output:\r\n\r\n```\r\n#  perl configdata.pm --dump\r\n\r\nCommand line (with current working directory = .):\r\n\r\n    /usr/bin/perl ./Configure no-threads -DOPENSSL_DEV_NO_ATOMICS --prefix=/root/djgpp DJGPP\r\n\r\nPerl information:\r\n\r\n    /usr/bin/perl\r\n    5.34.0 for x86_64-linux-gnu-thread-multi\r\n\r\n[cut]\r\n\r\nConfig target attributes:\r\n\r\n[cut]\r\n    CFLAGS => \"-fomit-frame-pointer -O2 -Wall\",\r\n[cut]\r\n    cflags => \"-I/dev/env/WATT_ROOT/inc -DTERMIOS -DL_ENDIAN\",\r\n[cut]\r\n    lflags => \"-L/dev/env/WATT_ROOT/lib\",\r\n\r\n[truncated]\r\n\r\n```\r\n\r\nthe above configuration obviously does not work.\r\nI'm not sure what distribution/os exposes `/dev/env/*` but certainly not ones I'm familiar with\r\n\r\n\r\n----------------------\r\n\r\nthat being said, the following proposed patch corrects what I believe the configuration developer intended\r\n\r\n```diff\r\ndiff --git a/Configurations/50-djgpp.conf b/Configurations/50-djgpp.conf\r\nindex a8853a81..b2809054 100644\r\n--- a/Configurations/50-djgpp.conf\r\n+++ b/Configurations/50-djgpp.conf\r\n@@ -7,9 +7,9 @@ my %targets = (\r\n         inherit_from     => [ asm(\"x86_asm\") ],\r\n         CC               => \"gcc\",\r\n         CFLAGS           => \"-fomit-frame-pointer -O2 -Wall\",\r\n-        cflags           => \"-I/dev/env/WATT_ROOT/inc -DTERMIOS -DL_ENDIAN\",\r\n+        cflags           => \"-I$ENV{'WATT_ROOT'}/inc -DTERMIOS -DL_ENDIAN\",\r\n         sys_id           => \"MSDOS\",\r\n-        lflags           => add(\"-L/dev/env/WATT_ROOT/lib\"),\r\n+        lflags           => add(\"-L$ENV{'WATT_ROOT'}/lib\"),\r\n         ex_libs          => add(\"-lwatt\"),\r\n         bn_ops           => \"BN_LLONG\",\r\n         perlasm_scheme   => \"a.out\",\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/21259/comments",
    "author": "Neo-Desktop",
    "comments": [
      {
        "user": "Neo-Desktop",
        "created_at": "2023-06-22T03:30:48Z",
        "body": "this also applies to the 3x branches as well"
      },
      {
        "user": "jwt27",
        "created_at": "2023-06-22T20:02:00Z",
        "body": "This works in the CI cross-builds since the Watt-32 include path there is added\r\nby a `gcc.specs` file.  The `/dev/env` paths are then ignored - they only exist\r\nin a native build.\r\n\r\nProposed patch looks good to me, that should work for all configurations.\r\n\r\nedit:\r\nOr, maybe not.  If `$WATT_ROOT` is unset then this adds `-I/inc -L/lib` which\r\nwill likely cause trouble when linking the test suite programs.\r\n"
      },
      {
        "user": "Neo-Desktop",
        "created_at": "2023-06-22T20:20:57Z",
        "body": "in that case perhaps a default value of /dev/env would be a good idea? I can probably add that"
      },
      {
        "user": "jwt27",
        "created_at": "2023-06-22T20:38:24Z",
        "body": "That would work, yes.  Even nicer would be to omit the `-I`/`-L` flags\r\naltogether in that case.\r\n"
      },
      {
        "user": "t8m",
        "created_at": "2024-02-22T15:52:15Z",
        "body": "The version 1.1.1 is not supported anymore. Closing. If this is still an issue with currently supported releases, please open a new issue."
      }
    ]
  },
  {
    "number": 21246,
    "title": "openssl3.0 universal libs crash in our app on mac",
    "created_at": "2023-06-20T09:44:21Z",
    "closed_at": "2023-06-21T06:21:02Z",
    "labels": [
      "help wanted",
      "triaged: question",
      "resolved: answered"
    ],
    "url": "https://github.com/openssl/openssl/issues/21246",
    "body": "I created x86_64 and arm64 dylib binaries for mac. \r\nThis generated symlink libcrypto.dylib which points to libcrypto.3.dylib\r\nalso libssl.3.dylib . \r\nOriginally our app used libcrypto.dylib , libssl.dylib . So i deleted symbolic link and renamed  libcrypto.3.dylib as libcrypto.dylib and \r\nlibssl.3.dylib as libssl.dylib  . Now when i try to run my app on mac , i get instant crash.\r\n\r\n\r\nconsole  logs :\r\ndlopen(/Applications/sample app/sample.app/Contents/Frameworks/samplelib.framework/sample, 265): Library not loaded: /Users/anils/openssl/x86_64/dll/release/lib/libssl.3.dylib\r\n\r\nThough i have not given any reference of this lib in my code . i am not sure where am i getting this error from. why is it try to find reference from originally created dylib and not name change dylib. ?\r\n\r\nDoes libcrypto internally references and load libssl.3.dylib ?\r\nIs direct name changing not allowed ?\r\nHow do i make sure to use libcrypto.dylib and libssl.dylib name for the openssl libs with out the number reference ?",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/21246/comments",
    "author": "aniljadaun",
    "comments": [
      {
        "user": "paulidale",
        "created_at": "2023-06-21T00:15:26Z",
        "body": "Suggestion: don't change the names.\r\n\r\nOpenSSL doesn't load either, this happens from your application (probably via a dynamic linker).\r\n\r\nSomeone knowledgeable about MacOS might be able to provide insight into your other questions.\r\n\r\n"
      },
      {
        "user": "levitte",
        "created_at": "2023-06-21T06:08:04Z",
        "body": "When you link your program with dynamic libraries, the \"real name\" (libssl.3.dylib, for example) is stored in the program image, so when the program is activated, it knows what file to look for.\r\n\r\nBecause you've removed (renamed) the file that has the \"real name\", your program can't start.\r\n\r\nThe symlink is a convenience, so the programmer doesn't have to remember the version of the default library installation. "
      }
    ]
  },
  {
    "number": 21237,
    "title": "SM2 encrypt and decrypt by OpenSSL",
    "created_at": "2023-06-19T06:51:50Z",
    "closed_at": "2023-06-26T01:33:31Z",
    "labels": [
      "help wanted",
      "triaged: documentation",
      "triaged: question"
    ],
    "url": "https://github.com/openssl/openssl/issues/21237",
    "body": "Hi, OpenSSL developers,\r\n\r\nCould you provide a sample code for SM2 encrypt and decrypt based on OpenSSL?\r\nI can't find such in anywhere. Thanks a lot for your support!",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/21237/comments",
    "author": "xiaonan-INTC",
    "comments": [
      {
        "user": "t8m",
        "created_at": "2023-06-23T13:05:30Z",
        "body": "There could be a demo added to demos/encrypt"
      },
      {
        "user": "xiaonan-INTC",
        "created_at": "2023-06-25T09:04:00Z",
        "body": "> There could be a demo added to demos/encrypt\r\n\r\nDear t8m, \r\n\r\nYes, here is a sample code in demos/encrypt/, it is for rsa, but for sm2, maybe a little different, do you have a plan of adding a sample code sm2? :)"
      },
      {
        "user": "paulidale",
        "created_at": "2023-06-25T23:57:28Z",
        "body": "It isn't on our roadmap currently.\r\nIt shouldn't be all that different from the RSA example."
      },
      {
        "user": "xiaonan-INTC",
        "created_at": "2023-06-26T01:33:26Z",
        "body": "> It isn't on our roadmap currently. It shouldn't be all that different from the RSA example.\r\n\r\nThanks a lot, paulidale."
      }
    ]
  },
  {
    "number": 21224,
    "title": "CSR verification fails with SHA3-384 and ECDSA",
    "created_at": "2023-06-16T16:24:10Z",
    "closed_at": "2024-06-20T18:51:11Z",
    "labels": [
      "branch: master",
      "good first issue",
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/21224",
    "body": "Hello,\r\n\r\nI create a key with ECDSA and then create a Certificate Signing Request (CSR) with ECDSA key and SHA3-384. When I want to create an intermediate.csr certificate, I'll get the following error. It looks like that verifying CSR is failing:\r\n\r\nError while verifying certificate request self-signature:\r\n    ```\r\n40774836027F0000:error:068000C7:asn1 encoding routines:ASN1_item_verify_ctx:unknown signature algorithm:crypto/asn1/a_verify.c:136:\r\n    ```\r\n\r\nPlease help!\r\n\r\nTo reproduce the error:\r\n\r\n    ```\r\n    $ openssl ecparam -out root.key -name secp384r1 -genkey\r\n    $ openssl req -new -x509 -key root.key -out root.crt -sha3-384 -subj \"/C=CA/ST=State/L=City/O=Organization/OU=Organization Unit/CN=Common Name\"\r\n    $ openssl ecparam -out intermediate.key -name secp384r1 -genkey\r\n    $ openssl req -new -key intermediate.key -out intermediate.csr -sha3-384 -subj \"/C=CA/ST=State/L=City/O=Organization/OU=Organization Unit/CN=Common Name\"\r\n    $ openssl x509 -req -in intermediate.csr -CA root.crt -CAkey root.key -out intermediate.crt -sha3-384 -days 36500 -CAcreateserial\r\n\r\n    ```\r\n \r\n\r\nError while verifying certificate request self-signature:\r\n    ```\r\n40774836027F0000:error:068000C7:asn1 encoding routines:ASN1_item_verify_ctx:unknown signature algorithm:crypto/asn1/a_verify.c:136:\r\n    ```\r\n\r\nor\r\n\r\n    ```\r\n    $ openssl req -text -noout -verify -in intermediate.csr\r\n    ```\r\n   \r\nOutput:\r\n    ```\r\n40D7AC8BD77F0000:error:068000C7:asn1 encoding routines:ASN1_item_verify_ctx:unknown signature algorithm:crypto/asn1/a_verify.c:136:\r\n    ```\r\n\r\n\r\nIt looks like verification fails in OBJ_bsearch_sig() where it returns NULL in :\r\n    ```\r\n...\\openssl\\crypto\\objects\\obj_xref.c\r\n    ```\r\n\r\nCode:\r\n\r\n     ```\r\n    static int ossl_obj_find_sigid_algs(int signid, int *pdig_nid, int *ppkey_nid,\r\n                                        int lock)\r\n    {\r\n        nid_triple tmp;\r\n        const nid_triple *rv;\r\n        int idx;\r\n    \r\n        if (signid == NID_undef)\r\n            return 0;\r\n    \r\n        tmp.sign_id = signid;\r\n        rv = OBJ_bsearch_sig(&tmp, sigoid_srt, OSSL_NELEM(sigoid_srt));\r\n        if (rv == NULL) {\r\n            if (!obj_sig_init())\r\n                return 0;\r\n            if (lock && !CRYPTO_THREAD_read_lock(sig_lock)) {\r\n                ERR_raise(ERR_LIB_OBJ, ERR_R_UNABLE_TO_GET_READ_LOCK);\r\n                return 0;\r\n            }\r\n            if (sig_app != NULL) {\r\n                idx = sk_nid_triple_find(sig_app, &tmp);\r\n                if (idx >= 0)\r\n                    rv = sk_nid_triple_value(sig_app, idx);\r\n            }\r\n            if (lock)\r\n                CRYPTO_THREAD_unlock(sig_lock);\r\n            if (rv == NULL)\r\n                return 0;\r\n        }\r\n    \r\n        if (pdig_nid != NULL)\r\n            *pdig_nid = rv->hash_id;\r\n        if (ppkey_nid != NULL)\r\n            *ppkey_nid = rv->pkey_id;\r\n        return 1;\r\n    }\r\n\r\n\r\n    ```\r\n\r\n  sigoid_srt[] In ...\\openssl\\crypto\\objects\\obj_xref.h does not include:\r\n\r\n    ```\r\n     {NID_ecdsa_with_SHA3_384, NID_sha3_384, NID_X9_62_id_ecPublicKey}\r\n\r\n    ```\r\n\r\nEven after adding the above line to obj_xref.h, OBJ_bsearch_sig() cannot find the corresponding NID.\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/21224/comments",
    "author": "shahabalilou",
    "comments": [
      {
        "user": "preveen-stack",
        "created_at": "2023-06-17T05:03:11Z",
        "body": "@shahabalilou please share the openssl version and operating system version\r\nAlso, please check the markdown formatting of the comment"
      },
      {
        "user": "shahabalilou",
        "created_at": "2023-06-19T13:20:08Z",
        "body": "> @shahabalilou please share the openssl version and operating system version Also, please check the markdown formatting of the comment\r\n\r\nOpenSSL 3.0.7\r\nCentOS Linux release 7.7.1908 "
      },
      {
        "user": "t8m",
        "created_at": "2023-06-23T13:23:55Z",
        "body": "It would have to be added to `obj_xref.txt` and `make update` run. Of course there are other SHA3 hash algorithms with ECDSA missing there too.\r\n\r\n"
      },
      {
        "user": "shahabalilou",
        "created_at": "2023-06-23T13:30:20Z",
        "body": "> It would have to be added to `obj_xref.txt` and `make update` run. Of course there are other SHA3 hash algorithms with ECDSA missing there too.\r\n\r\nYeah, I figured it out and fixed it. We have to add it to obj_xref.h too. I can upstream it but don't have permission yet."
      },
      {
        "user": "erbsland-dev",
        "created_at": "2024-06-20T18:35:02Z",
        "body": "@t8m This is fixed, I just checked if it applies on the shown cases.\r\n\r\n```bash\r\n$ openssl ecparam -out root.key -name secp384r1 -genkey\r\n$ openssl req -new -x509 -key root.key -out root.crt -sha3-384 -subj \"/C=CA/ST=State/L=City/O=Organization/OU=Organization Unit/CN=Common Name\"\r\n$ openssl ecparam -out intermediate.key -name secp384r1 -genkey\r\n$ openssl req -new -key intermediate.key -out intermediate.csr -sha3-384 -subj \"/C=CA/ST=State/L=City/O=Organization/OU=Organization Unit/CN=Common Name\"\r\n$ openssl x509 -req -in intermediate.csr -CA root.crt -CAkey root.key -out intermediate.crt -sha3-384 -days 36500 -CAcreateserial\r\n```\r\n\r\nOutput:\r\n```\r\nCertificate request self-signature ok\r\nsubject=C=CA, ST=State, L=City, O=Organization, OU=Organization Unit, CN=Common Name\r\n```\r\n\r\n```bash\r\n$ /usr/local/bin/openssl req -text -noout -verify -in intermediate.csr\r\nCertificate request self-signature verify OK\r\n```"
      }
    ]
  },
  {
    "number": 21036,
    "title": "failed to parse sm2 key encryped by legacy or 1.1.1",
    "created_at": "2023-05-24T02:58:37Z",
    "closed_at": "2024-10-29T14:58:40Z",
    "labels": [
      "branch: master",
      "help wanted",
      "triaged: bug",
      "branch: 3.0",
      "branch: 3.1",
      "branch: 3.2",
      "inactive"
    ],
    "url": "https://github.com/openssl/openssl/issues/21036",
    "body": "OpenSSL version：master\r\nCommand line test：\r\nopenssl genpkey -algorithm SM2  -out  sig.key\r\nopenssl ec -in sig.key -sm4 -out sig.key.enc\r\nopenssl ec -noout -text -in sig.key.enc\r\n\r\nResult：\r\nCould not find key etc. of private key from sig.key.enc\r\n\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/21036/comments",
    "author": "lan1120",
    "comments": [
      {
        "user": "nhorman",
        "created_at": "2024-06-07T14:57:05Z",
        "body": "marking as inactive, will be closed at the completion of 3.4 dev without further input\n"
      }
    ]
  },
  {
    "number": 20512,
    "title": "build problem with conan for openssl/1.1.1s",
    "created_at": "2023-03-14T15:17:59Z",
    "closed_at": "2024-02-22T15:50:48Z",
    "labels": [
      "branch: 1.1.1",
      "help wanted",
      "triaged: question"
    ],
    "url": "https://github.com/openssl/openssl/issues/20512",
    "body": "I tried building libcurl with conan and i keep getting the troubleshooting that my build fails: \r\n```\r\nERROR: openssl/1.1.1s: Error in build() method, line 724\r\n        autotools.make()\r\n        ConanException: Error 2 while executing make -j12\r\n```\r\nThe troubleshooting only occurs by building openssl/1.1.1s.\r\nIs there a way around this or a fix?\r\nIf more informations would be helpful let me know.\r\n\r\n\r\nMy configdata.pm --dump (later my output and command)\r\n```\r\nCommand line (with current working directory = .):\r\n\r\n    perl ./Configure mingw-conan-Release-Windows-x86_64-gcc-11.2 no-shared --prefix=/ --openssldir=res no-unit-test threads PERL=perl no-tests --release --libdir=lib no-md2\r\n\r\nPerl information:\r\n\r\n    perl\r\n    5.36.0 for x86_64-msys-thread-multi\r\n\r\nEnabled features:\r\n\r\n    aria\r\n    asm\r\n    async\r\n    autoalginit\r\n    autoerrinit\r\n    autoload-config\r\n    bf\r\n    blake2\r\n    camellia\r\n    capieng\r\n    cast\r\n    chacha\r\n    cmac\r\n    cms\r\n    comp\r\n    ct\r\n    deprecated\r\n    des\r\n    dgram\r\n    dh\r\n    dsa\r\n    dso\r\n    dtls\r\n    ec\r\n    ec2m\r\n    ecdh\r\n    ecdsa\r\n    engine\r\n    err\r\n    filenames\r\n    gost\r\n    hw(-.+)?\r\n    idea\r\n    makedepend\r\n    md4\r\n    mdc2\r\n    multiblock\r\n    nextprotoneg\r\n    pinshared\r\n    ocb\r\n    ocsp\r\n    pic\r\n    poly1305\r\n    posix-io\r\n    psk\r\n    rc2\r\n    rc4\r\n    rdrand\r\n    rfc3779\r\n    rmd160\r\n    scrypt\r\n    seed\r\n    siphash\r\n    sm2\r\n    sm3\r\n    sm4\r\n    sock\r\n    srp\r\n    srtp\r\n    sse2\r\n    ssl\r\n    static-engine\r\n    stdio\r\n    threads\r\n    tls\r\n    ts\r\n    ui-console\r\n    whirlpool\r\n    tls1\r\n    tls1-method\r\n    tls1_1\r\n    tls1_1-method\r\n    tls1_2\r\n    tls1_2-method\r\n    tls1_3\r\n    dtls1\r\n    dtls1-method\r\n    dtls1_2\r\n    dtls1_2-method\r\n\r\nDisabled features:\r\n\r\n    afalgeng                [not-linux] OPENSSL_NO_AFALGENG\r\n    asan                    [default]   OPENSSL_NO_ASAN\r\n    buildtest-c++           [default]\r\n    crypto-mdebug           [default]   OPENSSL_NO_CRYPTO_MDEBUG\r\n    crypto-mdebug-backtrace [default]   OPENSSL_NO_CRYPTO_MDEBUG_BACKTRACE\r\n    devcryptoeng            [default]   OPENSSL_NO_DEVCRYPTOENG\r\n    dynamic-engine          [cascade]\r\n    ec_nistp_64_gcc_128     [default]   OPENSSL_NO_EC_NISTP_64_GCC_128\r\n    egd                     [default]   OPENSSL_NO_EGD\r\n    external-tests          [default]   OPENSSL_NO_EXTERNAL_TESTS\r\n    fuzz-libfuzzer          [default]   OPENSSL_NO_FUZZ_LIBFUZZER\r\n    fuzz-afl                [default]   OPENSSL_NO_FUZZ_AFL\r\n    heartbeats              [default]   OPENSSL_NO_HEARTBEATS\r\n    md2                     [option]    OPENSSL_NO_MD2 (skip crypto/md2)\r\n    msan                    [default]   OPENSSL_NO_MSAN\r\n    rc5                     [default]   OPENSSL_NO_RC5 (skip crypto/rc5)\r\n    sctp                    [default]   OPENSSL_NO_SCTP\r\n    shared                  [option]\r\n    ssl-trace               [default]   OPENSSL_NO_SSL_TRACE\r\n    tests                   [option]    OPENSSL_NO_TESTS\r\n    ubsan                   [default]   OPENSSL_NO_UBSAN\r\n    unit-test               [option]    OPENSSL_NO_UNIT_TEST\r\n    weak-ssl-ciphers        [default]   OPENSSL_NO_WEAK_SSL_CIPHERS\r\n    zlib                    [default]\r\n    zlib-dynamic            [default]\r\n    ssl3                    [default]   OPENSSL_NO_SSL3\r\n    ssl3-method             [default]   OPENSSL_NO_SSL3_METHOD\r\n\r\nConfig target attributes:\r\n\r\n    AR => \"ar\",\r\n    ARFLAGS => \"r\",\r\n    CC => \"gcc\",\r\n    CFLAGS => \"-Wall -O3\",\r\n    HASHBANGPERL => \"/usr/bin/env perl\",\r\n    RANLIB => \"ranlib\",\r\n    RC => \"windres\",\r\n    aes_asm_src => \"aes_core.c aes_cbc.c vpaes-x86_64.s aesni-x86_64.s aesni-sha1-x86_64.s aesni-sha256-x86_64.s aesni-mb-x86_64.s\",\r\n    aes_obj => \"aes_core.o aes_cbc.o vpaes-x86_64.o aesni-x86_64.o aesni-sha1-x86_64.o aesni-sha256-x86_64.o aesni-mb-x86_64.o\",\r\n    apps_aux_src => \"win32_init.c\",\r\n    apps_init_src => \"\",\r\n    apps_obj => \"win32_init.o\",\r\n    bf_asm_src => \"bf_enc.c\",\r\n    bf_obj => \"bf_enc.o\",\r\n    bn_asm_src => \"asm/x86_64-gcc.c x86_64-mont.s x86_64-mont5.s x86_64-gf2m.s rsaz_exp.c rsaz-x86_64.s rsaz-avx2.s\",\r\n    bn_obj => \"asm/x86_64-gcc.o x86_64-mont.o x86_64-mont5.o x86_64-gf2m.o rsaz_exp.o rsaz-x86_64.o rsaz-avx2.o\",\r\n    bn_ops => \"SIXTY_FOUR_BIT EXPORT_VAR_AS_FN\",\r\n    build_file => \"Makefile\",\r\n    build_scheme => [ \"unified\", \"unix\" ],\r\n    cast_asm_src => \"c_enc.c\",\r\n    cast_obj => \"c_enc.o\",\r\n    cflags => \"-m64 -m64 -O3\",\r\n    chacha_asm_src => \"chacha-x86_64.s\",\r\n    chacha_obj => \"chacha-x86_64.o\",\r\n    cmll_asm_src => \"cmll-x86_64.s cmll_misc.c\",\r\n    cmll_obj => \"cmll-x86_64.o cmll_misc.o\",\r\n    cppflags => \"-DUNICODE -D_UNICODE -DWIN32_LEAN_AND_MEAN -D_MT\",\r\n    cpuid_asm_src => \"x86_64cpuid.s\",\r\n    cpuid_obj => \"x86_64cpuid.o\",\r\n    cxxflags => \"-m64 -O3\",\r\n    defines => [ \"NDEBUG\" ],\r\n    des_asm_src => \"des_enc.c fcrypt_b.c\",\r\n    des_obj => \"des_enc.o fcrypt_b.o\",\r\n    disable => [  ],\r\n    dso_extension => \".dll\",\r\n    dso_scheme => \"win32\",\r\n    ec_asm_src => \"ecp_nistz256.c ecp_nistz256-x86_64.s x25519-x86_64.s\",\r\n    ec_obj => \"ecp_nistz256.o ecp_nistz256-x86_64.o x25519-x86_64.o\",\r\n    enable => [  ],\r\n    ex_libs => \"-lws2_32 -lgdi32 -lcrypt32\",\r\n    exe_extension => \".exe\",\r\n    includes => [  ],\r\n    keccak1600_asm_src => \"keccak1600-x86_64.s\",\r\n    keccak1600_obj => \"keccak1600-x86_64.o\",\r\n    lflags => \"-m64\",\r\n    lib_cflags => \"\",\r\n    lib_cppflags => \"-DL_ENDIAN\",\r\n    lib_defines => [  ],\r\n    md5_asm_src => \"md5-x86_64.s\",\r\n    md5_obj => \"md5-x86_64.o\",\r\n    modes_asm_src => \"ghash-x86_64.s aesni-gcm-x86_64.s\",\r\n    modes_obj => \"ghash-x86_64.o aesni-gcm-x86_64.o\",\r\n    module_cflags => \"\",\r\n    module_cxxflags => \"\",\r\n    module_ldflags => \"-static-libgcc -shared -Wl,--enable-auto-image-base\",\r\n    multilib => \"64\",\r\n    padlock_asm_src => \"e_padlock-x86_64.s\",\r\n    padlock_obj => \"e_padlock-x86_64.o\",\r\n    perlasm_scheme => \"mingw64\",\r\n    poly1305_asm_src => \"poly1305-x86_64.s\",\r\n    poly1305_obj => \"poly1305-x86_64.o\",\r\n    rc4_asm_src => \"rc4-x86_64.s rc4-md5-x86_64.s\",\r\n    rc4_obj => \"rc4-x86_64.o rc4-md5-x86_64.o\",\r\n    rc5_asm_src => \"rc5_enc.c\",\r\n    rc5_obj => \"rc5_enc.o\",\r\n    rmd160_asm_src => \"\",\r\n    rmd160_obj => \"\",\r\n    sha1_asm_src => \"sha1-x86_64.s sha256-x86_64.s sha512-x86_64.s sha1-mb-x86_64.s sha256-mb-x86_64.s\",\r\n    sha1_obj => \"sha1-x86_64.o sha256-x86_64.o sha512-x86_64.o sha1-mb-x86_64.o sha256-mb-x86_64.o\",\r\n    shared_cflag => \"\",\r\n    shared_cppflags => \"_WINDLL\",\r\n    shared_defflag => \"\",\r\n    shared_defines => [  ],\r\n    shared_extension => \".dll\",\r\n    shared_extension_simple => \".dll\",\r\n    shared_impflag => \"-Wl,--out-implib=\",\r\n    shared_import_extension => \".dll.a\",\r\n    shared_ldflag => \"-static-libgcc -shared -Wl,--enable-auto-image-base\",\r\n    shared_rcflag => \"--target=pe-x86-64\",\r\n    shared_target => \"mingw-shared\",\r\n    sys_id => \"MINGW64\",\r\n    thread_defines => [  ],\r\n    thread_scheme => \"winthreads\",\r\n    unistd => \"<unistd.h>\",\r\n    uplink_aux_src => \"\",\r\n    uplink_obj => \"\",\r\n    wp_asm_src => \"wp-x86_64.s\",\r\n    wp_obj => \"wp-x86_64.o\",\r\n\r\nRecorded environment:\r\n\r\n    AR =\r\n    ARFLAGS =\r\n    AS =\r\n    ASFLAGS =\r\n    BUILDFILE =\r\n    CC =\r\n    CFLAGS =  -m64 -O3\r\n    CPP =\r\n    CPPDEFINES =\r\n    CPPFLAGS =  -DNDEBUG\r\n    CPPINCLUDES =\r\n    CROSS_COMPILE =\r\n    CXX =\r\n    CXXFLAGS =  -m64 -O3\r\n    HASHBANGPERL =\r\n    LD =\r\n    LDFLAGS =  -m64\r\n    LDLIBS =\r\n    MT =\r\n    MTFLAGS =\r\n    OPENSSL_LOCAL_CONFIG_DIR =\r\n    PERL = perl\r\n    RANLIB =\r\n    RC =\r\n    RCFLAGS =\r\n    RM =\r\n    WINDRES =\r\n    __CNF_CFLAGS =\r\n    __CNF_CPPDEFINES =\r\n    __CNF_CPPFLAGS =\r\n    __CNF_CPPINCLUDES =\r\n    __CNF_CXXFLAGS =\r\n    __CNF_LDFLAGS =\r\n    __CNF_LDLIBS =\r\n\r\nMakevars:\r\n\r\n    AR              = ar\r\n    ARFLAGS         = r\r\n    CC              = gcc\r\n    CFLAGS          =  -m64 -O3\r\n    CPPDEFINES      =\r\n    CPPFLAGS        =  -DNDEBUG\r\n    CPPINCLUDES     =\r\n    CXXFLAGS        =  -m64 -O3\r\n    HASHBANGPERL    = perl\r\n    LDFLAGS         =  -m64\r\n    LDLIBS          =\r\n    PERL            = perl\r\n    RANLIB          = ranlib\r\n    RC              = windres\r\n    RCFLAGS         =\r\n\r\nNOTE: These variables only represent the configuration view.  The build file\r\ntemplate may have processed these variables further, please have a look at the\r\nbuild file for more exact data:\r\n    Makefile\r\n\r\nbuild file:\r\n\r\n    Makefile\r\n\r\nbuild file templates:\r\n\r\n    Configurations/common0.tmpl\r\n    Configurations/unix-Makefile.tmpl\r\n    Configurations/common.tmpl\r\n```\r\n\r\n\r\nmy command\r\n```\r\nconan install C:\\Users\\janni\\CLionProjects\\curlverzeichnis\\conan --build=missing\r\n```\r\nmy output by building (if you need the whole output let me know)\r\n```\r\ncrypto/dso/dso_win32.c:98:5: error: unknown type name 'HINSTANCE'\r\n   98 |     HINSTANCE h = NULL, *p = NULL;\r\n      |     ^~~~~~~~~\r\ncrypto/dso/dso_win32.c:98:19: warning: initialization of 'int' from 'void *' makes integer from pointer without a cast\r\n-Wint-conversion]\r\n   98 |     HINSTANCE h = NULL, *p = NULL;\r\n      |                   ^~~~\r\ncrypto/dso/dso_win32.c:106:9: warning: implicit declaration of function 'LoadLibraryA' [-Wimplicit-function-declaration]\r\n  106 |     h = LoadLibraryA(filename);\r\n      |         ^~~~~~~~~~~~\r\ncrypto/dso/dso_win32.c:107:11: warning: comparison between pointer and integer\r\n  107 |     if (h == NULL) {\r\n      |           ^~\r\ncrypto/dso/dso_win32.c:129:11: warning: comparison between pointer and integer\r\n  129 |     if (h != NULL)\r\n      |           ^~\r\ncrypto/dso/dso_win32.c:130:9: warning: implicit declaration of function 'FreeLibrary' [-Wimplicit-function-declaration]\r\n  130 |         FreeLibrary(h);\r\n      |         ^~~~~~~~~~~\r\ncrypto/dso/dso_win32.c: In function 'win32_unload':\r\ncrypto/dso/dso_win32.c:136:5: error: unknown type name 'HINSTANCE'\r\n  136 |     HINSTANCE *p;\r\n      |     ^~~~~~~~~\r\ncrypto/dso/dso_win32.c: In function 'win32_bind_func':\r\ncrypto/dso/dso_win32.c:163:5: error: unknown type name 'HINSTANCE'\r\n  163 |     HINSTANCE *ptr;\r\n      |     ^~~~~~~~~\r\ncrypto/dso/dso_win32.c:166:9: error: unknown type name 'FARPROC'\r\n  166 |         FARPROC f;\r\n      |         ^~~~~~~\r\ncrypto/dso/dso_win32.c:182:13: warning: implicit declaration of function 'GetProcAddress' [-Wimplicit-function-declaration]\r\n  182 |     sym.f = GetProcAddress(*ptr, symname);\r\n      |             ^~~~~~~~~~~~~~\r\ngcc  -I. -Iinclude -m64 -m64 -O3 -m64 -O3 -DL_ENDIAN -DOPENSSL_PIC -DOPENSSL_CPUID_OBJ -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_MONT5 -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DKECCAK1600_ASM -DRC4_ASM -DMD5_ASM -DAESNI_ASM -DVPAES_ASM -DGHASH_ASM -DECP_NISTZ256_ASM -DX25519_ASM -DPOLY1305_ASM -DOPENSSLDIR=\"\\\"/res\\\"\" -DENGINESDIR=\"\\\"/lib/engines-1_1\\\"\" -DUNICODE -D_UNICODE -DWIN32_LEAN_AND_MEAN -D_MT -DNDEBUG -DNDEBUG -DNDEBUG -MMD -MF crypto/ec/ec_asn1.d.tmp -MT crypto/ec/ec_asn1.o -c -o crypto/ec/ec_asn1.o crypto/ec/ec_asn1.c\r\ncrypto/dso/dso_win32.c:188:12: warning: cast to pointer from integer of different size [-Wint-to-pointer-cast]\r\n  188 |     return (DSO_FUNC_TYPE)sym.f;\r\n      |            ^\r\nIn file included from crypto/dso/dso_win32.c:490:\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h: At top level:\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:15:3: error: unknown type name 'HANDLE'\r\n   15 |   HANDLE WINAPI CreateToolhelp32Snapshot(DWORD dwFlags,DWORD th32ProcessID);\r\n      |   ^~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:15:17: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'CreateToolhelp32Snapshot'\r\n   15 |   HANDLE WINAPI CreateToolhelp32Snapshot(DWORD dwFlags,DWORD th32ProcessID);\r\n      |                 ^~~~~~~~~~~~~~~~~~~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:26:5: error: unknown type name 'SIZE_T'\r\n   26 |     SIZE_T dwSize;\r\n      |     ^~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:27:5: error: unknown type name 'DWORD'\r\n   27 |     DWORD th32ProcessID;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:28:5: error: unknown type name 'ULONG_PTR'\r\n   28 |     ULONG_PTR th32HeapID;\r\n      |     ^~~~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:29:5: error: unknown type name 'DWORD'\r\n   29 |     DWORD dwFlags;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:37:3: error: unknown type name 'WINBOOL'\r\n   37 |   WINBOOL WINAPI Heap32ListFirst(HANDLE hSnapshot,LPHEAPLIST32 lphl);\r\n      |   ^~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:37:18: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'Heap32ListFirst'\r\n   37 |   WINBOOL WINAPI Heap32ListFirst(HANDLE hSnapshot,LPHEAPLIST32 lphl);\r\n      |                  ^~~~~~~~~~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:38:3: error: unknown type name 'WINBOOL'\r\n   38 |   WINBOOL WINAPI Heap32ListNext(HANDLE hSnapshot,LPHEAPLIST32 lphl);\r\n      |   ^~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:38:18: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'Heap32ListNext'\r\n   38 |   WINBOOL WINAPI Heap32ListNext(HANDLE hSnapshot,LPHEAPLIST32 lphl);\r\n      |                  ^~~~~~~~~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:41:5: error: unknown type name 'SIZE_T'\r\n   41 |     SIZE_T dwSize;\r\n      |     ^~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:42:5: error: unknown type name 'HANDLE'\r\n   42 |     HANDLE hHandle;\r\n      |     ^~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:43:5: error: unknown type name 'ULONG_PTR'\r\n   43 |     ULONG_PTR dwAddress;\r\n      |     ^~~~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:44:5: error: unknown type name 'SIZE_T'\r\n   44 |     SIZE_T dwBlockSize;\r\n      |     ^~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:45:5: error: unknown type name 'DWORD'\r\n   45 |     DWORD dwFlags;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:46:5: error: unknown type name 'DWORD'\r\n   46 |     DWORD dwLockCount;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:47:5: error: unknown type name 'DWORD'\r\n   47 |     DWORD dwResvd;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:48:5: error: unknown type name 'DWORD'\r\n   48 |     DWORD th32ProcessID;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:49:5: error: unknown type name 'ULONG_PTR'\r\n   49 |     ULONG_PTR th32HeapID;\r\n      |     ^~~~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:58:3: error: unknown type name 'WINBOOL'\r\n   58 |   WINBOOL WINAPI Heap32First(LPHEAPENTRY32 lphe,DWORD th32ProcessID,ULONG_PTR th32HeapID);\r\n      |   ^~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:58:18: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'Heap32First'\r\n   58 |   WINBOOL WINAPI Heap32First(LPHEAPENTRY32 lphe,DWORD th32ProcessID,ULONG_PTR th32HeapID);\r\n      |                  ^~~~~~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:59:3: error: unknown type name 'WINBOOL'\r\n   59 |   WINBOOL WINAPI Heap32Next(LPHEAPENTRY32 lphe);\r\n      |   ^~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:59:18: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'Heap32Next'\r\n   59 |   WINBOOL WINAPI Heap32Next(LPHEAPENTRY32 lphe);\r\n      |                  ^~~~~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:60:3: error: unknown type name 'WINBOOL'\r\n   60 |   WINBOOL WINAPI Toolhelp32ReadProcessMemory(DWORD th32ProcessID,LPCVOID lpBaseAddress,LPVOID lpBuffer,SIZE_T cbRead,SIZE_T *lpNumberOfBytesRead);\r\n      |   ^~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:60:18: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'Toolhelp32ReadProcessMemory'\r\n   60 |   WINBOOL WINAPI Toolhelp32ReadProcessMemory(DWORD th32ProcessID,LPCVOID lpBaseAddress,LPVOID lpBuffer,SIZE_T cbRead,SIZE_T *lpNumberOfBytesRead);\r\n      |                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~\r\nIn file included from crypto/dso/dso_win32.c:490:\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:63:5: error: unknown type name 'DWORD'\r\n   63 |     DWORD dwSize;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:64:5: error: unknown type name 'DWORD'\r\n   64 |     DWORD cntUsage;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:65:5: error: unknown type name 'DWORD'\r\n   65 |     DWORD th32ProcessID;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:66:5: error: unknown type name 'ULONG_PTR'\r\n   66 |     ULONG_PTR th32DefaultHeapID;\r\n      |     ^~~~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:67:5: error: unknown type name 'DWORD'\r\n   67 |     DWORD th32ModuleID;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:68:5: error: unknown type name 'DWORD'\r\n   68 |     DWORD cntThreads;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:69:5: error: unknown type name 'DWORD'\r\n   69 |     DWORD th32ParentProcessID;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:70:5: error: unknown type name 'LONG'\r\n   70 |     LONG pcPriClassBase;\r\n      |     ^~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:71:5: error: unknown type name 'DWORD'\r\n   71 |     DWORD dwFlags;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:72:5: error: unknown type name 'WCHAR'\r\n   72 |     WCHAR szExeFile[MAX_PATH];\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:72:21: error: 'MAX_PATH' undeclared here (not in a function)\r\n   72 |     WCHAR szExeFile[MAX_PATH];\r\n      |                     ^~~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:77:3: error: unknown type name 'WINBOOL'\r\n   77 |   WINBOOL WINAPI Process32FirstW(HANDLE hSnapshot,LPPROCESSENTRY32W lppe);\r\n      |   ^~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:77:18: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'Process32FirstW'\r\n   77 |   WINBOOL WINAPI Process32FirstW(HANDLE hSnapshot,LPPROCESSENTRY32W lppe);\r\n      |                  ^~~~~~~~~~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:78:3: error: unknown type name 'WINBOOL'\r\n   78 |   WINBOOL WINAPI Process32NextW(HANDLE hSnapshot,LPPROCESSENTRY32W lppe);\r\n      |   ^~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:78:18: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'Process32NextW'\r\n   78 |   WINBOOL WINAPI Process32NextW(HANDLE hSnapshot,LPPROCESSENTRY32W lppe);\r\n      |                  ^~~~~~~~~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:81:5: error: unknown type name 'DWORD'\r\n   81 |     DWORD dwSize;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:82:5: error: unknown type name 'DWORD'\r\n   82 |     DWORD cntUsage;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:83:5: error: unknown type name 'DWORD'\r\n   83 |     DWORD th32ProcessID;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:84:5: error: unknown type name 'ULONG_PTR'\r\n   84 |     ULONG_PTR th32DefaultHeapID;\r\n      |     ^~~~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:85:5: error: unknown type name 'DWORD'\r\n   85 |     DWORD th32ModuleID;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:86:5: error: unknown type name 'DWORD'\r\n   86 |     DWORD cntThreads;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:87:5: error: unknown type name 'DWORD'\r\n   87 |     DWORD th32ParentProcessID;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:88:5: error: unknown type name 'LONG'\r\n   88 |     LONG pcPriClassBase;\r\n      |     ^~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:89:5: error: unknown type name 'DWORD'\r\n   89 |     DWORD dwFlags;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:90:5: error: unknown type name 'CHAR'\r\n   90 |     CHAR szExeFile[MAX_PATH];\r\n      |     ^~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:95:3: error: unknown type name 'WINBOOL'\r\n   95 |   WINBOOL WINAPI Process32First(HANDLE hSnapshot,LPPROCESSENTRY32 lppe);\r\n      |   ^~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:95:18: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'Process32First'\r\n   95 |   WINBOOL WINAPI Process32First(HANDLE hSnapshot,LPPROCESSENTRY32 lppe);\r\n      |                  ^~~~~~~~~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:96:3: error: unknown type name 'WINBOOL'\r\n   96 |   WINBOOL WINAPI Process32Next(HANDLE hSnapshot,LPPROCESSENTRY32 lppe);\r\n      |   ^~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:96:18: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'Process32Next'\r\n   96 |   WINBOOL WINAPI Process32Next(HANDLE hSnapshot,LPPROCESSENTRY32 lppe);\r\n      |                  ^~~~~~~~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:107:5: error: unknown type name 'DWORD'\r\n  107 |     DWORD dwSize;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:108:5: error: unknown type name 'DWORD'\r\n  108 |     DWORD cntUsage;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:109:5: error: unknown type name 'DWORD'\r\n  109 |     DWORD th32ThreadID;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:110:5: error: unknown type name 'DWORD'\r\n  110 |     DWORD th32OwnerProcessID;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:111:5: error: unknown type name 'LONG'\r\n  111 |     LONG tpBasePri;\r\n      |     ^~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:112:5: error: unknown type name 'LONG'\r\n  112 |     LONG tpDeltaPri;\r\n      |     ^~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:113:5: error: unknown type name 'DWORD'\r\n  113 |     DWORD dwFlags;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:118:3: error: unknown type name 'WINBOOL'\r\n  118 |   WINBOOL WINAPI Thread32First(HANDLE hSnapshot,LPTHREADENTRY32 lpte);\r\n      |   ^~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:118:18: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'Thread32First'\r\n  118 |   WINBOOL WINAPI Thread32First(HANDLE hSnapshot,LPTHREADENTRY32 lpte);\r\n      |                  ^~~~~~~~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:119:3: error: unknown type name 'WINBOOL'\r\n  119 |   WINBOOL WINAPI Thread32Next(HANDLE hSnapshot,LPTHREADENTRY32 lpte);\r\n      |   ^~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:119:18: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'Thread32Next'\r\n  119 |   WINBOOL WINAPI Thread32Next(HANDLE hSnapshot,LPTHREADENTRY32 lpte);\r\n      |                  ^~~~~~~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:122:5: error: unknown type name 'DWORD'\r\n  122 |     DWORD dwSize;\r\n      |     ^~~~~\r\ngcc  -I. -Iinclude -m64 -m64 -O3 -m64 -O3 -DL_ENDIAN -DOPENSSL_PIC -DOPENSSL_CPUID_OBJ -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_MONT5 -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DKECCAK1600_ASM -DRC4_ASM -DMD5_ASM -DAESNI_ASM -DVPAES_ASM -DGHASH_ASM -DECP_NISTZ256_ASM -DX25519_ASM -DPOLY1305_ASM -DOPENSSLDIR=\"\\\"/res\\\"\" -DENGINESDIR=\"\\\"/lib/engines-1_1\\\"\" -DUNICODE -D_UNICODE -DWIN32_LEAN_AND_MEAN -D_MT -DNDEBUG -DNDEBUG -DNDEBUG -MMD -MF crypto/ec/ec_check.d.tmp -MT crypto/ec/ec_check.o -c -o crypto/ec/ec_check.o crypto/ec/ec_check.c\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:123:5: error: unknown type name 'DWORD'\r\n  123 |     DWORD th32ModuleID;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:124:5: error: unknown type name 'DWORD'\r\n  124 |     DWORD th32ProcessID;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:125:5: error: unknown type name 'DWORD'\r\n  125 |     DWORD GlblcntUsage;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:126:5: error: unknown type name 'DWORD'\r\n  126 |     DWORD ProccntUsage;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:127:5: error: unknown type name 'BYTE'\r\n  127 |     BYTE *modBaseAddr;\r\n      |     ^~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:128:5: error: unknown type name 'DWORD'\r\n  128 |     DWORD modBaseSize;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:129:5: error: unknown type name 'HMODULE'\r\n  129 |     HMODULE hModule;\r\n      |     ^~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:130:5: error: unknown type name 'WCHAR'\r\n  130 |     WCHAR szModule[MAX_MODULE_NAME32 + 1];\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:131:5: error: unknown type name 'WCHAR'\r\n  131 |     WCHAR szExePath[MAX_PATH];\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:136:3: error: unknown type name 'WINBOOL'\r\n  136 |   WINBOOL WINAPI Module32FirstW(HANDLE hSnapshot,LPMODULEENTRY32W lpme);\r\n      |   ^~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:136:18: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'Module32FirstW'\r\n  136 |   WINBOOL WINAPI Module32FirstW(HANDLE hSnapshot,LPMODULEENTRY32W lpme);\r\n      |                  ^~~~~~~~~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:137:3: error: unknown type name 'WINBOOL'\r\n  137 |   WINBOOL WINAPI Module32NextW(HANDLE hSnapshot,LPMODULEENTRY32W lpme);\r\n      |   ^~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:137:18: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'Module32NextW'\r\n  137 |   WINBOOL WINAPI Module32NextW(HANDLE hSnapshot,LPMODULEENTRY32W lpme);\r\n      |                  ^~~~~~~~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:140:5: error: unknown type name 'DWORD'\r\n  140 |     DWORD dwSize;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:141:5: error: unknown type name 'DWORD'\r\n  141 |     DWORD th32ModuleID;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:142:5: error: unknown type name 'DWORD'\r\n  142 |     DWORD th32ProcessID;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:143:5: error: unknown type name 'DWORD'\r\n  143 |     DWORD GlblcntUsage;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:144:5: error: unknown type name 'DWORD'\r\n  144 |     DWORD ProccntUsage;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:145:5: error: unknown type name 'BYTE'\r\n  145 |     BYTE *modBaseAddr;\r\n      |     ^~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:146:5: error: unknown type name 'DWORD'\r\n  146 |     DWORD modBaseSize;\r\n      |     ^~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:147:5: error: unknown type name 'HMODULE'\r\n  147 |     HMODULE hModule;\r\n      |     ^~~~~~~\r\ngcc  -I. -Iinclude -m64 -m64 -O3 -m64 -O3 -DL_ENDIAN -DOPENSSL_PIC -DOPENSSL_CPUID_OBJ -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_MONT5 -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DKECCAK1600_ASM -DRC4_ASM -DMD5_ASM -DAESNI_ASM -DVPAES_ASM -DGHASH_ASM -DECP_NISTZ256_ASM -DX25519_ASM -DPOLY1305_ASM -DOPENSSLDIR=\"\\\"/res\\\"\" -DENGINESDIR=\"\\\"/lib/engines-1_1\\\"\" -DUNICODE -D_UNICODE -DWIN32_LEAN_AND_MEAN -D_MT -DNDEBUG -DNDEBUG -DNDEBUG -MMD -MF crypto/ec/ec_curve.d.tmp -MT crypto/ec/ec_curve.o -c -o crypto/ec/ec_curve.o crypto/ec/ec_curve.c\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:154:3: error: unknown type name 'WINBOOL'\r\n  154 |   WINBOOL WINAPI Module32First(HANDLE hSnapshot,LPMODULEENTRY32 lpme);\r\n      |   ^~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:154:18: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'Module32First'\r\n  154 |   WINBOOL WINAPI Module32First(HANDLE hSnapshot,LPMODULEENTRY32 lpme);\r\n      |                  ^~~~~~~~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:155:3: error: unknown type name 'WINBOOL'\r\n  155 |   WINBOOL WINAPI Module32Next(HANDLE hSnapshot,LPMODULEENTRY32 lpme);\r\n      |   ^~~~~~~\r\n/c/.conan/a6acd3b/1/bin/msys64/usr/include/w32api/tlhelp32.h:155:18: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'Module32Next'\r\n  155 |   WINBOOL WINAPI Module32Next(HANDLE hSnapshot,LPMODULEENTRY32 lpme);\r\n      |                  ^~~~~~~~~~~~\r\ncrypto/dso/dso_win32.c:500:16: error: unknown type name 'WINAPI'\r\n  500 | typedef HANDLE(WINAPI *CREATETOOLHELP32SNAPSHOT) (DWORD, DWORD);\r\n      |                ^~~~~~\r\ncrypto/dso/dso_win32.c:501:14: error: unknown type name 'WINAPI'\r\n  501 | typedef BOOL(WINAPI *CLOSETOOLHELP32SNAPSHOT) (HANDLE);\r\n      |              ^~~~~~\r\ngcc  -I. -Iinclude -m64 -m64 -O3 -m64 -O3 -DL_ENDIAN -DOPENSSL_PIC -DOPENSSL_CPUID_OBJ -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_MONT5 -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DKECCAK1600_ASM -DRC4_ASM -DMD5_ASM -DAESNI_ASM -DVPAES_ASM -DGHASH_ASM -DECP_NISTZ256_ASM -DX25519_ASM -DPOLY1305_ASM -DOPENSSLDIR=\"\\\"/res\\\"\" -DENGINESDIR=\"\\\"/lib/engines-1_1\\\"\" -DUNICODE -D_UNICODE -DWIN32_LEAN_AND_MEAN -D_MT -DNDEBUG -DNDEBUG -DNDEBUG -MMD -MF crypto/ec/ec_cvt.d.tmp -MT crypto/ec/ec_cvt.o -c -o crypto/ec/ec_cvt.o crypto/ec/ec_cvt.c\r\ncrypto/dso/dso_win32.c:502:14: error: unknown type name 'WINAPI'\r\n  502 | typedef BOOL(WINAPI *MODULE32) (HANDLE, MODULEENTRY32 *);\r\n      |              ^~~~~~\r\ncrypto/dso/dso_win32.c: In function 'win32_pathbyaddr':\r\ncrypto/dso/dso_win32.c:506:5: error: unknown type name 'HMODULE'\r\n  506 |     HMODULE dll;\r\n      |     ^~~~~~~\r\ncrypto/dso/dso_win32.c:507:5: error: unknown type name 'HANDLE'\r\n  507 |     HANDLE hModuleSnap = INVALID_HANDLE_VALUE;\r\n      |     ^~~~~~\r\ncrypto/dso/dso_win32.c:507:26: error: 'INVALID_HANDLE_VALUE' undeclared (first use in this function)\r\n  507 |     HANDLE hModuleSnap = INVALID_HANDLE_VALUE;\r\n      |                          ^~~~~~~~~~~~~~~~~~~~\r\ngcc  -I. -Iinclude -m64 -m64 -O3 -m64 -O3 -DL_ENDIAN -DOPENSSL_PIC -DOPENSSL_CPUID_OBJ -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_MONT5 -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DKECCAK1600_ASM -DRC4_ASM -DMD5_ASM -DAESNI_ASM -DVPAES_ASM -DGHASH_ASM -DECP_NISTZ256_ASM -DX25519_ASM -DPOLY1305_ASM -DOPENSSLDIR=\"\\\"/res\\\"\" -DENGINESDIR=\"\\\"/lib/engines-1_1\\\"\" -DUNICODE -D_UNICODE -DWIN32_LEAN_AND_MEAN -D_MT -DNDEBUG -DNDEBUG -DNDEBUG -MMD -MF crypto/ec/ec_err.d.tmp -MT crypto/ec/ec_err.o -c -o crypto/ec/ec_err.o crypto/ec/ec_err.c\r\ncrypto/dso/dso_win32.c:507:26: note: each undeclared identifier is reported only once for each function it appears in\r\ncrypto/dso/dso_win32.c:509:5: error: unknown type name 'CREATETOOLHELP32SNAPSHOT'\r\n  509 |     CREATETOOLHELP32SNAPSHOT create_snap;\r\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\r\ncrypto/dso/dso_win32.c:510:5: error: unknown type name 'CLOSETOOLHELP32SNAPSHOT'\r\n  510 |     CLOSETOOLHELP32SNAPSHOT close_snap;\r\n      |     ^~~~~~~~~~~~~~~~~~~~~~~\r\ncrypto/dso/dso_win32.c:511:5: error: unknown type name 'MODULE32'; did you mean 'MODULEENTRY32'?\r\n  511 |     MODULE32 module_first, module_next;\r\n      |     ^~~~~~~~\r\n      |     MODULEENTRY32\r\ncrypto/dso/dso_win32.c:523:11: warning: implicit declaration of function 'LoadLibrary' [-Wimplicit-function-declaration]\r\n  523 |     dll = LoadLibrary(TEXT(DLLNAME));\r\n      |           ^~~~~~~~~~~\r\ncrypto/dso/dso_win32.c:523:23: warning: implicit declaration of function 'TEXT' [-Wimplicit-function-declaration]\r\n  523 |     dll = LoadLibrary(TEXT(DLLNAME));\r\n      |                       ^~~~\r\ncrypto/dso/dso_win32.c:524:13: warning: comparison between pointer and integer\r\n  524 |     if (dll == NULL) {\r\n      |             ^~\r\ncrypto/dso/dso_win32.c:529:20: error: 'CREATETOOLHELP32SNAPSHOT' undeclared (first use in this function)\r\n  529 |     create_snap = (CREATETOOLHELP32SNAPSHOT)\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~\r\ngcc  -I. -Iinclude -m64 -m64 -O3 -m64 -O3 -DL_ENDIAN -DOPENSSL_PIC -DOPENSSL_CPUID_OBJ -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_MONT5 -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DKECCAK1600_ASM -DRC4_ASM -DMD5_ASM -DAESNI_ASM -DVPAES_ASM -DGHASH_ASM -DECP_NISTZ256_ASM -DX25519_ASM -DPOLY1305_ASM -DOPENSSLDIR=\"\\\"/res\\\"\" -DENGINESDIR=\"\\\"/lib/engines-1_1\\\"\" -DUNICODE -D_UNICODE -DWIN32_LEAN_AND_MEAN -D_MT -DNDEBUG -DNDEBUG -DNDEBUG -MMD -MF crypto/ec/ec_key.d.tmp -MT crypto/ec/ec_key.o -c -o crypto/ec/ec_key.o crypto/ec/ec_key.c\r\ncrypto/dso/dso_win32.c:529:45: error: expected ';' before 'GetProcAddress'\r\n  529 |     create_snap = (CREATETOOLHELP32SNAPSHOT)\r\n      |                                             ^\r\n      |                                             ;\r\n  530 |         GetProcAddress(dll, \"CreateToolhelp32Snapshot\");\r\n      |         ~~~~~~~~~~~~~~\r\ncrypto/dso/dso_win32.c:531:21: warning: comparison between pointer and integer\r\n  531 |     if (create_snap == NULL) {\r\n      |                     ^~\r\ncrypto/dso/dso_win32.c:541:19: error: 'CLOSETOOLHELP32SNAPSHOT' undeclared (first use in this function)\r\n  541 |     close_snap = (CLOSETOOLHELP32SNAPSHOT) CloseHandle;\r\n      |                   ^~~~~~~~~~~~~~~~~~~~~~~\r\ncrypto/dso/dso_win32.c:541:43: error: expected ';' before 'CloseHandle'\r\n  541 |     close_snap = (CLOSETOOLHELP32SNAPSHOT) CloseHandle;\r\n      |                                           ^~~~~~~~~~~~\r\n      |                                           ;\r\ncrypto/dso/dso_win32.c:543:21: error: 'MODULE32' undeclared (first use in this function)\r\n  543 |     module_first = (MODULE32) GetProcAddress(dll, \"Module32First\");\r\n      |                     ^~~~~~~~\r\ncrypto/dso/dso_win32.c:543:30: error: expected ';' before 'GetProcAddress'\r\n  543 |     module_first = (MODULE32) GetProcAddress(dll, \"Module32First\");\r\n      |                              ^~~~~~~~~~~~~~~\r\n      |                              ;\r\ncrypto/dso/dso_win32.c:544:29: error: expected ';' before 'GetProcAddress'\r\n  544 |     module_next = (MODULE32) GetProcAddress(dll, \"Module32Next\");\r\n      |                             ^~~~~~~~~~~~~~~\r\n      |                             ;\r\ncrypto/dso/dso_win32.c:550:20: error: invalid type argument of unary '*' (have 'int')\r\n  550 |     hModuleSnap = (*create_snap) (TH32CS_SNAPMODULE, 0);\r\n      |                    ^~~~~~~~~~~~\r\ncrypto/dso/dso_win32.c:559:11: error: invalid type argument of unary '*' (have 'int')\r\n  559 |     if (!(*module_first) (hModuleSnap, &me32)) {\r\n      |           ^~~~~~~~~~~~~\r\ncrypto/dso/dso_win32.c:560:10: error: invalid type argument of unary '*' (have 'int')\r\n  560 |         (*close_snap) (hModuleSnap);\r\n      |          ^~~~~~~~~~~\r\ncrypto/dso/dso_win32.c:570:14: error: invalid type argument of unary '*' (have 'int')\r\n  570 |             (*close_snap) (hModuleSnap);\r\n      |              ^~~~~~~~~~~\r\ncrypto/dso/dso_win32.c:602:15: error: invalid type argument of unary '*' (have 'int')\r\n  602 |     } while ((*module_next) (hModuleSnap, &me32));\r\n      |               ^~~~~~~~~~~~\r\ncrypto/dso/dso_win32.c:604:6: error: invalid type argument of unary '*' (have 'int')\r\n  604 |     (*close_snap) (hModuleSnap);\r\n      |      ^~~~~~~~~~~\r\ncrypto/dso/dso_win32.c: In function 'win32_globallookup':\r\ncrypto/dso/dso_win32.c:611:5: error: unknown type name 'HMODULE'\r\n  611 |     HMODULE dll;\r\n      |     ^~~~~~~\r\ncrypto/dso/dso_win32.c:612:5: error: unknown type name 'HANDLE'\r\n  612 |     HANDLE hModuleSnap = INVALID_HANDLE_VALUE;\r\n      |     ^~~~~~\r\ngcc  -I. -Iinclude -m64 -m64 -O3 -m64 -O3 -DL_ENDIAN -DOPENSSL_PIC -DOPENSSL_CPUID_OBJ -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_MONT5 -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DKECCAK1600_ASM -DRC4_ASM -DMD5_ASM -DAESNI_ASM -DVPAES_ASM -DGHASH_ASM -DECP_NISTZ256_ASM -DX25519_ASM -DPOLY1305_ASM -DOPENSSLDIR=\"\\\"/res\\\"\" -DENGINESDIR=\"\\\"/lib/engines-1_1\\\"\" -DUNICODE -D_UNICODE -DWIN32_LEAN_AND_MEAN -D_MT -DNDEBUG -DNDEBUG -DNDEBUG -MMD -MF crypto/ec/ec_kmeth.d.tmp -MT crypto/ec/ec_kmeth.o -c -o crypto/ec/ec_kmeth.o crypto/ec/ec_kmeth.c\r\ncrypto/dso/dso_win32.c:612:26: error: 'INVALID_HANDLE_VALUE' undeclared (first use in this function)\r\n  612 |     HANDLE hModuleSnap = INVALID_HANDLE_VALUE;\r\n      |                          ^~~~~~~~~~~~~~~~~~~~\r\ncrypto/dso/dso_win32.c:614:5: error: unknown type name 'CREATETOOLHELP32SNAPSHOT'\r\n  614 |     CREATETOOLHELP32SNAPSHOT create_snap;\r\n      |     ^~~~~~~~~~~~~~~~~~~~~~~~\r\ncrypto/dso/dso_win32.c:615:5: error: unknown type name 'CLOSETOOLHELP32SNAPSHOT'\r\n  615 |     CLOSETOOLHELP32SNAPSHOT close_snap;\r\n      |     ^~~~~~~~~~~~~~~~~~~~~~~\r\ngcc  -I. -Iinclude -m64 -m64 -O3 -m64 -O3 -DL_ENDIAN -DOPENSSL_PIC -DOPENSSL_CPUID_OBJ -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_MONT5 -DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DKECCAK1600_ASM -DRC4_ASM -DMD5_ASM -DAESNI_ASM -DVPAES_ASM -DGHASH_ASM -DECP_NISTZ256_ASM -DX25519_ASM -DPOLY1305_ASM -DOPENSSLDIR=\"\\\"/res\\\"\" -DENGINESDIR=\"\\\"/lib/engines-1_1\\\"\" -DUNICODE -D_UNICODE -DWIN32_LEAN_AND_MEAN -D_MT -DNDEBUG -DNDEBUG -DNDEBUG -MMD -MF crypto/ec/ec_lib.d.tmp -MT crypto/ec/ec_lib.o -c -o crypto/ec/ec_lib.o crypto/ec/ec_lib.c\r\ncrypto/dso/dso_win32.c:616:5: error: unknown type name 'MODULE32'; did you mean 'MODULEENTRY32'?\r\n  616 |     MODULE32 module_first, module_next;\r\n      |     ^~~~~~~~\r\n      |     MODULEENTRY32\r\ncrypto/dso/dso_win32.c:619:9: error: unknown type name 'FARPROC'\r\n  619 |         FARPROC f;\r\n      |         ^~~~~~~\r\ncrypto/dso/dso_win32.c:623:13: warning: comparison between pointer and integer\r\n  623 |     if (dll == NULL) {\r\n      |             ^~\r\ncrypto/dso/dso_win32.c:628:20: error: 'CREATETOOLHELP32SNAPSHOT' undeclared (first use in this function)\r\n  628 |     create_snap = (CREATETOOLHELP32SNAPSHOT)\r\n      |                    ^~~~~~~~~~~~~~~~~~~~~~~~\r\ncrypto/dso/dso_win32.c:628:45: error: expected ';' before 'GetProcAddress'\r\n  628 |     create_snap = (CREATETOOLHELP32SNAPSHOT)\r\n      |                                             ^\r\n      |                                             ;\r\n  629 |         GetProcAddress(dll, \"CreateToolhelp32Snapshot\");\r\n      |         ~~~~~~~~~~~~~~\r\ncrypto/dso/dso_win32.c:630:21: warning: comparison between pointer and integer\r\n  630 |     if (create_snap == NULL) {\r\n      |                     ^~\r\ncrypto/dso/dso_win32.c:640:19: error: 'CLOSETOOLHELP32SNAPSHOT' undeclared (first use in this function)\r\n  640 |     close_snap = (CLOSETOOLHELP32SNAPSHOT) CloseHandle;\r\n      |                   ^~~~~~~~~~~~~~~~~~~~~~~\r\ncrypto/dso/dso_win32.c:640:43: error: expected ';' before 'CloseHandle'\r\n  640 |     close_snap = (CLOSETOOLHELP32SNAPSHOT) CloseHandle;\r\n      |                                           ^~~~~~~~~~~~\r\n      |                                           ;\r\ncrypto/dso/dso_win32.c:642:21: error: 'MODULE32' undeclared (first use in this function)\r\n  642 |     module_first = (MODULE32) GetProcAddress(dll, \"Module32First\");\r\n      |                     ^~~~~~~~\r\ncrypto/dso/dso_win32.c:642:30: error: expected ';' before 'GetProcAddress'\r\n  642 |     module_first = (MODULE32) GetProcAddress(dll, \"Module32First\");\r\n      |                              ^~~~~~~~~~~~~~~\r\n      |                              ;\r\ncrypto/dso/dso_win32.c:643:29: error: expected ';' before 'GetProcAddress'\r\n  643 |     module_next = (MODULE32) GetProcAddress(dll, \"Module32Next\");\r\n      |                             ^~~~~~~~~~~~~~~\r\n      |                             ;\r\ncrypto/dso/dso_win32.c:645:20: error: invalid type argument of unary '*' (have 'int')\r\n  645 |     hModuleSnap = (*create_snap) (TH32CS_SNAPMODULE, 0);\r\n      |                    ^~~~~~~~~~~~\r\ncrypto/dso/dso_win32.c:654:11: error: invalid type argument of unary '*' (have 'int')\r\n  654 |     if (!(*module_first) (hModuleSnap, &me32)) {\r\n      |           ^~~~~~~~~~~~~\r\ncrypto/dso/dso_win32.c:655:10: error: invalid type argument of unary '*' (have 'int')\r\n  655 |         (*close_snap) (hModuleSnap);\r\n      |          ^~~~~~~~~~~\r\ncrypto/dso/dso_win32.c:662:14: error: invalid type argument of unary '*' (have 'int')\r\n  662 |             (*close_snap) (hModuleSnap);\r\n      |              ^~~~~~~~~~~\r\ncrypto/dso/dso_win32.c:666:15: error: invalid type argument of unary '*' (have 'int')\r\n  666 |     } while ((*module_next) (hModuleSnap, &me32));\r\n      |               ^~~~~~~~~~~~\r\ncrypto/dso/dso_win32.c:668:6: error: invalid type argument of unary '*' (have 'int')\r\n  668 |     (*close_snap) (hModuleSnap);\r\n      |      ^~~~~~~~~~~\r\nmake[1]: *** [Makefile:2794: crypto/dso/dso_win32.o] Error 1\r\nmake[1]: *** Waiting for unfinished jobs....\r\nmake[1]: Leaving directory '/c/Users/janni/.conan/data/openssl/1.1.1s/_/_/build/d846067d59c3b90a9880f5caaf4b040d4f30bf14/src'\r\nmake: *** [Makefile:188: all] Fehler 2\r\nopenssl/1.1.1s:\r\nopenssl/1.1.1s: ERROR: Package 'd846067d59c3b90a9880f5caaf4b040d4f30bf14' build failed\r\nopenssl/1.1.1s: WARN: Build folder C:\\Users\\janni\\.conan\\data\\openssl\\1.1.1s\\_\\_\\build\\d846067d59c3b90a9880f5caaf4b040d4f30bf14\\build-release\r\nERROR: openssl/1.1.1s: Error in build() method, line 724\r\n        autotools.make()\r\n        ConanException: Error 2 while executing make -j12\r\n```",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/20512/comments",
    "author": "Jannik746",
    "comments": [
      {
        "user": "paulidale",
        "created_at": "2023-03-14T22:49:18Z",
        "body": "Something is messed up.  OpenSSL doesn't support using conan (or any other third party build system).\r\nCan you configure and build OpenSSL following the instructions in the distribution?\r\nIf so, the problem lies with conan I suspect."
      },
      {
        "user": "t8m",
        "created_at": "2024-02-22T15:50:48Z",
        "body": "The version 1.1.1 is not supported anymore. Closing. If this is still an issue with currently supported releases, please open a new issue."
      }
    ]
  },
  {
    "number": 20260,
    "title": "Is there an elegant way to trim obj_dat.h",
    "created_at": "2023-02-10T08:06:53Z",
    "closed_at": "2024-10-29T15:26:20Z",
    "labels": [
      "branch: master",
      "help wanted",
      "triaged: feature",
      "inactive"
    ],
    "url": "https://github.com/openssl/openssl/issues/20260",
    "body": "Hi All,\r\n\r\nThere are some huge arrays in obj_dat.h, about 100kb in size.\r\nThis is not reasonable if I just want to use few features, especially in size-sensitive scenarios. (in my case just Hash Hmac Hkdf)\r\n\r\nDetails:\r\n0002:00000000 000262d4H .rdata                  DATA\r\nReducing 1 A3B0 bytes after commenting out the arrays simply:\r\n0002:00000000 0000bf24H .rdata                  DATA\r\n\r\nI noticed that this file was generated by script, but I didn't find any parameters to trim it...\r\nthanks for any help.\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/20260/comments",
    "author": "liyi77",
    "comments": [
      {
        "user": "paulidale",
        "created_at": "2023-02-13T07:22:32Z",
        "body": "The small memory option could curtail this but perhaps better might be a new build option to omit this.\r\nA third option would be to load this data from file on demand rather than omitting it entirely."
      },
      {
        "user": "nhorman",
        "created_at": "2024-06-07T17:39:26Z",
        "body": "marking as inactive, will be closed at the completion of 3.4 dev without further input"
      }
    ]
  },
  {
    "number": 20073,
    "title": "AES-256 and 192 produce garbage output with -engine padlock (VIA Padlock)",
    "created_at": "2023-01-18T12:35:26Z",
    "closed_at": "2023-05-05T16:14:33Z",
    "labels": [
      "branch: master",
      "branch: 1.1.1",
      "help wanted",
      "triaged: bug",
      "branch: 3.0",
      "branch: 3.1"
    ],
    "url": "https://github.com/openssl/openssl/issues/20073",
    "body": "OpenSSL fail to properly encrypt or decrypt AES-192 and AES-256 data (tested CTR and CBC modes), producing garbage output, without any errors, when using VIA Padlock hardware accelerator on VIA Eden Esther CPU.\r\n128 key size modes return correct results.\r\n\r\nTested on OpenSSL 1.1.1n, 1.1.1s, 3.0.7\r\n\r\nWithout `-engine padlock`:\r\n\r\n```\r\n$ echo 12345678 | openssl enc -aes-256-ctr -e -nosalt -K 8d06b54b75a39a2ec1147871b4cdcb589525cde68034d39439183feedcf5e79a -iv 84eb471441a65cf6a27b3d6976728227 | hexdump -C\r\n00000000  67 5b 8d ba 61 e2 07 84  79                       |g[..a...y|\r\n\r\n$ echo -ne \"\\x67\\x5b\\x8d\\xba\\x61\\xe2\\x07\\x84\\x79\" | openssl enc -aes-256-ctr -d -nosalt -K 8d06b54b75a39a2ec1147871b4cdcb589525cde68034d39439183feedcf5e79a -iv 84eb471441a65cf6a27b3d6976728227 | hexdump -C\r\n00000000  31 32 33 34 35 36 37 38  0a                       |12345678.|\r\n```\r\n\r\nWith `-engine padlock`:\r\n\r\n```\r\n# Encryption WITH engine padlock\r\n$ echo 12345678 | openssl enc -aes-256-ctr -e -nosalt -K 8d06b54b75a39a2ec1147871b4cdcb589525cde68034d39439183feedcf5e79a -iv 84eb471441a65cf6a27b3d6976728227 -engine padlock | hexdump -C\r\nengine \"padlock\" set.\r\n00000000  79 86 a0 04 c7 c6 9f 36  80                       |y......6.|\r\n\r\n# Decrypting result produced by engine padlock (garbage) WITH engine padlock\r\n$ echo -ne \"\\x79\\x86\\xa0\\x04\\xc7\\xc6\\x9f\\x36\\x80\" | openssl enc -aes-256-ctr -d -nosalt -K 8d06b54b75a39a2ec1147871b4cdcb589525cde68034d39439183feedcf5e79a -iv 84eb471441a65cf6a27b3d6976728227 -engine padlock | hexdump -C\r\nengine \"padlock\" set.\r\n00000000  31 32 33 34 35 36 37 38  0a                       |12345678.|\r\n\r\n# Decrypting result produced by engine padlock (garbage) WITHOUT engine padlock\r\n$ echo -ne \"\\x79\\x86\\xa0\\x04\\xc7\\xc6\\x9f\\x36\\x80\" | openssl enc -aes-256-ctr -d -nosalt -K 8d06b54b75a39a2ec1147871b4cdcb589525cde68034d39439183feedcf5e79a -iv 84eb471441a65cf6a27b3d6976728227 | hexdump -C\r\n00000000  2f ef 1e 8a 93 12 af 8a  f3                       |/........|\r\n\r\n# Decrypting result produced WITHOUT engine padlock (proper AES) WITH engine padlock\r\n$ echo -ne \"\\x67\\x5b\\x8d\\xba\\x61\\xe2\\x07\\x84\\x79\" | openssl enc -aes-256-ctr -d -nosalt -K 8d06b54b75a39a2ec1147871b4cdcb589525cde68034d39439183feedcf5e79a -iv 84eb471441a65cf6a27b3d6976728227 -engine padlock | hexdump -C\r\nengine \"padlock\" set.\r\n00000000  2f ef 1e 8a 93 12 af 8a  f3                       |/........|",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/20073/comments",
    "author": "ValdikSS",
    "comments": [
      {
        "user": "bernd-edlinger",
        "created_at": "2023-01-25T07:30:09Z",
        "body": "Hello @ValdikSS \r\nI was not aware that padlock hardware is still in use.\r\n\r\nI think there is likely another problem if you configure\r\nthe 1.1.1 version with `./config -DOPENSSL_AES_CONST_TIME`,\r\nthen my constant-time AES implementation replaces the `AES_set_encrypt_key`\r\nand `AES_set_decrypt_key` functions with a different encoding, so I'd expect\r\nthe encryption to fail in a different way.\r\n\r\nSince I am not able to do any testing with padlock, may I ask you\r\nto test if my assumption about the AES CONST TIME code is correct.\r\nAnd if that is the case if the following patch would fix it?\r\n\r\n```\r\ndiff --git a/engines/e_padlock.c b/engines/e_padlock.c\r\nindex a82c07e813..bbff13b29c 100644\r\n--- a/engines/e_padlock.c\r\n+++ b/engines/e_padlock.c\r\n@@ -221,6 +221,19 @@ void padlock_sha1(void *ctx, const void *inp, size_t len);\r\n void padlock_sha256_oneshot(void *ctx, const void *inp, size_t len);\r\n void padlock_sha256(void *ctx, const void *inp, size_t len);\r\n \r\n+#  ifndef AES_ASM\r\n+static int padlock_aes_set_encrypt_key(const unsigned char *userKey,\r\n+                                       const int bits,\r\n+                                       AES_KEY *key);\r\n+static int padlock_aes_set_decrypt_key(const unsigned char *userKey,\r\n+                                       const int bits,\r\n+                                       AES_KEY *key);\r\n+#   define AES_ASM\r\n+#   define AES_set_encrypt_key padlock_aes_set_encrypt_key\r\n+#   define AES_set_decrypt_key padlock_aes_set_decrypt_key\r\n+#   include \"../crypto/aes/aes_core.c\"\r\n+#endif\r\n+\r\n /*\r\n  * Load supported features of the CPU to see if the PadLock is available.\r\n  */\r\n```\r\n\r\nWhile it is unfortunate that this uses non-constant time code for the key derivation\r\nit is the most simple fix I could come up without access to real hardware."
      },
      {
        "user": "ValdikSS",
        "created_at": "2023-01-25T10:26:05Z",
        "body": "@bernd-edlinger, unfortunately it seem to produce exactly the same incorrect results with both with and without the patch when compiling with `-DOPENSSL_AES_CONST_TIME`.\r\nIf you have time and desire to fix this issue, I can provide you an SSH access to this machine. This is WYSE C10LE running Debian 11.\r\n`ssh -J valdikss@ssh-j.com user@via`\r\nYour SSH key is already added to the machine. Password for `user` and `root` is `1`. You can do everything it needs.\r\nThe machine is slow, compilation takes a lot of time. You'd better compile .deb packages in a Debian Bullseye x86 (i386) container on your machine and transfer it to VIA."
      },
      {
        "user": "bernd-edlinger",
        "created_at": "2023-01-25T19:35:06Z",
        "body": "Ah, okay, the byte-swap is always necessary....\r\nso make that\r\n```\r\ndiff --git a/engines/e_padlock.c b/engines/e_padlock.c\r\nindex a82c07e..38327df 100644\r\n--- a/engines/e_padlock.c\r\n+++ b/engines/e_padlock.c\r\n@@ -144,6 +144,19 @@ static int padlock_init(ENGINE *e)\r\n     return (padlock_use_rng || padlock_use_ace);\r\n }\r\n \r\n+#  ifndef AES_ASM\r\n+static int padlock_aes_set_encrypt_key(const unsigned char *userKey,\r\n+                                       const int bits,\r\n+                                       AES_KEY *key);\r\n+static int padlock_aes_set_decrypt_key(const unsigned char *userKey,\r\n+                                       const int bits,\r\n+                                       AES_KEY *key);\r\n+#   define AES_ASM\r\n+#   define AES_set_encrypt_key padlock_aes_set_encrypt_key\r\n+#   define AES_set_decrypt_key padlock_aes_set_decrypt_key\r\n+#   include \"../crypto/aes/aes_core.c\"\r\n+#  endif\r\n+\r\n /*\r\n  * This stuff is needed if this ENGINE is being compiled into a\r\n  * self-contained shared-library.\r\n@@ -639,12 +652,10 @@ padlock_aes_init_key(EVP_CIPHER_CTX *ctx, const unsigned char *key,\r\n             AES_set_decrypt_key(key, key_len, &cdata->ks);\r\n         else\r\n             AES_set_encrypt_key(key, key_len, &cdata->ks);\r\n-#   ifndef AES_ASM\r\n         /*\r\n          * OpenSSL C functions use byte-swapped extended key.\r\n          */\r\n         padlock_key_bswap(&cdata->ks);\r\n-#   endif\r\n         cdata->cword.b.keygen = 1;\r\n         break;\r\n \r\n```\r\n\r\nwith that patch I get the following:\r\n```\r\n echo -n 1234567812345678 | OPENSSL_ENGINES=../engines ../util/shlib_wrap.sh ./openssl enc -aes-256-cbc -e -nopad -K 8d06b54b75a39a2ec1147871b4cdcb589525cde68034d39439183feedcf5e79a -iv 84eb471441a65cf6a27b3d6976728227 | hexdump -C\r\n00000000  26 e8 bf 94 1a 6f 5f 05  49 3e 0c 6e d8 0c 64 58  |&....o_.I>.n..dX|\r\n00000010\r\n$ echo -n 1234567812345678 | OPENSSL_ENGINES=../engines ../util/shlib_wrap.sh ./openssl enc -aes-256-cbc -e -nopad -K 8d06b54b75a39a2ec1147871b4cdcb589525cde68034d39439183feedcf5e79a -iv 84eb471441a65cf6a27b3d6976728227 -engine padlock | hexdump -C\r\nengine \"padlock\" set.\r\n00000000  26 e8 bf 94 1a 6f 5f 05  49 3e 0c 6e d8 0c 64 58  |&....o_.I>.n..dX|\r\n00000010\r\n$ echo -ne \"\\x26\\xe8\\xbf\\x94\\x1a\\x6f\\x5f\\x05\\x49\\x3e\\x0c\\x6e\\xd8\\x0c\\x64\\x58\" | OPENSSL_ENGINES=../engines ../util/shlib_wrap.sh ./openssl enc -aes-256-cbc -d -nopad -K 8d06b54b75a39a2ec1147871b4cdcb589525cde68034d39439183feedcf5e79a -iv 84eb471441a65cf6a27b3d6976728227 | hexdump -C\r\n00000000  31 32 33 34 35 36 37 38  31 32 33 34 35 36 37 38  |1234567812345678|\r\n00000010\r\n$ echo -ne \"\\x26\\xe8\\xbf\\x94\\x1a\\x6f\\x5f\\x05\\x49\\x3e\\x0c\\x6e\\xd8\\x0c\\x64\\x58\" | OPENSSL_ENGINES=../engines ../util/shlib_wrap.sh ./openssl enc -aes-256-cbc -d -nopad -K 8d06b54b75a39a2ec1147871b4cdcb589525cde68034d39439183feedcf5e79a -iv 84eb471441a65cf6a27b3d6976728227 -engine padlock | hexdump -C\r\nengine \"padlock\" set.\r\n00000000  31 32 33 34 35 36 37 38  31 32 33 34 35 36 37 38  |1234567812345678|\r\n00000010\r\n```\r\n\r\nThanks a lot for your help!\r\nI will send a pull request later today or tomorrow..."
      },
      {
        "user": "ValdikSS",
        "created_at": "2023-01-26T09:34:42Z",
        "body": "Can confirm, when `ifndef AES_ASM` is removed for bswap it works with both `-DOPENSSL_AES_CONST_TIME` and without it.\r\nThank you!"
      }
    ]
  },
  {
    "number": 19941,
    "title": "\"Permission denied collect2.exe: error: ld returned 1 exit status\" Error when using #include<openssl/evp.h> in VSCode",
    "created_at": "2022-12-20T18:36:50Z",
    "closed_at": "2023-04-02T08:59:12Z",
    "labels": [
      "help wanted",
      "triaged: question"
    ],
    "url": "https://github.com/openssl/openssl/issues/19941",
    "body": "So I installed OpenSSL directly following the instructions in the install.txt file you get when cloning the git repository. It installed it seemingly with no issues and it is located in C:/Program Files/OpenSSL and C:/Program Files(x86)/OpenSSL. Inside each of those there are 4 folders: bin, html, include, lib. \r\n\r\nIn VSCode I'm using the code runner extension with the following command:\r\n``` \r\ng++ -I \"C:/Users/Batres/vcpkg/installed/x86-windows/include\" \"C:/Program Files/OpenSSL/include\" simple_functions.cpp -o simple_functions \r\n``` \r\nthe \"C:/Users/Batres/vcpkg/installed/x86-windows/include\" is a different library called XTensor, which works completely fine as I have tested the code without OpenSSL and it outputs the correct results with no problem.\r\n\r\nI have also tried these commands, all yeilding the same error. I have also tried running all the same commands through a terminal with admin priviliges and it gives the same error. I even copied the folder to a different directory inside my /Documents/ folder and it still didn't help. My compiler is mingw and I'm on Windows 11.\r\n``` \r\ng++ -I \"C:/Users/Batres/vcpkg/installed/x86-windows/include\" \"C:/Program Files (x86)/OpenSSL/include\" simple_functions.cpp -o simple_functions \r\n```\r\nand\r\n ```\r\ng++ -I \"C:/Users/Batres/vcpkg/installed/x86-windows/include\" -L \"C:/Program Files/OpenSSL/lib\" simple_functions.cpp -o simple_functions -lssl \r\n```\r\nThis last one returns a different error. Insted of being acces denied it seems like none of the functions or variables that I call inside my code are recognised, so these are the errors: undefined reference to `EVP_MD_CTX_new', or any other functions or variables I call, my code is the following:\r\n```\r\n#include <cmath>\r\n#include <iomanip>\r\n#include <cstddef>\r\n#include \"xtensor.hpp\"\r\n#include <functional>\r\n#include <string>\r\n#include <typeinfo>\r\n#include <vector>\r\n#include <regex>\r\n#include <array>\r\n#include <algorithm>\r\n#include <openssl/sha.h>\r\n#include <openssl/evp.h>\r\n\r\n/*\r\ndef hash_string(string):\r\n    # Truncating at 16 bytes for cleanliness\r\n    hasher = hashlib.sha256(string.encode())\r\n    return hasher.hexdigest()[:16]\r\n    */\r\nstd::string hash_string(std::string string) {\r\n    // Truncating at 16 bytes for cleanliness\r\n    std::array<unsigned char, SHA256_DIGEST_LENGTH> hash;\r\n    std::array<unsigned char, SHA256_DIGEST_LENGTH>::iterator it;\r\n\r\n    EVP_MD_CTX* ctx = EVP_MD_CTX_new();\r\n    EVP_DigestInit_ex(ctx, EVP_sha256(), NULL);\r\n    EVP_DigestUpdate(ctx, string.c_str(), string.size());\r\n    EVP_DigestFinal_ex(ctx, hash.data(), NULL);\r\n\r\n    // Convert the hash to a hexadecimal string\r\n    std::stringstream ss;\r\n    for (it = hash.begin(); it != hash.end(); it++) {\r\n        ss << std::hex << std::setw(2) << std::setfill('0') << static_cast<int>(*it);\r\n    }\r\n    return ss.str().substr(0, 16);\r\n}\r\n\r\nint main(){\r\n    double a = gen_choose(2,5);\r\n    std::string input = \"Hello, world!\";\r\n    std::string output = hash_string(input);\r\n    std::cout << std::setprecision(16) << output << std::endl;\r\n    return 0;\r\n}\r\n```\r\nIgnore all the other #includes, they are for different functions that work with no issue. As you can probably see I have some python code commented above my C++ code. Thats simply because it's a function I tried transalting using ChatGPT, but that's not relevant to the error. \r\nThe weird thing is that even though it says access denied when compliling, Intellisense can acess the files just fine, I can right click on the functions and \"Go to Definition\" and it takes me to my C:/Program Files/OpenSSL/include/openssl/ folder.\r\n\r\nIf anyone knows how to fix the error I would be very thankful.\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/19941/comments",
    "author": "Batres3",
    "comments": [
      {
        "user": "t8m",
        "created_at": "2022-12-21T07:54:46Z",
        "body": "> ```\r\n> g++ -I \"C:/Users/Batres/vcpkg/installed/x86-windows/include\" \"C:/Program Files/OpenSSL/include\" simple_functions.cpp -o simple_functions \r\n> ```\r\n\r\nThis looks incorrect - you need to duplicate the `-I` before each include directory. Also this command is actually directly compiling and linking, so you'll also need the `-L` option to find the libcrypto/libssl. Also you need to use `-lcrypto` for EVP functions and not `-lssl`."
      }
    ]
  },
  {
    "number": 19881,
    "title": "Typo in install.md",
    "created_at": "2022-12-11T04:49:41Z",
    "closed_at": "2023-03-13T17:19:05Z",
    "labels": [
      "branch: master",
      "good first issue",
      "help wanted",
      "triaged: documentation",
      "branch: 3.0",
      "branch: 3.1"
    ],
    "url": "https://github.com/openssl/openssl/issues/19881",
    "body": "There are some typos at the install OpenSSL to Windows section.\r\n\r\n`The easiest way to elevate the Command Prompt is to press and hold down the both the <CTRL> and <SHIFT> key while clicking the menu item in the task menu.`\r\n\r\nshould be:\r\n\r\n`The easiest way to elevate the Command Prompt is to press and hold down both the <CTRL> and <SHIFT> keys while clicking the menu item in the task menu.`\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/19881/comments",
    "author": "matheushw",
    "comments": [
      {
        "user": "akai54",
        "created_at": "2023-03-10T23:24:38Z",
        "body": "Should be closed."
      }
    ]
  },
  {
    "number": 19837,
    "title": "An overflow in ssl/ssl_lib.c SSL_get_shared_ciphers()",
    "created_at": "2022-12-05T13:35:18Z",
    "closed_at": "2023-09-18T12:13:32Z",
    "labels": [
      "good first issue",
      "help wanted",
      "triaged: cleanup"
    ],
    "url": "https://github.com/openssl/openssl/issues/19837",
    "body": "Hi, I found an overflow in ssl/ssl_lib.c Ln.3223.\r\n```C\r\nunsigned int n;\r\nc = sk_SSL_CIPHER_value(clntsk, i);\r\nif (sk_SSL_CIPHER_find(srvrsk, c) < 0)\r\n  continue;\r\nn = strlen(c->name);   // forced type conversion\r\nif (n >= size) {\r\n  if (p != buf)\r\n    --p;\r\n  *p = '\\0';\r\n  return buf;\r\n  }\r\nstrcpy(p, c->name); // trigger\r\n```\r\nThe return type of `strlen()` is `size_of`. If the length of `c->name` is over 2^31, then the `strcpy()` in Ln.3236 will trigger a overflow. Furthermore, `SSL_get_shared_ciphers()` is an exported functions. This represents a security issue for end user code that calls this function directly.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/19837/comments",
    "author": "Dr4gonEy3",
    "comments": [
      {
        "user": "mattcaswell",
        "created_at": "2022-12-05T14:07:52Z",
        "body": ">  If the length of c->name is over 2^31, then the strcpy() in Ln.3236 will trigger a overflow.\r\n\r\nWell, yes - but not really. SSL_CIPHER is an opaque structure, and the only possible instances of it are ones created directly by libssl. They are all listed in ssl/s3_lib.c. None of them have such insanely long names - they are all relatively short. So there isn't any real risk of this happening.\r\n\r\nThat's not to say it wouldn't be a bad idea to fix the type confusion here."
      },
      {
        "user": "shourya5",
        "created_at": "2022-12-07T00:01:22Z",
        "body": "Wouldn't an easy fix for this would be to use strncpy (p, c->name,n);"
      },
      {
        "user": "Anis-cpu-13",
        "created_at": "2023-02-14T08:28:00Z",
        "body": "I will work on this issue for my first contribution "
      },
      {
        "user": "bharsaklemukesh975",
        "created_at": "2023-04-05T14:27:26Z",
        "body": "If no one is working, I would like to take this as my first open source contribution.\r\n\r\nThanks!"
      }
    ]
  },
  {
    "number": 19829,
    "title": "ec sign and verify example on manual page",
    "created_at": "2022-12-03T15:33:31Z",
    "closed_at": "2022-12-22T11:29:57Z",
    "labels": [
      "help wanted",
      "triaged: documentation"
    ],
    "url": "https://github.com/openssl/openssl/issues/19829",
    "body": "Manual page ECDSA_SIG_new describes low-level elliptic curve digital signature algorithm (ECDSA) functions. Low-level are depecated in 3.0.\r\n\r\nIssues:\r\n - examples are based on deprecated ECDSA_sign and ECDSA_verify;\r\n - search engine usually point to these pages.\r\n\r\nWhat about to mark these samples as \"historic\" and first to refer to more up do date examples?\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/19829/comments",
    "author": "petrovr",
    "comments": [
      {
        "user": "petrovr",
        "created_at": "2022-12-03T15:46:27Z",
        "body": "P.S. Reference to EVP_Digest{Sign|Verify}Init is \"hidden\", i.e. is easy reader to miss this part. So may be is better to remove esamples."
      },
      {
        "user": "mattcaswell",
        "created_at": "2022-12-05T09:46:03Z",
        "body": "Rather than deleting the examples I'd prefer to split the man page into two, i.e. one to document the ECDSA_SIG_* functions which are not deprecated, and one to document the remaining deprecated functions. Hopefully then it should be clear that all the functions, including the examples, on the second page are deprecated."
      }
    ]
  },
  {
    "number": 19716,
    "title": "PKCS12_parse can fail on structure from PKCS12_create_ex",
    "created_at": "2022-11-18T19:05:51Z",
    "closed_at": "2023-01-16T16:20:20Z",
    "labels": [
      "branch: master",
      "help wanted",
      "triaged: bug",
      "branch: 3.0",
      "branch: 3.1"
    ],
    "url": "https://github.com/openssl/openssl/issues/19716",
    "body": "`PKCS12_create_ex` allows creating a PKCS12 structure with a library context and/or property query. Similarly, `PKCS12_init_ex` will also set them.\r\n\r\nHowever, `PKCS12_parse` in _crypto/pkcs12/p12_kiss.c_ can fail to parse that structure because `parse_bag` calls `PKCS12_decrypt_skey` for shrouded key bags instead of `PKCS12_decrypt_skey_ex` with the appropriate library context and property query.\r\n\r\nThis means that skey decrypt will always use the default ctx/propq for PKCS8 decryption, not what was set on the PCKS12 structure. If, for example, the default context doesn't have the legacy provider loaded or is in FIPS mode, then parsing can fail.\r\n\r\nFor context, PKCS7 functions retrieve the library context from _pkcs12->authsafes->ctx.libctx_. Since the affected routines are all internal, one solution would be to retrieve the ctx/propq and send them down to `parse_bags` and `parse_bag` and call `PKCS12_decrypt_skey_ex` for _case NID_pkcs8ShroudedKeyBag_.\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/19716/comments",
    "author": "pm-cfs",
    "comments": [
      {
        "user": "t8m",
        "created_at": "2022-11-21T09:36:19Z",
        "body": "Does this sequence work or not?\r\n\r\n```\r\nPKCS12 *p12 = PKCS12_init_ex(NID_pkcs7_data, libctx, propq);\r\n\r\np12 = d2i_PKCS12_bio(bio, &p12);\r\nPKCS12_parse(p12, ....);\r\n```\r\n"
      },
      {
        "user": "pm-cfs",
        "created_at": "2022-11-21T16:44:56Z",
        "body": "In that sequence, `d2i_PKCS12_bio` will call `ASN1_item_d2i_bio` which calls `ASN1_item_d2i_bio_ex` with libxtx/propq NULL.\r\n\r\nYou can use `ASN1_item_d2i_bio_ex(ASN1_ITEM_rptr(PKCS12), bio, &p12, libctx, propq);` directly.\r\n\r\nBut that will still fail on a shrouded key bag as the libctx/propq are overridden with NULL in the `PKCS12_decrypt_skey` call.\r\n\r\nI ran a test and verified that it does indeed fail when the default library context is set to FIPS and the shrouded key bag contains non-FIPS encryption and that it succeeds when the default library context allows that encryption. Any PKCS7 elements use the libctx/propq settings; when legacy encryption is required they work as expected when libctx contains the legacy provider. It's just the PKCS8 elements.\r\n"
      },
      {
        "user": "slontis",
        "created_at": "2022-11-24T09:26:59Z",
        "body": "There is not a single reference to the libctx in the _kiss file..\r\nSome of the interfaces were extended to pass a libctx, so that would be required here..\r\n\r\nFor some reason this struct got the libctx added to it, but it wasnt done for the p12 ctx..\r\n\r\n````\r\ntypedef struct PKCS7_CTX_st {\r\n    OSSL_LIB_CTX *libctx;\r\n    char *propq;\r\n} PKCS7_CTX;\r\n````\r\n\r\nThere is a libctx function that you can set temporarily and set back after the call to 'work around' this kind of issue.."
      },
      {
        "user": "slontis",
        "created_at": "2022-11-24T22:20:38Z",
        "body": "Refer to the documentation for  OSSL_LIB_CTX_set0_default()"
      }
    ]
  },
  {
    "number": 19643,
    "title": "PKITS 4.10.7 and 4.10.8 hang on Windows in OpenSSL 3.0",
    "created_at": "2022-11-10T12:40:55Z",
    "closed_at": "2022-12-08T10:13:53Z",
    "labels": [
      "branch: master",
      "help wanted",
      "triaged: bug",
      "branch: 3.0",
      "branch: 3.1"
    ],
    "url": "https://github.com/openssl/openssl/issues/19643",
    "body": "Presuming `TA.pem` is the trust anchor from PKITS, the following works fine on GNU/Linux but hangs on Windows:\r\n\r\n```\r\n% openssl cms -verify -CAfile TA.pem -policy anyPolicy -in SignedInvalidMappingFromanyPolicyTest7.eml\r\nCMS Verification failure\r\n0046881801000000:error:17000064:CMS routines:cms_signerinfo_verify_cert:certificate verify error:../crypto/cms/cms_smime.c:289:Verify error: invalid or inconsistent certificate policy extension\r\n```\r\n\r\nSimilarly for the next test.\r\n\r\ngit bisect suggests the problem is 9aa4be691f5c73eb3c68606d824c104550c053f7 so I presume the difference is something to do with the way locking works on Windows compared to pthreads.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/19643/comments",
    "author": "brucestephens",
    "comments": [
      {
        "user": "mattcaswell",
        "created_at": "2022-11-10T13:48:45Z",
        "body": "The issue is that there is an attempt to obtain a lock which is already held. The function in question is `ossl_policy_cache_set_mapping` which is only ever called by `policy_cache_new` which is only ever called by `ossl_policy_cache_set`.\r\n\r\n`ossl_policy_cache_set` obtains the X509 lock before `policy_cache_new` is called and releases it afterwards. `ossl_policy_cache_set_mapping` then additionally tries to get the lock again.\r\n\r\nUsing pthreads the second attempt to obtain the lock simply fails and we skip the line that sets the `EXFLAG_INVALID_POLICY` flag. But that doesn't matter because `policy_cache_new` sets it anyway when `ossl_policy_cache_set_mapping` returns -1.\r\n\r\nUnder Windows it seems that attempting to obtain the lock a second time hangs.\r\n\r\nThis is all just wrong and the change from 9aa4be6 is just wrong. In fact the whole setting of the `EXFLAG_INVALID_POLICY` flag can be removed from that function completely because `policy_cache_new` will do it anyway.\r\n\r\nThe fix itself is easy - but setting \"help wanted\" because a test should be constructed for this."
      },
      {
        "user": "kroeckx",
        "created_at": "2022-11-10T23:57:01Z",
        "body": "It seems that in the case of USE_RWLOCK, we don't set PTHREAD_MUTEX_NORMAL or PTHREAD_MUTEX_ERRORCHECK. We probably should."
      },
      {
        "user": "t8m",
        "created_at": "2022-11-11T10:46:49Z",
        "body": "> It seems that in the case of USE_RWLOCK, we don't set PTHREAD_MUTEX_NORMAL or PTHREAD_MUTEX_ERRORCHECK. We probably should.\r\n\r\nHmm, perhaps only in debug builds?"
      },
      {
        "user": "kroeckx",
        "created_at": "2022-11-11T16:34:25Z",
        "body": "In case of !USE_RWLOCK, debug builds get ERRORCHECK, other builds\nNORMAL. In case of USE_RWLOCK, it seems we get DEFAULT because we don't\nset it.\n"
      },
      {
        "user": "kroeckx",
        "created_at": "2022-11-12T10:01:31Z",
        "body": "So properly reading the manpages, only for mutexs can you set the things\nlike recursive or not. For an rwlock it's just undefined, and seems to\ndepend on the architecture.\n\nSo maybe it can be useful for a debug build to not uwe rwlocks, but\ninstead use the mutex in error checking mode.\n"
      },
      {
        "user": "bernd-edlinger",
        "created_at": "2022-11-28T11:55:56Z",
        "body": "Are you saying we lock the write-lock while already holding the read-lock ?"
      },
      {
        "user": "paulidale",
        "created_at": "2022-11-28T22:56:15Z",
        "body": "It's a wrtie lock while holding a write lock.\r\n"
      },
      {
        "user": "anton-kazlouski",
        "created_at": "2023-01-19T10:18:49Z",
        "body": "Is there any ETA for releasing this fix? "
      }
    ]
  },
  {
    "number": 19145,
    "title": "'list' command | Consider adding an option for printing at once all lists of algorithms",
    "created_at": "2022-09-06T12:40:29Z",
    "closed_at": "2022-09-11T11:00:39Z",
    "labels": [
      "branch: master",
      "good first issue",
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/19145",
    "body": "_release:_ openssl-3.0.5\r\n\r\nHello. There are use-cases where an inventory of implemented algorithms is needed. Illustration if needed: _Is _ED448_ implemented in library?_ | This we do not know, nor where to find it. We could be served by `openssl list -{digest,kdf,(...)}-algorithms` to reveal it, assuming that all algorithms-related options are part of the command. That would be fastidious, not to speak about elegance. Could that be enough to justify the introduction of an option aiming for that task; e.g either `-algorithms` or `-all-algorithms`. At last the resulting output would be suitable for redirection via a pipe; e.g `openssl list -{(...),(...)}-algorithms | grep -i ed448`.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/19145/comments",
    "author": "Ricky-Tigg",
    "comments": [
      {
        "user": "mattcaswell",
        "created_at": "2022-09-07T15:01:59Z",
        "body": "Seems reasonable."
      }
    ]
  },
  {
    "number": 19133,
    "title": "'list' command enhancement | output of symmetric cipher algorithms, command itself and its description",
    "created_at": "2022-09-05T13:13:40Z",
    "closed_at": "2022-10-24T10:06:44Z",
    "labels": [
      "good first issue",
      "help wanted",
      "triaged: documentation"
    ],
    "url": "https://github.com/openssl/openssl/issues/19133",
    "body": "_release:_ openssl-3.0.5\r\n_reference:_ (output truncated)\r\n```\r\n$ openssl help list\r\n -cipher-algorithms        List of cipher algorithms\r\n -asymcipher-algorithms    List of asymmetric cipher algorithms\r\n```\r\nHello. The cipher family (_asymmetric_), which is on purpose mentioned in the description associated to `-asymcipher-algorithms`, is not in the description associated to `-cipher-algorithms`. Yet despite the presence of `-asymcipher-algorithms` that last could be interpreted as it might be covering symmetric cipher algorithms, there is no explicit statement in this regard.\r\n\r\nA worth considering action would be the reformulation of both the command and the description it is associated to; e.g. \"`-cipher-algorithms        List of cipher algorithms`\" could become \"`-sym-cipher-algorithms        List of symmetric cipher algorithms`\".\r\n\r\nAt last in subsequent output, arranging ciphers according to categories _block_ and _stream_ ciphers, would serve the user in the context of a selection of an appropriate cipher.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/19133/comments",
    "author": "Ricky-Tigg",
    "comments": [
      {
        "user": "paulidale",
        "created_at": "2022-09-06T01:47:42Z",
        "body": "Our stability policy wouldn't allow this option's removal.  That doesn't mean a `-sym-cipher-algorithms` couldn't be added or that the help text and manual page updated to be specific that these are symmetric ciphers.\r\n\r\nI'd favour the latter as a documentation only change rather than introducing option aliases."
      },
      {
        "user": "t8m",
        "created_at": "2022-09-06T06:25:07Z",
        "body": "> I'd favour the latter as a documentation only change rather than introducing option aliases.\r\n\r\n+1 to that, IMO changing the option name itself is unnecessary."
      },
      {
        "user": "Ricky-Tigg",
        "created_at": "2022-09-06T07:27:12Z",
        "body": "So there would be no enhancement planned in regard to **suggestion** _block_ and _stream_ ciphers, as it was ignored. Therefore it is worth considering closing now as _not planned_ as what would be planned couldn't even be qualified as trivial."
      },
      {
        "user": "t8m",
        "created_at": "2022-09-06T07:49:03Z",
        "body": "It is still a documentation and the help text change to be done. So please do not close this."
      }
    ]
  },
  {
    "number": 19104,
    "title": "'openssl ciphers -ciphersuites' | Queried algorithm list not honoured",
    "created_at": "2022-08-31T12:30:01Z",
    "closed_at": "2022-09-01T13:41:16Z",
    "labels": [
      "help wanted",
      "triaged: documentation"
    ],
    "url": "https://github.com/openssl/openssl/issues/19104",
    "body": "_release:_ openssl-3.0.5\r\n_reference:_ (outputs truncated)\r\n```\r\n$ openssl help ciphers\r\n -ciphersuites val   Configure the TLSv1.3 ciphersuites to use\r\n$ man openssl-ciphers\r\n -ciphersuites val\r\n  Sets the list of TLSv1.3 ciphersuites. This list will be combined with\r\n  any TLSv1.2 and below ciphersuites that have been configured.\r\n```\r\nHello. \"_Configure the TLSv1.3 ciphersuites to use_\" and \"_Sets the list of TLSv1.3 ciphersuites_\", which are self-explicitly formulated sentences, are actually not reflecting their meanings as \"_This list will be combined with any TLSv1.2 and below ciphersuites that have been configured._\" demonstrates it. Such combination of contradictory meanings within the usage brings inevitably to the project at least confusion if not also incoherence.\r\n\r\nWhen executing `openssl ciphers -ciphersuites TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384`, in which query is dully limited to specified algorithms, `TLS_CHACHA20_POLY1305_SHA256:TLS_AES_256_GCM_SHA384` alone is then expected as output, not as part of a non-queried output as it is actually the case.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/19104/comments",
    "author": "Ricky-Tigg",
    "comments": [
      {
        "user": "mattcaswell",
        "created_at": "2022-08-31T13:09:30Z",
        "body": "How would you formulate it better?"
      },
      {
        "user": "Ricky-Tigg",
        "created_at": "2022-09-01T07:15:11Z",
        "body": "Well, thanks for asking me, though that's a bit fast. Remember the nature of the present report. I made the assumption that it may be a issue towards documentation, and made it while being on **user**'s side not developer's side. That tells all about the context if needed.\r\n\r\nHere are the unknowns i could easily notice:\r\n- whether a **triage** is needed for the present report; At the time i am writing, it still cannot be determined from developers' comments, whether the **command output** i presented as potential issue, was determined or could be determined as such by one of them.\r\n- the effect that function attempted to achieve in first place. At least the author of this function would know that for sure."
      },
      {
        "user": "mattcaswell",
        "created_at": "2022-09-01T09:48:43Z",
        "body": "What you have observed is the correct expected behaviour. The `openssl ciphers` command gives you the list of ciphersuites that will be used for a given configuration. Configuration of ciphersuites is formed from two parts:\r\n1) The configured list of TLSv1.3 ciphersuites to be used\r\n2) The configured list of TLSv1.2 (and below) ciphersuites to be used\r\n\r\nIf you only configure one part you will get the default list for the other part. So for example if you only configure the TLSv1.3 ciphersuites then you will get the configured list of TLSv1.3 ciphersuites combined with the default list of TLSv1.2 (and below) ciphersuites. Similarly if only configure the TLSv1.2 (and below) ciphersuites you will get the default list of TLSv1.3 ciphersuites combined with the configured list of TLSv1.2 (and below) ciphersuites.\r\n\r\nThe current functionality was the result of a lot of debate about how TLSv1.3 ciphersuites should be integrated into libssl. The current way it works was considered the \"least worst\" option. It's less than ideal but for technical reasons it needs to work this way. It may be non-obvious to a new user so I'd be happy to consider better ways of describing this in our docs."
      },
      {
        "user": "Ricky-Tigg",
        "created_at": "2022-09-01T13:41:16Z",
        "body": "Strange how things may take a sudden turn. I found myself a bit pretentious to have been able to suppose for a moment that i could be a pertinent judge of a matter, whose highly complex nature i realize it fully now, somehow lately, was beyond my intelligence. If i learned a lesson, and i may have, i would hope that it is to became humble,\r\n\r\n_ps._: As i understand it, the term \"_Configuration_\" must be referring to a task applying to ciphers in the installed OpenSSL library, which is in my Linux distribution installed by default, as those _configurations_ did not require my intervention. I wouldn't know even how ciphers may be configured and what it meant by such operation. Time to close, i must have already wasted your time."
      }
    ]
  },
  {
    "number": 19014,
    "title": "Options `-ssl3`,, `-no_ssl3`, `-no_tls1`, `-no_tls1_1`, `-no_tls1_2`, `-no_tls1_3`,  not recognised",
    "created_at": "2022-08-17T08:58:13Z",
    "closed_at": "2023-04-28T12:08:30Z",
    "labels": [
      "good first issue",
      "help wanted",
      "triaged: documentation"
    ],
    "url": "https://github.com/openssl/openssl/issues/19014",
    "body": "_release:_ openssl-3.0.5\r\n\r\n_manual reference:_\r\n```\r\n$ man 'OPENSSL(1ossl)'\r\n(...)\r\n       -ssl3, -tls1, -tls1_1, -tls1_2, -tls1_3, -no_ssl3, -no_tls1, -no_tls1_1, -no_tls1_2, -no_tls1_3\r\n           These options require or disable the use of the specified SSL or TLS protocols. (...)\r\n```\r\nHello. options `-ssl3`,, `-no_ssl3`, `-no_tls1`, `-no_tls1_1`, `-no_tls1_2`, `-no_tls1_3`,  not recognised; illustration:\r\n```\r\n$ openssl ciphers -ssl3\r\nlist: Use -help for summary.\r\n```\r\nAs opposed, other options are recognised; illustration:\r\n```\r\n$ openssl ciphers -tls1_3 | sed 's/:/\\n/g' | head -1\r\nTLS_AES_256_GCM_SHA384\r\n```",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/19014/comments",
    "author": "Ricky-Tigg",
    "comments": [
      {
        "user": "t8m",
        "created_at": "2022-08-17T11:06:54Z",
        "body": "The no_* options do not apply to the ciphers command but they apply to other commands such as s_client. The -ssl3 option is probably not supported by your build but it is supported if enable-ssl3 is used with the build configuration. So perhaps some clarification in the manual page would be appropriate but the options should not be removed from the manual page."
      },
      {
        "user": "Ricky-Tigg",
        "created_at": "2022-08-17T14:12:43Z",
        "body": "That was much helpful. At the time the report was sent, i was not yet aware of the existence of `openssl help <command>`. Now I am. Consulting `openssl help ciphers` would have been beneficial before reporting. Then, by default,  version 3 of SSL was disabled which, if i interpret correctly, caused the output.\r\n```\r\n$ openssl list -disabled | column\r\nDisabled algorithms:\tMDC2\tSM4\tEC2M\tSM2\tSSL3\r\n```"
      },
      {
        "user": "rkarmaka98",
        "created_at": "2023-04-23T20:37:54Z",
        "body": "/assign"
      }
    ]
  },
  {
    "number": 18951,
    "title": "The bignumber generated by BN_rand_range() has memory leak",
    "created_at": "2022-08-04T03:30:31Z",
    "closed_at": "2022-08-17T16:44:53Z",
    "labels": [
      "branch: master",
      "branch: 1.1.1",
      "good first issue",
      "help wanted",
      "triaged: bug",
      "branch: 3.0"
    ],
    "url": "https://github.com/openssl/openssl/issues/18951",
    "body": "version: OpenSSL 1.1.1f\r\n\r\nIn the following code:\r\n```\r\nEVP_PKEY_CTX *pctx = NULL;\r\nEVP_PKEY *pkey = NULL;\r\nEC_KEY *eckey = NULL;\r\nconst BIGNUM *order;\r\nBIGNUM *k = NULL;\r\nBIGNUM *r = NULL;\r\nint ret;\r\n\r\npctx = EVP_PKEY_CTX_new_id(EVP_PKEY_EC, NULL);\r\nret = EVP_PKEY_keygen_init(pctx);\r\nret = EVP_PKEY_CTX_set_ec_paramgen_curve_nid(pctx, NID_secp521r1);\r\nret = EVP_PKEY_keygen(pctx, &pkey);\r\neckey = pkey->pkey.ec;\r\norder = EC_GROUP_get0_order(eckey->group);\r\nBN_rand_range(k, order); //mem leak\r\nBN_rand_range(r, order); //mem leak\r\nBN_free(k);\r\nBN_free(r);\r\n```\r\nThe ASan tool reports some memory leak about BN_rand_range(),\r\nit seams that the BN_free()  can not release the memory that alloc\r\nby BN_bin2bn() which called by BN_rand_range().\r\n```\r\nIndirect leak of 7200 byte(s) in 100 object(s) allocated from:\r\n    #0 0xffff88665004 in malloc (/usr/lib64/libasan.so.6.0.0+0xa5004)\r\n    #1 0xffff883c0060 in CRYPTO_zalloc (/usr/lib64/libcrypto.so.1.1+0x160060)\r\n    #2 0xffff88311e48  (/usr/lib64/libcrypto.so.1.1+0xb1e48)\r\n    #3 0xffff883121a8 in BN_bin2bn (/usr/lib64/libcrypto.so.1.1+0xb21a8)\r\n    #4 0xffff883179b8  (/usr/lib64/libcrypto.so.1.1+0xb79b8)\r\n    #5 0xffff88317b68  (/usr/lib64/libcrypto.so.1.1+0xb7b68)\r\n```\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/18951/comments",
    "author": "CaptainMiaow",
    "comments": [
      {
        "user": "mattcaswell",
        "created_at": "2022-08-04T08:30:05Z",
        "body": "There is a minor bug here although it is not quite as you might expect.\r\n\r\nThe calls to `BN_rand_range` in your code above are actually failing (returning with a 0 value). However, you do not detect that and continue regardless. The reason that it fails is that the `BIGNUM` you are supplying to store the result (`k` or `r`) is NULL. Therefore `BN_rand_range` cannot possibly succeed because it has no where to store the result.\r\n\r\nThe bug in OpenSSL is that it should detect early that the supplied result parameter is NULL and return with an error code immediately. What it actually does it proceed to generate a BIGNUM anyway and then fails later in a sanity check of the result leaking the generated value.\r\n\r\nIncidental to this issue there are a couple of other problems in your code. You are accessing the internals of the pkey and eckey structures. Presumably you are including internal headers files to that. Don't do that in a real application. Use the supplied \"getter\" functions instead."
      },
      {
        "user": "mattcaswell",
        "created_at": "2022-08-04T08:32:57Z",
        "body": "Looks like the same problem also affects master/3.0.\r\n\r\nMarking this as help wanted/good first issue."
      }
    ]
  },
  {
    "number": 18689,
    "title": "A possible memleak in PKCS12_pbe_crypt_ex()",
    "created_at": "2022-06-30T08:26:58Z",
    "closed_at": "2022-07-18T08:21:11Z",
    "labels": [
      "branch: master",
      "good first issue",
      "help wanted",
      "triaged: bug",
      "branch: 3.0"
    ],
    "url": "https://github.com/openssl/openssl/issues/18689",
    "body": "If I understand right, the function _PKCS12_pbe_crypt_ex()_ in _crypto/pkcs12/p12_decr.c_ should free the variable **out** on every error path. However in the code slice  \r\n```\r\n            if (EVP_CIPHER_CTX_ctrl(ctx, EVP_CTRL_AEAD_GET_TAG,\r\n                (int)mac_len, out+outlen) < 0) {\r\n                ERR_raise(ERR_LIB_PKCS12, ERR_R_INTERNAL_ERROR);\r\n                goto err;\r\n```\r\ndoes not free the variable **out**. Is that on purpose or forgotten?",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/18689/comments",
    "author": "zhou1615",
    "comments": [
      {
        "user": "t8m",
        "created_at": "2022-07-07T14:39:04Z",
        "body": "It is a bug."
      }
    ]
  },
  {
    "number": 18488,
    "title": "While compairing the speedTest between openssl-1.1.1o vs openssl-1.1.1l on solaris64 Plateform.There is almost 100+ Ciphers for which there is degradation more than 5% .",
    "created_at": "2022-06-07T03:49:46Z",
    "closed_at": "2023-10-09T16:33:21Z",
    "labels": [
      "help wanted",
      "triaged: bug"
    ],
    "url": "https://github.com/openssl/openssl/issues/18488",
    "body": "1. Degradation reported with openssl-1.1.1o compair to openssl-1.1.1l.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/18488/comments",
    "author": "366anish",
    "comments": [
      {
        "user": "t8m",
        "created_at": "2022-06-07T07:50:11Z",
        "body": "Did you compile the sources with exactly the same options? Which concrete ciphers show the degradation? Is the degradation reproducible when averaging multiple runs?"
      },
      {
        "user": "366anish",
        "created_at": "2022-06-08T06:02:09Z",
        "body": "Yes , Sources compiled with same options. Some of  the Ciphers with degradation more than 13% are listed below -\r\n\r\n1. md5_16   (-26%)\r\n2.  sha384_16 (-19%)\r\n4. sha224_16 (-19%)\r\n5. md4_16 (-18%)\r\n6. sha384_64 (-18%)\r\n7. md5_64 (-16%)\r\n8. seed-ofb_1024 (-16%)\r\n9. seed-ofb_64 (-15%)\r\n10. mdc2_16 (-15%)\r\n11. sha512-224_64 (-15%)\r\n12. aria-192-cfb_256\r\n13. rc2-cfb_16\r\n14. sha384_256\r\n15. aria-256-cfb1_256\r\n16. aria-192-cfb_1024\r\n17. sha512-224_16\r\n18. aria-256-ofb_1024\r\n19. aria-256-ofb_8192\r\n20. aria-256-ofb_16384\r\n\r\ndegradation is reproducible when averaging multiple runs. \r\nAlso Performed the test on Isolated Machine.\r\n\r\n\r\n\r\n\r\n\r\n"
      },
      {
        "user": "paulidale",
        "created_at": "2022-06-09T06:08:11Z",
        "body": "These figures are *not* the output from our `speed` command.\r\nCould you please provide such output vs a baseline?\r\n\r\nSeveral of these seem to be old obsolete ciphers & digests for which performance is not considered critical."
      },
      {
        "user": "t8m",
        "created_at": "2023-10-09T16:33:22Z",
        "body": "1.1.1 is out of support.\r\n"
      }
    ]
  },
  {
    "number": 17602,
    "title": "Add support to get modules-dir via pkg-config",
    "created_at": "2022-01-27T16:06:08Z",
    "closed_at": "2022-01-28T18:00:15Z",
    "labels": [
      "good first issue",
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/17602",
    "body": "I currently can get the engins-dir via `pkg-config --variable=enginesdir libcrypto` to find out where to install engines, but there is no way to find out where to install providers via pkg-config. \r\n\r\nA `pkg-config --variable=modulessdir libcrypto` would make sense and should be easy to add in Configurations/unix-Makefile.tmpl.\r\n\r\nI know that I can find out the modules dir via `openssl version -m`, but pkcs-config is more convenient in many situations. ",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/17602/comments",
    "author": "ifranzki",
    "comments": [
      {
        "user": "mattcaswell",
        "created_at": "2022-01-27T16:26:45Z",
        "body": "Seems reasonable."
      },
      {
        "user": "levitte",
        "created_at": "2022-01-27T16:47:47Z",
        "body": "#17605 adds it"
      },
      {
        "user": "ifranzki",
        "created_at": "2022-01-28T08:16:15Z",
        "body": "Wow that was quick, thanks a lot!"
      }
    ]
  },
  {
    "number": 17532,
    "title": "openssl 3.0 : Speed test gives zero result when using pipe tee.",
    "created_at": "2022-01-17T10:03:29Z",
    "closed_at": "2022-10-11T15:27:38Z",
    "labels": [
      "help wanted",
      "triaged: bug",
      "branch: 3.0"
    ],
    "url": "https://github.com/openssl/openssl/issues/17532",
    "body": "failure logs:\r\n**$ openssl speed -engine devcrypto -multi 8 -elapsed -evp aes-128-cbc | tee test.log**\r\n```\r\nForked child 0\r\nForked child 1\r\n.....\r\n+R:1130:AES-128-CBC:3.000000\r\n+R:[  254.685282] audit: type=1701 audit(1637346259.131:4): auid=4294967295 uid=0 gid=0 ses=4294967295 pid=19312 comm=\\\"openssl\\\" exe=\\\"/usr/bin/openssl\\\" sig=11 res=1\r\n1107:AES-128-CBC:3.000000\r\n+R:112[  254.699678] audit: type=1701 audit(1637346259.135:5): auid=4294967295 uid=0 gid=0 ses=4294967295 pid=19310 comm=\\\"openssl\\\" exe=\\\"/usr/bin/openssl\\\" sig=11 res=1\r\n6:AES-128-CBC:3.000000\r\n+R:1158:A[  254.716612] audit: type=1701 audit(1637346259.135:6): auid=4294967295 uid=0 gid=0 ses=4294967295 pid=19313 comm=\\\"openssl\\\" exe=\\\"/usr/bin/openssl\\\" sig=11 res=1\r\nES-128-CBC:3.000000\r\n+R:1151:AES-[  254.733550] audit: type=1701 audit(1637346259.135:7): auid=4294967295 uid=0 gid=0 ses=4294967295 pid=19306 comm=\\\"openssl\\\" exe=\\\"/usr/bin/openssl\\\" sig=11 res=1\r\n128-CBC:3.000000\r\nForked child 7[  254.749111] cryptodev: driver unloaded.\r\nversion: 3.0.0\r\nbuilt on: built [  254.750503] audit: type=1701 audit(1637346259.139:8): auid=4294967295 uid=0 gid=0 ses=4294967295 pid=19309 comm=\\\"openssl\\\" exe=\\\"/usr/bin/openssl\\\" sig=11 res=1\r\non: Tue Sep  7 11:46:32 2021 UTC[  254.774136] audit: type=1701 audit(1637346259.139:9): auid=4294967295 uid=0 gid=0 ses=4294967295 pid=19308 comm=\\\"openssl\\\" exe=\\\"/usr/bin/openssl\\\" sig=11 res=1\r\noptions:bn(64,64) \r\ncompiler: aa[  254.791039] audit: type=1701 audit(1637346259.139:10): auid=4294967295 uid=0 gid=0 ses=4294967295 pid=19307 comm=\\\"openssl\\\" exe=\\\"/usr/bin/openssl\\\" sig=11 res=1\r\n[  254.808101] audit: type=1701 audit(1637346259.143:11): auid=4294967295 uid=0 gid=0 ses=4294967295 pid=19311 comm=\\\"openssl\\\" exe=\\\"/usr/bin/openssl\\\" sig=11 res=1\r\nrch64-poky-linux-gcc  -mcpu=cortex-a53 -march=armv8-a+crc+crypto -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security -Wdate-time --sysroot=recipe-sysroot -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=                      -fdebug-prefix-map=                      -fdebug-prefix-map=                      -fdebug-prefix-map=  -DOPENSSL_USE_NODELETE -DOPENSSL_PIC -DOPENSSL_BUILDING_OPENSSL -DNDEBUG\r\nCPUINFO: OPENSSL_armcap=0xbf\r\nevp                  0.00         0.00         0.00         0.00         0.00         0.00 \r\n```\r\n\r\nSuccess log without pipe tee\r\n**$ openssl speed -engine devcrypto -multi 8 -elapsed -evp aes-128-cbc**\r\n```\r\nForked child 0\r\nForked child 1\r\n...\r\nGot: +H:16:64:256:1024:8192:16384 from 1\r\nGot: +F:25:AES-128-CBC:400765.22:1724501.33:4028330.67:5834410.67:6174037.33:6167133.55 from 1\r\nGot: +H:16:64:256:1024:8192:16384 from 2\r\nGot: +F:25:AES-128-CBC:421415.38:1731370.67:4025088.00:5618005.33:6164548.49:6149461.33 from 2\r\nGot: +H:16:64:256:1024:8192:16384 from 3\r\nGot: +F:25:AES-128-CBC:426242.14:1732794.65:4022528.00:5638826.67:6179498.67:6208385.28 from 3\r\nGot: +H:16:64:256:1024:8192:16384 from 4\r\nGot: +F:25:AES-128-CBC:411833.56:1685205.33:4016213.33:5669205.33:6108501.33:6160384.00 from 4\r\nGot: +H:16:64:256:1024:8192:16384 from 5\r\nGot: +F:25:AES-128-CBC:425812.97:1480362.67:4025344.00:5775018.67:6119424.00:6187690.67 from 5\r\nGot: +H:16:64:256:1024:8192:16384 from 6\r\nGot: +F:25:AES-128-CBC:370832.00:1633536.00:4013738.67:5734058.67:6149461.33:6154922.67 from 6\r\nGot: +H:16:64:256:1024:8192:16384 from 7\r\nGot: +F:25:AES-128-CBC:391856.00:1567424.00:4017322.67:5698560.00:6083925.33:6198613.33 from 7\r\nversion: 3.0.0\r\nbuilt on: Tue Sep  7 11:46:32 2021 UTC\r\noptions: bn(64,64)\r\ncompiler: aarch64-poky-linux-gcc  -mcpu=cortex-a53 -march=armv8-a+crc+crypto -fstack-protector-strong  -O2 -D_FORTIFY_SOURCE=2 -Wformat -Wformat-security -Werror=format-security -Wdate-time --sysroot=recipe-sysroot -O2 -pipe -g -feliminate-unused-debug-types -fmacro-prefix-map=                      -fdebug-prefix-map=                      -fdebug-prefix-map=                      -fdebug-prefix-map=  -DOPENSSL_USE_NODELETE -DOPENSSL_PIC -DOPENSSL_BUILDING_OPENSSL -DNDEBUG\r\nCPUINFO: OPENSSL_armcap=0xbf\r\nevp               2848.76k    11555.19k    28148.57k    39968.09k    42979.40k    43226.59k\r\n```",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/17532/comments",
    "author": "jaingaurav2712",
    "comments": [
      {
        "user": "t8m",
        "created_at": "2022-01-18T11:08:09Z",
        "body": "Unfortunately I cannot reproduce this issue. Is the `-engine devcrypto` critical to reproduce it?"
      },
      {
        "user": "jaingaurav2712",
        "created_at": "2022-01-18T11:12:47Z",
        "body": "Yes ```-engine devcrypto``` is critical.\r\nusing this we are trying to offload symmetric cipher ```aes-128-cbc``` via cryptodev module.\r\n\r\nthis test is working well with previous openssl versions (1.1.1l) and broken in openssl 3.0"
      },
      {
        "user": "jaingaurav2712",
        "created_at": "2022-03-28T11:11:04Z",
        "body": "any update on this?"
      },
      {
        "user": "t8m",
        "created_at": "2022-10-11T15:27:37Z",
        "body": "Duplicate of #17995"
      }
    ]
  },
  {
    "number": 17285,
    "title": "dhparam needs quieting option for scripting",
    "created_at": "2021-12-15T20:41:25Z",
    "closed_at": "2022-02-02T10:32:15Z",
    "labels": [
      "branch: master",
      "good first issue",
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/17285",
    "body": "I'm using a `/etc/cron.daily/` file that does:\r\n\r\n```\r\n#!/bin/sh\r\n\r\nBITS=4096\r\nGENERATOR=-2\r\n\r\nopenssl dhparam -out /etc/pki/tls/misc/dhparam.pem.new \\\r\n\t\t$GENERATOR $BITS > /dev/null \\\r\n\t&& mv -f /etc/pki/tls/misc/dhparam.pem.new /etc/pki/tls/misc/dhparam \\\r\n\t&& apachectl restart\r\n```\r\n\r\nto generate daily `dhparam` files which I then use in `ssl.conf` as:\r\n\r\n```\r\nSSLOpenSSLConfCmd DHParameters /etc/pki/tls/misc/dhparam.pem\r\n```\r\n\r\nto change my key exchange parameters daily.  Problem is that:\r\n\r\n1. `cron` gets confused by commands writing to `stderr` even if the script exits with `0` and wants to report it as a possible failure;\r\n2. more broadly, this violates the UNIX principle of \"be quiet if everything succeeds, but complain if it doesn't\" (i.e. \"no news is good news\");\r\n\r\nOther commands that are likely to be batched or at least scripted (like `genrsa` or `ecparam`) would do well to either send \"busy noise\" (as opposed to errors) to `stdout` or have an `openssl -q <cmd> ...` option to stifle output in normal execution.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/17285/comments",
    "author": "pprindeville",
    "comments": [
      {
        "user": "pprindeville",
        "created_at": "2021-12-22T04:26:46Z",
        "body": "See PR #17334."
      },
      {
        "user": "pprindeville",
        "created_at": "2021-12-23T17:52:50Z",
        "body": "Changed from `-quiet` to `-verbose` to be consistent with `req`, `genrsa`, `dsaparam`, `gendsa`, etc.\r\n\r\nThe odd man out is `genpkey` which still uses `-quiet`."
      },
      {
        "user": "t8m",
        "created_at": "2022-02-02T10:32:15Z",
        "body": "Fixed by #17336"
      }
    ]
  },
  {
    "number": 17194,
    "title": "exclude all COFF binaries from \"symbol_presence\" test",
    "created_at": "2021-12-04T16:14:22Z",
    "closed_at": "2021-12-06T15:48:21Z",
    "labels": [
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/17194",
    "body": "Some release 3.0 tests fail on CYGWIN:\r\n- symbol_presence\r\n- abort\r\n\r\nRequest is for first one.\r\n\r\nRemark: In corrections for issue #13558 looks like that MINGW is excluded by accident (mistake). For good this is right decision.\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/17194/comments",
    "author": "petrovr",
    "comments": [
      {
        "user": "petrovr",
        "created_at": "2021-12-04T16:16:52Z",
        "body": "For protocol details for failed tests:\r\n```\r\n....\r\n01-test_symbol_presence.t .......... 1/?\r\n# Number of lines in @nm_lines before massaging: 0\r\n# Number of lines in @def_lines before massaging: 5377\r\n# Number of lines in @nm_lines after massaging: 0\r\n# Number of lines in @def_lines after massaging: 5373\r\n# The following symbols are missing in cygcrypto-3.dll:\r\n#   ACCESS_DESCRIPTION_free\r\n#   ....\r\n#   v2i_GENERAL_NAME_ex\r\nnot ok 2 - check that there are no missing symbols in cygcrypto-3.dll\r\n01-test_symbol_presence.t .......... 3/? ---------------------------------------\r\n# Number of lines in @nm_lines before massaging: 0\r\n# Number of lines in @def_lines before massaging: 521\r\n# Number of lines in @nm_lines after massaging: 0\r\n# Number of lines in @def_lines after massaging: 517\r\n# The following symbols are missing in cygssl-3.dll:\r\n#   BIO_f_ssl\r\n# ....\r\n#   i2d_SSL_SESSION\r\nnot ok 4 - check that there are no missing symbols in cygssl-3.dll\r\n# ------------------------------------------------------------------------------\r\n#   Failed test 'check that there are no missing symbols in cygssl-3.dll'\r\n#   at test/recipes/01-test_symbol_presence.t line 135.\r\n01-test_symbol_presence.t .......... Dubious, test returned 2 (wstat 512, 0x200)\r\nFailed 2/4 subtests\r\n....\r\n```\r\n```\r\n...\r\n01-test_abort.t ....................\r\ntest/aborttest.c:14: OpenSSL internal error: Voluntary abort\r\n*** starting debugger for pid 20495, tid 2088\r\n../../util/wrap.pl ../../test/aborttest.exe => 0\r\nnot ok 1 - Testing that abort is caught correctly\r\n01-test_abort.t .................... 1/? ---------------------------------------\r\n#   Failed test 'Testing that abort is caught correctly'\r\n#   at test/recipes/01-test_abort.t line 16.\r\n#          got: '1'\r\n#     expected: '0'\r\n01-test_abort.t .................... Dubious, test returned 1 (wstat 256, 0x100)\r\nFailed 1/1 subtests\r\n....\r\n```"
      },
      {
        "user": "petrovr",
        "created_at": "2021-12-04T16:27:16Z",
        "body": "The request to exclude \"symbol test\" is because test look like is oriented to ELF targets and nm utility from binutils.\r\n\r\nNM is not suitable to this tests when is used COFF binary. Also test is skipped in 1.1.1 because it search for lib[foo].so  while used is cyg[foo].dll or lib[foo].dll.\r\n\r\n----\r\nSome resutls from nm command:\r\n$ nm cygcrypto-3.dll  | grep ' [BDT] ' | grep ACCESS_DESCRIPTION_free\r\n0000.... T ACCESS_DESCRIPTION_free\r\n\r\n$ nm cygcrypto-3.dll  | grep ' [BDT] ' | grep v2i_GENERAL_NAME_ex\r\n000.... T v2i_GENERAL_NAME_ex\r\n\r\n$ LANG=C nm -DPg cygcrypto-3.dll\r\nnm: cygcrypto-3.dll: **no symbols**\r\n\r\n$ LANG=C nm -Pg cygcrypto-3.dll  | grep ACCESS_DESCRIPTION_free\r\nACCESS_DESCRIPTION_free T ...\r\n\r\n$ nm cygcrypto-3.dll  | grep ' [BDT] ' | grep ACCESS_DESCRIPTION_free\r\n00000005e03ce020 T ACCESS_DESCRIPTION_free\r\n\r\n$ nm cygcrypto-3.dll  | grep ' [BDT] ' | grep v2i_GENERAL_NAME_ex\r\n00000005e03d5230 T v2i_GENERAL_NAME_ex\r\n\r\n$ LANG=C nm -DPg cygcrypto-3.dll\r\nnm: cygcrypto-3.dll: no symbols\r\n\r\n$ nm -Pg cygcrypto-3.dll |grep ' [BCSDT] '  | wc -l\r\n7308\r\n\r\n$ nm cygssl-3.dll | grep ASN1_OCTET_STRING_free\r\n000.... I __imp_ASN1_OCTET_STRING_free\r\n000.... T ASN1_OCTET_STRING_free\r\n\r\nAs is visible from above commands NM based test cannot be used for COFF binary. \r\n\r\n----\r\nFor protocol results from 1.1.1 branch\r\n```\r\n../test/recipes/01-test_symbol_presence.t ..\r\n1..4\r\n# NOTE: developer test!  It's possible that it won't run on your\r\n# platform, and that's perfectly fine.  This is mainly for developers\r\n# on Unix to check that our shared libraries are consistent with the\r\n# ordinals (util/*.num in the source tree), something that should be\r\n# good enough a check for the other platforms as well.\r\nok 1 # skip Can't run 'nm -DPg ../../libcrypto.so' => 256...  ignoring\r\nok 2 # skip Can't run 'nm -DPg ../../libcrypto.so' => 256...  ignoring\r\nok 3 # skip Can't run 'nm -DPg ../../libssl.so' => 256...  ignoring\r\nok 4 # skip Can't run 'nm -DPg ../../libssl.so' => 256...  ignoring\r\nok\r\nAll tests successful.\r\n```\r\n\r\n"
      },
      {
        "user": "t8m",
        "created_at": "2021-12-06T15:47:25Z",
        "body": "This is fixed with #17119 "
      },
      {
        "user": "petrovr",
        "created_at": "2021-12-07T19:12:55Z",
        "body": "Closed?\r\nWhat in  #17119 is related to this?"
      }
    ]
  },
  {
    "number": 14949,
    "title": "Deprecate the COMP_xxx API",
    "created_at": "2021-04-20T21:03:31Z",
    "closed_at": "2021-06-04T14:34:19Z",
    "labels": [
      "branch: master",
      "help wanted"
    ],
    "url": "https://github.com/openssl/openssl/pull/14949",
    "body": "Fixes: #14506\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/14949/comments",
    "author": "richsalz",
    "comments": [
      {
        "user": "slontis",
        "created_at": "2021-04-21T02:02:14Z",
        "body": "The test failure is relevant"
      },
      {
        "user": "richsalz",
        "created_at": "2021-04-21T14:47:11Z",
        "body": "Update commit pushed.  Let;s see how things look now.  "
      },
      {
        "user": "richsalz",
        "created_at": "2021-04-21T20:26:28Z",
        "body": "I'm never going to be able to make this work.  I have some kind of block about understanding how openssl does deprecation.  Sorry.  Leaving this around in case someone wants to pick it up and fix it.\r\n"
      },
      {
        "user": "richsalz",
        "created_at": "2021-05-10T15:21:33Z",
        "body": "can someone clear the \"review pending\" flag?"
      },
      {
        "user": "richsalz",
        "created_at": "2021-06-04T14:34:19Z",
        "body": "Closing this in favor of #15621 and its possible followons."
      }
    ]
  },
  {
    "number": 14578,
    "title": "ARM assembly pack: translate bit-sliced AES implementation to AArch64",
    "created_at": "2021-03-16T18:56:04Z",
    "closed_at": "2021-05-04T08:28:36Z",
    "labels": [
      "approval: review pending",
      "branch: 1.1.1",
      "help wanted"
    ],
    "url": "https://github.com/openssl/openssl/pull/14578",
    "body": "This addresses a performance issue on the Raspberry Pi 4, when running in AArch64 mode. This device feature a Cortex-A72 CPU, without the cryptography extensions. OpenSSL includes a bit-sliced AES implementation for Arm cores which is used by the Raspberry Pi 4 in AArch32 mode, but this has not been usable in AArch64 mode until now. In fact, it runs a little faster on AArch64 than AArch32 because there are more registers available (so less spilling of variables to the stack is required) and I have been able to schedule the instructions to better suit modern CPUs that are superscalar for SIMD instructions.\r\n\r\nThe AArch32 version featured a build variant which was used at one point in the past when the same source file was built into the Linux kernel. Linux has since replaced this with a dedicated implementation, so this build variant is not carried across to the AArch64 version.\r\n\r\nHere are some benchmarks for a 1.5 GHz Raspberry Pi 4, using `openssl speed -evp <type>` first with and then without `-decrypt`:\r\n\r\nBefore\r\n\r\ntype            | 16 bytes    | 64 bytes    |256 bytes   |1024 bytes   |8192 bytes  |16384 bytes\r\n----------------|-------------|-------------|------------|-------------|------------|------------\r\naes-256-cbc     | 20985.17k   | 40250.30k   | 41440.43k  |  41834.15k  |  41945.77k |   41899.35k\r\naes-256-cbc     | 27709.77k   | 29490.15k   | 30024.11k  |  30124.03k  |  30203.90k |   30206.63k\r\naes-256-ctr     | 25902.21k   | 28224.73k   | 29000.96k  |  29195.26k  |  29253.63k |   29261.82k\r\naes-256-ctr     | 26052.76k   | 28445.89k   | 29051.39k  |  29178.88k  |  29253.63k |   29256.36k\r\naes-256-xts     | 12040.37k   | 18575.40k   | 21351.51k  |  22141.61k  |  22421.50k |   22435.16k\r\naes-256-xts     | 13714.33k   | 23058.97k   | 27679.66k  |  29090.82k  |  29521.24k |   29545.81k\r\n\r\nAfter\r\n\r\ntype            | 16 bytes    | 64 bytes    |256 bytes   |1024 bytes   |8192 bytes  |16384 bytes\r\n----------------|-------------|-------------|------------|-------------|------------|------------\r\naes-256-cbc     | 46384.37k   | 54493.12k   | 64383.74k  |  69976.41k  |  71789.23k |   71931.22k\r\naes-256-cbc     | 26784.13k   | 29198.31k   | 29956.35k  |  30095.29k  |  30198.44k |   30190.25k\r\naes-256-ctr     | 44068.21k   | 53480.06k   | 74281.22k  |  82495.83k  |  85330.60k |   85475.33k\r\naes-256-ctr     | 43571.85k   | 53088.87k   | 74143.91k  |  82298.88k  |  85502.63k |   85535.40k\r\naes-256-xts     | 15152.73k   | 25001.58k   | 58084.27k  |  66503.34k  |  70372.01k |   70533.12k\r\naes-256-xts     | 16100.20k   | 29117.95k   | 68045.31k  |  78810.11k  |  82823.85k |   83077.80k\r\n\r\nThis demonstrates a significant speed-up in all cases except CBC encryption (which by its nature is impossible to parallellise across multiple crypto blocks in the manner performed by bit-slicing).\r\n\r\nThe `make test` suite passes.\r\n\r\nA separate PR #14592 has been raised to apply the equivalent change to master.\r\n\r\nOne thing that I noticed during debugging is that the `make test` suite occasionally calls the functions with identical input and output pointers. The C prototypes are defined by the types `cbc128_f` and `ctr128_f` in `modes.h` and struct `EVP_AES_XTS_CTX` member `stream` in `e_aes.c`. In all these cases, the `in` and `out` arguments to the function pointers do not feature a `restrict` qualifier, so this is a valid way to call them as far as a C compiler is concerned.\r\n\r\nHowever, I'm aware that the AArch32 implementations (and doubtless many others) do not honour calls with pointers that alias in any other manner than strict equality - in other words, if the input and output buffers only partially overlap. At least for now, this is also the case with my AArch64 implementation. Since the input and output data are of identical size, this could be handled by `memmove`ing the source to the destination, then performing in-place de/encryption at the destination address. Since this would be a fix required in many places, I wonder whether it would be better implemented as a generic wrapper in some way?\r\n\r\nThe other course of action, of course, is to leave things as they are. But in that case, may I suggest that it's documented somewhere that identical `in` and `out` pointers are permitted, but that is the only form of pointer aliasing that is?\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/14578/comments",
    "author": "bavison",
    "comments": [
      {
        "user": "paulidale",
        "created_at": "2021-03-17T02:31:36Z",
        "body": "We will need a version of this that goes into master, we put changes into master and then other branches.\r\n\r\nOTC: should this be merged to 1.1.1?\r\n\r\nI've added the _help wanted_ tag in the hope that somebody who understands ARM64 assembler can help review this."
      },
      {
        "user": "t8m",
        "created_at": "2021-03-17T11:38:00Z",
        "body": "Not sure this can be treated as pure bug fix (for the 1.1.1 merge)."
      },
      {
        "user": "paulidale",
        "created_at": "2021-03-17T12:33:38Z",
        "body": "It would seem to be like some of the other performance enhancements we back ported: isolated to a specific architecture that's not well supported.  It's not quite the same, I'll put an OTC decision on this.\r\n\r\nRegardless, we need this on master first.\r\n"
      },
      {
        "user": "openssl-machine",
        "created_at": "2021-04-17T00:07:35Z",
        "body": "This PR is in a state where it requires action by @openssl/otc but the last update was 30 days ago"
      },
      {
        "user": "paulidale",
        "created_at": "2021-05-04T08:28:36Z",
        "body": "The OTC has made the decision that this should not be included in 1.1.1"
      }
    ]
  },
  {
    "number": 14515,
    "title": "1.1.1i s390 32bit no-asm build is broken. The exectuable openssl has missing symbols from bn_asm.c",
    "created_at": "2021-03-11T14:26:46Z",
    "closed_at": "2024-02-22T15:28:04Z",
    "labels": [
      "branch: 1.1.1",
      "help wanted",
      "triaged: bug"
    ],
    "url": "https://github.com/openssl/openssl/issues/14515",
    "body": "We are rolling our OpenSSL 1.1.1 builds across further platforms and have hit two issues with Linux s390 builds. They are common to both RedHat and Suse s390 build envs.\r\n\r\nAs with all our builds we are building OpenSSL to create static libraries for later linkage into .so modules.\r\n\r\nThis issue relates to an inability to link the openssl executable on **no-asm** 32bit builds, which stops these builds.\r\nThe other issue is with **asm** builds. The s390xcpuid.o creates a reported -fPIC error which requires the use of a -Bsymbolic linkage option to work around.  This option then breaks our external API. I will raise this **asm** content build issue in another report.\r\n\r\nBetween the two issues we could not build any usable OpenSSL static linkable libraries.\r\n\r\nBack to the **no-asm** 32bit build issue:\r\n\r\nNote: The 64bit no-asm builds work correctly. This is just a 32bit issue. It affects threaded and single-threaded builds.\r\n\r\nAfter investigating the build sequences I found that the following line in the \"linux32-s390x\" section of 10-main.conf is causing bn_asm.c compilation to bn_asm.o to create bn_asm.o without usable symbols.\r\n ```\r\n        bn_asm_src       => sub { my $r=join(\" \",@_); $r=~s|asm/s390x\\.S|bn_asm.c|; $r; },\r\n ```\r\nI have yet to investigate what it is attempting to achieve.\r\n\r\nRemoving this line entirely enables 32bit builds to complete and builds a working openssl executable.\r\n\r\nThe linkage attempt (shown below) appears to be missing the functions defined in bn_asm.c.  However bn_asm.o is archived into libcrypto.a. And after extracting bn_asm.o and running nm on it, it shows the symbols are present in the object. \r\nSo, I assumed that the content of the bn_asm.c module must be being modified between the versions.\r\nThis was not a problem with our 1.0.2 builds.\r\nIt would appear that the changes in that source module between 1.0.2 and 1.1.1 are the deletion of the previous inclusion of <openssl/crypto.h>, plus a collection of return value bracket encapsulations for each function.\r\nI stopped investigating at this point once I discovered that the bn_asm_src   removal from the conf file solved the problem.\r\n\r\nThe following is the openssl executable linkage error...  The standard build configuration information follows beneath the linkage error details.\r\n\r\n ```\r\n${LDCMD:-gcc} -m31 -Wa,-mzarch -Wall -O3 -mbackchain -O2 -L.   \\\r\n                -o apps/openssl apps/asn1pars.o apps/ca.o apps/ciphers.o apps/cms.o apps/crl.o apps/crl2p7.o apps/dgst.o apps/dhparam.o apps/dsa.o apps/dsaparam.o apps/ec.o apps/ecparam.o apps/enc.o apps/engine.o apps/errstr.o apps/gendsa.o apps/genpkey.o apps/genrsa.o apps/nseq.o apps/ocsp.o apps/openssl.o apps/passwd.o apps/pkcs12.o apps/pkcs7.o apps/pkcs8.o apps/pkey.o apps/pkeyparam.o apps/pkeyutl.o apps/prime.o apps/rand.o apps/rehash.o apps/req.o apps/rsa.o apps/rsautl.o apps/s_client.o apps/s_server.o apps/s_time.o apps/sess_id.o apps/smime.o apps/speed.o apps/spkac.o apps/srp.o apps/storeutl.o apps/ts.o apps/verify.o apps/version.o apps/x509.o \\\r\n                 apps/libapps.a -lssl -lcrypto -ldl\r\n./libcrypto.a(bn_mod.o): In function `bn_mod_add_fixed_top':\r\nbn_mod.c:(.text+0x73c): undefined reference to `bn_sub_words'\r\nbn_mod.c:(.text+0x84e): undefined reference to `bn_sub_words'\r\n./libcrypto.a(bn_mont.o): In function `bn_from_montgomery_word':\r\nbn_mont.c:(.text+0x5aa): undefined reference to `bn_mul_add_words'\r\nbn_mont.c:(.text+0x61a): undefined reference to `bn_sub_words'\r\n./libcrypto.a(bn_mul.o): In function `bn_mul_low_normal':\r\nbn_mul.c:(.text+0x26): undefined reference to `bn_mul_words'\r\nbn_mul.c:(.text+0x52): undefined reference to `bn_mul_add_words'\r\nbn_mul.c:(.text+0x6c): undefined reference to `bn_mul_add_words'\r\nbn_mul.c:(.text+0x96): undefined reference to `bn_mul_add_words'\r\nbn_mul.c:(.text+0xb2): undefined reference to `bn_mul_add_words'\r\n./libcrypto.a(bn_mul.o): In function `bn_mul_normal':\r\nbn_mul.c:(.text+0x114): undefined reference to `bn_mul_words'\r\nbn_mul.c:(.text+0x138): undefined reference to `bn_mul_add_words'\r\nbn_mul.c:(.text+0x158): undefined reference to `bn_mul_add_words'\r\nbn_mul.c:(.text+0x178): undefined reference to `bn_mul_add_words'\r\nbn_mul.c:(.text+0x19c): undefined reference to `bn_mul_add_words'\r\nbn_mul.c:(.text+0x1c6): undefined reference to `bn_mul_words'\r\n./libcrypto.a(bn_mul.o): In function `bn_sub_part_words':\r\nbn_mul.c:(.text+0x1f2): undefined reference to `bn_sub_words'\r\n./libcrypto.a(bn_mul.o): In function `bn_mul_recursive':\r\nbn_mul.c:(.text+0x540): undefined reference to `bn_add_words'\r\nbn_mul.c:(.text+0x562): undefined reference to `bn_sub_words'\r\nbn_mul.c:(.text+0x578): undefined reference to `bn_add_words'\r\nbn_mul.c:(.text+0x63a): undefined reference to `bn_add_words'\r\nbn_mul.c:(.text+0x6d6): undefined reference to `bn_mul_comba8'\r\nbn_mul.c:(.text+0x6e8): undefined reference to `bn_mul_comba8'\r\nbn_mul.c:(.text+0x700): undefined reference to `bn_mul_comba8'\r\nbn_mul.c:(.text+0x80a): undefined reference to `bn_mul_comba8'\r\n./libcrypto.a(bn_mul.o): In function `bn_mul_low_recursive':\r\nbn_mul.c:(.text+0x8be): undefined reference to `bn_add_words'\r\nbn_mul.c:(.text+0x8cc): undefined reference to `bn_add_words'\r\nbn_mul.c:(.text+0x908): undefined reference to `bn_add_words'\r\nbn_mul.c:(.text+0x926): undefined reference to `bn_add_words'\r\n./libcrypto.a(bn_mul.o): In function `bn_mul_part_recursive':\r\nbn_mul.c:(.text+0xade): undefined reference to `bn_add_words'\r\nbn_mul.c:(.text+0xb06): undefined reference to `bn_sub_words'\r\nbn_mul.c:(.text+0xb26): undefined reference to `bn_add_words'\r\nbn_mul.c:(.text+0xbfa): undefined reference to `bn_mul_comba8'\r\nbn_mul.c:(.text+0xc0e): undefined reference to `bn_mul_comba8'\r\nbn_mul.c:(.text+0xd4e): undefined reference to `bn_add_words'\r\n./libcrypto.a(bn_mul.o): In function `bn_mul_fixed_top':\r\nbn_mul.c:(.text+0x111c): undefined reference to `bn_mul_comba8'\r\n./libcrypto.a(bn_sqr.o): In function `bn_sqr_normal':\r\nbn_sqr.c:(.text+0x70): undefined reference to `bn_mul_words'\r\nbn_sqr.c:(.text+0xb6): undefined reference to `bn_mul_add_words'\r\nbn_sqr.c:(.text+0xd2): undefined reference to `bn_add_words'\r\nbn_sqr.c:(.text+0xe2): undefined reference to `bn_sqr_words'\r\nbn_sqr.c:(.text+0xf4): undefined reference to `bn_add_words'\r\n./libcrypto.a(bn_sqr.o): In function `bn_sqr_recursive':\r\nbn_sqr.c:(.text+0x178): undefined reference to `bn_sub_words'\r\nbn_sqr.c:(.text+0x1c6): undefined reference to `bn_add_words'\r\nbn_sqr.c:(.text+0x1e4): undefined reference to `bn_sub_words'\r\nbn_sqr.c:(.text+0x1f6): undefined reference to `bn_add_words'\r\nbn_sqr.c:(.text+0x29c): undefined reference to `bn_sqr_comba4'\r\nbn_sqr.c:(.text+0x2ac): undefined reference to `bn_sqr_comba8'\r\nbn_sqr.c:(.text+0x2d8): undefined reference to `bn_sub_words'\r\n./libcrypto.a(bn_sqr.o): In function `bn_sqr_fixed_top':\r\nbn_sqr.c:(.text+0x41c): undefined reference to `bn_sqr_comba8'\r\nbn_sqr.c:(.text+0x42e): undefined reference to `bn_sqr_comba4'\r\n./libcrypto.a(bn_word.o): In function `BN_mul_word':\r\nbn_word.c:(.text+0xaa): undefined reference to `bn_mul_words'\r\n./libcrypto.a(bn_word.o): In function `BN_div_word':\r\nbn_word.c:(.text+0x3e2): undefined reference to `bn_div_words'\r\n./libcrypto.a(bn_add.o): In function `BN_usub':\r\nbn_add.c:(.text+0x50): undefined reference to `bn_sub_words'\r\n./libcrypto.a(bn_add.o): In function `BN_uadd':\r\nbn_add.c:(.text+0x160): undefined reference to `bn_add_words'\r\n./libcrypto.a(bn_div.o): In function `bn_div_fixed_top':\r\nbn_div.c:(.text+0x27a): undefined reference to `bn_mul_words'\r\nbn_div.c:(.text+0x2a2): undefined reference to `bn_sub_words'\r\nbn_div.c:(.text+0x2fe): undefined reference to `bn_add_words'\r\n./libcrypto.a(bn_nist.o): In function `BN_nist_mod_521':\r\nbn_nist.c:(.text+0x27a): undefined reference to `bn_add_words'\r\nbn_nist.c:(.text+0x28e): undefined reference to `bn_sub_words'\r\n./libcrypto.a(bn_nist.o): In function `BN_nist_mod_384':\r\nbn_nist.c:(.text+0x824): undefined reference to `bn_sub_words'\r\nbn_nist.c:(.text+0x86c): undefined reference to `bn_sub_words'\r\nbn_nist.c:(.text+0x902): undefined reference to `bn_add_words'\r\nbn_nist.c:(.text+0x908): undefined reference to `bn_add_words'\r\n./libcrypto.a(bn_nist.o): In function `BN_nist_mod_256':\r\nbn_nist.c:(.text+0xd1e): undefined reference to `bn_sub_words'\r\nbn_nist.c:(.text+0xd58): undefined reference to `bn_sub_words'\r\nbn_nist.c:(.text+0xdee): undefined reference to `bn_add_words'\r\nbn_nist.c:(.text+0xdf4): undefined reference to `bn_add_words'\r\n./libcrypto.a(bn_nist.o): In function `BN_nist_mod_224':\r\nbn_nist.c:(.text+0x109c): undefined reference to `bn_sub_words'\r\nbn_nist.c:(.text+0x10f6): undefined reference to `bn_sub_words'\r\nbn_nist.c:(.text+0x118c): undefined reference to `bn_add_words'\r\nbn_nist.c:(.text+0x1192): undefined reference to `bn_add_words'\r\n./libcrypto.a(bn_nist.o): In function `BN_nist_mod_192':\r\nbn_nist.c:(.text+0x144e): undefined reference to `bn_sub_words'\r\nbn_nist.c:(.text+0x14ac): undefined reference to `bn_sub_words'\r\ncollect2: ld returned 1 exit status\r\nmake[7]: *** [apps/openssl] Error 1\r\n ```\r\n\r\nBuild configuration…\r\n\r\n ```\r\nCommand line (with current working directory = .):\r\n\r\n    /home1/hub/perl-openssl/bin/perl ./Configure linux32-s390x no-threads no-asm enable-ssl3 enable-ssl3-method no-ec2m no-idea no-rc5 enable-weak-ssl-ciphers no-shared -DOPENSSL_NO_AUTOLOAD_CONFIG --prefix=/home1/hub/axle/axle59/ri/mfcrypto/openssl/single/32/openssl/buildoutput --openssldir=/home1/hub/axle/axle59/ri/mfcrypto/openssl/single/32/openssl/buildoutput -D_FILE_OFFSET_BITS=64 -mbackchain -O2\r\n\r\nPerl information:\r\n\r\n    /home1/hub/perl-openssl/bin/perl\r\n    5.30.0 for s390x-linux\r\n\r\nEnabled features:\r\n\r\n    aria\r\n    async\r\n    autoalginit\r\n    autoerrinit\r\n    autoload-config\r\n    bf\r\n    blake2\r\n    buildtest-c\\+\\+\r\n    camellia\r\n    capieng\r\n    cast\r\n    chacha\r\n    cmac\r\n    cms\r\n    comp\r\n    ct\r\n    deprecated\r\n    des\r\n    dgram\r\n    dh\r\n    dsa\r\n    dso\r\n    dtls\r\n    ec\r\n    ecdh\r\n    ecdsa\r\n    engine\r\n    err\r\n    filenames\r\n    gost\r\n    hw(-.+)?\r\n    makedepend\r\n    md4\r\n    mdc2\r\n    multiblock\r\n    nextprotoneg\r\n    pinshared\r\n    ocb\r\n    ocsp\r\n    pic\r\n    poly1305\r\n    posix-io\r\n    psk\r\n    rc2\r\n    rc4\r\n    rdrand\r\n    rfc3779\r\n    rmd160\r\n    scrypt\r\n    seed\r\n    siphash\r\n    sm2\r\n    sm3\r\n    sm4\r\n    sock\r\n    srp\r\n    srtp\r\n    sse2\r\n    ssl\r\n    static-engine\r\n    stdio\r\n    tests\r\n    tls\r\n    ts\r\n    ui-console\r\n    whirlpool\r\n    weak-ssl-ciphers\r\n    ssl3\r\n    ssl3-method\r\n    tls1\r\n    tls1-method\r\n    tls1_1\r\n    tls1_1-method\r\n    tls1_2\r\n    tls1_2-method\r\n    tls1_3\r\n    dtls1\r\n    dtls1-method\r\n    dtls1_2\r\n    dtls1_2-method\r\n\r\nDisabled features:\r\n\r\n    afalgeng                [too-old-kernel] OPENSSL_NO_AFALGENG\r\n    asan                    [default]        OPENSSL_NO_ASAN\r\n    asm                     [option]         OPENSSL_NO_ASM\r\n    crypto-mdebug           [default]        OPENSSL_NO_CRYPTO_MDEBUG\r\n    crypto-mdebug-backtrace [default]        OPENSSL_NO_CRYPTO_MDEBUG_BACKTRACE\r\n    devcryptoeng            [default]        OPENSSL_NO_DEVCRYPTOENG\r\n    dynamic-engine          [cascade]        \r\n    ec2m                    [option]         OPENSSL_NO_EC2M\r\n    ec_nistp_64_gcc_128     [default]        OPENSSL_NO_EC_NISTP_64_GCC_128\r\n    egd                     [default]        OPENSSL_NO_EGD\r\n    external-tests          [default]        OPENSSL_NO_EXTERNAL_TESTS\r\n    fuzz-libfuzzer          [default]        OPENSSL_NO_FUZZ_LIBFUZZER\r\n    fuzz-afl                [default]        OPENSSL_NO_FUZZ_AFL\r\n    heartbeats              [default]        OPENSSL_NO_HEARTBEATS\r\n    idea                    [option]         OPENSSL_NO_IDEA (skip crypto/idea)\r\n    md2                     [default]        OPENSSL_NO_MD2 (skip crypto/md2)\r\n    msan                    [default]        OPENSSL_NO_MSAN\r\n    rc5                     [option]         OPENSSL_NO_RC5 (skip crypto/rc5)\r\n    sctp                    [default]        OPENSSL_NO_SCTP\r\n    shared                  [option]         \r\n    ssl-trace               [default]        OPENSSL_NO_SSL_TRACE\r\n    threads                 [option]         \r\n    ubsan                   [default]        OPENSSL_NO_UBSAN\r\n    unit-test               [default]        OPENSSL_NO_UNIT_TEST\r\n    zlib                    [default]        \r\n    zlib-dynamic            [default]        \r\n\r\nConfig target attributes:\r\n\r\n    AR => \"ar\",\r\n    ARFLAGS => \"r\",\r\n    CC => \"gcc\",\r\n    CFLAGS => \"-Wall -O3\",\r\n    CXX => \"g++\",\r\n    CXXFLAGS => \"-Wall -O3\",\r\n    HASHBANGPERL => \"/usr/bin/env perl\",\r\n    RANLIB => \"ranlib\",\r\n    RC => \"windres\",\r\n    aes_asm_src => \"aes_core.c aes_cbc.c\",\r\n    aes_obj => \"aes_core.o aes_cbc.o\",\r\n    apps_aux_src => \"\",\r\n    apps_init_src => \"\",\r\n    apps_obj => \"\",\r\n    bf_asm_src => \"bf_enc.c\",\r\n    bf_obj => \"bf_enc.o\",\r\n    bn_asm_src => \"\",\r\n    bn_obj => \"\",\r\n    bn_ops => \"BN_LLONG RC4_CHAR\",\r\n    build_file => \"Makefile\",\r\n    build_scheme => [ \"unified\", \"unix\" ],\r\n    cast_asm_src => \"c_enc.c\",\r\n    cast_obj => \"c_enc.o\",\r\n    cflags => \"-m31 -Wa,-mzarch\",\r\n    chacha_asm_src => \"chacha_enc.c\",\r\n    chacha_obj => \"chacha_enc.o\",\r\n    cmll_asm_src => \"camellia.c cmll_misc.c cmll_cbc.c\",\r\n    cmll_obj => \"camellia.o cmll_misc.o cmll_cbc.o\",\r\n    cppflags => \"\",\r\n    cpuid_asm_src => \"mem_clr.c\",\r\n    cpuid_obj => \"mem_clr.o\",\r\n    cxxflags => \"-std=c++11 -m31 -Wa,-mzarch\",\r\n    defines => [  ],\r\n    des_asm_src => \"des_enc.c fcrypt_b.c\",\r\n    des_obj => \"des_enc.o fcrypt_b.o\",\r\n    disable => [  ],\r\n    dso_extension => \".so\",\r\n    dso_scheme => \"dlfcn\",\r\n    ec_asm_src => \"\",\r\n    ec_obj => \"\",\r\n    enable => [ \"afalgeng\" ],\r\n    ex_libs => \"-ldl\",\r\n    exe_extension => \"\",\r\n    includes => [  ],\r\n    keccak1600_asm_src => \"keccak1600.c\",\r\n    keccak1600_obj => \"keccak1600.o\",\r\n    lflags => \"\",\r\n    lib_cflags => \"\",\r\n    lib_cppflags => \"-DOPENSSL_USE_NODELETE -DB_ENDIAN\",\r\n    lib_defines => [  ],\r\n    md5_asm_src => \"\",\r\n    md5_obj => \"\",\r\n    modes_asm_src => \"\",\r\n    modes_obj => \"\",\r\n    module_cflags => \"-fPIC\",\r\n    module_cxxflags => \"\",\r\n    module_ldflags => \"-Wl,-znodelete -shared -Wl,-Bsymbolic\",\r\n    multilib => \"/highgprs\",\r\n    padlock_asm_src => \"\",\r\n    padlock_obj => \"\",\r\n    perlasm_scheme => \"31\",\r\n    poly1305_asm_src => \"\",\r\n    poly1305_obj => \"\",\r\n    rc4_asm_src => \"rc4_enc.c rc4_skey.c\",\r\n    rc4_obj => \"rc4_enc.o rc4_skey.o\",\r\n    rc5_asm_src => \"rc5_enc.c\",\r\n    rc5_obj => \"rc5_enc.o\",\r\n    rmd160_asm_src => \"\",\r\n    rmd160_obj => \"\",\r\n    shared_cflag => \"-fPIC\",\r\n    shared_defflag => \"-Wl,--version-script=\",\r\n    shared_defines => [  ],\r\n    shared_extension => \".so.\\$(SHLIB_VERSION_NUMBER)\",\r\n    shared_extension_simple => \".so\",\r\n    shared_ldflag => \"-Wl,-znodelete -shared -Wl,-Bsymbolic\",\r\n    shared_rcflag => \"\",\r\n    shared_sonameflag => \"-Wl,-soname=\",\r\n    shared_target => \"linux-shared\",\r\n    thread_defines => [  ],\r\n    thread_scheme => \"pthreads\",\r\n    unistd => \"<unistd.h>\",\r\n    uplink_aux_src => \"\",\r\n    uplink_obj => \"\",\r\n    wp_asm_src => \"wp_block.c\",\r\n    wp_obj => \"wp_block.o\",\r\n\r\nRecorded environment:\r\n\r\n    AR = \r\n    BUILDFILE = \r\n    CC = \r\n    CFLAGS = \r\n    CPPFLAGS = \r\n    CROSS_COMPILE = \r\n    CXX = \r\n    CXXFLAGS = \r\n    HASHBANGPERL = \r\n    LDFLAGS = \r\n    LDLIBS = \r\n    OPENSSL_LOCAL_CONFIG_DIR = \r\n    PERL = \r\n    RANLIB = \r\n    RC = \r\n    RCFLAGS = \r\n    WINDRES = \r\n    __CNF_CFLAGS = \r\n    __CNF_CPPDEFINES = \r\n    __CNF_CPPFLAGS = \r\n    __CNF_CPPINCLUDES = \r\n    __CNF_CXXFLAGS = \r\n    __CNF_LDFLAGS = \r\n    __CNF_LDLIBS = \r\n\r\nMakevars:\r\n\r\n    AR              = ar\r\n    ARFLAGS         = r\r\n    CC              = gcc\r\n    CFLAGS          = -Wall -O3 -mbackchain -O2\r\n    CPPDEFINES      = OPENSSL_NO_AUTOLOAD_CONFIG _FILE_OFFSET_BITS=64\r\n    CPPFLAGS        = \r\n    CPPINCLUDES     = \r\n    CXX             = g++\r\n    CXXFLAGS        = -Wall -O3 -mbackchain -O2\r\n    HASHBANGPERL    = /usr/bin/env perl\r\n    LDFLAGS         = \r\n    LDLIBS          = \r\n    PERL            = /home1/hub/perl-openssl/bin/perl\r\n    RANLIB          = ranlib\r\n    RC              = windres\r\n    RCFLAGS         = \r\n\r\nNOTE: These variables only represent the configuration view.  The build file\r\ntemplate may have processed these variables further, please have a look at the\r\nbuild file for more exact data:\r\n    Makefile\r\n\r\nbuild file:\r\n\r\n    Makefile\r\n\r\nbuild file templates:\r\n\r\n    Configurations/common0.tmpl\r\n    Configurations/unix-Makefile.tmpl\r\n    Configurations/common.tmpl\r\n ```\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/14515/comments",
    "author": "Simon-Edwards01",
    "comments": [
      {
        "user": "paulidale",
        "created_at": "2021-03-11T22:18:07Z",
        "body": "@p-steuer ??"
      },
      {
        "user": "t8m",
        "created_at": "2024-02-22T15:28:04Z",
        "body": "The version 1.1.1 is not supported anymore. Closing. If this is still an issue with currently supported releases, please open a new issue."
      }
    ]
  },
  {
    "number": 14131,
    "title": "Support cross compillin OpenSSL for target ios-simulator-arm64 on host darwin-arm64(m1)",
    "created_at": "2021-02-08T15:58:38Z",
    "closed_at": "2021-02-18T17:39:17Z",
    "labels": [
      "branch: master",
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/14131",
    "body": "Hello support team\r\nI just found solution for building OpenSSL for target darwin64-arm64-cc which is supportns MacOS\r\nBut is the support to build OpenSSL for target ios-simulator-arm64-cc?",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/14131/comments",
    "author": "6epreu",
    "comments": [
      {
        "user": "6epreu",
        "created_at": "2021-02-09T09:01:46Z",
        "body": "I have added this to 10-main.conf\r\n```\r\n\"ios64sim-arm64-cc\" => {\r\n        inherit_from     => [ \"darwin-common\", asm(\"aarch64_asm\") ],\r\n        cflags           => add(\"-arch arm64 -DOPENSSL_NO_ASM -mios-version-min=7.0.0 -isysroot \\$(CROSS_TOP)/SDKs/\\$(CROSS_SDK) -fno-common\"),\r\n        sys_id           => \"iOS\",\r\n        bn_ops           => \"SIXTY_FOUR_BIT_LONG RC4_CHAR\",\r\n        perlasm_scheme   => \"ios64\",\r\n    },\r\n```\r\n\r\nBut got this\r\n\r\n```\r\nld: building for iOS, but linking in .tbd file (/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/usr/lib/libSystem.tbd) built for iOS Simulator, file '/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator.sdk/usr/lib/libSystem.tbd' for architecture arm64\r\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\r\n\r\n```\r\n"
      },
      {
        "user": "6epreu",
        "created_at": "2021-02-09T13:28:14Z",
        "body": "The full story\r\nI had a project where I have compiled OpenSSL from source for IOS for 2 targets\r\n- for ios-device-arm64 \r\n```\r\n\"ios64-cross\" => {\r\n        inherit_from     => [ \"ios64-xcrun\" ],\r\n        CC               => \"cc\",\r\n        cflags           => add(\"-isysroot \\$(CROSS_TOP)/SDKs/\\$(CROSS_SDK)\"),\r\n    },\r\n```\r\n- for ios-x86_64-simulator\r\n```\r\n\"ios64sim-cross\" => {\r\n        inherit_from     => [ \"darwin-common\", asm(\"no_asm\") ],\r\n        cflags           => add(\"-arch x86_64 -DOPENSSL_NO_ASM -mios-version-min=7.0.0 -isysroot \\$(CROSS_TOP)/SDKs/\\$(CROSS_SDK) -fno-common\"),\r\n        sys_id           => \"iOS\",\r\n        bn_ops           => \"SIXTY_FOUR_BIT_LONG RC4_CHAR\",\r\n        perlasm_scheme   => \"ios64\",\r\n    },\r\n```\r\n\r\nThen pack using lipo\r\n```\r\nlipo ${TMP_DIR}/x86_64/lib/lib${LIBNAME}.a \\\r\n\t${TMP_DIR}/arm64/lib/lib${LIBNAME}.a \\\r\n\t-output ${TMP_DIR}/lib/lib${LIBNAME}.a -create\r\n```\r\n\r\nThis *.a file I have used in my ios SDK project and it have succesfully compiled for simulator and arm device\r\nProfit!\r\n\r\nNow when I got apple m1 computer which is arm64 based I was not surprized that ios SDK project was not able to compile for simulator because now it's arm64 base and I got error like \r\n```\r\nin .../ossl/lib/libcrypto.a(bio_lib.o), building for iOS Simulator, but linking in object file built for iOS, for architecture arm64\r\n```\r\n\r\n**Conclusion**\r\nI need to compile openSsl for simulator arm64 but next thing... Im doubting if I will be able to pack 2 libraries \r\n1) for arm64 device \r\n2) for arm64 simulator \r\nIn one fat *.a file using lipo...\r\n\r\n\r\nAny help really appreciated. Pretty sure that Im not alone in this fight :-)\r\n"
      },
      {
        "user": "paulidale",
        "created_at": "2021-02-09T22:21:09Z",
        "body": "The problem the OpenSSL team has here is that we do not have access to M1 based Macs.  If somebody were to submit a pull request fixing this, it would be considered."
      },
      {
        "user": "6epreu",
        "created_at": "2021-02-18T17:39:11Z",
        "body": "Conclusion\r\n```\r\nexport CROSS_TOP=\"`xcode-select --print-path`/Platforms/iPhoneSimulator.platform/Developer\"\r\nexport CROSS_SDK=\"iPhoneSimulator.sdk\"\r\n./Configure iossimulator-xcrun \"-arch arm64 -fembed-bitcode\" no-asm no-shared no-hw no-async\r\n```\r\n\r\nThis do the tric.\r\nAs a result libssl.a and libcrypto.a will be compiled for arm64 simulator\r\n\r\nCould be close"
      },
      {
        "user": "Jeevhi",
        "created_at": "2021-09-17T12:00:36Z",
        "body": "Thanks @6epreu  It worked, yet to test though!"
      },
      {
        "user": "TheHmmka",
        "created_at": "2023-02-01T07:59:56Z",
        "body": "> Conclusion ` export CROSS_TOP=\"`xcode-select --print-path`/Platforms/iPhoneSimulator.platform/Developer\" export CROSS_SDK=\"iPhoneSimulator.sdk\" ./Configure iossimulator-xcrun \"-arch arm64 -fembed-bitcode\" no-asm no-shared no-hw no-async `\r\n> \r\n> This do the tric. As a result libssl.a and libcrypto.a will be compiled for arm64 simulator\r\n> \r\n> Could be close\r\n\r\nCan you format the code, please, cause it's hard to understand?!"
      },
      {
        "user": "theo-dep",
        "created_at": "2024-06-07T12:20:53Z",
        "body": "> Conclusion\r\n> \r\n> ```\r\n> export CROSS_TOP=\"`xcode-select --print-path`/Platforms/iPhoneSimulator.platform/Developer\"\r\n> export CROSS_SDK=\"iPhoneSimulator.sdk\"\r\n> ./Configure iossimulator-xcrun \"-arch arm64 -fembed-bitcode\" no-asm no-shared no-hw no-async\r\n> ```\r\n> \r\n> This do the tric. As a result libssl.a and libcrypto.a will be compiled for arm64 simulator\r\n> \r\n> Could be close\r\n\r\n@6epreu this code is to compile binaries for arm64 iphone simulator would be? Did you try to create a framework with iphoneos arm64, iphone simulator arm64 and x86_64 in a single file? "
      }
    ]
  },
  {
    "number": 14124,
    "title": "Add an EVP demo for an asymetric cipher",
    "created_at": "2021-02-07T23:29:52Z",
    "closed_at": "2022-03-02T11:24:57Z",
    "labels": [
      "good first issue",
      "help wanted",
      "triaged: documentation"
    ],
    "url": "https://github.com/openssl/openssl/issues/14124",
    "body": "Just for RSA.  Do encrypt and decrypt.  Include a bold comment that this should not be used for bulk encryption.\r\n\r\nIt should be the current best practice (fetch), have proper error handling and resource allocation/deallocation and be in the style of a known answer test.\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/14124/comments",
    "author": "paulidale",
    "comments": [
      {
        "user": "vmfunc",
        "created_at": "2021-03-30T16:37:29Z",
        "body": "I'm trying to work on it. Where should I put the demo tho?"
      },
      {
        "user": "t8m",
        "created_at": "2021-03-30T16:47:58Z",
        "body": "> I'm trying to work on it. Where should I put the demo tho?\r\n\r\nI'd suggest in `demos/evp`"
      },
      {
        "user": "vmfunc",
        "created_at": "2021-03-30T17:22:01Z",
        "body": "> \r\n> \r\n> > I'm trying to work on it. Where should I put the demo tho?\r\n> \r\n> I'd suggest in `demos/evp`\r\n\r\nOkay, thank you"
      },
      {
        "user": "paulidale",
        "created_at": "2021-03-30T23:26:05Z",
        "body": "Rather, I'd suggest creating a new directory in demos: `demos/asmcipher` perhaps?\r\n\r\nThere was an intention to rename `demos/evp` to `demos/cipher` because it only has ciphers.  This was when the `demos/digest` directory was added earlier this year -- it has examples showing EVP level access to digests."
      },
      {
        "user": "t8m",
        "created_at": "2021-03-31T07:38:29Z",
        "body": "Then `demos/asymcipher`. As asmcipher could be confused with assembler implementations."
      },
      {
        "user": "hlandau",
        "created_at": "2022-03-02T11:20:50Z",
        "body": "How is this not covered by demos/encrypt/rsa_encrypt.c?"
      },
      {
        "user": "mattcaswell",
        "created_at": "2022-03-02T11:24:56Z",
        "body": "It is covered by that. It looks like the PR that added that demo (#16283) neglected to mark it as \"fixing\" this issue."
      }
    ]
  },
  {
    "number": 14123,
    "title": "Add an EVP demo for GMAC",
    "created_at": "2021-02-07T23:28:31Z",
    "closed_at": "2021-07-29T23:10:37Z",
    "labels": [
      "good first issue",
      "help wanted",
      "triaged: documentation"
    ],
    "url": "https://github.com/openssl/openssl/issues/14123",
    "body": "It should be the current best practice (fetch), have proper error handling and resource allocation/deallocation and be in the style of a known answer test.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/14123/comments",
    "author": "paulidale",
    "comments": [
      {
        "user": "keshavgbpecdelhi",
        "created_at": "2021-04-29T19:23:51Z",
        "body": "Can a naïve do it ? if yes allow me\r\n"
      },
      {
        "user": "mattcaswell",
        "created_at": "2021-04-29T19:27:51Z",
        "body": "If you think you know enough to have a go then please feel free."
      }
    ]
  },
  {
    "number": 14115,
    "title": "Add an EVP demo for signatures using EC",
    "created_at": "2021-02-07T23:21:13Z",
    "closed_at": "2021-06-03T05:21:35Z",
    "labels": [
      "good first issue",
      "help wanted",
      "triaged: documentation"
    ],
    "url": "https://github.com/openssl/openssl/issues/14115",
    "body": "Use a named curve.  Do both validation and signature generation.\r\n\r\nIt should be the current best practice (fetch), have proper error handling and resource allocation/deallocation and be in the style of a known answer test.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/14115/comments",
    "author": "paulidale",
    "comments": [
      {
        "user": "yuechen-chen",
        "created_at": "2021-05-03T23:59:37Z",
        "body": "Looking into this issue now.."
      },
      {
        "user": "slontis",
        "created_at": "2021-05-13T23:17:47Z",
        "body": "The comment related to KAT here is misleading.. KATS can only be done on verify.. For this example a sign and verify is sufficient."
      }
    ]
  },
  {
    "number": 14113,
    "title": "Add an EVP signature demo for RSA",
    "created_at": "2021-02-07T23:19:34Z",
    "closed_at": "2022-03-06T22:27:11Z",
    "labels": [
      "good first issue",
      "help wanted",
      "triaged: documentation"
    ],
    "url": "https://github.com/openssl/openssl/issues/14113",
    "body": "Use RSA OAEP.  Do both validation and signature generation.\r\n\r\nIt should be the current best practice (fetch), have proper error handling and resource allocation/deallocation and be in the style of a known answer test.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/14113/comments",
    "author": "paulidale",
    "comments": [
      {
        "user": "hlandau",
        "created_at": "2022-03-02T15:42:53Z",
        "body": "I have a rough draft for this but some questions:\r\n\r\n* AIUI OAEP is only applicable to encryption, not signing. What do you want to use?\r\n* PSS is non-deterministic so known answer tests don't seem applicable."
      },
      {
        "user": "t8m",
        "created_at": "2022-03-02T15:55:39Z",
        "body": "IMO it should be RSA-PSS and KAT is not really needed. Just create a signature with one function and verify it with another.\r\n"
      },
      {
        "user": "hlandau",
        "created_at": "2022-03-02T15:59:46Z",
        "body": "Sounds good."
      }
    ]
  },
  {
    "number": 14111,
    "title": "Add an EVP demo for RSA key generation",
    "created_at": "2021-02-07T23:16:43Z",
    "closed_at": "2022-03-14T08:55:22Z",
    "labels": [
      "good first issue",
      "help wanted",
      "triaged: documentation"
    ],
    "url": "https://github.com/openssl/openssl/issues/14111",
    "body": "Generate a 4096 bit key.  Include a validation step (separate function).\r\n\r\nIt should be the current best practice (fetch), have proper error handling and resource allocation/deallocation and be in the style of a known answer test.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/14111/comments",
    "author": "paulidale",
    "comments": [
      {
        "user": "peterdjalaliev",
        "created_at": "2021-11-30T08:28:32Z",
        "body": "Is the ask here to add an example of an RSA key generation code snippet to the respective man page(s)?"
      },
      {
        "user": "paulidale",
        "created_at": "2021-11-30T08:37:16Z",
        "body": "It is adding a new program to the demo directory that generates an RSA key.\r\nIt's fine to do more, e.g. save to PEM file."
      },
      {
        "user": "peterdjalaliev",
        "created_at": "2021-12-04T00:52:05Z",
        "body": "FWIW, I closed the pull request because I don't have my employer's permission to contribute it."
      }
    ]
  },
  {
    "number": 13656,
    "title": "Mechanism to define custom propq in openssl apps",
    "created_at": "2020-12-10T12:45:40Z",
    "closed_at": "2021-02-05T00:24:41Z",
    "labels": [
      "branch: master",
      "good first issue",
      "help wanted",
      "triaged: feature",
      "triaged: OTC evaluated"
    ],
    "url": "https://github.com/openssl/openssl/issues/13656",
    "body": "The `app_get0_propq` (from apps/lib/apps.c) is used throughout many openssl apps to define propq used to fetch the algorithms. Currently, it just returns NULL and its comment says \"TODO(3.0): Make this an environment variable if required\".\r\nIf a provider is used that does not implement all algorithms (e.g. reuses STORE from the default one) the propq needs to be defined to fetch the right implementation. (One such example has been discussed in #13539.) Therefore, the current app_get0_propq implementation is insufficient.\r\n\r\nWhat should be the right way for a user to specify the propq when executing an openssl command? I'd prefer either a command line argument or (if no more args can be added) the config file, so that all configuration parameters are on a single place. Having providers defined as command line args (`-provider`) and then propq as an environment variable feels inconsistent.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/13656/comments",
    "author": "gotthardp",
    "comments": [
      {
        "user": "levitte",
        "created_at": "2020-12-10T12:54:59Z",
        "body": "`doc/man5/config.pod` says this:\r\n\r\n```\r\n   EVP Configuration\r\n       The name alg_section in the initialization section names the section\r\n       containing algorithmic properties when using the EVP API.\r\n\r\n       Within the algorithm properties section, the following names have\r\n       meaning:\r\n\r\n       default_properties\r\n           The value may be anything that is acceptable as a property query\r\n           string for EVP_set_default_properties().\r\n```\r\n\r\nDoes that answer your question?"
      },
      {
        "user": "gotthardp",
        "created_at": "2020-12-10T13:01:45Z",
        "body": "Oh, yes. Thank you! In that case the `app_get0_propq` needs to be updated to read this from the config. I will (try to) propose a PR."
      },
      {
        "user": "t8m",
        "created_at": "2020-12-10T13:06:08Z",
        "body": "IMO those two should be something different. There should be a default property query in the config file that is being read when the libcrypto is loaded and initialized. And then there should be a additional way how to specify a non-default propq in the similar way the -provider can be specified for the applications. So yes, there should be a -propquery option that would allow you to override the default propquery from the config file."
      },
      {
        "user": "mattcaswell",
        "created_at": "2020-12-10T13:31:59Z",
        "body": "> In that case the app_get0_propq needs to be updated to read this from the config\r\n\r\nThe default propq from the config file should already be being used, so no changes should be needed to support it. Note that the implicit default propq is different to any explicit propq that is provided during individual fetches (which is what app_get0_propq is for). The default propq and any explicit propq are merged during the fetch.\r\n\r\n> IMO those two should be something different.\r\n\r\nThis is my view too. I think a \"-propquery\" option would be ideal."
      },
      {
        "user": "paulidale",
        "created_at": "2020-12-10T13:52:08Z",
        "body": "Agreed, a `-propquery` command line option seems like the way forward.  What about `-prop-query` ?"
      },
      {
        "user": "mattcaswell",
        "created_at": "2020-12-10T14:36:06Z",
        "body": "Either is fine by me."
      },
      {
        "user": "paulidale",
        "created_at": "2020-12-15T08:14:26Z",
        "body": "This won't block 3.0 but if a PR is created, it would likely get in."
      }
    ]
  },
  {
    "number": 13616,
    "title": "There should be no algorithm specific ifndef OPENSSL_NO_ALGORITHM in libssl",
    "created_at": "2020-12-04T12:56:34Z",
    "closed_at": "2021-02-05T15:40:06Z",
    "labels": [
      "branch: master",
      "help wanted",
      "triaged: feature",
      "triaged: OTC evaluated"
    ],
    "url": "https://github.com/openssl/openssl/issues/13616",
    "body": "As crypto implementations are provided and the libssl should now call high level APIs from libcrypto only the algorithm specific ifndefs should not be present in libssl code at all.\r\n\r\nThis of course requires properly handling cases where an algorithm supported by libssl is not supported by a provider but that should be already part of the cleanup necessary for libssl support for external providers.\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/13616/comments",
    "author": "t8m",
    "comments": [
      {
        "user": "paulidale",
        "created_at": "2020-12-08T08:34:29Z",
        "body": "In general this should happen. There might be exceptions in the deprecated files.  These exceptions are permitted."
      },
      {
        "user": "mattcaswell",
        "created_at": "2021-01-21T09:49:01Z",
        "body": "Fix for this in #13916"
      }
    ]
  },
  {
    "number": 13516,
    "title": "Compared with openssl1.1.1f and openssl3.0, the performance in aes-cbc mode deteriorates significantly.",
    "created_at": "2020-11-26T02:25:40Z",
    "closed_at": "2020-12-30T08:52:55Z",
    "labels": [
      "branch: master",
      "help wanted",
      "triaged: bug",
      "triaged: OTC evaluated"
    ],
    "url": "https://github.com/openssl/openssl/issues/13516",
    "body": "I tested it five times, and it's probably the same.\r\nOne of the results\r\n\r\n`Algorithm: aes-128-cbc`\r\n`Doing aes-128 cbc for 3s on 16 size blocks: 25156911 aes-128 cbc's in 2.98s`\r\n`Doing aes-128 cbc for 3s on 64 size blocks: 4754871 aes-128 cbc's in 2.98s`\r\n`Doing aes-128 cbc for 3s on 256 size blocks: 1219704 aes-128 cbc's in 3.00s`\r\n`Doing aes-128 cbc for 3s on 1024 size blocks: 393419 aes-128 cbc's in 2.99s`\r\n`Doing aes-128 cbc for 3s on 8192 size blocks: 66722 aes-128 cbc's in 2.99s`\r\n`Doing aes-128 cbc for 3s on 16384 size blocks: 33282 aes-128 cbc's in 3.00s`\r\n`OpenSSL 1.1.1f  31 Mar 2020`\r\n`built on: Mon Aug 17 03:20:00 2020 UTC`\r\n`options:bn(64,64) rc4(16x,int) des(int) aes(partial) idea(int) blowfish(ptr) `\r\n`compiler: gcc -fPIC -pthread -m64 -Wa,--noexecstack -Wall -O3 -DOPENSSL_USE_NODELETE -DL_ENDIAN -DOPENSSL_PIC -``DOPENSSL_CPUID_OBJ -DOPENSSL_IA32_SSE2 -DOPENSSL_BN_ASM_MONT -DOPENSSL_BN_ASM_MONT5 -``DOPENSSL_BN_ASM_GF2m -DSHA1_ASM -DSHA256_ASM -DSHA512_ASM -DKECCAK1600_ASM -DRC4_ASM -DMD5_ASM -``DAESNI_ASM -DVPAES_ASM -DGHASH_ASM -DECP_NISTZ256_ASM -DX25519_ASM -DPOLY1305_ASM -DNDEBUG`\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t  \r\n`The 'numbers' are in 1000s of bytes per second processed.`\r\n`type                 16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes`\r\n`aes-128 cbc     135070.66k   102118.03k   104081.41k   134736.14k   182804.89k   181764.10k`\r\n\r\n`Algorithm: aes-128-cbc`\r\n`Doing aes-128 cbc for 3s on 16 size blocks: 12263915 aes-128 cbc's in 2.99s`\r\n`Doing aes-128 cbc for 3s on 64 size blocks: 3402683 aes-128 cbc's in 3.00s`\r\n`Doing aes-128 cbc for 3s on 256 size blocks: 866258 aes-128 cbc's in 3.00s`\r\n`Doing aes-128 cbc for 3s on 1024 size blocks: 356685 aes-128 cbc's in 3.00s`\r\n`Doing aes-128 cbc for 3s on 8192 size blocks: 41133 aes-128 cbc's in 2.99s`\r\n`Doing aes-128 cbc for 3s on 16384 size blocks: 22014 aes-128 cbc's in 3.00s`\r\n`version: 3.0.0-alpha5`\r\n`built on: built on: Tue Nov 10 09:53:13 2020 UTC`\r\n`options:bn(64,64) rc4(16x,int) des(int) aes(partial) idea(int) blowfish(ptr) `\r\n`compiler: gcc -fPIC -pthread -m64 -Wa,--noexecstack -Wall -O3 -DOPENSSL_USE_NODELETE -DL_ENDIAN -DOPENSSL_PIC -``DOPENSSL_BUILDING_OPENSSL -DNDEBUG`\r\n`CPUINFO: OPENSSL_ia32cap=0xfffa32035f8bffff:0xd19e4fbb`\r\n\r\n`The 'numbers' are in 1000s of bytes per second processed.`\r\n`type                  16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes`\r\n`aes-128 cbc      65626.30k    72590.57k    73920.68k   121748.48k   112696.17k   120225.79k`\r\n\r\n\r\naes-128-cbc aes-192-cbc aes-256-cbc results are consistent, with a 40% decrease.\r\n\r\nIs there any change in the implementation of 3.0? What causes performance deterioration?\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/13516/comments",
    "author": "yxungh",
    "comments": [
      {
        "user": "yxungh",
        "created_at": "2020-11-26T02:29:46Z",
        "body": "I'm using  \r\n `openssl speed -evp ***`"
      },
      {
        "user": "kroeckx",
        "created_at": "2020-11-26T09:55:01Z",
        "body": "This looks like #13407"
      },
      {
        "user": "richsalz",
        "created_at": "2020-12-29T17:58:23Z",
        "body": "I suggest closing this as a dup of #13407.  Also, @beldmit and @mattcaswell  is this \"fixed\" by the recent speed changes?"
      },
      {
        "user": "beldmit",
        "created_at": "2020-12-29T18:01:49Z",
        "body": "I didn't see the performance degradation for the aes-cbc but expect it should be fixed "
      },
      {
        "user": "yxungh",
        "created_at": "2020-12-30T08:53:14Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 13446,
    "title": "OSSL_PARAM_utf8_ptr() API is confusing",
    "created_at": "2020-11-18T17:44:16Z",
    "closed_at": "2021-01-27T11:16:34Z",
    "labels": [
      "branch: master",
      "help wanted",
      "triaged: feature",
      "triaged: OTC evaluated"
    ],
    "url": "https://github.com/openssl/openssl/issues/13446",
    "body": "This is a split of #11162\r\n\r\nThe OSSL_PARAM_utf8_ptr() is a macro, not a function.\r\n\r\nThe code you need to write with the macro is:\r\nchar *foo;\r\nOSSL_PARAM_utf8_ptr(foo);\r\n\r\nAnd the macro will modify the value of foo. That is, the pointer will change.\r\n\r\nNormally when a value can be modified, you need pass a pointer to that variable, so:\r\nchar *foo;\r\nOSSL_PARAM_utf8_ptr(&foo);\r\n\r\nBut because OSSL_PARAM_utf8_ptr() is a macro, it can modify the variable without having to take a pointer.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/13446/comments",
    "author": "kroeckx",
    "comments": [
      {
        "user": "levitte",
        "created_at": "2020-11-18T22:20:13Z",
        "body": "You're right that it does look odd, at least now in retrospect.  I cannot for the life of me remember why it was done that way...  I do recall some argument around some of those macros, but details escape me.\r\n\r\nThis is pretty easy to fix, though."
      },
      {
        "user": "t-j-h",
        "created_at": "2020-11-26T10:04:48Z",
        "body": "The same comments apply to OSSL_PARAM_octet_ptr"
      },
      {
        "user": "levitte",
        "created_at": "2020-11-26T10:05:17Z",
        "body": "> The same comments apply to OSSL_PARAM_octet_ptr\r\n\r\nAgreed."
      }
    ]
  },
  {
    "number": 13257,
    "title": "The SSL job maybe helpful for consecutive processing",
    "created_at": "2020-10-28T03:32:40Z",
    "closed_at": "2024-06-12T14:23:53Z",
    "labels": [
      "good first issue",
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/13257",
    "body": "As OpenSSL does not support asynchronous read/write duplex, sometimes, the asynchronous read/write logic needs to be changed to consecutive processing. An interface for viewing the job status in internal objects maybe helpful for this.\r\n```\r\nASYNC_JOB *SSL_get_job(const SSL *s)\r\n{\r\n    return s->job;\r\n}\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/13257/comments",
    "author": "s-c-c",
    "comments": [
      {
        "user": "mattcaswell",
        "created_at": "2020-10-29T10:34:53Z",
        "body": "I don't see a problem with adding this. PR welcome."
      },
      {
        "user": "t-j-h",
        "created_at": "2024-06-12T14:23:53Z",
        "body": "Code has been added already."
      }
    ]
  },
  {
    "number": 11306,
    "title": "We don't test DSA key generation enough",
    "created_at": "2020-03-11T09:56:03Z",
    "closed_at": "2020-05-14T22:09:29Z",
    "labels": [
      "branch: master",
      "help wanted",
      "triaged: bug"
    ],
    "url": "https://github.com/openssl/openssl/issues/11306",
    "body": "I just tried #11303 with the faulty `dsa_gen_set_template` merged with the latest #10289, and was astonished how many tests succeed.  With only `test_ssl_old` failing, that's not a lot of test coverage for DSA key generation, and when that recipe i gone, there will be *none*.\r\n\r\nI just had a quick search, and this is what I found:\r\n\r\n``` console\r\n$ grep KeyGen test/recipes/30-test_evp_data/*\r\ntest/recipes/30-test_evp_data/evppkey.txt:KeyGen = rsaEncryption\r\ntest/recipes/30-test_evp_data/evppkey.txt:KeyGen = RSASSA-PSS\r\ntest/recipes/30-test_evp_data/evppkey.txt:KeyGen = dhKeyAgreement\r\n$ git grep EVP_PKEY_keygen test\r\ntest/cmp_testlib.c:               && TEST_int_gt(EVP_PKEY_keygen_init(ctx), 0)\r\ntest/cmp_testlib.c:               && TEST_int_gt(EVP_PKEY_keygen(ctx, &pkey), 0));\r\ntest/evp_extra_test.c:    if (!TEST_true(EVP_PKEY_keygen_init(kctx)))\r\ntest/evp_extra_test.c:    if (!TEST_true(EVP_PKEY_keygen(kctx, &pkey)))\r\ntest/evp_test.c:    if (EVP_PKEY_keygen_init(genctx) <= 0) {\r\ntest/evp_test.c:    if (EVP_PKEY_keygen(keygen->genctx, &pkey) <= 0) {\r\n$ git grep genpkey test\r\ntest/certs/mkcert.sh:            openssl genpkey \"${args[@]}\" -out \"${key}.pem\"\r\ntest/evp_pkey_provided_test.c:     * openssl genpkey -paramfile dhp.pem | openssl pkey -text\r\ntest/recipes/15-test_genrsa.t:    is(run(app([ 'openssl', 'genpkey', '-out', 'genrsatest.pem',\r\ntest/recipes/15-test_genrsa.t:        $fin = run(app([ 'openssl', 'genpkey', '-out', 'genrsatest.pem',\r\ntest/recipes/15-test_genrsa.t:ok(run(app([ 'openssl', 'genpkey', '-algorithm', 'RSA',\r\ntest/recipes/15-test_genrsa.t:   \"genpkey -3 $good\");\r\ntest/recipes/15-test_genrsa.t:ok(run(app([ 'openssl', 'genpkey', '-algorithm', 'RSA',\r\ntest/recipes/15-test_genrsa.t:   \"genpkey -f4 $good\");\r\ntest/recipes/15-test_mp_rsa.t:            ok(run(app([ 'openssl', 'genpkey', '-out', \"rsamptest-$name.pem\",\r\ntest/recipes/80-test_ssl_old.t:my @genpkeycmd = (\"openssl\", \"genpkey\");\r\ntest/recipes/80-test_ssl_old.t:                    ok(run(app([@genpkeycmd, \"-out\", $Dkey,\r\ntest/recipes/80-test_ssl_old.t:                    ok(run(app([\"openssl\", \"genpkey\", \"-genparam\",\r\ntest/smime-certs/mksmime-certs.sh:$OPENSSL genpkey -genparam -algorithm DH -pkeyopt dh_paramgen_type:2 \\\r\ntest/smime-certs/mksmime-certs.sh:$OPENSSL genpkey -paramfile dhp.pem -out smdh.pem\r\n$ git grep gendsa test\r\n$\r\n```\r\n\r\nAt the very least, I would have expected one or two KeyGen stanza for DSA among the files in `test/recipes/30-test_evp_data/`.  That would be a good start.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/11306/comments",
    "author": "levitte",
    "comments": [
      {
        "user": "slontis",
        "created_at": "2020-03-11T09:59:34Z",
        "body": "Could be because its pretty slowwwww."
      },
      {
        "user": "levitte",
        "created_at": "2020-03-11T10:06:55Z",
        "body": "> Could be because its pretty slowwwww.\r\n\r\nThat's a really poor excuse.  *one* test for evp_test won't hurt us *that* much."
      },
      {
        "user": "slontis",
        "created_at": "2020-03-11T10:08:41Z",
        "body": "Yep - it wont be hard to add - will do when I sort out this FFC stuff."
      },
      {
        "user": "levitte",
        "created_at": "2020-03-11T10:10:27Z",
        "body": "> Yep - it wont be hard to add - will do when I sort out this FFC stuff.\r\n\r\nCool!"
      },
      {
        "user": "levitte",
        "created_at": "2020-05-14T11:01:10Z",
        "body": "So, er, this should be resolved by now, shouldn't it?"
      },
      {
        "user": "slontis",
        "created_at": "2020-05-14T22:09:29Z",
        "body": "Yes - time to close this"
      }
    ]
  },
  {
    "number": 11068,
    "title": "The pyca-cryptography external test is broken",
    "created_at": "2020-02-12T10:29:59Z",
    "closed_at": "2022-02-09T18:21:05Z",
    "labels": [
      "branch: master",
      "help wanted",
      "triaged: bug"
    ],
    "url": "https://github.com/openssl/openssl/issues/11068",
    "body": "\r\nThe pyca-cryptography external test has been failing for a long time. It looks like upstream needs to make some changes to adapt to 3.0. For that reason, the pyca test has been disabled in commit 20e6631c73cf.\r\n\r\nThe test needs to be fixed, so we can re-enable it again.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/11068/comments",
    "author": "mspncp",
    "comments": [
      {
        "user": "t8m",
        "created_at": "2022-02-09T18:21:05Z",
        "body": "This has been fixed long ago."
      }
    ]
  },
  {
    "number": 10485,
    "title": "ecdsatest.c is missing handling of negative ECDSA_size",
    "created_at": "2019-11-20T15:24:33Z",
    "closed_at": "2020-04-07T11:22:46Z",
    "labels": [
      "good first issue",
      "help wanted",
      "triaged: bug"
    ],
    "url": "https://github.com/openssl/openssl/issues/10485",
    "body": "Improper use of negative value found by Coverity.\r\nIn test/ecdsatest.c:\r\n\r\nstatic int test_builtin(int n)\r\n{\r\n...\r\n    size_t sig_len; **// type should be an int**\r\n\r\n **negative_return_fn: Function ECDSA_size(eckey) returns a negative number. [show details]\r\n   \t19. var_assign: Assigning: unsigned variable sig_len = ECDSA_size.**\r\n    sig_len = ECDSA_size(eckey);\r\n\r\n**// Once the type is fixed above, add this test to handle negative or zero sig_len:\r\n    if (!TEST_int_gt(sig_len, 0))\r\n        goto err;**\r\n...   \t\r\n**20. negative_returns: sig_len is passed to a parameter that cannot be negative. [show details]**\r\n    if (!TEST_ptr(sig = OPENSSL_malloc(sig_len))\r\n\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/10485/comments",
    "author": "john-chuah",
    "comments": [
      {
        "user": "coolshrid",
        "created_at": "2020-02-23T01:47:25Z",
        "body": "Can some one walk me through on how to check in the fix. I seem to have fixed the code, but when I create a pull request. I get an error that reads 'hold: cla required'. I have already submitted the CLA agreement the to 'legal@opensslfoundation.org'\r\n\r\nThanks\r\n"
      },
      {
        "user": "mattcaswell",
        "created_at": "2020-02-24T02:40:01Z",
        "body": ">  I get an error that reads 'hold: cla required'. I have already submitted the CLA agreement the to 'legal@opensslfoundation.org'\r\n\r\nShould be sorted now."
      },
      {
        "user": "t8m",
        "created_at": "2020-04-07T11:21:01Z",
        "body": "After commits on master (88b4c61) and 1.1.1 (f9f2e60) Coverity should not indicate this error anymore.\r\n\r\n"
      },
      {
        "user": "t8m",
        "created_at": "2020-04-07T11:22:46Z",
        "body": "That does not mean a test for it as above from @coolshrid cannot be accepted."
      },
      {
        "user": "t8m",
        "created_at": "2020-04-07T11:23:24Z",
        "body": "@coolshrid feel free to submit a PR with the test."
      }
    ]
  },
  {
    "number": 10422,
    "title": "Null pointer causing segfault in RAND_bytes",
    "created_at": "2019-11-12T15:21:26Z",
    "closed_at": "2020-01-07T14:04:36Z",
    "labels": [
      "branch: 1.1.1",
      "good first issue",
      "help wanted",
      "triaged: bug"
    ],
    "url": "https://github.com/openssl/openssl/issues/10422",
    "body": "I've found a small bug that causes a segfault in RAND_bytes if there is a failure in initiating the random number generator.\r\n\r\nFirstly, here's the entire contents of \"RAND_bytes\":\r\n\r\n    int RAND_bytes(unsigned char *buf, int num)\r\n    {\r\n        const RAND_METHOD *meth = RAND_get_rand_method();\r\n\r\n        if (meth->bytes != NULL)\r\n            return meth->bytes(buf, num);\r\n        RANDerr(RAND_F_RAND_BYTES, RAND_R_FUNC_NOT_IMPLEMENTED);\r\n        return -1;\r\n    }\r\n\r\nThat first line where the function \"RAND_get_rand_method\" is called, might return a null pointer. The next line checks for a null pointer, but it really should be:\r\n\r\n    if ( NULL != meth && NULL != meth->bytes )\r\n\r\nOn my own system, this has been causing a segfault when my custom engine's random number generator fails to load.\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/10422/comments",
    "author": "jhealyt",
    "comments": [
      {
        "user": "paulidale",
        "created_at": "2019-11-15T06:38:35Z",
        "body": "This bug is in 1.1.1, not master.\r\n"
      },
      {
        "user": "InfoHunter",
        "created_at": "2020-01-07T14:04:36Z",
        "body": "This is fixed by f9fdb9d2f5a0358a3fd34b060fe23cb0eceb2e2c, closing."
      }
    ]
  },
  {
    "number": 10358,
    "title": "Move SM2 asymmetric cipher implementation to provider.",
    "created_at": "2019-11-04T23:30:06Z",
    "closed_at": "2020-10-07T09:46:07Z",
    "labels": [
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/10358",
    "body": "Move the SM2 asymmetric cipher code to `providers/implementation/asymciphers`. The existing `rsa.c` file should give a general idea as to the bulk of the changes required.\r\n\r\nThis will definitely need #10152 merged first.\r\nThis will probably also need #10351 done first.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/10358/comments",
    "author": "paulidale",
    "comments": [
      {
        "user": "InfoHunter",
        "created_at": "2019-11-05T01:51:23Z",
        "body": "Interesting task..."
      },
      {
        "user": "InfoHunter",
        "created_at": "2019-11-05T01:52:30Z",
        "body": "What is the estimated deadline of this task?"
      },
      {
        "user": "paulidale",
        "created_at": "2019-11-05T02:01:34Z",
        "body": "Yesterday would be good :)\r\n\r\nMoving algorithms hasn't proven to be too difficult in most cases.  The get and set params calls that replace the ctrl ones are the worst of the effort but even they are relatively mechanical."
      },
      {
        "user": "paulidale",
        "created_at": "2019-11-05T02:03:06Z",
        "body": "We estimated three days of effort (not calendar days) for this one.  It will requite the asym cipher framework in #10152 to be committed before it can be done."
      },
      {
        "user": "InfoHunter",
        "created_at": "2019-11-05T02:13:27Z",
        "body": "> We estimated three days of effort (not calendar days) for this one. It will requite the asym cipher framework in #10152 to be committed before it can be done.\r\n\r\nI probably could take a look into this after #10152 has been merged. Perhaps during the IETF 106 week would be a good time to do this..."
      },
      {
        "user": "paulidale",
        "created_at": "2019-11-05T04:52:29Z",
        "body": "If you could, it would be ideal.\r\n\r\n"
      },
      {
        "user": "paulidale",
        "created_at": "2019-11-25T20:53:54Z",
        "body": "#10152 has been merged, this is unblocked I think."
      },
      {
        "user": "InfoHunter",
        "created_at": "2019-11-26T07:15:20Z",
        "body": "> #10152 has been merged, this is unblocked I think.\r\n\r\nGreat, will do soon"
      },
      {
        "user": "InfoHunter",
        "created_at": "2019-11-29T08:26:13Z",
        "body": "Guys, I started looking into this yesterday and I found it seems that we should implement the *keymgmt* part first and then the signature/asymmetric-cipher of SM2 into provider.\r\n\r\nBut it SM2 relies on EC key, so should it be something like *ec_kmgmt* finished in advance? Correct me if I have a wrong understanding with provider..."
      },
      {
        "user": "romen",
        "created_at": "2020-10-07T09:51:08Z",
        "body": "This was duplicated as #12908, fixed by #12913 ."
      }
    ]
  },
  {
    "number": 10357,
    "title": "Move SM2 digest signature implementation to provider.",
    "created_at": "2019-11-04T23:26:16Z",
    "closed_at": "2020-10-07T09:45:49Z",
    "labels": [
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/10357",
    "body": "Move the SM2 digest signature code to `providers/implementation/signature`. The existing `dsa.c` file should give a general idea as to the bulk of the changes required.\r\n\r\nThis will probably need #10351 done first.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/10357/comments",
    "author": "paulidale",
    "comments": [
      {
        "user": "InfoHunter",
        "created_at": "2019-11-21T02:49:06Z",
        "body": "I will take this and #10358 after the EC-in-privoder part has been done"
      },
      {
        "user": "romen",
        "created_at": "2020-10-07T09:48:19Z",
        "body": "Fixed with #12536 (formerly #11248)."
      }
    ]
  },
  {
    "number": 10356,
    "title": "Move ECDSA implementation to provider.",
    "created_at": "2019-11-04T23:24:56Z",
    "closed_at": "2020-04-17T13:45:56Z",
    "labels": [
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/10356",
    "body": "Move the ECDSA code to `providers/implementation/signature`. The existing `dsa.c` file should give a general idea as to the bulk of the changes required.\r\n\r\nThis will probably need #10351 done first.\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/10356/comments",
    "author": "paulidale",
    "comments": [
      {
        "user": "romen",
        "created_at": "2020-04-17T13:45:56Z",
        "body": "Fixed with #10968"
      }
    ]
  },
  {
    "number": 10354,
    "title": "Move X448 implementation to provider.",
    "created_at": "2019-11-04T23:18:57Z",
    "closed_at": "2020-04-17T13:44:31Z",
    "labels": [
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/10354",
    "body": "Move the X448 code to `providers/implementation/exchanges`. The existing `dh_exch.c` file should give a general idea as to the bulk of the changes required.\r\n\r\nThis will probably need #10351 done first.\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/10354/comments",
    "author": "paulidale",
    "comments": [
      {
        "user": "romen",
        "created_at": "2020-02-04T08:19:35Z",
        "body": "See #10964 "
      }
    ]
  },
  {
    "number": 10353,
    "title": "Move X25519 implementation to provider.",
    "created_at": "2019-11-04T23:17:39Z",
    "closed_at": "2020-04-17T13:44:14Z",
    "labels": [
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/10353",
    "body": "Move the X25519 code to `providers/implementation/exchanges`.  The existing `dh_exch.c` file should give a general idea as to the bulk of the changes required.\r\n\r\nThis will probably need #10351 done first.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/10353/comments",
    "author": "paulidale",
    "comments": [
      {
        "user": "romen",
        "created_at": "2020-02-04T08:17:36Z",
        "body": "See #10964 "
      }
    ]
  },
  {
    "number": 10352,
    "title": "Move ECDH implementation to provider.",
    "created_at": "2019-11-04T23:16:48Z",
    "closed_at": "2020-02-18T17:16:40Z",
    "labels": [
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/10352",
    "body": "Move the ECDH code to `providers/implementation/exchanges`.  The existing `dh_exch.c` file should give a general idea as to the bulk of the changes required.\r\n\r\nThis will probably need #10351 done first.\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/10352/comments",
    "author": "paulidale",
    "comments": [
      {
        "user": "romen",
        "created_at": "2020-02-18T17:16:39Z",
        "body": "Fixed via #10631 !"
      }
    ]
  },
  {
    "number": 10351,
    "title": "Move EC code to provider",
    "created_at": "2019-11-04T23:14:33Z",
    "closed_at": "2020-02-18T17:16:23Z",
    "labels": [
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/10351",
    "body": "The EC code needs to be available inside the providers in order to support the FIPS provider.\r\n\r\nThis should be done in a manner similar to how BN was done via `build.conf` rather than relocating source files.\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/10351/comments",
    "author": "paulidale",
    "comments": [
      {
        "user": "richsalz",
        "created_at": "2019-11-05T19:39:55Z",
        "body": "> This should be done in a manner similar to how BN was done via `build.conf` ...\r\n\r\nDo you mean crypto/bn/build.info ?\r\n\r\n"
      },
      {
        "user": "levitte",
        "created_at": "2019-11-05T23:01:23Z",
        "body": "Yes, that's what he meant"
      },
      {
        "user": "InfoHunter",
        "created_at": "2019-11-29T08:35:15Z",
        "body": "What is the progress of this? Ping @romen "
      },
      {
        "user": "romen",
        "created_at": "2019-11-29T08:42:17Z",
        "body": "@InfoHunter I am still in the preliminary steps as I have been quite busy since we last met.\r\n\r\nI see it might be blocking the SM2 move to providers, and I am sorry for the delay this is causing! "
      },
      {
        "user": "InfoHunter",
        "created_at": "2019-11-29T08:45:19Z",
        "body": "No worries, dude. I just want to check if there is something that I can help to move this faster, like implementing part of the `ec_kmgmt.c` for instance...\r\n\r\nBut I probably need more input from you - could you share some thoughts on this to me?"
      },
      {
        "user": "paulidale",
        "created_at": "2019-11-29T08:58:38Z",
        "body": "I'd also suggest @levitte for input about the key manager part."
      },
      {
        "user": "InfoHunter",
        "created_at": "2019-11-29T09:07:02Z",
        "body": "> I'd also suggest @levitte for input about the key manager part.\r\n\r\nGood idea."
      },
      {
        "user": "InfoHunter",
        "created_at": "2019-11-29T09:28:38Z",
        "body": "It seems it's not very complicated by following what *dh_kmgmt.c* does to implement the EC key management. Maybe some details are not known by me yet..."
      },
      {
        "user": "levitte",
        "created_at": "2019-11-30T09:24:27Z",
        "body": "For the keymgmt bits, yeah, that should be easy by looking at others, *as well as* looking at the corresponding `_ameth.c` file (where the legacy->provider export function needs to be implemented anyway) "
      },
      {
        "user": "romen",
        "created_at": "2020-02-18T17:16:22Z",
        "body": "Fixed via #10631 !"
      }
    ]
  },
  {
    "number": 10117,
    "title": "openssl 1.1.1d crl command does not support -engine",
    "created_at": "2019-10-07T22:10:43Z",
    "closed_at": "2022-06-21T10:50:51Z",
    "labels": [
      "branch: master",
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/10117",
    "body": "OpenSSL's crl command does not support -engine switch, making it impossible to load external engine for manipulating CRL files.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/10117/comments",
    "author": "lumag",
    "comments": [
      {
        "user": "beldmit",
        "created_at": "2019-10-08T06:27:55Z",
        "body": "For the algorithm-provided engines, it seems better to load them via the config..."
      },
      {
        "user": "t8m",
        "created_at": "2022-06-21T10:50:51Z",
        "body": "We will not add new features related to engines as they are deprecated.\r\nClosing."
      }
    ]
  },
  {
    "number": 10111,
    "title": "Deprecate X9.31?",
    "created_at": "2019-10-06T18:55:05Z",
    "closed_at": "2021-01-25T10:32:44Z",
    "labels": [
      "help wanted",
      "triaged: refactor",
      "triaged: OTC evaluated"
    ],
    "url": "https://github.com/openssl/openssl/issues/10111",
    "body": "It seems we have public functions generate primes and RSA keys according to X9.31. But that standard has been withdrawn for a very long time. Is there a reason to keep them around?",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/10111/comments",
    "author": "kroeckx",
    "comments": [
      {
        "user": "slontis",
        "created_at": "2019-10-17T02:59:03Z",
        "body": "Does CMS still use them?"
      },
      {
        "user": "mattcaswell",
        "created_at": "2019-12-05T14:38:07Z",
        "body": "Deprecation seems reasonable to me."
      },
      {
        "user": "paulidale",
        "created_at": "2020-10-07T08:59:32Z",
        "body": "RSA functions are deprecated.  BN functions need to be."
      },
      {
        "user": "paulidale",
        "created_at": "2020-11-24T09:05:54Z",
        "body": "Should continue supporting the X9.31 padding scheme.\r\nNot the prime generation."
      },
      {
        "user": "kroeckx",
        "created_at": "2020-11-24T09:25:03Z",
        "body": "So looking at it again, ANSI X9.31-1998 is withdrawn at least 10 years ago, you can't find it on the x9 website anymore, nor on the ANSI store, but there are places that still sell it.\r\n\r\nSo I'm talking about the RSA_*X931* and BN_X931* functions. The RSA functions are deprecated, the BN functions not.\r\n\r\nThere is also RSA_X931_PADDING, I'm fine with that staying."
      },
      {
        "user": "sahanaprasad07",
        "created_at": "2020-12-09T14:30:38Z",
        "body": "I would like to work on this task."
      }
    ]
  },
  {
    "number": 10060,
    "title": "Consistent formatting of I<a:b> in manpages",
    "created_at": "2019-09-30T16:51:47Z",
    "closed_at": "2020-11-18T18:38:00Z",
    "labels": [
      "help wanted",
      "triaged: documentation"
    ],
    "url": "https://github.com/openssl/openssl/issues/10060",
    "body": "Many of our commands take a key/value pair -- host:port, opt:value, etc.\r\n\r\nThe proper formatting of this is apparently ```I<first>:I<second>```\r\n\r\nWhile fixing those, should we also standardize on the terminology?  I see ```opt:value``` ```hostname:port``` ```paramset:X``` etc.  (Most of these you will not see until #10022 is merged).",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/10060/comments",
    "author": "richsalz",
    "comments": [
      {
        "user": "levitte",
        "created_at": "2019-09-30T17:33:56Z",
        "body": "I have to revise that what I said earlier. From careful read of man(1), it turns out that all parts of a command that should be typed in exactly as is should be bold. Therefore, `I<first>B<:>I<second>`.\r\n\r\n(the question of variable option names is separate, FYI) "
      },
      {
        "user": "richsalz",
        "created_at": "2020-11-18T18:38:00Z",
        "body": "I think @levitte and I fixed this now, closing.  Richard, please re-open if there's still some nits.\r\n"
      }
    ]
  },
  {
    "number": 9582,
    "title": "Remove I386_ONLY?",
    "created_at": "2019-08-13T18:37:09Z",
    "closed_at": "2024-12-31T17:01:44Z",
    "labels": [
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/9582",
    "body": "Should I386_ONLY be removed?  It's off by default and the only place where \"is on\" is tested is in sha512.c",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/9582/comments",
    "author": "richsalz",
    "comments": [
      {
        "user": "bernd-edlinger",
        "created_at": "2019-08-24T13:15:01Z",
        "body": "it is set if I compile `./Configure linux-x86 386`\r\nI tried that build config yesterday and it succeeded."
      },
      {
        "user": "bernd-edlinger",
        "created_at": "2019-08-24T13:15:54Z",
        "body": "But I think this is effectively compiled as if no-asm is given."
      },
      {
        "user": "bernd-edlinger",
        "created_at": "2019-08-24T13:25:09Z",
        "body": "But I assume you are right, It needs a lot of testing with \r\nlinux-x86 /  no-asm / 386 / sse2\r\nnot sure if the travis check covers all those"
      },
      {
        "user": "kroeckx",
        "created_at": "2019-08-31T15:47:56Z",
        "body": "I guess the question is we still want to support running on a real 386.\r\n\r\nMost of the assembler requires a more recent cpu, and I think the \"386\" switch currently says that it's only meant to run on processors that don't support cpuid (which also includes the early 486s)."
      },
      {
        "user": "mattcaswell",
        "created_at": "2019-11-26T15:04:21Z",
        "body": "To me it seems reasonable to remove this."
      },
      {
        "user": "levitte",
        "created_at": "2019-11-26T15:04:34Z",
        "body": "I agree"
      },
      {
        "user": "richsalz",
        "created_at": "2024-12-31T17:01:44Z",
        "body": "four years no activity. we did it in quictls if you care, quictls/quictls#106 and quictls/quictls#163 if you want to re-open this.\r\n"
      }
    ]
  },
  {
    "number": 9498,
    "title": "openssl 1.1.1a _arm7_tick issue",
    "created_at": "2019-08-01T06:42:57Z",
    "closed_at": "2021-06-25T08:31:25Z",
    "labels": [
      "help wanted",
      "triaged: bug"
    ],
    "url": "https://github.com/openssl/openssl/issues/9498",
    "body": "Hi,\r\n\r\nI'm currently experiencing an issue related to _arm7_tick, the stack trace is attached below:\r\n\r\n1 | 0x0 | libcrypto.so!_armv7_tick\r\n-- | -- | --\r\n2 | 0xe | libcrypto.so!rand_drbg_get_additional_data\r\n3 | 0x2e | libcrypto.so!RAND_DRBG_bytes\r\n4 | 0xca | libcrypto.so!RAND_DRBG_get0_public\r\n5 | 0x102 | libcrypto.so!RAND_DRBG_get0_public\r\n...\r\n\r\nLooks like _arm7_tick function has been triggered on some processors that actually do not support _arm7_tick, does anyone here saw similar issues? Is there any suggestions to fix the issue?\r\n\r\nThank you!\r\nWilliam",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/9498/comments",
    "author": "dadadage",
    "comments": [
      {
        "user": "bernd-edlinger",
        "created_at": "2019-08-01T10:57:25Z",
        "body": "Did you set OPENSSL_armcap=2 ?"
      },
      {
        "user": "dadadage",
        "created_at": "2019-08-01T19:31:45Z",
        "body": "> Did you set OPENSSL_armcap=2 ?\r\n\r\nWhere can I set this?"
      },
      {
        "user": "petrovr",
        "created_at": "2019-08-01T19:36:59Z",
        "body": "dadadage wrote:\n>> Did you set OPENSSL_armcap=2 ?\n> Where can I set this?\n>\n\nOPENSSL_armcap is an environment variable .\n\nActually CPU capabilities are defined from cpu OPENSSL_<CPU>cap  .\n\nRegards,\nRoumen Petrov\n\n"
      },
      {
        "user": "kroeckx",
        "created_at": "2019-08-01T21:29:38Z",
        "body": "Which processor is that?\n"
      },
      {
        "user": "kroeckx",
        "created_at": "2019-08-01T21:54:17Z",
        "body": "This isn't making sense. OPENSSL_cpuid_setup() should detect that\narmv7_tick is available or not, by trying to run it. If it's an\nillegal instruction, we should not try to do this again.\n\nThe exception to this is if the environment variable\nOPENSSL_armcap is set, in which case it trust the bits set in\nthat. If you set those wrong, it will do the wrong thing.\n"
      },
      {
        "user": "stevezhou6",
        "created_at": "2021-02-19T03:30:45Z",
        "body": "I had the same problem.\r\nAndroid 10,level 29\r\nROM  Oppo/COLOROS\r\narm64-v8a\r\nI didn't set the variable OPENSSL_armcap.\r\n@Kurt Roeckx \r\n@mattcaswell \r\n@Kurt Roeckx\r\n@Shane\r\n OPENSSL_armcap = 63 \r\n"
      },
      {
        "user": "goodpaperman",
        "created_at": "2021-06-21T02:00:35Z",
        "body": "had the same problem:\r\n\r\nsignal 4 code 1 at address 0xb35b0808\r\n backtrace:\r\n #0 pc 0xba3808 /data/****.so (_armv7_tick+0)\r\n basic:\r\n ABI: arm pid: 32174  tid: 32373"
      }
    ]
  },
  {
    "number": 9205,
    "title": "some value in  BN_generate_dsa_nonce should be cleaned",
    "created_at": "2019-06-20T22:18:08Z",
    "closed_at": "2023-01-04T15:35:58Z",
    "labels": [
      "help wanted",
      "triaged: bug"
    ],
    "url": "https://github.com/openssl/openssl/issues/9205",
    "body": "In the BN_generate_dsa_nonce function, SHA512 is called for hash calculation. The function does not call Openssl_cleanse to clean SHA512_CTX and digest, which may contain sensitive data. such as called by  dsa_sign_setup. In which the relating output value was subsequently cleared by  BN_clear_free(k). I think in some situations,this may cause information leak.\r\n  SHA512_Init(&sha);\r\n  SHA512_Update(&sha, &done, sizeof(done));\r\n  SHA512_Update(&sha, private_bytes, sizeof(private_bytes));\r\n  SHA512_Update(&sha, message, message_len);\r\n  SHA512_Update(&sha, random_bytes, sizeof(random_bytes));\r\n  SHA512_Final(**digest**, &**sha**);",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/9205/comments",
    "author": "xxggsh",
    "comments": [
      {
        "user": "richsalz",
        "created_at": "2019-06-20T23:40:46Z",
        "body": "The intermediate state of SHA is only the digest value.  What private information do you think is there?  I think you're wrong.\r\n"
      },
      {
        "user": "xxggsh",
        "created_at": "2019-06-21T01:55:06Z",
        "body": "In the function of    dsa_sign_setup, it call the BN_generate_dsa_nonce by\r\n if (!BN_generate_dsa_nonce(k, dsa->q, dsa->priv_key, dgst,\r\n                                       dlen, ctx))\r\nand finally  call   BN_clear_free(k);  to clear the memory of k.  In the BN_generate_dsa_nonce ,the memory relates to k is  including the intermediate state of SHA ,is still  not cleared."
      },
      {
        "user": "richsalz",
        "created_at": "2019-06-21T02:07:16Z",
        "body": "You cannot create K from the internal state of SHA processing.\r\n"
      },
      {
        "user": "xxggsh",
        "created_at": "2019-06-21T02:36:26Z",
        "body": "the digest value of  in BN_generate_dsa_nonce  was also not cleared .\r\nSHA state was  left open just after the last SHA512_Final  call,can't it be infered from it? \r\n"
      },
      {
        "user": "richsalz",
        "created_at": "2019-06-21T02:42:17Z",
        "body": "no, you cannot take SHA value and generate the input source from that."
      },
      {
        "user": "xxggsh",
        "created_at": "2019-06-21T02:49:11Z",
        "body": "I know I cannot generate the input source. I mean the value of the specified digest is also sensitive .which was used by dsa_sign_setup"
      },
      {
        "user": "richsalz",
        "created_at": "2019-06-21T13:27:58Z",
        "body": "Maybe I don't understand your point, I am sorry about the language difficulties we are having.\r\n\r\nI suppose ```private_bytes``` should be cleansed.  Are you saying that since the nonce is private to the signature the digest (which creates the nonce) should be cleansed?\r\n\r\n"
      },
      {
        "user": "xxggsh",
        "created_at": "2019-06-22T06:11:07Z",
        "body": "Yes ,I think nonce (k value of dsa_sign_setup) is import to the security of dsa algorithm and it should be cleansed."
      },
      {
        "user": "richsalz",
        "created_at": "2019-06-22T16:20:50Z",
        "body": "Okay, now I understand; thanks for your patience.  Yes keeping ```k``` secret is important.  Not sure there's any way to cleanse an existing SHA state so a PR might be a bit of work."
      },
      {
        "user": "slontis",
        "created_at": "2022-12-22T01:50:55Z",
        "body": "The internal state is cleared when the EVP_MD_CTX is freed via a call to CRYPTO_clear_free (e.g on the SHA512_CTX).\r\nBN_generate_dsa_nonce() does use a few buffers that should be cleared so I will add a PR related to this.."
      }
    ]
  },
  {
    "number": 8934,
    "title": "mark SSL_session_reused const",
    "created_at": "2019-05-15T16:11:26Z",
    "closed_at": "2019-05-21T00:01:16Z",
    "labels": [
      "good first issue",
      "help wanted"
    ],
    "url": "https://github.com/openssl/openssl/issues/8934",
    "body": "From the man page of `SSL_session_reused` and from the code of similar functions it seems that `SSL_session_reused (SSL *ssl)` should be `int SSL_session_reused(const SSL *s)`.\r\n\r\nIs there a reason that the API marks this as non const?",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/8934/comments",
    "author": "schwabe",
    "comments": [
      {
        "user": "levitte",
        "created_at": "2019-05-15T17:44:16Z",
        "body": "Good question. Intuitively, it should be const, but needs to be confirmed with code scrutiny.\r\nHistorically, we have been sloppy re constification of parameters, so there are a number of functions that would need to change, but we do need to verify that the parameter data is indeed not modified. Anyone is welcome to do so. "
      },
      {
        "user": "kroeckx",
        "created_at": "2019-05-15T18:08:55Z",
        "body": "The current function is this:\nint SSL_session_reused(SSL *s)\n{\n    return s->hit;\n}\n\nThe only reason I could think of that it might not be possible to\nmake this const is that it might need to take a lock, which it\ndoesn't.\n"
      },
      {
        "user": "levitte",
        "created_at": "2019-05-15T18:18:38Z",
        "body": "OK. PR welcome!"
      }
    ]
  },
  {
    "number": 8394,
    "title": "const mismatch between ",
    "created_at": "2019-03-04T13:21:26Z",
    "closed_at": "2020-12-24T12:21:30Z",
    "labels": [
      "good first issue",
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/8394",
    "body": "The PKCS8_pkey_get0_attrs function returns const STACK_OF(X509_ATTRIBUTE) and there is no non-const variant of this function.\r\nThe X509at_get0_data_by_OBJ accepts STACK_OF(X509_ATTRIBUTE)\r\n",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/8394/comments",
    "author": "beldmit",
    "comments": [
      {
        "user": "levitte",
        "created_at": "2019-11-05T14:05:34Z",
        "body": "Without looking, I would think of constifying the argument to `X509at_get0_data_by_OBJ` before anything else, if that's possible."
      },
      {
        "user": "akshit-akhoury",
        "created_at": "2020-10-02T15:55:34Z",
        "body": "Hey, if the ask is to set the arguments of `X509at_get0_data_by_OBJ ` to accept const STACK_OF(X509_ATTRIBUTE), I think I can make this change.\r\n"
      },
      {
        "user": "mattcaswell",
        "created_at": "2020-10-02T15:59:10Z",
        "body": "> Hey, if the ask is to set the arguments of X509at_get0_data_by_OBJ to accept const STACK_OF(X509_ATTRIBUTE), I think I can make this change.\r\n\r\nYes please!"
      },
      {
        "user": "akshit-akhoury",
        "created_at": "2020-10-02T17:19:36Z",
        "body": "Hey, I've created a PR, wasn't sure if this change required either update of docs or tests."
      },
      {
        "user": "beldmit",
        "created_at": "2020-12-24T12:21:29Z",
        "body": "Fixed by #13062"
      }
    ]
  },
  {
    "number": 8332,
    "title": "EC interface changes",
    "created_at": "2019-02-25T16:41:43Z",
    "closed_at": "2021-08-09T15:52:38Z",
    "labels": [
      "help wanted",
      "triaged: feature"
    ],
    "url": "https://github.com/openssl/openssl/issues/8332",
    "body": "Opening a discussion about reducing the EC interface in future versions where API changes are allowed. Tagging @romen if there's something I've missed.\r\n\r\n* ~~Entire concept of `EC_METHOD` should not be public facing.~~ done in #11928\r\n* ~~Deprecate `EC_GROUP_precompute_mult` `EC_GROUP_have_precompute_mult` `EC_KEY_precompute_mult`. The `speed` app is the only software I've ever found using them. (Besides, with recent EC changes most use cases don't have access to this type of precomp anyway. Only the hard coded constants from the custom `EC_METHOD`s.)~~ done in #11851\r\n* ~~Deprecate `EC_POINTs_mul`. The `aG + bP` interface of `EC_POINT_mul` is enough for crypto.~~ done in #11807\r\n* ~~Deprecate `EC_POINT_set_Jprojective_coordinates_GFp` `EC_POINT_get_Jprojective_coordinates_GFp`. Whether a point has 3, 4, 5, ... coordinates, and what coordinate system the `EC_METHOD` uses, should not be public facing.~~ done in #11527\r\n* ~~Deprecate `EC_POINT_make_affine` and `EC_POINTs_make_affine` since the `EC_POINT` structure has been opaque for some time now.~~ done in #11874\r\n* Investigate deprecating `EC_GROUP_set_curve` since it seems uncommon to reuse an `EC_GROUP` that way instead of other direct constructors for `EC_GROUP`. Suggested in #11928",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/8332/comments",
    "author": "bbbrumley",
    "comments": [
      {
        "user": "davidben",
        "created_at": "2019-02-25T19:13:23Z",
        "body": "+1 to each of these. As a data point, we've dropped all of these from BoringSSL without trouble. In practice, people don't seem to really use them.\r\n\r\nThe one footnote is here is `EC_GROUP_method_of` + `EC_METHOD_get_field_type` is currently the only way to check whether a group is GFp or GF2m. See also issue #6275. (As a compatibility hack, BoringSSL currently returns a dummy pointer out of `EC_GROUP_method_of` and makes `EC_METHOD_get_field_type` always return `NID_X9_62_prime_field` because we don't do GF2m at all.)"
      },
      {
        "user": "bbbrumley",
        "created_at": "2019-02-26T04:40:06Z",
        "body": "> See also issue #6275\r\n\r\nGreat! They are good arguments.\r\n\r\n> `EC_GROUP_method_of` + `EC_METHOD_get_field_type` is currently the only way to check whether a group is GFp or GF2m\r\n\r\nHrm good point. Personally I've only written / seen code that uses `EC_METHOD_get_field_type` to differentiate calling `EC_POINT_*_affine_coordinates_GFp` or `EC_POINT_*_affine_coordinates_GF2m`. But those are now deprecated with `EC_POINT_*_affine_coordinates`.\r\n\r\nHelp me understand -- what are the important use cases for getting access to `group->meth->field_type` for linking applications? I'm struggling."
      },
      {
        "user": "davidben",
        "created_at": "2019-02-26T05:54:59Z",
        "body": "I think it was just that. `EC_POINT_*_affine_coordinates` hadn't existed at the time the code in question was written. I could also imagine someone wanting to print some metadata about the curve for some reason, in which case this would be useful.\r\n\r\nBut my own project has ditched GF2m curves altogether, so I'm not a good judge these sorts of use cases. If I had my way, even user-specified curves would be gone altogether and there would only be the four or so common named curves. :-)"
      },
      {
        "user": "bbbrumley",
        "created_at": "2019-02-26T10:10:53Z",
        "body": "Re: fetching `field_type`:\r\n\r\n* So with my _avoid-public-API-creep-like-the-plague_ hat on, I'd say dig for it in the `EC_GROUP_get_ecparameters` output.\r\n* With my _application-developer-friendly_ hat on, it does seem a bit silly to allocate and walk an ASN1 structure to fetch this.\r\n\r\nI'm leaning to the former, since I'm still having a hard time convincing myself of use cases where this is necessary. You already have an `EC_GROUP` or `EC_POINT`; it didn't materialize out of the ether. If you need to e.g. exclude binary curves or filter, to me it seems at that level is where it should be done. Not deeper in the code where you're already operating on the allocated curve.\r\n\r\nMaybe it's a good exercise for me to go through, try to strip it out of the library internally and see how many hoops I have to jump through."
      },
      {
        "user": "mattcaswell",
        "created_at": "2019-03-05T16:15:32Z",
        "body": "These seems like good suggestions to me."
      },
      {
        "user": "t8m",
        "created_at": "2021-08-09T15:52:38Z",
        "body": "All the items should be done now. Closing."
      }
    ]
  },
  {
    "number": 8310,
    "title": "EVP_CipherUpdate() setting AAD for AES-256-OCB returns incorrect `outlen`",
    "created_at": "2019-02-22T16:54:26Z",
    "closed_at": "2024-09-05T15:15:38Z",
    "labels": [
      "help wanted",
      "triaged: documentation"
    ],
    "url": "https://github.com/openssl/openssl/issues/8310",
    "body": "In OpenSSL 1.1.1a, setting AAD for AES-256-OCB mode using EVP_CipherUpdate() returns a surprising `outlen`. I would have expected `outlen` to match aad_size but it seems to be truncated down to the nearest multiple of blocks, unlike ciphers such as GCM or ChaCha20-Poly1305.\r\n\r\n```c\r\nint outlen = 0;\r\nEVP_CipherUpdate(ctx, NULL, &outlen, aad, aad_size);\r\nif (outlen != aad_size) {\r\n  printf(\"outlen=%i aad_size=%i\\n\", outlen, aad_size);\r\n}\r\nassert(outlen == aad_size);\r\n```",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/8310/comments",
    "author": "jorangreef",
    "comments": [
      {
        "user": "mattcaswell",
        "created_at": "2019-02-22T17:19:40Z",
        "body": "Looking at the documentation it seems quite undefined what `outlen` actually *means* in the case of AAD. The docs just say that `out` should be NULL and then `in` will be taken as the AAD.\r\n\r\nNote that ChaCha20 is a stream cipher so the \"block\" size is 1. With something like AES128-GCM even though the underlying primitive has a block size of 16, the GCM mode effectively turns it into something like a stream cipher such that the effective block size is also 1. EVP_CIPHER_block_size() for both of these AEAD ciphers returns 1. On the other hand AES128-OCB is a true block cipher and EVP_CIPHER_block_size() returns 16 for this cipher.\r\n\r\nIn terms of AAD, GCM and ChaCha-Poly1305 can handle data 1 byte at a time, whereas OCB has to handle it one block at a time hence the discrepancy in the value of `outlen`."
      },
      {
        "user": "jorangreef",
        "created_at": "2019-02-22T18:05:20Z",
        "body": "Thanks Matt, I was just concerned that OCB is returning the floor of the number of blocks, rather than the ceil. This gave me pause.\r\n\r\nIs it safe to pass unpadded AAD data to OCB in a single CipherUpdate call?\r\n\r\nI saw in the source that `openssl/test/evp_test.c` sometimes checks `frag` and calls CipherUpdate over multiple calls. I couldn't figure out what this was about."
      },
      {
        "user": "mattcaswell",
        "created_at": "2019-02-22T18:23:13Z",
        "body": "> Is it safe to pass unpadded AAD data to OCB in a single CipherUpdate call?\r\n\r\nYes\r\n\r\n> I saw in the source that `openssl/test/evp_test.c` sometimes checks `frag` and calls CipherUpdate over multiple calls. I couldn't figure out what this was about.\r\n\r\nIt's just there for testing what happens if you supply data broken up into multiple calls to CipherUpdate rather than doing it all in one go."
      },
      {
        "user": "jorangreef",
        "created_at": "2019-02-22T18:47:19Z",
        "body": "> Looking at the documentation it seems quite undefined what `outlen` actually _means_ in the case of AAD. The docs just say that `out` should be NULL and then `in` will be taken as the AAD.\r\n\r\nCan this be clarified in the docs to avoid someone else making the same mistake in future?\r\n\r\nIt would be great to know what should be expected of `outlen` for all ciphers, if only to help with assertions (that's how I came across this)."
      },
      {
        "user": "mattcaswell",
        "created_at": "2019-02-22T19:56:17Z",
        "body": "Yes - we should clarify this. I'll leave this issue open for now as a reminder."
      },
      {
        "user": "erbsland-dev",
        "created_at": "2024-07-22T07:42:29Z",
        "body": "@mattcaswell I can write a PR to add the required documentation. You seem to have a good understanding of this topic. Do you have any recommendations on what to highlight?"
      },
      {
        "user": "erbsland-dev",
        "created_at": "2024-07-22T08:19:31Z",
        "body": "I would add a note like this to the documentation:\r\n\r\n```diff\r\ndiff --git a/doc/man3/EVP_EncryptInit.pod b/doc/man3/EVP_EncryptInit.pod\r\nindex f89fc9ae05..5da7c4dfc0 100644\r\n--- a/doc/man3/EVP_EncryptInit.pod\r\n+++ b/doc/man3/EVP_EncryptInit.pod\r\n@@ -1338,6 +1338,15 @@ EVP_EncryptUpdate() or EVP_DecryptUpdate() should be made with the output\r\n parameter I<out> set to B<NULL>. In this case, on success, the parameter\r\n I<outl> is set to the number of bytes authenticated.\r\n \r\n+Please note that the number of authenticated bytes returned by\r\n+EVP_CipherUpdate() depends on the cipher used. Stream ciphers, such as ChaCha20\r\n+or ciphers in GCM mode, can handle 1 byte at a time, resulting in an effective\r\n+\"block\" size of 1. Conversely, ciphers in OCB mode must process data one block\r\n+at a time, and the block size is returned.\r\n+\r\n+Regardless of the returned size, it is safe to pass unpadded data to an\r\n+EVP_CipherUpdate() call in a single operation.\r\n+\r\n When decrypting, the return value of EVP_DecryptFinal() or EVP_CipherFinal()\r\n indicates whether the operation was successful. If it does not indicate success,\r\n the authentication operation has failed and any output data B<MUST NOT> be used\r\n```"
      }
    ]
  },
  {
    "number": 6343,
    "title": "EVP_MD_CTX_FLAG_REUSE",
    "created_at": "2018-05-23T15:05:40Z",
    "closed_at": "2024-09-09T17:04:55Z",
    "labels": [
      "branch: master",
      "good first issue",
      "help wanted",
      "triaged: bug",
      "branch: 3.0",
      "branch: 3.1",
      "branch: 3.2"
    ],
    "url": "https://github.com/openssl/openssl/issues/6343",
    "body": "I think this is a bug but perhaps it's historical in behaviour.\r\n\r\nI tried using this flag on an MD context to avoid it releasing/allocating memory constantly for a bit of a performance boost but to my surprise this was leaking memory. My expectation was that while you init/reset the context that everything would be fine and when you destroy it all memory would be free'd. But *CTX_free calls *CTX_reset but doesn't remove/ignore flags so the memory is never released (md_data).\r\n\r\nThis is on openssl 1.1.0.\r\n\r\n```\r\n# define EVP_MD_CTX_destroy(ctx) EVP_MD_CTX_free((ctx))\r\n\r\nvoid EVP_MD_CTX_free(EVP_MD_CTX *ctx)\r\n{\r\n    EVP_MD_CTX_reset(ctx);\r\n    OPENSSL_free(ctx);\r\n}\r\n\r\nint EVP_MD_CTX_reset(EVP_MD_CTX *ctx)\r\n{\r\n...\r\n    if (ctx->digest && ctx->digest->ctx_size && ctx->md_data\r\n        && !EVP_MD_CTX_test_flags(ctx, EVP_MD_CTX_FLAG_REUSE)) {\r\n        OPENSSL_clear_free(ctx->md_data, ctx->digest->ctx_size);\r\n    }\r\n...\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/6343/comments",
    "author": "dlegaultbbry",
    "comments": [
      {
        "user": "richsalz",
        "created_at": "2018-06-27T17:12:15Z",
        "body": "This is 1.1.0 behavior, so it's not strictly a 1.1.1 issue, and I'm removing that milestone. "
      },
      {
        "user": "t8m",
        "created_at": "2024-02-22T16:27:51Z",
        "body": "This is still an issue."
      },
      {
        "user": "erbsland-dev",
        "created_at": "2024-07-10T07:24:41Z",
        "body": "@t8m PR #24829 resolves this issue."
      },
      {
        "user": "erbsland-dev",
        "created_at": "2024-07-23T12:08:04Z",
        "body": "@t8m It seems this issue was not automatically closed with the merge."
      }
    ]
  },
  {
    "number": 5738,
    "title": "The version of a CSR is not checked using `openssl req`.",
    "created_at": "2018-03-23T14:36:56Z",
    "closed_at": "2024-06-21T20:25:33Z",
    "labels": [
      "help wanted",
      "triaged: refactor"
    ],
    "url": "https://github.com/openssl/openssl/issues/5738",
    "body": "The `req` command does not check the version byte after reading a certificate signing request. If the command line tool is reading a file with an unsupported version number (anything greater than zero), it will proceed and ignore this error. The `-verify` option will give an `OK` result, even a such CSR is, as fast as I can see, not valid.\r\n\r\nAs I understand, the latest specification implemented in the openssl library is PKCS#10 version 1.7, which requires a version number `0x00` for this field.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/5738/comments",
    "author": "LuckyResistor",
    "comments": [
      {
        "user": "richsalz",
        "created_at": "2018-05-06T20:45:49Z",
        "body": "It does not seem worth blocking 1.1.1 for this.  And also, flexibility in creating objects is a useful debugging tool.\r\n"
      },
      {
        "user": "nhorman",
        "created_at": "2024-06-17T19:30:01Z",
        "body": "I don't see this fixed yet, but I don't see this fitting into our schedule either, @LuckyResistor are you interested in creating a PR for this issue?"
      },
      {
        "user": "LuckyResistor",
        "created_at": "2024-06-18T18:41:51Z",
        "body": "@nhorman I’ll check if this is still an issue. If it is, I’ll ensure a PR is created to resolve it."
      },
      {
        "user": "nhorman",
        "created_at": "2024-06-18T18:55:50Z",
        "body": "@LuckyResistor Thank you!  Assigning this to you as a community issue"
      },
      {
        "user": "LuckyResistor",
        "created_at": "2024-06-18T20:20:48Z",
        "body": "@nhorman Please, assign this issue to @erbsland-dev"
      },
      {
        "user": "nhorman",
        "created_at": "2024-06-18T20:32:14Z",
        "body": "@LuckyResistor Unfortunately, github behavior is odd here (I think maybe as an anti spam measure), developers that don't have write access to a repository can't be assigned to issues until such time as they themselves make a comment on the issue being assigned, so I can do that just yet.  But @erbsland-dev, if you would be so kind as to add a comment, I'll get it assigned over to you asap"
      },
      {
        "user": "erbsland-dev",
        "created_at": "2024-06-18T20:39:11Z",
        "body": "@nhorman No problem at all. I just realized that my PR can be simplified by using the X509_* functions instead of checking at the ASN1 layer. I’ll add a second commit to the PR to make this adjustment."
      },
      {
        "user": "nhorman",
        "created_at": "2024-06-18T20:45:43Z",
        "body": "and with that, I've assigned this to you, many thanks!  I see your PR has been attached as well, which is great.  Just need you to sign a cla if you are able please (link provided over in the PR), so that we can consider the patch."
      },
      {
        "user": "erbsland-dev",
        "created_at": "2024-06-18T21:00:53Z",
        "body": "@nhorman Just signed and sent the ICLA."
      }
    ]
  },
  {
    "number": 4545,
    "title": "Freeing an SSL BIO can result in \"shutdown while in init\" error",
    "created_at": "2017-10-18T09:12:02Z",
    "closed_at": "2024-06-25T14:09:38Z",
    "labels": [
      "branch: master",
      "help wanted",
      "triaged: bug",
      "branch: 3.0",
      "branch: 3.1",
      "branch: 3.2"
    ],
    "url": "https://github.com/openssl/openssl/issues/4545",
    "body": "Freeing an SSL BIO should check whether we are still in the init stage before calling SSL_shutdown(), otherwise we will get a stale error on the error queue.",
    "comments_url": "https://api.github.com/repos/openssl/openssl/issues/4545/comments",
    "author": "mattcaswell",
    "comments": [
      {
        "user": "bernd-edlinger",
        "created_at": "2017-10-23T17:33:06Z",
        "body": "Yes, and as we know SSL_shutdown can trap if previously an API function returned\r\nan SSL_ERROR_SSL"
      },
      {
        "user": "mattcaswell",
        "created_at": "2018-07-02T16:11:07Z",
        "body": "Not a 1.1.1 specific issue so removing that milestone."
      }
    ]
  }
]