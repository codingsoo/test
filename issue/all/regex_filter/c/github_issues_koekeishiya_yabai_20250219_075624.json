[
  {
    "number": 2177,
    "title": "Add back window borders for MacOS versions before Sonoma",
    "created_at": "2024-03-20T15:19:23Z",
    "closed_at": "2024-03-23T09:19:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/2177",
    "body": "Window borders were removed due to problems in sonoma, and we are recommended to use janky borders on sonoma. But how about for MacOS versions before sonoma? I am on 2017 13\" mbp. Apple discontinued support for my mbp and the latest available MacOS was Monterey. Window borders worked well on older MacOS versions. I hope it can be added back.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/2177/comments",
    "author": "lokxii",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2024-03-20T15:43:51Z",
        "body": "In every system there is a complexity budget to manage, which decides how, when, or if, things are done or even can be done. Having to maintain such features across different operating system versions, when the feature has to work differently for each version, has a very high cost attached to it. When I also no longer have access to those systems for debugging and testing purposes that cost is amplified. \r\n\r\nThe tradeoff here is just not beneficial."
      },
      {
        "user": "lokxii",
        "created_at": "2024-03-21T16:39:11Z",
        "body": "Understood. Is there any recommend software for adding window borders for older OS version?"
      },
      {
        "user": "koekeishiya",
        "created_at": "2024-03-22T15:32:21Z",
        "body": "I'm not aware of any solution that works as well as the yabai version did for older macOS versions. I don't actually know of any projects that attempt to do this other than JankyBorders, but that one is Sonoma only as you already mentioned. People have been trying to script this using Hammerspoon, but I can already tell you that will be slow."
      },
      {
        "user": "lokxii",
        "created_at": "2024-03-23T09:19:00Z",
        "body": "Maybe I can extract the window border handling part out of old yabai to be a separate software... after I finished my current project. But that will only be a personal use software that only solve my problem (window borders on Monterey).\r\n\r\nAnyways, thank you for your response! Really love yabai and skhd!"
      }
    ]
  },
  {
    "number": 2080,
    "title": "Command stopped working with new update",
    "created_at": "2024-02-06T21:23:26Z",
    "closed_at": "2024-02-08T10:21:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/2080",
    "body": "Hi, I was using this command pretty heavily (I found it here on github a couple of months ago):\r\n```\r\nshift + alt - t: layer=\"$(yabai --message query --windows --window | jq --raw-output .layer)\" && yabai --message window --layer \"$([ \"$layer\" = 'below' ] && echo 'normal' || echo 'below')\"\r\n```\r\nSuddenly it stopped working, could someone help me understading why? \r\n\r\nThank's",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/2080/comments",
    "author": "edofe99",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2024-02-07T16:07:20Z",
        "body": "Read the query parameter value `sub-layer` instead of `layer` #2062 "
      },
      {
        "user": "edofe99",
        "created_at": "2024-02-07T16:09:30Z",
        "body": "What's the difference between sub-layer and sub-level?"
      },
      {
        "user": "koekeishiya",
        "created_at": "2024-02-07T16:11:20Z",
        "body": "sub-level is the actual integer number reported by the macOS API; sub-layer is the yabai mapping to give it meaning from a user pov."
      },
      {
        "user": "edofe99",
        "created_at": "2024-02-08T12:51:15Z",
        "body": "Yabai .config: \r\n```\r\n# layer\r\nyabai -m rule --add app=\".*\" layer=below\r\n```\r\n\r\nskhd config: \r\n``` \r\nshift + alt - t: layer=\"$(yabai --message query --windows --window | jq --raw-output .layer)\" && yabai --message window --layer \"$([ \"$layer\" = 'below' ] && echo 'normal' || echo 'below')\"\r\n```\r\n\r\nSo, I've tried multiple combinations, like: \r\n``` \r\nshift + alt - t: layer=\"$(yabai --message query --windows --window | jq --raw-output .sub-layer)\" && yabai --message window --sub-layer \"$([ \"$layer\" = 'below' ] && echo 'normal' || echo 'below')\"\r\n```\r\nBut it does not work. Can you please help me to fix the skhd code? Thank's. "
      },
      {
        "user": "koekeishiya",
        "created_at": "2024-02-08T12:57:30Z",
        "body": "This one works for me:\r\n\r\n```\r\nshift + alt - t: layer=$(yabai --message query --windows --window | jq -re '.\"sub-layer\"') && yabai --message window --layer \"$([ \"$layer\" = 'below' ] && echo 'normal' || echo 'below')\"\r\n```"
      },
      {
        "user": "edofe99",
        "created_at": "2024-02-08T12:59:20Z",
        "body": "Perfect. Thank's so much and sorry for bothering you. "
      }
    ]
  },
  {
    "number": 2074,
    "title": "Won't tile Orion RC",
    "created_at": "2024-02-01T18:15:57Z",
    "closed_at": "2024-02-16T19:22:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/2074",
    "body": "yabai refuses to tile Orion RC browser.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/2074/comments",
    "author": "k2662",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2024-02-04T15:56:24Z",
        "body": "Works fine for me with the following version:\r\n\r\nOrion\r\nVersion 0.99.126.4.1-beta (WebKit 618.1.2)\r\nBuild date Dec 14 2023\r\nMacBook Pro (macOS Sonoma 14.3 build 23D56)"
      },
      {
        "user": "k2662",
        "created_at": "2024-02-04T17:21:00Z",
        "body": "> Works fine for me with the following version:\r\n> \r\n> Orion Version 0.99.126.4.1-beta (WebKit 618.1.2) Build date Dec 14 2023 MacBook Pro (macOS Sonoma 14.3 build 23D56)\r\n\r\n\r\nI am on the rc version of orion. \r\nVersion 0.99.126.4.1.5-rc (WebKit 619.1.1)\r\nMacBook Pro (macOS Ventura 13.6.4 build 22G513)"
      },
      {
        "user": "koekeishiya",
        "created_at": "2024-02-09T11:08:53Z",
        "body": "What is the output of `yabai -m query --windows` when Orion RC has visible windows? Make sure you are on the latest version of yabai (v6.0.9)."
      },
      {
        "user": "k2662",
        "created_at": "2024-02-16T18:06:36Z",
        "body": "ah! it's been fixed."
      },
      {
        "user": "k2662",
        "created_at": "2024-02-16T18:06:59Z",
        "body": "Orion RC now tiles properly."
      }
    ]
  },
  {
    "number": 1441,
    "title": "Zoomed windows are occluded if not preemptively raised",
    "created_at": "2022-09-22T20:48:02Z",
    "closed_at": "2022-09-23T07:15:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/1441",
    "body": "Zooming a window which hasn't been raised will cause it to be occluded by other windows.\r\n(or more specifically all windows which have been raised since the window in question itself was raised)\r\n\r\nThis will frequently happen if you use `focus_follows_mouse = autofocus`. \r\nA common use case (at least for me) is to hover a window I want to fullscreen and then pressing the corresponding binding. \r\nAs it currently is I have to press the window before or after zooming it.\r\n\r\nA solution would be to force-raise any window which are zoomed.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/1441/comments",
    "author": "jonatan-branting",
    "comments": [
      {
        "user": "jonatan-branting",
        "created_at": "2022-09-22T20:51:44Z",
        "body": "~~This also seems to occur using `focus_follows_mouse = autoraise`, although not consistently. Not sure when or why, however.~~ Seems not to be the case any more on latest master, was a few commits behind. Autofocus is still problematic though."
      },
      {
        "user": "koekeishiya",
        "created_at": "2022-09-22T22:24:19Z",
        "body": "This was an ordering bug with the animation system; I have changed the system not to mess with ordering since then. I personally think I'd sometimes prefer the behaviour you are talking about, where I can zoom a window and not make it frontmost.\r\n\r\nThe behaviour you described can be easily achieved by using the following command: ` yabai -m window --toggle zoom-fullscreen --focus` so I don't think it needs to be made a default?"
      },
      {
        "user": "jonatan-branting",
        "created_at": "2022-09-23T07:15:56Z",
        "body": "> This was an ordering bug with the animation system; I have changed the system not to mess with ordering since then. I personally think I'd sometimes prefer the behaviour you are talking about, where I can zoom a window and not make it frontmost.\r\n> \r\n> The behaviour you described can be easily achieved by using the following command: ` yabai -m window --toggle zoom-fullscreen --focus` so I don't think it needs to be made a default?\r\n\r\nThat's reasonable, completely missed that `--focus` was an option. Thanks!"
      }
    ]
  },
  {
    "number": 1436,
    "title": "Space loses its label",
    "created_at": "2022-09-22T08:30:38Z",
    "closed_at": "2022-10-04T09:26:05Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/1436",
    "body": "For some reason (still haven't found the root cause) after some time, one of my spaces loses its label. I have to manually set it again and it will work for some time after randomly loosing it again.\r\nThis space has Spotify in it and I have this signal for it:\r\n`yabai -m rule --add app=\"^Spotify$\" space=^\"media\"`\r\n\r\n\r\nI have gathered some debug logs related to this:\r\n`process_is_observable: Dock (83643) is blacklisted! ignoring..\r\nEVENT_HANDLER_DOCK_DID_RESTART:\r\nevent_signal_flush: transmitting dock_did_restart to 1 subscriber(s)\r\nEVENT_HANDLER_MOUSE_DOWN: 0 0.00, 0.00\r\nprocess_is_observable: Dock (83643) is blacklisted! ignoring..\r\nEVENT_HANDLER_DOCK_DID_RESTART:\r\n`\r\n\r\nBut I am not 100% sure if that's the cause of it.\r\n\r\nThanks for your help!",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/1436/comments",
    "author": "DiegoGuidaF",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2022-09-22T16:27:52Z",
        "body": "Sounds like a crash or something. Check `Console.app` for `Crash Reports`."
      },
      {
        "user": "DiegoGuidaF",
        "created_at": "2022-10-04T09:26:05Z",
        "body": "Closing this since it hasn't happened again after updating to 5.x version.\r\n\r\nThanks for your support!"
      }
    ]
  },
  {
    "number": 1434,
    "title": "How to auto-focus first window of current display when a floating window is closed?",
    "created_at": "2022-09-21T07:26:21Z",
    "closed_at": "2022-09-21T13:47:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/1434",
    "body": "Dear yabai developer and enthusiasts,\r\n\r\nThe following line in the configuration file seems not working..\r\n\r\n```\r\nyabai -m signal -add event=window_destroyed action=\"yabai -m window --focus first\"\r\n```\r\n\r\nThank you in advance!",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/1434/comments",
    "author": "patricorgi",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2022-09-21T13:43:16Z",
        "body": "`yabai -m window --focus first` will attempt to focus the first bsp-managed window on screen. If you simply want the most recently used window on screen, use this signal:\r\n\r\n```\r\nyabai -m signal --add event=window_destroyed active=yes action=\"yabai -m window --focus \\$(yabai -m query --windows --space | jq '.[0].id')\"\r\n```"
      },
      {
        "user": "patricorgi",
        "created_at": "2022-09-21T13:46:57Z",
        "body": "@koekeishiya Thank you! I just realized I was missing a hyphen in the `--add` option. Your suggested command is also very helpful!"
      }
    ]
  },
  {
    "number": 1433,
    "title": "Remove 'switch space' animation",
    "created_at": "2022-09-21T07:21:23Z",
    "closed_at": "2022-09-23T17:50:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/1433",
    "body": "I want to remove default macOS animation  when I switch between apps which are one difference spaces.\r\nEverything was working without animation as expected and couple of days ago it started to use it some reason.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/1433/comments",
    "author": "alloc33",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2022-09-21T10:42:29Z",
        "body": "Reinstall the scripting addition."
      },
      {
        "user": "alloc33",
        "created_at": "2022-09-24T04:13:46Z",
        "body": "> \r\n\r\ndidn't help, I updated yabai, changed hash with ```sudo visudo -f /private/etc/sudoers.d/yabai``` - still have default macOS animation"
      },
      {
        "user": "alloc33",
        "created_at": "2022-09-24T05:07:58Z",
        "body": "Worked after reinstalling-installing yabai several times..."
      }
    ]
  },
  {
    "number": 1428,
    "title": "Move a window with manage=off & sticky=on to a spacific position on the screen",
    "created_at": "2022-09-19T17:31:19Z",
    "closed_at": "2022-09-19T18:30:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/1428",
    "body": "Is that possible? Thanks in advance!",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/1428/comments",
    "author": "itaysharir",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2022-09-19T17:38:16Z",
        "body": "I use the following for mpv sometimes when I want some video playing in the corner:\r\n\r\n`yabai -m rule --add app=\"^mpv$\" manage=off border=off sticky=on layer=above opacity=1.0 grid=8:8:6:0:2:2`"
      },
      {
        "user": "itaysharir",
        "created_at": "2022-09-19T18:30:42Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 1407,
    "title": "Trigger focus app under mouse",
    "created_at": "2022-09-12T10:04:56Z",
    "closed_at": "2022-09-12T11:08:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/1407",
    "body": "Hi,\r\n\r\nI don't use the focus_follow_mouse option but I was wondering if there was a way to trigger a focus window under mouse through a yabai command.\r\n\r\nI work on a little script and it looks like it would be helpful.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/1407/comments",
    "author": "mickaelperrin",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2022-09-12T10:26:55Z",
        "body": "`yabai -m window --focus mouse` should do the trick?"
      },
      {
        "user": "mickaelperrin",
        "created_at": "2022-09-12T11:08:14Z",
        "body": "Nice thanks !"
      }
    ]
  },
  {
    "number": 1397,
    "title": "pre-allocate spaces",
    "created_at": "2022-09-07T09:26:19Z",
    "closed_at": "2022-09-13T12:06:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/1397",
    "body": "When I try moving a window to a space that currently doesn't exist I get the error below:\r\n\r\n```\r\ncould not locate space with mission-control index '8'\r\n```\r\n\r\nis there a way to somehow pre-allocate windows 1 to 9?",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/1397/comments",
    "author": "mil-ad",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2022-09-07T15:53:06Z",
        "body": "You can use the query system to check for existing spaces during startup, and if your desired setup is not present, create new spaces until it is. A user did this and posted his script in #1352 "
      },
      {
        "user": "mil-ad",
        "created_at": "2022-09-13T12:06:05Z",
        "body": "awesome thanks"
      }
    ]
  },
  {
    "number": 1377,
    "title": "Yabai crashes immediately after starting",
    "created_at": "2022-08-31T00:56:44Z",
    "closed_at": "2022-09-06T16:13:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/1377",
    "body": "Just updated yabai to\r\n\r\n# yabai --version\r\nyabai-v4.0.2\r\n\r\nIt has been running stable for a long time, but now when it starts up, it immediately dies with:\r\n\r\nfatal error: temporary_storage exceeded amount of allocated memory. requested 1919251825, but allocated size is 4194304\r\n\r\nI'm on an M1 system:\r\n\r\n# sw_vers\r\nProductName:    macOS\r\nProductVersion: 12.5.1\r\nBuildVersion:   21G83\r\n\r\nI rolled back to 4.0.1 and it runs fine.\r\n\r\nI tried to look into the problem and see the error appears to be generated from src/misc/ts.h.  Looks like this commit \"32ce2f95\" changed the file on 06-03-2022, lines 83-91. Maybe something going on there? I'd dig further but that's as far as I can go for now.\r\n\r\nThanks for any help.\r\n",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/1377/comments",
    "author": "egresh",
    "comments": [
      {
        "user": "mgazda",
        "created_at": "2022-09-06T10:04:23Z",
        "body": "I've got the same issue. I've tried code signing, removing yabai from the Accessibility list, reinstalling with or without \"--HEAD\" and nothing helps..."
      },
      {
        "user": "koekeishiya",
        "created_at": "2022-09-06T15:52:57Z",
        "body": "Do you use an external tool to send messages to yabai? There was an internal change to how the message handler operates in v4.0.2.\r\n\r\nEdit: I assume that is the case, considering the 4byte number you've pasted equals the string `quer`. Please note that implementation details to the messaging interface is not considered a part of the API, and there is no guarantee that I don't make changes.\r\n\r\nWhat you need to do is alter your messaging protocol; yabai expects the 4 first bytes in any message to be the number of bytes that it is expected to read. See #1372 "
      },
      {
        "user": "mgazda",
        "created_at": "2022-09-07T08:56:41Z",
        "body": "Thank you for your quick response!\r\n\r\nThe only external tool I am using is the simple bar for Ubersicht and indeed when I upgraded it the issue has gone."
      }
    ]
  },
  {
    "number": 1375,
    "title": "color format for window borders",
    "created_at": "2022-08-29T03:22:32Z",
    "closed_at": "2022-08-29T20:49:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/1375",
    "body": "Great tool, so far been loving yabai. However, when trying to customize it for my use, I haven't really figured out the color format I should use for the window borders. I've tried with standard HEX (ex. 58a6ff) but as I've seen in the config files of other people, the format they use seems to be different (ex. 0xE0808080).\r\n\r\nWhat color format is used to configure window borders? Thank you in advance, and please excuse my ignorance if I haven't found the place where this information could be!",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/1375/comments",
    "author": "0rphee",
    "comments": [
      {
        "user": "PhrantiK",
        "created_at": "2022-08-29T09:08:16Z",
        "body": "Throw the hex on the end of 0xFF and you're good to go. \r\n\r\nWith the example you mentioned it would be: ``0xFF58A6FF``\r\n\r\n"
      },
      {
        "user": "koekeishiya",
        "created_at": "2022-08-29T09:29:46Z",
        "body": "It is mentioned in the docs. I don't really see an issue with the way it is worded, but maybe it is unclear for some people.\r\n\r\n> active_window_border_color [0xAARRGGBB]\r\nColor of the border of the focused window.\r\n\r\n> normal_window_border_color [0xAARRGGBB]\r\nColor of the border of an unfocused window.\r\n\r\nThe format is `0xAARRGGBB`, basically `AA` is the alpha channel, `RR` is the red channel, `GG` is the green channel, and `BB` is the blue channel. 8-bits to represent each channel.\r\n\r\nI guess most tools online only translate the `RGB` channel to `#RRGGBB` e.g: `255, 87, 51` to `#FF5733`.\r\nThe equivalent for yabai (fully opaque) would be `0xFFFF5733`. I guess the `0x` part might be confusing. "
      },
      {
        "user": "0rphee",
        "created_at": "2022-08-29T20:49:32Z",
        "body": "Oh thank you! It's clear to me now."
      },
      {
        "user": "carlosvigil",
        "created_at": "2023-05-30T17:37:20Z",
        "body": "> I guess most tools online only translate the `RGB` channel to `#RRGGBB` e.g: `255, 87, 51` to `#FF5733`. The equivalent for yabai (fully opaque) would be `0xFFFF5733`. I guess the `0x` part might be confusing.\r\n\r\nyes, the 0xFF part is confusing. Everywhere else I've seen color the Alpha channel is trailing. Not sure what the 0x is for. Asking BingAI and searching for 10 digit hex color picker didn't lead anywhere either."
      },
      {
        "user": "24unix",
        "created_at": "2023-05-30T17:42:02Z",
        "body": "0x indicates that a hex value follows.\r\nDigital Colour Meter can give a hex RGB output, just add 0xXX, where XX is the opacity from 00 to 255 in hex.\r\n"
      },
      {
        "user": "koekeishiya",
        "created_at": "2023-05-30T17:50:46Z",
        "body": "There are various representations when encoding in 32 bits. I just happened to be introduced to the ARGB color model, and so that is the natural one for me to use. You can probably google for \"ARGB32 color model\" if you want to read about these things."
      },
      {
        "user": "carlosvigil",
        "created_at": "2023-05-30T17:55:36Z",
        "body": "@koekeishiya @24unix Thanks, seems like there's ever more to learn. I'll hold off on that rabbit hole for today."
      }
    ]
  },
  {
    "number": 1369,
    "title": "Yabai automatically refreshing on Mac M1 Monterey 12.5",
    "created_at": "2022-08-23T15:24:29Z",
    "closed_at": "2022-08-30T05:08:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/1369",
    "body": "I am facing an unusual issue. Windows keep refreshing automatically in 5 seconds or so. I do not have anything as such in config file. Also, I have disabled automatic window arrangement. \r\n\r\nWhat might be the issue here ?",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/1369/comments",
    "author": "prajinkhadka",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2022-08-23T15:31:49Z",
        "body": "Sounds like a crash. Make sure you are using the latest released version of yabai (v4.0.2)."
      },
      {
        "user": "prajinkhadka",
        "created_at": "2022-08-30T05:08:04Z",
        "body": "Yup !! That solved it. \r\n\r\nThank you @koekeishiya  "
      }
    ]
  },
  {
    "number": 1362,
    "title": "[Question] Move all instances of application to a different desktop",
    "created_at": "2022-08-18T13:44:27Z",
    "closed_at": "2022-08-18T14:41:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/1362",
    "body": "Hello guys.\r\n\r\nFirst of all, great job you're doing here with Yabai.\r\n\r\nI have a simple question, let's say we have multiple instances of the same app (Chrome, VSCode, whatever), what is the easiest way to move all of them at once to another desktop?\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/1362/comments",
    "author": "carlosmiei",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2022-08-18T13:49:21Z",
        "body": "The following command should do it.  \r\nReplace `\"kitty`\" with `\"Google Chrome\"` or whatever the name of the application is, and the `1` in `--space 1` with the desktop number.\r\n\r\n`yabai -m query --windows | jq 'map(select(.app==\"kitty\") | .id) | join(\" \")' | tr -d '\"' | xargs -n1 -I{} yabai -m window {} --space 1`"
      },
      {
        "user": "carlosmiei",
        "created_at": "2022-08-18T14:21:08Z",
        "body": "@koekeishiya nice, thanks! 🙂 "
      }
    ]
  },
  {
    "number": 1348,
    "title": "I don't really know if this is a issue but it is for me, that it doesn't have support for picom for animations and round corners",
    "created_at": "2022-08-10T23:47:21Z",
    "closed_at": "2022-09-13T21:43:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/1348",
    "body": "Doesn't have support for picom for animations and round corners",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/1348/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2022-08-18T14:49:59Z",
        "body": "Pretty sure picom is an X11 compositor, so it is not relevant for macOS?"
      },
      {
        "user": "ghost",
        "created_at": "2022-08-29T04:39:35Z",
        "body": "wait you can use picom on Mac OS???"
      },
      {
        "user": "koekeishiya",
        "created_at": "2022-09-13T21:43:08Z",
        "body": "> wait you can use picom on Mac OS???\r\n\r\nNop. See #148 for animations."
      }
    ]
  },
  {
    "number": 1301,
    "title": "auto_balance does not apply after mirror",
    "created_at": "2022-06-12T06:46:06Z",
    "closed_at": "2024-02-19T22:40:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/1301",
    "body": "To repro:\r\n- Have auto-balance on (`yabai -m config auto_balance on`)\r\n- Make a simple 3 window layout side-by-side\r\n- `yabai -m space --mirror y-axis`\r\n\r\nWhat happens (at least on my computer): windows tree is rotated but resulting windows are not balanced. Is that working as intended?",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/1301/comments",
    "author": "bmfurtado",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2022-06-13T08:19:22Z",
        "body": "This is intentional, `auto_balance` only happens on window add and removal."
      },
      {
        "user": "bmfurtado",
        "created_at": "2022-06-13T16:06:15Z",
        "body": "Got it... I personally find that behavior slightly confusing (since I'd anticipate that with auto_balance on, doing `yabai -m window --balance` should be a noop).\r\n\r\nIf you feel that my confusion doesn't make sense feel free to close this issue since I can always work around it by balancing right after doing the mirror in the same skhd action.\r\n"
      }
    ]
  },
  {
    "number": 1251,
    "title": "close window by title",
    "created_at": "2022-04-26T13:57:19Z",
    "closed_at": "2022-08-18T14:12:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/1251",
    "body": "is it possible to close a window by its title?",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/1251/comments",
    "author": "XLramones",
    "comments": [
      {
        "user": "es183923",
        "created_at": "2022-04-26T14:15:11Z",
        "body": "Yes, just use `jq` to parse the result of `yabai -m query --windows`.\r\n\r\neg: \r\n```sh\r\nWINDOW_TITLE=\"window title\"\r\nyabai -m window --close $(yabai -m query --windows | jq \".[] | select(.title==\\\"$WINDOW_TITLE\\\") | .id\")\r\n```"
      }
    ]
  },
  {
    "number": 972,
    "title": "Swap windows across displays",
    "created_at": "2021-07-27T09:38:12Z",
    "closed_at": "2022-04-21T14:46:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/972",
    "body": "Is it possible to move `window-1` from `display-1` to `display-2` so that it occupies the position of any window on `display-2` (say `window-2`)  thereby pushing `window-2` back to `display-1` (to occupy the original position of `window-1`).  In simple terms, it is to swap a window with any other window on a different display. I searched the issues but didn't find any match, and sorry if I missed one.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/972/comments",
    "author": "jack836",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2021-07-28T17:55:02Z",
        "body": "The `swap` command supports this, yes: `yabai -m window --swap <target window>`\r\nIf the window selectors are not sufficient, use the query system to grab the window id and use the window id in the above command.\r\n\r\nIf you have `yabai -m config mouse_drop_action swap` set, you can also do this operation using the mouse by dragging a window and dropping it in the center region of the target window."
      }
    ]
  },
  {
    "number": 943,
    "title": "external_bar and native-fullscreen",
    "created_at": "2021-06-29T07:58:58Z",
    "closed_at": "2021-07-04T18:09:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/943",
    "body": "Is the external_bar option supposed work on spaces that have windows in native-fullscreen? The wiki does not have any indication that external_bar **applies only to spaces in which windows are either not fullscreen** or are **in zoom-fullscreen mode**.\r\n\r\nThis is what I'm trying to achieve - for my most frequently used apps, I use one space per app with each window in native-fullscreen mode. I want simple-bar to be visible at the bottom of each space, but currently it looks like this is not possible unless I use the windows in zoom-fullscreen. Is this correct? I am using v.3.3.8",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/943/comments",
    "author": "blink-twice",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2021-06-30T15:10:09Z",
        "body": "This is a restriction in macOS. When an application is in native-fullscreen space, the size is controlled by macOS and we have no way to say that we want to leave empty space as padding. \r\n\r\nIn general, it is not possible to show other applications/windows on a native-fullscreen space. Technically, there is a way to do this and the bar that used to be built into yabai (v2.x.x) did this, but I doubt simple-bar supports it as it utilizes Übersicht.\r\n\r\nRegardless, a native-fullscreen space is not something that we have control over."
      },
      {
        "user": "blink-twice",
        "created_at": "2021-07-04T18:09:59Z",
        "body": "Thank you for the confirmation! It would be great to have it clarified in the Wiki as well. "
      }
    ]
  },
  {
    "number": 942,
    "title": "Fullscreen without moving to a new space",
    "created_at": "2021-06-28T17:05:00Z",
    "closed_at": "2022-04-21T14:48:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/942",
    "body": "I have been looking through issues and wiki pages, but haven't found a way to prevent applications from being moved to a new space at the end of the list, when fullscreening them. I understand that this is normal macOS behaviour, but it doesn't really fit in with a window manager like this? I want to be able to eg. fullscreen Firefox in space 2 (to get rid of the title bar buttons I don't need), without having to open mission control and manually re-arrange the spaces to make sure I can still use the same keyboard shortcut to access it. Is this possible?",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/942/comments",
    "author": "PaddiM8",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2021-06-30T15:12:17Z",
        "body": "It is not possible to fullscreen without moving to a new space; this is a macOS thing.\r\n\r\nYou might be able to make some sort of script that uses `yabai -m space --move ..` to re-order the space automatically the first time the window enter fullscreen."
      },
      {
        "user": "edte",
        "created_at": "2023-08-10T03:50:25Z",
        "body": "same trouble"
      }
    ]
  },
  {
    "number": 941,
    "title": "Cannot focus space even with animation (m1 w/o scripting-addition)",
    "created_at": "2021-06-26T20:49:22Z",
    "closed_at": "2021-06-30T15:25:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/941",
    "body": "I am trying to run Yabai _without_ the scripting-addition on my m1, and I believe my interpretation of the documentation is that without the s-a, you're supposed to be able to change space focus just with the default animation. However, when I try to run the command in terminal \r\n\r\n`yabai -m space --focus #`\r\nthe error message does still print \r\n`cannot focus space due to an error with the scripting-addition.`\r\n\r\nThe section of the documentation I am referring to is here: \r\n\r\n> The following features of yabai require System Integrity Protection to be (partially) disabled:\r\n> \r\n>     **focus/create/destroy space without animation**\r\n>     move space (and its windows) left, right or to another display\r\n>     remove window shadows\r\n>     enable window transparency\r\n>     control window layers (make windows appear topmost)\r\n>     sticky windows (make windows appear on all spaces)\r\n>     move window by clicking anywhere in its frame\r\n>     toggle picture-in-picture for any given window\r\n>     border for focused and inactive windows\r\n\r\n\r\nThe first line would seem to indicate that this should still be possible without the scripting addition (again, I did not install the s-a, as I am running this on an m1 and understand that s-a is not supported on those chips). \r\n\r\nI've noticed others who have referenced similar issues, but it isn't clear to me if they were running into the same issue or if they were incorrectly trying to run s-a on an incompatible system. Starting a new issue here as the documentation does seem to indicate that this should not be an issue (not sure if this 1) used to be possible without s-a, but now the base code makes it impossible due to integration with s-a, or if 2) this simply was never possible. Either way, might just need to revise the docs).\r\n\r\nEdit1: spelling\r\n\r\nEdit2: also for anyone  else running this on an m1, obviously the workaround is to manually set these hotkeys under System Preferences > Keyboard > Mission Control > Switch to Desktop #\r\n\r\nThis more or less works as I am able to still move windows to a different \"space\"/Desktop via Yabai on skhd (e.g. `yabai -m window space #`), but due to the issue posted, I  can't move+follow focus via skhd in a single key combo since the `yabai -m space --focus #` command won't work, so it's an extra key combo to then manually switch to the new Desktop I moved the window to. ",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/941/comments",
    "author": "greglum",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2021-06-30T15:14:01Z",
        "body": "There are no APIs to focus a different space without the scripting addition. You can either use the keybindings in mission control, or run a yabai query for your target space and focus the first window in the list, to trigger a space switch. This will only work for spaces that have open windows on them. You can search the issue board for this; there is a script in some closed issue somewhere that  does this."
      },
      {
        "user": "greglum",
        "created_at": "2021-06-30T15:25:32Z",
        "body": "Ah, I see. I appreciate the clarification! Thoroughly enjoying the project so far!\r\n\r\n\r\n"
      }
    ]
  },
  {
    "number": 940,
    "title": "Command to focus floating window",
    "created_at": "2021-06-25T18:33:01Z",
    "closed_at": "2021-07-11T15:51:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/940",
    "body": "On Sway (and therefore i3), I can use Meta+Space to toggle focus of the floating window(s).\r\n\r\nIs it possible with yabai? A quick trial and error with the man page didn't give me the desired result.\r\n\r\nMaybe we need a \r\n```\r\nyabai -m window --focus lastfloating\r\n```\r\n\r\nor something like that.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/940/comments",
    "author": "Scrumplex",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2021-06-30T15:15:24Z",
        "body": "There is no way to toggle into focusing floating windows. Use the query system to retrieve information about windows and pass the id to `yabai -m window --focus`. See #944 for a sample, or search the closed issues."
      }
    ]
  },
  {
    "number": 939,
    "title": "Can integrity protection be turned back on after install for Big Sur?",
    "created_at": "2021-06-25T13:13:36Z",
    "closed_at": "2021-06-30T15:15:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/939",
    "body": "",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/939/comments",
    "author": "ShawnMcCool",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2021-06-30T15:15:55Z",
        "body": "No, only on High Sierra ,as specified in the readme/wiki."
      }
    ]
  },
  {
    "number": 800,
    "title": "Fixed-size windows",
    "created_at": "2021-01-21T02:42:38Z",
    "closed_at": "2022-09-23T00:48:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/800",
    "body": "Apologies if this functionality is already supported and I am just not aware of how to use it.\r\n\r\nI would like to change the window layout of a given space to have all windows in a fixed size -- e.g., if I have 15 terminal windows open, a 5x3 grid of some sort. Running `yabai -m space --layout bsp` causes a fractal pattern on the screen, I'd like to just make all of the open windows approximately evenly sized so I can see what is happening on all of them.\r\n\r\nIs this possible as-is or would this require an improvement to yabai? Thanks!",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/800/comments",
    "author": "jwoglom",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2021-02-03T11:24:28Z",
        "body": "Is `yabai -m space --balance` not sufficient?"
      },
      {
        "user": "braham-snyder",
        "created_at": "2021-03-09T14:27:16Z",
        "body": "`yabai -m space --balance` helps a ton, but with a lot of windows gives a window pattern vaguely like this:\r\n\r\n```\r\n ________________\r\n|   |____________|\r\n|   |   |________|\r\n|   |   |   |____|\r\n|___|___|___|____|\r\n```\r\n\r\nThat's the \"fractal pattern\" he means, I think.\r\n\r\n&nbsp;\r\n\r\nA regular grid where each window is roughly the same size and shape would improve readability a bunch."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2021-03-09T14:31:52Z",
        "body": "Are you aware of `yabai -m config auto_balance on`? You can use it in combination with a signal that sets the insertion point to the largest window whenever you focus a window to get the desired behavior."
      },
      {
        "user": "jwoglom",
        "created_at": "2021-03-10T22:47:35Z",
        "body": "Would you mind sharing how you've configured that signal?"
      }
    ]
  },
  {
    "number": 769,
    "title": "v3.3.6 segfaults with EXC_BAD_ACCESS",
    "created_at": "2020-12-21T20:15:52Z",
    "closed_at": "2021-01-02T07:18:52Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/769",
    "body": "I am not sure how to reproduce this, but I've included the crash report in hopes that it will help.\r\n\r\n```\r\nProcess:               yabai [73104]\r\nPath:                  /usr/local/bin/yabai\r\nIdentifier:            yabai\r\nVersion:               0\r\nCode Type:             X86-64 (Native)\r\nParent Process:        zsh [69548]\r\nResponsible:           alacritty [67185]\r\nUser ID:               502\r\n\r\nDate/Time:             2020-12-21 14:06:19.201 -0600\r\nOS Version:            macOS 11.1 (20C69)\r\nReport Version:        12\r\nBridge OS Version:     5.1 (18P3030)\r\nAnonymous UUID:        6FE9F8C5-614D-60BD-7F60-CC982A979879\r\n\r\nSleep/Wake UUID:       EC4D8F17-E843-41F9-838F-04C43959995A\r\n\r\nTime Awake Since Boot: 200000 seconds\r\nTime Since Wake:       11000 seconds\r\n\r\nSystem Integrity Protection: disabled\r\n\r\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\r\n\r\nException Type:        EXC_BAD_ACCESS (SIGSEGV)\r\nException Codes:       KERN_INVALID_ADDRESS at 0x0000000000000018\r\nException Note:        EXC_CORPSE_NOTIFY\r\n\r\nTermination Signal:    Segmentation fault: 11\r\nTermination Reason:    Namespace SIGNAL, Code 0xb\r\nTerminating Process:   exc handler [73104]\r\n\r\nVM Regions Near 0x18:\r\n--> \r\n    __TEXT                      10daaf000-10dadf000    [  192K] r-x/r-x SM=COW  /Volumes/*\r\n\r\nApplication Specific Information:\r\nobjc_msgSend() selector name: _cfTypeID\r\n\r\n\r\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\r\n0   libobjc.A.dylib               \t0x00007fff201bdd1d objc_msgSend + 29\r\n1   com.apple.SkyLight            \t0x00007fff24c9606f _SLEventRecordCreateData(SLSEventRecord const*, SLEventCreateDataOptions, unsigned int) + 1068\r\n2   com.apple.SkyLight            \t0x00007fff24c97358 CGSEncodeEventRecord + 79\r\n3   com.apple.SkyLight            \t0x00007fff24ca9a39 postEventsWithStyle(CGSPostEventStyle, unsigned int, unsigned int, unsigned int, SLSEventRecord*, int) + 175\r\n4   com.apple.SkyLight            \t0x00007fff24ca97d9 processEventTapData(void*, unsigned int, unsigned int, unsigned int, unsigned char*, unsigned int) + 1379\r\n5   com.apple.SkyLight            \t0x00007fff24e51717 _XPostEventTapData + 276\r\n6   com.apple.SkyLight            \t0x00007fff24ca9218 eventTapMessageHandler(__CFMachPort*, void*, long, void*) + 147\r\n7   com.apple.CoreFoundation      \t0x00007fff20446684 __CFMachPortPerform + 250\r\n8   com.apple.CoreFoundation      \t0x00007fff2041a188 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ + 41\r\n9   com.apple.CoreFoundation      \t0x00007fff2041a065 __CFRunLoopDoSource1 + 595\r\n10  com.apple.CoreFoundation      \t0x00007fff20418709 __CFRunLoopRun + 2402\r\n11  com.apple.CoreFoundation      \t0x00007fff204176ce CFRunLoopRunSpecific + 563\r\n12  com.apple.CoreFoundation      \t0x00007fff2049dcc9 CFRunLoopRun + 40\r\n13  yabai                         \t0x000000010dad1ba6 main + 534\r\n14  libdyld.dylib                 \t0x00007fff2033c621 start + 1\r\n\r\nThread 1:\r\n0   libsystem_pthread.dylib       \t0x00007fff2031d458 start_wqthread + 0\r\n\r\nThread 2:\r\n0   libsystem_pthread.dylib       \t0x00007fff2031d458 start_wqthread + 0\r\n\r\nThread 3:\r\n0   libsystem_kernel.dylib        \t0x00007fff2030f89a sem_wait + 10\r\n1   yabai                         \t0x000000010dab47ed event_loop_run + 285\r\n2   libsystem_pthread.dylib       \t0x00007fff20321950 _pthread_start + 224\r\n3   libsystem_pthread.dylib       \t0x00007fff2031d47b thread_start + 15\r\n\r\nThread 4:\r\n0   libsystem_kernel.dylib        \t0x00007fff202f34e6 __accept + 10\r\n1   yabai                         \t0x000000010dab1227 socket_connection_handler + 55\r\n2   libsystem_pthread.dylib       \t0x00007fff20321950 _pthread_start + 224\r\n3   libsystem_pthread.dylib       \t0x00007fff2031d47b thread_start + 15\r\n\r\nThread 5:\r\n0   libsystem_pthread.dylib       \t0x00007fff2031d458 start_wqthread + 0\r\n\r\nThread 0 crashed with X86 Thread State (64-bit):\r\n  rax: 0xd000000000000000  rbx: 0x00007ffee21423a0  rcx: 0x00007fff883a1250  rdx: 0x00007fff883a2d50\r\n  rdi: 0x00007ffaa6c137e0  rsi: 0x00007fff7c567d26  rbp: 0x00007ffee2142390  rsp: 0x00007ffee2142308\r\n   r8: 0x0000000000004792   r9: 0x00000000000047b1  r10: 0x0000000000000000  r11: 0x00007fff7c567d26\r\n  r12: 0x0000000000000003  r13: 0x00007ffaa6c137e0  r14: 0x00007ffaa6c51c50  r15: 0x00007fff883d6b70\r\n  rip: 0x00007fff201bdd1d  rfl: 0x0000000000010246  cr2: 0x0000000000000018\r\n  \r\nLogical CPU:     4\r\nError Code:      0x00000004 (no mapping for user data read)\r\nTrap Number:     14\r\n\r\nThread 0 instruction stream:\r\n  01 76 17 49 83 c3 10 49-3b 33 75 f1 49 8b 43 08  .v.I...I;3u.I.C.\r\n  48 83 f8 00 74 03 4c 31-d0 c3 eb 00 31 c0 c3 66  H...t.L1....1..f\r\n  2e 0f 1f 84 00 00 00 00-00 66 2e 0f 1f 84 00 00  .........f......\r\n  00 00 00 66 2e 0f 1f 84-00 00 00 00 00 66 0f 1f  ...f.........f..\r\n  44 00 00 48 85 ff 2e 74-72 40 f6 c7 01 2e 75 76  D..H...tr@....uv\r\n  49 ba f8 ff ff ff ff 7f-00 00 4c 23 17 49 89 f3  I.........L#.I..\r\n [45]23 5a 18 49 c1 e3 04-4d 03 5a 10 49 3b 33 75  E#Z.I...M.Z.I;3u\t<==\r\n  0a 4d 8b 5b 08 4d 31 d3-41 ff e3 49 83 3b 01 76  .M.[.M1.A..I.;.v\r\n  13 49 83 c3 10 49 3b 33-75 f1 4d 8b 5b 08 4d 31  .I...I;3u.M.[.M1\r\n  d3 41 ff e3 72 70 4d 8b-5b 08 eb 0a 49 83 3b 01  .A..rpM.[...I.;.\r\n  76 13 49 83 c3 10 49 3b-33 75 f1 4d 8b 5b 08 4d  v.I...I;3u.M.[.M\r\n  31 d3 41 ff e3 eb 4f 0f-1f 40 00 31 c0 31 d2 0f  1.A...O..@.1.1..\r\n  \r\nThread 0 last branch register state not available.\r\n\r\n\r\nBinary Images:\r\n       0x10daaf000 -        0x10dadefff +yabai (0) <0082A21A-CB1D-315B-9682-733BDED2ECE3> /usr/local/bin/yabai\r\n       0x11d548000 -        0x11d5e3fff  dyld (832.7.1) <DEA51514-B4E8-3368-979B-89D0F8397ABC> /usr/lib/dyld\r\n    0x7fff20057000 -     0x7fff20058fff  libsystem_blocks.dylib (78) <9CF131C6-16FB-3DD0-B046-9E0B6AB99935> /usr/lib/system/libsystem_blocks.dylib\r\n    0x7fff20059000 -     0x7fff2008efff  libxpc.dylib (2038.40.38) <003A027D-9CE3-3794-A319-88495844662D> /usr/lib/system/libxpc.dylib\r\n    0x7fff2008f000 -     0x7fff200a6fff  libsystem_trace.dylib (1277.50.1) <48C14376-626E-3C81-B0F5-7416E64580C7> /usr/lib/system/libsystem_trace.dylib\r\n    0x7fff200a7000 -     0x7fff20145fff  libcorecrypto.dylib (1000.60.19) <92F0211E-506E-3760-A3C2-808BF3905C07> /usr/lib/system/libcorecrypto.dylib\r\n    0x7fff20146000 -     0x7fff20172fff  libsystem_malloc.dylib (317.40.8) <2EF43B96-90FB-3C50-B73E-035238504E33> /usr/lib/system/libsystem_malloc.dylib\r\n    0x7fff20173000 -     0x7fff201b7fff  libdispatch.dylib (1271.40.12) <CEF1460B-1362-381A-AE69-6BCE2D8C215B> /usr/lib/system/libdispatch.dylib\r\n    0x7fff201b8000 -     0x7fff201f0fff  libobjc.A.dylib (818.2) <45EA2DE2-B612-3486-B156-2359CE279159> /usr/lib/libobjc.A.dylib\r\n    0x7fff201f1000 -     0x7fff201f3fff  libsystem_featureflags.dylib (28.60.1) <7B4EBDDB-244E-3F78-8895-566FE22288F3> /usr/lib/system/libsystem_featureflags.dylib\r\n    0x7fff201f4000 -     0x7fff2027cfff  libsystem_c.dylib (1439.40.11) <06D9F593-C815-385D-957F-2B5BCC223A8A> /usr/lib/system/libsystem_c.dylib\r\n    0x7fff2027d000 -     0x7fff202d2fff  libc++.1.dylib (904.4) <AE3A940A-7A9C-3F99-B175-3511528D8DFE> /usr/lib/libc++.1.dylib\r\n    0x7fff202d3000 -     0x7fff202ebfff  libc++abi.dylib (904.4) <DDFCBF9C-432D-3B8A-8641-578D2EDDCAD8> /usr/lib/libc++abi.dylib\r\n    0x7fff202ec000 -     0x7fff2031afff  libsystem_kernel.dylib (7195.60.75) <4BD61365-29AF-3234-8002-D989D295FDBB> /usr/lib/system/libsystem_kernel.dylib\r\n    0x7fff2031b000 -     0x7fff20326fff  libsystem_pthread.dylib (454.60.1) <8DD3A0BC-2C92-31E3-BBAB-CE923A4342E4> /usr/lib/system/libsystem_pthread.dylib\r\n    0x7fff20327000 -     0x7fff20361fff  libdyld.dylib (832.7.1) <2F8A14F5-7CB8-3EDD-85EA-7FA960BBC04E> /usr/lib/system/libdyld.dylib\r\n    0x7fff20362000 -     0x7fff2036bfff  libsystem_platform.dylib (254.60.1) <3F7F6461-7B5C-3197-ACD7-C8A0CFCC6F55> /usr/lib/system/libsystem_platform.dylib\r\n    0x7fff2036c000 -     0x7fff20397fff  libsystem_info.dylib (542.40.3) <0979757C-5F0D-3F5A-9E0E-EBF234B310AF> /usr/lib/system/libsystem_info.dylib\r\n    0x7fff20398000 -     0x7fff20833fff  com.apple.CoreFoundation (6.9 - 1770.300) <EAC298C4-CE3E-3551-A832-42ED9A13EF74> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation\r\n    0x7fff20834000 -     0x7fff20a63fff  com.apple.LaunchServices (1122.11 - 1122.11) <CAEEC254-68AE-39B5-8452-EC3E1EE8577B> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices\r\n    0x7fff20a64000 -     0x7fff20b37fff  com.apple.gpusw.MetalTools (1.0 - 1) <C235D5FA-0B9D-3E72-A8CE-67174E1B9E7C> /System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools\r\n    0x7fff20b38000 -     0x7fff20d9bfff  libBLAS.dylib (1336.40.1) <AD2D155C-1294-3D10-817A-F6A581E6ACF1> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib\r\n    0x7fff20d9c000 -     0x7fff20de9fff  com.apple.Lexicon-framework (1.0 - 86.1) <D54364A6-1C4C-33D7-8B24-C753777B3654> /System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon\r\n    0x7fff20dea000 -     0x7fff20e58fff  libSparse.dylib (106) <60559226-6E4B-3601-B6CA-E3B85B5EB27B> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib\r\n    0x7fff20e59000 -     0x7fff20ed6fff  com.apple.SystemConfiguration (1.20 - 1.20) <8524EE4C-628F-315A-9531-44DD83CE275E> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration\r\n    0x7fff20ed7000 -     0x7fff20f0cfff  libCRFSuite.dylib (50) <6CA29EAA-0585-3682-9AD2-DFD3D87A74D4> /usr/lib/libCRFSuite.dylib\r\n    0x7fff20f0d000 -     0x7fff21144fff  libmecabra.dylib (929.1.1) <39F5AD50-3AF2-3CFB-BD21-2DC45AA92A91> /usr/lib/libmecabra.dylib\r\n    0x7fff21145000 -     0x7fff214a8fff  com.apple.Foundation (6.9 - 1770.300) <44A7115B-7FF0-3300-B61B-0FA71B63C715> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation\r\n    0x7fff214a9000 -     0x7fff21595fff  com.apple.LanguageModeling (1.0 - 247.1) <BCB1F8A7-54B9-36D1-B742-70DF7657BF0B> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling\r\n    0x7fff21596000 -     0x7fff216ccfff  com.apple.CoreDisplay (231.3 - 231.3) <229BF97A-1D56-3CB4-8338-E0D464F73A33> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay\r\n    0x7fff216cd000 -     0x7fff21942fff  com.apple.audio.AudioToolboxCore (1.0 - 1180.23) <56821802-07B9-3FA9-AF73-D943BAE0DE57> /System/Library/PrivateFrameworks/AudioToolboxCore.framework/Versions/A/AudioToolboxCore\r\n    0x7fff21943000 -     0x7fff21b2bfff  com.apple.CoreText (677.2.0.5 - 677.2.0.5) <B0B2A8DD-A6F1-3EF7-9351-1BA604353A11> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText\r\n    0x7fff21b2c000 -     0x7fff221cffff  com.apple.audio.CoreAudio (5.0 - 5.0) <DF623EC9-FC55-3B3C-94FF-6A5C50A981B3> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio\r\n    0x7fff221d0000 -     0x7fff22521fff  com.apple.security (7.0 - 59754.60.13) <A20AB68D-51DA-340B-B813-F2AFC81F7143> /System/Library/Frameworks/Security.framework/Versions/A/Security\r\n    0x7fff22522000 -     0x7fff22783fff  libicucore.A.dylib (66109) <6C0A0196-2778-3035-81CE-7CA48D6C0628> /usr/lib/libicucore.A.dylib\r\n    0x7fff22784000 -     0x7fff2278dfff  libsystem_darwin.dylib (1439.40.11) <BD269412-C9D0-32EE-B42B-B09A187A9B95> /usr/lib/system/libsystem_darwin.dylib\r\n    0x7fff2278e000 -     0x7fff22a75fff  com.apple.CoreServices.CarbonCore (1307 - 1307) <9C615967-6D8E-307F-B028-6278A4FA7C8C> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore\r\n    0x7fff22a76000 -     0x7fff22ab4fff  com.apple.CoreServicesInternal (476 - 476) <FD1692F7-A4B4-3FE5-B9C8-E0840D53C7D0> /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal\r\n    0x7fff22ab5000 -     0x7fff22aeffff  com.apple.CSStore (1122.11 - 1122.11) <088D0108-AA14-3610-86A0-89D0C605384F> /System/Library/PrivateFrameworks/CoreServicesStore.framework/Versions/A/CoreServicesStore\r\n    0x7fff22af0000 -     0x7fff22b9dfff  com.apple.framework.IOKit (2.0.2 - 1845.60.2) <F2299682-5884-363F-9069-AA804E712C74> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit\r\n    0x7fff22b9e000 -     0x7fff22ba9fff  libsystem_notify.dylib (279.40.4) <98D74EEF-60D9-3665-B877-7BE1558BA83E> /usr/lib/system/libsystem_notify.dylib\r\n    0x7fff22baa000 -     0x7fff22bf5fff  libsandbox.1.dylib (1441.60.4) <243C983D-0AEF-3A09-9489-CF1FC75925CC> /usr/lib/libsandbox.1.dylib\r\n    0x7fff22bf6000 -     0x7fff23958fff  com.apple.AppKit (6.9 - 2022.20.119) <4CB42914-672D-3AF0-A0A5-2209088A3DA0> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit\r\n    0x7fff23959000 -     0x7fff23bacfff  com.apple.UIFoundation (1.0 - 726.11) <71C63CE5-094D-34AF-B538-8DCAB3B66DE9> /System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation\r\n    0x7fff23bad000 -     0x7fff23bbffff  com.apple.UniformTypeIdentifiers (633.0.2 - 633.0.2) <7BEC7DDC-2B7A-3B5D-B994-5FA352FC485A> /System/Library/Frameworks/UniformTypeIdentifiers.framework/Versions/A/UniformTypeIdentifiers\r\n    0x7fff23bc0000 -     0x7fff23d4afff  com.apple.desktopservices (1.17 - 1346.2.1) <732C8A0C-E7F8-372D-AE5B-84497067135E> /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv\r\n    0x7fff24017000 -     0x7fff2465afff  libnetwork.dylib (2288.60.5) <180FE916-8DD6-3385-B231-0C423B7D2BD3> /usr/lib/libnetwork.dylib\r\n    0x7fff2465b000 -     0x7fff24af8fff  com.apple.CFNetwork (1209.1 - 1209.1) <60DE4CD6-B5AF-3E0E-8AF1-39ECFC1B8C98> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork\r\n    0x7fff24af9000 -     0x7fff24b07fff  libsystem_networkextension.dylib (1295.60.5) <F476B1CB-3561-30C5-A78E-44E99B1720A3> /usr/lib/system/libsystem_networkextension.dylib\r\n    0x7fff24b08000 -     0x7fff24b08fff  libenergytrace.dylib (22) <9BE5E51A-F531-3D59-BBBC-486FFF97BD30> /usr/lib/libenergytrace.dylib\r\n    0x7fff24b09000 -     0x7fff24b64fff  libMobileGestalt.dylib (978.60.2) <F721B185-0E6A-396B-A50F-0F55810D9A67> /usr/lib/libMobileGestalt.dylib\r\n    0x7fff24b65000 -     0x7fff24b7bfff  libsystem_asl.dylib (385) <940C5BB9-4928-3A63-97F2-132797C8B7E5> /usr/lib/system/libsystem_asl.dylib\r\n    0x7fff24b7c000 -     0x7fff24b93fff  com.apple.TCC (1.0 - 1) <457D5F24-A346-38FC-8FA1-43B0C835E035> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC\r\n    0x7fff24b94000 -     0x7fff24ef9fff  com.apple.SkyLight (1.600.0 - 569.6) <35876384-45F9-3C62-995B-38EC31BE75D7> /System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight\r\n    0x7fff24efa000 -     0x7fff2558dfff  com.apple.CoreGraphics (2.0 - 1463.2.2) <323F725F-CB03-3AAD-AFBC-37B430B3FD4E> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics\r\n    0x7fff2558e000 -     0x7fff25684fff  com.apple.ColorSync (4.13.0 - 3472) <7387EBC7-CBD9-34FE-B4A3-345E4750FD81> /System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync\r\n    0x7fff25685000 -     0x7fff256e0fff  com.apple.HIServices (1.22 - 713) <9AF2CDD9-8B68-3606-8C9E-1842420ACDA7> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices\r\n    0x7fff25a8c000 -     0x7fff25eaafff  com.apple.CoreData (120 - 1044.3) <76179A55-CA89-3967-A0A7-C419DB735983> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData\r\n    0x7fff25eab000 -     0x7fff25ec1fff  com.apple.ProtocolBuffer (1 - 285.20.8.8.1) <8EE538E7-2BB1-3E29-8FC3-938335998B22> /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer\r\n    0x7fff25ec2000 -     0x7fff26081fff  libsqlite3.dylib (321.1) <D7017429-8D46-3ECB-8B70-4625C74918F3> /usr/lib/libsqlite3.dylib\r\n    0x7fff26082000 -     0x7fff260fefff  com.apple.Accounts (113 - 113) <99421243-019F-3A2F-A671-092026FA2F74> /System/Library/Frameworks/Accounts.framework/Versions/A/Accounts\r\n    0x7fff260ff000 -     0x7fff26117fff  com.apple.commonutilities (8.0 - 900) <76711775-FF46-38CA-88F3-B4201C285C7F> /System/Library/PrivateFrameworks/CommonUtilities.framework/Versions/A/CommonUtilities\r\n    0x7fff26118000 -     0x7fff26199fff  com.apple.BaseBoard (526 - 526) <38C24B3A-8226-3FD5-8C28-B11D02747B56> /System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard\r\n    0x7fff2619a000 -     0x7fff261e5fff  com.apple.RunningBoardServices (1.0 - 505.60.2) <F99A0D0C-D063-3E3F-8D1F-0E0B35E7CE2C> /System/Library/PrivateFrameworks/RunningBoardServices.framework/Versions/A/RunningBoardServices\r\n    0x7fff261e6000 -     0x7fff2625bfff  com.apple.AE (918.0.1 - 918.0.1) <3A298716-A130-345E-B8FF-74194849015E> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE\r\n    0x7fff2625c000 -     0x7fff26262fff  libdns_services.dylib (1310.60.4) <61EB26AD-C09E-3140-955E-16BF7DD2D6E3> /usr/lib/libdns_services.dylib\r\n    0x7fff26263000 -     0x7fff2626afff  libsystem_symptoms.dylib (1431.60.1) <88F35AAC-746F-3176-81DF-49CE3D285636> /usr/lib/system/libsystem_symptoms.dylib\r\n    0x7fff2626b000 -     0x7fff263effff  com.apple.Network (1.0 - 1) <EED4099E-B17C-3E0B-AA8F-78A2D4F26CBF> /System/Library/Frameworks/Network.framework/Versions/A/Network\r\n    0x7fff263f0000 -     0x7fff26414fff  com.apple.analyticsd (1.0 - 1) <99FE0234-454F-36FF-9DE9-36B94D8753F9> /System/Library/PrivateFrameworks/CoreAnalytics.framework/Versions/A/CoreAnalytics\r\n    0x7fff26415000 -     0x7fff26417fff  libDiagnosticMessagesClient.dylib (112) <1014A32B-89EE-3ADD-971F-9CB973172F69> /usr/lib/libDiagnosticMessagesClient.dylib\r\n    0x7fff26418000 -     0x7fff26464fff  com.apple.spotlight.metadata.utilities (1.0 - 2150.7.2) <37A1E760-2006-366C-9FAC-FB70227393FB> /System/Library/PrivateFrameworks/MetadataUtilities.framework/Versions/A/MetadataUtilities\r\n    0x7fff26465000 -     0x7fff264fffff  com.apple.Metadata (10.7.0 - 2150.7.2) <509C6597-ABB2-3B81-8E09-C51A755CCDA2> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata\r\n    0x7fff26500000 -     0x7fff26506fff  com.apple.DiskArbitration (2.7 - 2.7) <83DED679-BE65-3475-8AFF-D664BBAFA60A> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration\r\n    0x7fff26507000 -     0x7fff26badfff  com.apple.vImage (8.1 - 544) <305D97CC-B47C-32FD-9EC5-43259A469A14> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage\r\n    0x7fff26bae000 -     0x7fff26e7bfff  com.apple.QuartzCore (1.11 - 925.5) <D59138DC-10CD-3DF8-9F04-CCDB6102C370> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore\r\n    0x7fff26e7c000 -     0x7fff26ebdfff  libFontRegistry.dylib (309) <790676A3-2B74-3239-A60D-429069933542> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib\r\n    0x7fff26ebe000 -     0x7fff26ffffff  com.apple.coreui (2.1 - 689.4) <0DA8F4E0-9473-374E-8B48-F0A40AEC63CE> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI\r\n    0x7fff27000000 -     0x7fff270ebfff  com.apple.ViewBridge (551.3 - 551.3) <36D0DCA7-CAAE-33C1-90F6-98876CB8BCF3> /System/Library/PrivateFrameworks/ViewBridge.framework/Versions/A/ViewBridge\r\n    0x7fff270ec000 -     0x7fff270f7fff  com.apple.PerformanceAnalysis (1.275 - 275) <2F811EE6-D4D4-347E-B4A0-961F0DF050E5> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis\r\n    0x7fff270f8000 -     0x7fff27107fff  com.apple.OpenDirectory (11.1 - 230.40.1) <7710743E-6F55-342E-88FA-18796CF83700> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory\r\n    0x7fff27108000 -     0x7fff27127fff  com.apple.CFOpenDirectory (11.1 - 230.40.1) <32ECCB06-56D8-3704-935B-7D5363B2988E> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory\r\n    0x7fff27128000 -     0x7fff27130fff  com.apple.CoreServices.FSEvents (1290.40.2 - 1290.40.2) <FB18B8D7-C7F5-3CAB-B538-3F4B4E85D1F1> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents\r\n    0x7fff27131000 -     0x7fff27155fff  com.apple.coreservices.SharedFileList (144 - 144) <93D2192D-7A27-3FD4-B3AB-A4DCBF8419B7> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList\r\n    0x7fff27156000 -     0x7fff27158fff  libapp_launch_measurement.dylib (14.1) <9E2700C3-E993-3695-988E-FEF798B75E34> /usr/lib/libapp_launch_measurement.dylib\r\n    0x7fff27159000 -     0x7fff271a1fff  com.apple.CoreAutoLayout (1.0 - 21.10.1) <998BC461-F4F5-396E-9798-1C8126AD61DA> /System/Library/PrivateFrameworks/CoreAutoLayout.framework/Versions/A/CoreAutoLayout\r\n    0x7fff271a2000 -     0x7fff27284fff  libxml2.2.dylib (34.8) <68396181-8100-390C-8886-EFB79F5B484C> /usr/lib/libxml2.2.dylib\r\n    0x7fff27285000 -     0x7fff272d1fff  com.apple.CoreVideo (1.8 - 408.4) <0D5AD16E-A871-3ACB-B910-39B87928E937> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo\r\n    0x7fff272d2000 -     0x7fff272d4fff  com.apple.loginsupport (1.0 - 1) <4F860927-F6F5-3A99-A103-744CF365634F> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport\r\n    0x7fff272fe000 -     0x7fff2731bfff  com.apple.UserManagement (1.0 - 1) <B5CEAA26-4C5F-3AF4-BDFE-35DE7C8DE1BE> /System/Library/PrivateFrameworks/UserManagement.framework/Versions/A/UserManagement\r\n    0x7fff282b5000 -     0x7fff282c5fff  libsystem_containermanager.dylib (318.60.1) <4ED09A19-04CC-3464-9EFB-F674932020B5> /usr/lib/system/libsystem_containermanager.dylib\r\n    0x7fff282c6000 -     0x7fff282d7fff  com.apple.IOSurface (289.3 - 289.3) <A3B10665-5909-30EE-BE34-F3284D6D5975> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface\r\n    0x7fff282d8000 -     0x7fff282e0fff  com.apple.IOAccelerator (439.52 - 439.52) <3944C92D-7838-3D2F-A453-9DB15C815D7B> /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator\r\n    0x7fff282e1000 -     0x7fff28406fff  com.apple.Metal (244.32.7 - 244.32.7) <413B81AE-653F-3CF7-B5A4-A4391436E6D1> /System/Library/Frameworks/Metal.framework/Versions/A/Metal\r\n    0x7fff28407000 -     0x7fff28423fff  com.apple.audio.caulk (1.0 - 70) <952BA9D4-BAD3-3319-8C17-F7BB2655F80C> /System/Library/PrivateFrameworks/caulk.framework/Versions/A/caulk\r\n    0x7fff28424000 -     0x7fff2850dfff  com.apple.CoreMedia (1.0 - 2760.6.4.6) <CBCD783B-B3C9-37B8-835C-A3BACEC35BB5> /System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia\r\n    0x7fff2850e000 -     0x7fff2866afff  libFontParser.dylib (305.2.0.6) <76C6C92A-1B16-3FB7-9EA2-7227D379C20F> /System/Library/PrivateFrameworks/FontServices.framework/libFontParser.dylib\r\n    0x7fff2866b000 -     0x7fff2896afff  com.apple.HIToolbox (2.1.1 - 1060.4) <93518490-429F-3E31-8344-15D479C2F4CE> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox\r\n    0x7fff2896b000 -     0x7fff2897efff  com.apple.framework.DFRFoundation (1.0 - 265) <FB85651D-6221-38AF-BD6D-29BFF5830D36> /System/Library/PrivateFrameworks/DFRFoundation.framework/Versions/A/DFRFoundation\r\n    0x7fff2897f000 -     0x7fff28982fff  com.apple.dt.XCTTargetBootstrap (1.0 - 17500) <13ADD312-F6F5-3C03-BD3B-9331B3851285> /System/Library/PrivateFrameworks/XCTTargetBootstrap.framework/Versions/A/XCTTargetBootstrap\r\n    0x7fff28983000 -     0x7fff289acfff  com.apple.CoreSVG (1.0 - 149) <A0DAE6AE-9DDA-37B4-A087-545A242CF982> /System/Library/PrivateFrameworks/CoreSVG.framework/Versions/A/CoreSVG\r\n    0x7fff289ad000 -     0x7fff28be6fff  com.apple.ImageIO (3.3.0 - 2130.2.7) <0FE3D51B-EC76-3558-BD56-7BFF61A6793D> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\r\n    0x7fff28be7000 -     0x7fff28f64fff  com.apple.CoreImage (16.1.0 - 1120.10) <46F1E4F5-DF8F-32D4-8D0C-6FCF2C27A5CD> /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage\r\n    0x7fff28f65000 -     0x7fff28fc0fff  com.apple.MetalPerformanceShaders.MPSCore (1.0 - 1) <E2377275-53D7-31A0-AEAF-0A0273B99B92> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSCore.framework/Versions/A/MPSCore\r\n    0x7fff28fc1000 -     0x7fff28fc4fff  libsystem_configuration.dylib (1109.60.2) <C57B346B-0A03-3F87-BCAC-87B702FA0719> /usr/lib/system/libsystem_configuration.dylib\r\n    0x7fff28fc5000 -     0x7fff28fc9fff  libsystem_sandbox.dylib (1441.60.4) <8CE27199-D633-31D2-AB08-56380A1DA9FB> /usr/lib/system/libsystem_sandbox.dylib\r\n    0x7fff28fca000 -     0x7fff28fcbfff  com.apple.AggregateDictionary (1.0 - 1) <7F2AFEBB-FF06-3194-B691-B411F3456962> /System/Library/PrivateFrameworks/AggregateDictionary.framework/Versions/A/AggregateDictionary\r\n    0x7fff28fcc000 -     0x7fff28fcffff  com.apple.AppleSystemInfo (3.1.5 - 3.1.5) <250CD2CA-E796-3CB0-9ADD-054998903B1D> /System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo\r\n    0x7fff28fd0000 -     0x7fff28fd1fff  liblangid.dylib (136) <224DC045-2B60-39AF-B89E-E524175667F5> /usr/lib/liblangid.dylib\r\n    0x7fff28fd2000 -     0x7fff29072fff  com.apple.CoreNLP (1.0 - 245) <F876FD71-F077-3CF7-B94D-9E05A17E03D7> /System/Library/PrivateFrameworks/CoreNLP.framework/Versions/A/CoreNLP\r\n    0x7fff29073000 -     0x7fff29079fff  com.apple.LinguisticData (1.0 - 399) <D1B7F1D5-EB9E-3555-BA57-3611FA153C44> /System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData\r\n    0x7fff2907a000 -     0x7fff29736fff  libBNNS.dylib (288.60.2) <E3FF47D5-7DD9-3A9E-A819-C79B0CC17C03> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib\r\n    0x7fff29737000 -     0x7fff2990afff  libvDSP.dylib (760.40.6) <9434101D-E001-357F-9503-9896C6011F52> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib\r\n    0x7fff2990b000 -     0x7fff2991dfff  com.apple.CoreEmoji (1.0 - 128) <7CCFC59A-8746-3E52-AF1D-1B67798E940C> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji\r\n    0x7fff2991e000 -     0x7fff29928fff  com.apple.IOMobileFramebuffer (343.0.0 - 343.0.0) <9A6F913C-EC79-3FC1-A92C-3A1BA96D8DFB> /System/Library/PrivateFrameworks/IOMobileFramebuffer.framework/Versions/A/IOMobileFramebuffer\r\n    0x7fff29929000 -     0x7fff299fbfff  com.apple.framework.CoreWLAN (16.0 - 1657) <AB3F880B-52C5-3006-82FE-9E6857C09DE7> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN\r\n    0x7fff299fc000 -     0x7fff29bfbfff  com.apple.CoreUtils (6.5 - 650.5) <198A4273-5B92-3A05-A99D-7FD4914A959A> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils\r\n    0x7fff29bfc000 -     0x7fff29c1efff  com.apple.MobileKeyBag (2.0 - 1.0) <2B6BF51A-68B0-3108-9597-8B618E6B457B> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag\r\n    0x7fff29c1f000 -     0x7fff29c2ffff  com.apple.AssertionServices (1.0 - 505.60.2) <9F8620BD-A58D-3A42-9B9E-DEC21517EF1A> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices\r\n    0x7fff29c30000 -     0x7fff29cbcfff  com.apple.securityfoundation (6.0 - 55240.40.4) <5F06D141-62F4-3405-BA72-24673B170A16> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation\r\n    0x7fff29cbd000 -     0x7fff29cc6fff  com.apple.coreservices.BackgroundTaskManagement (1.0 - 104) <C5E4B35C-FFDA-3423-890F-06DAD1F684F5> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement\r\n    0x7fff29cc7000 -     0x7fff29ccbfff  com.apple.xpc.ServiceManagement (1.0 - 1) <2C03BEB7-915C-3A3A-A44F-A77775E1BFD5> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement\r\n    0x7fff29ccc000 -     0x7fff29ccefff  libquarantine.dylib (119.40.2) <19D42B9D-3336-3543-AF75-6E605EA31599> /usr/lib/system/libquarantine.dylib\r\n    0x7fff29ccf000 -     0x7fff29cdafff  libCheckFix.dylib (31) <3381FC93-F188-348C-9345-5567A7116CEF> /usr/lib/libCheckFix.dylib\r\n    0x7fff29cdb000 -     0x7fff29cf2fff  libcoretls.dylib (169) <9C244029-6B45-3583-B27F-BB7BBF84D814> /usr/lib/libcoretls.dylib\r\n    0x7fff29cf3000 -     0x7fff29d03fff  libbsm.0.dylib (68.40.1) <DC652D50-FA69-3801-9361-004D4D6832D0> /usr/lib/libbsm.0.dylib\r\n    0x7fff29d04000 -     0x7fff29d4dfff  libmecab.dylib (929.1.1) <B5D8C96C-D3B8-32F8-84F9-A432CEAD4E5C> /usr/lib/libmecab.dylib\r\n    0x7fff29d4e000 -     0x7fff29d53fff  libgermantok.dylib (24) <F9772A76-7AFA-3E0B-A02C-A61FC6CA8D8B> /usr/lib/libgermantok.dylib\r\n    0x7fff29d54000 -     0x7fff29d69fff  libLinearAlgebra.dylib (1336.40.1) <D2826FAB-174C-3CD6-A765-06D83A9A0EDB> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib\r\n    0x7fff29d6a000 -     0x7fff29f91fff  com.apple.MetalPerformanceShaders.MPSNeuralNetwork (1.0 - 1) <231CF580-952A-32BC-A423-9B9756AC9744> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork\r\n    0x7fff29f92000 -     0x7fff29fe1fff  com.apple.MetalPerformanceShaders.MPSRayIntersector (1.0 - 1) <65A993E4-3DC2-3152-98D5-A1DF3DB4573F> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSRayIntersector.framework/Versions/A/MPSRayIntersector\r\n    0x7fff29fe2000 -     0x7fff2a128fff  com.apple.MLCompute (1.0 - 1) <BCEA1149-197E-398F-9424-E29B0AD0829F> /System/Library/Frameworks/MLCompute.framework/Versions/A/MLCompute\r\n    0x7fff2a129000 -     0x7fff2a15ffff  com.apple.MetalPerformanceShaders.MPSMatrix (1.0 - 1) <F719DA57-EAAA-3527-B859-21025722932F> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix\r\n    0x7fff2a160000 -     0x7fff2a19dfff  com.apple.MetalPerformanceShaders.MPSNDArray (1.0 - 1) <FCCC0D3F-74D2-3107-82B3-E2B500E36AAE> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSNDArray.framework/Versions/A/MPSNDArray\r\n    0x7fff2a19e000 -     0x7fff2a22efff  com.apple.MetalPerformanceShaders.MPSImage (1.0 - 1) <21527A17-2D6F-3BDF-9A74-F90FA6E26BB3> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/Frameworks/MPSImage.framework/Versions/A/MPSImage\r\n    0x7fff2a22f000 -     0x7fff2a23efff  com.apple.AppleFSCompression (125 - 1.0) <D1E7DC71-1929-30A8-B73E-268387110608> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression\r\n    0x7fff2a23f000 -     0x7fff2a24cfff  libbz2.1.0.dylib (44) <0575C0D0-B107-3E53-857F-DEC55998197B> /usr/lib/libbz2.1.0.dylib\r\n    0x7fff2a24d000 -     0x7fff2a251fff  libsystem_coreservices.dylib (127) <A2D875B9-8BA8-33AD-BE92-ADAB915A8D5B> /usr/lib/system/libsystem_coreservices.dylib\r\n    0x7fff2a252000 -     0x7fff2a27ffff  com.apple.CoreServices.OSServices (1122.11 - 1122.11) <870F34BE-C0ED-318B-858D-5F1E4757D552> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices\r\n    0x7fff2a280000 -     0x7fff2a3b1fff  com.apple.AuthKit (1.0 - 1) <8239C235-54DE-39F3-98DC-920AF2BE6187> /System/Library/PrivateFrameworks/AuthKit.framework/Versions/A/AuthKit\r\n    0x7fff2a455000 -     0x7fff2a467fff  libz.1.dylib (76) <9F89FD60-03F7-3175-AB34-5112B99E2B8A> /usr/lib/libz.1.dylib\r\n    0x7fff2a468000 -     0x7fff2a4affff  libsystem_m.dylib (3186.40.2) <79820D9E-0FF1-3F20-AF4F-F87EE20CE8C9> /usr/lib/system/libsystem_m.dylib\r\n    0x7fff2a4b0000 -     0x7fff2a4b0fff  libcharset.1.dylib (59) <414F6A1C-1EBC-3956-AC2D-CCB0458F31AF> /usr/lib/libcharset.1.dylib\r\n    0x7fff2a4b1000 -     0x7fff2a4b6fff  libmacho.dylib (973.4) <28AE1649-22ED-3C4D-A232-29D37F821C39> /usr/lib/system/libmacho.dylib\r\n    0x7fff2a4b7000 -     0x7fff2a4d2fff  libkxld.dylib (7195.60.75) <3600A314-332A-343D-B45D-D9D8B302545D> /usr/lib/system/libkxld.dylib\r\n    0x7fff2a4d3000 -     0x7fff2a4defff  libcommonCrypto.dylib (60178.40.2) <1D0A75A5-DEC5-39C6-AB3D-E789B8866712> /usr/lib/system/libcommonCrypto.dylib\r\n    0x7fff2a4df000 -     0x7fff2a4e9fff  libunwind.dylib (200.10) <C5792A9C-DF0F-3821-BC14-238A78462E8A> /usr/lib/system/libunwind.dylib\r\n    0x7fff2a4ea000 -     0x7fff2a4f1fff  liboah.dylib (203.13.2) <FF72E19B-3B02-34D4-A821-3397BB28AC02> /usr/lib/liboah.dylib\r\n    0x7fff2a4f2000 -     0x7fff2a4fcfff  libcopyfile.dylib (173.40.2) <89483CD4-DA46-3AF2-AE78-FC37CED05ACC> /usr/lib/system/libcopyfile.dylib\r\n    0x7fff2a4fd000 -     0x7fff2a504fff  libcompiler_rt.dylib (102.2) <0DB26EC8-B4CD-3268-B865-C2FC07E4D2AA> /usr/lib/system/libcompiler_rt.dylib\r\n    0x7fff2a505000 -     0x7fff2a507fff  libsystem_collections.dylib (1439.40.11) <D40D8097-0ABF-3645-B065-168F43ACFF4C> /usr/lib/system/libsystem_collections.dylib\r\n    0x7fff2a508000 -     0x7fff2a50afff  libsystem_secinit.dylib (87.60.1) <99B5FD99-1A8B-37C1-BD70-04990FA33B1C> /usr/lib/system/libsystem_secinit.dylib\r\n    0x7fff2a50b000 -     0x7fff2a50dfff  libremovefile.dylib (49.40.3) <750012C2-7097-33C3-B796-2766E6CDE8C1> /usr/lib/system/libremovefile.dylib\r\n    0x7fff2a50e000 -     0x7fff2a50efff  libkeymgr.dylib (31) <2C7B58B0-BE54-3A50-B399-AA49C19083A9> /usr/lib/system/libkeymgr.dylib\r\n    0x7fff2a50f000 -     0x7fff2a516fff  libsystem_dnssd.dylib (1310.60.4) <81EFC44D-450E-3AA3-AC8F-D7EF68F464B4> /usr/lib/system/libsystem_dnssd.dylib\r\n    0x7fff2a517000 -     0x7fff2a51cfff  libcache.dylib (83) <2F7F7303-DB23-359E-85CD-8B2F93223E2A> /usr/lib/system/libcache.dylib\r\n    0x7fff2a51d000 -     0x7fff2a51efff  libSystem.B.dylib (1292.60.1) <A7FB4899-9E04-37ED-9DD8-8FFF0400879C> /usr/lib/libSystem.B.dylib\r\n    0x7fff2a51f000 -     0x7fff2a522fff  libfakelink.dylib (3) <34B6DC95-E19A-37C0-B9D0-558F692D85F5> /usr/lib/libfakelink.dylib\r\n    0x7fff2a523000 -     0x7fff2a523fff  com.apple.SoftLinking (1.0 - 1) <90D679B3-DFFD-3604-B89F-1BCF70B3EBA4> /System/Library/PrivateFrameworks/SoftLinking.framework/Versions/A/SoftLinking\r\n    0x7fff2a524000 -     0x7fff2a55bfff  libpcap.A.dylib (98.40.1) <E1995A1C-7EEB-3340-B1E1-DD45FA625C12> /usr/lib/libpcap.A.dylib\r\n    0x7fff2a55c000 -     0x7fff2a64cfff  libiconv.2.dylib (59) <3E53F735-1D7E-3ABB-BC45-AAA37F535830> /usr/lib/libiconv.2.dylib\r\n    0x7fff2a64d000 -     0x7fff2a65efff  libcmph.dylib (8) <865FA425-831D-3E49-BD1B-14188D2A98AA> /usr/lib/libcmph.dylib\r\n    0x7fff2a65f000 -     0x7fff2a6d0fff  libarchive.2.dylib (83.40.4) <76B2F421-5335-37FB-9CD5-1018878B9E74> /usr/lib/libarchive.2.dylib\r\n    0x7fff2a6d1000 -     0x7fff2a738fff  com.apple.SearchKit (1.4.1 - 1.4.1) <7BDD2800-BDDC-3DE0-A4A8-B1E855130E3B> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit\r\n    0x7fff2a739000 -     0x7fff2a73afff  libThaiTokenizer.dylib (3) <513547CD-5C7F-37BE-A2AD-55A22F279588> /usr/lib/libThaiTokenizer.dylib\r\n    0x7fff2a73b000 -     0x7fff2a762fff  com.apple.applesauce (1.0 - 16.26) <AE525243-2CE7-373E-994E-C2457611EB3C> /System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce\r\n    0x7fff2a763000 -     0x7fff2a77afff  libapple_nghttp2.dylib (1.41) <CC004768-6E3B-3D80-9431-61149EBE2E10> /usr/lib/libapple_nghttp2.dylib\r\n    0x7fff2a77b000 -     0x7fff2a78dfff  libSparseBLAS.dylib (1336.40.1) <CEBD7B0F-A54D-3A43-BD7E-E8BC2C7B7F0C> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib\r\n    0x7fff2a78e000 -     0x7fff2a78ffff  com.apple.MetalPerformanceShaders.MetalPerformanceShaders (1.0 - 1) <1BFEB124-CF05-342F-BC65-B233EAB661D9> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders\r\n    0x7fff2a790000 -     0x7fff2a794fff  libpam.2.dylib (28.40.1) <AE84F5FA-DDB0-3028-AF25-D6B6A12DBA6A> /usr/lib/libpam.2.dylib\r\n    0x7fff2a795000 -     0x7fff2a7adfff  libcompression.dylib (96.40.6) <45B8B821-8EB6-34FE-92E9-5CBA474499E2> /usr/lib/libcompression.dylib\r\n    0x7fff2a7ae000 -     0x7fff2a7b3fff  libQuadrature.dylib (7) <FB21F53D-4A40-327F-BD3B-C7C8D08C6A86> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib\r\n    0x7fff2a7b4000 -     0x7fff2ab50fff  libLAPACK.dylib (1336.40.1) <509FBCC6-4ECB-3192-98A6-D0C030E4E9D8> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib\r\n    0x7fff2ab51000 -     0x7fff2ab9ffff  com.apple.DictionaryServices (1.2 - 341) <83CDCE83-6B48-35F1-BACF-83240D940777> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices\r\n    0x7fff2aba0000 -     0x7fff2abb8fff  liblzma.5.dylib (16) <A45348BC-AA9C-39D6-A7C3-2246A3EFA34C> /usr/lib/liblzma.5.dylib\r\n    0x7fff2abb9000 -     0x7fff2abbafff  libcoretls_cfhelpers.dylib (169) <C0F19E92-DACB-3100-8610-62DEC5E5FB81> /usr/lib/libcoretls_cfhelpers.dylib\r\n    0x7fff2abbb000 -     0x7fff2acb4fff  com.apple.APFS (1677.60.23 - 1677.60.23) <8271EE40-CDF5-3E0B-9F42-B49DC7C46C98> /System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS\r\n    0x7fff2acb5000 -     0x7fff2acc2fff  libxar.1.dylib (452) <3F3DA942-DC7B-31EF-BCF1-38F99F59A660> /usr/lib/libxar.1.dylib\r\n    0x7fff2acc3000 -     0x7fff2acc6fff  libutil.dylib (58.40.2) <85CF2B3B-6BEB-381D-8683-1DE2B0167ECC> /usr/lib/libutil.dylib\r\n    0x7fff2acc7000 -     0x7fff2aceffff  libxslt.1.dylib (17.2) <2C881E82-6E2C-3E92-8DC5-3C2D05FE7C95> /usr/lib/libxslt.1.dylib\r\n    0x7fff2acf0000 -     0x7fff2acfafff  libChineseTokenizer.dylib (37) <36891BB5-4A83-33A3-9995-CC5DB2AB53CE> /usr/lib/libChineseTokenizer.dylib\r\n    0x7fff2acfb000 -     0x7fff2adb9fff  libvMisc.dylib (760.40.6) <219319E1-BDBD-34D1-97B7-E46256785D3C> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib\r\n    0x7fff2adba000 -     0x7fff2ae52fff  libate.dylib (3.0.4) <51D50D08-F614-3929-AFB1-BF4ED9BE4751> /usr/lib/libate.dylib\r\n    0x7fff2ae53000 -     0x7fff2ae5afff  libIOReport.dylib (64) <3C26FBDC-931E-3318-8225-C10849CF1D60> /usr/lib/libIOReport.dylib\r\n    0x7fff2ae5b000 -     0x7fff2ae89fff  com.apple.CrashReporterSupport (10.13 - 15047) <5377E0C9-5D89-38C0-B129-1A086716F3E9> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport\r\n    0x7fff2af76000 -     0x7fff2af7dfff  libMatch.1.dylib (38) <DC1E67E0-2690-3EE0-840D-461DA2980D9D> /usr/lib/libMatch.1.dylib\r\n    0x7fff2af7e000 -     0x7fff2b009fff  libCoreStorage.dylib (554) <8EEB1047-EFC1-3C1B-8E33-A446EB043AD5> /usr/lib/libCoreStorage.dylib\r\n    0x7fff2b00a000 -     0x7fff2b05dfff  com.apple.AppleVAFramework (6.1.3 - 6.1.3) <8A5B1C42-DD83-303B-85DE-754FB6C10E1A> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA\r\n    0x7fff2b05e000 -     0x7fff2b077fff  libexpat.1.dylib (26) <4408FC72-BDAA-33AE-BE14-4008642794ED> /usr/lib/libexpat.1.dylib\r\n    0x7fff2b078000 -     0x7fff2b081fff  libheimdal-asn1.dylib (597.40.10) <032931C8-B042-3B3D-93D3-5B3E27431FEA> /usr/lib/libheimdal-asn1.dylib\r\n    0x7fff2b082000 -     0x7fff2b096fff  com.apple.IconFoundation (479.3 - 479.3) <650C91C9-D6A1-3FF7-964B-DE1065F2243C> /System/Library/PrivateFrameworks/IconFoundation.framework/Versions/A/IconFoundation\r\n    0x7fff2b097000 -     0x7fff2b104fff  com.apple.IconServices (479.3 - 479.3) <63CAB1AB-C485-382A-9088-F6E3937BB8E9> /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices\r\n    0x7fff2b105000 -     0x7fff2b1a2fff  com.apple.MediaExperience (1.0 - 1) <A7A754CE-61AB-39B8-AA31-3AEB14695F55> /System/Library/PrivateFrameworks/MediaExperience.framework/Versions/A/MediaExperience\r\n    0x7fff2b1a3000 -     0x7fff2b1ccfff  com.apple.persistentconnection (1.0 - 1.0) <C3F975D3-A87C-353C-BA1F-072825E60E8C> /System/Library/PrivateFrameworks/PersistentConnection.framework/Versions/A/PersistentConnection\r\n    0x7fff2b1cd000 -     0x7fff2b1dbfff  com.apple.GraphVisualizer (1.0 - 100.1) <7035CCDF-5B9D-365C-A1FA-1D961EBEE44D> /System/Library/PrivateFrameworks/GraphVisualizer.framework/Versions/A/GraphVisualizer\r\n    0x7fff2b1dc000 -     0x7fff2b5f7fff  com.apple.vision.FaceCore (4.3.2 - 4.3.2) <E0518821-B65D-31A4-8C37-DF3569CF8867> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore\r\n    0x7fff2b5f8000 -     0x7fff2b642fff  com.apple.OTSVG (1.0 - 677.2.0.5) <D2722431-6C71-3144-A024-6ED06334AEE0> /System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG\r\n    0x7fff2b643000 -     0x7fff2b649fff  com.apple.xpc.AppServerSupport (1.0 - 2038.40.38) <27B96AA0-421E-3E5A-B9D8-9BA3F0D133E9> /System/Library/PrivateFrameworks/AppServerSupport.framework/Versions/A/AppServerSupport\r\n    0x7fff2b64a000 -     0x7fff2b65bfff  libhvf.dylib (1.0 - $[CURRENT_PROJECT_VERSION]) <CAD78803-0F56-316E-A7F1-D2BF26CA2DD6> /System/Library/PrivateFrameworks/FontServices.framework/libhvf.dylib\r\n    0x7fff2b65c000 -     0x7fff2b65efff  libspindump.dylib (295) <C6F804A3-5682-3766-A324-76667364873D> /usr/lib/libspindump.dylib\r\n    0x7fff2b65f000 -     0x7fff2b71ffff  com.apple.Heimdal (4.0 - 2.0) <8BB18335-5DD3-3154-85C8-0145C64556A2> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal\r\n    0x7fff2b8be000 -     0x7fff2b928fff  com.apple.bom (14.0 - 233) <A62EEEE5-3027-3F25-BCD9-32D36922106E> /System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom\r\n    0x7fff2b929000 -     0x7fff2b973fff  com.apple.AppleJPEG (1.0 - 1) <A2E9E2A4-AEDC-3481-BDC9-05D9AD84FC25> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG\r\n    0x7fff2b974000 -     0x7fff2ba52fff  libJP2.dylib (2130.2.7) <9D837C01-3D6C-3D71-8E92-3673CE06A21F> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib\r\n    0x7fff2ba53000 -     0x7fff2ba56fff  com.apple.WatchdogClient.framework (1.0 - 98.60.1) <8374BBBB-65CB-3D46-9AD6-0DD1FB99AD88> /System/Library/PrivateFrameworks/WatchdogClient.framework/Versions/A/WatchdogClient\r\n    0x7fff2ba57000 -     0x7fff2ba8afff  com.apple.MultitouchSupport.framework (4400.28 - 4400.28) <E9A95272-5E84-3B64-8263-8C7F84456269> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport\r\n    0x7fff2ba8b000 -     0x7fff2bbddfff  com.apple.VideoToolbox (1.0 - 2760.6.4.6) <35098775-A188-3BE0-B0B1-7CE0027BA295> /System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox\r\n    0x7fff2bbde000 -     0x7fff2bc10fff  libAudioToolboxUtility.dylib (1180.23) <58B4505B-F0EA-37FC-9F5A-6F9F05B0F2A5> /usr/lib/libAudioToolboxUtility.dylib\r\n    0x7fff2bc11000 -     0x7fff2bc37fff  libPng.dylib (2130.2.7) <1F3FED3B-FB07-3F43-8EAD-6100017FBAB5> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib\r\n    0x7fff2bc38000 -     0x7fff2bc95fff  libTIFF.dylib (2130.2.7) <27E9A2D3-003D-3D97-AD85-BE595EA0516F> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib\r\n    0x7fff2bc96000 -     0x7fff2bcb0fff  com.apple.IOPresentment (53 - 37) <070919DC-978E-3DB3-80FD-FB0C1BAAE80A> /System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment\r\n    0x7fff2bcb1000 -     0x7fff2bcb7fff  com.apple.GPUWrangler (6.2.2 - 6.2.2) <F4B3905F-C024-33C1-82C8-F1744AF8516E> /System/Library/PrivateFrameworks/GPUWrangler.framework/Versions/A/GPUWrangler\r\n    0x7fff2bcb8000 -     0x7fff2bcbbfff  libRadiance.dylib (2130.2.7) <7ABF94D2-5281-363F-A613-9C945D77AAE8> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib\r\n    0x7fff2bcbc000 -     0x7fff2bcc1fff  com.apple.DSExternalDisplay (3.1 - 380) <BA802582-F1EB-35B8-902F-3D0F426124E0> /System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay\r\n    0x7fff2bcc2000 -     0x7fff2bce6fff  libJPEG.dylib (2130.2.7) <FDD55379-6673-31E4-B916-7949459B60AE> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib\r\n    0x7fff2bce7000 -     0x7fff2bd16fff  com.apple.ATSUI (1.0 - 1) <B82D099B-4F53-3B60-8BAA-975C41EFD356> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATSUI.framework/Versions/A/ATSUI\r\n    0x7fff2bd17000 -     0x7fff2bd1bfff  libGIF.dylib (2130.2.7) <C51FB0BA-E5C0-335B-9C64-185B1DDC9166> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib\r\n    0x7fff2bd1c000 -     0x7fff2bd25fff  com.apple.CMCaptureCore (1.0 - 80.17.1.1) <A0D43E58-B960-3A80-8807-4115F0E1EF74> /System/Library/PrivateFrameworks/CMCaptureCore.framework/Versions/A/CMCaptureCore\r\n    0x7fff2bd26000 -     0x7fff2bd6dfff  com.apple.print.framework.PrintCore (16 - 531) <FC56A643-F502-3578-9EFF-375BE6B87691> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore\r\n    0x7fff2bd6e000 -     0x7fff2be3afff  com.apple.TextureIO (3.10.9 - 3.10.9) <0AC15003-4B6A-3FB3-9B41-3EF61A2BD430> /System/Library/PrivateFrameworks/TextureIO.framework/Versions/A/TextureIO\r\n    0x7fff2be3b000 -     0x7fff2be43fff  com.apple.InternationalSupport (1.0 - 60) <5485FFDC-CE44-37F4-865F-91B2EFBC6CAF> /System/Library/PrivateFrameworks/InternationalSupport.framework/Versions/A/InternationalSupport\r\n    0x7fff2be44000 -     0x7fff2bebffff  com.apple.datadetectorscore (8.0 - 674) <A2DEEF63-7643-37AA-9420-ED875629D1B2> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore\r\n    0x7fff2bec0000 -     0x7fff2bf1efff  com.apple.UserActivity (435 - 435) <075FD354-28FD-3A13-881C-955FA9106D5C> /System/Library/PrivateFrameworks/UserActivity.framework/Versions/A/UserActivity\r\n    0x7fff2cb6c000 -     0x7fff2cb9dfff  libSessionUtility.dylib (76.7) <95615EDE-46B9-32AE-96EC-7F6E5EB6A932> /System/Library/PrivateFrameworks/AudioSession.framework/libSessionUtility.dylib\r\n    0x7fff2cb9e000 -     0x7fff2cccefff  com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <D0F9F628-F241-3FA2-A785-7B9DCBB2FEC4> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox\r\n    0x7fff2cccf000 -     0x7fff2cd36fff  com.apple.audio.AudioSession (1.0 - 76.7) <C0B1C9EB-A594-31E3-ADDF-118583840E6F> /System/Library/PrivateFrameworks/AudioSession.framework/Versions/A/AudioSession\r\n    0x7fff2cd37000 -     0x7fff2cd49fff  libAudioStatistics.dylib (25.1) <1D07EA54-BE7C-37C4-AA73-5224D402F0C3> /usr/lib/libAudioStatistics.dylib\r\n    0x7fff2cd4a000 -     0x7fff2cd59fff  com.apple.speech.synthesis.framework (9.0.51 - 9.0.51) <B86A2136-8DD7-395D-BB9F-9416C56DD2D6> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis\r\n    0x7fff2cd5a000 -     0x7fff2cdc5fff  com.apple.ApplicationServices.ATS (377 - 516) <3A435648-CC5F-387E-AB37-391AAEABE314> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS\r\n    0x7fff2cdc6000 -     0x7fff2cddefff  libresolv.9.dylib (68) <9957A6F4-8B66-3429-86CD-6DF4993EB6F5> /usr/lib/libresolv.9.dylib\r\n    0x7fff2cf11000 -     0x7fff2cff0fff  libSMC.dylib (20) <CE5162B7-379E-3DF0-9D1E-44BC98BD2422> /usr/lib/libSMC.dylib\r\n    0x7fff2cff1000 -     0x7fff2d050fff  libcups.2.dylib (494.1) <04A4801E-E1B5-3919-9F14-100F0C2D049B> /usr/lib/libcups.2.dylib\r\n    0x7fff2d051000 -     0x7fff2d060fff  com.apple.LangAnalysis (1.7.0 - 254) <120945D9-B74D-3A6F-B160-2678E6B6481D> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis\r\n    0x7fff2d061000 -     0x7fff2d06bfff  com.apple.NetAuth (6.2 - 6.2) <C65B2F54-67EA-3E4D-B84A-BBA94998BD6B> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth\r\n    0x7fff2d06c000 -     0x7fff2d073fff  com.apple.ColorSyncLegacy (4.13.0 - 1) <33DA9348-EADF-36D2-B999-56854481D272> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSyncLegacy.framework/Versions/A/ColorSyncLegacy\r\n    0x7fff2d074000 -     0x7fff2d07ffff  com.apple.QD (4.0 - 416) <7FFC9049-7E42-372B-9105-1C4C94DE0110> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD\r\n    0x7fff2d080000 -     0x7fff2d6eefff  com.apple.audio.AudioResourceArbitration (1.0 - 1) <098FD431-D302-3DD5-9AD1-453615A73E68> /System/Library/PrivateFrameworks/AudioResourceArbitration.framework/Versions/A/AudioResourceArbitration\r\n    0x7fff2d6ef000 -     0x7fff2d6fbfff  com.apple.perfdata (1.0 - 67.40.1) <85A57A67-8721-3035-BCEE-D4AC98332D2C> /System/Library/PrivateFrameworks/perfdata.framework/Versions/A/perfdata\r\n    0x7fff2d6fc000 -     0x7fff2d70afff  libperfcheck.dylib (41) <67113817-A463-360A-B321-9286DC50FEDA> /usr/lib/libperfcheck.dylib\r\n    0x7fff2d70b000 -     0x7fff2d71afff  com.apple.Kerberos (3.0 - 1) <2E872705-0841-3695-AF79-4160D2A436AB> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos\r\n    0x7fff2d71b000 -     0x7fff2d76afff  com.apple.GSS (4.0 - 2.0) <2A38D59F-5F3A-3779-A421-2F8128F22B95> /System/Library/Frameworks/GSS.framework/Versions/A/GSS\r\n    0x7fff2d76b000 -     0x7fff2d77bfff  com.apple.CommonAuth (4.0 - 2.0) <D9431F22-A16B-3237-9676-B6159B36F5EA> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth\r\n    0x7fff2d7d0000 -     0x7fff2d7f2fff  com.apple.security.KeychainCircle.KeychainCircle (1.0 - 1) <3554A1B0-A9AD-3D89-A755-1C9CC7CEA239> /System/Library/PrivateFrameworks/KeychainCircle.framework/Versions/A/KeychainCircle\r\n    0x7fff2d7f3000 -     0x7fff2d7fbfff  com.apple.CorePhoneNumbers (1.0 - 1) <0DF4C527-E7D3-30E0-9402-4C43B29729CB> /System/Library/PrivateFrameworks/CorePhoneNumbers.framework/Versions/A/CorePhoneNumbers\r\n    0x7fff2d950000 -     0x7fff2d950fff  liblaunch.dylib (2038.40.38) <05A7EFDD-4111-3E4D-B668-239B69DE3D0F> /usr/lib/system/liblaunch.dylib\r\n    0x7fff2e14b000 -     0x7fff2e292fff  com.apple.Sharing (1575 - 1575) <4E590A26-5934-33EE-BFD9-391A64686FDE> /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing\r\n    0x7fff2e293000 -     0x7fff2e3b3fff  com.apple.Bluetooth (8.0.2 - 8.0.2f9) <E3CF73C4-B439-3E30-B74D-3344C2EA2FC9> /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth\r\n    0x7fff2e3b4000 -     0x7fff2e3c8fff  com.apple.AppContainer (4.0 - 509.60.2) <A9D28E73-B08F-34E3-AE7B-0855DBA96C3C> /System/Library/PrivateFrameworks/AppContainer.framework/Versions/A/AppContainer\r\n    0x7fff2e3c9000 -     0x7fff2e3ccfff  com.apple.SecCodeWrapper (4.0 - 509.60.2) <55B0C208-B176-3FE4-8CA2-9F28CA59F8F1> /System/Library/PrivateFrameworks/SecCodeWrapper.framework/Versions/A/SecCodeWrapper\r\n    0x7fff2e3cd000 -     0x7fff2e426fff  com.apple.ProtectedCloudStorage (1.0 - 1) <C84C9C98-5382-3E27-8275-AC9816AA28E8> /System/Library/PrivateFrameworks/ProtectedCloudStorage.framework/Versions/A/ProtectedCloudStorage\r\n    0x7fff2fb76000 -     0x7fff2fba1fff  com.apple.RemoteViewServices (2.0 - 163) <AC6E2D2F-8131-3A40-97D7-E24E2A45CD66> /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices\r\n    0x7fff2fba2000 -     0x7fff2fbb1fff  com.apple.SpeechRecognitionCore (6.1.12 - 6.1.12) <F2A0E41A-7976-3175-959A-98DC24AAFFCC> /System/Library/PrivateFrameworks/SpeechRecognitionCore.framework/Versions/A/SpeechRecognitionCore\r\n    0x7fff2fbb2000 -     0x7fff2fbb9fff  com.apple.speech.recognition.framework (6.0.3 - 6.0.3) <9C14FA0A-D905-375B-8C32-E311ED59B6AD> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition\r\n    0x7fff2fdfd000 -     0x7fff2fdfdfff  libsystem_product_info_filter.dylib (8.40.1) <7CCAF1A8-F570-341E-B275-0C80B092F8E0> /usr/lib/system/libsystem_product_info_filter.dylib\r\n    0x7fff2fed8000 -     0x7fff2fed8fff  com.apple.Accelerate.vecLib (3.11 - vecLib 3.11) <510A463F-5CA5-3585-969F-2D44583B71C8> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib\r\n    0x7fff2feff000 -     0x7fff2fefffff  com.apple.CoreServices (1122.11 - 1122.11) <5DDB040C-6E92-3DBE-9049-873F510F26E2> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices\r\n    0x7fff301cd000 -     0x7fff301cdfff  com.apple.Accelerate (1.11 - Accelerate 1.11) <F2FFCC7B-EE3D-3768-A73B-342851B53741> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate\r\n    0x7fff30a44000 -     0x7fff30aa6fff  com.apple.CoreBluetooth (1.0 - 1) <0FF4CFB1-B8DD-31C3-A000-5016CFE45EB9> /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth\r\n    0x7fff30aa7000 -     0x7fff30ab0fff  com.apple.SymptomDiagnosticReporter (1.0 - 79.40.12) <4536FFDF-598E-3085-8DDD-26798E1EEBD6> /System/Library/PrivateFrameworks/SymptomDiagnosticReporter.framework/Versions/A/SymptomDiagnosticReporter\r\n    0x7fff30ac5000 -     0x7fff30ad1fff  com.apple.AppleIDAuthSupport (1.0 - 1) <1EE88692-4059-3A33-B492-E7D7112EFB0C> /System/Library/PrivateFrameworks/AppleIDAuthSupport.framework/Versions/A/AppleIDAuthSupport\r\n    0x7fff30ad2000 -     0x7fff30b7afff  com.apple.DiscRecording (9.0.3 - 9030.4.5) <8676CDCB-15CC-3723-9411-8B8AFA3B370A> /System/Library/Frameworks/DiscRecording.framework/Versions/A/DiscRecording\r\n    0x7fff30b7b000 -     0x7fff30baefff  com.apple.MediaKit (16 - 927.40.2) <C7FB3929-E0E1-3A6C-B138-EE504CCE9EF0> /System/Library/PrivateFrameworks/MediaKit.framework/Versions/A/MediaKit\r\n    0x7fff30baf000 -     0x7fff30c9afff  com.apple.DiskManagement (14.0 - 1733.60.1) <328DB6AD-221B-35FA-8E31-2E5CD860A0F3> /System/Library/PrivateFrameworks/DiskManagement.framework/Versions/A/DiskManagement\r\n    0x7fff31088000 -     0x7fff311a8fff  com.apple.FileProvider (326 - 326) <B2A33B9E-66D9-30B5-A18C-AD0D7F3592C5> /System/Library/Frameworks/FileProvider.framework/Versions/A/FileProvider\r\n    0x7fff311a9000 -     0x7fff311ccfff  com.apple.GenerationalStorage (2.0 - 322) <F2740CA7-334B-3F24-AFE8-2451D1A041C2> /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage\r\n    0x7fff31b2b000 -     0x7fff31b67fff  com.apple.DebugSymbols (195.1 - 195.1) <6AA76BBC-B0F2-3F37-A6EE-19014DCD06D9> /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols\r\n    0x7fff31b68000 -     0x7fff31c25fff  com.apple.CoreSymbolication (12.2 - 64541.4) <A100000D-F881-3C3C-ABC5-3EAC7A272579> /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication\r\n    0x7fff32abb000 -     0x7fff32b1efff  com.apple.framework.Apple80211 (17.0 - 1728) <2DBC65AC-A7DF-38F9-9174-3382667FBF0F> /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211\r\n    0x7fff32b1f000 -     0x7fff32c71fff  com.apple.CoreWiFi (3.0 - 341) <C18D2E57-A964-380F-A74B-AEFDB3B3ADEC> /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi\r\n    0x7fff32ede000 -     0x7fff32eedfff  com.apple.xpc.RemoteServiceDiscovery (1.0 - 2038.40.38) <EFEFC279-E73A-3557-A4AE-BF67E7C96962> /System/Library/PrivateFrameworks/RemoteServiceDiscovery.framework/Versions/A/RemoteServiceDiscovery\r\n    0x7fff32eee000 -     0x7fff32f05fff  com.apple.xpc.RemoteXPC (1.0 - 2038.40.38) <DC43AED2-6DD7-31AB-8186-EF69ED7027C4> /System/Library/PrivateFrameworks/RemoteXPC.framework/Versions/A/RemoteXPC\r\n    0x7fff32f4d000 -     0x7fff32f50fff  com.apple.help (1.3.8 - 71) <599F7E42-DEF1-3B70-83AB-C3BDF727CF93> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help\r\n    0x7fff32f51000 -     0x7fff32f58fff  com.apple.EFILogin (2.0 - 2) <B94BFCCA-45B6-3E80-84E7-758350D7CAFD> /System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin\r\n    0x7fff32f59000 -     0x7fff32f64fff  libcsfde.dylib (554) <1F4DFF13-17EC-3672-8A41-056F4E44A377> /usr/lib/libcsfde.dylib\r\n    0x7fff33192000 -     0x7fff33192fff  com.apple.ApplicationServices (48 - 50) <7B536871-3F10-3138-B06B-9C2A3C07EC1E> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices\r\n    0x7fff33492000 -     0x7fff33492fff  libHeimdalProxy.dylib (79) <1BD94BF6-8E63-3B21-95DC-E5EEEBFB8AE8> /System/Library/Frameworks/Kerberos.framework/Versions/A/Libraries/libHeimdalProxy.dylib\r\n    0x7fff33545000 -     0x7fff33545fff  com.apple.audio.units.AudioUnit (1.14 - 1.14) <F5EC07DD-8937-37CB-84DF-C7475FFA573E> /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit\r\n    0x7fff344fb000 -     0x7fff3454bfff  com.apple.ChunkingLibrary (334 - 334) <E392AB7F-6EAC-3E2E-93F8-01BA240FEACD> /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary\r\n    0x7fff34f93000 -     0x7fff34f96fff  com.apple.Cocoa (6.11 - 23) <E44AC98B-5BEA-3087-AB41-C73CEB8A98C8> /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa\r\n    0x7fff363d6000 -     0x7fff363f1fff  com.apple.openscripting (1.7 - 190) <D0B98DF9-7A61-3810-AE81-2F870DCC2AC0> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting\r\n    0x7fff363f2000 -     0x7fff363f5fff  com.apple.securityhi (9.0 - 55008) <DD7770F7-661C-363B-A1F4-8B69EB0FFB6A> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI\r\n    0x7fff363f6000 -     0x7fff363f9fff  com.apple.ink.framework (10.15 - 227) <E10C40B6-2656-36D1-882C-2091CE02883A> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink\r\n    0x7fff363fa000 -     0x7fff363fdfff  com.apple.CommonPanels (1.2.6 - 101) <101582BA-E64F-391A-BD23-50DCC3CF8939> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels\r\n    0x7fff363fe000 -     0x7fff36405fff  com.apple.ImageCapture (1708 - 1708) <FE9D13DD-D733-3B2A-B4A6-D3C8313005F5> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture\r\n    0x7fff393eb000 -     0x7fff393eefff  com.apple.OSAServicesClient (1.0 - 1) <44E39868-F624-3644-B453-962D34737998> /System/Library/PrivateFrameworks/OSAServicesClient.framework/Versions/A/OSAServicesClient\r\n    0x7fff3d0f0000 -     0x7fff3d0f3fff  com.apple.print.framework.Print (15 - 271) <8411879F-7E3E-3882-BD06-68E797A3B9D6> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print\r\n    0x7fff3d0f4000 -     0x7fff3d0f7fff  com.apple.Carbon (160 - 164) <5683716A-5610-3B97-B473-B4652067E7A6> /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon\r\n    0x7fff3d37c000 -     0x7fff3d39bfff  com.apple.private.SystemPolicy (1.0 - 1) <CFE0B0C6-DF5B-31EB-9D79-B23E00A80B05> /System/Library/PrivateFrameworks/SystemPolicy.framework/Versions/A/SystemPolicy\r\n    0x7fff3dcc5000 -     0x7fff3dcd0fff  com.apple.MallocStackLogging (1.0 - 1) <C1A21524-381D-39CA-AD63-A3B9F67FC6CA> /System/Library/PrivateFrameworks/MallocStackLogging.framework/Versions/A/MallocStackLogging\r\n    0x7fff3dce6000 -     0x7fff3dcf8fff  libmis.dylib (274.60.2) <54387457-A60B-3390-AD6D-3B380792CD79> /usr/lib/libmis.dylib\r\n    0x7fff4825e000 -     0x7fff482acfff  com.apple.osanalytics.OSAnalytics (1.0 - 1) <EF7537E3-982B-3FA2-BFFC-F8071EFF0B31> /System/Library/PrivateFrameworks/OSAnalytics.framework/Versions/A/OSAnalytics\r\n    0x7fff5221c000 -     0x7fff522aefff  com.apple.Symbolication (12.2 - 64541.7.1) <EC806042-5249-35DC-90BA-953A86D1854A> /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication\r\n    0x7fff54b1c000 -     0x7fff54b31fff  com.apple.ScriptingBridge (1.4 - 80) <10B4F137-F6F6-3BFE-9937-73A7DCD36B87> /System/Library/Frameworks/ScriptingBridge.framework/Versions/A/ScriptingBridge\r\n    0x7fff6c7f0000 -     0x7fff6c7f6fff  libCoreFSCache.dylib (177.22) <4ECE128D-5E79-3ADF-8FE7-4FE8F565F8AA> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib\r\n    0x7fff6c7f7000 -     0x7fff6c7fbfff  libCoreVMClient.dylib (177.22) <E0DBED1D-39B4-3E51-9EA8-D1ECAED93EAB> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib\r\n    0x7fff6c7fc000 -     0x7fff6c80bfff  com.apple.opengl (18.1.1 - 18.1.1) <D8EE3AD0-C0D0-32F7-9C6D-39341099EB55> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL\r\n    0x7fff6c80c000 -     0x7fff6c80efff  libCVMSPluginSupport.dylib (18.1.1) <5F020D32-8663-3CB8-A50C-F939D4D4C31F> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib\r\n    0x7fff6c80f000 -     0x7fff6c817fff  libGFXShared.dylib (18.1.1) <2271532D-E2B3-3D4D-ADF0-0935F8DCE89B> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib\r\n    0x7fff6c818000 -     0x7fff6c84bfff  libGLImage.dylib (18.1.1) <528E53A3-33E1-34C7-8EE3-C42AE5255553> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib\r\n    0x7fff6c84c000 -     0x7fff6c888fff  libGLU.dylib (18.1.1) <15CBDF20-8A87-3D84-90F8-D19F4A2B06E2> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib\r\n    0x7fff6ca1e000 -     0x7fff6ca28fff  libGL.dylib (18.1.1) <157B74E1-F30D-3F9D-9AF8-AAA333D2812D> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib\r\n    0x7fff6de5f000 -     0x7fff6deb7fff  com.apple.opencl (4.5 - 4.5) <8A3D06D5-4E82-355C-AE1B-E2C91DB58233> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL\r\n    0x7fff700bf000 -     0x7fff700c9fff  com.apple.AccessibilityBundles (1.0 - 172) <5522C7FE-EAC0-3080-B363-56F19547B00A> /System/Library/PrivateFrameworks/AccessibilityBundles.framework/Versions/A/AccessibilityBundles\r\n    0x7fff78377000 -     0x7fff7837efff  libRosetta.dylib (203.13.2) <FF72E19B-3B02-34D4-A821-3397BB28AC02> /usr/lib/libRosetta.dylib\r\n\r\nExternal Modification Summary:\r\n  Calls made by other processes targeting this process:\r\n    task_for_pid: 12\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by this process:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by all processes on this machine:\r\n    task_for_pid: 260921\r\n    thread_create: 1\r\n    thread_set_state: 0\r\n\r\nVM Region Summary:\r\nReadOnly portion of Libraries: Total=679.1M resident=0K(0%) swapped_out_or_unallocated=679.1M(100%)\r\nWritable regions: Total=215.8M written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=215.8M(100%)\r\n \r\n                                VIRTUAL   REGION \r\nREGION TYPE                        SIZE    COUNT (non-coalesced) \r\n===========                     =======  ======= \r\nActivity Tracing                   256K        1 \r\nDispatch continuations            96.0M        1 \r\nKernel Alloc Once                    8K        1 \r\nMALLOC                           108.6M       31 \r\nMALLOC guard page                   16K        4 \r\nSTACK GUARD                       56.0M        6 \r\nStack                             10.5M        6 \r\nVM_ALLOCATE                        996K       17 \r\n__CTF                               759        1 \r\n__DATA                            12.5M      300 \r\n__DATA_CONST                      11.6M      167 \r\n__DATA_DIRTY                       539K       96 \r\n__FONT_DATA                          4K        1 \r\n__LINKEDIT                       489.4M        5 \r\n__OBJC_RO                         60.5M        1 \r\n__OBJC_RW                         2452K        2 \r\n__TEXT                           189.7M      303 \r\n__UNICODE                          588K        1 \r\nmapped file                       40.2M        8 \r\nshared memory                       40K        4 \r\n===========                     =======  ======= \r\nTOTAL                              1.1G      956 \r\n```",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/769/comments",
    "author": "kyle-mccarthy",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-12-25T20:56:51Z",
        "body": "The crash appears to happen in some Apple code that is supposed to set up some data structure to be passed back to Yabai in a callback. As far as I can tell this is not something I can fix from inside yabai."
      },
      {
        "user": "kyle-mccarthy",
        "created_at": "2020-12-30T03:59:32Z",
        "body": "@koekeishiya I actually can't get the error to happen again while using the binary that I built locally. I'm going to close the issue for now and can reopen it if it happens again."
      }
    ]
  },
  {
    "number": 767,
    "title": "Use active-window-border-color only when there are multiple windows in a space?",
    "created_at": "2020-12-20T11:44:29Z",
    "closed_at": "2022-09-18T22:38:32Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/767",
    "body": "Hi!\r\n\r\nI'd like to know if there is any way I can change the active window border color depending on the number of windows in the active space/in visible spaces.\r\n\r\nSay I have Firefox in space 1 and four iTerm windows in space 2, I'd like to be able to differentiate active/normal iTerm windows with a yellow border on the active one, but when on space 1 I'd like Firefox to have a normal border, since it's alone in that space.\r\n\r\nDoes that make sense?\r\n\r\nThanks.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/767/comments",
    "author": "Vermoot",
    "comments": [
      {
        "user": "Glup3",
        "created_at": "2020-12-30T23:53:33Z",
        "body": "Hey!\r\n\r\nHere is my solution to your problem. I execute a custom script on every window change via `Signals`. The script checks if there are multiple applications (aka windows) in the space and toggles the `window_border` property.\r\n\r\n#### **`yabairc`**\r\n```bash\r\n# your other configs\r\n\r\nyabai -m signal --add event=application_front_switched action=\"/path/to/the/custom/script\"\r\n```\r\n\r\n#### **`customScript.sh`**\r\n```bash\r\n#!/usr/bin/env bash\r\n\r\nwindows=\"$(yabai -m query --spaces --space | jq '.windows')\"\r\n\r\nif [[ $windows == *\",\"* ]]\r\nthen\r\n  yabai -m config window_border on\r\n  yabai -m config active_window_border_color \"0xFFFFFF00\"\r\nelse\r\n  yabai -m config window_border off\r\nfi\r\n\r\n```\r\n\r\nDon't forget to make your custom script executable `chmod +x ./customScript.sh`"
      }
    ]
  },
  {
    "number": 746,
    "title": "Yabai window management in Big Sur (Preview, Firefox)",
    "created_at": "2020-12-04T10:51:24Z",
    "closed_at": "2020-12-19T21:18:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/746",
    "body": "Hi Thank you for your time in developing Yabai. I am really enjoying the application and the added functionality.\r\n\r\nI have noticed that certain apps are not being managed correctly by Yabai.\r\n\r\nPreview: When a single file is opened in preview yabai performs correctly and tiles correctly. However if a second tab is opened with a duplicate file or a different file alltogether yaba resizes the window as if accommodating an additional panel  yet no additional window has been created.\r\n\r\nFirefox: Firefox appears to not be well managed by Yabai. When ever I swap window locations with another window the firefox pane does not move across and typically is just nudged slightly either being overlaid by the intended replacement window orobscuring it. Mannually position firefox is possible  and does not disturb other windows.\r\n\r\nI have some screen recordings of the behaviour I can share if that would help but they were too large to upload here.\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/746/comments",
    "author": "jasonpott",
    "comments": [
      {
        "user": "jasonpott",
        "created_at": "2020-12-09T09:26:42Z",
        "body": "I have also noted that this happens with the default TextEdit.app with new portions of the screen being allocated to each new tab that is opened after the app is initialiaised."
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-12-11T13:45:04Z",
        "body": "The firefox issue is probably #109 and has been fixed on master. The preview issue is likely #68 and will not be fixed until Apple improve their APIs."
      }
    ]
  },
  {
    "number": 743,
    "title": "Scripting addition appears to be crashing Dock",
    "created_at": "2020-12-02T01:50:43Z",
    "closed_at": "2020-12-02T17:35:25Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/743",
    "body": "I'm not 100% sure on what is going on but I have used yabai for a long while and yesterday the dock application crashed meaning I have no access to spaces, dock, background wallpaper and some other aspects of my computer. I could not find any solution for this, and ended up reinstalling MacOS Catalina, I then installed my dotfiles and started the scripting addition. After starting the script addition and disabling SIP I found myself back in the same situation.\r\n\r\nI cannot restart the dock using\r\n\r\n> Killall Dock\r\n\r\nThe only feedback I get back is 'no matching processes found\r\n\r\nRunning Catalina 10.15 on Mac 2016",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/743/comments",
    "author": "atidyshirt",
    "comments": [
      {
        "user": "atidyshirt",
        "created_at": "2020-12-02T02:04:21Z",
        "body": "Here the crash log:\r\n\r\nProcess:               Dock [822]\r\nPath:                  /System/Library/CoreServices/Dock.app/Contents/MacOS/Dock\r\nIdentifier:            com.apple.dock\r\nVersion:               1.8 (2044.50.1)\r\nBuild Info:            Dock-2044050001000000~30\r\nCode Type:             X86-64 (Native)\r\nParent Process:        ??? [1]\r\nResponsible:           Dock [822]\r\nUser ID:               501\r\n\r\nDate/Time:             2020-12-02 14:59:59.621 +1300\r\nOS Version:            Mac OS X 10.15.7 (19H15)\r\nReport Version:        12\r\nBridge OS Version:     3.0 (14Y908)\r\nAnonymous UUID:        1337B962-967A-2562-8649-8149533CA174\r\n\r\n\r\nTime Awake Since Boot: 200 seconds\r\n\r\nSystem Integrity Protection: enabled\r\n\r\nCrashed Thread:        0  Dispatch queue: com.apple.main-thread\r\n\r\nException Type:        EXC_CRASH (SIGABRT)\r\nException Codes:       0x0000000000000000, 0x0000000000000000\r\nException Note:        EXC_CORPSE_NOTIFY\r\n\r\nApplication Specific Information:\r\ndyld3 mode\r\n*** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '-[__NSCFString unsignedIntValue]: unrecognized selector sent to instance 0x60000178a780'\r\nterminating with uncaught exception of type NSException\r\nabort() called\r\n\r\nApplication Specific Backtrace 1:\r\n0   CoreFoundation                      0x00007fff3380cb57 __exceptionPreprocess + 250\r\n1   libobjc.A.dylib                     0x00007fff6c4bd5bf objc_exception_throw + 48\r\n2   CoreFoundation                      0x00007fff3388bbe7 -[NSObject(NSObject) __retain_OA] + 0\r\n3   CoreFoundation                      0x00007fff337713bb ___forwarding___ + 1427\r\n4   CoreFoundation                      0x00007fff33770d98 _CF_forwarding_prep_0 + 120\r\n5   Dock                                0x000000010224c9e5 Dock + 47589\r\n6   Dock                                0x000000010224c554 Dock + 46420\r\n7   Dock                                0x000000010224c056 Dock + 45142\r\n8   Dock                                0x0000000102249b3d Dock + 35645\r\n9   Dock                                0x000000010224859b Dock + 30107\r\n10  Dock                                0x00000001023a44fe Dock + 1455358\r\n11  Dock                                0x00000001023a505e Dock + 1458270\r\n12  libswiftObjectiveC.dylib            0x00007fff6d319d8e $s10ObjectiveC15autoreleasepool8invokingxxyKXE_tKlF + 46\r\n13  Dock                                0x0000000102246917 Dock + 22807\r\n14  libdyld.dylib                       0x00007fff6d665cc9 start + 1\r\n\r\nThread 0 Crashed:: Dispatch queue: com.apple.main-thread\r\n0   libsystem_kernel.dylib        \t0x00007fff6d7ad33a __pthread_kill + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff6d869e60 pthread_kill + 430\r\n2   libsystem_c.dylib             \t0x00007fff6d734808 abort + 120\r\n3   libc++abi.dylib               \t0x00007fff6a993458 abort_message + 231\r\n4   libc++abi.dylib               \t0x00007fff6a9848bf demangling_terminate_handler() + 262\r\n5   libobjc.A.dylib               \t0x00007fff6c4bf5a9 _objc_terminate() + 96\r\n6   libc++abi.dylib               \t0x00007fff6a992887 std::__terminate(void (*)()) + 8\r\n7   libc++abi.dylib               \t0x00007fff6a9951a2 __cxxabiv1::failed_throw(__cxxabiv1::__cxa_exception*) + 27\r\n8   libc++abi.dylib               \t0x00007fff6a995169 __cxa_throw + 113\r\n9   libobjc.A.dylib               \t0x00007fff6c4bd6ed objc_exception_throw + 350\r\n10  com.apple.CoreFoundation      \t0x00007fff3388bbe7 -[NSObject(NSObject) doesNotRecognizeSelector:] + 132\r\n11  com.apple.CoreFoundation      \t0x00007fff337713bb ___forwarding___ + 1427\r\n12  com.apple.CoreFoundation      \t0x00007fff33770d98 _CF_forwarding_prep_0 + 120\r\n13  com.apple.dock                \t0x000000010224c9e5 0x102241000 + 47589\r\n14  com.apple.dock                \t0x000000010224c554 0x102241000 + 46420\r\n15  com.apple.dock                \t0x000000010224c056 0x102241000 + 45142\r\n16  com.apple.dock                \t0x0000000102249b3d 0x102241000 + 35645\r\n17  com.apple.dock                \t0x000000010224859b 0x102241000 + 30107\r\n18  com.apple.dock                \t0x00000001023a44fe 0x102241000 + 1455358\r\n19  com.apple.dock                \t0x00000001023a505e 0x102241000 + 1458270\r\n20  libswiftObjectiveC.dylib      \t0x00007fff6d319d8e autoreleasepool<A>(invoking:) + 46\r\n21  com.apple.dock                \t0x0000000102246917 0x102241000 + 22807\r\n22  libdyld.dylib                 \t0x00007fff6d665cc9 start + 1\r\n\r\nThread 1:\r\n0   libsystem_pthread.dylib       \t0x00007fff6d865b68 start_wqthread + 0\r\n\r\nThread 2:\r\n0   libsystem_pthread.dylib       \t0x00007fff6d865b68 start_wqthread + 0\r\n\r\nThread 3:\r\n0   libsystem_pthread.dylib       \t0x00007fff6d865b68 start_wqthread + 0\r\n\r\nThread 4:\r\n0   libsystem_pthread.dylib       \t0x00007fff6d865b68 start_wqthread + 0\r\n\r\nThread 0 crashed with X86 Thread State (64-bit):\r\n  rax: 0x0000000000000000  rbx: 0x0000000110b73dc0  rcx: 0x00007ffeed9bc9c8  rdx: 0x0000000000000000\r\n  rdi: 0x0000000000000603  rsi: 0x0000000000000006  rbp: 0x00007ffeed9bc9f0  rsp: 0x00007ffeed9bc9c8\r\n   r8: 0x00007ffeed9bc890   r9: 0x00007ffeed9bca60  r10: 0x0000000110b73dc0  r11: 0x0000000000000246\r\n  r12: 0x0000000000000603  r13: 0x0000003000000008  r14: 0x0000000000000006  r15: 0x0000000000000016\r\n  rip: 0x00007fff6d7ad33a  rfl: 0x0000000000000246  cr2: 0x0000600002c8c000\r\n  \r\nLogical CPU:     0\r\nError Code:      0x02000148\r\nTrap Number:     133\r\n\r\n\r\nBinary Images:\r\n       0x102241000 -        0x102611fff  com.apple.dock (1.8 - 2044.50.1) <9BC007E6-5D4C-3A56-84C5-998A2006215A> /System/Library/CoreServices/Dock.app/Contents/MacOS/Dock\r\n       0x110aa9000 -        0x110b3af47  dyld (750.6) <1D318D60-C9B0-3511-BE9C-82AFD2EF930D> /usr/lib/dyld\r\n    0x7fff2efac000 -     0x7fff2f1a7ff8  com.apple.avfoundation (2.0 - 1855.3) <0837D912-3783-35D6-A94A-E474E18600CF> /System/Library/Frameworks/AVFoundation.framework/Versions/A/AVFoundation\r\n    0x7fff2f1a8000 -     0x7fff2f274ffe  com.apple.audio.AVFAudio (1.0 - 415.75) <CAC3CA5F-FCF6-37EB-8F1A-090340E2C38E> /System/Library/Frameworks/AVFoundation.framework/Versions/A/Frameworks/AVFAudio.framework/Versions/A/AVFAudio\r\n    0x7fff2f394000 -     0x7fff2f394fff  com.apple.Accelerate (1.11 - Accelerate 1.11) <4F9977AE-DBDB-3A16-A536-AC1F9938DCDD> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate\r\n    0x7fff2f3ac000 -     0x7fff2fa02fff  com.apple.vImage (8.1 - 524.2.1) <EA6F5FF2-7A1B-35D5-A5A3-D2B3386ECB75> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage\r\n    0x7fff2fa03000 -     0x7fff2fc6aff7  libBLAS.dylib (1303.60.1) <C6C2D42F-7456-3DBF-8BE2-9AA06EFC78FD> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib\r\n    0x7fff2fc6b000 -     0x7fff3013efef  libBNNS.dylib (144.100.2) <99C61C48-B14C-3DA6-8C31-6BF72DA0A3A9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBNNS.dylib\r\n    0x7fff3013f000 -     0x7fff304dafff  libLAPACK.dylib (1303.60.1) <5E3E3867-50C3-3E6A-9A2E-007CE77A4641> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib\r\n    0x7fff304db000 -     0x7fff304f0fec  libLinearAlgebra.dylib (1303.60.1) <3D433800-0099-33E0-8C81-15F83247B2C9> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib\r\n    0x7fff304f1000 -     0x7fff304f6ff3  libQuadrature.dylib (7) <371F36A7-B12F-363E-8955-F24F7C2048F6> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libQuadrature.dylib\r\n    0x7fff304f7000 -     0x7fff30567fff  libSparse.dylib (103) <B8A10D0C-4577-343D-B310-A3E81265D107> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparse.dylib\r\n    0x7fff30568000 -     0x7fff3057afef  libSparseBLAS.dylib (1303.60.1) <B147FEF6-A0DB-3830-BF06-45BEC58DB576> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libSparseBLAS.dylib\r\n    0x7fff3057b000 -     0x7fff30752fd7  libvDSP.dylib (735.140.1) <D63DC0A5-B8B4-3562-A574-E73BC3B57407> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib\r\n    0x7fff30753000 -     0x7fff30815fef  libvMisc.dylib (735.140.1) <3601FDE3-B142-398D-987D-8151A51F0A96> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib\r\n    0x7fff30816000 -     0x7fff30816fff  com.apple.Accelerate.vecLib (3.11 - vecLib 3.11) <F6C5613D-2284-342B-9160-9731F78B4DE5> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib\r\n    0x7fff30817000 -     0x7fff30876ff0  com.apple.Accounts (113 - 113) <E2438070-30AB-3B89-AE63-1E485B92D108> /System/Library/Frameworks/Accounts.framework/Versions/A/Accounts\r\n    0x7fff317d0000 -     0x7fff317d0fff  com.apple.ApplicationServices (48 - 50) <C23D2740-FAF6-3BD6-9E48-56F54D752864> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices\r\n    0x7fff317d1000 -     0x7fff3183cfff  com.apple.ApplicationServices.ATS (377 - 493.0.4.1) <87EA5DE1-506A-39FD-88BE-D8A3416C9012> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS\r\n    0x7fff318d5000 -     0x7fff31913ff0  libFontRegistry.dylib (274.0.5.1) <F3461C05-0370-359B-9F03-5C1C1F7763EC> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib\r\n    0x7fff3196e000 -     0x7fff3199dfff  com.apple.ATSUI (1.0 - 1) <5F513967-DDD7-3F22-AD14-8A38ABD9F2D0> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATSUI.framework/Versions/A/ATSUI\r\n    0x7fff3199e000 -     0x7fff319a2ffb  com.apple.ColorSyncLegacy (4.13.0 - 1) <72EE68DB-F069-37F5-AA2A-40D5FCF139F4> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSyncLegacy.framework/Versions/A/ColorSyncLegacy\r\n    0x7fff31a3c000 -     0x7fff31a93ffa  com.apple.HIServices (1.22 - 676) <14DF4D42-E24D-3EBD-9A9D-93124D8D6AA1> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices\r\n    0x7fff31a94000 -     0x7fff31aa2fff  com.apple.LangAnalysis (1.7.0 - 1.7.0) <01B8B6B3-E2C3-3607-B34A-8283A7E0E924> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis\r\n    0x7fff31aa3000 -     0x7fff31ae8ffa  com.apple.print.framework.PrintCore (15.4 - 516.2) <437BCF12-48D2-3770-8BC9-567718FB1BCA> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore\r\n    0x7fff31ae9000 -     0x7fff31af3ff7  com.apple.QD (4.0 - 413) <27A36D07-B5E9-32E6-87B6-3127F260F48D> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD\r\n    0x7fff31af4000 -     0x7fff31b01ffc  com.apple.speech.synthesis.framework (9.0.24 - 9.0.24) <75344F8F-32CA-3558-B4E6-F56D498250E4> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis\r\n    0x7fff31b02000 -     0x7fff31be3ffa  com.apple.audio.toolbox.AudioToolbox (1.14 - 1.14) <8CFA0620-5E43-3C4D-A75B-981C0961C2DE> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox\r\n    0x7fff31be5000 -     0x7fff31be5fff  com.apple.audio.units.AudioUnit (1.14 - 1.14) <C8F9CC56-F7CF-3E77-B6FC-BD8E1D19FA92> /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit\r\n    0x7fff31f7c000 -     0x7fff3230bffa  com.apple.CFNetwork (1128.0.1 - 1128.0.1) <07F9CA9C-B954-3EA0-A710-3122BFF9F057> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork\r\n    0x7fff32387000 -     0x7fff32387fff  com.apple.Carbon (160 - 162) <97E334B3-7FAE-3239-9E89-5A546BC26ADE> /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon\r\n    0x7fff32388000 -     0x7fff3238bff3  com.apple.CommonPanels (1.2.6 - 101) <9F6E13D9-374B-386F-8E15-FDD6CE967859> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels\r\n    0x7fff3238c000 -     0x7fff32680ff3  com.apple.HIToolbox (2.1.1 - 994.6) <EAF2DAC3-66B1-30BF-AF10-72DDA90D1044> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox\r\n    0x7fff32681000 -     0x7fff32684ff3  com.apple.help (1.3.8 - 71) <36483951-6F3E-3F7E-8A5B-191C2357EF17> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help\r\n    0x7fff32685000 -     0x7fff3268aff7  com.apple.ImageCapture (9.0 - 1600.65) <1A1F320E-3E85-3F3D-8AE0-B238C4E92D40> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture\r\n    0x7fff3268b000 -     0x7fff3268bfff  com.apple.ink.framework (10.15 - 227) <284507AE-EF47-3ABC-86A4-669243DB1D33> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink\r\n    0x7fff3268c000 -     0x7fff326a6ffa  com.apple.openscripting (1.7 - 185.1) <B6E28747-5FC7-3461-8A71-864A969ED022> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting\r\n    0x7fff326c7000 -     0x7fff326c7fff  com.apple.print.framework.Print (15 - 271) <0D9FB08F-EA87-3BE7-821B-C61BA5601050> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print\r\n    0x7fff326c8000 -     0x7fff326caff7  com.apple.securityhi (9.0 - 55008) <390C6FAA-99BF-3924-9180-9EAE41D9C6BE> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI\r\n    0x7fff326cb000 -     0x7fff326d1fff  com.apple.speech.recognition.framework (6.0.3 - 6.0.3) <9614A01E-8303-3422-A3BA-6CE27540E09A> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition\r\n    0x7fff32879000 -     0x7fff3296ffff  com.apple.ColorSync (4.13.0 - 3394.9) <A126406C-DA38-3FFE-8B25-BB9859EFD159> /System/Library/Frameworks/ColorSync.framework/Versions/A/ColorSync\r\n    0x7fff32970000 -     0x7fff32a60ff7  com.apple.combine (1.0 - 134.102) <02C5D48A-E70F-3D68-8555-4211853F9C3B> /System/Library/Frameworks/Combine.framework/Versions/A/Combine\r\n    0x7fff32c5a000 -     0x7fff33163ffb  com.apple.audio.CoreAudio (5.0 - 5.0) <9DA02E7A-56A0-3FFF-94C2-1795BA761F07> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio\r\n    0x7fff331b6000 -     0x7fff331eefff  com.apple.CoreBluetooth (1.0 - 1) <23DBB313-A082-3C08-8E1F-2D31EE4247EF> /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth\r\n    0x7fff331ef000 -     0x7fff335d9fe8  com.apple.CoreData (120 - 977.3) <49AE61CA-C91E-31FE-9BD0-1AACFFB5181E> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData\r\n    0x7fff335da000 -     0x7fff3370cff6  com.apple.CoreDisplay (1.0 - 186.6.15) <213D7011-8180-3CF4-9BE7-FB8F75DCDB95> /System/Library/Frameworks/CoreDisplay.framework/Versions/A/CoreDisplay\r\n    0x7fff3370d000 -     0x7fff33b8cfeb  com.apple.CoreFoundation (6.9 - 1677.104) <C0D70026-EDBE-3CBD-B317-367CF4F1C92F> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation\r\n    0x7fff33b8e000 -     0x7fff34203ff8  com.apple.CoreGraphics (2.0 - 1355.22) <4A3CDE7B-4578-3058-966A-3D1DC095A935> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics\r\n    0x7fff34211000 -     0x7fff3456cff0  com.apple.CoreImage (15.0.0 - 940.9) <69361069-01AB-342E-862B-73A74271A765> /System/Library/Frameworks/CoreImage.framework/Versions/A/CoreImage\r\n    0x7fff3456d000 -     0x7fff345d6ff0  com.apple.corelocation (2394.0.22 - 2394.0.22) <75966124-2FB7-33C3-BE49-3DD5F327F911> /System/Library/Frameworks/CoreLocation.framework/Versions/A/CoreLocation\r\n    0x7fff345d7000 -     0x7fff34627ff6  com.apple.audio.midi.CoreMIDI (1.10 - 88) <017B0334-8AC4-304B-A5E2-C82C51BE1917> /System/Library/Frameworks/CoreMIDI.framework/Versions/A/CoreMIDI\r\n    0x7fff3492d000 -     0x7fff34a08ffc  com.apple.CoreMedia (1.0 - 2625.9) <A3FF3AFC-8C1C-36E5-9179-66D8F075EE35> /System/Library/Frameworks/CoreMedia.framework/Versions/A/CoreMedia\r\n    0x7fff34a09000 -     0x7fff34a6bffe  com.apple.CoreMediaIO (1000.0 - 5125.6) <F8C046C7-4DA4-3987-A7CB-BAD12F0D2D22> /System/Library/Frameworks/CoreMediaIO.framework/Versions/A/CoreMediaIO\r\n    0x7fff34af5000 -     0x7fff34af5fff  com.apple.CoreServices (1069.24 - 1069.24) <AA140158-E909-34C2-B2F5-20EBC93E0056> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices\r\n    0x7fff34af6000 -     0x7fff34b7bfff  com.apple.AE (838.1 - 838.1) <2E5FD5AE-8A7F-353F-9BD1-0241F3586181> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE\r\n    0x7fff34b7c000 -     0x7fff34e5dff7  com.apple.CoreServices.CarbonCore (1217 - 1217) <BE379206-99FA-30CD-8391-2708473A633F> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore\r\n    0x7fff34e5e000 -     0x7fff34eabffd  com.apple.DictionaryServices (1.2 - 323.6) <26B70C82-25BC-353A-858F-945B14C803A2> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices\r\n    0x7fff34eac000 -     0x7fff34eb4ff7  com.apple.CoreServices.FSEvents (1268.100.1 - 1268.100.1) <FC84DB48-A3CE-30F7-A918-B3587731ACC7> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents\r\n    0x7fff34eb5000 -     0x7fff350efff6  com.apple.LaunchServices (1069.24 - 1069.24) <9A5359D9-9148-3B18-B868-56A9DA5FB60C> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices\r\n    0x7fff350f0000 -     0x7fff35188ff1  com.apple.Metadata (10.7.0 - 2076.7) <0973F7E5-D58C-3574-A3CE-4F12CAC2D4C7> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata\r\n    0x7fff35189000 -     0x7fff351b6fff  com.apple.CoreServices.OSServices (1069.24 - 1069.24) <0E4F48AD-402C-3E9D-9CA9-6DD9479B28F9> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices\r\n    0x7fff351b7000 -     0x7fff3521efff  com.apple.SearchKit (1.4.1 - 1.4.1) <2C5E1D85-E8B1-3DC5-91B9-E3EDB48E9369> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit\r\n    0x7fff3521f000 -     0x7fff35243ff5  com.apple.coreservices.SharedFileList (131.4 - 131.4) <02DE0D56-E371-3EF5-9BC1-FA435451B412> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SharedFileList.framework/Versions/A/SharedFileList\r\n    0x7fff35568000 -     0x7fff3571fffc  com.apple.CoreText (643.1.5.1 - 643.1.5.1) <A88F052A-C840-3E6C-9BF8-FFFED34C0667> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText\r\n    0x7fff35720000 -     0x7fff35764ffb  com.apple.CoreVideo (1.8 - 344.3) <5314E70D-325F-3E98-99FC-00FDF520747E> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo\r\n    0x7fff35765000 -     0x7fff357f2ffc  com.apple.framework.CoreWLAN (13.0 - 1601.2) <6223BFD5-D451-3DE9-90F6-F609AC0B0027> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN\r\n    0x7fff359ba000 -     0x7fff35a64ff0  com.apple.DiscRecording (9.0.3 - 9030.4.5) <BCF3AFB0-6E1A-3F28-A575-1FD2D74E7C19> /System/Library/Frameworks/DiscRecording.framework/Versions/A/DiscRecording\r\n    0x7fff35a89000 -     0x7fff35a8ffff  com.apple.DiskArbitration (2.7 - 2.7) <0BBBB6A6-604D-368B-9943-50B8CE75D51D> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration\r\n    0x7fff35c84000 -     0x7fff35db2ff6  com.apple.FileProvider (304.1 - 304.1) <E8BB1D4B-05D6-386C-865C-F8C750CEC308> /System/Library/Frameworks/FileProvider.framework/Versions/A/FileProvider\r\n    0x7fff35dca000 -     0x7fff3618ffff  com.apple.Foundation (6.9 - 1677.104) <7C69F845-F651-3193-8262-5938010EC67D> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation\r\n    0x7fff361fc000 -     0x7fff3624cff7  com.apple.GSS (4.0 - 2.0) <2F3A67E6-D42A-3CF0-9041-A42C22D46F95> /System/Library/Frameworks/GSS.framework/Versions/A/GSS\r\n    0x7fff36389000 -     0x7fff3649dff3  com.apple.Bluetooth (7.0.6 - 7.0.6f7) <CF9CEFBA-97AC-3474-93AF-863C2C74C645> /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth\r\n    0x7fff36503000 -     0x7fff365a7ff3  com.apple.framework.IOKit (2.0.2 - 1726.140.1) <14223387-6F81-3976-8605-4BC2F253A93E> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit\r\n    0x7fff365a9000 -     0x7fff365baffb  com.apple.IOSurface (269.11 - 269.11) <BCD744D4-E17E-3C2E-B69C-F69C789892E9> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface\r\n    0x7fff36639000 -     0x7fff36795ffe  com.apple.ImageIO.framework (3.3.0 - 1976.11.1) <5DBAD721-B70E-396C-922C-A2742E6815D6> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\r\n    0x7fff36796000 -     0x7fff36799fff  libGIF.dylib (1976.11.1) <1A04BEC5-95CF-3EA4-8FA6-FE19679331F3> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib\r\n    0x7fff3679a000 -     0x7fff36853fe7  libJP2.dylib (1976.11.1) <686B045D-5627-3DEE-B018-72068B7136D4> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib\r\n    0x7fff36854000 -     0x7fff36877fe3  libJPEG.dylib (1976.11.1) <13EAEDD3-D4CF-3B2C-B7A4-FB000A71D982> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib\r\n    0x7fff36af6000 -     0x7fff36b10fef  libPng.dylib (1976.11.1) <031068A2-29E2-3BE0-93CC-76D154976A51> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib\r\n    0x7fff36b11000 -     0x7fff36b12fff  libRadiance.dylib (1976.11.1) <6B5A0402-F511-39ED-933A-C361005107B1> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib\r\n    0x7fff36b13000 -     0x7fff36b59fff  libTIFF.dylib (1976.11.1) <1F089EF9-3DCE-3B49-9B2B-28B9AC3252D0> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib\r\n    0x7fff380bb000 -     0x7fff380cdff3  com.apple.Kerberos (3.0 - 1) <03BB492B-016E-37BF-B020-39C2CF7487FE> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos\r\n    0x7fff380ce000 -     0x7fff380cefff  libHeimdalProxy.dylib (77) <0A2905EE-9533-3345-AF9B-AAC71513BDFD> /System/Library/Frameworks/Kerberos.framework/Versions/A/Libraries/libHeimdalProxy.dylib\r\n    0x7fff38460000 -     0x7fff3846affb  com.apple.MediaAccessibility (1.0 - 125.1) <98065EA1-3484-3A5A-B05C-D2FABED8CEA4> /System/Library/Frameworks/MediaAccessibility.framework/Versions/A/MediaAccessibility\r\n    0x7fff38536000 -     0x7fff38c83ff2  com.apple.MediaToolbox (1.0 - 2625.9) <3A848992-9182-382A-BF7D-5CB9707BE27B> /System/Library/Frameworks/MediaToolbox.framework/Versions/A/MediaToolbox\r\n    0x7fff38c85000 -     0x7fff38d4ffff  com.apple.Metal (212.8 - 212.8) <98C944D6-62C8-355E-90F8-C1CA2429EF24> /System/Library/Frameworks/Metal.framework/Versions/A/Metal\r\n    0x7fff38d6c000 -     0x7fff38da9ff7  com.apple.MetalPerformanceShaders.MPSCore (1.0 - 1) <7EBAC15D-7837-395D-B405-1E29F7DA68FA> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSCore.framework/Versions/A/MPSCore\r\n    0x7fff38daa000 -     0x7fff38e34fe2  com.apple.MetalPerformanceShaders.MPSImage (1.0 - 1) <B424FE0C-6E90-3BFA-A6E7-DD86C735AE90> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSImage.framework/Versions/A/MPSImage\r\n    0x7fff38e35000 -     0x7fff38e5aff4  com.apple.MetalPerformanceShaders.MPSMatrix (1.0 - 1) <02006D92-E2AB-3892-A96B-37F6520C19BA> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSMatrix.framework/Versions/A/MPSMatrix\r\n    0x7fff38e5b000 -     0x7fff38e70ffb  com.apple.MetalPerformanceShaders.MPSNDArray (1.0 - 1) <CAA5A368-DB71-34F6-AEF9-27A8BC298F53> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSNDArray.framework/Versions/A/MPSNDArray\r\n    0x7fff38e71000 -     0x7fff38fcfffc  com.apple.MetalPerformanceShaders.MPSNeuralNetwork (1.0 - 1) <05612E06-50CB-318F-9F8E-EF4D49FAB3B0> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSNeuralNetwork.framework/Versions/A/MPSNeuralNetwork\r\n    0x7fff38fd0000 -     0x7fff3901fff4  com.apple.MetalPerformanceShaders.MPSRayIntersector (1.0 - 1) <B0B591F8-6875-351E-867F-8EB3CD38CD52> /System/Library/Frameworks/MetalPerformanceShaders.framework/Frameworks/MPSRayIntersector.framework/Versions/A/MPSRayIntersector\r\n    0x7fff39020000 -     0x7fff39021ff5  com.apple.MetalPerformanceShaders.MetalPerformanceShaders (1.0 - 1) <F2921F9A-3041-3495-878D-64134267B847> /System/Library/Frameworks/MetalPerformanceShaders.framework/Versions/A/MetalPerformanceShaders\r\n    0x7fff3a0b0000 -     0x7fff3a0bcffe  com.apple.NetFS (6.0 - 4.0) <4415F027-D36D-3B9C-96BA-AD22B44A4722> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS\r\n    0x7fff3a0bd000 -     0x7fff3a214ff3  com.apple.Network (1.0 - 1) <4A0F3B93-4D23-3E74-9A3D-AD19E9C0E59E> /System/Library/Frameworks/Network.framework/Versions/A/Network\r\n    0x7fff3cc46000 -     0x7fff3cc9efff  com.apple.opencl (3.5 - 3.5) <293FE223-9186-320B-81A4-EC8104C38357> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL\r\n    0x7fff3cc9f000 -     0x7fff3ccbbfff  com.apple.CFOpenDirectory (10.15 - 220.40.1) <7E6C88EB-3DD9-32B0-81FC-179552834FA9> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory\r\n    0x7fff3ccbc000 -     0x7fff3ccc7ffd  com.apple.OpenDirectory (10.15 - 220.40.1) <4A92D8D8-A9E5-3A9C-942F-28576F6BCDF5> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory\r\n    0x7fff3d62d000 -     0x7fff3d62ffff  libCVMSPluginSupport.dylib (17.10.22) <2B6C3C16-3F5F-36A8-8070-2A862B90328B> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib\r\n    0x7fff3d630000 -     0x7fff3d635fff  libCoreFSCache.dylib (176.15) <E9A20E72-B17F-33D6-8894-41934A10B822> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreFSCache.dylib\r\n    0x7fff3d636000 -     0x7fff3d63afff  libCoreVMClient.dylib (176.15) <018A48BA-1326-3847-8FB5-A7C99322EB87> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib\r\n    0x7fff3d63b000 -     0x7fff3d643ff7  libGFXShared.dylib (17.10.22) <AB47B927-65E3-3924-88BE-0A5BE7906785> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib\r\n    0x7fff3d644000 -     0x7fff3d64efff  libGL.dylib (17.10.22) <FB5E6A75-398E-38EF-8CB2-59F5BFE3034C> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib\r\n    0x7fff3d64f000 -     0x7fff3d683ff7  libGLImage.dylib (17.10.22) <9A3FE633-61B8-3CC7-8183-62960109401A> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib\r\n    0x7fff3d819000 -     0x7fff3d855fff  libGLU.dylib (17.10.22) <D8B4D804-7323-30BC-871C-B7236FFC2FE3> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib\r\n    0x7fff3e291000 -     0x7fff3e2a0ff7  com.apple.opengl (17.10.22 - 17.10.22) <D3C57A32-6BD0-3228-B1C4-0F42A6128A6C> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL\r\n    0x7fff3f25e000 -     0x7fff3f4e1ffb  com.apple.QuartzCore (1.11 - 841.4) <FE927B0E-BD49-32CC-8A55-90F553C86C15> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore\r\n    0x7fff3f4e2000 -     0x7fff3f53bff5  com.apple.QuickLookFramework (5.0 - 906.3) <959CE934-B541-3172-846F-4D1709353526> /System/Library/Frameworks/QuickLook.framework/Versions/A/QuickLook\r\n    0x7fff3f53c000 -     0x7fff3f571ffc  com.apple.QuickLookThumbnailing (1.0 - 1) <9CCB50D8-AA39-3744-93FB-7B5B65467AB3> /System/Library/Frameworks/QuickLookThumbnailing.framework/Versions/A/QuickLookThumbnailing\r\n    0x7fff40062000 -     0x7fff403abff1  com.apple.security (7.0 - 59306.140.5) <B6F8368F-2395-379B-B768-71C53BB1B903> /System/Library/Frameworks/Security.framework/Versions/A/Security\r\n    0x7fff403ac000 -     0x7fff40434ffb  com.apple.securityfoundation (6.0 - 55236.60.1) <7C69DF47-4017-3DF2-B55B-712B481654CB> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation\r\n    0x7fff40463000 -     0x7fff40467ff8  com.apple.xpc.ServiceManagement (1.0 - 1) <2C62956C-F2D4-3EB0-86C7-EAA06331621A> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement\r\n    0x7fff41113000 -     0x7fff4118dff7  com.apple.SystemConfiguration (1.19 - 1.19) <84F9B3BB-F7AF-3B7C-8CD0-D3C22D19619F> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration\r\n    0x7fff4140d000 -     0x7fff41790ff4  com.apple.VideoToolbox (1.0 - 2625.9) <6CF18E28-A7A8-3952-8171-7E4FF4FB37FA> /System/Library/Frameworks/VideoToolbox.framework/Versions/A/VideoToolbox\r\n    0x7fff450fd000 -     0x7fff451c2fe7  com.apple.APFS (1412.141.1 - 1412.141.1) <C86A3423-E61C-335A-9D17-0B3CE5BB6467> /System/Library/PrivateFrameworks/APFS.framework/Versions/A/APFS\r\n    0x7fff462d7000 -     0x7fff462d8ff1  com.apple.AggregateDictionary (1.0 - 1) <95A291F5-B69F-3C37-9483-C3B2EBF52AC1> /System/Library/PrivateFrameworks/AggregateDictionary.framework/Versions/A/AggregateDictionary\r\n    0x7fff466ef000 -     0x7fff4670cff4  com.apple.AppContainer (4.0 - 448.100.6) <87CEE13C-8585-3EFB-92CD-0852DFF0921B> /System/Library/PrivateFrameworks/AppContainer.framework/Versions/A/AppContainer\r\n    0x7fff46761000 -     0x7fff4676fff7  com.apple.AppSandbox (4.0 - 448.100.6) <0F49AA04-3400-349A-9096-6D4D7ED61027> /System/Library/PrivateFrameworks/AppSandbox.framework/Versions/A/AppSandbox\r\n    0x7fff46beb000 -     0x7fff46c0fffb  com.apple.framework.Apple80211 (13.0 - 1610.1) <D94E03E8-4C38-3B2F-8DF4-473ACC5A7D71> /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211\r\n    0x7fff46ecd000 -     0x7fff46edcfd7  com.apple.AppleFSCompression (119.100.1 - 1.0) <466ABD77-2E52-36D1-8E39-77AE2CC61611> /System/Library/PrivateFrameworks/AppleFSCompression.framework/Versions/A/AppleFSCompression\r\n    0x7fff46fdb000 -     0x7fff46fe6ff7  com.apple.AppleIDAuthSupport (1.0 - 1) <74F6CD9C-27A7-39C7-A7EB-47E60D2517EB> /System/Library/PrivateFrameworks/AppleIDAuthSupport.framework/Versions/A/AppleIDAuthSupport\r\n    0x7fff47028000 -     0x7fff47070ff7  com.apple.AppleJPEG (1.0 - 1) <6DE30A07-C627-319B-A0DE-EB7A832BEB88> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG\r\n    0x7fff47433000 -     0x7fff47459ffb  com.apple.aps.framework (4.0 - 4.0) <3ED300B6-43E3-31DC-B3C6-6A0FF41A2595> /System/Library/PrivateFrameworks/ApplePushService.framework/Versions/A/ApplePushService\r\n    0x7fff4745a000 -     0x7fff4745eff7  com.apple.AppleSRP (5.0 - 1) <70C25EA9-F7A7-366C-97C6-EEE7845FFCC3> /System/Library/PrivateFrameworks/AppleSRP.framework/Versions/A/AppleSRP\r\n    0x7fff4745f000 -     0x7fff47481fff  com.apple.applesauce (1.0 - 16.25) <68E0364C-AEA7-3654-A030-136BF3CD92F3> /System/Library/PrivateFrameworks/AppleSauce.framework/Versions/A/AppleSauce\r\n    0x7fff47540000 -     0x7fff47543fff  com.apple.AppleSystemInfo (3.1.5 - 3.1.5) <67255151-F989-39F0-BC87-0C0BDAE70730> /System/Library/PrivateFrameworks/AppleSystemInfo.framework/Versions/A/AppleSystemInfo\r\n    0x7fff47544000 -     0x7fff47594ff7  com.apple.AppleVAFramework (6.1.2 - 6.1.2) <8E18983B-AF92-3853-8251-A6577A55AC15> /System/Library/PrivateFrameworks/AppleVA.framework/Versions/A/AppleVA\r\n    0x7fff475dd000 -     0x7fff475ecff9  com.apple.AssertionServices (1.0 - 223.140.2) <48AD21CA-B81D-380E-A04F-90C48FDA5203> /System/Library/PrivateFrameworks/AssertionServices.framework/Versions/A/AssertionServices\r\n    0x7fff47b2f000 -     0x7fff47f2aff8  com.apple.audio.AudioResourceArbitration (1.0 - 1) <2BD68521-C19C-3D67-B5EB-DE3E9A4DAF0A> /System/Library/PrivateFrameworks/AudioResourceArbitration.framework/Versions/A/AudioResourceArbitration\r\n    0x7fff48180000 -     0x7fff483c0fe0  com.apple.audio.AudioToolboxCore (1.0 - 1104.93) <5B539F50-93E8-3F73-9E4C-678C85D0488F> /System/Library/PrivateFrameworks/AudioToolboxCore.framework/Versions/A/AudioToolboxCore\r\n    0x7fff483c4000 -     0x7fff484e0fff  com.apple.AuthKit (1.0 - 1) <DC1A27C5-0172-3C72-9B24-06996D0B6207> /System/Library/PrivateFrameworks/AuthKit.framework/Versions/A/AuthKit\r\n    0x7fff4869d000 -     0x7fff486a6ff7  com.apple.coreservices.BackgroundTaskManagement (1.0 - 104) <A6877DAD-8F47-363C-983A-DC8DDE83B7B5> /System/Library/PrivateFrameworks/BackgroundTaskManagement.framework/Versions/A/BackgroundTaskManagement\r\n    0x7fff48749000 -     0x7fff487d5ff6  com.apple.BaseBoard (466.3 - 466.3) <10D0F3BB-E8F3-365E-8528-6AC996A9B0E7> /System/Library/PrivateFrameworks/BaseBoard.framework/Versions/A/BaseBoard\r\n    0x7fff488d7000 -     0x7fff48913ff7  com.apple.bom (14.0 - 219.2) <79CBE5E7-054F-377B-9566-A86A9F120CF1> /System/Library/PrivateFrameworks/Bom.framework/Versions/A/Bom\r\n    0x7fff48b6b000 -     0x7fff48b93ffc  com.apple.CacheDelete (1.0 - 1) <3B6C89B7-5FE3-3729-874E-48B431CF84A6> /System/Library/PrivateFrameworks/CacheDelete.framework/Versions/A/CacheDelete\r\n    0x7fff493e6000 -     0x7fff49428ff1  com.apple.Catalyst (1.0 - 6.1) <FC0822C4-C234-3543-9F47-3C0496E25A52> /System/Library/PrivateFrameworks/Catalyst.framework/Versions/A/Catalyst\r\n    0x7fff49429000 -     0x7fff4943aff1  com.apple.framework.ctcategories (1.0 - 5.7) <BE99683D-352B-3CFA-A1D3-837A3FEEA75C> /System/Library/PrivateFrameworks/Categories.framework/Versions/A/Categories\r\n    0x7fff49493000 -     0x7fff494e2fff  com.apple.ChunkingLibrary (307 - 307) <5B09C30D-FD2B-3E98-8B64-C5EF470FC13C> /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary\r\n    0x7fff4a38e000 -     0x7fff4a39effb  com.apple.CommonAuth (4.0 - 2.0) <CF67FF34-4238-3ECA-B4A4-EA04F18A0D36> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth\r\n    0x7fff4a3b2000 -     0x7fff4a3c9fff  com.apple.commonutilities (8.0 - 900) <F4C97244-E5D8-3F7D-8D94-4B6841C5A4EC> /System/Library/PrivateFrameworks/CommonUtilities.framework/Versions/A/CommonUtilities\r\n    0x7fff4a9ae000 -     0x7fff4a9bbff1  com.apple.siri.context.ContextKit (1.0 - 1) <8BFD475E-376A-3F99-8E17-9994838E8837> /System/Library/PrivateFrameworks/ContextKit.framework/Versions/A/ContextKit\r\n    0x7fff4aad0000 -     0x7fff4aea5fc8  com.apple.CoreAUC (283.0.0 - 283.0.0) <4341271C-D270-3F9F-8464-31A20D15158D> /System/Library/PrivateFrameworks/CoreAUC.framework/Versions/A/CoreAUC\r\n    0x7fff4aea6000 -     0x7fff4aed3ff7  com.apple.CoreAVCHD (6.1.0 - 6100.4.1) <C3CFDC68-C7D9-3C44-9E7C-801D45575C10> /System/Library/PrivateFrameworks/CoreAVCHD.framework/Versions/A/CoreAVCHD\r\n    0x7fff4aef6000 -     0x7fff4af17ff4  com.apple.analyticsd (1.0 - 1) <95A87174-A616-3F80-B17A-1FA7E3DB7C09> /System/Library/PrivateFrameworks/CoreAnalytics.framework/Versions/A/CoreAnalytics\r\n    0x7fff4b222000 -     0x7fff4b22dff7  com.apple.frameworks.CoreDaemon (1.3 - 1.3) <BB7D67B1-2102-3D71-9BB6-AEB8C6A6EBB2> /System/Library/PrivateFrameworks/CoreDaemon.framework/Versions/B/CoreDaemon\r\n    0x7fff4b4ae000 -     0x7fff4b4beff3  com.apple.CoreEmoji (1.0 - 107.1) <7C2B3259-083B-31B8-BCDB-1BA360529936> /System/Library/PrivateFrameworks/CoreEmoji.framework/Versions/A/CoreEmoji\r\n    0x7fff4bafe000 -     0x7fff4bb68ff0  com.apple.CoreNLP (1.0 - 213) <E70E2505-8078-324E-BAE1-01A2DA980E2C> /System/Library/PrivateFrameworks/CoreNLP.framework/Versions/A/CoreNLP\r\n    0x7fff4bf96000 -     0x7fff4bf9eff8  com.apple.CorePhoneNumbers (1.0 - 1) <E4DAD514-0B3B-3E0B-8AEA-39B320FAAF03> /System/Library/PrivateFrameworks/CorePhoneNumbers.framework/Versions/A/CorePhoneNumbers\r\n    0x7fff4c98b000 -     0x7fff4c9aefff  com.apple.CoreSVG (1.0 - 129.3) <F38189F9-C8F9-3D62-9D5F-3F520FB81724> /System/Library/PrivateFrameworks/CoreSVG.framework/Versions/A/CoreSVG\r\n    0x7fff4c9af000 -     0x7fff4c9e2fff  com.apple.CoreServicesInternal (446.7 - 446.7) <65F53A22-6B61-382C-AAC2-B2C53F8FFB44> /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal\r\n    0x7fff4c9e3000 -     0x7fff4ca11ffd  com.apple.CSStore (1069.24 - 1069.24) <C2D67667-FA0B-3DB6-AA34-6999EE4346A0> /System/Library/PrivateFrameworks/CoreServicesStore.framework/Versions/A/CoreServicesStore\r\n    0x7fff4cf36000 -     0x7fff4cfccff7  com.apple.CoreSymbolication (11.4 - 64535.33.2) <0B3BF87A-7F95-3D79-B4F8-421D6FAC4A6C> /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication\r\n    0x7fff4d064000 -     0x7fff4d190ff6  com.apple.coreui (2.1 - 609.4) <788818B7-7EBC-316D-9464-D12E365E3791> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI\r\n    0x7fff4d191000 -     0x7fff4d34affa  com.apple.CoreUtils (6.2.4 - 624.7) <A74A1C65-6695-3F57-B703-0DEDE13E66C1> /System/Library/PrivateFrameworks/CoreUtils.framework/Versions/A/CoreUtils\r\n    0x7fff4d484000 -     0x7fff4d497ff1  com.apple.CrashReporterSupport (10.13 - 15016) <ADF138F0-0274-3BA2-A1D2-48B91577FE53> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport\r\n    0x7fff4d550000 -     0x7fff4d562ff8  com.apple.framework.DFRFoundation (1.0 - 252.50.1) <8162057E-E856-3451-9160-04AEDDECFFA4> /System/Library/PrivateFrameworks/DFRFoundation.framework/Versions/A/DFRFoundation\r\n    0x7fff4d563000 -     0x7fff4d568fff  com.apple.DSExternalDisplay (3.1 - 380) <31ECB5FD-7660-33DB-BC5B-2B2A2AA7C686> /System/Library/PrivateFrameworks/DSExternalDisplay.framework/Versions/A/DSExternalDisplay\r\n    0x7fff4d6b8000 -     0x7fff4d6f5ff8  com.apple.DebugSymbols (194 - 194) <040AE30B-CF2C-3798-A289-0929B8CAB10D> /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols\r\n    0x7fff4d6f6000 -     0x7fff4d87eff6  com.apple.desktopservices (1.14.5 - 1281.5.3) <BFA7D5B5-20EE-38E3-B8A7-96CE1F9BB48A> /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv\r\n    0x7fff4d8a1000 -     0x7fff4d8f8ff5  com.apple.DeviceManagement (1.0 - 32.4) <CC3D3DFD-26CF-3781-828E-64C997EC8112> /System/Library/PrivateFrameworks/DeviceManagement.framework/Versions/A/DeviceManagement\r\n    0x7fff4dbe0000 -     0x7fff4dcb3ff1  com.apple.DiskManagement (13.0 - 1648.140.2) <640DBACE-B6EC-3C72-9F73-F484E891534E> /System/Library/PrivateFrameworks/DiskManagement.framework/Versions/A/DiskManagement\r\n    0x7fff4dd37000 -     0x7fff4dd4af07  com.apple.dynamicdesktop (1.0 - 1) <E40DA187-48CB-3D1C-A181-D4AD872DDA68> /System/Library/PrivateFrameworks/DynamicDesktop.framework/Versions/A/DynamicDesktop\r\n    0x7fff4dd96000 -     0x7fff4dd9aff9  com.apple.EFILogin (2.0 - 2) <3BFE697B-469F-38F4-B380-4A4F4A37C836> /System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin\r\n    0x7fff4f229000 -     0x7fff4f644ff1  com.apple.vision.FaceCore (4.3.0 - 4.3.0) <5D32F65D-2CD7-3204-975C-F4C9256E505F> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore\r\n    0x7fff4fce3000 -     0x7fff4fe1aff4  libFontParser.dylib (277.2.6.1) <9E9E2EAA-3273-360E-A01B-EB986ECB7BCF> /System/Library/PrivateFrameworks/FontServices.framework/libFontParser.dylib\r\n    0x7fff4feb4000 -     0x7fff4fec4ff6  libhvf.dylib (1.0 - $[CURRENT_PROJECT_VERSION]) <1605B441-08E0-332D-B7D8-0E13F37B54E7> /System/Library/PrivateFrameworks/FontServices.framework/libhvf.dylib\r\n    0x7fff54a60000 -     0x7fff54a66fff  com.apple.GPUWrangler (5.2.6 - 5.2.6) <487F2E7A-A5FF-3C36-A8E9-B85D98618116> /System/Library/PrivateFrameworks/GPUWrangler.framework/Versions/A/GPUWrangler\r\n    0x7fff54d85000 -     0x7fff54dabff1  com.apple.GenerationalStorage (2.0 - 314) <54483E50-20BB-3AF8-900F-992320C109B0> /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage\r\n    0x7fff54dc4000 -     0x7fff55dadff1  com.apple.GeoServices (1.0 - 1624.26.4.26.9) <F735575F-7DEF-3202-9151-589BEB162596> /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices\r\n    0x7fff55ed9000 -     0x7fff55ee7ffb  com.apple.GraphVisualizer (1.0 - 100.1) <507D5812-9CB4-3C94-938C-59ED2B370818> /System/Library/PrivateFrameworks/GraphVisualizer.framework/Versions/A/GraphVisualizer\r\n    0x7fff56086000 -     0x7fff56144ff4  com.apple.Heimdal (4.0 - 2.0) <B86FE9DB-71BB-3B6E-A4AE-2B0B44570A7F> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal\r\n    0x7fff582ca000 -     0x7fff582d2ff5  com.apple.IOAccelerator (438.7.3 - 438.7.3) <06E3E70B-C0D0-39A2-96B7-12ED6A0EBEE7> /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator\r\n    0x7fff582df000 -     0x7fff582f6fff  com.apple.IOPresentment (47.10 - 37) <32F1B3BC-4644-3982-AAB2-8EB5D5FF0161> /System/Library/PrivateFrameworks/IOPresentment.framework/Versions/A/IOPresentment\r\n    0x7fff5867e000 -     0x7fff586c9ff1  com.apple.IconServices (438.3 - 438.3) <0DADB4C3-46FF-3FDB-8A86-51E2067FC7F4> /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices\r\n    0x7fff58887000 -     0x7fff5888eff9  com.apple.InternationalSupport (1.0 - 45.4) <8D8D4A7D-FD35-36B8-A456-7C93030EDAB3> /System/Library/PrivateFrameworks/InternationalSupport.framework/Versions/A/InternationalSupport\r\n    0x7fff58b1b000 -     0x7fff58b3affd  com.apple.security.KeychainCircle.KeychainCircle (1.0 - 1) <6F655A32-F963-3A7E-B475-E460F4AC7D99> /System/Library/PrivateFrameworks/KeychainCircle.framework/Versions/A/KeychainCircle\r\n    0x7fff58c6f000 -     0x7fff58d3dffd  com.apple.LanguageModeling (1.0 - 215.1) <C456087D-5B3A-390E-A665-862FA284C59C> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling\r\n    0x7fff58d3e000 -     0x7fff58d86fff  com.apple.Lexicon-framework (1.0 - 72) <41F208B9-8255-3EC7-9673-FE0925D071D3> /System/Library/PrivateFrameworks/Lexicon.framework/Versions/A/Lexicon\r\n    0x7fff58d8d000 -     0x7fff58d92ff3  com.apple.LinguisticData (1.0 - 353.18) <3B92F249-4602-325F-984B-D2DE61EEE4E1> /System/Library/PrivateFrameworks/LinguisticData.framework/Versions/A/LinguisticData\r\n    0x7fff58db9000 -     0x7fff58dddffe  com.apple.locationsupport (2394.0.22 - 2394.0.22) <CA6C86FD-051A-31BB-B3AF-3D02D6FD94B6> /System/Library/PrivateFrameworks/LocationSupport.framework/Versions/A/LocationSupport\r\n    0x7fff5962b000 -     0x7fff5962efff  com.apple.Mangrove (1.0 - 25) <482F300F-9B70-351F-A4DF-B440EEF7368D> /System/Library/PrivateFrameworks/Mangrove.framework/Versions/A/Mangrove\r\n    0x7fff59897000 -     0x7fff59921ff8  com.apple.MediaExperience (1.0 - 1) <0203AF27-AB5E-32FA-B529-AB7F29EEB887> /System/Library/PrivateFrameworks/MediaExperience.framework/Versions/A/MediaExperience\r\n    0x7fff59922000 -     0x7fff59955fff  com.apple.MediaKit (16 - 923) <09FEE738-41E4-3A9C-AF1E-1DD00C56339D> /System/Library/PrivateFrameworks/MediaKit.framework/Versions/A/MediaKit\r\n    0x7fff5a0fb000 -     0x7fff5a147fff  com.apple.spotlight.metadata.utilities (1.0 - 2076.7) <0237323B-EC78-3FBF-9FC7-5A1FE2B5CE25> /System/Library/PrivateFrameworks/MetadataUtilities.framework/Versions/A/MetadataUtilities\r\n    0x7fff5a148000 -     0x7fff5a219ffa  com.apple.gpusw.MetalTools (1.0 - 1) <99876E08-37D7-3828-8796-56D90C9AFBDB> /System/Library/PrivateFrameworks/MetalTools.framework/Versions/A/MetalTools\r\n    0x7fff5a44d000 -     0x7fff5a46bfff  com.apple.MobileKeyBag (2.0 - 1.0) <D5FA7041-297F-3ADC-8C7A-6EAAAB82EB68> /System/Library/PrivateFrameworks/MobileKeyBag.framework/Versions/A/MobileKeyBag\r\n    0x7fff5a6ce000 -     0x7fff5a6feff7  com.apple.MultitouchSupport.framework (3440.1 - 3440.1) <6794E1C8-9627-33DF-84F4-FDD02C97F383> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport\r\n    0x7fff5abfe000 -     0x7fff5ac08fff  com.apple.NetAuth (6.2 - 6.2) <B0C03C41-87A3-352B-B130-96E1A6F94B47> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth\r\n    0x7fff5b61e000 -     0x7fff5b669ffb  com.apple.OTSVG (1.0 - 643.1.5.1) <001E5E8C-1DC0-3A6E-BDE4-1B7887E47F76> /System/Library/PrivateFrameworks/OTSVG.framework/Versions/A/OTSVG\r\n    0x7fff5c886000 -     0x7fff5c891ff2  com.apple.PerformanceAnalysis (1.243.2 - 243.2) <B47C00E5-ECC2-313D-93D4-DBDF562C48EF> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis\r\n    0x7fff5c892000 -     0x7fff5c8baffb  com.apple.persistentconnection (1.0 - 1.0) <5B2D87A8-2641-3F6D-ACEA-96B00F85AAB5> /System/Library/PrivateFrameworks/PersistentConnection.framework/Versions/A/PersistentConnection\r\n    0x7fff5e335000 -     0x7fff5e365ff7  com.apple.pluginkit.framework (1.0 - 1) <EFBD7FE7-02CC-3E30-999D-B036F252F805> /System/Library/PrivateFrameworks/PlugInKit.framework/Versions/A/PlugInKit\r\n    0x7fff5f21f000 -     0x7fff5f279ff6  com.apple.ProtectedCloudStorage (1.0 - 1) <6F271388-3817-336D-9B96-08C7AAC4BA39> /System/Library/PrivateFrameworks/ProtectedCloudStorage.framework/Versions/A/ProtectedCloudStorage\r\n    0x7fff5f27a000 -     0x7fff5f293ffb  com.apple.ProtocolBuffer (1 - 274.24.9.16.3) <5A020941-C43C-303E-8DE8-230FC6A84DBC> /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer\r\n    0x7fff5f3a9000 -     0x7fff5f3ccff0  com.apple.quicklook.QuickLookSupport (1.0 - 1) <AFB0DFCC-6580-30E5-8984-831985F37A2C> /System/Library/PrivateFrameworks/QuickLookSupport.framework/Versions/A/QuickLookSupport\r\n    0x7fff5f881000 -     0x7fff5f8bcff0  com.apple.RunningBoardServices (1.0 - 223.140.2) <96BB04BD-D6E0-3D70-8F36-89B46DA1DA30> /System/Library/PrivateFrameworks/RunningBoardServices.framework/Versions/A/RunningBoardServices\r\n    0x7fff6119d000 -     0x7fff611a0ff5  com.apple.SecCodeWrapper (4.0 - 448.100.6) <C4BF691D-A09E-37E8-A6CC-1145B79B8722> /System/Library/PrivateFrameworks/SecCodeWrapper.framework/Versions/A/SecCodeWrapper\r\n    0x7fff61313000 -     0x7fff6143afff  com.apple.Sharing (1526.37 - 1526.37) <CBDA0ADD-F1E7-3B06-9118-C5E183F0D3D6> /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing\r\n    0x7fff6284f000 -     0x7fff62b45ff7  com.apple.SkyLight (1.600.0 - 451.4) <A24929C3-95E6-35A7-9654-46FF3F4D1E80> /System/Library/PrivateFrameworks/SkyLight.framework/Versions/A/SkyLight\r\n    0x7fff63392000 -     0x7fff633a0ffb  com.apple.SpeechRecognitionCore (6.0.91.2 - 6.0.91.2) <4D6CAC2A-151B-3BBE-BDB7-E2BE72128691> /System/Library/PrivateFrameworks/SpeechRecognitionCore.framework/Versions/A/SpeechRecognitionCore\r\n    0x7fff63bd4000 -     0x7fff63bddff7  com.apple.SymptomDiagnosticReporter (1.0 - 1238.120.1) <14929A5D-C369-3B46-844B-CD29A3D1A015> /System/Library/PrivateFrameworks/SymptomDiagnosticReporter.framework/Versions/A/SymptomDiagnosticReporter\r\n    0x7fff63e94000 -     0x7fff63ea4ff3  com.apple.TCC (1.0 - 1) <017AB27D-6821-303A-8FD2-6DAC795CC7AA> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC\r\n    0x7fff643c9000 -     0x7fff6448fff0  com.apple.TextureIO (3.10.9 - 3.10.9) <EEDAB753-329A-396A-8119-5BEDF7DB5A56> /System/Library/PrivateFrameworks/TextureIO.framework/Versions/A/TextureIO\r\n    0x7fff65422000 -     0x7fff65426ffe  com.apple.Uninstall (1.0.1 - 211) <796DC114-2049-3305-A504-D24915855724> /System/Library/PrivateFrameworks/Uninstall.framework/Versions/A/Uninstall\r\n    0x7fff654cb000 -     0x7fff6552cff9  com.apple.UserActivity (358 - 358) <6FA20E0C-4C5C-3354-A389-22DBA288B9E3> /System/Library/PrivateFrameworks/UserActivity.framework/Versions/A/UserActivity\r\n    0x7fff6552d000 -     0x7fff6554dffc  com.apple.UserManagement (1.0 - 1) <9F00880E-6EA6-3684-B208-455E14EC07C8> /System/Library/PrivateFrameworks/UserManagement.framework/Versions/A/UserManagement\r\n    0x7fff66589000 -     0x7fff6658afff  com.apple.WatchdogClient.framework (1.0 - 67.120.2) <FFA17DA1-F6DD-34D3-A708-1F73C8BA7EA7> /System/Library/PrivateFrameworks/WatchdogClient.framework/Versions/A/WatchdogClient\r\n    0x7fff67237000 -     0x7fff67245ff5  com.apple.audio.caulk (1.0 - 32.3) <06D695EA-E2BC-31E4-9816-9C12542BA744> /System/Library/PrivateFrameworks/caulk.framework/Versions/A/caulk\r\n    0x7fff67587000 -     0x7fff67589ff3  com.apple.loginsupport (1.0 - 1) <12F77885-27DC-3837-9CE9-A25EBA75F833> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport\r\n    0x7fff6758a000 -     0x7fff6759dffd  com.apple.login (3.0 - 3.0) <C68367BA-2225-31DD-B2D8-16AC0A44421F> /System/Library/PrivateFrameworks/login.framework/Versions/A/login\r\n    0x7fff675cf000 -     0x7fff675dbffd  com.apple.perfdata (1.0 - 51.100.6) <21760CFD-62FF-3466-B3AD-191D02411DA0> /System/Library/PrivateFrameworks/perfdata.framework/Versions/A/perfdata\r\n    0x7fff6a060000 -     0x7fff6a06cff9  libAudioStatistics.dylib (1104.93) <42CAC6A2-BCC3-391B-B1C1-D0AC69E99CF4> /usr/lib/libAudioStatistics.dylib\r\n    0x7fff6a06d000 -     0x7fff6a0a0ffa  libAudioToolboxUtility.dylib (1104.93) <A7249C4C-6C0A-3C14-BA27-DC966F6CC6A0> /usr/lib/libAudioToolboxUtility.dylib\r\n    0x7fff6a0a7000 -     0x7fff6a0dbfff  libCRFSuite.dylib (48) <5E5DE3CB-30DD-34DC-AEF8-FE8536A85E96> /usr/lib/libCRFSuite.dylib\r\n    0x7fff6a0de000 -     0x7fff6a0e8fff  libChineseTokenizer.dylib (34) <7F0DA183-1796-315A-B44A-2C234C7C50BE> /usr/lib/libChineseTokenizer.dylib\r\n    0x7fff6a0e9000 -     0x7fff6a171fff  libCoreStorage.dylib (551) <A457B0FE-D77F-30AA-99A4-70F6A98DFE59> /usr/lib/libCoreStorage.dylib\r\n    0x7fff6a174000 -     0x7fff6a176ff7  libDiagnosticMessagesClient.dylib (112) <C94F3B7B-1854-38EB-9778-834501C53B3F> /usr/lib/libDiagnosticMessagesClient.dylib\r\n    0x7fff6a1bc000 -     0x7fff6a373ffb  libFosl_dynamic.dylib (100.4) <737573B2-190A-3BA1-8220-807AD0A2CE5E> /usr/lib/libFosl_dynamic.dylib\r\n    0x7fff6a39a000 -     0x7fff6a3a0ff3  libIOReport.dylib (54) <75D177C4-BAD7-3285-B8E1-3019F49B3178> /usr/lib/libIOReport.dylib\r\n    0x7fff6a482000 -     0x7fff6a489fff  libMatch.1.dylib (36) <5C6F3971-9D9E-3630-BDB6-60BFC5A665E0> /usr/lib/libMatch.1.dylib\r\n    0x7fff6a4b8000 -     0x7fff6a4d8ff7  libMobileGestalt.dylib (826.140.5) <2BE94E6A-FA61-312F-84A1-F764D71B7E39> /usr/lib/libMobileGestalt.dylib\r\n    0x7fff6a558000 -     0x7fff6a635ff7  libSMC.dylib (20) <5C9C17F2-1E6F-3A19-A440-86F74D82284F> /usr/lib/libSMC.dylib\r\n    0x7fff6a64a000 -     0x7fff6a64bfff  libSystem.B.dylib (1281.100.1) <0A6C8BA1-30FD-3D10-83FD-FF29E221AFFE> /usr/lib/libSystem.B.dylib\r\n    0x7fff6a6d8000 -     0x7fff6a6d9fff  libThaiTokenizer.dylib (3) <4F4ADE99-0D09-3223-B7C0-C407AB6DE8DC> /usr/lib/libThaiTokenizer.dylib\r\n    0x7fff6a6f1000 -     0x7fff6a707fff  libapple_nghttp2.dylib (1.39.2) <07FEC48A-87CF-32A3-8194-FA70B361713A> /usr/lib/libapple_nghttp2.dylib\r\n    0x7fff6a73c000 -     0x7fff6a7aeff7  libarchive.2.dylib (72.140.1) <AC311FBA-F2DD-3595-AA76-769F912942B8> /usr/lib/libarchive.2.dylib\r\n    0x7fff6a7af000 -     0x7fff6a848fe5  libate.dylib (3.0.1) <76EA60FB-748C-313F-8951-B076540BEA97> /usr/lib/libate.dylib\r\n    0x7fff6a84c000 -     0x7fff6a84cff3  libauto.dylib (187) <B6124448-7690-34AE-8939-ED84AAC630CE> /usr/lib/libauto.dylib\r\n    0x7fff6a912000 -     0x7fff6a922ffb  libbsm.0.dylib (60.100.1) <00BFFB9A-2FFE-3C24-896A-251BC61917FD> /usr/lib/libbsm.0.dylib\r\n    0x7fff6a923000 -     0x7fff6a92ffff  libbz2.1.0.dylib (44) <14CC4988-B6D4-3879-AFC2-9A0DDC6388DE> /usr/lib/libbz2.1.0.dylib\r\n    0x7fff6a930000 -     0x7fff6a982fff  libc++.1.dylib (902.1) <59A8239F-C28A-3B59-B8FA-11340DC85EDC> /usr/lib/libc++.1.dylib\r\n    0x7fff6a983000 -     0x7fff6a998ffb  libc++abi.dylib (902) <E692F14F-C65E-303B-9921-BB7E97D77855> /usr/lib/libc++abi.dylib\r\n    0x7fff6a999000 -     0x7fff6a999fff  libcharset.1.dylib (59) <72447768-9244-39AB-8E79-2FA14EC0AD33> /usr/lib/libcharset.1.dylib\r\n    0x7fff6a99a000 -     0x7fff6a9abfff  libcmph.dylib (8) <E72A20DB-2E86-378D-A237-EB9A1370F989> /usr/lib/libcmph.dylib\r\n    0x7fff6a9ac000 -     0x7fff6a9c3fd7  libcompression.dylib (87) <64C91066-586D-38C0-A2F3-3E60A940F859> /usr/lib/libcompression.dylib\r\n    0x7fff6ac9d000 -     0x7fff6acb3ff7  libcoretls.dylib (167) <770A5B96-936E-34E3-B006-B1CEC299B5A5> /usr/lib/libcoretls.dylib\r\n    0x7fff6acb4000 -     0x7fff6acb5fff  libcoretls_cfhelpers.dylib (167) <940BF370-FD0C-30A8-AA05-FF48DA44FA4C> /usr/lib/libcoretls_cfhelpers.dylib\r\n    0x7fff6b25f000 -     0x7fff6b26afff  libcsfde.dylib (551) <CEE22AEF-4E77-36B1-B007-00303819965F> /usr/lib/libcsfde.dylib\r\n    0x7fff6b272000 -     0x7fff6b2d1ff7  libcups.2.dylib (483.6) <C88D78FE-D238-376C-B16A-39270E39A79D> /usr/lib/libcups.2.dylib\r\n    0x7fff6b3db000 -     0x7fff6b3dbfff  libenergytrace.dylib (21) <162DFCC0-8F48-3DD0-914F-FA8653E27B26> /usr/lib/libenergytrace.dylib\r\n    0x7fff6b3dc000 -     0x7fff6b3f4fff  libexpat.1.dylib (19.60.2) <FED7C38B-92D8-342D-AED7-871B12D1F7E7> /usr/lib/libexpat.1.dylib\r\n    0x7fff6b402000 -     0x7fff6b404fff  libfakelink.dylib (149.1) <36146CB2-E6A5-37BB-9EE8-1B4034D8F3AD> /usr/lib/libfakelink.dylib\r\n    0x7fff6b413000 -     0x7fff6b418fff  libgermantok.dylib (24) <D2AE5AC0-EDCE-3216-B8C9-CF59292A545F> /usr/lib/libgermantok.dylib\r\n    0x7fff6b419000 -     0x7fff6b422ff7  libheimdal-asn1.dylib (564.140.1) <0AC6FB62-2B0F-3E93-A931-E4DC4B1D757A> /usr/lib/libheimdal-asn1.dylib\r\n    0x7fff6b423000 -     0x7fff6b513fff  libiconv.2.dylib (59) <18311A67-E4EF-3CC7-95B3-C0EDEE3A282F> /usr/lib/libiconv.2.dylib\r\n    0x7fff6b514000 -     0x7fff6b76bfff  libicucore.A.dylib (64260.0.1) <8AC2CB07-E7E0-340D-A849-186FA1F27251> /usr/lib/libicucore.A.dylib\r\n    0x7fff6b785000 -     0x7fff6b786fff  liblangid.dylib (133) <30CFC08C-EF36-3CF5-8AEA-C1CB070306B7> /usr/lib/liblangid.dylib\r\n    0x7fff6b787000 -     0x7fff6b79fff3  liblzma.5.dylib (16) <C131EF18-2CDD-3271-8A30-A8760D4FE166> /usr/lib/liblzma.5.dylib\r\n    0x7fff6b7b7000 -     0x7fff6b85eff7  libmecab.dylib (883.11) <0D5BFD01-D4A7-3C8D-AA69-C329C1A69792> /usr/lib/libmecab.dylib\r\n    0x7fff6b85f000 -     0x7fff6bac1ff1  libmecabra.dylib (883.11) <E31DE74D-1B88-377F-ACD3-D789D29C3AE7> /usr/lib/libmecabra.dylib\r\n    0x7fff6be2e000 -     0x7fff6be5dfff  libncurses.5.4.dylib (57) <995DFEEA-40F3-377F-B73D-D02AC59D591F> /usr/lib/libncurses.5.4.dylib\r\n    0x7fff6bf8d000 -     0x7fff6c409ff5  libnetwork.dylib (1880.120.4) <BA294A54-F309-398D-B308-F97032AFF555> /usr/lib/libnetwork.dylib\r\n    0x7fff6c4aa000 -     0x7fff6c4ddfde  libobjc.A.dylib (787.1) <6DF81160-5E7F-3E31-AA1E-C875E3B98AF6> /usr/lib/libobjc.A.dylib\r\n    0x7fff6c4f0000 -     0x7fff6c4f4fff  libpam.2.dylib (25.100.1) <0502F395-8EE6-3D2A-9239-06FD5622E19E> /usr/lib/libpam.2.dylib\r\n    0x7fff6c4f7000 -     0x7fff6c52dff7  libpcap.A.dylib (89.120.1) <A76EC076-A8EA-354C-B95F-7AB1EAFBCC65> /usr/lib/libpcap.A.dylib\r\n    0x7fff6c56d000 -     0x7fff6c57bff9  libperfcheck.dylib (37.100.2) <9D9C4879-8A80-34C4-B0D2-BE341FD6D321> /usr/lib/libperfcheck.dylib\r\n    0x7fff6c5af000 -     0x7fff6c5b0ff3  libquit.dylib (281.3) <FB251B0B-CC47-3F99-81F6-95AE46E3D1C8> /usr/lib/libquit.dylib\r\n    0x7fff6c5b1000 -     0x7fff6c5c9fff  libresolv.9.dylib (67.40.1) <C57EDFEF-D36A-310B-8D14-8C68A625B1E8> /usr/lib/libresolv.9.dylib\r\n    0x7fff6c5cb000 -     0x7fff6c60fff7  libsandbox.1.dylib (1217.141.2) <E8BA5E84-66AF-3995-8F8E-DDC93B0A88E1> /usr/lib/libsandbox.1.dylib\r\n    0x7fff6c623000 -     0x7fff6c624ff7  libspindump.dylib (281.3) <AE8C1AE9-5CBC-332F-BBE8-370A2A19FED6> /usr/lib/libspindump.dylib\r\n    0x7fff6c625000 -     0x7fff6c80fff7  libsqlite3.dylib (308.5) <35A2BD9F-4E33-30DE-A994-4AB585AC3AFE> /usr/lib/libsqlite3.dylib\r\n    0x7fff6ca60000 -     0x7fff6ca63ffb  libutil.dylib (57) <F01467F6-23A7-37EE-A170-33CE1577B41D> /usr/lib/libutil.dylib\r\n    0x7fff6ca64000 -     0x7fff6ca71ff7  libxar.1.dylib (425.2) <EE964412-9E25-30B3-BCC0-CCEFBCC8094B> /usr/lib/libxar.1.dylib\r\n    0x7fff6ca77000 -     0x7fff6cb59fff  libxml2.2.dylib (33.5) <A579D158-2E09-316C-872E-DD9D93401B2F> /usr/lib/libxml2.2.dylib\r\n    0x7fff6cb5d000 -     0x7fff6cb85fff  libxslt.1.dylib (16.9) <34A45627-DA5B-37D2-9609-65B425E0010A> /usr/lib/libxslt.1.dylib\r\n    0x7fff6cb86000 -     0x7fff6cb98ff3  libz.1.dylib (76) <793D9643-CD83-3AAC-8B96-88D548FAB620> /usr/lib/libz.1.dylib\r\n    0x7fff6cc14000 -     0x7fff6cc4eff7  libswiftAccelerate.dylib (??? - ???) <731E4BD2-B8E2-397C-A56D-747E8E4B81D9> /usr/lib/swift/libswiftAccelerate.dylib\r\n    0x7fff6cc8f000 -     0x7fff6d044437  libswiftCore.dylib (5.2 - 1103.8.25.8) <E56CCFCA-99E1-36E5-A6BC-F31F53C79910> /usr/lib/swift/libswiftCore.dylib\r\n    0x7fff6d045000 -     0x7fff6d050fff  libswiftCoreAudio.dylib (??? - ???) <2886B49B-6D68-3F12-B71F-704940D0A86F> /usr/lib/swift/libswiftCoreAudio.dylib\r\n    0x7fff6d05a000 -     0x7fff6d05cfff  libswiftCoreFoundation.dylib (??? - ???) <FBA4566B-AD2B-35D7-BC9A-48BE3D88B658> /usr/lib/swift/libswiftCoreFoundation.dylib\r\n    0x7fff6d05d000 -     0x7fff6d06afff  libswiftCoreGraphics.dylib (??? - ???) <A8225B5F-F64D-32F8-AD91-D919DF614AA0> /usr/lib/swift/libswiftCoreGraphics.dylib\r\n    0x7fff6d06b000 -     0x7fff6d06effb  libswiftCoreImage.dylib (??? - ???) <1485E8EF-EDA9-3981-84D7-DF3BFE361929> /usr/lib/swift/libswiftCoreImage.dylib\r\n    0x7fff6d06f000 -     0x7fff6d074fb7  libswiftCoreLocation.dylib (??? - ???) <3732D3F0-9586-372E-82B0-2C76F401B793> /usr/lib/swift/libswiftCoreLocation.dylib\r\n    0x7fff6d075000 -     0x7fff6d07efff  libswiftCoreMIDI.dylib (??? - ???) <81408BBB-9648-37CB-8646-707C7CDCE15C> /usr/lib/swift/libswiftCoreMIDI.dylib\r\n    0x7fff6d0c9000 -     0x7fff6d0cffff  libswiftDarwin.dylib (??? - ???) <F3684684-8258-310F-B05B-BD8A696F0F29> /usr/lib/swift/libswiftDarwin.dylib\r\n    0x7fff6d0d0000 -     0x7fff6d0e7cdf  libswiftDispatch.dylib (??? - ???) <94D67EF4-42B5-3F54-8D86-B6B2B16827DC> /usr/lib/swift/libswiftDispatch.dylib\r\n    0x7fff6d0e8000 -     0x7fff6d26d277  libswiftFoundation.dylib (??? - ???) <0173898D-FDA6-378D-87E9-1F2A9BD227D3> /usr/lib/swift/libswiftFoundation.dylib\r\n    0x7fff6d27c000 -     0x7fff6d27eff3  libswiftIOKit.dylib (??? - ???) <FD313708-AE48-3C72-A154-53EC839A8D55> /usr/lib/swift/libswiftIOKit.dylib\r\n    0x7fff6d294000 -     0x7fff6d29bf0f  libswiftMetal.dylib (??? - ???) <B3C74138-DE3C-3676-9983-F12757819C9C> /usr/lib/swift/libswiftMetal.dylib\r\n    0x7fff6d317000 -     0x7fff6d31afe7  libswiftObjectiveC.dylib (??? - ???) <E668BD5D-E1D6-3C21-BA7E-5C3A672A964E> /usr/lib/swift/libswiftObjectiveC.dylib\r\n    0x7fff6d32c000 -     0x7fff6d331fbf  libswiftQuartzCore.dylib (??? - ???) <101D3E4D-231A-3CD8-97B4-4E37F4081CD2> /usr/lib/swift/libswiftQuartzCore.dylib\r\n    0x7fff6d41b000 -     0x7fff6d41dfff  libswiftXPC.dylib (??? - ???) <3CD547C3-7082-37EA-B289-F6BA6C4D4E26> /usr/lib/swift/libswiftXPC.dylib\r\n    0x7fff6d41e000 -     0x7fff6d424fe7  libswiftos.dylib (??? - ???) <BC78F369-90A3-33FF-AEA9-F9CA5F0A07ED> /usr/lib/swift/libswiftos.dylib\r\n    0x7fff6d425000 -     0x7fff6d446fff  libswiftsimd.dylib (??? - ???) <21EEA85D-EBBF-378C-8803-DCD904B93B68> /usr/lib/swift/libswiftsimd.dylib\r\n    0x7fff6d447000 -     0x7fff6d44cff3  libcache.dylib (83) <AF488D13-9E89-35E0-B078-BE37CC5B8586> /usr/lib/system/libcache.dylib\r\n    0x7fff6d44d000 -     0x7fff6d458fff  libcommonCrypto.dylib (60165.120.1) <C7912BE5-993E-3581-B2A0-6AABDC8C5562> /usr/lib/system/libcommonCrypto.dylib\r\n    0x7fff6d459000 -     0x7fff6d460fff  libcompiler_rt.dylib (101.2) <49B8F644-5705-3F16-BBE0-6FFF9B17C36E> /usr/lib/system/libcompiler_rt.dylib\r\n    0x7fff6d461000 -     0x7fff6d46aff7  libcopyfile.dylib (166.40.1) <3C481225-21E7-370A-A30E-0CCFDD64A92C> /usr/lib/system/libcopyfile.dylib\r\n    0x7fff6d46b000 -     0x7fff6d4fdfdb  libcorecrypto.dylib (866.140.1) <60567BF8-80FA-359A-B2F3-A3BAEFB288FD> /usr/lib/system/libcorecrypto.dylib\r\n    0x7fff6d60a000 -     0x7fff6d64aff0  libdispatch.dylib (1173.100.2) <CD9C059C-91D9-30E8-8926-5B9CD0D5D4F5> /usr/lib/system/libdispatch.dylib\r\n    0x7fff6d64b000 -     0x7fff6d681fff  libdyld.dylib (750.6) <789A18C2-8AC7-3C88-813D-CD674376585D> /usr/lib/system/libdyld.dylib\r\n    0x7fff6d682000 -     0x7fff6d682ffb  libkeymgr.dylib (30) <DB3337BE-01CA-3425-BD0C-87774FC0CDC0> /usr/lib/system/libkeymgr.dylib\r\n    0x7fff6d683000 -     0x7fff6d68fff3  libkxld.dylib (6153.141.2.2) <30AACC57-2314-3863-94B2-64AB3E002B35> /usr/lib/system/libkxld.dylib\r\n    0x7fff6d690000 -     0x7fff6d690ff7  liblaunch.dylib (1738.140.1) <AFBCBDD3-0B55-3ECD-8E04-A73A3A57356B> /usr/lib/system/liblaunch.dylib\r\n    0x7fff6d691000 -     0x7fff6d696ff7  libmacho.dylib (959.0.1) <AA613A9C-961A-3B67-B696-4622FA59FC4E> /usr/lib/system/libmacho.dylib\r\n    0x7fff6d697000 -     0x7fff6d699ff3  libquarantine.dylib (110.40.3) <F234E51D-FD0B-3EE4-B679-AE3EE9C536C3> /usr/lib/system/libquarantine.dylib\r\n    0x7fff6d69a000 -     0x7fff6d69bff7  libremovefile.dylib (48) <7C7EFC79-BD24-33EF-B073-06AED234593E> /usr/lib/system/libremovefile.dylib\r\n    0x7fff6d69c000 -     0x7fff6d6b3ff3  libsystem_asl.dylib (377.60.2) <1563EE02-0657-3B78-99BE-A947C24122EF> /usr/lib/system/libsystem_asl.dylib\r\n    0x7fff6d6b4000 -     0x7fff6d6b4ff7  libsystem_blocks.dylib (74) <0D53847E-AF5F-3ACF-B51F-A15DEA4DEC58> /usr/lib/system/libsystem_blocks.dylib\r\n    0x7fff6d6b5000 -     0x7fff6d73cfff  libsystem_c.dylib (1353.100.2) <BBDED5E6-A646-3EED-B33A-91E4331EA063> /usr/lib/system/libsystem_c.dylib\r\n    0x7fff6d73d000 -     0x7fff6d740ffb  libsystem_configuration.dylib (1061.141.1) <0EE84C33-64FD-372B-974A-AF7A136F2068> /usr/lib/system/libsystem_configuration.dylib\r\n    0x7fff6d741000 -     0x7fff6d744fff  libsystem_coreservices.dylib (114) <A199156E-058D-3ABB-BCE9-4B9F20DCED0F> /usr/lib/system/libsystem_coreservices.dylib\r\n    0x7fff6d745000 -     0x7fff6d74dfff  libsystem_darwin.dylib (1353.100.2) <5B12B5DB-3F30-37C1-8ECC-49A66B1F2864> /usr/lib/system/libsystem_darwin.dylib\r\n    0x7fff6d74e000 -     0x7fff6d755fff  libsystem_dnssd.dylib (1096.100.3) <EBB4C2C2-E031-3094-B40A-E67BF261D295> /usr/lib/system/libsystem_dnssd.dylib\r\n    0x7fff6d756000 -     0x7fff6d757ffb  libsystem_featureflags.dylib (17) <29FD922A-EC2C-3F25-BCCC-B58D716E60EC> /usr/lib/system/libsystem_featureflags.dylib\r\n    0x7fff6d758000 -     0x7fff6d7a5ff7  libsystem_info.dylib (538) <8A321605-5480-330B-AF9E-64E65DE61747> /usr/lib/system/libsystem_info.dylib\r\n    0x7fff6d7a6000 -     0x7fff6d7d2ff7  libsystem_kernel.dylib (6153.141.2.2) <5CDBBC06-6CA6-3432-9FDA-681047866F3E> /usr/lib/system/libsystem_kernel.dylib\r\n    0x7fff6d7d3000 -     0x7fff6d81afff  libsystem_m.dylib (3178) <00F331F1-0D09-39B3-8736-1FE90E64E903> /usr/lib/system/libsystem_m.dylib\r\n    0x7fff6d81b000 -     0x7fff6d842fff  libsystem_malloc.dylib (283.100.6) <8549294E-4C53-36EB-99F3-584A7393D8D5> /usr/lib/system/libsystem_malloc.dylib\r\n    0x7fff6d843000 -     0x7fff6d850ffb  libsystem_networkextension.dylib (1095.140.2) <F06C65C5-2CBE-313C-96E1-A09240F9FE57> /usr/lib/system/libsystem_networkextension.dylib\r\n    0x7fff6d851000 -     0x7fff6d85aff7  libsystem_notify.dylib (241.100.2) <FA22F928-D91B-3AA5-96BB-3186AC0FB264> /usr/lib/system/libsystem_notify.dylib\r\n    0x7fff6d85b000 -     0x7fff6d863fef  libsystem_platform.dylib (220.100.1) <009A7C1F-313A-318E-B9F2-30F4C06FEA5C> /usr/lib/system/libsystem_platform.dylib\r\n    0x7fff6d864000 -     0x7fff6d86efff  libsystem_pthread.dylib (416.100.3) <62CB1A98-0B8F-31E7-A02B-A1139927F61D> /usr/lib/system/libsystem_pthread.dylib\r\n    0x7fff6d86f000 -     0x7fff6d873ff3  libsystem_sandbox.dylib (1217.141.2) <051C4018-4345-3034-AC98-6DE42FB8273B> /usr/lib/system/libsystem_sandbox.dylib\r\n    0x7fff6d874000 -     0x7fff6d876fff  libsystem_secinit.dylib (62.100.2) <F80872AA-E1FD-3D7E-8729-467656EC6561> /usr/lib/system/libsystem_secinit.dylib\r\n    0x7fff6d877000 -     0x7fff6d87effb  libsystem_symptoms.dylib (1238.120.1) <5820A2AF-CE72-3AB3-ABCC-273A3419FB55> /usr/lib/system/libsystem_symptoms.dylib\r\n    0x7fff6d87f000 -     0x7fff6d895ff2  libsystem_trace.dylib (1147.120) <04B47629-847B-3D74-8ABE-C05EF9DEEFE4> /usr/lib/system/libsystem_trace.dylib\r\n    0x7fff6d897000 -     0x7fff6d89cff7  libunwind.dylib (35.4) <42B7B509-BAFE-365B-893A-72414C92F5BF> /usr/lib/system/libunwind.dylib\r\n    0x7fff6d89d000 -     0x7fff6d8d2ffe  libxpc.dylib (1738.140.1) <3E243A41-030F-38E3-9FD2-7B38C66C35B1> /usr/lib/system/libxpc.dylib\r\n\r\nExternal Modification Summary:\r\n  Calls made by other processes targeting this process:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by this process:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by all processes on this machine:\r\n    task_for_pid: 109\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n\r\nVM Region Summary:\r\nReadOnly portion of Libraries: Total=587.6M resident=0K(0%) swapped_out_or_unallocated=587.6M(100%)\r\nWritable regions: Total=559.1M written=0K(0%) resident=0K(0%) swapped_out=0K(0%) unallocated=559.1M(100%)\r\n \r\n                                VIRTUAL   REGION \r\nREGION TYPE                        SIZE    COUNT (non-coalesced) \r\n===========                     =======  ======= \r\nActivity Tracing                   256K        1 \r\nCoreServices                        60K        1 \r\nKernel Alloc Once                    8K        1 \r\nMALLOC                           164.5M       24 \r\nMALLOC guard page                   16K        4 \r\nMALLOC_NANO (reserved)           384.0M        1         reserved VM address space (unallocated)\r\nSQLite page cache                   64K        1 \r\nSTACK GUARD                       56.0M        5 \r\nStack                             10.0M        5 \r\nVM_ALLOCATE                         44K        2 \r\n__DATA                            24.9M      317 \r\n__DATA_CONST                       426K       22 \r\n__FONT_DATA                          4K        1 \r\n__LINKEDIT                       389.1M        3 \r\n__OBJC_RO                         32.3M        1 \r\n__OBJC_RW                         1908K        2 \r\n__TEXT                           198.5M      320 \r\n__UNICODE                          564K        1 \r\nmapped file                       31.8M        5 \r\nshared memory                      636K       14 \r\n===========                     =======  ======= \r\nTOTAL                              1.3G      731 \r\nTOTAL, minus reserved VM space   911.1M      731 \r\n\r\n"
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-12-02T09:42:37Z",
        "body": "As far as I can tell this crash is not caused by yabai. If you check the list of binary images you will see that the yabai scripting addition is not loaded at the time of the crash. Also by looking at the stack trace of thread 0 (the crashed thread) it is not running code off the thread that yabai would inject: `0x102241000 - 0x102611fff com.apple.dock (1.8 - 2044.50.1) <9BC007E6-5D4C-3A56-84C5-998A2006215A> /System/Library/CoreServices/Dock.app/Contents/MacOS/Dock`\r\n\r\nBy looking at the error message I would assume that there is an issue with the objc-runtime *or* with the Dock binary itself.\r\n```\r\n*** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '-[__NSCFString unsignedIntValue]: unrecognized selector sent to instance 0x60000178a780'\r\nterminating with uncaught exception of type NSException\r\nabort() called\r\n```\r\n\r\nI'm not sure what the cause of the error would be, however I believe the following should trigger a relaunch of the Dock.\r\nAssuming the error above doesn't just magically disappear, I don't think this is going to help you:\r\n\r\n```\r\nlaunchctl unload -F /System/Library/LaunchAgents/com.apple.Dock.plist\r\nlaunchctl   load -F /System/Library/LaunchAgents/com.apple.Dock.plist\r\nlaunchctl start com.apple.Dock.agent\r\n```\r\n"
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-12-02T09:45:29Z",
        "body": "Note that yabai does not modify the binary on disk in any way. If you think yabai is causing a problem, simply run `sudo yabai --uninstall-sa` followed by `pkill Dock` and it *will be* back to normal, as if the scripting addition was never installed.\r\nIf the Dock fails to restart you can reload the launch service as mentioned in my comment above."
      },
      {
        "user": "atidyshirt",
        "created_at": "2020-12-02T09:48:33Z",
        "body": "> As far as I can tell this crash is not caused by yabai. If you check the list of binary images you will see that the yabai scripting addition is not loaded at the time of the crash. Also by looking at the stack trace of thread 0 (the crashed thread) it is not running code off the thread that yabai would inject: `0x102241000 - 0x102611fff com.apple.dock (1.8 - 2044.50.1) <9BC007E6-5D4C-3A56-84C5-998A2006215A> /System/Library/CoreServices/Dock.app/Contents/MacOS/Dock`\n> \n> By looking at the error message I would assume that there is an issue with the objc-runtime *or* with the Dock binary itself.\n> ```\n> *** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: '-[__NSCFString unsignedIntValue]: unrecognized selector sent to instance 0x60000178a780'\n> terminating with uncaught exception of type NSException\n> abort() called\n> ```\n> \n> I'm not sure what the cause of the error would be, however I believe the following should trigger a relaunch of the Dock.\n> Assuming the error above doesn't just magically appear, I don't think this is going to help you:\n> \n> ```\n> launchctl unload -F /System/Library/LaunchAgents/com.apple.Dock.plist\n> launchctl   load -F /System/Library/LaunchAgents/com.apple.Dock.plist\n> launchctl start com.apple.Dock.agent\n> ```\n> \n\nI have tried to restart the dock using this method, unfortunately to no success; I have opted for another clean install I will try to re-install my configs one last time and see if the issue persists.\n\nIt could be a corruption issue however this did occur to me again on a fresh install so I am not sure what to think\n\nThank you for your time and looking into this, and providing that information, I wonder if something in my dotfiles is causing a conflict but am not really sure how to test this."
      },
      {
        "user": "atidyshirt",
        "created_at": "2020-12-02T17:35:18Z",
        "body": "I feel a bit silly as I have found the issue, I think that I must have done a small catalina update that made me change the SIP disabling from \n\n> csrutil disable\n\nTo the partial disable used on big sur. This appears to stop the crash."
      }
    ]
  },
  {
    "number": 741,
    "title": "Native window/desktop switching moves windows between spaces",
    "created_at": "2020-11-30T20:24:32Z",
    "closed_at": "2020-12-01T18:08:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/741",
    "body": "To reproduce this:\r\n\r\n1. Create multiple spaces.\r\n2. Keep an app like a browser in space 1\r\n3. Have another an app in space 8 (say, a text editor)\r\n4. Cmd+Tab to pick the browser\r\n5. This should trigger OSX's native desktop change animation to bring space 1 (and desktop 1) into focus\r\n6. The app has moved from space 8 to space 2. Other windows have moved spaces too (if I were to guess, they all moved one space to the right)\r\n\r\nFor step 3, I can avoid using cmd+tab, but this behavior is unavoidable when for example, clicking openable links that triggers the native desktop-switch animation to bring the browser into focus.\r\n\r\nBasically, it seems like the native desktop change animation is garbling the assignment of windows to spaces. Any way to fix this? I'd like the windows to be pinned to specific spaces unless I reassign them myself.\r\n\r\nI'm on yabai-v3.1.0 and on MacOS Catalina 10.15.7.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/741/comments",
    "author": "lalithsuresh",
    "comments": [
      {
        "user": "lalithsuresh",
        "created_at": "2020-11-30T20:28:31Z",
        "body": "Also reproducible on yabai-v3.3.4"
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-12-01T08:26:11Z",
        "body": "Check this setting:\r\n\r\nIn the Mission Control preferences pane in System Preferences, the setting \"Automatically rearrange Spaces based on most recent use\" should be disabled for commands that rely on the ordering of spaces to work reliably."
      },
      {
        "user": "lalithsuresh",
        "created_at": "2020-12-01T18:08:22Z",
        "body": "That fixes it. Thanks!"
      }
    ]
  },
  {
    "number": 731,
    "title": "disable SIP on big sur",
    "created_at": "2020-11-20T16:40:09Z",
    "closed_at": "2020-11-20T16:55:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/731",
    "body": "i use this command as per wiki\r\n\r\n```\r\ncsrutil disable --with kext --with dtrace --with nvram --with basesystem\r\n```\r\n\r\nhowever, `csrutil status` still give me this\r\n\r\n\r\n```\r\nSystem Integrity Protection status: unknown (Custom Configuration).\r\n\r\nConfiguration:\r\n        Apple Internal: disabled\r\n        Kext Signing: enabled\r\n        Filesystem Protections: disabled\r\n        Debugging Restrictions: disabled\r\n        DTrace Restrictions: enabled\r\n        NVRAM Protections: enabled\r\n        BaseSystem Verification: enabled\r\n\r\nThis is an unsupported configuration, likely to break in the future and leave your machine in an unknown state.\r\n```\r\n\r\nwhich seesm dtrace/nvram and basesystem restriction still enabled",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/731/comments",
    "author": "tuananh",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-11-20T16:53:36Z",
        "body": "yep, that means its working as intended. yabai only requires filesystem protections and debugging restrictions to be disabled.¨\r\n\r\nEdit: the \"unsupported configuration\" warning can be safely ignored."
      },
      {
        "user": "tuananh",
        "created_at": "2020-11-20T16:55:08Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 727,
    "title": "How do I only tile certain apps?",
    "created_at": "2020-11-19T04:56:11Z",
    "closed_at": "2020-11-23T08:46:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/727",
    "body": "My current configuration is has the layout set to `bsp` to tile windows and I'm using a list of apps that are specifically disabled with `yabai -m rule --add manage=off app=\"$app\"`.\r\n\r\nI want to invert my configuration so that all apps float by default and I have a specific list of apps that are managed. How would I accomplish this? I tried setting the global mode to `float` and manually setting `manage=on` on those apps but it didn't work.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/727/comments",
    "author": "Hum4n01d",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-11-20T11:11:02Z",
        "body": "First set the space layout to bsp.\r\n\r\nThen `yabai -m rule --add app!=\"^(Safari|Finder|Notes)$\" manage=off `\r\n\r\nThis will float every app except Safari, Finder, and Notes."
      },
      {
        "user": "rockyzhang24",
        "created_at": "2020-11-20T15:09:50Z",
        "body": "Just for curiosity, why is that inverted way not correct? That is: setting the layout to float by `yabai -m config layout float` followed by setting a rule to make some windows be managed by `yabai -m rule --add app=\"^(Safari|Finder|Notes)$\" manage=on`. \r\nThank you!"
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-11-20T15:23:37Z",
        "body": "Floating spaces are not set up the same way; they are not initialized in a way that allowws for any tiling to happen, if that makes sense. They are simply \"left alone\". The space layout setting will override any potential modifier that is put on the window in this case.\r\n\r\nEdit:\r\nThe reason for this is simply that the additional complexity and introduction of potential error sources and edge-cases that has to be dealt with, is simply not worth it just for user convenience.  I understand that people may disagree, but this is not something that I am going to change."
      },
      {
        "user": "Hum4n01d",
        "created_at": "2020-11-23T08:46:28Z",
        "body": "Thank you!"
      },
      {
        "user": "benajaero",
        "created_at": "2022-12-19T13:36:19Z",
        "body": "this saved my life, you da goat no cap"
      },
      {
        "user": "zerone0x",
        "created_at": "2023-03-18T03:43:17Z",
        "body": "reaally good, I need to close yabai everytime when I use zoom"
      }
    ]
  },
  {
    "number": 719,
    "title": "How to focus most recent window in a space after switching spaces",
    "created_at": "2020-11-15T23:19:05Z",
    "closed_at": "2020-11-16T16:18:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/719",
    "body": "After switching spaces I often have to manually focus a window in that space, which gets really annoying really quickly. Instead I'd like yabai to always focus the most recent window in the space I'm in. I tried the following commands in my skhdrc (here shown for spaces 1 and 2):\r\n\r\n```\r\nalt - 1 : yabai -m space --focus 1 && yabai -m window --focus \"$(yabai -m query --windows --space | jq .[0].id)\"\r\nalt - 2 : yabai -m space --focus 2 && yabai -m window --focus \"$(yabai -m query --windows --space | jq .[0].id)\"\r\n```\r\n\r\nbut those didn't seem to solve anything.\r\n\r\nBtw, I have `When switching to an application, switch to a Space with open windows for the application` unchecked in System Preferences -> Mission Control.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/719/comments",
    "author": "noib3",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-11-16T15:38:14Z",
        "body": "You can use the following signal(s):\r\n\r\n```\r\n# focus window after active space changes\r\nyabai -m signal --add event=space_changed action=\"yabai -m window --focus \\$(yabai -m query --windows --space | jq .[0].id)\"\r\n\r\n# focus window after active display changes\r\nyabai -m signal --add event=display_changed action=\"yabai -m window --focus \\$(yabai -m query --windows --space | jq .[0].id)\"\r\n```\r\n\r\nNo need to modify your focus binds."
      },
      {
        "user": "noib3",
        "created_at": "2020-11-16T16:18:50Z",
        "body": "Thanks, that solved it!"
      },
      {
        "user": "badloop",
        "created_at": "2023-02-14T15:04:03Z",
        "body": "For anyone still running into this issue, I found that Microsoft Teams was usurping the 0 spot in the window array on space that it had been seen on (Great job, Microsoft.... :-( ) I tend to have a single space for most of my windows that is labeled with the name of the application that will be open on it, so I wrote a little helper function using the above so that whenever I switch to a space, it will focus the window that has the same name as the space.  Hope this helps!\r\n\r\n```bash\r\nfocus_window () {\r\n    SPACE_NAME=$(yabai -m query --spaces --space | jq \".label\")\r\n    WINDOW_ID=$(yabai -m query --windows --space | jq \".[] | select (.app=${SPACE_NAME}).id\")\r\n    yabai -m window --focus \"${WINDOW_ID}\"\r\n}\r\n\r\n# focus window after active space changes\r\nyabai -m signal --add event=space_changed action=\"focus_window\"\r\n\r\n# focus window after active display changes\r\nyabai -m signal --add event=display_changed action=\"focus_window\"\r\n```\r\n"
      },
      {
        "user": "Arelav",
        "created_at": "2023-06-30T15:07:39Z",
        "body": "@koekeishiya Thanks a lot. \r\n> No need to modify your focus binds.\r\n\r\nI'll leave it here just in case it won't work for somebody as in my case. I had a floating MS Teams window and to make it work I changed it to `jq .[-1].id` to use a last window.\r\n"
      },
      {
        "user": "webavant",
        "created_at": "2024-04-04T22:04:52Z",
        "body": "Using a third-party tool, `synergy-core`, I had the same problem @badloop mentioned above. A working solution included selecting the first visible window using `jq`:\r\n\r\n```shell\r\nyabai -m signal --add event=space_changed action='yabai -m window --focus $(yabai -m query --windows --space | jq -r '\\''[.[]|select(.\"is-visible\")][0].id'\\'')'\r\n```"
      }
    ]
  },
  {
    "number": 718,
    "title": "Focusing a display with an empty space moves the cursor to the center of that display",
    "created_at": "2020-11-14T16:59:23Z",
    "closed_at": "2020-12-11T13:38:58Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/718",
    "body": "Hi!\r\nWhen using `yabai -m display --focus 2` to switch focus to my second monitor, if that monitor is on a space with no windows my cursor moves to the center of that monitor.\r\n\r\nMy use of that is assigning a mouse button to\r\n```\r\nmouse_display=$(yabai -m query --displays --display mouse | jq .index) && \\\r\nyabai -m display --focus $mouse_display && \\\r\nyabai -m space --focus \"$(yabai -m query --spaces --display \\\r\n| jq 'reverse | nth(index(map(select(.focused == 1))) - 1).index')\"\r\n```\r\nto switch spaces on the display below the cursor. Doing so my mouse jumps to the center which I don't want.\r\n\r\nIs there a workaround to that? Is it a deliberate behaviour? Thanks.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/718/comments",
    "author": "Vermoot",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-11-14T17:09:20Z",
        "body": "This is intended, as there is no other way to actually switch focus to a monitor that has no open windows on its active space. No workaround as far as I know."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-12-11T13:38:58Z",
        "body": "Closing this as there doesn't seem to be a good way to resolve this."
      }
    ]
  },
  {
    "number": 717,
    "title": "Cant install via Homebrew on 11.0.1",
    "created_at": "2020-11-14T16:56:04Z",
    "closed_at": "2020-11-14T20:42:05Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/717",
    "body": "I tried to install yabai on big sur but it fails with the following error:\r\nError: An exception occurred within a child process:\r\nErrno::EACCES: Permission denied @ dir_s_mkdir - /usr/local/var/log",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/717/comments",
    "author": "MoSchaub",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-11-14T17:08:09Z",
        "body": "Sounds like some permissions are messed up with your homebrew installation."
      },
      {
        "user": "MoSchaub",
        "created_at": "2020-11-14T18:32:17Z",
        "body": "Homebrew Doctor says it works fine"
      },
      {
        "user": "24unix",
        "created_at": "2020-11-14T18:35:21Z",
        "body": "Try\r\nls -las /usr/local\r\nls -las /usr/local/var\r\nls -las /usr/local/var/log\r\n\r\nand tell us the output.\r\n\r\nIf the last one fails, just do \"mkdir -p /usr/local/var/log\"\r\n"
      },
      {
        "user": "MoSchaub",
        "created_at": "2020-11-14T20:42:05Z",
        "body": "Ok i fixed it by creating the /usr/local/var/log directory and then changing the ownership of the directory and retried: worked perfectly"
      }
    ]
  },
  {
    "number": 712,
    "title": "Focusing desktop not working on Big Sur",
    "created_at": "2020-11-13T00:59:12Z",
    "closed_at": "2020-11-13T16:21:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/712",
    "body": "Attempting to focus a desktop via `yabai -m window --space 2` does not work. I tried running `sudo yabai --load-sa` but the issue persists.\r\n\r\nEdit: To add, window shadows and opacity are also not working.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/712/comments",
    "author": "capaldo",
    "comments": [
      {
        "user": "marcusmyers",
        "created_at": "2020-11-13T03:48:20Z",
        "body": "When running the `sudo yabai --load-sa` I get the following error:\r\n\r\n```\r\ncould not retrieve task port for pid: 3849\r\nyabai: scripting-addition failed to inject payload into Dock.app!\r\n```\r\n\r\n@capaldo Is that what you receive as well?"
      },
      {
        "user": "SxC97",
        "created_at": "2020-11-13T03:54:37Z",
        "body": "I get the following error when running `sudo yabai --load-sa`\r\n\r\n```\r\ncould not load bootstrap object file\r\nyabai: scripting-addition failed to inject payload into Dock.app!\r\n```"
      },
      {
        "user": "chilledsaint0716",
        "created_at": "2020-11-13T07:37:38Z",
        "body": "Attempting to focus a desktop via `yabai -m space --focus 3` does not work either.\r\nI got the following error:\r\n`cannot focus space due to an error with the scripting-addition.`"
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-11-13T08:48:52Z",
        "body": "Make sure sip is (partially) disabled, and reinstall the scripting-addition. check the wiki for installation instructions."
      },
      {
        "user": "chilledsaint0716",
        "created_at": "2020-11-13T10:05:50Z",
        "body": "sudo yabai --uninstall-sa\r\nsudo yabai --install-sa\r\nsudo yabai --load-sa\r\n\r\nfixed, thx bro."
      },
      {
        "user": "zakroma",
        "created_at": "2020-11-13T11:31:34Z",
        "body": "Reinstalling and reloading SA doesn't work for me. It does work until the reboot/logout. Then it doesnt work, trying the `sudo yabai --load-sa` results in \"Payload doesn't support this macOS version!\"\r\n\r\nReinstalling yabai and skhd does nothing too.\r\n\r\n**Update:**\r\nFor some reason `tail -f /usr/local/var/log/yabai/yabai.err.log` showed that there was an error in my .yabairc:\r\n`/Users/zakroma/.yabairc: line 1: !/usr/bin/env: No such file or directory`\r\n\r\nchanging `!/usr/bin/env sh` --> `#!/usr/bin/env zsh`\r\nhas completely fixed all the problems!"
      },
      {
        "user": "capaldo",
        "created_at": "2020-11-13T16:21:03Z",
        "body": "> Reinstalling and reloading SA doesn't work for me. It does work until the reboot/logout. Then it doesnt work, trying the `sudo yabai --load-sa` results in \"Payload doesn't support this macOS version!\"\r\n> \r\n> Reinstalling yabai and skhd does nothing too.\r\n> \r\n> **Update:**\r\n> For some reason `tail -f /usr/local/var/log/yabai/yabai.err.log` showed that there was an error in my .yabairc:\r\n> `/Users/zakroma/.yabairc: line 1: !/usr/bin/env: No such file or directory`\r\n> \r\n> changing `!/usr/bin/env sh` --> `!/usr/bin/env zsh`\r\n> has completely fixed all the problems!\r\n\r\nThis worked. Thank you @koekeishiya and @zakroma."
      },
      {
        "user": "24unix",
        "created_at": "2020-11-13T16:29:09Z",
        "body": "@capaldo That seems strange.\r\n\r\nThis ist a fresh Big Sur upgrade:\r\n`╰─➤  file /bin/sh\r\n\r\n/bin/sh: Mach-O universal binary with 2 architectures: [x86_64:Mach-O 64-bit executable x86_64] [arm64e:Mach-O 64-bit executable arm64e]\r\n\r\n/bin/sh (for architecture x86_64):\tMach-O 64-bit executable x86_64\r\n/bin/sh (for architecture arm64e):\tMach-O 64-bit executable arm64e\r\n\r\n╰─➤  /usr/bin/env sh\r\n\r\nsh-3.2$\r\n`\r\nHowever, your shebang (#!) is missing the hash sign."
      },
      {
        "user": "capaldo",
        "created_at": "2020-11-13T16:32:22Z",
        "body": "> @capaldo That seems strange.\n> \n> \n> \n> This ist a fresh Big Sur upgrade:\n> \n> `╰─➤  file /bin/sh\n> \n> \n> \n> /bin/sh: Mach-O universal binary with 2 architectures: [x86_64:Mach-O 64-bit executable x86_64] [arm64e:Mach-O 64-bit executable arm64e]\n> \n> \n> \n> /bin/sh (for architecture x86_64):\tMach-O 64-bit executable x86_64\n> \n> /bin/sh (for architecture arm64e):\tMach-O 64-bit executable arm64e\n> \n> \n> \n> ╰─➤  /usr/bin/env sh\n> \n> \n> \n> sh-3.2$\n> \n> `\n> \n> However, your shebang (#!) is missing the hash sign.\n\nI added it with a hash sign.\n"
      },
      {
        "user": "24unix",
        "created_at": "2020-11-13T16:37:11Z",
        "body": "What gives \"file /bin/sh\" and \"/usr/bin/env sh\"?"
      },
      {
        "user": "zakroma",
        "created_at": "2020-11-13T16:55:20Z",
        "body": "> What gives \"file /bin/sh\" and \"/usr/bin/env sh\"?\r\n\r\nNot sure I got what you're asking, but I've changed mine to `#!/bin/zsh` as using the env tool resulted in errors."
      },
      {
        "user": "24unix",
        "created_at": "2020-11-13T16:58:06Z",
        "body": "Try to execute whats inside the quotes, as mine is working with #!/usr/bin/env sh"
      },
      {
        "user": "zakroma",
        "created_at": "2020-11-13T17:03:39Z",
        "body": "> Try to execute whats inside the quotes, as mine is working with #!/usr/bin/env sh\r\n\r\nResults in the same output that you mentioned above.\r\n\r\nAdding a proper shebang actually does fix the problem. "
      },
      {
        "user": "24unix",
        "created_at": "2020-11-13T17:05:06Z",
        "body": "👍"
      }
    ]
  },
  {
    "number": 695,
    "title": "Find if a window is recently focused through yabai",
    "created_at": "2020-10-19T00:39:34Z",
    "closed_at": "2020-11-16T15:44:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/695",
    "body": "This information is stored somewhere, but unclear how to access it.\r\nI don't think one can find it through query. \r\n\r\nAlso some things lacking in the query is checking if a window is picture-in-picture. ",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/695/comments",
    "author": "chaoxu",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-10-21T17:46:36Z",
        "body": "You can do `yabai -m query --windows --window recent`. yabai does not track full focus history."
      },
      {
        "user": "chaoxu",
        "created_at": "2020-10-22T01:38:56Z",
        "body": "Thank you.\r\n\r\nIs that a new feature? The response when I run it is `could not locate the selected window.`\r\n\r\nI'm running 10.15.7, and yabai 3.3.0."
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-11-16T15:44:39Z",
        "body": "Not a new feature. That is the output when yabai determines that there was no recent window, or that the recent window is invalid (no longer exists)."
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-11-16T15:45:23Z",
        "body": "The query output will be refined in a future version, including things like pip if it doesn't get scrapped by then."
      }
    ]
  },
  {
    "number": 684,
    "title": "yabai-m display --focus sometimes mysteriously fails",
    "created_at": "2020-10-07T18:24:24Z",
    "closed_at": "2022-09-23T00:41:28Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/684",
    "body": "Hello again,\r\n\r\nThanks once again for making such a fantastic tool.\r\n\r\nI've encountered a rather curious bug when trying to change focus from one display to another. \r\nI have 3 displays. \r\n\r\nIf i run command `yabai -m display --focus 2`, focus jumps instead to display index 1. this happens regardless of which dispaly I'm on when I run the command.\r\nIf I run command `yabai -m window --display 2 && yabai -m display --focus 2` (ie \"move window to display and follow), the window moves to display 2, but focus still jumps to display 1\r\n\r\nNone of this happens if i try to focus or move a window from any of the displays to any other display, only happens when moving to / focussing display 2\r\n\r\nStranger still, this only happens if that display is on a particular space. If I switch to a different space on that display, the problem goes away and everything works as expected.\r\n\r\nI'm not sure what kind of information you need to troubleshoot this, but here's everything I can gather right now.\r\n\r\n`yabai -m query --displays`:\r\n```json\r\n[{\r\n        \"id\":69975444,\r\n        \"uuid\":\"E7522739-5F2D-3324-7F3B-1D331987BAAF\",\r\n        \"index\":1,\r\n        \"spaces\":[1, 2, 3, 4, 5, 6, 7, 8],\r\n        \"frame\":{\r\n                \"x\":0.0000,\r\n                \"y\":0.0000,\r\n                \"w\":2048.0000,\r\n                \"h\":1152.0000\r\n        }\r\n},{\r\n        \"id\":722478418,\r\n        \"uuid\":\"6AA1F64E-7740-27B7-24C8-B79F6DA2E03F\",\r\n        \"index\":3,\r\n        \"spaces\":[12, 13],\r\n        \"frame\":{\r\n                \"x\":-1920.0000,\r\n                \"y\":36.0000,\r\n                \"w\":1920.0000,\r\n                \"h\":1080.0000\r\n        }\r\n},{\r\n        \"id\":722489923,\r\n        \"uuid\":\"80FC8E10-0500-33C8-163C-6BB492C35848\",\r\n        \"index\":2,\r\n        \"spaces\":[9, 10, 11],\r\n        \"frame\":{\r\n                \"x\":2048.0000,\r\n                \"y\":-382.0000,\r\n                \"w\":1080.0000,\r\n                \"h\":1920.0000\r\n        }\r\n}]\r\n```\r\n\r\nspace number 9 is the one where it's not working.\r\n`yabai -m query --spaces --space 9`:\r\n```json\r\n{\r\n        \"id\":16,\r\n        \"label\":\"\",\r\n        \"index\":9,\r\n        \"display\":2,\r\n        \"windows\":[136151, 136150, 62193, 73700, 126633],\r\n        \"type\":\"bsp\",\r\n        \"visible\":1,\r\n        \"focused\":0,\r\n        \"native-fullscreen\":0,\r\n        \"first-window\":62193,\r\n        \"last-window\":73700\r\n}\r\n```\r\n\r\nand when display 2 is on space 10, everything works\r\n`yabai -m query --spaces --space 10`:\r\n```json\r\n{\r\n        \"id\":14,\r\n        \"label\":\"\",\r\n        \"index\":10,\r\n        \"display\":2,\r\n        \"windows\":[75069],\r\n        \"type\":\"bsp\",\r\n        \"visible\":1,\r\n        \"focused\":0,\r\n        \"native-fullscreen\":0,\r\n        \"first-window\":75069,\r\n        \"last-window\":75069\r\n}\r\n```\r\n\r\nAny thoughts?\r\n\r\nAny other info you'd like me to grab?\r\n",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/684/comments",
    "author": "alextremblay",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-11-14T17:38:03Z",
        "body": "This sounds like some bizarre issue caused by some macOS cache or something. My suggestion would be to destroy all spaces on display 2 and re-create them one by one. "
      },
      {
        "user": "alextremblay",
        "created_at": "2022-09-23T00:48:46Z",
        "body": "Hi koekeishya,\r\n\r\napologies for not getting back to you regarding this, i completely missed the notification regarding your suggestion. \r\n\r\nI did as you suggested, and that did indeed fix the problem... for a while, and then it came back.\r\n\r\nI've since switched over to Amethyst (sorry), and I still occasionally experience the same issue, but not as often. I suspect this has something to do with the fact that two of my 3 displays are displaylink displays, not real displays (I'm on am M1 macbook, which only supports one external display). I should have mentioned this at the time, but i hadn't even considered it as a potential culprit.\r\n\r\nI think this is a displaylink+macos bug, far beyond yabai's ability to fix, you were right to close this ticket.\r\n\r\nCheers"
      }
    ]
  },
  {
    "number": 674,
    "title": "Question: is it possible to auto-stack new windows?",
    "created_at": "2020-09-28T14:14:40Z",
    "closed_at": "2020-09-28T14:45:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/674",
    "body": "Hello,\r\n\r\nFisrt off, that you for making yabai and being so incredibly helpful to those who use it. it's appreciated :)\r\n\r\nIs it possible to configure (on a per-space basis or globally) a rule like `yabai -m window --insert stack`, so that new windows created in that space automatically stack onto the most recent window?\r\n\r\nMy use case is that I really like stacks, but i also really like bsp layout and the ability to have more than one stack in a given space.\r\nIf i set the layout of a space to `bsp`, i can have multiple stacks but all new windows cause splits\r\nIf i set the layout of a space to `stack`, all new windows stack, but it's no longer possible to split a stack and have multiple stacks\r\n\r\nI'm stuck on this one. Any advice or direction would be greatly appreciated",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/674/comments",
    "author": "alextremblay",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2020-09-28T14:22:04Z",
        "body": "You can cause the next insertion to happen in `stack` mode on the focused window whenever the focused window changes:\r\n\r\n```\r\nyabai -m signal --add event=window_focused action='yabai -m window $YABAI_WINDOW_ID --insert stack'\r\nyabai -m signal --add event=application_front_switched action='yabai -m window --insert stack'\r\n```\r\n\r\nYou can hide the insertion overlay by setting the config option `insert_feedback_color`.\r\n\r\n```\r\nyabai -m config insert_feedback_color 0x00FFFFFF\r\n```"
      },
      {
        "user": "alextremblay",
        "created_at": "2020-09-28T14:45:43Z",
        "body": "awesome, thank you!\r\n\r\nThat's almost perfect\r\n\r\nThe only time it fails is if you close a window and create a new one. I added \r\n```\r\nyabai -m signal --add event=application_terminated action='yabai -m window --insert stack'\r\nyabai -m signal --add event=window_destroyed action='yabai -m window --insert stack'\r\n```\r\nand now it's working great.\r\n\r\nThank you so much!"
      },
      {
        "user": "stefanopagliari",
        "created_at": "2022-06-28T20:40:02Z",
        "body": "@alextremblay and @dominiklohmann thank you for this. It largely address what I was looking for.\r\nWould it be possible to modify this so that new windows are stacked only if there are currently 3 windows on the screen?\r\nI have a wide-screen and by default I prefer not to have more than three windows"
      },
      {
        "user": "pyinto",
        "created_at": "2024-01-05T14:18:41Z",
        "body": "> awesome, thank you!\r\n> \r\n> That's almost perfect\r\n> \r\n> The only time it fails is if you close a window and create a new one. I added\r\n> \r\n> ```\r\n> yabai -m signal --add event=application_terminated action='yabai -m window --insert stack'\r\n> yabai -m signal --add event=window_destroyed action='yabai -m window --insert stack'\r\n> ```\r\n> \r\n> and now it's working great.\r\n> \r\n> Thank you so much!\r\n\r\nDoes this still work for you? Did you add anything else? I still see that windows sometimes open not in the stack.\r\n"
      },
      {
        "user": "gennaro-tedesco",
        "created_at": "2024-11-29T08:42:39Z",
        "body": "I too see no effect in `bsp` layouts with the above configurations, namely new windows still open in a new tile (horizontal or vertical) rather than stack on the existing ones. "
      }
    ]
  },
  {
    "number": 671,
    "title": "How to split a stack when it's the only node in the current bsp tree?",
    "created_at": "2020-09-25T17:58:48Z",
    "closed_at": "2020-09-28T14:05:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/671",
    "body": "Hello,\r\n\r\nI recently discovered the newly-added stack feature of yabai, and I'm super excited to start using it\r\n\r\nI've figured out how to combine all the windows in a given space into a stack, but i'm having trouble figuring out how to split a window off of the stack.\r\n\r\nI can see in the documentation for `yabai -m window --stack` it says \"Any kind of warp operation performed on a stacked window will unstack it.\"\r\nbut when i try to break a window out of the stack into a new split, I try `yabai -m window --warp east` and I get `could not locate a eastward managed window`\r\n\r\nBasically, the use case I'm trying to achieve is this:\r\n1. Have a particular space which is stacked by default, all new windows are stacked onto the first stack\r\n2. split the stack horizontally, with topmost window of stack moving into its own space on the right, and the rest of the stack remaining on the left\r\n3. move additional windows from the main stack to the right, stacking onto the existing window / stack on the right\r\n4. move windows on the right stack back to the main stack, one by one, until all windows are merged and the whole space is one single stack\r\n\r\nIf my use case is doable, I'd love to get any guidance I can on how to accomplish it. Thank you!\r\n",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/671/comments",
    "author": "alextremblay",
    "comments": [
      {
        "user": "Liquidmantis",
        "created_at": "2020-09-25T18:04:00Z",
        "body": "Are you setting the space to stacking mode in order to collect all the windows to a stack?  If not, and your space is still in bsp, I wonder if it would work to pop a window off the stack by setting it to floating, then setting it to bsp.  That might create a split.  Unfortunately, I drunkenly decided to try the Big Sur beta and can't really run Yabai to be able to test right now."
      },
      {
        "user": "alextremblay",
        "created_at": "2020-09-25T18:05:58Z",
        "body": "For item 1, I see that I can set a space to `--layout stack`, which is perfect, but i don't know if i can then split the stack if the whole space layout is stack?\r\n\r\nFor item 3 and 4 I've got this working, which is nice: `yabai -m window <east|west> --stack $(yabai -m query --windows --window | jq '.id')`"
      },
      {
        "user": "alextremblay",
        "created_at": "2020-09-25T18:08:55Z",
        "body": "@Liquidmantis well there's an idea... toggle the window float property twice, forcing it to re-enter bsp as a split, instead of a stacked window\r\n\r\nThat works if the space layout is bsp, but not if the space layout is stack\r\nBut if the space layout is bsp, then all new windows get split instead of stacked...\r\n\r\nunless i create a rule to stack all newly-created windows..."
      },
      {
        "user": "alextremblay",
        "created_at": "2020-09-25T19:32:23Z",
        "body": "Ok, so I've got partial success... \r\nI've got a \"stack current window to the right or make split if no stack command\" command:\r\n`window=$(yabai -m query --windows --window | jq -r '.id') && yabai -m window east --stack $window || yabai -m window $window --toggle float && yabai -m window $window --toggle float`\r\n\r\nIf there's no split, it will successfully create a split. and if there is a split, it will move the current window to the region of the eastward window, but won't stack. it will leave the current window floating. I can't figure out why"
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-09-26T11:00:00Z",
        "body": "You need proper precedence for your commands. This should work:\r\n```\r\n window=$(yabai -m query --windows --window | jq -r '.id') && yabai -m window east --stack $window || (yabai -m window $window --toggle float && yabai -m window $window --toggle float)\r\n```"
      },
      {
        "user": "alextremblay",
        "created_at": "2020-09-28T14:05:25Z",
        "body": "That was exactly what I needed. Thank you so much!\r\n\r\nFor reference, I've now got it set up as a bash script called `stack`, triggered by skhd with arrow keys:\r\n```\r\n#!/usr/bin/env bash\r\n\r\ndir=$1\r\n# dir should be one of east,west,north,south\r\n\r\nwindow=$(yabai -m query --windows --window | jq -r '.id') \r\n\r\n# Stack this window onto existing stack if possible\r\nyabai -m window $dir --stack $window \r\nif [[ $? -ne 0 ]]; then\r\n    # otherwise, float and un-float this window to reinsert it into \r\n    # the bsp tree as a new window\r\n    yabai -m window --insert $dir\r\n    yabai -m window $window --toggle float \r\n    yabai -m window $window --toggle float\r\nfi\r\n```\r\n\r\nso far it's working really well :)"
      },
      {
        "user": "b4rlw",
        "created_at": "2022-04-27T15:37:57Z",
        "body": "Also, if you use this code, don't forget `brew install jq` like I did, may save you half an hour :)"
      },
      {
        "user": "bangedorrunt",
        "created_at": "2022-09-25T02:38:13Z",
        "body": "@alextremblay many thanks for the script. it's working really well\r\nAlways wish `Yabai` has its own stack layout  so we don't have to do these workarounds :(                                                                                                                                                                                                                          "
      }
    ]
  },
  {
    "number": 670,
    "title": "Switch space on currently focused monitor",
    "created_at": "2020-09-25T10:35:47Z",
    "closed_at": "2020-09-25T21:11:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/670",
    "body": "Hi, this is more of a question. I was wondering if it is possible to tell yabai to switch space based on where the mouse is?\r\n\r\nI have two monitors and I want to be able to use a shortcut to switch spaces based on where the mouse, like this:\r\n\r\n```\r\nyabai -m space --focus 2 --display mouse\r\n```\r\n\r\nUnfortunately `--display mouse` seems to move the mouse in the second space\r\n\r\nIs something like this possible?",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/670/comments",
    "author": "patrick91",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-09-25T11:13:05Z",
        "body": "The following will focus the 2nd space on the display that has the mouse cursor.\r\n```\r\nyabai -m space --focus $(yabai -m query --displays --display mouse | jq -r '.spaces[1]') \r\n```\r\nAlternatively you can remove the mouse selector for it to default to the currently focused display (according to macOS):\r\n```\r\nyabai -m space --focus $(yabai -m query --displays --display | jq -r '.spaces[1]') \r\n``` \r\n\r\nThe command above will query information of the display that currently holds the mouse cursor (or the currently focused display), select the spaces list and return the value in the specified index of the array. The unfiltered output looks like this:\r\n```\r\n~ yabai -m query --displays --display mouse                                                                                                                                                     \r\n{\r\n        \"id\":69731904,\r\n        \"uuid\":\"F466F621-B5FA-04A0-0800-CFA6C258DECD\",\r\n        \"index\":1,\r\n        \"spaces\":[1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\r\n        \"frame\":{\r\n                \"x\":0.0000,\r\n                \"y\":0.0000,\r\n                \"w\":1440.0000,\r\n                \"h\":900.0000\r\n}\r\n```"
      },
      {
        "user": "patrick91",
        "created_at": "2020-09-25T21:11:42Z",
        "body": "That's awesome, thank you! Works pretty well!"
      }
    ]
  },
  {
    "number": 662,
    "title": "Not managed applications not returning focus anywhere after being closed",
    "created_at": "2020-09-14T20:47:56Z",
    "closed_at": "2020-11-16T15:58:26Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/662",
    "body": "I've installed toggl and added rule to not manage it by adding to configuration:\r\n`yabai -m rule --add label=\"Toggl Track\" app=\"^Toggl Track$\" title=\"^Toggl Track$\" manage=off`\r\nThat seems to work (toggl window is not arranged automatically) but when I activate toggle and then deactivate it either by shortcut or by clicking \"x\" focus does not return to the previous window. Navigating north/south/west/east does not bring window focus back (nothing happens visually). Logs saying that Yabai tries to do a switch (likely because there is no \"current\" window commands fail:\r\n```\r\nEVENT_HANDLER_DAEMON_MESSAGE: window --focus west\r\nEVENT_HANDLER_DAEMON_MESSAGE: window --focus east\r\nEVENT_HANDLER_DAEMON_MESSAGE: window --focus north\r\nEVENT_HANDLER_DAEMON_MESSAGE: window --focus south\r\n```\r\n Switching to another space or clicking on window with mouse reactivates focus.  \r\n\r\nRelevant log part (toggl activated and deactivated, nothing happens afterward):\r\n```\r\nEVENT_HANDLER_APPLICATION_FRONT_SWITCHED: Toggl Track (93083)\r\nEVENT_HANDLER_APPLICATION_DEACTIVATED: iTerm2\r\nEVENT_HANDLER_APPLICATION_ACTIVATED: Toggl Track\r\nwindow_manager_create_and_add_window: Toggl Track 66273\r\nEVENT_HANDLER_WINDOW_FOCUSED: Toggl Track 66273\r\nEVENT_HANDLER_DISPLAY_CHANGED: 459140280 7\r\nwindow_manager_create_and_add_window: ignoring AXUnknown window Steam 2735\r\nwindow_manager_create_and_add_window: ignoring AXUnknown window Finder 58458\r\nwindow_manager_create_and_add_window: ignoring AXUnknown window Finder 58460\r\nEVENT_HANDLER_WINDOW_FOCUSED: Toggl Track 66273\r\nEVENT_HANDLER_WINDOW_DESTROYED: Toggl Track 66273\r\n```\r\nChecked with Activity Monitor and it shows the same behavior.\r\nENV:\r\nMacOS Catalina 10.15.6",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/662/comments",
    "author": "ArtemM",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-11-14T19:18:06Z",
        "body": "This is a macOS issue. yabai does not override focus in any way unless a focus command is initiated by the user.\r\nI don't think there is much that can be done here from our pov."
      }
    ]
  },
  {
    "number": 639,
    "title": "Make -m window --focus iterative",
    "created_at": "2020-08-14T06:58:23Z",
    "closed_at": "2020-08-14T12:49:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/639",
    "body": "I can't afford having 4 (or even 2 with `next` and `prev`) keys just to focus windows. I'd like it to be iterative so that when it reaches last window, it starts again. This way I'll be able to use just `--focus next` to focus all the windows in current space. Actually it's a built-in feature in OS X (Keyboard -> Shortcuts -> Keyboard -> Move focus to active or next window), but it's clunky, I suppose because of \"active\" part, which means that sometimes if I move to some space and use this shortcut it returns me to the previous space.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/639/comments",
    "author": "ohaponiuk",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2020-08-14T08:39:11Z",
        "body": "yabai returns a non-zero exit code if a command failed, which you can use to implement wraparound:\r\n\r\n```bash\r\n# cycle forwards\r\nyabai -m window next || yabai -m window first\r\n\r\n# cycle backwards\r\nyabai -m window prev || yabai -m window last\r\n```"
      },
      {
        "user": "kiryph",
        "created_at": "2021-12-30T10:42:44Z",
        "body": "In the code snippet of @dominiklohmann `--focus` is missing\r\n```\r\n# cycle forwards\r\nyabai -m window --focus next || yabai -m window --focus first\r\n\r\n# cycle backwards\r\nyabai -m window --focus prev || yabai -m window --focus last\r\n```"
      }
    ]
  },
  {
    "number": 634,
    "title": "Ability to mark windows and focus previous marks",
    "created_at": "2020-08-06T16:53:06Z",
    "closed_at": "2020-08-09T01:43:26Z",
    "labels": [
      "question",
      "suggestion"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/634",
    "body": "What would your thoughts be on marking functionality, similar to in VIM? i.e. `yabai -m window --mark d`, then do whatever, then later `yabai -m window --focus-mark d` will focus the window that was focused during the first command.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/634/comments",
    "author": "NickvanDyke",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2020-08-07T06:38:46Z",
        "body": "Labels are only supported for spaces currently, but not for windows. \r\n\r\nIf labels were supported for windows as well, you'd be able to use this:\r\n\r\n```bash\r\n# fictive syntax\r\nyabai -m window --label test\r\nyabai -m window --focus test\r\n```\r\n\r\nWith yabai as is, you could use the window identifier, which happens to be a valid window selector.\r\n\r\n```bash\r\n# get the id of the focused window\r\nid=\"$(yabai -m query --windows --window | jq '.id')\"\r\n\r\n# later: focus the window by its id\r\nyabai -m window --focus \"$id\"\r\n```"
      },
      {
        "user": "NickvanDyke",
        "created_at": "2020-08-09T01:43:23Z",
        "body": "Ah, good point, I hadn't thought of that! Thanks!"
      }
    ]
  },
  {
    "number": 623,
    "title": "Is it possible to draw/move a window off screen?",
    "created_at": "2020-07-22T19:47:53Z",
    "closed_at": "2020-07-23T09:03:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/623",
    "body": "Hey @koekeishiya 👋 \r\n\r\nWondering if it's possible to intentionally draw/move an application window off the screen?  \r\nI'd like to have an application running which I can Cmd+Tab to to gain focus, but I don't want it displayed (minimization isn't an option).\r\n\r\nIf not, I'm sure I could cook up my own little patch to use personally, I just wanted to see if it was possible natively.\r\n",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/623/comments",
    "author": "cmacrae",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2020-07-22T20:15:15Z",
        "body": "You can move a _floating_ window to the bottom right side of the screen such that it is barely visible.\r\n\r\n```sh\r\nyabai -m window --move abs:10000:10000\r\n```\r\n\r\nDid you consider minimizing the window using yabai, or moving it to a temporary space that you create ad-hoc?"
      },
      {
        "user": "cmacrae",
        "created_at": "2020-07-23T09:03:39Z",
        "body": "Thanks @dominiklohmann 🙌   \r\nI'd prefer to avoid minimize, as I effectively want to frequently give the window focus using Cmd+Tab, but not display it, and have that all happen without interrupting my current workspace/window setup (so, don't want to minimize/unminimize or switch spaces).\r\n\r\nThanks! This is good enough for me 😁 "
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-07-23T09:19:12Z",
        "body": "Note: If you hold <kbd>option</kbd> before releasing <kbd>command</kbd> when using <kbd>command</kbd> + <kbd>tab</kbd>, you force the target application's windows to be deminimized."
      }
    ]
  },
  {
    "number": 618,
    "title": "application_launched action for Google Chrome",
    "created_at": "2020-07-21T10:11:01Z",
    "closed_at": "2020-07-22T06:21:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/618",
    "body": "I've been managing yabai so that some applications that use small windows start as floating and upon launch they would automatically become tiled, so that the subsequent windows that said app creates are still floating, while the main one is tiled.\r\nThis is the case of Mail for me, which works like a charm, but I cannot make Google Chrome follow said pattern.\r\n\r\nHere is the code I use which works for Mail but has no effect on Google Chrome, am I missing something or is this a known issue?\r\n\r\n\r\n\r\n`yabai -m signal --add event=application_launched app='^Mail$' action='yabai -m window --toggle float'`\r\n`yabai -m signal --add event=application_launched app='^Google Chrome$' action='yabai -m window --toggle float'`\r\n\r\n\r\n\r\nIf any extra info is neeeded I am more than happy to look for what is causing the issue!",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/618/comments",
    "author": "jorgebef",
    "comments": [
      {
        "user": "Chandru-B",
        "created_at": "2020-07-21T20:20:02Z",
        "body": "I had a similar issue with Google Chrome. I had to quit google chrome with ⌘Q and relaunch sometimes."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-07-22T05:56:15Z",
        "body": "The `application_launched` signal may trigger before the windows are restored. This looks like a timing issue in your signal to me, since you simply look for the active window (default selector)."
      },
      {
        "user": "jorgebef",
        "created_at": "2020-07-22T06:21:30Z",
        "body": "> The `application_launched` signal may trigger before the windows are restored. This looks like a timing issue in your signal to me, since you simply look for the active window (default selector).\r\n\r\nYou were absolutely right, it apparently triggers before there is a window to even be selected!\r\n\r\nFor future reference if anyone encounters this problem, I just solved it with a simple sleep command as such:\r\n`yabai -m signal --add event=application_launched app='^Google Chrome$' action='sleep 0.7 && yabai -m window --toggle float'`\r\n\r\nIssue closed!"
      }
    ]
  },
  {
    "number": 611,
    "title": "Add focus_follows_mouse autofocus only until a key pressed",
    "created_at": "2020-07-16T00:57:55Z",
    "closed_at": "2020-08-11T12:53:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/611",
    "body": "It would be great if we could have autofocus but only until a key is pressed on the keyboard, that would be very useful because a lot of times you only want the focus to write or use a keyboard shortcut in the hovered app and this way you don't lose the ability to use the menu bar when you cross any other application.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/611/comments",
    "author": "anbm-admin",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2020-07-22T05:45:44Z",
        "body": "You can hold the `mouse_modifier` key (defaults to <kbd>fn</kbd>) to temporarily disable `focus_follows_mouse`."
      },
      {
        "user": "anbm-admin",
        "created_at": "2020-08-04T23:30:20Z",
        "body": "Thanks for the tip but anyways I suggest that it'll be easier to do the autofocus only until a key is pressed, that would cover almost any case of use for the autofocus and avoid any side effects"
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-08-05T07:33:55Z",
        "body": "What's stopping you from setting up a keybind that changes your `focus_follows_mouse` setting to `off`?"
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-08-11T12:53:55Z",
        "body": "I'm not really interested in making changes to the focus-follows-mouse functionality at this point in time. It works more or less the way I originally envisioned it. I understand that it might not be the cup of tea for everyone, but such is life."
      }
    ]
  },
  {
    "number": 608,
    "title": "Colour picker apps (i.e. Sip, ColorSnapper) don't \"see\" window contents",
    "created_at": "2020-07-10T20:12:17Z",
    "closed_at": "2020-07-11T19:29:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/608",
    "body": "When using a colour picker like Sip, which is basically a system wide eyedropper tool to pick a colour, the app ignores yabai windows and instead just \"sees\" colours from the desktop background image. Is there any way to alter this behaviour in yabai?",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/608/comments",
    "author": "namkeen",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2020-07-11T12:44:36Z",
        "body": "Can you elaborate a bit? What are \"yabai windows\"?"
      },
      {
        "user": "namkeen",
        "created_at": "2020-07-11T19:29:23Z",
        "body": "After further review, it looks like this is completely unrelated to yabai. Closing."
      }
    ]
  },
  {
    "number": 606,
    "title": "Tooltips causing rapid relayouts",
    "created_at": "2020-07-09T06:40:06Z",
    "closed_at": "2020-07-10T05:21:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/606",
    "body": "This is perhaps related to #331 and #424 \r\n\r\nI've been using yabai for the last couple of weeks, and loving it. However, I notice that when mouse is hovering over some UI-layout, like the nav-bar in VS-Code, the windows starts flickering. Is this because yabai is trying to manage the tooltips as well? How would I ignore tooltips? I've tried the suggestions in the linked issues.\r\n\r\n```\r\nyabai-v3.2.1\r\n```\r\n\r\nHere is my config:\r\n\r\n```\r\n#!/usr/bin/env sh\r\n\r\n# bar settings\r\nyabai -m config top_padding 26\r\n# \r\n\r\n# borders (experimental 2020-06-13\r\n\r\nyabai -m config active_window_border_color 0xff06526D\r\nyabai -m config normal_window_border_color 0xff555555\r\nyabai -m config window_border on\r\nyabai -m config window_border_width 6\r\nyabai -m rule --add app=Terminal border=off\r\nyabai -m window --toggle border\r\n\r\n# global settings\r\nyabai -m config active_window_opacity 1.0\r\nyabai -m config active_window_opacity 1.0\r\nyabai -m config auto_balance on\r\nyabai -m config focus_follows_mouse off\r\nyabai -m config mouse_action1 move\r\nyabai -m config mouse_action2 resize\r\nyabai -m config mouse_follows_focus off\r\nyabai -m config mouse_modifier fn\r\nyabai -m config normal_window_opacity 0.9\r\nyabai -m config normal_window_opacity 0.90\r\nyabai -m config split_ratio 0.50\r\nyabai -m config window_opacity on\r\nyabai -m config window_opacity_duration 0.0\r\nyabai -m config window_placement second_child\r\nyabai -m config window_shadow on\r\nyabai -m config window_topmost off\r\n\r\n# general space settings\r\n#yabai -m config top_padding                  0\r\nyabai -m config bottom_padding 0\r\nyabai -m config layout bsp\r\nyabai -m config left_padding 0\r\nyabai -m config right_padding 0\r\nyabai -m config window_gap 0\r\n\r\n# window rules\r\n\r\n#yabai -m rule --add app=\"(System Preferences|Music|Finder|Parallels|LastPass|Jetbrains Toolbox)\" manage=off\r\n#yabai -m rule --add title=\".*\" manage=off\r\nyabai -m rule --add app=\"^(XCode|Alacritty|Brave Browser|Firefox|Teams|Airmail|Spark|Google Chrome|Safari|Slack|iTerm2|Goland|Code|WebStorm|GitKraken)$\" manage=on\r\nyabai -m rule --add title=\"^Opening .*$\" manage=off\r\n# yabai -m config debug_output on\r\n\r\n\r\nyabai -m rule --add app=\"(Alacritty|Brave|Firefox)\" space=3\r\nyabai -m rule --add app=\"(Code|WebStorm)\" space=2\r\nyabai -m rule --add app=\"(GitKraken)\" space=6\r\nyabai -m rule --add app=\"(GoLand)\" space=1\r\nyabai -m rule --add app=\"(Teams|Airmail|Spark)\" space=5\r\n\r\n# It is a bit annoying that this has to be managed manually\r\nyabai -m rule --add app=\"^Firefox$\" title=\"^Opening .*$\" manage=off       # Ignore dialogs in FireFox\r\nyabai -m rule --add app=\".*Brave.*\" title=\".*Media Files.*\" manage=off    # Ignore Medie Files on dokuwiki\r\nyabai -m rule --add app=\"Spark\" title!=\"Spark -.*\" manage=off             # Ignore all excepts Sparks main-window\r\nyabai -m rule --add app=\"WebStorm\" title=\"Preferences\" manage=off             # Ignore all excepts Sparks main-window\r\nyabai -m rule --add app=\"Electron\"  manage=off             # Ignore Electron-development-window\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/606/comments",
    "author": "runar-indico",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2020-07-09T06:50:09Z",
        "body": "This rule is the culprit: You're forcing _every_ window of those applications to be tiled, including tooltip windows. Using rules with `manage=on` is almost always wrong. The windows you want tiled should be tiled by default, even without the rule.\r\n\r\n```\r\nyabai -m rule --add app=\"^(XCode|Alacritty|Brave Browser|Firefox|Teams|Airmail|Spark|Google Chrome|Safari|Slack|iTerm2|Goland|Code|WebStorm|GitKraken)$\" manage=on\r\n```"
      },
      {
        "user": "runar-indico",
        "created_at": "2020-07-10T05:21:22Z",
        "body": "Nice, that worked. Thank you.\r\n\r\nI changed to these settings:\r\n\r\n```bash\r\nyabai -m rule --add app=\"(System Preferences|Music|Finder|Parallels|LastPass|Jetbrains Toolbox)\" manage=off\r\n```"
      }
    ]
  },
  {
    "number": 588,
    "title": "Make specific app float rule dosen't work",
    "created_at": "2020-06-21T15:40:58Z",
    "closed_at": "2020-06-22T20:21:25Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/588",
    "body": "```\r\n# float apps\r\nyabai -m rule --add app=\"Wechat.app\" sticky=on layer=above manage=off\r\nyabai -m rule --add app=\"Eudic.app\" sticky=on layer=above manage=off\r\nyabai -m rule --add app=\"NeteaseMusic.app\" sticky=on layer=above manage=off\r\nyabai -m rule --add app=\"IINA.app\" sticky=on layer=above manage=off\r\nyabai -m rule --add app=\"QQ.app\" sticky=on layer=above manage=off\r\nyabai -m rule --add app=\"Nutstore.app\" sticky=on layer=above manage=off\r\n```\r\nthis is my yabairc config , after resart, this about apps still not float",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/588/comments",
    "author": "Insua",
    "comments": [
      {
        "user": "rockyzhang24",
        "created_at": "2020-06-22T03:39:48Z",
        "body": "Try to remove the extension, i.e., \".app\" in each command, and they will work. The application name is the name without \".app\". You can check the application name from the macOS menu bar next to the apple symbol (). "
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-06-22T20:21:25Z",
        "body": "The simplest way is to use the yabai query system:\r\n\r\n```\r\nyabai -m query --windows\r\n```\r\n\r\nWrite a regex that matches the value of the `app` attribute."
      },
      {
        "user": "Insua",
        "created_at": "2020-06-23T02:53:31Z",
        "body": "thinks,my system is Chinese I should use the chines word instend of english \r\nyabai -m rule --add app=\"微信\" sticky=on layer=above manage=off\r\nworks fine"
      }
    ]
  },
  {
    "number": 576,
    "title": "how to controll the second monitor?",
    "created_at": "2020-06-15T09:56:28Z",
    "closed_at": "2020-06-16T02:30:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/576",
    "body": "The main monitor create three desktop and I can focus them,\r\nThen I create three desktop on the second monitor But I don't kown the index of second monitor\r\nso,I can't focus them by shortcuts\r\nneed help",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/576/comments",
    "author": "Insua",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-06-15T11:20:25Z",
        "body": "The location of the space in mission-control is the index you specify to focus a space.\r\nYou can also retrieve information using the query command:\r\n```\r\n~ yabai -m query --spaces                                                                        13:18\r\n[{\r\n        \"id\":6,\r\n        \"label\":\"\",\r\n        \"index\":1,\r\n        \"display\":1,\r\n        \"windows\":[516, 171],\r\n        \"type\":\"bsp\",\r\n        \"visible\":1,\r\n        \"focused\":1,\r\n        \"native-fullscreen\":0,\r\n        \"first-window\":171,\r\n        \"last-window\":516\r\n},{\r\n        \"id\":7,\r\n        \"label\":\"\",\r\n        \"index\":2,\r\n        \"display\":1,\r\n        \"windows\":[328],\r\n        \"type\":\"bsp\",\r\n        \"visible\":0,\r\n        \"focused\":0,\r\n        \"native-fullscreen\":0,\r\n        \"first-window\":328,\r\n        \"last-window\":328\r\n},{\r\n        ...\r\n},{\r\n        \"id\":20,\r\n        \"label\":\"\",\r\n        \"index\":11,\r\n        \"display\":1,\r\n        \"windows\":[505],\r\n        \"type\":\"float\",\r\n        \"visible\":0,\r\n        \"focused\":0,\r\n        \"native-fullscreen\":1,\r\n        \"first-window\":0,\r\n        \"last-window\":0\r\n}]\r\n\r\n# use the \"index\" value to focus the space\r\n~ yabai -m space --focus 11   \r\n```"
      },
      {
        "user": "Insua",
        "created_at": "2020-06-15T14:42:01Z",
        "body": "thanks,can I put only index 2 and 6 to monitor 2,and other spaces to monitor 2"
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-06-15T18:19:34Z",
        "body": "The index is controlled by macOS and cannot be changed. \r\nYou can give names to spaces by using their original index, and then refer to the name afterwards:\r\n\r\n```\r\n# set name my_space for space with mission-control index 2\r\nyabai -m space 2 --label my_space\r\n\r\n# focus space with mission-control index 2\r\nyabai -m space --focus my_space\r\n```"
      },
      {
        "user": "Insua",
        "created_at": "2020-06-16T02:30:49Z",
        "body": "> The index is controlled by macOS and cannot be changed.\r\n> You can give names to spaces by using their original index, and then refer to the name afterwards:\r\n> \r\n> ```\r\n> # set name my_space for space with mission-control index 2\r\n> yabai -m space 2 --label my_space\r\n> \r\n> # focus space with mission-control index 2\r\n> yabai -m space --focus my_space\r\n> ```\r\n\r\n谢谢！"
      }
    ]
  },
  {
    "number": 573,
    "title": "about yabai rule",
    "created_at": "2020-06-13T03:35:06Z",
    "closed_at": "2020-06-13T14:56:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/573",
    "body": " i put this rule in my config file \r\nyabai -m rule --add app=\"^Finder$\" sticky=on layer=above manage=off\r\nbut it not work\r\nthe finder app is still managed by yabai . i want finder to be float\r\n\r\ni have made SIP disabled and also restart yabai after modify the config file \r\n\r\n ",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/573/comments",
    "author": "rmGFW",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-06-13T14:56:00Z",
        "body": "If you *only* add it to your config, you need to restart yabai for the config (and the newly added rule) to be applied. You can also just run that one command manually from a shell and it will work just fine as well. I tested the rule and it works fine. you just didn't run it in the active session."
      }
    ]
  },
  {
    "number": 542,
    "title": "Add ability to move between spaces while in Mission Control with \"fast focus desktop\" command.",
    "created_at": "2020-05-28T06:27:24Z",
    "closed_at": "2020-05-31T20:50:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/542",
    "body": "I have `ctrl + left|right` set to the `fast focus desktop` command, unfortunately this doesn't work while in Mission Control.\r\n\r\nIs it possible to add this feature? Perhaps just allow `fast focus desktop` to function as regular `move to left|right space` command while in Mission Control?",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/542/comments",
    "author": "SxC97",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-05-29T13:33:33Z",
        "body": "Unlikely to happen, but if/when I get to fixing #181 this could be solved with a fallback definition in your skhd config or w/e hotkey mechansim you use."
      },
      {
        "user": "SxC97",
        "created_at": "2020-05-31T07:46:32Z",
        "body": "Would it be possible to use the `mission_control_enter` and `mission_control_exit` actions in Yabai to temporarily enable an skhd mode in which `ctrl + left|right` are remapped? "
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-05-31T16:31:13Z",
        "body": "So apparently I'm just stupid. The particular case you are looking for has already been solved. If you try to focus a space using `space --focus` while inside mission-control, the command will fail with a non-zero exit code. You can set the space switching shortcuts in System Preferences > Keyboard > Mission Control > left/right to some combination you don't use; eg: `ctrl+cmd+alt+left|right`\r\n\r\nThen in your skhd config:\r\n```\r\nctrl - left : yabai -m space --focus prev || skhd -k \"ctrl + cmd + alt - left\"\r\nctrl - right : yabai -m space --focus next || skhd -k \"ctrl + cmd + alt - right\"\r\n```"
      },
      {
        "user": "SxC97",
        "created_at": "2020-05-31T20:50:50Z",
        "body": "This worked perfectly, thank you!"
      }
    ]
  },
  {
    "number": 538,
    "title": "\"scripting-addition\" \"payload is not installed, some features will not work!\"",
    "created_at": "2020-05-25T02:28:27Z",
    "closed_at": "2020-05-25T14:36:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/538",
    "body": "Hello,\r\n\r\n> \"scripting-addition\r\n> payload is not installed, some features will not work!\"\r\n\r\nI keep getting this message after starting yabai. Do I need to fully disable SIP? I believe I followed all of the instructions correctly.\r\n\r\n1. Rebooted in cmd-R mode; `csrutil enable --without debug`\r\n2. Compiled and installed via brew\r\n3. `brew services start yabai`\r\n4. Added yabai to the accessibility whitelist \r\n5. `sudo yabai --install-sa`\r\n6. `brew services stop yabai`\r\n7. `brew services start yabai`\r\n\r\nI also can't get it to focus to different spaces. `yabai --check-sa` doesn't return anything. I've also restarted the computer a few times. Output from `csrutil status` is below.\r\n\r\nThank you, I'm excited to get yabai up and running!\r\n\r\nMacBook Pro (13-inch, Late 2011)\r\nMacOS High Sierra v10.13.6 (max version supported)\r\nyabai v3.0.2\r\nxCode v9.4.1\r\n```\r\n$ csrutil status\r\nSystem Integrity Protection status: enabled (Custom Configuration).\r\n\r\nConfiguration:\r\n    Apple Internal: disabled\r\n    Kext Signing: enabled\r\n    Filesystem Protections: enabled\r\n    Debugging Restrictions: disabled\r\n    DTrace Restrictions: enabled\r\n    NVRAM Protections: enabled\r\n    BaseSystem Verification: enabled\r\n\r\nThis is an unsupported configuration, likely to break in the future and leave your machine in an unknown state.\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/538/comments",
    "author": "occultrefuse",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-05-25T09:13:29Z",
        "body": "I don't actually have a High Sierra system to test on these days, but what I did in the past when I was running 10.13.6:\r\n\r\n1. Disable SIP completely. (Reboot into recovery, open terminal and type: `csrutil disable`)\r\n2. After rebooting, install the scripting addition: `sudo yabai --install-sa`. Verify that it installed correctly by checking the exit-code: `echo $?` should output 0. Double check that you now have a folder called `yabai.osax` in `/System/Library/ScriptingAdditions`.\r\n3. Reboot into recovery and reenable SIP, `csrutil enable`. (You can do this since you are still on High Sierra. Mojave and newer cannot reenable.)\r\n4. Reboot and everything should now be fine.\r\n5. If you need to update the scripting addition in the future (should get a notification saying it is out of date if an updated version of yabai has changes to the scripting addition), you need to repeat these steps.\r\n\r\n`yabai --check-sa` also does not output anything, but it sets the exit-code which you can check using `echo $?` as mentioned above. (exit-code 0 means it is up to date)."
      },
      {
        "user": "occultrefuse",
        "created_at": "2020-05-25T14:36:39Z",
        "body": "It seems that fully disabling the SIP fixed the issue! No more error message upon starting yabai, and the exit code (`echo $?`) after running `sudo yabai --install-sa` is  `0`. Before fully disabling SIP, it was `1`. \r\n\r\n`yabai.osax` is now in `/System/Library/ScriptingAdditions`.\r\n\r\nThank you!"
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-05-26T11:18:32Z",
        "body": "I've edited the wiki instructions."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-05-26T12:40:40Z",
        "body": "For what it's worth, this most certainly is a user error."
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-05-26T13:12:53Z",
        "body": "Maybe, I can't verify either way as I only have Catalina installed (and Mojave in a vm for 32bit support). I don't think it is a big deal as people on High Sierra should just re-enable SIP after installing anyway."
      },
      {
        "user": "sundevilyang",
        "created_at": "2021-11-07T13:54:55Z",
        "body": "> I don't actually have a High Sierra system to test on these days, but what I did in the past when I was running 10.13.6:\r\n> \r\n> 1. Disable SIP completely. (Reboot into recovery, open terminal and type: `csrutil disable`)\r\n> 2. After rebooting, install the scripting addition: `sudo yabai --install-sa`. Verify that it installed correctly by checking the exit-code: `echo $?` should output 0. Double check that you now have a folder called `yabai.osax` in `/System/Library/ScriptingAdditions`.\r\n> 3. Reboot into recovery and reenable SIP, `csrutil enable`. (You can do this since you are still on High Sierra. Mojave and newer cannot reenable.)\r\n> 4. Reboot and everything should now be fine.\r\n> 5. If you need to update the scripting addition in the future (should get a notification saying it is out of date if an updated version of yabai has changes to the scripting addition), you need to repeat these steps.\r\n> \r\n> `yabai --check-sa` also does not output anything, but it sets the exit-code which you can check using `echo $?` as mentioned above. (exit-code 0 means it is up to date).\r\n\r\nhey @koekeishiya  , I need your help , much thanks. The blowing is the info\r\n```shell\r\n> brew list koekeishiya/formulae/yabai --versions\r\nyabai 3.3.10\r\n> echo $?\r\n0\r\n> exa --icons /System/Library/ScriptingAdditions\r\n Digital Hub Scripting.osax   StandardAdditions.osax\r\n> sudo yabai --install-sa\r\nPassword:\r\n> exa --icons /System/Library/ScriptingAdditions\r\nDigital Hub Scripting.osax   StandardAdditions.osax\r\n> echo $?\r\n0\r\n> csrutil status\r\nSystem Integrity Protection status: disabled.\r\n```"
      },
      {
        "user": "marpes",
        "created_at": "2021-11-08T14:17:11Z",
        "body": "Since updating to macOS Monterey Version 12.0.1 I'm getting the same error every minute or so with yabai restarting even if I have disabled SIP completely.\r\n\r\n```\r\n$ csrutil status\r\nSystem Integrity Protection status: disabled.\r\n$ sudo yabai --check-sa\r\n$ echo $?\r\n1\r\n$ sudo yabai --uninstall-sa\r\n$ echo $?\r\n0\r\n$ sudo yabai --install-sa\r\n$ echo $?\r\n2\r\n$ brew list koekeishiya/formulae/yabai --versions\r\nyabai 3.3.10 HEAD-39b910b\r\n```"
      },
      {
        "user": "Liquidmantis",
        "created_at": "2021-11-08T15:12:44Z",
        "body": "@marpes see #923"
      }
    ]
  },
  {
    "number": 530,
    "title": "question: why is yabai asking for permission again after every update?",
    "created_at": "2020-05-20T01:35:27Z",
    "closed_at": "2020-05-20T05:59:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/530",
    "body": "why is yabai asking for permission again after every update?",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/530/comments",
    "author": "tuananh",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2020-05-20T05:41:18Z",
        "body": "From the README:\r\n\r\n> **Code Signing** When building from source (or installing from HEAD), it is recommended to codesign the binary so it retains its accessibility and automation privileges when updated or rebuilt.\r\n\r\n\r\n"
      },
      {
        "user": "tuananh",
        "created_at": "2020-05-20T05:59:26Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 522,
    "title": "[Question] How to go from a vertical split to a horizontal split?",
    "created_at": "2020-05-13T14:07:31Z",
    "closed_at": "2020-05-13T14:14:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/522",
    "body": "Sorry if it's a noob question but I've been using chunkwm/yabai for ~2 years and I haven't figured this out yet.\r\n\r\nLet's say I have two windows like this:\r\n```\r\n==========================\r\n        window 1\r\n--------------------------\r\n        window 2\r\n==========================\r\n```\r\n\r\nHow can I change it to this?\r\n```\r\n==========================\r\n            |\r\n  window 1  |  window 2\r\n            |\r\n==========================\r\n```",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/522/comments",
    "author": "denisidoro",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2020-05-13T14:09:09Z",
        "body": "Three ways:\r\n\r\n- `yabai -m window --toggle split`\r\n- Drag window 1 to the left quarter of window 2\r\n- Drag window 2 to the right quarter of window 1"
      },
      {
        "user": "johnallen3d",
        "created_at": "2020-05-13T14:14:43Z",
        "body": "One more (hacky) option?\r\n\r\n```\r\nyabai -m space --rotate 90\r\n```"
      },
      {
        "user": "denisidoro",
        "created_at": "2020-05-13T14:19:28Z",
        "body": "@johnallen3d thanks! this is what I used to do, but the behavior wasn't what I expected when a display has 3+ windows"
      },
      {
        "user": "johnallen3d",
        "created_at": "2020-05-13T14:20:50Z",
        "body": "Makes sense @denisidoro! I just tried out `yabai -m window --toggle split` with 3 windows. 😍 "
      }
    ]
  },
  {
    "number": 497,
    "title": "Force 4 windows in a 2x2 grid layout",
    "created_at": "2020-04-27T21:42:08Z",
    "closed_at": "2020-05-09T16:09:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/497",
    "body": "Hi all, how can I force windows to follow a 2x2 grid layout when there are 4 windows? Yabai keeps splitting things into a 1x4 grid and it's kind of frustrating. Thanks",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/497/comments",
    "author": "macalinao",
    "comments": [
      {
        "user": "rockyzhang24",
        "created_at": "2020-05-02T19:31:11Z",
        "body": "Yabai is based on binary space partitioning, so 1x4 is what it should be. If you want to 2x2, you can use `yabai -m window --warp ...` to \"organize\" the layout. Or you can toggle the window to be float by `yabai -m window --toggle float` ant move each one to the four corners of the screen using `yabai -m window --grid ...`. Please refer to the Wiki page for details. "
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-05-09T16:09:30Z",
        "body": "By default, yabai will split the window that is currently focused. You can change your focus before opening a new application/window, to change the outcome of the layout.\r\nYou can also preselect a region in which the new window should appear, by using the `window --insert ..` command."
      }
    ]
  },
  {
    "number": 496,
    "title": "Firefox picture-in-picture",
    "created_at": "2020-04-27T19:46:37Z",
    "closed_at": "2020-05-24T00:47:53Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/496",
    "body": "I've been using yabai for a while now, and I really love it. But I've run into an issue today, where after restarting my computer, yabai will not pick up and resize the picture-in-picture window when watching a video in Firefox. It's been working for me for at least a couple months, and now I can't get it to work.\r\n\r\nAny help is appreciated. Thanks!",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/496/comments",
    "author": "willus10245",
    "comments": [
      {
        "user": "b4k3s",
        "created_at": "2020-05-11T03:07:26Z",
        "body": "I noticed this too. Are you using Nightly? It seems that Mozilla has changed the way that the OS should observe the PIP window because for me, the regular Firefox still tiles the PIP video as it did before. After messing around with it for a few minutes, I have found that simply telling yabai to tile the application manually corrected the problem on my system, so I offer my solution to you. Just add the following to your yabairc:\r\n\r\n`yabai -m rule --add app=\"^Firefox Nightly$\" manage=on`\r\n\r\nThere are a few strange behaviors with this though. First, yabai sometimes, though rarely, tries to tile the PIP video's browser window even if it is minimized, leaving a gap where yabai thinks the window ought to be. I'm assuming this is probably because it is an \"extension\" of the window rather than its own separate browser window. Second, the PIP window tends to move to the focused space, even if you attempt to add `sticky=off` to the rule. This isn't a problem for me personally, but I thought I'd mention it.\r\n\r\nHope this helps."
      },
      {
        "user": "willus10245",
        "created_at": "2020-05-11T12:19:49Z",
        "body": "That worked. Thanks so much! I'm actually using Firefox Developer Edition. Idk how the release cadence differs from regular Firefox, but I'd imagine it's probably closer to Nightly"
      },
      {
        "user": "b4k3s",
        "created_at": "2020-05-11T22:35:57Z",
        "body": "Happy to help! Correct. The Dev Edition and Nightly are very similar. Both receive features months ahead of the regular Firefox. Nightly just gets daily updates."
      },
      {
        "user": "nicola",
        "created_at": "2020-06-21T20:27:19Z",
        "body": "having trouble to make the picture in picture window to not follow the yabai tiling. Any suggestion?"
      },
      {
        "user": "johnallen3d",
        "created_at": "2020-07-15T16:56:23Z",
        "body": "Hello @nicola, if I understand your question correctly, I think you're looking for the following rule:\r\n\r\n```sh\r\nyabai -m rule --add label=\"Firfox PIP\" app=\"^Firefox$\" title=\"^(Picture-in-Picture)$\" manage=off\r\n```"
      },
      {
        "user": "johnallen3d",
        "created_at": "2020-07-15T17:36:03Z",
        "body": "I came here with a slightly different question/problem. I have the Firefox PIP window \"un-managed\" and that works great. However, (I'm guessing) because it's always-on-top, whenever I jump to a space that has the PIP window present it becomes the focused window. Further, since it's not managed, I can't simply use my binding to navigate (east/west etc). There's probably no way around this but I thought I'd throw it out there in case someone else has a clever solution that I'm overlooking."
      }
    ]
  },
  {
    "number": 494,
    "title": "Question: Steam config.",
    "created_at": "2020-04-26T11:42:41Z",
    "closed_at": "2020-05-25T21:44:06Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/494",
    "body": "Hi, First of all thank you very much! I'm really have to have yabai after coming to mac from linux.\r\n\r\nWhen steam app is launched it doesn't get managed by yabai nor recognised. which causes some unwanted behaviour. When switching spaces, the app in the space doesn't get focused.\r\n\r\nIs there away to make yabai recognise steam? \r\n\r\nCheers!",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/494/comments",
    "author": "AlaaSaadAbdo",
    "comments": [
      {
        "user": "kkoscielniak",
        "created_at": "2020-04-30T12:30:24Z",
        "body": "Same here. I've just recognized the same behavior. \r\n\r\nAdding \r\n```\r\nyabai -m rule --app=\"Steam\" manage=off\r\n```\r\ndoesn't work. Probably Steam messes with the whole Mission Control, as even without `yabai` running, the focus does not change between spaces. "
      },
      {
        "user": "AlaaSaadAbdo",
        "created_at": "2020-04-30T14:23:57Z",
        "body": "I can also confirm that, as I have this in my config:\r\n```\r\nyabai -m rule --add app=\"^Steam$\" manage=off\r\n```"
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-05-09T16:12:52Z",
        "body": "Steam does not interact well with the accessibility API of macOS. If you dig into what they are doing, they also have an invisible window that is \"visible\" on ALL spaces, but has coordinates set so that it is placed off screen. I don't remember much of the details, but I would have situations (even without yabai running) where this invisible window would make Steam become the front-most application when switching to empty spaces and so forth.\r\n\r\nThe particular issue you have here\r\n\r\n> When switching spaces, the app in the space doesn't get focused.\r\n\r\nWhile I cannot say why this is happening, this is macOS behaviour and yabai does not ovveride this when it is running."
      },
      {
        "user": "AlaaSaadAbdo",
        "created_at": "2020-05-12T07:22:16Z",
        "body": "Thanks for getting back to me on this :) "
      },
      {
        "user": "JonathanHuot",
        "created_at": "2020-05-12T10:42:46Z",
        "body": "Hi,\r\n\r\nNote that those invisible apps are also took in consideration when changing focus with keyboard. I.e. `yabai -m window --focus north` will focus those invisible windows. Could it be completly ignored by Yabai ?\r\n\r\n\r\nFor the records, I have a similar problem with Microsoft Teams which has invisible \"Microsoft Teams Helper\" (name in process list) aka \"Microsoft Teams Notification\" (name in toolbar).\r\nHowever, this invisible app is like a service running in background and looks different than the regular desktop application, here the \"window application\" is called \"Teams\" in process list. \r\n\r\n"
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-05-18T16:45:28Z",
        "body": "The only reason they are included in the focus change is that they report information as if they where actually real windows. There is no way for yabai to tell the difference between these *fake \"real\" windows* and actual real windows."
      },
      {
        "user": "JonathanHuot",
        "created_at": "2020-05-19T14:26:57Z",
        "body": "Would it be interesting to have the possibility to black list the fake \"real\" windows ? This black list could be managed by the Yabai users similarly than the `manage=off` (`focus=off` ?) ignoring the focus as well ? Could it help ?"
      },
      {
        "user": "butterflysky",
        "created_at": "2020-05-23T19:47:39Z",
        "body": "Interestingly, I don't even see the Steam window in the output of `yabai -m query --windows` on my system (running yabai from latest rev of master), even with Steam in the foreground. I'm curious how Steam is creating these windows and how they are managed in the first place."
      },
      {
        "user": "AlaaSaadAbdo",
        "created_at": "2020-05-25T21:44:06Z",
        "body": "If it's ok with everyone I'll be closing this issue since there's nothing we can do about it here and we can use it as a reference :)"
      }
    ]
  },
  {
    "number": 482,
    "title": "Better separation of floating windows with different border color",
    "created_at": "2020-04-20T18:32:00Z",
    "closed_at": "2020-05-09T16:36:36Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/482",
    "body": "Would be possible to support the active floating window's *shadow* with different border color in all applications? It would help to separate the floating state in dark mode.  \r\n\r\nI tried with this signal without luck:\r\n```\r\nyabai -m signal --add app='^Finder$' event='window_title_changed' \\\r\n    action='yabai -m query --windows --window $YABAI_WINDOW_ID | jq \"if .floating == 1\" | xargs -I{} yabai -m config active_window_border_color 0xffD9742B'\r\n```\r\nThank you.\r\n",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/482/comments",
    "author": "lukakemperle",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2020-04-21T20:58:20Z",
        "body": "Try to run the code in your signal outside of a signal and look at its output, that should help you spot the issue. Your `jq` script is invalid."
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-05-09T16:36:36Z",
        "body": "Closing this as borders are no longer a thing."
      }
    ]
  },
  {
    "number": 480,
    "title": "Setup, Tiling bsp issue",
    "created_at": "2020-04-18T00:31:46Z",
    "closed_at": "2020-04-18T16:51:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/480",
    "body": "Hello, I wasn't able to find anything about this issue in the wiki or past issues, if it present, please point me in that direction.\r\n\r\nI previously used chunkwm and skhd on High Sierra. I recently upgraded to Catalina (10.15.4), I have uninstalled chunkwm and installed yabai, however, the tiling does not seem to be working as I would expect. \r\n\r\nUsing the example yabairc and skhdrc, I am able to switch application windows via hotkey (`alt + h`, `alt + l`), so it appears that yabai is working, however, there is no tiling happening. As per the default in the example file, the layout option is set to `yabai -m config layout bsp`. \r\n\r\nAll windows seem to just float, or act as they normally would in macOS. My expectation is that they would tile as they did when I used chunkwm. I have checked both the err and out logs, both are empty. Sip is disabled, I have made the yabairc executable. `Displays have separate Spaces` is enabled in Mission Control and I have disabled `Automatically rearrange Spaces based on most recent use` in Mission Control.\r\n\r\nHave I missed something in the setup? Or have I not properly configured Yabai?",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/480/comments",
    "author": "timlkelly",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2020-04-18T12:59:03Z",
        "body": "The default option for tiling is `float`. You need to run `yabai -m config layout bsp` in your yabairc if you want it to tile by default.\r\n\r\nThe reasoning behind this is that by default, yabai should change as little as possible."
      },
      {
        "user": "timlkelly",
        "created_at": "2020-04-18T13:20:11Z",
        "body": "Thank you, that solved this. I am confused though because that is exactly what is in my `.yabairc`. Would that not change the default from `float` to `bsp`?\r\n\r\nI noticed the same behavior when attempting to toggle the status bar. Changing it's value to `on` and saving / restarting yabai had no effect. However, it did turn on when I ran that command directly in the terminal."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-04-18T14:35:50Z",
        "body": "Yabai looks first at `.config/yabai/yabairc`, then at `.yabairc`. If the file exists and is executable, it is executed asynchronously when yabai starts. It's likely some mistake on your end."
      },
      {
        "user": "timlkelly",
        "created_at": "2020-04-18T15:18:34Z",
        "body": "Hah, yes, I agree. It is most likely a mistake on my end. \r\n\r\nI read the order in which Yabai looks for the configuration file. My thought was that because I don't have a `$XDG_CONFIG_HOME` dir, or a `yabai` dir in `$HOME/.config/`, it would then finally pick up the configuration file at `$HOME/.yabairc`.\r\n\r\nI do have this file symlinked from another directory, however, it looks to me that it is still executable. Though maybe there's something I don't understand about symlinked files?\r\n\r\n```\r\nlrwxr-xr-x    1 tim   staff     8B Apr 15 22:16 .yabairc -> .yabairc\r\n```\r\n"
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-04-18T15:35:00Z",
        "body": "Might also be something that yabai doesn't understand about it. Maybe you can bisect the issue by just iteratively trying to adjust things until you find out what breaks it."
      },
      {
        "user": "timlkelly",
        "created_at": "2020-04-18T16:51:42Z",
        "body": "This turned out to be an issue with the symlink. I removed it and recreated it and it works. Thank you for the help"
      }
    ]
  },
  {
    "number": 477,
    "title": "Moving between spaces, across monitors, does not work as intended",
    "created_at": "2020-04-16T03:39:25Z",
    "closed_at": "2020-08-11T13:22:54Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/477",
    "body": "Hi there! Love the project. This is the closest I've felt to home coming from i3wm on linux. I'm trying to replicate some very simple behavior:\r\n\r\n- alt + 1,2,3,4... etc brings the space to focus (works)\r\n- alt + shift + 1,2,3,4... etc moves the focused window to the space (works)\r\n\r\nThe issue is that I have 1-6 on my mac screen, and spaces 7-8 on an external monitor. Everything works fine if I move windows on the same \"display\", but if I try to move across the display (from laptop to monitor, or monitor to laptop), the window DOES move but it only goes to the space that is active on the other display, not the correct space.\r\n\r\nFor example\r\nIf I have space 8 open on monitor, and space 5 open on laptop, and issue the following (via skhd) against a window that is focused on space 8 (monitor):\r\n`yabai -m space --focus 3`\r\nThe result is that the window ends up on space 5, instead of space 3. If I issue the exact same command again, it does go to space 3.\r\n\r\nI hope this is helpful! Love yabai so far, amazing work! Everything else seems to be working great so far.\r\n\r\nMy skhd config is about as bare as you'd expect (just getting started):\r\n```\r\nalt - 1 : yabai -m space --focus 1\r\nshift + alt - 1 : yabai -m window --space 1\r\nalt - 2 : yabai -m space --focus 2\r\nshift + alt - 2 : yabai -m window --space 2\r\nalt - 3 : yabai -m space --focus 3\r\nshift + alt - 3 : yabai -m window --space 3\r\nalt - 4 : yabai -m space --focus 4\r\nshift + alt - 4 : yabai -m window --space 4\r\nalt - 5 : yabai -m space --focus 5\r\nshift + alt - 5 : yabai -m window --space 5\r\nalt - 6 : yabai -m space --focus 6\r\nshift + alt - 6 : yabai -m window --space 6\r\nalt - 7 : yabai -m space --focus 7\r\nshift + alt - 7 : yabai -m window --space 7\r\nalt - 8 : yabai -m space --focus 8\r\nshift + alt - 8 : yabai -m window --space 8\r\n```",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/477/comments",
    "author": "booherbg",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-04-16T17:52:31Z",
        "body": "I can't reproduce this. Moving window between spaces work just fine across multiple displays - all combinations of source/dest space being active or inactive."
      },
      {
        "user": "booherbg",
        "created_at": "2020-04-17T16:05:31Z",
        "body": "Since writing this, I see now that moving from my laptop to external monitor *does* work as expected, but moving from external monitor to laptop always puts it on my focused space.\r\n\r\nHmm. How can I be more helpful in diagnosing this?"
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-04-18T13:07:07Z",
        "body": "Open two spaces each on two displays (so you have 4 spaces in total). Now open just a single terminal on space 1. Have space 1 focused on display 1, and space 3 active on display 2. Run these commands and paste their output:\r\n\r\n```sh\r\nyabai -m query --spaces\r\nyabai -m window --space 4\r\nyabai -m query --spaces\r\n```"
      },
      {
        "user": "booherbg",
        "created_at": "2020-04-20T17:06:48Z",
        "body": "Sure. Great idea. See below. I went a step further and re-ran the `yabai -m window --space 4` a second time (once it was on the external monitor) to show the point.\r\n```\r\nMacBook-Pro:~ blaine$ yabai -m query --spaces\r\n[{\r\n\t\"id\":1,\r\n\t\"label\":\"web\",\r\n\t\"index\":1,\r\n\t\"display\":1,\r\n\t\"windows\":[2657],\r\n\t\"type\":\"bsp\",\r\n\t\"visible\":1,\r\n\t\"focused\":1,\r\n\t\"native-fullscreen\":0,\r\n\t\"first-window\":2657,\r\n\t\"last-window\":2657\r\n},{\r\n\t\"id\":6,\r\n\t\"label\":\"term\",\r\n\t\"index\":2,\r\n\t\"display\":1,\r\n\t\"windows\":[],\r\n\t\"type\":\"bsp\",\r\n\t\"visible\":0,\r\n\t\"focused\":0,\r\n\t\"native-fullscreen\":0,\r\n\t\"first-window\":0,\r\n\t\"last-window\":0\r\n},{\r\n\t\"id\":37,\r\n\t\"label\":\"external1\",\r\n\t\"index\":3,\r\n\t\"display\":2,\r\n\t\"windows\":[],\r\n\t\"type\":\"bsp\",\r\n\t\"visible\":1,\r\n\t\"focused\":0,\r\n\t\"native-fullscreen\":0,\r\n\t\"first-window\":0,\r\n\t\"last-window\":0\r\n},{\r\n\t\"id\":90,\r\n\t\"label\":\"\",\r\n\t\"index\":4,\r\n\t\"display\":2,\r\n\t\"windows\":[],\r\n\t\"type\":\"bsp\",\r\n\t\"visible\":0,\r\n\t\"focused\":0,\r\n\t\"native-fullscreen\":0,\r\n\t\"first-window\":0,\r\n\t\"last-window\":0\r\n}]\r\nMacBook-Pro:~ blaine$ yabai -m window --space 4\r\nMacBook-Pro:~ blaine$ yabai -m query --spaces\r\n[{\r\n\t\"id\":1,\r\n\t\"label\":\"web\",\r\n\t\"index\":1,\r\n\t\"display\":1,\r\n\t\"windows\":[],\r\n\t\"type\":\"bsp\",\r\n\t\"visible\":1,\r\n\t\"focused\":0,\r\n\t\"native-fullscreen\":0,\r\n\t\"first-window\":0,\r\n\t\"last-window\":0\r\n},{\r\n\t\"id\":6,\r\n\t\"label\":\"term\",\r\n\t\"index\":2,\r\n\t\"display\":1,\r\n\t\"windows\":[],\r\n\t\"type\":\"bsp\",\r\n\t\"visible\":0,\r\n\t\"focused\":0,\r\n\t\"native-fullscreen\":0,\r\n\t\"first-window\":0,\r\n\t\"last-window\":0\r\n},{\r\n\t\"id\":37,\r\n\t\"label\":\"external1\",\r\n\t\"index\":3,\r\n\t\"display\":2,\r\n\t\"windows\":[2657],\r\n\t\"type\":\"bsp\",\r\n\t\"visible\":1,\r\n\t\"focused\":1,\r\n\t\"native-fullscreen\":0,\r\n\t\"first-window\":2657,\r\n\t\"last-window\":2657\r\n},{\r\n\t\"id\":90,\r\n\t\"label\":\"\",\r\n\t\"index\":4,\r\n\t\"display\":2,\r\n\t\"windows\":[],\r\n\t\"type\":\"bsp\",\r\n\t\"visible\":0,\r\n\t\"focused\":0,\r\n\t\"native-fullscreen\":0,\r\n\t\"first-window\":0,\r\n\t\"last-window\":0\r\n}]\r\nMacBook-Pro:~ blaine$ yabai -m window --space 4\r\nMacBook-Pro:~ blaine$ yabai -m query --spaces\r\n[{\r\n\t\"id\":1,\r\n\t\"label\":\"web\",\r\n\t\"index\":1,\r\n\t\"display\":1,\r\n\t\"windows\":[],\r\n\t\"type\":\"bsp\",\r\n\t\"visible\":1,\r\n\t\"focused\":0,\r\n\t\"native-fullscreen\":0,\r\n\t\"first-window\":2909,\r\n\t\"last-window\":2909\r\n},{\r\n\t\"id\":6,\r\n\t\"label\":\"term\",\r\n\t\"index\":2,\r\n\t\"display\":1,\r\n\t\"windows\":[],\r\n\t\"type\":\"bsp\",\r\n\t\"visible\":0,\r\n\t\"focused\":0,\r\n\t\"native-fullscreen\":0,\r\n\t\"first-window\":0,\r\n\t\"last-window\":0\r\n},{\r\n\t\"id\":37,\r\n\t\"label\":\"external1\",\r\n\t\"index\":3,\r\n\t\"display\":2,\r\n\t\"windows\":[],\r\n\t\"type\":\"bsp\",\r\n\t\"visible\":0,\r\n\t\"focused\":0,\r\n\t\"native-fullscreen\":0,\r\n\t\"first-window\":0,\r\n\t\"last-window\":0\r\n},{\r\n\t\"id\":90,\r\n\t\"label\":\"\",\r\n\t\"index\":4,\r\n\t\"display\":2,\r\n\t\"windows\":[2657],\r\n\t\"type\":\"bsp\",\r\n\t\"visible\":1,\r\n\t\"focused\":1,\r\n\t\"native-fullscreen\":0,\r\n\t\"first-window\":2657,\r\n\t\"last-window\":2657\r\n}]\r\n```"
      },
      {
        "user": "booherbg",
        "created_at": "2020-04-20T17:41:14Z",
        "body": "Update: Moving from laptop to external monitor *did not* work when I ran that earlier test, but it does now. This seems to imply that the behavior is inconsistent. Sometimes it works, sometimes it doesn't, but so far it has never worked correctly across all displays."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-04-20T19:53:17Z",
        "body": "I fail to reproduce this.\r\n\r\n- Are you running a current version of yabai?\r\n- Do you have any possibly interfering software installed (e.g., TotalSpaces)?"
      },
      {
        "user": "booherbg",
        "created_at": "2020-04-20T20:03:48Z",
        "body": "> I fail to reproduce this.\r\n> \r\n> * Are you running a current version of yabai?\r\n> * Do you have any possibly interfering software installed (e.g., TotalSpaces)?\r\n\r\n```\r\nblaine$ yabai --version\r\nyabai-v2.4.3\r\n```\r\n\r\nNo other software is running, other than a fan control software. I can try upgrading yabai, although I don't have an up to date XCode environment so I'm not sure when I can do that (assuming XCode is a requirement)."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-04-20T20:05:06Z",
        "body": "Nah 2.4.3 is current (except for some totally unrelated commits). Just wanted to make sure you're not running a months-old version."
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-05-22T12:23:33Z",
        "body": "I still cannot reproduce this issue."
      },
      {
        "user": "booherbg",
        "created_at": "2020-05-25T22:36:12Z",
        "body": "Thanks for checking in! Still happens from time to time but I just work around it, no worries."
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-08-11T13:22:54Z",
        "body": "Closing this as I still can't seem to reproduce the issue."
      }
    ]
  },
  {
    "number": 474,
    "title": "Add zoom-fullscreen info to query",
    "created_at": "2020-04-14T06:53:28Z",
    "closed_at": "2020-04-16T01:21:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/474",
    "body": "At the moment, the output of `yabai -m query --spaces` has the field:\r\n\r\n`\"native-fullscreen\": 1`\r\n\r\nto let you know whether a space contains a natively fullscreened app in it or not.\r\n\r\nHowever there is no equivalent field to let you know whether or not there is a zoomed window, e.g. \r\n\r\n`\"zoom-fullscreen\": 1`\r\n\r\nMy use case for this is to be able to display in my ubersicht bar which spaces have a zoomed window on them. Currently I just have to press my keybinding to toggle `zoom-fullscreen` to check if a window on that space was zoomed or not.  \r\n\r\nIf you are open to adding this feature, a corresponding event for when a `zoom-fullscreen` is toggled would be amazing (otherwise the ubersicht widget would have to resort to polling)",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/474/comments",
    "author": "nwaywood",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2020-04-14T07:00:17Z",
        "body": "This is already available as a window query.\r\n\r\n```\r\nyabai -m query --windows --window | jq '.\"zoom-fullscreen\"'\r\n```\r\n\r\nYou can also query this for a whole space by checking if any window on a given space is fullscreen:\r\n\r\n```\r\nyabai -m query --windows --space | jq -e 'map(select(.\"zoom-fullscreen\" == 1)) | length > 0'\r\n```"
      },
      {
        "user": "nwaywood",
        "created_at": "2020-04-14T07:37:16Z",
        "body": "@dominiklohmann oh thats awesome thank you! I guess I didn't play around with all of the query flags enough, sorry about that.\r\n\r\nI just double checked and I'm pretty sure there is no event for it though, is that correct? Unless it's included in the `bar_refresh` event?"
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-04-14T07:55:34Z",
        "body": "There is no signal for it. The signals only reflect system events.\r\n\r\nAs this can be triggered through yabai only, you can just run code when you toggle a windows `zoom-fullscreen` property."
      },
      {
        "user": "nwaywood",
        "created_at": "2020-04-14T07:59:31Z",
        "body": "ah of course! Thanks for the help, I'll try and get this working when I have a sec and post the result here for others who may be trying to do the same/similar thing :)"
      },
      {
        "user": "nwaywood",
        "created_at": "2020-04-14T10:57:28Z",
        "body": "Ok it took me a while since I've never written my own `jq` before, but I got it working. I ended up writing a script that inserts the `zoom-fullscreen` variable into the output of `yabai -m query --spaces` so that it can be easily integrated into ubersicht.\r\n\r\nHere is the script for anyone who wants it :)\r\n\r\n```bash\r\n#!/bin/bash\r\n#\r\n# This script adds the field \"zoom-fullscreen\" to the output of each object in $(yabai -m query --spaces)\r\n# If a window within a space is currently zoomed in, the value will be 1, otherwise 0\r\n\r\nspaces=$(/usr/local/bin/yabai -m query --spaces)\r\n\r\nfor index in $(echo \"${spaces}\" | /usr/local/bin/jq -r '.[].index'); do\r\n    hasFullscreenWindow=$(/usr/local/bin/yabai -m query --windows --space \"${index}\" | /usr/local/bin/jq -e 'map(select(.\"zoom-fullscreen\" == 1)) | if length > 0 then 1 else 0 end')\r\n    spaces=$(echo \"${spaces}\" | /usr/local/bin/jq --argjson hasFullscreenWindow $hasFullscreenWindow --argjson index \"${index}\" '.[$index -1].\"zoom-fullscreen\" |= $hasFullscreenWindow')\r\ndone\r\n\r\necho \"$spaces\"\r\n```\r\n\r\nExample output: \r\n\r\n```json\r\n[\r\n  {\r\n    \"id\": 1,\r\n    \"label\": \"\",\r\n    \"index\": 1,\r\n    \"display\": 1,\r\n    \"windows\": [\r\n      144612\r\n    ],\r\n    \"type\": \"bsp\",\r\n    \"visible\": 0,\r\n    \"focused\": 0,\r\n    \"native-fullscreen\": 0,\r\n    \"first-window\": 144612,\r\n    \"last-window\": 144612,\r\n    \"zoom-fullscreen\": 0\r\n  }\r\n]\r\n```"
      },
      {
        "user": "nwaywood",
        "created_at": "2020-04-15T04:41:55Z",
        "body": "@dominiklohmann The above script that I have is really slow because it has to perform `N + 1` queries, where `N` is the number of spaces. And since it's a bash script, needs to run the commands in series.\r\n\r\nIs there a way to get this information in less yabai queries? Atm the ubersicht bar takes 2-3 seconds to update..."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-04-15T08:46:52Z",
        "body": "You don't need to restrict your query to a single space.\r\n\r\n```sh\r\nyabai -m query --windows | jq 'group_by(.space) | map({\"\\(.[0].space)\": (map(select(.\"zoom-fullscreen\" == 1)) | length > 0)}) | add'\r\n```\r\n\r\nExample output:\r\n\r\n```\r\n{\r\n  \"1\": false,\r\n  \"2\": true,\r\n  \"3\": false,\r\n  \"4\": false\r\n}\r\n```"
      },
      {
        "user": "nwaywood",
        "created_at": "2020-04-16T01:20:33Z",
        "body": "@dominiklohmann thank for the tip about the single windows query 👍 \r\n\r\nI ended up implementing it as a node script instead so that I can run the two commands in parallel. It is basically the same speed as just running `yabai -m query --spaces` now.\r\n\r\n```javascript\r\n// This script adds the field \"zoom-fullscreen\" to the output of each object in $(yabai -m query --spaces)\r\n// If a window within a space is currently zoomed in, the value will be 1, otherwise 0\r\nimport * as util from \"util\"\r\nimport * as cp from \"child_process\"\r\n\r\nconst promiseExec = util.promisify(cp.exec)\r\n\r\nconst spacesCommand = promiseExec(\"/usr/local/bin/yabai -m query --spaces\")\r\nconst windowsCommand = promiseExec(\"/usr/local/bin/yabai -m query --windows\")\r\n\r\nPromise.all([spacesCommand, windowsCommand])\r\n    .then(([spacesOutput, windowsOutput]) => {\r\n        const spaces = JSON.parse(spacesOutput.stdout)\r\n        const windows = JSON.parse(windowsOutput.stdout)\r\n        // Add \"zoom-fullscreen\" to each space object\r\n        const defaultZoomFullscreen = spaces.map(space => ({...space, \"zoom-fullscreen\": 0}))\r\n        windows.forEach(window => {\r\n            if (window[\"zoom-fullscreen\"] == 1) {\r\n                defaultZoomFullscreen[window.space -1][\"zoom-fullscreen\"] = 1\r\n            }\r\n        })\r\n        process.stdout.write(JSON.stringify(defaultZoomFullscreen))\r\n    })\r\n```"
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-04-16T07:59:15Z",
        "body": "> I ended up implementing it as a node script instead so that I can run the two commands in parallel.\r\n\r\nNote that you can also do this in shell scripts, the syntax just isn't very ergonomic.\r\n\r\nGreat to see you found a solution to your problem, and thanks for sharing it. 👍 "
      }
    ]
  },
  {
    "number": 469,
    "title": "Sluggish on Chromium-based browser (when immediately switching to another tab after opening a new tab)",
    "created_at": "2020-04-03T03:23:51Z",
    "closed_at": "2020-04-14T21:18:03Z",
    "labels": [
      "question",
      "performance"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/469",
    "body": "Hi,\r\nI have been experiencing this issue for a long time when using yabai. \r\n\r\nThe thing is: in Chrome, open a new tab by clicking the \"+\" button and then **immediately** click the tab next to it on its left. There is a significant delay to switch to that tab (around 1\\~2 seconds). Also, similarly, after I open a new tab, I immediately click the \"x\" button of the tab next to it instead of the tab itself, this tab will be closed after 1~2 seconds. \r\n\r\nHowever, if I stop the yabai service (by running `brew services stop yabai`), the issue I described above is gone and the smooth is back. \r\n\r\nExcept for Chrome, I have tried other Chromium-based browsers such as Brave, and all of them have the same issue. I also tried Firefox and Safari but both of them performed very well as normal. \r\n\r\nI don't know how to investigate the source of this issue. Please do me a favor. Thank you very much.\r\n\r\nyabai version: the latest\r\nmacOS: 10.15.3 (the latest)",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/469/comments",
    "author": "rockyzhang24",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-04-03T14:59:34Z",
        "body": "So this appears to be happening because Chrome sends a ton of *window title changed* notifications, which causes yabai to trigger a status bar update (for every window title changed notification reported), which is a bit of an expensive operation (and it performs a couple of AX calls to the focused application - Chrome in this case):\r\n\r\n```\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\nEVENT_HANDLER_WINDOW_TITLE_CHANGED: Google Chrome 5042\r\n```\r\n\r\nAfter disabling the status bar I could no longer reproduce this issue."
      },
      {
        "user": "rockyzhang24",
        "created_at": "2020-04-03T18:51:00Z",
        "body": "Okay, I see. Thank you so much to make me clear. Is there some approach to solve this except for totally disabling the status bar? Is it possible to add a config to toggle between showing the window title on the status bar or not? \r\n\r\nBTW, which browser are you using now? \r\n\r\nThanks!!!"
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-04-03T19:58:17Z",
        "body": "I mostly use Safari. Sometimes I'll use Chrome, but I interact mostly using keyboard shortcuts (for creating, closing and moving between tabs), so I don't really experience this slowdown."
      },
      {
        "user": "rockyzhang24",
        "created_at": "2020-04-03T20:07:11Z",
        "body": "Got it. Thank you. "
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-04-14T16:16:12Z",
        "body": "Think I found a way to solve this issue (ref #376). Please try the latest master."
      },
      {
        "user": "rockyzhang24",
        "created_at": "2020-04-14T20:14:32Z",
        "body": "@koekeishiya Bingo!! It seems this issue is totally solved. I tested using Chrome and other Chromium-based browsers (Brave and Chromium). All of them were very smooth when I tried to reproduce this issue. Not sluggish at all when I open a new tab and immediately try to close a previous tab. Good job!\r\n\r\nThank you so much for your effort and make our life easier. :P"
      }
    ]
  },
  {
    "number": 456,
    "title": "Yabai won't ignore iTerm",
    "created_at": "2020-03-25T17:20:04Z",
    "closed_at": "2020-04-11T11:37:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/456",
    "body": "I keep running `yabai -m rule --add app=\"^iTerm$\" manage=off`\r\nbut it keeps on managing iTerm",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/456/comments",
    "author": "ThatOneCalculator",
    "comments": [
      {
        "user": "JunYang-tes",
        "created_at": "2020-03-30T02:32:51Z",
        "body": "`yabai -m rule --add app=\"iTerm2\" manage=off` works for me."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-04-11T11:37:35Z",
        "body": "Closing this as resolved. The app name can easily be verified to be `iTerm2` instead of `iTerm`.\r\n\r\n```\r\n❯ yabai -m query --windows --window | jq '.app'\r\n\"iTerm2\"\r\n```"
      }
    ]
  },
  {
    "number": 452,
    "title": "How to use Split View in rules",
    "created_at": "2020-03-23T07:36:36Z",
    "closed_at": "2020-04-12T13:28:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/452",
    "body": "Hello,\r\n\r\nI replaced the former `monocle` mode with rules to set some apps in native full screen like : \r\n```\r\nyabai -m rule --add label=\"slack\" app='^Slack$' native-fullscreen=on\r\n```\r\nIs there any way to open two app in the same native full screen with split view ?\r\n\r\nThanks a lot for this awesome project !",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/452/comments",
    "author": "SebastienElet",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-03-23T12:23:31Z",
        "body": "As far as I know there is no way to programmatically interact with the native macOS split-view. I'm sure there are ways to do this either through undocumented API's or by calling existing functions inside Dock.app, but I have not looked into that (and likely will not look into that)."
      },
      {
        "user": "SebastienElet",
        "created_at": "2020-03-24T10:03:29Z",
        "body": "@koekeishiya thanks for the answer ! I have other way to achieve the same behavior outside of the native fullscreen then it's fine 👍"
      }
    ]
  },
  {
    "number": 451,
    "title": "Stop yabai from ever splitting only 2 windows horizontally",
    "created_at": "2020-03-21T16:55:49Z",
    "closed_at": "2020-04-11T11:39:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/451",
    "body": "If I just have two windows, I only want them to be split left-right, not top-bottom. Is there a way to make this happen? Thank you!",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/451/comments",
    "author": "yamini-krishnamurthy",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2020-03-21T17:03:31Z",
        "body": "Whenever a window is focused, toggle its `split` if the split is currently `horizontal`.\r\n\r\nHere's a one-liner that does the job.\r\n\r\n```\r\nyabai -m signal --add event=window_focused action='yabai -m query --windows --window $YABAI_WINDOW_ID | jq -er \".split == \\\"horizontal\\\"\" && yabai -m window --toggle split'\r\n```"
      }
    ]
  },
  {
    "number": 443,
    "title": "Can i jump to prev or last space when destroy current space",
    "created_at": "2020-03-14T08:21:57Z",
    "closed_at": "2020-03-14T15:04:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/443",
    "body": "When using `yabai -m space --destroy`. It auto jump to the 1st space, which i think is sometime not very convenient. Like i have [1] [2] [3] [4]. When i destroy space 4. I want it to jump to closest space (mean 3) 🐱 ",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/443/comments",
    "author": "kyoz",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-03-14T09:47:45Z",
        "body": "You can get the behaviour you want by writing a small script to first focus whatever space you desire, and then destroy the space you came from. See #299 "
      },
      {
        "user": "kyoz",
        "created_at": "2020-03-14T15:04:49Z",
        "body": "Thank you so much, i i'll give it a try ❤️ "
      }
    ]
  },
  {
    "number": 438,
    "title": "why some app windows minimize itself after switching to other desktops",
    "created_at": "2020-03-10T01:39:52Z",
    "closed_at": "2020-03-11T00:45:26Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/438",
    "body": "Hi Guys, why some app windows minimize itself after switching to other desktops\r\n\r\nfor example, I have two desktops opened\r\n\r\ndesktop 1 => two terminals\r\n\r\ndesktop 2 => chrome\r\n\r\nsometimes those 2 terminals had already minimized before I switch from desktop 2 to desktop 1,\r\nso there was nothing on the desktop 1, I have to click the terminals icon on the dock again \r\n\r\nany ideas?",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/438/comments",
    "author": "chenjunweii",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2020-03-10T07:38:09Z",
        "body": "This really lacks information. Windows don't usually minimize themselves. Please post steps that reliably reproduce the issue, and if possible add a screen recording of the issue."
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-03-10T08:09:41Z",
        "body": "There is no functionality in yabai that can minimize a window - it is not implemented. \r\nThis is happening because of something else on your system. Note that macOS have built-in actions that e.g hide inactive windows etc upon performing certain keyboard shortcuts or modifier+mouse buttons on the active window, that work across spaces."
      },
      {
        "user": "chenjunweii",
        "created_at": "2020-03-11T00:45:26Z",
        "body": "@koekeishiya  I think i found the problem, thanks for the advice!"
      }
    ]
  },
  {
    "number": 433,
    "title": "\"Next Space/Monitor\" with looping",
    "created_at": "2020-03-02T22:38:11Z",
    "closed_at": "2020-04-12T13:41:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/433",
    "body": "Right now...\r\n\r\n> yabai -m display/space --move next\r\n> yabai -m display/space --focus next\r\n> yabai -m window --display/space next\r\n\r\nAll are unidirectional commands, and don't appear to 'loop back'.  That is, if I have two displays or spaces, and tap the key twice (next and next), one might expect to end up where you started.  I understand that if you're working in large linear space arrangements, it might be best to not accidentally wrap around, but I'd like the option to do so.\r\n\r\nIs there a way to get a target like `yabai -m display/space --move cycle` which goes through the available spaces, and loops back?  Or some other way to accomplish this looping?\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/433/comments",
    "author": "stylerw",
    "comments": [
      {
        "user": "stylerw",
        "created_at": "2020-03-02T23:09:11Z",
        "body": "For what it's worth, 'recent' almost accomplishes this in a two-space paradigm, BUT it only works if you've already focused another space since Yabai was started."
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-03-03T06:01:50Z",
        "body": "You should be able to do this by relying on the exit code of the command. Something like the following for spaces: \r\n\r\n`yabai -m space --focus next || yabai -m space --focus first` \r\nand \r\n`yabai -m space --focus prev || yabai -m space --focus last`\r\n\r\nSame principle should apply for the other commands you mentioned as well.\r\n"
      },
      {
        "user": "tuananh",
        "created_at": "2020-03-03T07:47:37Z",
        "body": "Nice, this should be documented in the Wiki"
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-04-12T13:41:02Z",
        "body": "Added some note to the wiki in the commands section."
      }
    ]
  },
  {
    "number": 432,
    "title": "Swap and Warp not working on 10.15 Catalina",
    "created_at": "2020-03-02T18:36:34Z",
    "closed_at": "2020-03-03T13:09:44Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/432",
    "body": "I have disabled SIP, installed Yabai and Skhd and so far it’s working great. Unfortunately whenever I create a shortcut in skhd to invoke swap or warp and nothing happens.  If I manually type it into a terminal window it does.\r\n\r\nAny idea?\r\n\r\nshift + alt - left : yabai -m window --swap west\r\nOr\r\nShift + cmd - left : yabai -m window —warp west",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/432/comments",
    "author": "bcr-ch",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2020-03-02T18:47:06Z",
        "body": "That sounds like an issue with your skhd setup rather than your yabai setup. I recommend checking the skhd log files."
      },
      {
        "user": "stylerw",
        "created_at": "2020-03-03T00:30:06Z",
        "body": "I'm successfully implementing the `yabai -m window --swap west` command via Alfred in Catalina, so I don't think this is a Yabai issue."
      },
      {
        "user": "tuananh",
        "created_at": "2020-03-03T06:05:04Z",
        "body": "it's working for me.\r\n\r\ncould it be key conflict? does the active windows has that key combo register ?"
      },
      {
        "user": "bcr-ch",
        "created_at": "2020-03-03T13:09:44Z",
        "body": "Thanks everyone... I re-installed skhd with logging and found that I had a silly typo in the file.  By default logging wasn't enabled.\r\n\r\nCheers and amazing response from community. Thanks"
      }
    ]
  },
  {
    "number": 431,
    "title": "Apply `window_gap` to manual `grid` configuration",
    "created_at": "2020-03-01T21:03:09Z",
    "closed_at": "2020-03-03T18:47:17Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/431",
    "body": "I'm trying to use rules to configure spaces with layouts for specific applications (which I always keep running).\r\n\r\nThe important part is for that set-up to automatically re-apply after a reboot and re-launch of the relevant windows.\r\n\r\nI'm using `grid` to achieve this, but I also like the `window_gap` to apply to my grid. From my testing, it appears the window gap config is ignored for custom grids, is that correct? Is there any solution to this other than cutting up the grid in many small rows/columns to be able to manually leave some space between the windows?",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/431/comments",
    "author": "JeanMertz",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-03-02T10:06:25Z",
        "body": "> From my testing, it appears the window gap config is ignored for custom grids, is that correct?\r\n\r\nThat is correct. When windows are arranged manually (note: not by the bsp algorithm), yabai cannot reason about which side of the windows should or should not have gaps, as gaps should only exist between windows and not screen edges (this is padding, which is inherited from the space config).\r\n\r\nI don't think you can do this by using only rules, unless you specify a grid with tons of small rows/columns.\r\n\r\nYou could combine this with signals (application_launched, window_created) to reduce the size of the window by x in the direction(s) that you want to have a gap, but this will not work correctly if the application is already running at the time when yabai is launched. To handle that  correctly you would also need to query for the windows and run them through a script that basically applies that gap."
      },
      {
        "user": "JeanMertz",
        "created_at": "2020-03-02T10:32:51Z",
        "body": "Thanks for the reply. The reasoning makes sense given the current functionality of Yabai.\r\n\r\n> yabai cannot reason about which side of the windows should or should not have gaps, as gaps should only exist between windows and not screen edges (this is padding, which is inherited from the space config).\r\n\r\nIt would be nice if there was a way to disable space padding, and apply the window gap to all sides in cases like these. But I can see how that might be a niche feature that's not worth the trouble complicating Yabai's current design over (I also get that this would create double the padding between windows vs. the edges of the screen, but that's a trade-off I'd be fine with).\r\n\r\nFeel free to close the issue if there's nothing else to be done here. I might play around with a wrapper command that takes a grid, slices it up into smaller pieces, and adds some margins around all the windows, and then produces the final `yabai` command to run."
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-03-03T18:47:17Z",
        "body": "I don't think this is something I want to be a part of yabai at this time. Maybe I'll come up with something that could handle this situation in the future."
      }
    ]
  },
  {
    "number": 423,
    "title": "Set vertical/horizontal screen position before opening new window",
    "created_at": "2020-02-23T17:35:30Z",
    "closed_at": "2020-02-26T07:59:06Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/423",
    "body": "In i3 you can basically say \"open the next window as a horizontal window\" before you open it. The same goes for vertical (which is the default).\r\n\r\nThe only functionality i have found is to open the window first it will then open it vertically, then toggle it to become horizontally.\r\n\r\nAm i missing something, or is that the general workflow? I would like to be able to open windows directly to horizontal or vertically after my choosing.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/423/comments",
    "author": "Toerktumlare",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-02-23T17:40:17Z",
        "body": "You can use the `--insert` command.\r\n\r\nFrom the documentation: \r\n```\r\nDIR_SEL     := north | east | south | west\r\n\r\n\r\n--insert <DIR_SEL>\r\nSet the splitting area of the selected window. \r\nIf the current splitting area matches DIR_SEL, the action will be undone.\r\n```"
      }
    ]
  },
  {
    "number": 414,
    "title": "[HELP] I would like to hide Ubersicht widgets when one or more windows are open on a focused space",
    "created_at": "2020-02-16T10:12:58Z",
    "closed_at": "2020-04-17T17:33:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/414",
    "body": "Hi everyone, I would like to have my Ubersicht widgets be shown when the space I am on is empty, and hidden when there are one or more windows open. I would like to have window borders enabled but I don't like seeing my widgets in-between the gaps.\r\n\r\nHere is what I tried to add as a rule to my .yabairc\r\n\r\n```\r\n   yabai -m signal --add event=space_changed \r\n\r\n    index=\"$(yabai -m query --windows --space | jq '.[]') && \\\r\n\r\n    if [\"$[index\"] =\"\"]; then action=\"osascript -e 'tell application id \"tracesOf.Uebersicht\" to set hidden of widget id \"Clock-Clock-index-coffee\" to false'\" && \\\r\n\r\n    action=\"osascript -e 'tell application id \"tracesOf.Uebersicht\" to set hidden of widget id \"Date-index-coffee\" to false'\" && \\\r\n\r\n    action=\"osascript -e 'tell application id \"tracesOf.Uebersicht\" to set hidden of widget id \"Time-index-coffee\" to false'\"; \\\r\n\r\n    else action=\"osascript -e 'tell application id \"tracesOf.Uebersicht\" to set hidden of widget id \"Clock-Clock-index-coffee\" to true'\" && \\\r\n\r\n    action=\"osascript -e 'tell application id \"tracesOf.Uebersicht\" to set hidden of widget id \"Date-index-coffee\" to true'\" && \\\r\n\r\n    action=\"osascript -e 'tell application id \"tracesOf.Uebersicht\" to set hidden of widget id \"Time-index-coffee\" to true'\"; fi\r\n```\r\nI then repeated this code for the application_launched/terminated, window_created/destroyed, and application_visible/hidden signals.\r\n\r\nHere is the break down of what the code is trying to do:\r\n\r\n`yabai -m signal --add event=space_changed`\r\nThis is just creating a rule that listens for the space_changed event\r\n\r\n` index=\"$(yabai -m query --windows --space | jq '.[]')`\r\nThis _should_ be creating an index variable that stores a list of window objects in the current space\r\n\r\n`if [\"$[index\"] =\"\"];`\r\nThis should check if the index object is empty, i.e. there are no windows on the currently focused space.\r\n\r\n`then action=\"osascript -e 'tell application id \"tracesOf.Uebersicht\" to set hidden of widget id \"Clock-Clock-index-coffee\" to false'`\r\nThis should set the widget of id \"Clock-Clock-index-coffee\" to be not hidden if the space is empty. Repeated for widgets \"Date-index-coffee\" and \"Time-index-coffee\".\r\n\r\n`else action=\"osascript -e 'tell application id \"tracesOf.Uebersicht\" to set hidden of widget id \"Clock-Clock-index-coffee\" to true'\"`\r\nThis should set the widget of id \"Clock-Clock-index-coffee\" to be hidden if the space is not empty. Repeated for widgets \"Date-index-coffee\" and \"Time-index-coffee\".\r\n\r\nIf I am doing anything wrong please let me know. Keep in mind this is the first time I'm actually messing around with shell scripting, so please take it easy on me. 😅",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/414/comments",
    "author": "SxC97",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2020-02-16T11:55:55Z",
        "body": "There's a very basic misunderstanding with shell scripts here. We've all started somewhere, don't worry. :-)\r\n\r\nWhen you write this in your shell:\r\n\r\n```\r\na b c \"d e\" f\r\n```\r\n\r\nThen the shell searches for an executable named `a` in its list of known executable paths (commonly stored in `$PATH`, separated with a colon), and sends 4 arguments to it: `b`, `c`, `d e`, and `f`.\r\n\r\nThe basic syntax for signals in yabai is like this:\r\n\r\n```\r\nyabai -m signal --add event=event_name action=shell_command\r\n```\r\n\r\nIn order for yabai to receive the `action=shell_command` part as a single argument, it needs to be quoted, because otherwise the shell would split the argument at the wrong place. All yabai does with `action=shell_command` is to spawn a new shell and run the argument you've given it (except for the leading `action=`) as a new command.\r\n\r\nSimilarly, `jq` is a JSON processing tool, which comes with its own query language, which is very different from the language most shells use. `osascript` is an AppleScript processing tool, which allows you to execute AppleScript on the fly. So you're actually trying to mix three languages together here, and that needs to be done carefully.\r\n\r\n### Assembly\r\n\r\n(The following is untested, and assumes your basic AppleScript command is correct. To debug, look at the individual pieces.)\r\n\r\nStep 1: Create an AppleScript that allows you to set your widgets visibility. Save the below file as `hide-uebersicht-widget.scpt`, and then run `chmod +x hide-uebersicht-widget.scpt` to make it executable.\r\n\r\n```osascript\r\n#! /usr/bin/env osascript\r\n\r\non run argv\r\n  tell application id \"tracesOf.Uebersicht\"\r\n    set hidden of widget id (quoted form of (item 1 of argv)) to (item 2 of argv)\r\n  end tell\r\nend run\r\n```\r\n\r\nStep 2: Create a script that tells you whether your desktop is empty. Save the below file as `is-space-empty.sh`, and then run `chmod +x is-empty-space.sh` to make it executable.\r\n\r\n```sh\r\n#! /usr/bin/env sh\r\n\r\n{ \r\n  yabai -m query --windows --space | jq -r 'length == 0' \r\n} >/dev/null 2>&1\r\n```\r\n\r\nStep 3: Register the signals for yabai in your yabairc.\r\n\r\n```sh\r\nyabai -m signal --add event=window_created action='\r\n  if [ ./is-empty-space.sh ]; then\r\n    ./hide-uebersicht-widget.scpt Clock-Clock-index-coffee true\r\n  fi'\r\n\r\nyabai -m signal --add event=window_destroyed action='\r\n  if [ ! ./is-empty-space.sh ]; then\r\n    ./hide-uebersicht-widget.scpt Clock-Clock-index-coffee false\r\n  fi'\r\n\r\n# ...\r\n```\r\n\r\nSide note: When writing shell scripts, use shell check for linting them for correctness. You can learn an awful lot from shell check."
      },
      {
        "user": "strazto",
        "created_at": "2020-02-27T08:40:18Z",
        "body": "Just weighing in here, depending on which gaps you're seeing your widgets peeking through, you could just rearrange them so that they fall within where you typically see window gaps ( a lot of widgets support pretty straightforward config of their positioning ) "
      }
    ]
  },
  {
    "number": 409,
    "title": "Running yabai with SIP enabled, will signals work?",
    "created_at": "2020-02-12T10:22:55Z",
    "closed_at": "2020-02-12T10:46:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/409",
    "body": "Thanks for a great software!\r\n\r\nI'm running yabai with SIP enabled. I'm trying to get signals to work with a bitbar plugin.\r\n\r\nI've added the following signals and is not getting any output in the error or out log. But still its not being triggered at least to my knowledge :)\r\n\r\n```\r\n# yabai -m signal --add event=space_changed \\\r\n#   action=\"set SHELL=/bin/sh && open -g \\\"bitbar://refreshPlugin?name=yabai-window-info.*?.sh\\\"\"\r\n# yabai -m signal --add event=window_resized \\\r\n#   action=\"set SHELL=/bin/sh && open -g \\\"bitbar://refreshPlugin?name=yabai-window-info.*?.sh\\\"\"\r\n# yabai -m signal --add event=window_focused \\\r\n#   action=\"set SHELL=/bin/sh && open -g \\\"bitbar://refreshPlugin?name=yabai-window-info.*?.sh\\\"\"\r\n# yabai -m signal --add event=application_activated \\\r\n#   action=\"set SHELL=/bin/sh && open -g \\\"bitbar://refreshPlugin?name=yabai-window-info.*?.sh\\\"\"\r\n```\r\n\r\nSo my question was if we're suppose to add this to the list below in the WIKI if its a requirement to disable SIP in order for it to work.\r\n\r\n```\r\nThe following features of yabai require System Integrity Protection to be disabled:\r\n\r\nfocus/create/destroy space without animation\r\nmove space (and its windows) left, right or to another display\r\nremove window shadows\r\nenable window transparency\r\ncontrol window layers (make windows appear topmost)\r\nsticky windows (make windows appear on all spaces)\r\nmove window by clicking anywhere in its frame\r\n```",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/409/comments",
    "author": "ptomasroos",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-02-12T10:31:47Z",
        "body": "Signals should work fine with SIP enabled. I updated the wiki logging entry you added to add some additional explicit information.\r\n\r\nNote the following:\r\nTo enable debug output make sure that your configuration file contains `yabai -m config debug_output on` or that yabai is launched with the `--verbose` flag."
      },
      {
        "user": "ptomasroos",
        "created_at": "2020-02-12T10:46:30Z",
        "body": "It works, my bad was that I had trouble invoking the URL Scheme. Thanks for your response.\r\n\r\nAnd thanks for the debug_output pointer!\r\n\r\nHave a great day!"
      }
    ]
  },
  {
    "number": 405,
    "title": "Sticky, topmost, float windows lose focus when the space changes",
    "created_at": "2020-02-06T21:30:52Z",
    "closed_at": "2020-03-01T16:02:16Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/405",
    "body": "Sorry if this is the wrong place to post, or if this is how yabai is intended to work. Most of my windows are managed by bsp or float but _not_ sticky. I have a few that are sticky, and it would be really nice if they didn't lose focus when switching to a new space/desktop. I also have `topmost=on` set but it doesn't seem to help.\r\n\r\nA workaround using signals would also be great. Thank you.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/405/comments",
    "author": "micthiesen",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-02-12T09:43:58Z",
        "body": "From what I can tell this is default macOS behaviour. Upon a space switch, it will focus the window that was previously focused on that space - which does not seem to consider the now sticky window.\r\n\r\nI would imagine you could maybe try to subscribe to the space_changed signal, look for sticky windows and focus the first(?) located sticky window, or whatever matches your criteria."
      },
      {
        "user": "aymane-eljerari",
        "created_at": "2024-12-25T05:05:36Z",
        "body": "For anyone else looking to add this signal:\r\n\r\n`yabai -m signal --add event=space_changed action=\"sticky_id=\\$(yabai -m query --windows --space | jq 'map(select(.[\\\"is-sticky\\\"] == true)) | .[0].id') && yabai -m window --focus \\$sticky_id\"`"
      }
    ]
  },
  {
    "number": 392,
    "title": "Move/resize named window",
    "created_at": "2020-01-29T15:37:00Z",
    "closed_at": "2020-01-29T16:17:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/392",
    "body": "The `window` command only works with the focused window as far as I can see. Is it possible to resize and move a window by `title`? \r\n\r\nSomething like `yabai -m window title=\"^MyTitle.*$\" --resize=abs:1000:1000`",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/392/comments",
    "author": "henrik242",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2020-01-29T15:48:52Z",
        "body": "```sh\r\nyabai -m query --windows |\r\n  jq '.[] | select(.title | test(\"^MyTitle.*$\")).id' |\r\n  xargs -I{} yabai -m window {} --resize abs:1000:1000"
      },
      {
        "user": "henrik242",
        "created_at": "2020-01-29T15:49:12Z",
        "body": "OK, I figured it out:\r\n```\r\nWINDOW_SEL=$(yabai -m query --windows |jq '.[] | select (.title | contains(\"MyTitle\")) | .id')\r\nyabai -m window $WINDOW_SEL --resize abs:1000:1000\r\n```\r\nEDIT: Heh, you beat me to it.  Thanks!  Would have been nice with a built-in ID selector though :)"
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-01-29T17:15:06Z",
        "body": "Note that your version fails if multiple windows match the query."
      },
      {
        "user": "henrik242",
        "created_at": "2020-01-30T08:54:07Z",
        "body": "@dominiklohmann By the way, am I right to assume that I can't use `--resize` and `--move` in the same `window` message?  Right now I have issue two separate commands."
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-01-30T15:04:51Z",
        "body": "> By the way, am I right to assume that I can't use --resize and --move in the same window message? Right now I have issue two separate commands.\r\n\r\nYeah, that is correct. There is no technical reason for this, it's just how I happened to write the message parsing logic. Might revisit this idea in the future, but I don't think it's a big deal.\r\nThe overhead of having to issue two separate commands is not that important considering the fact that the macOS AX API will always be the bottleneck here."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-01-30T22:52:46Z",
        "body": "Note that you don't need to issue the query twice:\r\n\r\n```sh\r\nyabai -m query --windows |\r\n  jq '.[] | select(.title | test(\"zsh\")).id' |\r\n  xargs -L1 sh -c '\r\n    yabai -m window $0 --toggle float &&\r\n    yabai -m window $0 --resize abs:500:500\r\n  '\r\n```"
      },
      {
        "user": "henrik242",
        "created_at": "2020-01-31T06:49:19Z",
        "body": "@dominiklohmann I guess whether that is only one command or not is a matter of opinion ;) "
      },
      {
        "user": "tophee",
        "created_at": "2022-08-15T07:41:04Z",
        "body": "I've spent quite some time trying to figure this one out. I somehow thought it could be done with a rule, but then I couldn't figure out how to trigger the rule... Anyway, I agree that it would be nice to have a simpler command for selecting named windows, i.e. something similar to how rules work.\r\n\r\nFor example, instead of \r\n~~~\r\nyabai -m query --windows |\r\n  jq '.[] | select(.title | test(\"^MyTitle.*$\")).id' |\r\n  xargs -I{} yabai -m window {} --resize abs:1000:1000\r\n~~~\r\n\r\nsomething like \r\n~~~\r\nyabai -m window title=\"^MyTitle.*$\" --resize abs:1000:1000\r\n~~~\r\n\r\nEdit: I just realized that I provided the exact same example as OP. LOL. That just shows how intuitive that feature would be..."
      },
      {
        "user": "koekeishiya",
        "created_at": "2022-08-25T02:18:05Z",
        "body": "> something like\r\n> `yabai -m window title=\"^MyTitle.*$\" --resize abs:1000:1000`\r\n\r\nThe \"problem\" with this syntax is that there are a lot of properties (and combinations of properties) that may be interesting to filter by, and mixing it straight into the command structure like this makes it both complicated to read, and potentially to parse. \r\n\r\nIf filters are allowed in-place instead of a `WINDOW_SEL`, then it would have to be allowed every place that currently allows a `WINDOW_SEL`, to maintain consistency (and simplicity) in the CLI.\r\n\r\nIn theory that means that the parser would have to allow for, and understand, something like the following (even though it might not make sense from a practical pov):\r\n`yabai -m window title=\"^MyTitle.*$\" app=\"^MyApp.*$\" space=1 --swap title=\"^OtherTitle.*$\" app=\"^OtherApp.*$\" space=2`\r\n\r\nI think the above command would be ambiguous from a parser pov, unless extra context is given. Not saying that it would be impossible, but I think it makes things a lot more complex both from a user pov and certainly from an implementation-pov.\r\n\r\nThe thing that is great about the current design (in my opinion anyway) is that you know how to issue commands that affect certain entities (windows, spaces, displays) using very simple syntax, and when more complex needs arises, there is a standard way to retrieve the information that you need to script that behaviour.\r\n"
      },
      {
        "user": "tophee",
        "created_at": "2022-08-25T07:05:34Z",
        "body": "Thanks a lot for explaining. It makes more sense now. I am looking at this from the perspective of someone who is not a software engineer and who has just started using yabai. I can't tell, at this point, whether I would prioritize consistency over ease of use, but if that's what you want to do, that's obviously fine. \r\n\r\nFrom my perspective, another way of making yabai easier to use would be to simply highlight this design decision in the documentation. Of course, you can say that all the information is already there, but it still took me quite a while to figure out the importance of the query command. As someone who is getting started with yabai, it felt like that would be for more sophisticated setups so it didn't occur to me for a while that I really need to jump through that hoop to select a window by its title. So I think it might help users to have that clarified more explictly early on in the docs, even if it may seem redundant to more experienced users.\r\n\r\nAs I think more about it, I think I might be able to turn around your consistency argument to argue for a simplification of selecting named windows: what about allowing labels for windows? Why should `WINDOW_SEL` not accept `LABEL`? If that were added, it would at least allow us to query windows once, label them, and then refer to them via their label...\r\n\r\n \r\n\r\n"
      },
      {
        "user": "koekeishiya",
        "created_at": "2022-08-25T13:15:16Z",
        "body": "> Thanks a lot for explaining. It makes more sense now. I am looking at this from the perspective of someone who is not a software engineer and who has just started using yabai. I can't tell, at this point, whether I would prioritize consistency over ease of use, but if that's what you want to do, that's obviously fine.\r\n\r\nI think it is important to have an interface that is easy-to-understand in terms how to do things. I agree that adding a single option that would let you select a window by its title as proposed is easier for the specific thing you are trying to do here, but from an overall design pov it makes things more unclear; as in there are now multiple ways of doing the same thing, but only when some properties are applied -- it makes the interface convoluted over time.\r\n\r\n> From my perspective, another way of making yabai easier to use would be to simply highlight this design decision in the documentation. Of course, you can say that all the information is already there, but it still took me quite a while to figure out the importance of the query command. As someone who is getting started with yabai, it felt like that would be for more sophisticated setups so it didn't occur to me for a while that I really need to jump through that hoop to select a window by its title. So I think it might help users to have that clarified more explictly early on in the docs, even if it may seem redundant to more experienced users.\r\n\r\nI agree that it could certainly be outlined with more info/samples in the wiki, but it is not really high on my priority list. I don't spend too much time on this project these days, and would rather do programming when I do make time for it. The wiki used to be open for the community to edit, but people made changes that made things incorrect, and I would have to spend a lot of time to continually review changes (and revert some of them), which is why I locked it down.\r\n\r\n> As I think more about it, I think I might be able to turn around your consistency argument to argue for a simplification of selecting named windows: what about allowing labels for windows? Why should WINDOW_SEL not accept LABEL? If that were added, it would at least allow us to query windows once, label them, and then refer to them via their label...\r\n\r\nNo reason really, I just haven't implemented it yet. For consistency reasons, as you mention, it should be possible to allow labelling both windows and displays as well (all \"entities\"). The labelling spaces thing was added as a quick experimental thing, and the label-system is not completely fleshed out yet. I believe there are some open issues regarding it and allowing for default labels when none are specified and so on. No ETA for when that will be a priority though."
      }
    ]
  },
  {
    "number": 387,
    "title": "How to perfectly center unmanaged and floated apps?",
    "created_at": "2020-01-25T20:39:57Z",
    "closed_at": "2020-01-29T18:22:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/387",
    "body": "Currently using `yabai -m rule --add app=\"^Telegram$\" manage=off grid=6:4:1:1:2:4` to center apps that can be resized but I want to also know how to center apps like System Preferences.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/387/comments",
    "author": "rublev",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2020-01-26T14:49:47Z",
        "body": "```sh\r\n#! /usr/bin/env zsh\r\n\r\nevents=('application_launched')\r\napps=('Reminders' 'System Preferences')\r\n\r\nread -r -d '' action <<- 'EOF'\r\n  window=\"$(yabai -m query --windows --window)\"\r\n  display=\"$(yabai -m query --displays --window)\"\r\n  coords=\"$(jq \\\r\n    --argjson window \"${window}\" \\\r\n    --argjson display \"${display}\" \\\r\n    -nr '(($display.frame | .x + .w / 2) - ($window.frame.w / 2) | tostring)\r\n      + \":\"\r\n      + (($display.frame | .y + .h / 2) - ($window.frame.h / 2) | tostring)')\"\r\n  yabai -m window --move \"abs:${coords}\"\r\nEOF\r\n\r\n(( ${#apps[@]} ))   && app_query=\"app=\\\"^($(IFS=\\|;echo \"${apps[*]}\"))\\$\\\"\"\r\nfor event in \"${events[@]}\"; do\r\n  yabai -m signal --add label=\"${0}_signal_${event}\" event=\"${event}\" \\\r\n    $(eval \"${app_query}}\") action=\"${action}\"\r\ndone\r\n```\r\n\r\nFound this somewhere in my setup, not sure if this still works—haven't used it in a long time."
      }
    ]
  },
  {
    "number": 386,
    "title": "How to have windows default to tiling horizontally? ",
    "created_at": "2020-01-24T20:43:26Z",
    "closed_at": "2020-02-12T09:37:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/386",
    "body": "I have read through the documentation many times, and I feel like I\"m missing something so incredibly simple.\r\n\r\nWhenever a window tiles currently, it will tile into a tall layout. I would like the default option to be horizontal instead. Right now I have to constantly toggle split in order to get the layout that I want. Once toggled to the one I want, if I restart, it goes back to tiling in tall form.\r\n\r\nI'm surely missing something incredibly obvious with this.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/386/comments",
    "author": "ChrisOlsonFilms",
    "comments": [
      {
        "user": "johnallen3d",
        "created_at": "2020-01-24T20:49:50Z",
        "body": "Maybe you can execute a toggle at the end of your `yabairc`?"
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-01-24T20:50:49Z",
        "body": "You can create a signal that toggles the split if it's vertical. It's not a trivial setting to change right now, since it defaults to using the golden ratio to determine the next split."
      },
      {
        "user": "hrvstr",
        "created_at": "2020-01-28T11:17:14Z",
        "body": "How would this signal look like? I can't see any event that has anything to do with the split options?"
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-01-28T11:40:00Z",
        "body": "You'd need to use `event=application_launched` for restored windows and `event=window_created` for newly created windows. Then, for all windows that are restored or created, check whether their split is vertical, and if it is toggle it to horizontal."
      },
      {
        "user": "hrvstr",
        "created_at": "2020-01-28T16:30:30Z",
        "body": "Sadly I have no clue how to do this... It would be nice to have some more complex example rules and signals listed somewhere. I have jq installed and a basic understanding of JSON but no idea where to start learning how to write this stuff."
      },
      {
        "user": "hrvstr",
        "created_at": "2020-02-05T09:42:05Z",
        "body": "I almost there, but it looks like I am still doing something wrong here.\r\n\r\nI am using this signal but it does not seem to work.\r\n\r\n```\r\nyabai -m signal --add \\\r\n\tlabel=launch-split \\\r\n\tevent=application_launched \\\r\n\taction='yabai -m query --windows --window $YABAI_WINDOW_ID \\\r\n    | jq -re '.split == \"horizontal\"' \\\r\n\t && yabai -m window $YABAI_WINDOW_ID --toggle split\r\n\t'\r\n```\r\n\r\nI get this error:\r\n```\r\nunknown key ''\r\ninvalid key-value pair 'horizontal \\\r\n\t && yabai -m window $YABAI_WINDOW_ID --toggle split\r\n\t'\r\n```\r\n\r\nRunning this command on a window with horizontal split is working as intended:\r\n`yabai -m query --windows --window | jq -re '.split == \"horizontal\"' && yabai -m window --toggle split`"
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-02-05T09:58:12Z",
        "body": "Either the quotation is wrong when inlining the script or there is a bug in signal processing when parsing key-value pairs, because your script has == in it. Not sure which one is at fault here.\r\nYou can paste it in a shell-script and simply have your signal execute the script for now."
      },
      {
        "user": "hrvstr",
        "created_at": "2020-02-05T10:23:53Z",
        "body": "Thanks, got it working now!\r\nIt's probably the quotation, i have to read up on this topic...\r\n\r\n@ChrisOlsonFilms you can use this. You just have to swap horizontal with vertical as I am doing the opposite.\r\n\r\n### .yabairc\r\n```\r\nyabai -m signal --add \\\r\n\tlabel=launch-split \\\r\n\tevent=application_launched \\\r\n\taction='~/Documents/script/yabai/auto-split.sh'\r\n\t\r\nyabai -m signal --add \\\r\n\tlabel=create-split \\\r\n\tevent=window_created \\\r\n\taction='~/Documents/script/yabai/auto-split.sh'\r\n```\r\n\r\n### auto-split.sh\r\n```\r\n#!/usr/bin/env bash\r\nyabai -m query --windows --window $YABAI_WINDOW_ID | jq -re '.split == \"horizontal\"' && yabai -m window $YABAI_WINDOW_ID --toggle split\r\n```"
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-02-05T11:55:26Z",
        "body": "There's still a slight mistake in there: The `event=application_launched` signal does not carry `$YABAI_WINDOW_ID`, which then evaluates to an empty string in the signals action, causing it to act on the focused window.\r\n\r\nIf multiple windows are restored, this is incorrect behavior.\r\n\r\nInstead, you should use the `$YABAI_PROCESS_ID` that the signal actually carries and query for all windows, filtering by their process id to get their window id, and then change the split on that."
      }
    ]
  },
  {
    "number": 381,
    "title": "Executing shell script with command not working",
    "created_at": "2020-01-22T20:46:46Z",
    "closed_at": "2020-02-08T08:03:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/381",
    "body": "first attempt (not working)\r\n\r\n```bash\r\nubersicht=\"$(ps ax | grep sicht | awk '{print $5}' | head -1 | cut -d/ -f3 | cut     -d. -f1)\"\r\nalt - x: osascript -e 'tell application \"'\"$ubersicht\"'\" to refresh'\r\n```  \r\n\r\nsecond attempt (not working)\r\nrefresh-ubersicht.sh (chmod +x)\r\n```bash\r\n#!/usr/bin/env bash\r\n\r\nset -e\r\n\r\nubersicht=\"$(ps ax | grep sicht | awk '{print $5}' | head -1 | cut -d/ -f3 | cut     -d. -f1)\"\r\necho $ubersicht\r\nosascript -e 'tell application \"'\"$ubersicht\"'\" to refresh'\r\n```\r\ncommand 1 (not working): `alt - x : '/Users/username/.dotfiles/yabai/refresh-ubersicht.sh'`\r\ncommand 2 (not working): `alt - x : '~/.dotfiles/yabai/refresh-ubersicht.sh'`\r\ncommand 3 (not working): `alt - x : /Users/username/.dotfiles/yabai/refresh-ubersicht.sh`\r\ncommand 4 (not working): `alt - x : ~/.dotfiles/yabai/refresh-ubersicht.sh`\r\n  \r\nzsh alias (working)\r\n```bash\r\n# refresh ubersicht pecan style\r\nubersicht=\"$(ps ax | grep sicht | awk '{print $5}' | head -1 | cut -d/ -f3 | cut -d. -f1)\"\r\n# alias ru=\"osascript -e 'tell application \\\"'$(ps ax | grep sicht | awk '{print $5}' | head -1 | cut -d/ -f3 | cut -d. -f1)'\\\" to refresh'\"\r\nalias ru=\"osascript -e 'tell application \\\"'$ubersicht'\\\" to refresh'\"\r\n```",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/381/comments",
    "author": "rublev",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2020-01-22T20:57:43Z",
        "body": "This really isn't an issue with yabai.\r\n\r\nDid you consider looking at the stdout / stderr of the parent process to see why and where this fails?\r\n\r\nSide note: If your script is named \"refresh-ubersicht\", then `ps ax | grep sicht` will also catch the script itself. Use something like `pgrep -x` instead (see `man 1 pgrep`)."
      },
      {
        "user": "rublev",
        "created_at": "2020-01-22T21:03:08Z",
        "body": "> This really isn't an issue with yabai.\r\n> \r\n> Did you consider looking at the stdout / stderr of the parent process to see why and where this fails?\r\n\r\ndon't know enough about system stuff to even know what stdout or stderr is, will look into it.  \r\n  \r\n> Side note: If your script is named \"refresh-ubersicht\", then `ps ax | grep sicht` will also catch the script itself. Use something like `pgrep -x` instead (see `man 1 pgrep`).  \r\n  \r\nhow? its a shell script not an actively running app."
      },
      {
        "user": "rublev",
        "created_at": "2020-01-22T22:15:11Z",
        "body": "> This really isn't an issue with yabai.\r\n> \r\n> Did you consider looking at the stdout / stderr of the parent process to see why and where this fails?\r\n> \r\n> Side note: If your script is named \"refresh-ubersicht\", then `ps ax | grep sicht` will also catch the script itself. Use something like `pgrep -x` instead (see `man 1 pgrep`).\r\n\r\nwhat am I doing wrong with syntactically?  \r\n  \r\n```bash\r\nyabai -m signal --add event=space_changed action=\"osascript -e 'tell application $(ps ax | grep sicht | awk '{print $5}' | head -1 | cut -d/ -f3 | cut -d. -f1) to refresh'\"`  \r\n```\r\n  \r\ntrying to get the following working: \r\n```bash\r\n# refresh primary display workspaces\r\nyabai -m signal --add event=space_changed \\\r\n    action=\"osascript -e 'tell application \\\"Übersicht\\\" to refresh widget id \\\"nibar-spaces-primary-jsx\\\"'\"\r\n```"
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-01-22T22:32:00Z",
        "body": "I suggest reading up on how to refresh individual Übersicht widgets using AppleScript, and discussing further in the repository for the bar you're using.\r\n\r\nThere is no concise question in this thread about yabai, and it looks like the troubles you're having are not related to yabai either."
      }
    ]
  },
  {
    "number": 373,
    "title": "Command to move app to a different space and follow it? Currently if I send an app to a new space I have to manually move to that space",
    "created_at": "2020-01-20T01:59:48Z",
    "closed_at": "2020-01-20T20:02:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/373",
    "body": "I can't find a reference for the command I need to use to move an app to a new space and automatically follow focus. `yabai -m window --space X` doesn't do it. I tried also changing the `mouse_follow_focus` to `on` but it had no effect. There is nothing to show in my configs as my yabai config is just the default config and skhd I only have this one command I'm testing right now as I'm just setting things up.\r\n  \r\nThanks!",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/373/comments",
    "author": "rublev",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-01-20T08:48:21Z",
        "body": "The following chain should do what you want: `yabai -m window --space  1; yabai -m space --focus 1`"
      },
      {
        "user": "rublev",
        "created_at": "2020-01-20T16:45:26Z",
        "body": "Thanks! What syntax is that with the `;`? Wouldn't it be `&&`?"
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-01-20T18:09:48Z",
        "body": "IIRC when chaining commands with `;` the second command will run even if the previous command fails. With `&&` you get short-circuiting, so the second command won't run if the previous one failed. I suppose `&&` would be more correct in this case."
      }
    ]
  },
  {
    "number": 367,
    "title": "config --space do not work correctly with external monitor",
    "created_at": "2020-01-17T15:04:55Z",
    "closed_at": "2020-01-20T09:53:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/367",
    "body": "Hi, \r\n\r\nthe `--space` option in the .yabai config file seems to ignore spaces on a second monitor and mess with space numbers.\r\n\r\nWith the following configuration, the 120 padding is applied to the screen named \"Desktop 1\" in mission control. I tried to change the value after the --space option but the screens on the external monitor seems to be out of reach.\r\n\r\n ```\r\nyabai -m config layout                       bsp\r\nyabai -m config top_padding                  50\r\nyabai -m config bottom_padding               50\r\nyabai -m config left_padding                 50\r\nyabai -m config right_padding                50\r\nyabai -m config window_gap                   20\r\n\r\nyabai -m config --space 2 top_padding     120\r\nyabai -m config --space 2 bottom_padding  120\r\nyabai -m config --space 2 left_padding    200\r\nyabai -m config --space 2 right_padding   200\r\nyabai -m config --space 2 window_gap      50\r\n```\r\n\r\n```\r\nExternal Monitor:\r\n[Fullscreen App] - [Fullscreen App] - [Desktop 3]\r\n\r\nMacbook screen:\r\n[Fullscreen App] - [Desktop 1] - [Desktop 2]\r\n```\r\n\r\nOS: Catalina 10.15.1\r\n\r\n⚠️ The System Integrity Protection is not disabled on my computer.\r\n",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/367/comments",
    "author": "Morniak",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-01-18T12:05:23Z",
        "body": "yabai counts Fullscreen App spaces, because it is necessary/useful to interact with them for other purposes. The index is then simply increased by 1 for each space.\r\n\r\n\r\n```\r\nExternal Monitor:\r\n[Fullscreen App] (space 4) - [Fullscreen App] (space 5) - [Desktop 3] (space 6)\r\n\r\nMacbook screen:\r\n[Fullscreen App] (space 1) - [Desktop 1] (space 2) - [Desktop 2] (space 3)\r\n```"
      },
      {
        "user": "Morniak",
        "created_at": "2020-01-20T09:53:09Z",
        "body": "Coming from chunkwm I was not expecting this behavior. \r\nThanks for the answer 👍  "
      }
    ]
  },
  {
    "number": 363,
    "title": "How to kill a window?",
    "created_at": "2020-01-07T00:57:54Z",
    "closed_at": "2020-01-07T17:19:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/363",
    "body": "Hey, how can I actually kill a window, like in I3 (command + q)?",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/363/comments",
    "author": "tdymel",
    "comments": [
      {
        "user": "kinglouie",
        "created_at": "2020-01-07T13:27:10Z",
        "body": "doesn't it make sense to kill the window with macOS default shortcut (cmd +w) ?"
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-01-07T14:31:05Z",
        "body": "`yabai -m window [<window selector>] --close`"
      },
      {
        "user": "tdymel",
        "created_at": "2020-01-07T17:19:46Z",
        "body": "> doesn't it make sense to kill the window with macOS default shortcut (cmd +w) ?\r\n\r\nProbably, its a work laptop, so given that this particular laptop model does not have nice linux drivers, I try to get the best out of it :D So, I dont know much about MacOS.\r\n\r\nThanks for answering!"
      },
      {
        "user": "tdymel",
        "created_at": "2020-01-07T17:51:15Z",
        "body": "Btw. Nice name. It literally described my situation when I discovered that there are no linux drivers :D"
      }
    ]
  },
  {
    "number": 345,
    "title": "Feature request: Ability to set default initial window behavior",
    "created_at": "2019-12-16T06:13:53Z",
    "closed_at": "2019-12-16T08:32:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/345",
    "body": "I was wondering if it's possible to config initial default window behavior so that new opened windows are for example floating windows (or what user prefers). It is sometimes annoying when new windows rearrange my view and this option would be helpful.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/345/comments",
    "author": "lauritk",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2019-12-16T08:15:11Z",
        "body": "What you're looking for is called window rules. \r\n\r\ndocs tl;dr\r\n\r\n```sh\r\n# float all Safari windows by default\r\nyabai -m rule --add app='^Safari$' manage=off\r\n\r\n# float all windows by default whose title ends in `' Preferences'`\r\nyabai -m rule --add title=' Preferences$' manage=off\r\n\r\n# Make Chrome Picture in Picture mode windows appear topmost and on all spaces\r\nyabai -m rule --add app='^Google Chrome$' title='^Picture in Picture$' manage=off topmost=on sticky=on"
      },
      {
        "user": "lauritk",
        "created_at": "2019-12-16T08:32:30Z",
        "body": "Thank you, this was it! :)"
      }
    ]
  },
  {
    "number": 340,
    "title": "Swap window with mouse",
    "created_at": "2019-12-13T11:10:02Z",
    "closed_at": "2019-12-13T11:32:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/340",
    "body": "Click-dragging currently support two actions: move and resize. Would it be possible to enable a third action for 'swap'?\r\n\r\nIt would be nice if this could be exposed by a second mouse modifier key + button click, but this might be tricky in terms of config, so enabling extra mouse buttons (3, or even 4..5..n) would work also.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/340/comments",
    "author": "anoother",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2019-12-13T11:11:47Z",
        "body": "You can just drag a window (e.g., by using the move action) onto the center of another window to swap them, or onto the edge of another window to warp (re-insert) onto the window."
      },
      {
        "user": "anoother",
        "created_at": "2019-12-13T11:17:39Z",
        "body": "Aha! Did not realise this, thanks."
      },
      {
        "user": "anoother",
        "created_at": "2019-12-13T11:19:06Z",
        "body": "Just tried, it seems that the windows move, as opposed to swap, whatever I do... what is the threshold/area for 'centre'?"
      },
      {
        "user": "dominiklohmann",
        "created_at": "2019-12-13T11:19:44Z",
        "body": "See discussion in #142."
      },
      {
        "user": "anoother",
        "created_at": "2019-12-13T11:32:51Z",
        "body": "Thanks. Think I have an old version."
      }
    ]
  },
  {
    "number": 334,
    "title": "Tiling mode? Changes occasionally after hours of use",
    "created_at": "2019-12-05T10:54:14Z",
    "closed_at": "2020-02-12T09:36:07Z",
    "labels": [
      "help wanted",
      "question",
      "undetermined"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/334",
    "body": "Every now and again I get tiling that behaves like this: \r\n\r\n```\r\n|a|b|cc|\r\n|a|b|cc|\r\n```\r\nKind of horizontal tiling \r\n\r\nWhere a b and c are different apps \r\n\r\nInstead of what usually happens which is:\r\n```\r\n|a|c|\r\n|b|c|\r\n```\r\nWhich is what I want, tiling vertically and horizontally my config currently looks like this:\r\n```\r\n#!/usr/bin/env sh\r\n\r\nyabai -m config mouse_follows_focus on\r\nyabai -m config focus_follows_mouse autoraise\r\nyabai -m config window_topmost on\r\nyabai -m config layout bsp \r\n\r\nyabai -m config mouse_modifier fn\r\nyabai -m config mouse_action1 move\r\nyabai -m config mouse_action2 resize\r\n```",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/334/comments",
    "author": "slifin",
    "comments": [
      {
        "user": "slifin",
        "created_at": "2019-12-05T10:56:11Z",
        "body": "Restarting yabai with brew appears to temporarily fix this\r\nCould replicate this on `2.1.2`, will update if I can replicate on `2.1.3`"
      },
      {
        "user": "koekeishiya",
        "created_at": "2019-12-14T12:05:36Z",
        "body": "I don't think this is actually a bug, but rather the consequence of certain modifications made to the bsp-tree over time, as operations persist. E.g: Open window A, open window B, resize such that A fills 30% and B filles 70%. Close window B. Now open a new window C. C will fill 70% and A will fill 30%."
      }
    ]
  },
  {
    "number": 326,
    "title": "Float the next window going to be opened",
    "created_at": "2019-11-29T05:04:45Z",
    "closed_at": "2019-11-29T12:44:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/326",
    "body": "I used the following to open iTerm in floating mode (only when I wanted to) - in chunkwm\r\n``` \r\n cmd  - return      : chunkc set window_float_next 1; /Applications/iTerm.app/Contents/MacOS/iTerm2 \r\n```\r\nHow can I implement an equivalent in yabai wm. The following didn't work (the new window remains titled)\r\n``` \r\ncmd  - return      : /Applications/iTerm.app/Contents/MacOS/iTerm2 ;\\\r\n       \t\t     yabai -m window --toggle float \r\n```\r\nWhat am I missing? Sorry, if it has already been addressed/answered and that I didn't search properly.\r\nAny help is highly appreciated.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/326/comments",
    "author": "jack836",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2019-11-29T05:38:08Z",
        "body": "What you're missing with your second approach is that you're toggling float on the focused window, which isn't iTerm2 if you've just opened it.\r\n\r\nSomething like this works pretty well:\r\n\r\n```sh\r\nyabai -m signal --add label=float_next app='^iTerm2$' event=window_created action='yabai -m signal --remove float_next; yabai -m window $YABAI_WINDOW_ID --toggle float'\r\n```\r\n\r\nNote that the `event=window_created` signal doesn't trigger when windows are _restored_ when an application launches, so the logic would need to be adapted for this to also works for restored windows."
      },
      {
        "user": "jack836",
        "created_at": "2019-11-29T06:54:44Z",
        "body": "Thank you @dominiklohmann  for quickly putting up a solution.\r\n\r\nI tested it on my machine, adding the above line to yabairc.\r\nWhen I fire-up a new iTerm2, it fails to float and gets tiled (it also appears that the window gets floated for a fraction of a second at start, but then falls back to be tiled immediately). I have no other rules/signals set for iTerm2. I killed all iTerm2 windows, restarted yabai etc, but nothing worked. It feels as if it's getting overridden by some other setting?\r\n\r\n[Update]  It has to do something with the way I launch iTerm2. When I launch iTerm through Launchpad --> iTerm2 OR  iTerm2-Menu --> Shell --> New Window; then the newly spanned iTerm2 window actually FLOATS. So, wondering what's wrong doing the same through shkd using \r\n`cmd  - return      : /Applications/iTerm.app/Contents/MacOS/iTerm2 `"
      },
      {
        "user": "dominiklohmann",
        "created_at": "2019-11-29T07:06:25Z",
        "body": "I explained that caveat above.\r\n\r\n> Note that the `event=window_created` signal doesn't trigger when windows are _restored_ when an application launches, so the logic would need to be adapted for this to also works for restored windows.\r\n\r\nYou'll have to hook into `event=application_launched`, which carries `$YABAI_PROCESS_ID`, which can then be turned into a set of window ids on start.\r\n\r\nSomething like this (off the top of my head, this is not battle-tested):\r\n\r\n```sh\r\n# trigger on window_created\r\nyabai -m signal --add label=float_next_window_created event=window_created action='yabai -m signal --remove float_next_window_created; yabai -m signal --remove float_next_application_launched; yabai -m window $YABAI_WINDOW_ID --toggle float'\r\n\r\n# trigger on application_launched\r\nyabai -m signal --add label=float_next_application_launched event=application_launched action='yabai -m signal --remove float_next_window_created; yabai -m signal --remove float_next_application_launched; yabai -m query --windows | jq -r \".[] | select(.pid == $YABAI_PROCESS_ID).id\" | xargs -I{} yabai -m window {} --toggle float'\r\n```\r\n\r\nYes, this workaround is ugly. And no, there is no unified window_spawned event that does this for you.\r\n\r\nTo make this really robust you'd also need to check whether the target windows are not already floating."
      },
      {
        "user": "jack836",
        "created_at": "2019-11-29T07:11:39Z",
        "body": "Thank you again.\r\n@dominiklohmann I did update my previous comment - in case you missed it ...\r\n[Update] It has to do something with the way I launch iTerm2. When I launch iTerm through Launchpad --> iTerm2 OR iTerm2-Menu --> Shell --> New Window; then the newly spanned iTerm2 window actually FLOATS. So, wondering what's wrong doing the same through shkd using\r\ncmd - return : /Applications/iTerm.app/Contents/MacOS/iTerm2\r\n\r\nBTW,  I am not trying to restore a window that is already created. I believe I am spawning a new window always (let me know if that is not the case). Thank you again."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2019-11-29T07:17:37Z",
        "body": "I did read your update, and I think you're still misunderstanding the difference between _restored_ windows and _created_ windows on a semantic level.\r\n\r\nWhen an application first launches, the windows opened by it are _restored_. They do not trigger an `event=window_created` signal, but rather an `event=application_launched` signal. Note that this can be multiple windows at the same time, which is why the signal carries a process id, and you need to do an additional query to get all windows that belong to that process id.\r\n\r\nOpening additional windows _creates_ them. These do trigger `event=window_created`, but not `event=application_launched`. This is always just a single window, which is why this signal carries the window id directly."
      },
      {
        "user": "jack836",
        "created_at": "2019-11-29T07:28:19Z",
        "body": "Thank you for the explanation and being very helpful. I think I got the point this time. \r\n\r\nSo, now I am trying to think if it is possible to replicate process involved in doing (clicking)`Launchpad --> iTerm2 OR iTerm2-Menu --> Shell --> New Window` using an apple-script (then trigger it from shkd). I  am not good in apple-script either and hence could not think of a possibility.\r\n\r\nSorry, if I again missed/mis-understood some thing. Thank you for being considerate and helpful."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2019-11-29T07:57:13Z",
        "body": "The easiest is just to create triggers for both signals as I've shown above:\r\n\r\n> ```shell\r\n> # trigger on window_created\r\n> yabai -m signal --add label=float_next_window_created event=window_created action='yabai -m signal --remove float_next_window_created; yabai -m signal --remove float_next_application_launched; yabai -m window $YABAI_WINDOW_ID --toggle float'\r\n> \r\n> # trigger on application_launched\r\n> yabai -m signal --add label=float_next_application_launched event=application_launched action='yabai -m signal --remove float_next_window_created; yabai -m signal --remove float_next_application_launched; yabai -m query --windows | jq -r \".[] | select(.pid == $YABAI_PROCESS_ID).id\" | xargs -I{} yabai -m window {} --toggle float'\r\n> ```\r\n\r\nE.g., in your .skhdrc:\r\n\r\n```sh\r\n cmd - return : \\\r\n    yabai -m signal --add label=float_next_window_created event=window_created action='yabai -m signal --remove float_next_window_created; yabai -m signal --remove float_next_application_launched; yabai -m window $YABAI_WINDOW_ID --toggle float' ; \\\r\n    yabai -m signal --add label=float_next_application_launched event=application_launched action='yabai -m signal --remove float_next_window_created; yabai -m signal --remove float_next_application_launched; yabai -m query --windows | jq -r \".[] | select(.pid == $YABAI_PROCESS_ID).id\" | xargs -I{} yabai -m window {} --toggle float' ; \\\r\n    /Applications/iTerm.app/Contents/MacOS/iTerm2 \r\n```\r\n\r\nObviously you could replace the way you open iTerm2 with some sophisticated AppleScript, but that's out of scope for this issue."
      },
      {
        "user": "jack836",
        "created_at": "2019-11-29T10:55:32Z",
        "body": "I did add the above lines to my .skhdrc for a quick test, but the spanned iTerm2 windows again failed to float.\r\nReading those lines I am convinced that it should float the next spawned window, but didn't. May be I am still missing/mis-understanding something.... Hope someone successfully gets it to work.\r\n\r\nI sincerely appreciate all the efforts of @dominiklohmann "
      },
      {
        "user": "dominiklohmann",
        "created_at": "2019-11-29T11:02:32Z",
        "body": "I've simply pasted what's below into my skhdrc and it works. Only thing I've exchanged is how I open iTerm2.\r\n\r\n```\r\n cmd - return : \\\r\n    yabai -m signal --add label=float_next_window_created event=window_created action='yabai -m signal --remove float_next_window_created; yabai -m signal --remove float_next_application_launched; yabai -m window $YABAI_WINDOW_ID --toggle float' ; \\\r\n    yabai -m signal --add label=float_next_application_launched event=application_launched action='yabai -m signal --remove float_next_window_created; yabai -m signal --remove float_next_application_launched; yabai -m query --windows | jq -r \".[] | select(.pid == $YABAI_PROCESS_ID).id\" | xargs -I{} yabai -m window {} --toggle float' ; \\\r\n    osascript -e 'tell application \"iTerm2\" to create window with default profile command \"\"' || open -b com.googlecode.iTerm2\r\n```\r\n\r\nAs a sidenote, I am not convinced that <kbd>cmd</kbd> + <kbd>return</kbd> is a good shortcut, since that actually overrides system functionality (confirm input/form while still in a text field of that input/form). For example, I can send the issue reply I am currently writing by pressing <kbd>cmd</kbd> + <kbd>return</kbd> without leaving the text field."
      },
      {
        "user": "jack836",
        "created_at": "2019-11-29T11:15:56Z",
        "body": "I tried with your last script and it WORKED ! Yes, the new iTerm window did FLOAT this time.\r\nWhen I went back again to `/Applications/iTerm.app/Contents/MacOS/iTerm2 ` , it didn't work.\r\nSo, Yes the way you open iTerm2 really matters here (at-least for me).\r\n\r\nAnyway, happy to have a nice feature (that I missed for quite a while). Thanks to the command-line wizardry of @dominiklohmann "
      }
    ]
  },
  {
    "number": 322,
    "title": "Add rule that applies to non-resizable windows",
    "created_at": "2019-11-24T00:57:40Z",
    "closed_at": "2019-12-28T21:40:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/322",
    "body": "Hello, I was trying to come up with a rule that makes all preferences windows floating. There was the suggestion in #272 to have a rule like \r\n```\r\nyabai -m rule --add title='Preferences$' manage=off topmost=on\r\n```\r\nwhich works well for those windows with titles ending in \"Preferences\". Unfortunately, some apps (e.g. Safari and Calendar) have preference windows that don't have such titles, so this rule doesn't work. However, these preference windows are all non-resizable (the output of `yabai -m query` contains `\"resizable\":0` for those windows). \r\n\r\nIs there any way to make a rule that applies to all such non-resizable windows?",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/322/comments",
    "author": "davidwzhao",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2019-11-24T01:05:18Z",
        "body": "This is the best you can do I think:\r\n\r\n```sh\r\nyabai -m signal --add event=window_created action='yabai -m query --windows --window $YABAI_WINDOW_ID | jq -er \".resizable == 0 and .floating == 0\" && yabai -m window $YABAI_WINDOW_ID --toggle float'\r\n```\r\n\r\nThis will toggle a window to floating when it is neither resizable nor floating at the time it is created. Note that some windows misreport their resizable attribute (e.g., Safari preferences).\r\n\r\nIf you don't want the window to be tiled for a split second, you can revert the logic: Create a rule that makes every window float and then tile all windows with an action that don't match the desired behavior.\r\n\r\n<hr/>\r\n\r\nAnother thing you can do: Use `skhd` to create a passthrough mapping for <kbd>cmd</kbd> + <kbd>,</kbd> that floats the next window that gets created and get used to only ever spawning preferences windows using that almost universal keyboard shortcut."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2019-11-29T15:12:06Z",
        "body": "> Another thing you can do: Use `skhd` to create a passthrough mapping for <kbd>cmd</kbd> + <kbd>,</kbd> that floats the next window that gets created and get used to only ever spawning preferences windows using that almost universal keyboard shortcut.\r\n\r\nThis does the trick:\r\n\r\n```sh\r\n# Float the next window and forward the keypress\r\ncmd - 0x2B -> : \\\r\n    yabai -m signal --add label=float_next_window_created event=window_created action='yabai -m signal --remove float_next_window_created; yabai -m signal --remove float_next_application_launched; yabai -m query --windows --window $YABAI_WINDOW_ID | jq -er \".floating == 0\" && yabai -m window $YABAI_WINDOW_ID --toggle float' && \\\r\n    yabai -m signal --add label=float_next_application_launched event=application_launched action='yabai -m signal --remove float_next_window_created; yabai -m signal --remove float_next_application_launched; yabai -m query --windows | jq -r \".[] | select(.pid == $YABAI_PROCESS_ID && .floating == 0).id\" | xargs -I{} yabai -m window {} --toggle float'\r\n```\r\nNote that 0x2B is the <kbd>,</kbd> key on my german Mac keyboard layout. It might be different for your keyboard layout (see koekeishiya/skhd#1)."
      }
    ]
  },
  {
    "number": 296,
    "title": "Rule question",
    "created_at": "2019-10-30T22:20:20Z",
    "closed_at": "2019-12-28T21:40:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/296",
    "body": "Is it possible to move a app to a specific space but if the space doesn't exist it first creates it and then moves it?\r\n\r\n```\r\nyabai -m rule --add app=Spotify space=6\r\n```\r\n\r\nSo I want Spotify always on space 6, but if I currrently only have 3 spaces then it will create `4`, `5` and `6` before it sends Spotify to `space 6`?",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/296/comments",
    "author": "Cowboy-coder",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2019-11-01T12:01:15Z",
        "body": "You can quite easily do this with actions. When Spotify launches, query for all window ids belonging to the app with the same pid. Then, if there are not enough non-fullscreen spaces on the current display, create spaces until you have just enough. You can then move the window(s) to the target space by their id."
      }
    ]
  },
  {
    "number": 273,
    "title": "Question: Is it possible to navigate windows in Mission Control?",
    "created_at": "2019-10-08T19:26:55Z",
    "closed_at": "2019-10-12T15:27:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/273",
    "body": "I'd like to be able to use the arrow keys to focus different windows in mission control (moving north, south, east, west). I know macos doesn't provide keybindings for this. Is it possible to implement with yabai?",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/273/comments",
    "author": "Tylerc230",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2019-10-08T20:21:32Z",
        "body": "The tricky part about this isn't focusing the windows, but making the keyboard shortcuts available only while Mission Control is active.\r\n\r\nHere's a three-step solution:\r\n- Create a signal for `event=mission_control_enter` that creates a file containing your keyboard shortcuts  to be used by `skhd` (e.g., `~/.config/yabai/mission-control.skhd`)\r\n- Create a signal for `event=mission_control_exit` that empties that file.\r\n- Hotload the temporary file in your `skhdrc` file using `.load ~/.config/yabai/mission-control.skhd`. \r\n\r\nThe keyboard shortcuts going into that temporary file should be something like this.\r\n\r\n```\r\nup : yabai -m window --focus north\r\n```\r\n\r\nNote though that `north` here means northward of the currently focused window as if it was still tiled and only focuses other tiled windows. Mission Control doesn't actually change the windows position and size, but rather applies a visual transformation to all windows. This will work best with *Group windows by application* being disabled in the Mission Control preferences.\r\n\r\nIf you want to include floating windows in your focus cycle, I encourage you to use a mix of window queries and `jq` filters for doing your own logic. The below might serve as inspiration.\r\n\r\n```\r\nshift - tab : yabai -m query --spaces | jq -re \".[] | select(.visible == 1).index\" | xargs -I{} yabai -m query --windows --space {} | jq -sre \"add | sort_by(.display, .frame.x, .frame.y, .id) | nth(index(map(select(.focused == 1))) - 1).id\" | xargs -I{} yabai -m window --focus {}\r\ntab : yabai -m query --spaces | jq -re \".[] | select(.visible == 1).index\" | xargs -I{} yabai -m query --windows --space {} | jq -sre \"add | sort_by(.display, .frame.x, .frame.y, .id) | reverse | nth(index(map(select(.focused == 1))) - 1).id\" | xargs -I{} yabai -m window --focus {}\r\n```"
      },
      {
        "user": "Tylerc230",
        "created_at": "2019-10-12T15:27:33Z",
        "body": "Great I didn't realize I could use --focus to navigate mission control. The blue mission control border/highlight doesn't show up on the mission control thumbnails but not a big issue. Thanks!"
      },
      {
        "user": "dominiklohmann",
        "created_at": "2019-10-12T15:57:02Z",
        "body": "@Tylerc230 if you enable *mouse follows focus* you'll get the blue borders as well. You can enable it in the `event=mission_control_enter` signal and disable it again in the `event=mission_control_exit` signal if you don't want to use it all the time."
      }
    ]
  },
  {
    "number": 261,
    "title": "[howto] Prevent apps from stealing focus",
    "created_at": "2019-09-20T14:37:02Z",
    "closed_at": "2019-10-09T08:28:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/261",
    "body": "Would it be possible to configure yabai to prevent applications from being able to steal focus?\r\n\r\nThe Webex Meetings app is particularly obnoxious about stealing focus when people share their desktops during a meeting.\r\n\r\nA rule for Webex specifically would be fine, or a general rule that would prevent all apps from stealing focus unless they are explicitly focused by yabai or the mouse would be ideal.\r\n\r\nApologies if this is a duplicate, I did a cursory search and didn't find anything immediately useful.\r\n\r\nThanks for any information/guidance!\r\n",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/261/comments",
    "author": "jdr195",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2019-09-20T15:38:23Z",
        "body": "I don't think this is possible to do. At the very least you'd have to hook the call to `_SLSSetFrontProcessWithOptions` implemented in the SkyLight.framework used by the WindowServer."
      },
      {
        "user": "jdr195",
        "created_at": "2019-09-20T17:18:35Z",
        "body": "That's a shame, but thank you for the response and insight :)\r\n"
      },
      {
        "user": "dominiklohmann",
        "created_at": "2019-09-20T18:53:15Z",
        "body": "You can always hook into the `event=window_focused` signal for that app and then focus the most recently focused window again. This won't prevent it from stealing focus, but it will immediately switch the focus back to the previously focused window."
      },
      {
        "user": "lmartins",
        "created_at": "2023-03-17T16:32:40Z",
        "body": "Think I'm seeing a related issue, where I have a code editor and a browser open. Saving changes in the editor causes the browser to refresh and unlike before the browser always steals focus at each reload."
      }
    ]
  },
  {
    "number": 251,
    "title": "per-window border color to highlight zoomed windows?",
    "created_at": "2019-09-15T12:50:28Z",
    "closed_at": "2019-12-28T21:41:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/251",
    "body": "I was wondering if it is possible to change the window border color on a per-window basis? I'm hoping to provide some kind of indication that a window is in `zoom-parent` mode, as in #89, but am hoping to change the border color for the zoomed window both when it is active and inactive to replicate some of the behavior of, e.g. a tabbed window, in i3.  \r\n\r\nI am currently turning the zoomed window border off on zoom and back on when it is un-zoomed, like so:\r\n\r\n`# toggle window parent zoom\r\nalt - d : yabai -m window --toggle zoom-parent;\\\r\n          yabai -m window --toggle border`\r\n\r\nIt works fine enough but I would prefer to be able to either \r\n\r\n1. Just turn *on* a border rather than turning it off, i.e. have all other windows borderless and zoomed ones bordered *or*\r\n\r\n2. Change the active and inactive colors of a zoomed window so it is clear even if the window isn't selected. \r\n\r\nIs this possible with any existing yabai actions/queries? If not, would it be possible to add the ability to turn borders on for individual windows and to set border colors window-by-window?\r\n\r\nThanks!\r\n\r\n-Jon ",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/251/comments",
    "author": "jzelner",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2019-09-15T14:09:32Z",
        "body": "This requires a fair bit of work on your end, but it is possible to have borders only for zoomed windows:\r\n\r\n- enable borders globally\r\n- create a \"catch all\" rule that disables borders for all windows\r\n- toggle borders on windows whenever you toggle zoom"
      },
      {
        "user": "jzelner",
        "created_at": "2019-09-15T16:22:45Z",
        "body": "Thanks - this seems like a great idea. Any pointers on how to make a catch-all rule? Is there a regex I can use to do that easily? It's been awhile since my Perl days..."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2019-09-15T18:38:07Z",
        "body": "```sh\r\nyabai -m rule --add app='.*' border=off\r\n```"
      }
    ]
  },
  {
    "number": 245,
    "title": "Spaces defined based on resolution",
    "created_at": "2019-09-11T11:01:00Z",
    "closed_at": "2019-10-09T08:26:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/245",
    "body": "It'd be nice to have spaces additionally defined based on resolution. This would be useful because some apps have minimum sizes (like Discord) or are too cluttered when working on the laptop screen vs an external monitor.\r\n\r\nIn my case it's jarring going from a 1440p monitor to the MBP's 1680x1050 equivalent display.\r\n\r\nRight now you can define how windows spawn and occupy spaces as follows:\r\n\r\n```\r\nyabai -m rule --add app=\"^Discord$\" space=2\r\n```\r\n\r\nPerhaps another conditional flag to `--add` which takes in horizontal `resolution` which you can define in three ways\r\n\r\n```\r\n> greater than\r\n< less than\r\n= optionally paired with < or > to give equality-to\r\nelse implicitly strictly equal\r\n```\r\n\r\n```\r\nresolution=\"1050\"      # matches 1050 width exactly\r\nresolution=\">=1050\"    # matches anything above or equal to 1050\r\nresolution=\"<=1050\"    # matches anything below or equal to 1050\r\n```\r\n\r\nThis means we can do things like this now\r\n\r\n```\r\nyabai -m rule --add app=\"^Discord$\" space=3 resolution=1050\r\nyabai -m rule --add app=\"^Discord$\" space=2\r\n```\r\n\r\nIf resolution is `1050` then any app matching `^Discord$` is put in space 3, otherwise it's put in space 2.\r\n\r\nI've suggested an additional `--app` flag as otherwise a new syntax or parsing algorithm is required or the configuration file which may not be backwards compatible. This is the least intrusive way to add such functionality and suits the already laid out structure of \"if the rules match `X` then do `Y`\". Where `X` is just another thing to match, the resolution.\r\n\r\nThis is also something I make take a look at doing a PR for when I have time but I am curious to see if others would find this useful also.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/245/comments",
    "author": "tsujp",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2019-09-11T11:06:36Z",
        "body": "This sounds unnecessarily complicated, and can already be implemented using signals quite easily.\r\n\r\nInstead, create a rule that makes Discord float so that it's not managed by default, and then create a signal that compares the size of the display it's on with your required size and moves it to another display if such a display exists and unfloats it on there. That's like 4-5 lines of code with signals, queries and `jq`."
      },
      {
        "user": "tsujp",
        "created_at": "2019-09-12T02:28:30Z",
        "body": "I'll give it a shot with the `jq` and `signals` approach as you suggest. I do think that common-enough tasks (if anyone else has a use case for this) do deserve their own dedicated setting though."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2019-09-12T04:18:49Z",
        "body": "> I do think that common-enough tasks do deserve their own dedicated setting though.\r\n\r\nYou'd just end up implementing a grammar much like jq's. I don't think this is maintainable."
      },
      {
        "user": "koekeishiya",
        "created_at": "2019-09-12T10:33:32Z",
        "body": "I think situations like this are exactly what the signal system is meant to address, and I don't think I would add this upstream. While there are probably other people who would benefit from this as well, the philosophy so far has been to keep things clean and simple, while exposing a way for the user to implement or alter behaviour according to their needs.\r\n\r\nYou may argue that this is simply one more parameter and a piece of code to go with that, and then another request comes along, and in the end the interface becomes bloated with many \"what if x,y,z,v,w\".  \r\n\r\nEdit: @dominiklohmann has spent a lot of time putting together a great wiki, and when it is updated there will also be a compilation of scripts to do different things, that are browsable by users, which could also include the snippets required to get the functionality discussed in this issue."
      }
    ]
  },
  {
    "number": 206,
    "title": "Status bar: Workspace counter/indicator on multiple display setups",
    "created_at": "2019-08-09T10:13:36Z",
    "closed_at": "2019-08-17T12:19:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/206",
    "body": "Setup:\r\nOS: MacOS 10.14.6\r\nMonitors: 2\r\n\r\nProblem description:\r\nI have 4 workspaces on monitor no. 1 and 3 workspaces on monitor no.2\r\nThe status bar **only counts the first 4 workspaces** present on the first monitor",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/206/comments",
    "author": "gtsop",
    "comments": [
      {
        "user": "A13k2",
        "created_at": "2019-08-12T19:48:58Z",
        "body": "Setup:\r\nOS: MacOS 10.14.6\r\nMonitors: 2\r\n\r\nI can only see the status bar on the main monitor."
      },
      {
        "user": "koekeishiya",
        "created_at": "2019-08-17T12:19:29Z",
        "body": "This is working as intended."
      },
      {
        "user": "uri",
        "created_at": "2019-08-21T14:18:12Z",
        "body": "It would be nice if the status bar would appear on multiple monitors. Sometimes I forget how many spaces and which space I'm on given a monitor."
      },
      {
        "user": "gtsop",
        "created_at": "2019-09-02T11:27:00Z",
        "body": "> This is working as intended.\r\n\r\n@koekeishiya Can you please clarify that you are referring to my initial report? The \"status bar exist on only one monitor\" is not what I reported on this ticket. This is about a wrong counter of total open workspaces which I highly doubt is an intentional behaviour.\r\n\r\n@A13k2 @uri please create a new ticket for your issue\r\n"
      },
      {
        "user": "koekeishiya",
        "created_at": "2019-09-02T15:40:57Z",
        "body": "@gtsop \r\n\r\nMy answer applies to both questions, sorry about the confusion. I would be more inclined to implementing #136 and have the spaces for that monitor draw on that specific bar, than I would enumerating all spaces to the primary bar that currently exists.\r\n\r\nHowever, before considering that, I'd need to first decide which kind of information I personally would find interesting to display.\r\n\r\nSimply showing all spaces is a trivial change if you don't mind cloning the repo and building from source. I can help you with the modifications if necessary, but I don't want it upstream as of now."
      },
      {
        "user": "gtsop",
        "created_at": "2019-09-04T20:13:35Z",
        "body": "@koekeishiya \r\n>  I would be more inclined to implementing #136\r\n\r\nI agree with that inclination. Thinking that having only one status bar was an intentional decision led me to expect that the status bar would enumerate all workspaces\r\n\r\n>  I can help you with the modifications if necessary, but I don't want it upstream as of now.\r\n\r\nI respect that. Would you consider having ether #206 or #136 implemented but disabled by default (and enabled via a config setting)? I don't think it makes sense to implement such a core feature on a fork other than the original repository. Many people depend on your upstream and get updates through that.\r\n\r\n"
      },
      {
        "user": "snaveevans",
        "created_at": "2019-09-24T14:45:06Z",
        "body": "@koekeishiya I'm looking to implement multi-monitor status bar in my forked version of your yabai.  I see the key files from #136 however I was wondering how the logic of instantiating multiple bars might go.  I have some ideas on but without going into further detail I wanted to know if this is the best place to discuss it or if you had some sort of chat/email you'd prefer to discuss this.\r\nPS thank you so much for yabai and skhd, they are awesome!"
      }
    ]
  },
  {
    "number": 198,
    "title": "Support for After Effects",
    "created_at": "2019-08-06T17:06:54Z",
    "closed_at": "2019-08-19T09:18:39Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/198",
    "body": "Would it be possible to add support for After Effects? Some of the Creative Cloud apps (e.g. Illustrator, Indesign) are already managed by yabai but After Effects is not.\r\n\r\n### window information:\r\n```\r\n{\r\n\t\"id\":4960,\r\n\t\"pid\":41041,\r\n\t\"app\":\"Adobe After Effects CC 2018.3 (15.1.2)\",\r\n\t\"title\":\"Adobe After Effects CC 2018 - Unbenanntes Projekt\",\r\n\t\"frame\":{\r\n\t\t\"x\":222.0000,\r\n\t\t\"y\":186.0000,\r\n\t\t\"w\":3440.0000,\r\n\t\t\"h\":1440.0000\r\n\t},\r\n\t\"level\":0,\r\n\t\"role\":\"AXWindow\",\r\n\t\"subrole\":\"AXFloatingWindow\",\r\n\t\"movable\":1,\r\n\t\"resizable\":1,\r\n\t\"display\":1,\r\n\t\"space\":2,\r\n\t\"visible\":0,\r\n\t\"focused\":0,\r\n\t\"split\":\"none\",\r\n\t\"floating\":1,\r\n\t\"sticky\":0,\r\n\t\"border\":0,\r\n\t\"zoom-parent\":0,\r\n\t\"zoom-fullscreen\":0,\r\n\t\"native-fullscreen\":0\r\n},{\r\n\t\"id\":3056,\r\n\t\"pid\":14564,\r\n\t\"app\":\"Adobe Illustrator CC 2018\",\r\n\t\"title\":\"Unbenannt-1* bei 150 % (RGB/GPU-Vorschau) \",\r\n\t\"frame\":{\r\n\t\t\"x\":0.0000,\r\n\t\t\"y\":0.0000,\r\n\t\t\"w\":3440.0000,\r\n\t\t\"h\":1440.0000\r\n\t},\r\n\t\"level\":0,\r\n\t\"role\":\"AXWindow\",\r\n\t\"subrole\":\"AXStandardWindow\",\r\n\t\"movable\":1,\r\n\t\"resizable\":1,\r\n\t\"display\":1,\r\n\t\"space\":2,\r\n\t\"visible\":0,\r\n\t\"focused\":0,\r\n\t\"split\":\"none\",\r\n\t\"floating\":0,\r\n\t\"sticky\":0,\r\n\t\"border\":0,\r\n\t\"zoom-parent\":0,\r\n\t\"zoom-fullscreen\":0,\r\n\t\"native-fullscreen\":0\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/198/comments",
    "author": "hrvstr",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2019-08-17T12:18:33Z",
        "body": "Does `yabai -m rule --add app=\"Adobe After Effects CC 2018.3 (15.1.2)\" manage=on` not work?"
      },
      {
        "user": "hrvstr",
        "created_at": "2019-08-19T08:32:25Z",
        "body": "No, does not seem to have any effect."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2019-08-19T09:09:42Z",
        "body": "That's because the regex is invalid, you need to escape both parantheses."
      },
      {
        "user": "hrvstr",
        "created_at": "2019-08-19T09:17:51Z",
        "body": "Yes, now it is working. Thanks!\r\n\r\n`yabai -m rule --add app=\"Adobe After Effects CC *\" manage=on`\r\n\r\nI now added this rule to make it update proof."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2019-08-19T09:19:45Z",
        "body": "Just `app=\"^Adobe After Effects CC\"` should be sufficient. `^` denotes the start of the line, and yabai looks for partial matches anyways. The star you added doesn't mean \"anything after this\" but instead denotes \"whatever character was before this, repeated any times (or 0 times)\"."
      }
    ]
  },
  {
    "number": 189,
    "title": "possibility of resizing windows on load in float layout",
    "created_at": "2019-08-03T19:03:20Z",
    "closed_at": "2019-09-03T17:46:47Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/189",
    "body": "it could be convenient to force windows (finder windows for example) to be a fixed dimension on load within a float layout. this way, a new window won't open as half the screen (or whatever else) in float because that was it's state when closed in bsp.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/189/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2019-08-03T22:51:01Z",
        "body": "Assuming you're running latest master: Filter by `app=\"^Finder$\"` for the signal `event=window_created`. Check if the space you're on is a floating space or if the window is floating and if it is, resize the window to a fixed size. You can read the window id in the signals action using `$YABAI_WINDOW_ID`, and should use it as a window selector."
      },
      {
        "user": "koekeishiya",
        "created_at": "2019-08-17T12:16:32Z",
        "body": "You can do that using rules as well.  See the *grid=* option."
      }
    ]
  },
  {
    "number": 149,
    "title": "Zoom parent with first_child window placement",
    "created_at": "2019-07-19T14:35:55Z",
    "closed_at": "2019-07-28T13:32:46Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/149",
    "body": "I'm using the following option in my config: `yabai -m config window_placement first_child`\r\n\r\nWhen I open 3 windows on a vertical monitor it initially looks like this:\r\n\r\n```\r\n3      2\r\n\r\n    1\r\n```\r\n\r\nIf I execute a `yabai -m window --warp south` on *2* to get the following layout:\r\n\r\n```\r\n3\r\n2\r\n1\r\n```\r\n\r\nThen if I zoom-parent on *2*, it ends up expanding over *1*. This is also what happens when *window_placement* is set to *second_child*. However, I would expect *2* to expand over *3* while using the *first_child* option.\r\n\r\nIf I execute `yabai -m space --mirror x-axis` the zooming works as I would expect.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/149/comments",
    "author": "uri",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2019-07-24T07:17:16Z",
        "body": "This is not a bug.  The *parent* simply means the parent node in the bsp-tree. The window marked by *1* and *2* belong to an invisible parent node. To get your behaviour you need to perform a *window --warp north* "
      }
    ]
  },
  {
    "number": 144,
    "title": "Controlling window locations",
    "created_at": "2019-07-17T20:55:40Z",
    "closed_at": "2019-09-03T17:39:43Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/144",
    "body": "I'm new to the world of tiling window managers. However, keep running into this issue which is a bit difficult to explain. So, I've three windows open on the external display. Can drag one by the corner, and everything resizes just fine.\r\n\r\nNow if I want to take a window, and instead of having it stretch vertically, have it stretch horizontally, I'm not sure what to do. I'll try dragging it over the other windows but it snaps back to place. Are we just supposed to stick to what BSP determines is best? And I feel apps like Spotify, Slack, and iTerm fullscreen kinda breaks it.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/144/comments",
    "author": "heydonovan",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2019-07-18T04:44:35Z",
        "body": "You can set a keyboard shortcut to execute this command for you, which toggles the split of the active window between bsp/float.\r\n\r\n```sh\r\nyabai -m window --toggle split\r\n```\r\n\r\nThere is no way to do this with the mouse yet, but keep looking at #142 for better mouse controls."
      },
      {
        "user": "heydonovan",
        "created_at": "2019-07-18T20:24:44Z",
        "body": "Nice, thanks for the information! Do you experience issues with applications such as Spotify that don't quite align? It's almost as if the bottom 50px of the window (the player controls) aren't recognized as part of the main window size. Perhaps I should open a new issue."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2019-07-18T20:28:09Z",
        "body": "> Do you experience issues with applications such as Spotify that don't quite align? It's almost as if the bottom 50px of the window (the player controls) aren't recognized as part of the main window size. Perhaps I should open a new issue.\r\n\r\nI can't reproduce that. If you can (reliably) you should create a new issue with a screenshot attached (and maybe also the output of `yabai -m query --windows --space`)."
      },
      {
        "user": "heydonovan",
        "created_at": "2019-07-18T20:40:03Z",
        "body": "Just saw in my terminal this. Wonder if it could be related. I'll work on a video when I'm home.\r\n\r\n```\r\n$ yabai\r\nyabai: scripting-addition could not load, make sure SIP is disabled!\r\nyabai configuration loaded..\r\nfish: 'yabai' terminated by signal SIGSEGV (Address boundary error)\r\n```"
      }
    ]
  },
  {
    "number": 115,
    "title": "[Request] Add event for window going full screen",
    "created_at": "2019-07-11T22:11:43Z",
    "closed_at": "2019-07-30T21:14:38Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/115",
    "body": "Generally when I click the green dot to go full screen I prefer that windows next to my current space.  The default is to move it to the end of the spaces.  It would be nice if on a window maximize event we could specify the location \r\n\r\n`yabai -m signal --add event=window_fs --space=prev|next|1|2|3|4|5|6...etc`",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/115/comments",
    "author": "VirtualValence",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2019-07-11T23:19:48Z",
        "body": "### Now\r\n\r\nJust re-enable the Mission Control setting \"Automatically rearrange Spaces based on most recent use\". When enabled, setting a space to fullscreen will achieve what you want.\r\n\r\n### Maybe sometime in the future\r\n\r\nThe below script (**Edit:** removed, see next post) will work for toggling native-fullscreen once some bugs are fixed with native-fullscreen spaces. It's not a signal, but it's something you can use instead. \r\n\r\nCurrent issues are:\r\n- native-fullscreen spaces cannot be moved by yabai\r\n- native-fullscreen spaces have no unique arrangement index, and as such cannot be addressed consistently\r\n\r\nI recommend overriding the system default keyboard shortcut for toggling fullscreen, which is <kbd>ctrl</kbd>&nbsp;<kbd>cmd</kbd>&nbsp;<kbd>f</kbd>."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2019-07-13T12:13:37Z",
        "body": "@amadeusrotundo Now that #117 is on master you can do the following:\r\n\r\nAdd this to your skhd config:\r\n```sh\r\nctrl + cmd - f : path/to/toggle-native-fullscreen.zsh\r\n```\r\n\r\nNow you can switch a space to fullscreen and move it at the same time.\r\n\r\n```zsh\r\n#! /usr/bin/env zsh\r\n\r\n# Get the id of the selected window\r\nsel=\"$(yabai -m query --windows --window $1 | jq -re '.id')\"\r\n\r\n# We are enabling native-fullscren and are moving our space\r\nif yabai -m query --windows --window $sel \\\r\n\t| jq -e '.\"native-fullscreen\" == 0' > /dev/null\r\nthen\r\n\r\n\t# grab the old space index\r\n\told_space=\"$(yabai -m query --windows --window $sel | jq '.space')\"\r\n\r\n\t# move window to native fullscreen\r\n\tyabai -m window $sel --toggle native-fullscreen\r\n\r\n\t# grab the new space index\r\n\tnew_space=\"$(yabai -m query --windows --window $sel | jq '.space')\"\r\n\r\n\t# move the fullscreen space left using zsh's built-in repeat operator\r\n\trepeat \"$(( ${new_space} - ${old_space} - 1 ))\" \\\r\n\t\tyabai -m space --move prev\r\n\r\n# We are disabling native-fullscreen, no need to move any spaces\r\nelse\r\n\tyabai -m window $sel --toggle native-fullscreen\r\nfi\r\n```\r\n\r\nThe script also accepts an optional window selector (see `WINDOW_SEL` in docs).\r\n\r\nEdit: As of commit 5e871d4 you no longer need to wait for the id to change after toggling fullscreen, so I updated the above code to remove the spinlock."
      },
      {
        "user": "drkostas",
        "created_at": "2024-06-25T10:39:27Z",
        "body": "Is there any update on this? I want a rule that when a window goes fullscreen, it gets moved next to the current space instead of the end. I tried the method mentioned above, but it doesn't work."
      }
    ]
  },
  {
    "number": 100,
    "title": "Hidden window? ",
    "created_at": "2019-07-08T13:57:01Z",
    "closed_at": "2019-07-30T21:18:34Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/100",
    "body": "Is there a yabai command that can be used to hide or minimize a window and then bring it back as needed? I'd love to be able to have a floating terminal or browser window that I can use quickly and then disappear analogous to cmd-H, but with the ability to also bring it back w/the keyboard without having to cmd-tab to find it?\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/100/comments",
    "author": "jzelner",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2019-07-08T15:16:33Z",
        "body": "Some notes on the application switcher:\r\n- When you press <kbd>cmd</kbd> + <kbd>tab</kbd> and navigate to an application with a minimised window, press and hold <kbd>alt</kbd> while releasing <kbd>cmd</kbd> to deminimise windows of the focused application.\r\n- When you press <kbd>cmd</kbd> + <kbd>tab</kbd> and navigate to an application, press <kbd>1</kbd> without releasing <kbd>cmd</kbd> to invoke App Exposé, which shows you all non-hidden, non-fullscreen and minimised windows.\r\n\r\nRegarding your problem: using yabai, you could always float the window and move it to the bottom right corner to effectively hide it:\r\n\r\n```sh\r\n# grab the target window id (in this case of the focused window)\r\ntarget_window=\"$(yabai -m query --windows --window | jq -re '.id')\"\r\n\r\n# float the target window and move it to somewhere that's far off to the bottom right\r\n# (regardless of which window is focused at this point)\r\nyabai -m window \"${target_window}\" --toggle float --move abs:10000:10000\r\n\r\n# unfloat the target window to tile it again\r\nyabai -m window \"${target_window}\" --toggle float\r\n```\r\n\r\nYou can easily create a script for this to create some kind of collection of hidden windows per space.\r\n\r\nEdit:\r\n\r\nIn general in macOS, hiding is done per-application and minimising is done per-window. If you want to hide an application and have a script unhide it, use the following:\r\n\r\n```sh\r\ntarget_app=\"iTerm2\"\r\n\r\n# hide app\r\nosascript -e \"tell application \\\"System Events\\\" to set visible of first process ¬\" \\\r\n          -e \"whose name is \\\"${target_app}\\\" to false\"\r\n\r\n# unhide app\r\nosascript -e \"tell application \\\"System Events\\\" to set visible of first process ¬\" \\\r\n          -e \"whose name is \\\"${target_app}\\\" to true\"\r\n```"
      },
      {
        "user": "tarasowski",
        "created_at": "2020-02-19T10:01:07Z",
        "body": "There is an easier way to do that. Just drag and drop the window you want to minimize to another space. That's it!"
      },
      {
        "user": "marcelarie",
        "created_at": "2022-07-06T17:05:20Z",
        "body": "You have the default macOS command: `cmd + h`.\r\nThen you can use `cmd + tab` to show it again :)"
      },
      {
        "user": "bergingwer07",
        "created_at": "2022-08-01T01:01:09Z",
        "body": "I found out that you can hide the current focused window without passing an application name to it:\r\n\r\nhide:\r\n```\r\nosascript -e \"tell application \\\"System Events\\\" to set visible of first application process whose frontmost is true to false\"\r\n```\r\n\r\nunhide via \"cmd + tab\" like @marcelarie mentioned:\r\n```\r\nosascript -e \"tell application \\\"System Events\\\" to key code 48 using {command down}\"\r\n```\r\n\r\nFor myself I´m happy with this solution cause i can map them in my skhdrc to just two shortcuts.\r\n\r\nI hope that helps for You!"
      },
      {
        "user": "alloc33",
        "created_at": "2023-01-14T20:17:49Z",
        "body": "I still didn't find right solution\r\n\r\ntried to write a tool in swift, but it doesn't seem to work correctly - sometimes I have to run this command twice some reason (I think the problem persist only if apps are on different spaces).... Seems ok if choose - \"all desktops\" for the app\r\n\r\n```swift\r\nimport AppKit\r\nimport ArgumentParser\r\n\r\n@main\r\nstruct Cycler: ParsableCommand {\r\n    static var configuration = CommandConfiguration(\r\n        abstract: \"Simple tool to hide/show macOS apps by name or bundleId\",\r\n        version: \"1.0.0\",\r\n        subcommands: []\r\n    )\r\n\r\n    @Argument(help: \"Name or bundleId of the app\")\r\n    var nameOrId: String\r\n\r\n    mutating func run() throws {\r\n        let app = NSWorkspace.shared.runningApplications.first(where: {\r\n            $0.localizedName?.lowercased() == nameOrId.lowercased() || $0.bundleIdentifier == nameOrId\r\n        })\r\n\r\n        if let app = app {\r\n            let isHidden = app.isHidden\r\n            if isHidden {\r\n                NSWorkspace.shared.launchApplication(nameOrId)\r\n            } else {\r\n                app.hide()\r\n            }\r\n        } else {\r\n            print(\"App with name or bundleId: \\(nameOrId) not found, trying to launch\")\r\n            // try to launch the app\r\n            let launched = NSWorkspace.shared.launchApplication(nameOrId)\r\n            if !launched {\r\n                print(\"Failed to launch app with name or bundleId: \\(nameOrId)\")\r\n            }\r\n        }\r\n    }\r\n}\r\n```"
      },
      {
        "user": "alloc33",
        "created_at": "2023-01-14T20:29:35Z",
        "body": "One 100% solution is `rcmd` macOS app which I bought and happy with that"
      },
      {
        "user": "douo",
        "created_at": "2023-09-07T03:25:22Z",
        "body": "`skhd -k \"cmd -h\"` can do the job. ex:\r\n```\r\n# toggle kitty\r\nhyper - return : if [ $(yabai -m query --windows  --window | jq  '.app') = '\"kitty\"' ]; then skhd -k \"cmd - h\" ; else open /Applications/kitty.app; fi\r\n```\r\n"
      },
      {
        "user": "vaygr",
        "created_at": "2025-02-15T00:30:57Z",
        "body": "Coming from bspwm I had this in sxhkd:\n\n```\n# hide/show a window\nsuper + {_,shift + }v\n        bspc node {-g hidden,$(bspc query -N -n .hidden | tail -n1) -g hidden=off}\n```\n\nThe idea is to be able to hide a single window with possibility to hide multiple and then unhide them (the more windows created at different times, the more unpredictable unhiding order is).\n\nIt seems you can't \"unhide\" on macOS using yabai, so I had to play with minimize. This is what I came up with to get nearly identical behavior as on bspwm:\n\n```\n# minimize\ncmd + shift - v : yabai -m window --minimize\n# deminimize\ncmd + ctrl - v : yabai -m window --deminimize \"$(yabai -m query --windows | jq '[.[] | select(.\"is-minimized\" == true) | .id] | last // -1')\"\n```"
      }
    ]
  },
  {
    "number": 91,
    "title": "Get around the automatic creation of a space when adding a display",
    "created_at": "2019-07-05T12:27:19Z",
    "closed_at": "2019-07-30T21:19:38Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/91",
    "body": "I need help with a problem I've had for a long time with chunkwm but I wonder if signals brings a solution to this.\r\n\r\nWhen adding a display, a space is inserted as the first space of the second display. This shifts all my windows up a space so I cannot access the same windows with the same keys when having 1 display and 2 displays.\r\n\r\nI tried: \r\n```bash\r\nyabai -m signal --add event=display_added action=\"yabai -m space --focus 5 && yabai -m space --destroy\"\r\n```\r\nBut it just destroys all spaces one by one until there is only one space per display.\r\n\r\nAnother solution would be to change the key shortcuts to focus spaces dynamically.\r\nFor example my current config is the following:\r\n```\r\nlalt - a : yabai -m space --focus 1\r\nlalt - s : yabai -m space --focus 2\r\nlalt - d : yabai -m space --focus 3\r\nlalt - f : yabai -m space --focus 4\r\nlalt - u : yabai -m space --focus 5\r\nlalt - i : yabai -m space --focus 6\r\nlalt - o : yabai -m space --focus 7\r\nlalt - p : yabai -m space --focus 8\r\n```\r\nIf I could change that to become:\r\n```\r\nlalt - a : yabai -m space --focus 1\r\nlalt - s : yabai -m space --focus 2\r\nlalt - d : yabai -m space --focus 3\r\nlalt - f : yabai -m space --focus 4\r\nlalt - u : yabai -m space --focus 6\r\nlalt - i : yabai -m space --focus 7\r\nlalt - o : yabai -m space --focus 8\r\nlalt - p : yabai -m space --focus 9\r\n```\r\nwhen I add a display, then the desktop 5 would be a useless desktop but at least, it solves my problem.\r\n\r\nWhat do you think is the best way to get around this problem?",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/91/comments",
    "author": "sweenu",
    "comments": [
      {
        "user": "dominiklohmann",
        "created_at": "2019-07-05T14:28:55Z",
        "body": "This is an amazing idea. Here's some thoughts on how I would go about implementing this.\r\n\r\nSo the display_added signal carries the newly added displays id, which can be used to distinguish whether its space indices are lower or higher than the previously connected displays. You could then move a space from your previously connected displays to your new display, focus the space that was created for the newly connected display and destroy it. \r\n\r\nJust some thoughts, not sure if this works. Added this to the list of things to try sometime soon."
      },
      {
        "user": "sweenu",
        "created_at": "2019-07-08T09:51:31Z",
        "body": "I might be missing something about how spaces work because I'm not able to get something consistent by destroying a space on a `display_added` signal 🤔 "
      },
      {
        "user": "koekeishiya",
        "created_at": "2019-07-30T21:19:38Z",
        "body": "I don't think you can solve this properly before #119 is added."
      }
    ]
  },
  {
    "number": 89,
    "title": "change window border color when zoom-parent is on?",
    "created_at": "2019-07-03T17:41:06Z",
    "closed_at": "2019-07-30T21:18:03Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/89",
    "body": "Hi - \r\n\r\nI am *loving* yabai; it has brought me back to the mac from a few years of i3. One feature I would love to be able to get some of the functionality of, though, is the tabbed windows in i3. Doing this with zoom-parent seems possible, but I sometimes forget that a window is in that state. Is it possible to change the window border color when a window is zoomed? This would at least remind me something may be lurking underneath.\r\n\r\nAny suggestions would be great; thanks!\r\n\r\n-Jon",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/89/comments",
    "author": "jzelner",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2019-07-06T17:53:36Z",
        "body": "There is no command to specify the color for a window border upon zoom, however it is possible to change the color of the focused window at any time. You could likely put this together using some scripts now that #90 is resolved, using the *signal* system that *yabai* provides.\r\n\r\nBasically what you need to do is create a script that check if the window in question is zoomed or not, and set the color you want. This script can be configured to run when a window has gained focus. \r\n\r\nIn *skhd* or whatever program you use to toggle zoom, you need to essentially have the same check, so that the border changes color when you zoom / unzoom a window without having to refocus it.   "
      },
      {
        "user": "braham-snyder",
        "created_at": "2021-02-27T02:28:06Z",
        "body": "In case it saves someone time, here's my implementation.\r\n\r\nVery redundant, but it works. Improvements welcome.\r\n\r\nIn `.skhdrc` (I'm using `fish` syntax):\r\n```fish\r\n# TODO I should use aliases and/or sh functions or something to reduce redundancy among these\r\n# commands and the related code in yabairc (where we change colors when we focus a different window\r\n# or application)\r\nzoom < f : skhd -k \"escape\" ;\\\r\n           yabai -m window --toggle zoom-fullscreen ;\\\r\n           sleep 0.5 ;\\\r\n           if yabai -m query --windows --window | jq -er '.\"zoom-fullscreen\" == 1' ;\\\r\n               yabai -m config active_window_border_color 0xff33d6ff ;\\\r\n           else ;\\\r\n               yabai -m config active_window_border_color 0xff00ff00 ;\\\r\n           end\r\n```\r\n\r\nIn `yabairc` (I'm using `sh` syntax):\r\n```sh\r\n####\r\n# Color windows according to zoom-fullscreen status.\r\n#\r\n# TODO I should use aliases and/or sh functions or something to reduce\r\n# redundancy among these commands and the related code in skhdrc (where we change colors\r\n# when we toggle zoom)\r\n\r\nyabai -m signal --add label=on_win_color_zoom event=window_focused \\\r\n      action=$'\r\nif $(yabai -m query --windows --window | jq -er \\'.\"zoom-fullscreen\" == 1\\')\r\nthen\r\n    yabai -m config active_window_border_color 0xff33d6ff\r\nelse\r\n    yabai -m config active_window_border_color 0xff00ff00\r\nfi'\r\n\r\nyabai -m signal --add label=on_app_color_zoom event=application_front_switched \\\r\n      action=$'\r\nif $(yabai -m query --windows --window | jq -er \\'.\"zoom-fullscreen\" == 1\\')\r\nthen\r\n    yabai -m config active_window_border_color 0xff33d6ff\r\nelse\r\n    yabai -m config active_window_border_color 0xff00ff00\r\nfi'\r\n```\r\n\r\n<br/>\r\n<br/>\r\n<br/>\r\n\r\nEDIT: The above worked well enough for a year that I've updated it to work with yabai v4.\r\n\r\n<br/>\r\n<br/>\r\n\r\nEDIT 2: Fixed border not updating on first zoom (added a `sleep` -- some chance we could do it better but w/e)"
      },
      {
        "user": "leohxj",
        "created_at": "2022-04-17T14:47:10Z",
        "body": "I just want to know the current app is in which mode, is there any simple way I can detect?"
      }
    ]
  },
  {
    "number": 55,
    "title": "\"warning: failed to get scripting definition\"",
    "created_at": "2019-06-22T21:25:41Z",
    "closed_at": "2019-06-22T21:45:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/55",
    "body": "```bash\r\n$ yabai\r\n2019-06-22 16:23:11.127 yabai[555:8381] warning: failed to get scripting definition from /System/Library/CoreServices/Dock.app; it may not be scriptable.\r\nyabai configuration loaded..\r\n```\r\nDoes this indicate installing the sa-additions failed? I did run the command without error.\r\n\r\nmacOS 10.14.5",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/55/comments",
    "author": "blissdev",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2019-06-22T21:29:27Z",
        "body": "This warning is just because there is no .sdef file within the Dock.app \"folder\".\r\nThis file is supposed to define an interface for applications that provide an API such that external software written by other people can call functions or otherwise interact with a running instance of the application. (see e.g Spotify as an example).\r\n\r\nThe Dock.app provides no such definition, and that is what this warning is about.\r\nIt is not related to how we use the Scripting Bridge framework for code injection.\r\n\r\nHopefully this clears up some misconceptions regarding this warning.\r\n\r\nFor people who are interested in more information, search for\"sdef\", \"scripting bridge framework\", \"scriptable applications\" on google/apple docs."
      },
      {
        "user": "koekeishiya",
        "created_at": "2019-06-24T15:07:04Z",
        "body": "@dominiklohmann \r\n\r\nMaybe we should mention something about this warning as well in the wiki somewhere? I've given a few attempts at trying to silence the warning before we issue the load command, but I cannot seem to find a way to silence it.."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2019-06-24T17:55:26Z",
        "body": "Noted.\r\n\r\nDid you try temporarily redirecting stderr to /dev/null while loading the scripting addition using `freopen`, unless `--verbose` is set?"
      },
      {
        "user": "koekeishiya",
        "created_at": "2019-06-24T18:20:00Z",
        "body": "No need to mention it, apparently I was just doing some dumb mistake last time I attempted to temporarily redirect stderr to /dev/null"
      },
      {
        "user": "dominiklohmann",
        "created_at": "2019-06-24T18:27:15Z",
        "body": "Noted. 😅"
      }
    ]
  },
  {
    "number": 2081,
    "title": "Feature Request: Option to Disable Transparency for Media Content",
    "created_at": "2024-02-07T10:01:48Z",
    "closed_at": "2024-02-19T23:10:28Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/2081",
    "body": "Hello,\r\n\r\nFirstly, I would like to express my gratitude for developing such an exceptional piece of software that I use daily. It has significantly enhanced my workflow.\r\n\r\nI understand that the transparency feature might not be intended for active windows, yet I find the addition of slight transparency to my web browser quite appealing. However, I've encountered an issue where the transparency effect also applies to images and videos within the browser, which is not always desirable.\r\n\r\nWould it be possible to introduce an option or feature that disables transparency for media content? Specifically, I'm looking for a way to retain transparency for the overall browser window but ensure that images and videos remain opaque.\r\n\r\nThank you for considering my request.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/2081/comments",
    "author": "riceset",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2024-02-07T16:08:35Z",
        "body": "This is not possible as far as I know."
      },
      {
        "user": "koekeishiya",
        "created_at": "2024-02-19T23:10:28Z",
        "body": "When yabai changes opacity of windows, that opacity change applies to the fully composited state that is drawn to the screen, so it is not possible to change the opacity of specific elements."
      }
    ]
  },
  {
    "number": 1432,
    "title": "Changing between integrated and discrete graphics with \"focus_follows_mouse autofocus\" causes unwanted clicks ",
    "created_at": "2022-09-20T15:52:53Z",
    "closed_at": "2022-09-23T23:05:32Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/1432",
    "body": "If I start `yabai` with `yabai -m config focus_follows_mouse autofocus` in my config while my MacBook's integrated graphics are active, and later the discrete graphics become active, any time a menu is open, unwanted clicks occur. It's as if the mouse button is being pressed repeatedly while the menu is open. This makes it very difficult to select anything other than the first menu item. Changing back to integrated graphics makes the problem go away.\r\n\r\nAlso, if `yabai` is started with discrete graphics active, changing to integrated graphics causes the same problem, and changing back to discrete graphics resolves it in the same way.\r\n\r\nAdditionally, normally `focus_follows_mouse autofocus` doesn't cause yabai to focus Finder.app when the mouse pointer is just hovering over the desktop, but it does when this menu click problem is occurring.\r\n\r\nIn both cases, holding down my `mouse_modifier` seems to prevent the problem from happening.\r\n\r\nI also feel like there are certain apps that start acting oddly when the problem is active — mostly ones that don't use normal MacOS graphical widgets, like Java apps and GTK apps — but I don't have a good description of this problem.\r\n\r\nGiven the fact that it's possible for `yabai` to work correctly in either graphics mode, depending on which was active at the time, it feels like the problem isn't the graphics mode, it's the switch between the two.\r\n\r\nThis is the entirety of my `.yabairc`:\r\n\r\n```\r\nyabai -m config focus_follows_mouse autofocus\r\nyabai -m config mouse_modifier fn\r\n```",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/1432/comments",
    "author": "wfaulk",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2022-09-20T16:52:33Z",
        "body": "I don't have a MacBook with discrete graphics (and I'm not getting one), so there is no way for me to debug this issue."
      },
      {
        "user": "wfaulk",
        "created_at": "2022-09-21T13:50:47Z",
        "body": "If you can suggest how I can help, I'm more than willing to."
      },
      {
        "user": "koekeishiya",
        "created_at": "2022-09-21T14:02:14Z",
        "body": "I don't really know why it would cause an issue and how to debug that. \r\n\r\nYabai does not do anything differently based on which GPU is selected. As you mentioned in your post it works for both individually, before a switch happens.  We do not detect and alter behaviour based on some switch, and there is no GPU detection involved. We send the same events to the application to perform a focus switch at all times."
      },
      {
        "user": "wfaulk",
        "created_at": "2022-09-23T21:57:11Z",
        "body": "Okay, well, I'll try and look into it myself, then. I'll put anything I find in here.\r\n\r\nThe first thing I've discovered is that if I run `yabai -m config focus_follows_mouse off`, the problem goes away along with the FFM feature. But if I turn it back on with `yabai -m config focus_follows_mouse autofocus`, the problem comes back, unlike when I completely exit yabai.\r\n\r\nThe second thing is that the problem is exactly the same with `focus_follows_mouse autoraise`."
      },
      {
        "user": "wfaulk",
        "created_at": "2022-09-23T23:05:32Z",
        "body": "I'm an idiot. I thought I had the most recent version running, but I was wrong. I upgraded and the problem went away."
      }
    ]
  },
  {
    "number": 1129,
    "title": "[$100 bounty] Disable animations for native-fullscreen toggle",
    "created_at": "2022-01-18T15:13:33Z",
    "closed_at": "2024-02-19T22:43:49Z",
    "labels": [
      "help wanted",
      "suggestion"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/1129",
    "body": "Is there a way to speed up or disable the animation when toggling a window into our out of native fullscreen? (`yabai -m window --toggle native-fullscreen`)",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/1129/comments",
    "author": "tobiasmuehl",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2022-04-21T14:14:09Z",
        "body": "Probably technically possible, but I don't expect that this is something I will be spending time on any time soon."
      },
      {
        "user": "lwmacct",
        "created_at": "2023-04-23T16:27:36Z",
        "body": "> Probably technically possible, but I don't expect that this is something I will be spending time on any time soon.\r\n\r\nThis feature is greatly needed, as the switching animation has a delay and also affects the visual experience. It is indeed a very necessary function."
      },
      {
        "user": "koekeishiya",
        "created_at": "2023-04-23T18:30:30Z",
        "body": "I basically never use macOS native-fullscreen. Feel free to submit a PR that solves this."
      },
      {
        "user": "aspauldingcode",
        "created_at": "2023-10-23T21:56:38Z",
        "body": "I too, would like to 1-up this request. "
      },
      {
        "user": "tobiasmuehl",
        "created_at": "2023-10-24T04:45:26Z",
        "body": "Actually stopped using yabai but still looking for a solution for this. Offering $100 bounty for a solution to this (ideally one that's not reliant on yabai)"
      },
      {
        "user": "aspauldingcode",
        "created_at": "2024-02-20T16:17:31Z",
        "body": "Omg you figured it out??"
      },
      {
        "user": "koekeishiya",
        "created_at": "2024-02-20T16:36:43Z",
        "body": "No, I am not interested in spending time on this, as mentioned in my previous comment.\r\nSince the original poster also no longer uses yabai I didn't feel the need to keep this open.\r\n\r\nIt took a year from the original poster (and my response), for someone else to look at this issue, so the community interest seems to be very low, so I don't expect a third-party to come with a PR either."
      }
    ]
  },
  {
    "number": 689,
    "title": "Question: Run only when needed?",
    "created_at": "2020-10-15T11:03:38Z",
    "closed_at": "2020-11-16T15:43:18Z",
    "labels": [
      "help wanted",
      "suggestion"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/689",
    "body": "Hey!\r\n\r\nI'm looking into starting to use Yabai, looks awesome by the way! But ideally I'd like a specific functionality, in that I want to be able to, through Alfred or something, run a script that toggles Yabai on and off. It boils down to that while programming, I'd rather use something like Yabai, but for day-to-day I want the native MacOS experience.",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/689/comments",
    "author": "KevinFerm",
    "comments": [
      {
        "user": "Liquidmantis",
        "created_at": "2020-10-15T14:13:54Z",
        "body": "This is a trivial problem, honestly.  You could just start and stop the Yabai service on-demand:\r\n`brew services start yabai` - yabai on\r\n`brew services stop yabai` - yabai off\r\n\r\nAlternatively though, from personal experience I think you'll start to integrate Yabai into your workflow, and it's easier to just toggle a space to Floating rather than BSP.  If you start dabbling with stacking that can become an invaluably powerful alternative to cmd-tab'ing."
      },
      {
        "user": "rockyzhang24",
        "created_at": "2020-10-15T15:28:04Z",
        "body": "You can set one space or more to `float`. Put this into your yabairc: `yabai -m config --space 4 layout float`. Then you can enjoy the native macOS experience in space 4, and when you miss yabai, you could switch to other spaces. "
      },
      {
        "user": "edward-mb",
        "created_at": "2020-11-01T10:45:06Z",
        "body": "I use Yabai like this:\r\n`yabai -m config layout                       float` ~ /.yabairc\r\n\r\nand then you can change the layout of the current space/desktop by adding to your ~/.skhdrc something like:\r\n```\r\nctrl + alt - a : yabai -m space --layout bsp\r\nctrl + alt - d : yabai -m space --layout float\r\n``` "
      }
    ]
  },
  {
    "number": 687,
    "title": "Empty space does not get focused",
    "created_at": "2020-10-13T01:40:06Z",
    "closed_at": "2020-12-18T15:38:07Z",
    "labels": [
      "help wanted",
      "undetermined"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/687",
    "body": "I have disabled the desktop because I don't use it, and its just cludder. It causes a weird issue with focus on empty spaces on multi monitors. If I jump to an empty space yabai focuses a window on my other monitor. This causes issues where I cannot refocus the empty space. Note this is only an issue when I want to remove an empty space. My workaround is to move a window to the space and delete the space that way.\r\n```\r\n# TO DISABLE DESKTOP\r\ndefaults write com.apple.finder CreateDesktop -bool false\r\nkillall Finder\r\n\r\n# TO ENABLE DESKTOP\r\ndefaults write com.apple.finder CreateDesktop -bool true\r\nkillall Finder\r\n```",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/687/comments",
    "author": "brorbw",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-10-17T10:46:58Z",
        "body": "Do you get this bug with desktop enabled, but simply having nothing on it? Is there a reason why that is not a feasible solution for you? I suspect whatever this command is doing, interferes with how we can focus monitors, because we need to do so by actually focusing the invisible finder desktop window, if  no windows are currently visible. There is no API call to simply focus a monitor or space itself."
      },
      {
        "user": "brorbw",
        "created_at": "2020-10-17T14:43:46Z",
        "body": "Yes, the bug only happens when the desktop is disabled but the command only disables icons and desktop, and I'm not sure how that impacts the way spaces are focused"
      },
      {
        "user": "WesleyYue",
        "created_at": "2020-12-06T03:38:06Z",
        "body": "@koekeishiya I have a similar problem here in that I cannot do a \"move window to next space and focus on next space\" command in a multi-monitor setup when there is only one window left in the space. When I try, the window will be moved to the next space, but since there is nothing left in the space, the focus is immediately stolen by my second monitor such that when the \"focus on next space\" command occurs, it is switching the space in my other monitor.\r\n\r\nIt seems like the best solution for my issue at least is an atomic command that does both the moving and focusing in one instruction."
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-12-11T14:41:22Z",
        "body": "Not sure if this can be considered an issue. I think documenting this as unsupported should be enough."
      },
      {
        "user": "brorbw",
        "created_at": "2020-12-12T18:10:42Z",
        "body": "@dominiklohmann by that reasoning most bugs could be labelled as unsupported"
      },
      {
        "user": "dominiklohmann",
        "created_at": "2020-12-12T18:22:18Z",
        "body": "If you run this command and use multiple displays you cannot even focus the display without yabai if there are no other windows on it. The reason is quite simple: The command stops the Dock from creating the Desktop window, and if there is no window on a display, it also cannot be focused. The command you're using here isn't documented anywhere as far as I can tell."
      },
      {
        "user": "brorbw",
        "created_at": "2020-12-15T13:11:35Z",
        "body": "@dominiklohmann you are absolutely right - but I don't see why this isn't an issue that can be fixed inside yabai.\r\n\r\nEdit: A simple solution would be to create an invisible window on each space"
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-12-18T15:25:39Z",
        "body": "Why do you need to run this command. Can't you just not utilise the desktop; what's the difference?\r\n\r\nCreating and managing an invisible window on each space is not actually as trivial as you make it seem, and complexity like this quickly snowballs if we are to support weird quirks (not just this one in particular, but a line has to be drawn at some point).\r\n\r\nThere are also other issues such as the user manipulating spaces through either mission-control or alternative software that we have no way of interacting with, thus, making our invisible window solution go out of sync. You can argue that this is an edge-case, but my point is simply that for the software to be robust and work well in a consistent manner, such solutions are not something I opt to implement without a very good reason."
      },
      {
        "user": "brorbw",
        "created_at": "2020-12-18T15:38:05Z",
        "body": "This is an egde case, but screenshots etc end up on the desktop and there is afaik no workaround. \r\n\r\nI have no issues with this being unsupported or drawing a line somewhere. The point of the software working in a consistent way does however negate the argument for not implementing a system to handle the oddballs. I'm very pleased with yabai and appreciate the time and effort everyone puts into it. I merely pointed out an observed bug/odd behaviour and wanted to investigate. I off work for Christmas and might look into a solution of using the mouse to focus the monitor. \r\n\r\nMerry Christmas 🎄 "
      },
      {
        "user": "koekeishiya",
        "created_at": "2020-12-18T15:42:16Z",
        "body": "@brorbw \r\n\r\nIf someone can come up with a robust solution for supporting this, then I will happily implement that. The issue I have is implementing workarounds that aren't fully robust solutions, that just snowballs the complexity for something that only solves the issue when particular assumptions are true. If you want to try and investigate this further I am open for suggestions.\r\n\r\nHappy Christmas ☃️"
      },
      {
        "user": "24unix",
        "created_at": "2020-12-19T18:45:36Z",
        "body": "@brorbw \r\n\r\nyou can use \r\ndefaults write com.apple.screencapture location <mylocation>\r\n\r\n"
      },
      {
        "user": "brorbw",
        "created_at": "2020-12-20T13:39:56Z",
        "body": "@24unix that totally solves the issue"
      }
    ]
  },
  {
    "number": 602,
    "title": "Incomplete JSON when mirroring displays",
    "created_at": "2020-07-03T10:48:21Z",
    "closed_at": "2024-02-19T22:49:51Z",
    "labels": [
      "help wanted",
      "undetermined"
    ],
    "url": "https://github.com/koekeishiya/yabai/issues/602",
    "body": "Currently mirroring displays produces an incomplete json for `yabai -m query spaces`. This does not happen if multiple displays are used as separate spaces.\r\n\r\nExample output generated with mirrored displays:\r\n\r\n```\r\n[{\r\n\t\"id\":5,\r\n\t\"label\":\"\",\r\n\t\"index\":1,\r\n\t\"display\":1,\r\n\t\"windows\":[135252, 104],\r\n\t\"type\":\"bsp\",\r\n\t\"visible\":0,\r\n\t\"focused\":0,\r\n\t\"native-fullscreen\":0,\r\n\t\"first-window\":104,\r\n\t\"last-window\":135252\r\n},{\r\n\t\"id\":9,\r\n\t\"label\":\"\",\r\n\t\"index\":2,\r\n\t\"display\":1,\r\n\t\"windows\":[79781],\r\n\t\"type\":\"bsp\",\r\n\t\"visible\":0,\r\n\t\"focused\":0,\r\n\t\"native-fullscreen\":0,\r\n\t\"first-window\":79781,\r\n\t\"last-window\":79781\r\n},{\r\n\t\"id\":451,\r\n\t\"label\":\"\",\r\n\t\"index\":3,\r\n\t\"display\":1,\r\n\t\"windows\":[47422],\r\n\t\"type\":\"bsp\",\r\n\t\"visible\":0,\r\n\t\"focused\":0,\r\n\t\"native-fullscreen\":0,\r\n\t\"first-window\":47422,\r\n\t\"last-window\":47422\r\n},{\r\n\t\"id\":276,\r\n\t\"label\":\"\",\r\n\t\"index\":4,\r\n\t\"display\":1,\r\n\t\"windows\":[109],\r\n\t\"type\":\"bsp\",\r\n\t\"visible\":0,\r\n\t\"focused\":0,\r\n\t\"native-fullscreen\":0,\r\n\t\"first-window\":109,\r\n\t\"last-window\":109\r\n},{\r\n\t\"id\":384,\r\n\t\"label\":\"\",\r\n\t\"index\":5,\r\n\t\"display\":1,\r\n\t\"windows\":[24296, 135294],\r\n\t\"type\":\"bsp\",\r\n\t\"visible\":1,\r\n\t\"focused\":1,\r\n\t\"native-fullscreen\":0,\r\n\t\"first-window\":24296,\r\n\t\"last-window\":135294\r\n},{\r\n\t\"id\":11,\r\n\t\"label\":\"\",\r\n\t\"index\":6,\r\n\t\"display\":1,\r\n\t\"windows\":[82306],\r\n\t\"type\":\"bsp\",\r\n\t\"visible\":0,\r\n\t\"focused\":0,\r\n\t\"native-fullscreen\":0,\r\n\t\"first-window\":82306,\r\n\t\"last-window\":82306\r\n},\r\n```",
    "comments_url": "https://api.github.com/repos/koekeishiya/yabai/issues/602/comments",
    "author": "xiamaz",
    "comments": [
      {
        "user": "koekeishiya",
        "created_at": "2020-07-22T21:20:29Z",
        "body": "I have never actually used yabai with mirroring, and I have no clue if it even works properly at all outside of what you have mentioned here. Before I start considering this a bug, I would like some detailed input regarding what works and what does not. The amount of work required to fully support mirroring (and thus, this issue), will determine if I will bother spending the time to do so, and when it may happen."
      }
    ]
  }
]