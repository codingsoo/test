[
  {
    "number": 2760,
    "title": "GoAccess not showing 'Tx.' Amount",
    "created_at": "2024-11-21T11:03:19Z",
    "closed_at": "2025-02-08T14:28:58Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2760",
    "body": "Hi all\r\n\r\nI'm testing GoAccess to read Wasabi bucket logs that supposedly are equal to AWS S3 logs so I'm using the \"--log-format awss3\" option. Everything works great, but the one thing missing is the bandwidth amount the actual data I want to check 😄 \r\n\r\nIs there anything specific I should check as to why it won't show the bandwidth?\r\n\r\nHere are a few example lines:\r\n\r\n```\r\nRecord format: [BucketOwner Bucket Time RemoteIP Requester RequestId Operation Key Request-URI HttpStatus ErrorCode BytesSent ObjectSize TotalTime Turn-Around\r\n546858E6E300000000000000000000000000000000000000000000000000DC170 bucket-name [06/Aug/2024:16:37:48 +0000] 109.50.101.102 546858E6E300000000000000000000000000000000000000000000000000DC170 BE95910000C4743B:A REST.HEAD.OBJECT preseed%2Fubuntu.seed \"HEAD /preseed/ubuntu.seed\" 404 NoSuchKey - 0 6 0 \"\" \"MSP360/Wasabi Explorer/6.2.2\" -\r\n546858E6E300000000000000000000000000000000000000000000000000DC170 bucket-name [06/Aug/2024:16:37:48 +0000] 109.50.101.102 546858E6E300000000000000000000000000000000000000000000000000DC170 78DF800008286EE7:A REST.HEAD.OBJECT EFI%2Fboot%2Fbootx64.efi \"HEAD /EFI/boot/bootx64.efi\" 404 NoSuchKey - 0 4 4 \"\" \"MSP360/Wasabi Explorer/6.2.2\" -\r\n546858E6E300000000000000000000000000000000000000000000000000DC170 bucket-name [06/Aug/2024:16:37:48 +0000] 109.50.101.102 546858E6E300000000000000000000000000000000000000000000000000DC170 1F45D000085389F8:A REST.PUT.OBJECT preseed%2Fubuntu.seed \"PUT /preseed/ubuntu.seed\" 200 - - 460 109 0 \"\" \"MSP360/Wasabi Explorer/6.2.2\" -\r\n546858E6E300000000000000000000000000000000000000000000000000DC170 bucket-name [06/Aug/2024:16:37:49 +0000] 109.50.101.102 546858E6E300000000000000000000000000000000000000000000000000DC170 FBCCB00003E9E20E:A REST.HEAD.OBJECT boot%2Fgrub%2Fx86_64-efi%2Fadler32.mod \"HEAD /boot/grub/x86_64-efi/adler32.mod\" 404 NoSuchKey - 0 3 0 \"\" \"MSP360/Wasabi Explorer/6.2.2\" -\r\n546858E6E300000000000000000000000000000000000000000000000000DC170 bucket-name [06/Aug/2024:16:37:49 +0000] 109.50.101.102 546858E6E300000000000000000000000000000000000000000000000000DC170 71D310000F00E8B2:A REST.PUT.OBJECT boot%2Fgrub%2Fx86_64-efi%2Fadler32.mod \"PUT /boot/grub/x86_64-efi/adler32.mod\" 200 - - 1952 68 30 \"\" \"MSP360/Wasabi Explorer/6.2.2\" -\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2760/comments",
    "author": "pjgerardo",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2024-11-22T02:21:42Z",
        "body": "So, is `BytesSent` equivalent to 'bandwidth'? It looks like they’re all showing as 0 in that sample log.\r\n\r\nThis should do it (assumes certain fields, e.g., TotalTime).\r\n\r\n    goaccess access.log --log-format='%^ %v [%d:%t %^] %h %^\"%m %U\" %s %e %b %^ %L %^\"%^\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T --http-protocol=no\r\n\r\nIf it's the `objectsize`, you could try:\r\n\r\n    goaccess access.log --log-format='%^ %v [%d:%t %^] %h %^\"%m %U\" %s %e %^ %b %L %^\"%^\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T --http-protocol=no\r\n    \r\n    "
      },
      {
        "user": "allinurl",
        "created_at": "2025-02-08T14:28:59Z",
        "body": "Gonna close this for now, but feel free to reopen if you need to."
      }
    ]
  },
  {
    "number": 2673,
    "title": "Trying to figure out \" Token for '%s' specifier is NULL.\"",
    "created_at": "2024-04-25T15:42:07Z",
    "closed_at": "2024-04-25T15:42:52Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2673",
    "body": "\r\n   Hi, looking for advice on this error -  Token for '%s' specifier is NULL. \r\n   Thank you for any insight you can provide, very excited to get this working!\r\n\r\n**goaccess config**\r\ntime-format %H:%M:%S\r\ndate-format %d/%b/%Y\r\nlog-format %h %{%s}t %l %u %t \\\"%r\\\" %>s %b %T/%D\r\n\r\n**Apache config**\r\n   LogFormat \"%h %{%s}t %l %u %t \\\"%r\\\" %>s %b %T/%D\" response_times\r\n   CustomLog logs/ssl_response_log response_times\r\n\r\n**Sample log entries**\r\n192.168.1.5 1713687672 - - [21/Apr/2024:03:21:12 -0500] \"GET /foo/bar/bat/service?p_1=036&p_2=ALL&p_3=ALL&p_4=ALL HTTP/1.1\" 200 10286 22/22923423\r\n192.168.1.5 1713687696 - - [21/Apr/2024:03:21:36 -0500] \"GET /foo/bar/bat/service?p_1=039&p_2=ALL&p_3=ALL&p_4=ALL HTTP/1.1\" 200 97772 18/18612738\r\n\r\n**Full error**\r\n==2083864== Parsed 10 lines producing the following errors:\r\n==2083864==\r\n==2083864== Token for '%s' specifier is NULL.\r\n==2083864== Token for '%s' specifier is NULL.\r\n==2083864== Token for '%s' specifier is NULL.\r\n==2083864== Token for '%s' specifier is NULL.\r\n==2083864== Token for '%s' specifier is NULL.\r\n==2083864== Token for '%s' specifier is NULL.\r\n==2083864== Token for '%s' specifier is NULL.\r\n==2083864== Token for '%s' specifier is NULL.\r\n==2083864== Token for '%s' specifier is NULL.\r\n==2083864== Token for '%s' specifier is NULL.\r\n==2083864==\r\n==2083864== Format Errors - Verify your log/date/time format",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2673/comments",
    "author": "avonnieda",
    "comments": [
      {
        "user": "pfei5",
        "created_at": "2024-09-17T15:21:15Z",
        "body": "@avonnieda care to share your solution?"
      },
      {
        "user": "avonnieda",
        "created_at": "2024-09-17T15:25:01Z",
        "body": "My solution to this problem was to switch from date format such as MON-DD-YYYY HH24:MI:SS to epoch time. "
      }
    ]
  },
  {
    "number": 2671,
    "title": "Incremental processing of piped data",
    "created_at": "2024-04-19T10:58:15Z",
    "closed_at": "2024-04-19T21:17:18Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2671",
    "body": "I use filtering log via `grep` and piping data to `goaccess` because of small memory on server  (as i wrote here #2665)\r\n\r\ncommand looks like this:\r\n```\r\ngrep -E -f - radiopunctum.cz.access.log | goaccess --config-file /etc/goaccess.conf --output report.html --persist --restore --db-path db-data\r\n```\r\n\r\nit works well for first run, when i run it second time (after 24hours) output report is not updated with new data\r\n\r\ni found in man this note:\r\n\r\n>  Important\r\nSince piped data works based on a timestamp and there's no way to determine the inode nor the last line parsed, some issues could arise. For instance, a piped log could have multiple consecutive lines with the same timestamp (even at the second level), so it's likely to end up with duplicates entries. However, as a best practice and a reasonable assumption is that in most cases, for incremental log processing, users will parse data directly with goaccess instead of piping it through.\r\n\r\nis that mean that i cannot use my command above for updating data? \r\nhow would you recommend modifying the command above to make the update work?\r\nwill saving `grep` output to file solve this?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2671/comments",
    "author": "tyctor",
    "comments": [
      {
        "user": "tyctor",
        "created_at": "2024-04-19T12:45:12Z",
        "body": "it seems that i looked to wrong numbers, now it is updating, so everything is OK :+1: "
      },
      {
        "user": "allinurl",
        "created_at": "2024-04-19T13:46:15Z",
        "body": "It's great to hear that you've resolved it. The piping shouldn't hinder data updates. The note you referred to is mainly for people to understand that piping data and restoring from disk could potentially introduce duplicate records with the exact timestamp. Let me know if you have any other questions."
      },
      {
        "user": "tyctor",
        "created_at": "2024-04-19T16:09:56Z",
        "body": "hmm, command is working but something is weird and i don't undersand what\r\nmaybe you can help me to explain this\r\n\r\nsetup is: above shell command is run by python script, it use `Popen` from python `subprocess` module in `django` management command, it periodically runs command in 15min interval in `while True` loop\r\nand what i am observing i cant explain:\r\n\r\n- when i run django command manually from shell, report is updating\r\n\r\n- when i run django command and let it update report in that `while True` loop, report data are not updating, only date of report is updated\r\n\r\n- when i run django command from cron, report data are not updating, only date of report is updated\r\n\r\nall db files has chaged last modified, so something happend, but data updates only when i run command manually from shell (ssh connected server)\r\n"
      },
      {
        "user": "tyctor",
        "created_at": "2024-04-19T19:02:28Z",
        "body": "OMG, solved ... I forgot to put dash as last symbol into command line\r\nand it seems that when i run it manually dash is not needed\r\n\r\nanyway, it is working now like a charm "
      }
    ]
  },
  {
    "number": 2646,
    "title": "Token for '%d' specifier is NULL.",
    "created_at": "2024-03-13T21:20:44Z",
    "closed_at": "2024-04-06T00:12:23Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2646",
    "body": "Hi, please your help\r\n\r\nI have these access_log configuration \r\n\r\n LogFormat \"%{%Y-%m-%dT%T}t%{%z}t %h \\\"%r\\\" %>s \\\"%{Referer}i\\\" %B \\\"%{User-Agent}i\\\" %m \" combined\r\n\r\n2024-03-13T16:17:11-0500 181.198.57.25 \"GET url........ HTTP/1.1\" 503 \"url.................\" 507 \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36\" GET\r\n\r\nI try to configure goaccess with these configurations, but i continue have problems to create a report.\r\n\r\ntime-format %H:%M:%S\r\ndate-format %Y-%m-%d\r\n\r\nlog-format %d{%Y-%m-%dT%H:%M:%S%z} %h %^ \"%r\" %>s \"%{Referer}i\" %b \"%{User-Agent}i\" %m\r\ngg\r\n\r\n==1966346== Token for '%d' specifier is NULL.\r\n==1966346== Format Errors - Verify your log/date/time format\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2646/comments",
    "author": "jorgearmijo882",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2024-03-14T23:32:03Z",
        "body": "Please give this a try, it should get the job done.\r\n\r\n    # goaccess access.log --log-format='%dT%t-%^ %h \"%r\" %s \"%R\" %b \"%u\"' --date-format=%Y-%m-%d --time-format=%T\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2024-04-06T00:12:23Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 2641,
    "title": "Token doesn't match specifier '%h' for nginx format",
    "created_at": "2024-03-12T06:05:29Z",
    "closed_at": "2024-04-06T00:12:54Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2641",
    "body": "log_format main  '$remote_addr - $remote_user [$time_local] \"$request\" '\r\n                              '$request_time $request_length '\r\n                              '$status $body_bytes_sent \"$http_referer\" '\r\n                              '\"$http_user_agent\"';\r\n\r\naccess.log：\r\n10.192.133.81 - - [12/Mar/2024:09:44:22 +0800] \"GET /report HTTP/1.1\" 0.000 471 404 555 \"-\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36\"\r\n\r\nLooking forward to receiving your reply，Thanks",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2641/comments",
    "author": "zengzjie",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2024-03-14T23:03:56Z",
        "body": "Sorry for the delay. This should work:\r\n\r\n    # goaccess access.log --log-format='%h %^[%d:%t %^] \"%r\" %T %^ %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T\r\n\r\nLet me know how it goes."
      },
      {
        "user": "zengzjie",
        "created_at": "2024-03-15T01:13:52Z",
        "body": "> 抱歉耽搁了。这应该有效：\r\n> \r\n> ```\r\n> # goaccess access.log --log-format='%h %^[%d:%t %^] \"%r\" %T %^ %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T\r\n> ```\r\n> \r\n> 让我知道事情的后续。\r\n\r\nI will try it later，Thank you for your reply"
      },
      {
        "user": "allinurl",
        "created_at": "2024-04-06T00:12:54Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 2618,
    "title": "\"Static Requests\" panel empty in 1.8.1",
    "created_at": "2024-01-28T23:27:51Z",
    "closed_at": "2024-01-28T23:31:41Z",
    "labels": [
      "question",
      "docker",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2618",
    "body": "I just upgraded my Goaccess container from 1.8 to 1.8.1 and suddenly the static requests panel stays empty. All other panels load fine and show proper data, the websocket connection is also working fine. The console in Firefox shows no errors. The goaccess server is also not logging anything.\r\n\r\nI run Goaccess via Docker, making it ingest an nginx log:\r\n\r\n```yaml\r\nversion: \"3.8\"\r\n\r\nservices:\r\n  goaccess:\r\n    image: allinurl/goaccess:1.8.1\r\n    restart: unless-stopped\r\n    command:\r\n      - --agent-list\r\n      - --real-time-html\r\n      - --config-file=/zoidberg/etc/goaccess/mysite.conf\r\n      - --db-path=/zoidberg/var/goaccess/mysite\r\n      - --persist\r\n    volumes:\r\n      - \"/etc/goaccess:/zoidberg/etc/goaccess:ro\"\r\n      - \"/srv/www:/zoidberg/srv/www\"\r\n      - \"/var/log:/zoidberg/var/log\"\r\n      - \"/var/goaccess:/zoidberg/var/goaccess\"\r\n    networks:\r\n      - nginx_nginx\r\n    logging:\r\n      driver: \"json-file\"\r\n      options:\r\n        max-size: \"1m\"\r\n        max-file: \"10\"\r\n```\r\n\r\nAnd my config is\r\n\r\n```\r\n# example goaccess conf file for gopanel\r\n# edit site1 values and change title to suit\r\nhtml-report-title mysite\r\n\r\n# the logs you want to process\r\nlog-format COMBINED\r\nlog-file /zoidberg/var/log/nginx/mysite-access.log\r\n\r\n# the location you will host from\r\noutput-format /zoidberg/srv/www/stats.mysite/index.html\r\nws-url stats.mysite:443/wss\r\n\r\n# other options as you prefer\r\n#ignore-crawlers true\r\n#hide-referrer example.com\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2618/comments",
    "author": "xrstf",
    "comments": [
      {
        "user": "xrstf",
        "created_at": "2024-01-28T23:31:41Z",
        "body": "I presume this is related to #2576 and the changelog entry\r\n\r\n> Prevent setting default static files when no static-file options are defined in config file. \r\n\r\nI did not expect such a breaking change in a patch release. ^^"
      },
      {
        "user": "allinurl",
        "created_at": "2024-01-29T00:15:40Z",
        "body": "Valid observation. I concur regarding the impactful change. I should have taken that into account earlier. Still, I think #2576 does a good job balancing flexibility and simplicity. Feel free to give me a heads-up if you spot any problems with that specific change."
      }
    ]
  },
  {
    "number": 2613,
    "title": "log format errors",
    "created_at": "2024-01-18T09:07:11Z",
    "closed_at": "2024-01-18T14:15:38Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2613",
    "body": "==1790== FILE: c:\\laragon\\bin\\apache\\httpd-2.4.54-win64-VS16\\logs\\access.log\r\n==1790== Parsed 10 lines producing the following errors:\r\n==1790==\r\n==1790== Token for '%b' specifier is NULL.\r\n==1790== Token for '%b' specifier is NULL.\r\n==1790== Token for '%b' specifier is NULL.\r\n==1790== Token for '%b' specifier is NULL.\r\n==1790== Token for '%b' specifier is NULL.\r\n==1790== Token for '%b' specifier is NULL.\r\n==1790== Token for '%b' specifier is NULL.\r\n==1790== Token for '%b' specifier is NULL.\r\n==1790== Token for '%b' specifier is NULL.\r\n==1790== Token for '%b' specifier is NULL.\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2613/comments",
    "author": "darvadrasthya",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2024-01-18T14:03:46Z",
        "body": "Please share a few lines from your access log along with the command you use to run goaccess.\r\n"
      },
      {
        "user": "darvadrasthya",
        "created_at": "2024-01-18T14:12:13Z",
        "body": "i just solved this problem, thankyou for your attention"
      }
    ]
  },
  {
    "number": 2597,
    "title": "Response time format (seconds vs. milliseconds)",
    "created_at": "2023-12-20T09:00:20Z",
    "closed_at": "2023-12-21T08:03:23Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2597",
    "body": "Thanks a bunch for sharing GoAccess. It a great tool which just works! I have a question about response time analysis that I hope someone can help me out solving. \r\n\r\nI have a custom log file with the following format:\r\n\r\n`2023-12-20T08:17:21Z GET 200 260.403 ms 2048 kB 15.36% /list/default`\r\n\r\nI have tried to parse it using the following command:\r\n\r\n`goaccess --datetime-format='%Y-%m-%dT%H:%M:%SZ' --log-format='%x %m %s %T %h %^ %^ %^%r' --no-ip-validation`.\r\n\r\nI end up with something like this:\r\n\r\n```\r\n Hits     h% Vis.      v% Avg. T.S. Cum. T.S. Max. T.S. Mtd     Proto    Data\r\n ---- ------ ---- ------- --------- --------- --------- ------- -------- ----\r\n   17 45.95%    1 100.00%   4.46 mn   1.26 hr   7.46 mn GET     ---      % /list/default\r\n```\r\n\r\nAs I understand the output Average T.S. (time spent?) is reported in minutes but that does not make sense combined with the response time reported in milliseconds. \r\n\r\nI know that `%T` corresponds to \"The time taken to serve the request, in seconds with milliseconds resolution\" but if I switch to `%L` (The time taken to serve the request, in milliseconds as a decimal number) I get `0.00 us` in all time columns. I also tried with. `%n` for good measure but that also yielded `0.00 us`.\r\n\r\nI wonder if it has to do with `.` or `,` is used as decimal separator? but I could not spot any way to configure this in the documentation.\r\n\r\nNotes: Since the log does not have any host name information I (mis)use the `ms` element as the hostname combined with `--no-ip-validation`.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2597/comments",
    "author": "kasperg",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2023-12-21T01:43:23Z",
        "body": "Great question! It appears that you can accomplish this by utilizing `%L` when splitting the `.` to capture the whole number.\r\n\r\n    goaccess access.log --datetime-format='%Y-%m-%dT%H:%M:%SZ' --log-format='%x %m %s %L.%^ %h %b %^ %^ %U' --no-ip-validation\r\n\r\nLet me know if that helps"
      },
      {
        "user": "kasperg",
        "created_at": "2023-12-21T08:03:23Z",
        "body": "That works like a charm! Really appreciate the help."
      }
    ]
  },
  {
    "number": 2589,
    "title": "help me get 【log-format】 rule",
    "created_at": "2023-12-07T07:14:35Z",
    "closed_at": "2024-04-06T00:14:52Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2589",
    "body": "nginx log config:\r\n\r\n`\r\njson  '{\"timestamp\":\"$time_iso8601\",'\r\n                 '\"source\":\"$http_source\",'\r\n                 '\"host\":\"$server_addr\",'\r\n                 '\"clientip\":\"$remote_addr\",'\r\n                 '\"size\":$body_bytes_sent,'\r\n                 '\"responsetime\":$request_time,'\r\n                 '\"upstreamtime\":\"$upstream_response_time\",'\r\n                 '\"upstreamhost\":\"$upstream_addr\",'\r\n                 '\"http_host\":\"$host\",'\r\n                 '\"referer\":\"$http_referer\",'\r\n                 '\"agent\":\"$http_user_agent\",'\r\n                 '\"request\":\"$request\",'\r\n                 '\"request_body\":\"$request_body\",'\r\n                 '\"response_body\":\"$resp_body\",'\r\n                 '\"token\":\"$http_token\",'\r\n                 '\"upstream_http_content_type\":\"$upstream_http_content_type\",'\r\n                 '\"status\":\"$status\"}'\r\n`\r\n\r\nhelp me get 【log-format】 rule",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2589/comments",
    "author": "tinybyhuang",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2023-12-08T00:58:45Z",
        "body": "Feel free to share a few lines directly from your access.log."
      },
      {
        "user": "allinurl",
        "created_at": "2024-01-08T02:11:28Z",
        "body": "any updates on this?"
      },
      {
        "user": "allinurl",
        "created_at": "2024-04-06T00:14:52Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 2565,
    "title": "Goaccess Cant  Parsing error.log Nginx",
    "created_at": "2023-10-05T07:06:14Z",
    "closed_at": "2023-10-05T07:45:14Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2565",
    "body": "Here is my sample:\r\n\r\n`2023/10/05 06:51:55 [notice] 3399#3399: ModSecurity-nginx v1.0.3 (rules loaded inline/local/remote: 0/921/0)`\r\n\r\nI try google search about log formart but doesnt work for me\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2565/comments",
    "author": "territestgogo",
    "comments": [
      {
        "user": "territestgogo",
        "created_at": "2023-10-05T07:45:22Z",
        "body": "Done"
      },
      {
        "user": "63070016",
        "created_at": "2023-11-28T03:36:57Z",
        "body": "how you solve it\r\n"
      }
    ]
  },
  {
    "number": 2560,
    "title": "Parsing Nginx Log to Goaccess",
    "created_at": "2023-09-19T10:50:30Z",
    "closed_at": "2024-04-06T00:16:15Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2560",
    "body": "My nginx loging format is \r\nlog_format  main  '$host $remote_addr - $remote_user [$time_local] $upstream_cache_status \"$request\" '\r\n                      '$status $body_bytes_sent \"$http_referer\" '\r\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\" \"$gzip_ratio\" '\r\n                      '$request_time $upstream_response_time $pipe';\r\n\r\nand  goaccess command   Iam running is \r\n\r\nawk '$9=$1\":\"$9' access.log | goaccess --log-format='%v %h %^[%d:%t %^]%^\"%r\" %s %b \"%R\" \"%u\" \"%^\" \"%^\" %T %^' --date-format='%d/%b/%Y' --time-format='%T'\r\n\r\n\r\nBut when I run this I am getting \r\nParsed 10 lines producing the following errors:\r\n==20173==\r\n==20173== Token '-' doesn't match specifier '%h'\r\n==20173== Token '-' doesn't match specifier '%h'\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2560/comments",
    "author": "Leothomaz1",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2023-09-21T01:34:29Z",
        "body": "Could you provide a few sample lines from your access log for me to review?"
      },
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2023-09-28T18:27:08Z",
        "body": "Well... it's work for me too.\r\n\r\n@allinurl  always recommends it, me too: \r\nPlease make sure the locale settings on your system match the log date.\r\n\r\n`LC_TIME=\"en_US.UTF-8\" goaccess ...`\r\n\r\nI hope that be helped you.\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2024-04-06T00:16:15Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 2540,
    "title": "Rewind persisted db to remove corrupted entries",
    "created_at": "2023-07-31T05:44:33Z",
    "closed_at": "2023-08-02T05:12:08Z",
    "labels": [
      "question",
      "log-processing",
      "on-disk"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2540",
    "body": "I managed to run my background analytics job twice at the same time and now I have a bunch of data for \"hits\" that appears to be double counted (there is an obvious segment of the chart where the \"hits\" line is twice the height of before and after). I was wondering if it's possible for me to rewind the persisted database to some date so I can re-run goaccess over the original logfiles to reprocess that data? Thanks so much!",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2540/comments",
    "author": "chr15m",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2023-08-01T15:12:49Z",
        "body": "Unfortunately you can't rewind the database. All the data gets aggregated as it's inserted. Do you still have the logs available?"
      },
      {
        "user": "chr15m",
        "created_at": "2023-08-02T05:12:08Z",
        "body": "Ok thanks, I'll rebuild using the original logs."
      }
    ]
  },
  {
    "number": 2538,
    "title": "bash: /usr/bin/find: Argument list too long",
    "created_at": "2023-07-24T13:11:48Z",
    "closed_at": "2024-04-07T21:18:52Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2538",
    "body": "I have about 27000 logs file and need to parse them in one time.\r\nevery time i run this command \r\ngoaccess  /home/goaccess/part/2/*.log --log-format='%^ %dT%t.%^ %v %h:%^ %^ %^ %T %^ %s %^ %^ %b \"%r\" \"%u\" %k %K %^' -o /var/www/html/index.html --date-format=%Y-%m-%d --time-format=%T\r\n\r\nit says \r\nbash: /usr/bin/find: Argument list too long\r\n\r\nplease help me....need to do this urgently. ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2538/comments",
    "author": "CloudShubham",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2023-07-25T02:04:10Z",
        "body": "You probably want to cat them all and pipe that to goaccess. e.g.,\r\n\r\n    cat /home/goaccess/part/2/*.log | goaccess - --log-format='%^ %dT%t.%^ %v %h:%^ %^ %^ %T %^ %s %^ %^ %b \"%r\" \"%u\" %k %K %^' -o /var/www/html/index.html --date-format=%Y-%m-%d --time-format=%T\r\n\r\n"
      },
      {
        "user": "CloudShubham",
        "created_at": "2023-07-25T09:03:11Z",
        "body": "> You probably want to cat them all and pipe that to goaccess. e.g.,\r\n> \r\n> ```\r\n> cat /home/goaccess/part/2/*.log | goaccess - --log-format='%^ %dT%t.%^ %v %h:%^ %^ %^ %T %^ %s %^ %^ %b \"%r\" \"%u\" %k %K %^' -o /var/www/html/index.html --date-format=%Y-%m-%d --time-format=%T\r\n> ```\r\n\r\nOk i will try that "
      },
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2023-09-28T18:59:57Z",
        "body": "Hi.\r\n\r\nIf you use `BASH` Shell must be work. But, `CSH` possibly NOT.\r\nIn Last case, do you need simulate behavior through a loop.\r\nFor example:\r\n\r\n```\r\n# in BASH script\r\n\r\nFILES4BLOCK=1000\r\nfind /home/goaccess/part/2/ -type f -iname '*.log' > list-of-files.txt\r\nFILESTOTAL=$(cat list-of-files.txt | wc -l)\r\nii=1\r\nwhile [ ${ii} -lt ${FILESTOTAL} ]\r\ndo\r\n      cat $(tail -n +${ii} list-of-files.txt | head -${FILES4BLOCK})\r\n      (( ii += ${FILES4BLOCK} ))\r\ndone |  \\\r\ngoaccess ...\r\n```\r\n\r\nIt will loop with 1000 files at each `CAT` run until end of list.\r\n\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2024-04-07T21:18:52Z",
        "body": "Closing this. Feel free to reopen if necessary."
      }
    ]
  },
  {
    "number": 2537,
    "title": "Token '0' doesn't match specifier '%m' Logs RPM",
    "created_at": "2023-07-21T20:53:49Z",
    "closed_at": "2024-07-10T01:18:25Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2537",
    "body": "Hello \r\nI have updated today go accsess.\r\n\r\nNow i have a problem with the reverse proxy manager logs. \r\nif i start the container i have this logs:\r\n\r\n==87== FILE: /opt/log/proxy-host-1_access.log\r\n==87== Parsed 20 lines producing the following errors:\r\n==87==\r\n==87== Token '0' doesn't match specifier '%m'\r\n==87== Token '1' doesn't match specifier '%m'\r\n==87== Token '4' doesn't match specifier '%m'\r\n==87== Token '4' doesn't match specifier '%m'\r\n==87== Token '0' doesn't match specifier '%m'\r\n==87== Token '0' doesn't match specifier '%m'\r\n==87== Token '0' doesn't match specifier '%m'\r\n==87== Token '0' doesn't match specifier '%m'\r\n==87== Token '0' doesn't match specifier '%m'\r\n==87== Token '0' doesn't match specifier '%m'\r\n==87== Token '0' doesn't match specifier '%m'\r\n==87== Token '0' doesn't match specifier '%m'\r\n==87== Token '0' doesn't match specifier '%m'\r\n==87== Token '0' doesn't match specifier '%m'\r\n==87== Token '0' doesn't match specifier '%m'\r\n==87== Token '0' doesn't match specifier '%m'\r\n==87== Token '0' doesn't match specifier '%m'\r\n==87== Token '0' doesn't match specifier '%m'\r\n==87== Token '0' doesn't match specifier '%m'\r\n==87== Token '0' doesn't match specifier '%m'\r\n==87==\r\n==87== Format Errors - Verify your log/date/time format\r\n\r\ncan you help me with this issues?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2537/comments",
    "author": "gentilsol",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2023-07-25T02:05:32Z",
        "body": "Seems like you might be using the wrong log format. Mind sharing a few lines from your log? I can take a look and help you out."
      },
      {
        "user": "allinurl",
        "created_at": "2024-07-10T01:18:25Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 2530,
    "title": "nginx  log_format access escape=json request_body doesn't match specifier '%s'",
    "created_at": "2023-06-26T07:45:35Z",
    "closed_at": "2024-07-10T01:18:57Z",
    "labels": [
      "question",
      "log/date/time format",
      "JSON"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2530",
    "body": "my nginx  log_format access escape=json\r\n    '{'\r\n    '\"remote_addr\":\"$remote_addr\",'\r\n    '\"X-Forwarded-For\":\"$http_X_Forwarded_For\",'\r\n    '\"remote_user\":\"$remote_user\",'\r\n    '\"time_local\":\"$time_local\",'\r\n    #'\"request\":\"$request\",'\r\n    '\"method\":\"$request_method\",'\r\n    '\"uri\":\"$request_uri_without_args\",'\r\n    '\"server_protocol\":\"$server_protocol\",'\r\n    '\"request_body\":\"$request_body\",'\r\n    '\"status\":\"$status\",'\r\n    '\"body_bytes_sent\":\"$body_bytes_sent\",'\r\n    '\"http_referer\":\"$http_referer\",'\r\n    '\"user_agent\":\"$http_user_agent\",'\r\n    '\"upstream_response_time\":\"$upstream_response_time\"'\r\n    '}';\r\n\r\nlog:\r\n```\r\n{\"remote_addr\":\"27.42.97.3\",\"X-Forwarded-For\":\"\",\"remote_user\":\"\",\"time_local\":\"26/Jun/2023:14:24:53 +0800\",\"method\":\"POST\",\"uri\":\"/api/wxwork/update_client_check_by_user_id\",\"server_protocol\":\"HTTP/1.1\",\"request_body\":\"{\\\"conversation_id\\\": \\\"R:10702974330125216\\\", \\\"user_id\\\": \\\"1688855808384131\\\", \\\"r\\\": \\\"0.26757465361675780.162839211545101610.219429860649578481687760689\\\", \\\"key\\\": \\\"54cc173a6a254f3c5101fee835ef1120\\\", \\\"v\\\": 40}\",\"status\":\"200\",\"body_bytes_sent\":\"77\",\"http_referer\":\"\",\"user_agent\":\"python-requests/2.25.0\",\"upstream_response_time\":\"0.304\"}\r\n{\"remote_addr\":\"27.42.97.3\",\"X-Forwarded-For\":\"\",\"remote_user\":\"\",\"time_local\":\"26/Jun/2023:14:24:53 +0800\",\"method\":\"POST\",\"uri\":\"/api/wxwork/update_client_check_by_user_id\",\"server_protocol\":\"HTTP/1.1\",\"request_body\":\"{\\\"conversation_id\\\": \\\"R:10696052264023250\\\", \\\"user_id\\\": \\\"1688850034159227\\\", \\\"r\\\": \\\"0.7677994368913941687760676\\\", \\\"key\\\": \\\"af77c1767927081a8ca66b97ddcb43d2\\\", \\\"v\\\": 39}\",\"status\":\"200\",\"body_bytes_sent\":\"77\",\"http_referer\":\"\",\"user_agent\":\"python-requests/2.25.0\",\"upstream_response_time\":\"0.075\"}\r\n{\"remote_addr\":\"27.42.97.3\",\"X-Forwarded-For\":\"\",\"remote_user\":\"\",\"time_local\":\"26/Jun/2023:14:24:54 +0800\",\"method\":\"POST\",\"uri\":\"/api/wxwork/update_client_check_by_user_id\",\"server_protocol\":\"HTTP/1.1\",\"request_body\":\"{\\\"conversation_id\\\": \\\"R:10696052264023250\\\", \\\"user_id\\\": \\\"1688850848204309\\\", \\\"r\\\": \\\"0.73482650179777390.77753398857522890.029601972159778111687760689\\\", \\\"key\\\": \\\"38d9807ed58825629c01f9ae8ee75022\\\", \\\"v\\\": 40}\",\"status\":\"200\",\"body_bytes_sent\":\"77\",\"http_referer\":\"\",\"user_agent\":\"python-requests/2.25.0\",\"upstream_response_time\":\"0.240\"}\r\n{\"remote_addr\":\"27.42.97.3\",\"X-Forwarded-For\":\"\",\"remote_user\":\"\",\"time_local\":\"26/Jun/2023:14:24:54 +0800\",\"method\":\"POST\",\"uri\":\"/api/wxwork/update_client_check_by_user_id\",\"server_protocol\":\"HTTP/1.1\",\"request_body\":\"{\\\"conversation_id\\\": \\\"R:10696052264023250\\\", \\\"user_id\\\": \\\"1688851289791215\\\", \\\"r\\\": \\\"0.52914994775853620.7112603293521620.28865922991940121687760694\\\", \\\"key\\\": \\\"89852f2f009cc772c458ec55ca33ef11\\\", \\\"v\\\": 40}\",\"status\":\"200\",\"body_bytes_sent\":\"77\",\"http_referer\":\"\",\"user_agent\":\"python-requests/2.25.0\",\"upstream_response_time\":\"0.313\"}\r\n{\"remote_addr\":\"27.42.97.3\",\"X-Forwarded-For\":\"\",\"remote_user\":\"\",\"time_local\":\"26/Jun/2023:14:24:54 +0800\",\"method\":\"POST\",\"uri\":\"/api/wxwork/update_client_check_by_user_id\",\"server_protocol\":\"HTTP/1.1\",\"request_body\":\"{\\\"conversation_id\\\": \\\"R:10696052264023250\\\", \\\"user_id\\\": \\\"1688853424793251\\\", \\\"r\\\": \\\"0.90929764959028340.86966524986994810.237706429658206871687760689\\\", \\\"key\\\": \\\"50ff6d954dbd584329257768b1a440ad\\\", \\\"v\\\": 40}\",\"status\":\"200\",\"body_bytes_sent\":\"77\",\"http_referer\":\"\",\"user_agent\":\"python-requests/2.25.0\",\"upstream_response_time\":\"0.206\"}\r\n{\"remote_addr\":\"27.42.97.3\",\"X-Forwarded-For\":\"\",\"remote_user\":\"\",\"time_local\":\"26/Jun/2023:14:24:54 +0800\",\"method\":\"POST\",\"uri\":\"/api/wxwork/update_client_check_by_user_id\",\"server_protocol\":\"HTTP/1.1\",\"request_body\":\"{\\\"conversation_id\\\": \\\"R:10696052264023250\\\", \\\"user_id\\\": \\\"1688853527236759\\\", \\\"r\\\": \\\"0.29688366522955390.139861164219799550.58151609473408661687760682\\\", \\\"key\\\": \\\"52482350c56b59930107f1dce95c49cb\\\", \\\"v\\\": 40}\",\"status\":\"200\",\"body_bytes_sent\":\"77\",\"http_referer\":\"\",\"user_agent\":\"python-requests/2.25.0\",\"upstream_response_time\":\"0.187\"}\r\n```\r\n\r\nmy goaccess version is 1.3\r\n```\r\ngoaccess xxx.log  --log-format='{\"remote_addr\":\"%h\",\"X-Forwarded-For\":%^,\"remote_user\":%^,\"time_local\":\"%d:%t %^\",\"method\":\"%m\",\"uri\":\"%U\",\"server_protocol\":\"%H\",\"request_body\":\"~b {,\\\"}\",\"status\":\"%s\",\"body_bytes_sent\":%^,\"http_referer\":\"%R\",\"user_agent\":\"%u\",\"upstream_response_time\":\"%T\"}' --date-format=%d/%b/%Y --time-format=%H:%M:%S\r\n```\r\n\r\nresult:\r\n```\r\nToken 'd\\\": \\\"R:10696051035025156\\\", \\\"user_id\\\": \\\"1688851289791215\\\", \\\"r\\\": \\\"0.414754021335620560.038691564378897650.091329788569579741687712107\\\", \\\"key\\\": \\\"31b82175b848f89e33c5472a48ce7c99\\\", \\\"v\\\": 40}' doesn't match specifier '%s'\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2530/comments",
    "author": "baggiocq",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2023-06-28T02:16:01Z",
        "body": "The provided log does not seem to be a valid JSON log. The part where `...request_body\": \"{\"` is not considered valid. Is it possible for you to modify the log format to ensure that valid JSON is being outputted?"
      },
      {
        "user": "allinurl",
        "created_at": "2024-07-10T01:18:57Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 2521,
    "title": "How do I convert the log format",
    "created_at": "2023-06-09T07:36:32Z",
    "closed_at": "2024-07-10T01:20:05Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2521",
    "body": "```\r\nnginx log_format :  v1{]$host{]$request{]-{]$time_local{]$status{]-{]$request_time{]$body_bytes_sent{]$bytes_sent{]$remote_addr{]$http_x_forwarded_for{]$http_referer{]-{]$http_user_agent{]-{]-{]$http_via{]-{]$upstream_addr{]$upstream_response_time{]$server_addr{]launcher\r\n\r\nlog  example: \r\nv1{]my.host.com{]GET /url/goes/here/ HTTP/1.1{]-{]07/Jun/2023:07:57:59 +0800{]200{]-{]0.055{]8028{]8451{]192.168.1.1{]192.168.1.1{]-{]-{]okhttp/3.8.0{]-{]-{]-{]-{]192.168.1.1{]0.055{]192.168.1.1{]launcher\r\n```\r\n\r\nHow do I convert the above nginx log format to goaccess log format?\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2521/comments",
    "author": "wangquan86",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2023-06-10T13:34:37Z",
        "body": "Can you please post a few more lines from your access log?"
      },
      {
        "user": "allinurl",
        "created_at": "2024-07-10T01:20:05Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 2516,
    "title": "==1975== Format Errors - Verify your log/date/time format",
    "created_at": "2023-06-01T11:42:10Z",
    "closed_at": "2023-06-19T07:46:49Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2516",
    "body": "When using GoAccess to analyze log files, this error showing \"==1975== Format Errors - Verify your log/date/time format\".\r\ncommand:\r\n`/usr/local/bin/goaccess /var/log/httpd/ssl_access_log --log-format='%h %^[%d:%t %^] \"%r\" \"%s\" %b' --date-format=%d/%b/%Y --time-format=%T -o /mnt/redeploy/report.html`\r\napache Logs:\r\n`10.13.35.24 - - [29/May/2023:08:58:23 +0800] \"POST /user-login.html HTTP/1.1\" 200 58`",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2516/comments",
    "author": "zwb993",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2023-06-04T17:01:47Z",
        "body": "I'd run it as:\r\n\r\n    goaccess access.log --log-format=COMMON"
      },
      {
        "user": "zwb993",
        "created_at": "2023-06-19T07:46:46Z",
        "body": "it works, thank you!"
      }
    ]
  },
  {
    "number": 2511,
    "title": "==9410== Token 'May' doesn't match specifier '%h'",
    "created_at": "2023-05-20T07:24:58Z",
    "closed_at": "2023-10-04T18:23:29Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2511",
    "body": "When using GoAccess to analyze log files, this error showing \"Token 'May' doesn't match specifier '%h'.\r\nLogs:\r\n\r\n```\r\nMay 17 04:22:03 matt matrix-nginx-proxy[3253]: 172.23.0.4 - - [17/May/2023:04:22:03 +0000] \"GET /_matrix/client/versions HTTP/1.1\" 200 353 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/111.0\" \"0.0.0.0\"\r\nMay 01 10:51:41 matt matrix-nginx-proxy[15217]: 172.18.0.5 - - [01/May/2023:10:51:41 +0000] \"GET /_matrix/media/r0/config HTTP/1.0\" 401 88 \"-\" \"Element/1.10.11 (iPhone 12; iOS 16.4.1; Scale/3.00)\" \"0.0.0.0, 172.23.0.4\"\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2511/comments",
    "author": "Siam-1998",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2023-05-31T00:50:50Z",
        "body": "This should do it:\r\n\r\n    goaccess access.log --log-format='%^]: %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T\r\n\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2023-10-04T18:23:29Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 2501,
    "title": "Gandi.net - simplehosting - parsing access.log",
    "created_at": "2023-04-13T10:33:32Z",
    "closed_at": "2023-04-14T08:00:58Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2501",
    "body": "Hello, I'm using the simplehosting solution from gandi.net.\r\nI'm in trouble because they use a custom template for access.log : \r\n```LogFormat \"%V %a %l %u %t (%T s) \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-agent}i\\\"\" vhost_paas```\r\neg : \r\n`domain.fr 43.130.00.000 - - [12/Apr/2023:15:07:52 +0000] (0 s) \"GET /files/ HTTP/1.1\" 404 196 \"binance.com\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.85 Safari/537.36\"`\r\n\r\nSo I tried\r\n`goaccess /Volumes/XX/access.log --log-format=\"%V %a %l %u %t (%T s) \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\"\" vhost_paas --datetime-format=%d/%b/%Y:%H:%M:%S %z`\r\nthat give me `Token '[10/Apr/2023:06:59:08' doesn't match specifier '%t` I tried many options with --date and --time from previous issues without success.\r\n\r\nI'm on a mac, using french locale and installed goaccess with brew.\r\n\r\nThanks in advance.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2501/comments",
    "author": "RolandTi",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2023-04-13T22:40:40Z",
        "body": "Please try:\r\n\r\n    goaccess access.log --log-format='%v %h %^[%d:%t %^] (%T %^) \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T\r\n\r\nYou may need to use:\r\n\r\n    LC_TIME=\"en_US.UTF-8\" goaccess log --log-format='%v %h %^[%d:%t %^] (%T %^) \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "RolandTi",
        "created_at": "2023-04-14T08:00:58Z",
        "body": "Hello allinurl ! You're right with the LC_TIME, thank you very much !"
      },
      {
        "user": "allinurl",
        "created_at": "2023-04-18T00:17:40Z",
        "body": "@RolandTi Glad that did the job! Let me know if you have any other questions"
      }
    ]
  },
  {
    "number": 2475,
    "title": "Please help with custom log format",
    "created_at": "2023-02-27T19:06:08Z",
    "closed_at": "2023-03-29T04:30:10Z",
    "labels": [
      "question",
      "log/date/time format",
      "other"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2475",
    "body": "can anyone please help me with following log format\r\n\r\n```\r\n21:43:05.419 [http-bio-443-exec-174] INFO  c.f.b.c.s.w.m.f.i.ApiFunctionHandlerImpl - Return code R\r\n21:43:05.419 [http-bio-443-exec-174] INFO  c.f.b.c.s.w.m.f.i.ApiFunctionHandlerImpl - Error Message\r\n21:43:05.419 [http-bio-443-exec-174] INFO  c.f.b.c.s.w.m.f.i.ApiFunctionHandlerImpl - Warning Message\r\n21:43:05.419 [http-bio-443-exec-174] INFO  c.f.b.c.s.w.m.h.i.TransactionPostingsHandlerImpl - StopWatch '': running time (millis) = 18\r\n```\r\n\r\nand ignore lines which are not following above format \r\n\r\nThank you in advance",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2475/comments",
    "author": "shadeekam",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2023-03-28T23:54:10Z",
        "body": "Hello, sorry for the late reply. This looks like an error log? goaccess works best with an access log. A simple `awk` | `uniq` may help:\r\n\r\n```\r\n#!/bin/bash\r\n\r\n# Define the log file\r\nLOG_FILE=/path/to/logfile.log\r\n\r\n# Extract the fields using awk and count unique occurrences\r\necho \"Counting unique occurrences of fields in $LOG_FILE ...\"\r\necho \"-------------------------------------------------------\"\r\n\r\n# Count unique occurrences of field 1 (timestamp)\r\necho \"Count of unique timestamps:\"\r\nawk '{print $1}' $LOG_FILE | sort -u | wc -l\r\n\r\n# Count unique occurrences of field 5 (log level)\r\necho \"Count of unique log levels:\"\r\nawk '{print $5}' $LOG_FILE | sort -u | wc -l\r\n\r\n# Count unique occurrences of field 8 (log message)\r\necho \"Count of unique log messages:\"\r\nawk '{print $8}' $LOG_FILE | sort -u | wc -l\r\n```"
      },
      {
        "user": "shadeekam",
        "created_at": "2023-03-29T04:30:10Z",
        "body": "Thank you very much.. I'll look into awq"
      }
    ]
  },
  {
    "number": 2465,
    "title": "Automatically parse log files in folder.",
    "created_at": "2023-02-12T20:46:47Z",
    "closed_at": "2023-06-20T06:32:09Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2465",
    "body": "Hi\r\n\r\nLove your work with GoAccess.\r\n\r\nOne thing, would it be possible to have it automatically parse log files in a defined folder?\r\n\r\nThat way log rotating will not mess-up parsing and you would not have to change the config every time you add a new log from a system. you would to have to tell what ever system it may be, to output logs to that folder in what ever format you have configured I GoAccess.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2465/comments",
    "author": "AlexGuld",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2023-02-12T21:39:09Z",
        "body": "Thank you! As far as folders, you should be able to run something like:\r\n\r\n    goaccess /path/folder/*.log --log-format=COMBINED -o /path/output/report.html\r\n\r\nLet me know if that answers your question."
      }
    ]
  },
  {
    "number": 2463,
    "title": "No input data was provided nor there's data to restore when running in a python srcipt",
    "created_at": "2023-02-11T07:24:27Z",
    "closed_at": "2023-02-11T09:15:54Z",
    "labels": [
      "question",
      "log-processing",
      "other"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2463",
    "body": "When I run `cat logs/access.log | /usr/bin/goaccess --log-format='%h [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %T' --date-format=%d/%b/%Y --time-format=%T -o html` from shell, it works. \r\n\r\nBut when I run from python , it fails with error: `GoAccess - version 1.7 - Jan 1 2023 03:16:59 Config file: /etc/goaccess/goaccess.conf Fatal error has occurred Error occurred at: src/goaccess.c - initializer - 1471 No input data was provided nor there's data to restore.`\r\n```py\r\n#!/usr/bin/env python3\r\nimport subprocess\r\n\r\n\r\ncmd = '''cat logs/access.log | /usr/bin/goaccess --log-format='%h [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %T' --date-format=%d/%b/%Y --time-format=%T -o html\r\n'''\r\ndef runcmd(command):\r\n    ret = subprocess.run(command,shell=True,stdout=subprocess.PIPE,stderr=subprocess.PIPE,encoding=\"utf-8\",timeout=10)\r\n    if ret.returncode == 0:\r\n        return ret.stdout\r\n    return ret.stderr\r\n\r\nprint(runcmd(cmd))\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2463/comments",
    "author": "xiangnanscu",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2023-02-11T16:00:41Z",
        "body": "Did you find the issue? Sounds like you passing `-` to goaccess should solve your issue.\r\n\r\n    /usr/bin/goaccess - --log-format='%h [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %T' --date-format=%d/%b/%Y --time-format=%T -o html"
      },
      {
        "user": "xiangnanscu",
        "created_at": "2023-02-12T09:25:20Z",
        "body": "yes it is. Thanks"
      }
    ]
  },
  {
    "number": 2443,
    "title": "Token '+0000]' doesn't match specifier '%h'",
    "created_at": "2023-01-19T20:42:57Z",
    "closed_at": "2023-01-22T17:04:56Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2443",
    "body": "`mywebsite.net 2.248.91.208 - - [19/Jan/2023:20:25:45 +0000] \"GET /test/ HTTP/1.1\" 200 97 \"-\" \"node-XMLHttpRequest\" \"172.18.0.4:8081\"`\r\n\r\nThis is a standard nginx configuration as far as I know. The error I get is the following:\r\n`Token '+0000]' doesn't match specifier '%h'`",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2443/comments",
    "author": "binarybaron",
    "comments": [
      {
        "user": "wphampton",
        "created_at": "2023-01-20T14:39:17Z",
        "body": "Could you share the command you are running to process the logs? Specifically the `--log-format` option."
      },
      {
        "user": "binarybaron",
        "created_at": "2023-01-20T19:28:57Z",
        "body": "I tried `Common Log Format (CLF) with Virtual Host`"
      },
      {
        "user": "wphampton",
        "created_at": "2023-01-20T19:48:25Z",
        "body": "Like this? `goaccess access.log --log-format=VCOMBINED`"
      },
      {
        "user": "binarybaron",
        "created_at": "2023-01-20T20:29:29Z",
        "body": "Correct"
      },
      {
        "user": "allinurl",
        "created_at": "2023-01-21T22:16:41Z",
        "body": "This should do it:\r\n\r\n    goaccess access.log --log-format='%v %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %^' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "binarybaron",
        "created_at": "2023-01-22T17:04:52Z",
        "body": "Thank you!"
      }
    ]
  },
  {
    "number": 2442,
    "title": "Unsure about log file format",
    "created_at": "2023-01-18T16:52:13Z",
    "closed_at": "2023-02-26T16:53:39Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2442",
    "body": "can someone help with the correct command?\r\n\r\n`192.0.118.81 - - [06/Jan/2023:00:06:28 +0000] \"GET /wp-content/uploads/2016/08/erikran.png HTTP/1.1\" 301 194 \"-\" \"Photon/1.0\"`",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2442/comments",
    "author": "NotoriousBIT",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2023-01-18T16:58:13Z",
        "body": "Please try:    \r\n\r\n    goaccess access.log --log-format=COMBINED"
      },
      {
        "user": "NotoriousBIT",
        "created_at": "2023-01-18T17:24:53Z",
        "body": "Trank you for the quick response. I already tried exactly that, but the unique visitors seem way too high. Even if I exclude crawlers and some IPs."
      },
      {
        "user": "allinurl",
        "created_at": "2023-01-18T17:57:57Z",
        "body": "Are you comparing the numbers to?"
      },
      {
        "user": "NotoriousBIT",
        "created_at": "2023-01-20T12:40:40Z",
        "body": "I could lower the number by using `--browsers-file`  and `--unknowns-as-crawlers`.\r\nIs it possible to ignore requests by `ASN type`?\r\nThere are a lot of requests with `ASN type | Hosting`, which I would like to exclude.."
      },
      {
        "user": "allinurl",
        "created_at": "2023-01-21T22:18:08Z",
        "body": "At this time you can ignore by IP ranges using `-e`. #117 should let you exclude those hits going forward. Working on that feature as we speak."
      },
      {
        "user": "allinurl",
        "created_at": "2023-02-26T16:53:39Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 2438,
    "title": "Parse custom nginx JSON log",
    "created_at": "2023-01-07T13:02:05Z",
    "closed_at": "2023-02-26T16:54:04Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2438",
    "body": "I have a simple log but I cannot figure out how to parse the datetime component\r\n\r\nsample line\r\n\r\n```\r\n{\"time\":1673085237.244,\"client\":\"10.10.10.10\",\"method\":\"GET\",\"request\":\"GET /search/? HTTP/1.1\",\"request_length\":390,\"status\":\"307\",\"bytes_sent\":238,\"gzip_ratio\":\"\",\"body_bytes_sent\":0,\"referer\":\"\",\"user_agent\":\"python-requests/2.28.1\",\"accept_encoding\":\"gzip\",\"accept\":\"*/*\",\"request_time\":0.002}\r\n\r\ngoaccess sample_access_logs.txt -o report.html --date-format %* --time-format %* --log-format '{\"time\":%T,\"client\":\"%h\",\"method\":\"%m\",\"request\":\"%r\",\"request_length\":%^,\"status\":\"%s\",\"bytes_sent\":\"%b\",\"gzip_ratio\":\"%^\",\"body_bytes_sent\":%^,\"referer\":\"%R\",\"user_agent\":\"%u\",\"accept_encoding\":\"%^\",\"accept\":\"%^\",\"request_time\":%L}'\r\n```\r\n\r\nThis produces the output\r\n\r\n```\r\nA valid date is required\r\nFormat Errors - Verify your log/date/time format\r\n```\r\n\r\nIf I change it to \r\n\r\n    goaccess sample_access_logs.txt -o report.html --date-format %* --time-format %* --log-format '{\"time\":%d,\"client\":\"%h\",\"method\":\"%m\",\"request\":\"%r\",\"request_length\":%^,\"status\":\"%s\",\"bytes_sent\":\"%b\",\"gzip_ratio\":\"%^\",\"body_bytes_sent\":%^,\"referer\":\"%R\",\"user_agent\":\"%u\",\"accept_encoding\":\"%^\",\"accept\":\"%^\",\"request_time\":%L}'\r\n\r\n\r\n    Token '1673085237.244' doesn't match specifier '%d'\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2438/comments",
    "author": "mannickutd",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2023-01-08T02:28:10Z",
        "body": "This should do it:\r\n\r\n    goaccess access.log --log-format='{ \"time\": \"%x.%^\", \"client\": \"%h\", \"method\": \"%m\", \"request\": \"%U\", \"status\": \"%s\", \"bytes_sent\": \"%b\", \"referer\": \"%R\", \"user_agent\": \"%u\", \"request_time\": \"%T\" }' --datetime-format='%s'"
      },
      {
        "user": "allinurl",
        "created_at": "2023-02-26T16:54:04Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 2424,
    "title": "Need help with log format [uwsgi]",
    "created_at": "2022-11-28T11:11:49Z",
    "closed_at": "2022-12-02T09:27:06Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2424",
    "body": "Hello,\r\n\r\nI'm trying to analyze a uwsgi log file.\r\n\r\nGoaccess' log format is quite cryptic... could anybody help me get the right formats for this file? I'd be very grateful!\r\n\r\nI tried the formats suggested in #386, but at least the dates are completely wrong.\r\n\r\nHere are a couple of lines from the file:\r\n\r\n```\r\n[pid: 3492075|app: 0|req: 4282/169885] 54.36.148.22 () {38 vars in 549 bytes} [Mon Nov 28 06:41:16 2022] GET /actus/61476774cb7d6ede781a9b4a => generated 15747 bytes in 24 msecs (HTTP/2.0 200) 2 headers in 82 bytes (1 switches on core 0)\r\n[pid: 3492075|app: 0|req: 4283/169886] 54.36.148.231 () {38 vars in 709 bytes} [Mon Nov 28 06:41:25 2022] GET /resize/uploaded/pictures/4b8ea68f9f6a44c882b7fe0a9e75e621.jpg?v=YUdm_A&w=1024&s=b'Qut9-GQTlTM55BX1xNnZKrGqskA' => generated 122538 bytes in 9 msecs via sendfile() (HTTP/2.0 200) 6 headers in 242 bytes (0 switches on core 0)\r\n[pid: 3492075|app: 0|req: 4284/169887] 185.191.171.21 () {40 vars in 539 bytes} [Mon Nov 28 06:43:31 2022] GET /robots.txt => generated 12511 bytes in 1 msecs (HTTP/1.1 404) 2 headers in 89 bytes (1 switches on core 0)\r\n[pid: 3492075|app: 0|req: 4285/169888] 185.191.171.21 () {40 vars in 677 bytes} [Mon Nov 28 06:43:31 2022] GET /agenda/61b1e344f02ed2de108bc54a => generated 238040 bytes in 206 msecs (HTTP/1.1 200) 2 headers in 83 bytes (2 switches on core 0)\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2424/comments",
    "author": "amiguet",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-12-02T00:54:39Z",
        "body": "Sorry for the delay. This should do it:\r\n\r\n    goaccess access.log --log-format='%^] %h %^[%x] %m %U %^(%H %s) %^' --datetime-format='%a %b %d %H:%M:%S %Y' --date-spec=min --ignore-panel=OS --ignore-panel=BROWSERS --ignore-panel=REFERRING_SITES"
      },
      {
        "user": "amiguet",
        "created_at": "2022-12-02T09:27:06Z",
        "body": "That seems to work, many thanks! :-)\r\n\r\nI had to prefix the command with\r\n\r\n```\r\nLANG=\"en_US.UTF-8\"\r\n```\r\n\r\nas suggested in #2415 because my local locale (!) doesn't match the locale of the log file.\r\n\r\nBut other than that it works great. Thanks!"
      },
      {
        "user": "allinurl",
        "created_at": "2022-12-04T18:29:54Z",
        "body": "Glad to hear you got it working!"
      }
    ]
  },
  {
    "number": 2415,
    "title": "Token '09/Jan/2001' doesn't match specifier '%d'",
    "created_at": "2022-11-10T16:34:36Z",
    "closed_at": "2022-11-10T16:44:28Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2415",
    "body": "Hi,\r\n\r\nDate format is `%d/%b/%Y` and still getting error `Token '09/Jan/2001' doesn't match specifier '%d'`\r\n\r\nAny suggestions what should be the right full log format with dates and times? 🤔 \r\n\r\nI'm running app with defaults `goaccess access.log` and then choosing `NCSA Combined Log Format` with defaults:\r\n- `log format` - `%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"`\r\n- `date format` - `%d/%b/%Y`\r\n- `time format` - `%H:%M:%S`\r\n\r\nSample log lines:\r\n\r\n```\r\n10.0.0.0 - - [09/Jan/2001:00:07:51 +0000] \"GET /endpoint HTTP/1.1\" 418 0 \"-\" \"User-agent\"\r\n10.0.0.0 - - [09/Jan/2001:00:08:02 +0000] \"GET /endpoint HTTP/1.1\" 418 0 \"-\" \"User-agent\"\r\n```\r\n\r\nLooks like Combined Log Format, but the `%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"` doesn't work 😞 \r\n\r\nAny suggestions? 🙏 ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2415/comments",
    "author": "flashlabs",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-11-10T16:40:13Z",
        "body": "Usually this is due to conflicts between your log and your locale. i.e., log has English dates (e.g., Feb/Apr/Oct) while machine has a different locale. Please try running goaccess as:\r\n\r\n    LANG=\"en_US.UTF-8\" bash -c 'goaccess access.log --log-format=COMBINED'\r\n\r\nOr\r\n\r\n    LC_TIME=\"en_US.UTF-8\" goaccess access.log --log-format=COMBINED"
      },
      {
        "user": "flashlabs",
        "created_at": "2022-11-10T16:44:28Z",
        "body": "Ofc you are right and both of your solutions work! Thanks!"
      },
      {
        "user": "allinurl",
        "created_at": "2022-11-10T16:45:57Z",
        "body": "Glad that solved the issue :) Feel free to reopen it as needed."
      }
    ]
  },
  {
    "number": 2413,
    "title": "Token 'H' doesn't match specifier '%d'",
    "created_at": "2022-11-08T20:13:39Z",
    "closed_at": "2022-11-24T02:51:01Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2413",
    "body": "I have several logs being already monitored, however, these logs are being a pain...I'm sure it's something simple.\r\n\r\ntime-format %H:%M:%S\r\ndate-format %d/%b/%Y\r\n\r\nlog-format %h %^ %^ [%d:%t %^] \"%r\" %s %b\r\n\r\nLog format:\r\n123.128.123.123 - - [26/Jul/2019:20:26:54 -0700] \"GET /profile/upload/server/php/ HTTP/1.1\" 404 224\r\n204.200.150.25 - - [26/Jul/2019:20:28:34 -0700] \"GET /robots.txt HTTP/1.0\" 404 208\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2413/comments",
    "author": "adpur",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-11-10T00:20:24Z",
        "body": "The common log format should it:\r\n\r\n    goaccess access.log --log-format=COMMON"
      },
      {
        "user": "allinurl",
        "created_at": "2022-11-24T02:51:01Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 2409,
    "title": "Parsing does not work",
    "created_at": "2022-10-28T09:59:53Z",
    "closed_at": "2022-10-31T10:41:31Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2409",
    "body": "Hello,\r\nSorry to ask this question for the umpteenth time but I can't find a solution for apache log parsing\r\n\r\n```\r\n==1== Token '127.0.1.1:443' doesn't match specifier '%h'\r\n==1== Token '127.0.1.1:443' doesn't match specifier '%h'\r\n==1== Token '127.0.1.1:443' doesn't match specifier '%h'\r\n==1== Token '127.0.1.1:443' doesn't match specifier '%h'\r\n==1== Token '127.0.1.1:443' doesn't match specifier '%h'\r\n==1== Token '127.0.1.1:443' doesn't match specifier '%h'\r\n==1== Token '127.0.1.1:443' doesn't match specifier '%h'\r\n==1== Token '127.0.1.1:443' doesn't match specifier '%h'\r\n==1== Token '127.0.1.1:443' doesn't match specifier '%h'\r\n==1== Token '127.0.1.1:443' doesn't match specifier '%h'\r\n```\r\n\r\n\r\n\r\n>127.0.1.1:443 192.168.20.101 - - [18/Oct/2022:09:29:43 +0600] \"GET / HTTP/1.1\" 302 3783 \"-\" \"Uptime-Kuma/1.11.4\"\r\n127.0.1.1:443 192.168.20.101 - - [18/Oct/2022:09:29:43 +0600] \"GET /ACC/login HTTP/1.1\" 200 6558 \"-\" \"Uptime-Kuma/1.11.4\"\r\n127.0.1.1:443 172.30.110.52 - - [18/Oct/2022:09:29:44 +0600] \"GET / HTTP/1.1\" 302 1541 \"-\" \"Uptime-Kuma/1.11.4\"\r\n\r\nThank you for your time",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2409/comments",
    "author": "Paulpatou",
    "comments": [
      {
        "user": "kareemmahgoub",
        "created_at": "2022-10-30T09:34:59Z",
        "body": "I think you are having virtualhost variable in your log file \"127.0.1.1:443\". Try using VCOMBINED in goccess.conf"
      },
      {
        "user": "allinurl",
        "created_at": "2022-10-30T21:23:35Z",
        "body": "Sorry for the delay. This should do it.\r\n\r\n    goaccess access.log --log-format='%^ %h %^[%x] \"%r\" %s %b \"%R\" \"%u\"' --datetime-format='%d/%b/%Y:%H:%M:%S %z' --tz=Asia/Dhaka"
      }
    ]
  },
  {
    "number": 2399,
    "title": "Parsing does not work",
    "created_at": "2022-10-14T07:23:36Z",
    "closed_at": "2022-11-24T02:51:49Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2399",
    "body": "Log file:\r\n\"22/Sep/2022:07:00:38\" 5.130.148.207 GET \"GET /api/language_spokens HTTP/2.0\" \r\n\r\nFormats:\r\n--log-format='\"%d:%t\" %h' --date-format=%d/%b/%Y --time-format=%H:%M:%S\r\n\r\nOutput:\r\n==1== Token for '%t' specifier is NULL.\r\n==1==\r\n==1== Format Errors - Verify your log/date/time format",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2399/comments",
    "author": "NikitaObukhov",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-10-17T14:09:30Z",
        "body": "  Please try the following and let me know how it goes. \r\n  \r\n    goaccess access.log --log-format='\"%d:%t\" %h %^ “%r”' --date-format=%d/%b/%Y --time-format=%H:%M:%S"
      },
      {
        "user": "allinurl",
        "created_at": "2022-11-24T02:51:49Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 2398,
    "title": "In Requested Files Data is not captured when its length is high",
    "created_at": "2022-10-13T10:54:27Z",
    "closed_at": "2022-11-24T02:52:15Z",
    "labels": [
      "question",
      "build"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2398",
    "body": "In Requested Files(URLS) for apache access logs, when the content in data length is high, its getting skipped automatically. Can we increase the data length limit ?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2398/comments",
    "author": "sajiljosephs",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-10-13T12:43:50Z",
        "body": "You will need to build goaccess using     --with-getline. Please let me know if that solves the issue on your end. "
      },
      {
        "user": "sajiljosephs",
        "created_at": "2022-10-17T04:58:39Z",
        "body": "Still its not taking all http access logs with big data length "
      },
      {
        "user": "allinurl",
        "created_at": "2022-10-17T13:57:35Z",
        "body": "Feel free to post a few lines directly from your access log. Also please try passing --invalid-requests=<filename> to see those invalid requests. "
      },
      {
        "user": "allinurl",
        "created_at": "2022-11-24T02:52:15Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 2397,
    "title": "I can't get report with Virtual Host. ",
    "created_at": "2022-10-13T08:42:03Z",
    "closed_at": "2022-10-14T06:23:05Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2397",
    "body": "I got a message for \r\n **Token '+0000]' doesn't match specifier '%h'**    \r\n\r\nMy apache log format is \r\nLogFormat \"%v:%p %h %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" combinedvhost\r\n\r\nI attach my log sample, \r\n\r\n\r\n\r\n172.31.40.4 - - [13/Oct/2022:08:40:05 +0000] \"GET /dashboard/ HTTP/1.1\" 304 - \"-\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36\"\r\n172.31.9.122 - - [13/Oct/2022:08:40:06 +0000] \"OPTIONS /dashboard/noticeCount HTTP/1.1\" 200 - \"vhost.xxx\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36\"\r\n172.31.9.122 - - [13/Oct/2022:08:40:06 +0000] \"OPTIONS /pets/getAgeGroup HTTP/1.1\" 200 - \"vhost.xxx\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36\"\r\n172.31.9.122 - - [13/Oct/2022:08:40:06 +0000] \"OPTIONS /common/getAllCode HTTP/1.1\" 200 - \"vhost.xxx\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36\"\r\n172.31.9.122 - - [13/Oct/2022:08:40:06 +0000] \"OPTIONS /dashboard HTTP/1.1\" 200 - \"vhost.xxx\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36\"\r\n172.31.9.122 - - [13/Oct/2022:08:40:06 +0000] \"OPTIONS /dashboard/noticeCount HTTP/1.1\" 200 - \"vhost.xxx\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36\"\r\n172.31.9.122 - - [13/Oct/2022:08:40:06 +0000] \"POST /common/getAllCode HTTP/1.1\" 200 4212 \"vhost.xxx\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36\"\r\n172.31.9.122 - - [13/Oct/2022:08:40:06 +0000] \"GET /pets/getAgeGroup HTTP/1.1\" 200 652 \"vhost.xxx\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36\"\r\n\r\nI didn't get it what's wrong. \r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2397/comments",
    "author": "garion3024",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-10-13T12:46:07Z",
        "body": "How did you run goaccess? Simply using should work:\r\n\r\n    goaccess access.log —log-format=COMBINED \r\n\r\n"
      },
      {
        "user": "garion3024",
        "created_at": "2022-10-14T06:23:00Z",
        "body": "I made mistake in my log! I found it.\r\nThank for your answer!"
      }
    ]
  },
  {
    "number": 2393,
    "title": " Token doesn't match specifier '%d'",
    "created_at": "2022-10-10T11:30:29Z",
    "closed_at": "2022-11-24T02:52:45Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2393",
    "body": "I am not able to parse the custom logs using goaccess and I am getting following error while parsing.\r\n\r\n\r\n Token 'daksldjslss@192.168.0.36 207 repo' doesn't match specifier '%d'\r\n\r\n Command I have used.\r\n\r\n goaccess /home/ubuntu/load-analysis_svn-cache-svn.log -o /home/report.html --log-format='COMBINED'\r\n\r\n\r\n\r\nLog File:\r\n\r\n[2022-09-29 10:53:21.353073 +0200] daksldjslss@192.168.0.36 207 repo:/var/www/repos/gtup get-inherited-props /libs/JC6_HMI/tags/BLD-JC6_HMI-1.0.0-025/out r32395 (216 Bytes in 0 Sec)\r\n[2022-09-29 10:53:21.357983 +0200] daksldjslss@192.168.0.36 207 repo:/var/www/repos/gtup checkout-or-export /libs/JC6_HMI/tags/BLD-JC6_HMI-1.0.0-025/out r32395 (600 Bytes in 0 Sec)\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2393/comments",
    "author": "roshan5690",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-10-12T02:01:01Z",
        "body": "Could you please specify what’s the client ip? Also, I assume no user agent nor referrer…"
      },
      {
        "user": "roshan5690",
        "created_at": "2022-10-12T09:09:14Z",
        "body": "Following client IP. I am sending more logs details\r\n\r\ndaksldjslss@192.168.2.68 207 which is trying to checkout the repository code.\r\n\r\n\r\n<pre>\r\n[2022-09-29 06:26:01.828054 +0200] daksldjslss@192.168.2.68 207 repo:/var/www/repos/simulation get-dir /prj/ve-platform/vel-ehyu/_common-prj/schematics/ r77892 text (2338 Bytes in 0 Sec)\r\n[2022-09-29 06:26:01.923185 +0200] daksldjslss@192.168.2.68 207 207 repo:/var/www/repos/platform get-dir /prj/ve-plattform/vel-ehyu/_common-prj/schematics/branches/ r77892 text (1982 Bytes in 0 Sec)\r\n[2022-09-29 06:26:02.066682 +0200] daksldjslss@192.168.2.68 207 207 repo:/var/www/repos/platform get-dir /prj/ve-platform/vel-ehyu/_common-prj/schematics/branches/missing_symbols_v_03.08.2022/ r75049 text (3979 Bytes in 0 Sec)\r\n[2022-09-29 06:26:02.306983 +0200] daksldjslss@192.168.2.68 207 207 repo:/var/www/repos/platform get-dir /prj/ve-platform/vel-ehyu/_common-prj/schematics/branches/missing_symbols_v_31.05.2022/ r71226 text (3495 Bytes in 0 Sec)\r\n[2022-09-29 06:26:02.537747 +0200] daksldjslss@192.168.2.68 207 207 repo:/var/www/repos/platform get-dir /prj/ve-platform/vel-ehyu/_common-prj/schematics/branches/missing_symbols/ r70914 text (3404 Bytes in 0 Sec)\r\n[2022-09-29 06:26:02.716537 +0200] daksldjslss@192.168.2.68 207 207 repo:/var/www/repos/platform get-dir /prj/ve-platform/vel-ehyu/_common-prj/schematics/tags/ r77892 text (1928 Bytes in 0 Sec)\r\n[2022-09-29 06:26:02.859846 +0200] daksldjslss@192.168.2.68 207 207 repo:/var/www/repos/platform get-dir /prj/ve-platform/vel-ehyu/_common-prj/schematics/tags/V00.2_03.08.2022/ r76107 text (3851 Bytes in 0 Sec)\r\n</pre>"
      },
      {
        "user": "roshan5690",
        "created_at": "2022-10-17T08:26:45Z",
        "body": "Hello, Could you please provide the information how can I parse the custom logs  ?"
      },
      {
        "user": "allinurl",
        "created_at": "2022-10-17T13:50:32Z",
        "body": "Untested but please try this:\r\n    \r\n    goaccess access.log log-format=‘[%d %t.%^] %e@%h %s %^ %U %^ %v %M (%b %^ %^ %T%^)’ date-format=%Y-%m-%d time-format=%T"
      },
      {
        "user": "allinurl",
        "created_at": "2022-11-24T02:52:45Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 2389,
    "title": "Token 'to:' doesn't match specifier '%s'",
    "created_at": "2022-10-06T09:04:17Z",
    "closed_at": "2022-11-24T02:52:53Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2389",
    "body": "Hello everyone, please help goaccess nginx error\r\n\r\n**my nginx log**\r\n10.0.3.154 - - [05/Oct/2022:03:35:39 +0700] \"POST /v2/auth/refreshToken HTTP/2.0\" to: 192.168.200.146:80 422 35 \"-\" \"oxttp/4.5.0\" \"-\" \"api.domain.com\" upstream_response_time 0.026 msec 1664915739.787 request_time 0.026\r\n\r\n\r\n**command:**\r\ngoaccess cek-access.log --log-format=COMBINED -a -o /usr/share/nginx/html/log-nginx/report-format.html\r\n\r\n\r\n**error:**\r\nParsed 1 linesproducing the following errors:\r\n\r\nToken 'to:' doesn't match specifier '%s'\r\n\r\nFormat Errors - Verify your log/date/time format\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2389/comments",
    "author": "adylimmo",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-11-03T14:14:44Z",
        "body": "Sorry for the delay. This should do it (assumes latest version):\r\n\r\n    goaccess access.log --log-format='%h %^[%x] \"%r\" %^ %^ %s %b \"%R\" \"%u\" %^ \"%v\" %^ %^ %^ %^ %^ %T' --datetime-format='%d/%b/%Y:%H:%M:%S %z'"
      },
      {
        "user": "allinurl",
        "created_at": "2022-11-24T02:52:53Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 2379,
    "title": "Blank page when html report is generated",
    "created_at": "2022-09-11T13:26:52Z",
    "closed_at": "2022-09-12T14:08:44Z",
    "labels": [
      "question",
      "html report"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2379",
    "body": "Hi,\r\nI would like to use goaccess with html report.\r\n\r\nwhen I'm using the console lik this:\r\n`goaccess /var/log/apache2/access.log -c`\r\nI have a window to choose log format, I select NCSA combined log format, and it's OK, I see a dashboard.\r\n\r\nBut, when I want to use html report like this : \r\n`goaccess /var/log/apache2/access.log -o /var/www/report-test.html --log-format=COMBINED`\r\n\r\nWhen I open the report-test.html, it's a white page, I just have the date of the report.\r\n\r\nOn my terminal, I see this : \r\n\r\n> \r\n> [SETTING UP STORAGE /var/log/apache2/access.log] {0} @ {0/s}\r\n> \r\n> Cleaning up resources...\r\n> \r\n\r\nI don't know what to do.\r\n\r\n- My php version is 7.3.31\r\n- Goaccess version is 1.6.3\r\n- Debian version is 10.12.\r\n\r\nThank you for your help.\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2379/comments",
    "author": "civodul999",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-09-11T20:55:28Z",
        "body": "Could you please post the output of your browser's console? Thanks"
      },
      {
        "user": "civodul999",
        "created_at": "2022-09-12T07:52:13Z",
        "body": "> Could you please post the output of your browser's console? Thanks\r\n\r\nhi, the output is this one : \r\n\r\n```\r\nLast Updated: 2022-09-11 15:21:28 +0200\r\n\r\nDashboard\r\n```"
      },
      {
        "user": "allinurl",
        "created_at": "2022-09-12T12:59:44Z",
        "body": "Can you please post a screenshot of your browser's console (dev tools' console)?"
      },
      {
        "user": "civodul999",
        "created_at": "2022-09-12T14:08:44Z",
        "body": "> Can you please post a screenshot of your browser's console (dev tools' console)?\r\n\r\nThank you, it's OK now.\r\nWith dev tool's console, I have seen I have an error like this : \r\n\r\n`Refused to execute inline script because it violates the following Content Security Policy directive: \"default-src 'self'\". `\r\n\r\nIn my apache configuration file, I had this line : \r\n\r\n`Header add Content-Security-Policy: \"default-src 'self';\"`\r\n\r\nI have removed her, and it's ok now. Report is generated and visible in my browser.\r\n\r\nThank you !"
      },
      {
        "user": "allinurl",
        "created_at": "2022-09-12T15:02:25Z",
        "body": "Glad to hear you found the issue."
      }
    ]
  },
  {
    "number": 2378,
    "title": "Parse Log with hostname instead of ipv4/ipv6",
    "created_at": "2022-09-08T06:46:40Z",
    "closed_at": "2022-09-22T00:17:44Z",
    "labels": [
      "question",
      "log-processing",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2378",
    "body": "I have a log-file where the ip is already resolved and instead of ip has a hostname as a field.\r\n\r\nIt seems this field is not understood by goaccess. As I understand the hostname field is manadatory, but is it really a requirement to hold an IP? \r\n\r\n`Token 'some.perfect-valid-hostname.example.com' doesn't match specifier '%h'`\r\n\r\nDoes someone have an advice?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2378/comments",
    "author": "pniederlag",
    "comments": [
      {
        "user": "pniederlag",
        "created_at": "2022-09-08T06:50:24Z",
        "body": "digging into the source I spotted `--no-ip-validation ` which seems to do the trick"
      },
      {
        "user": "allinurl",
        "created_at": "2022-09-09T22:53:51Z",
        "body": "That's right. `--no-ip-validation` will do the job, still you will need to specify `%h` where the ip has been resolved."
      },
      {
        "user": "allinurl",
        "created_at": "2022-09-22T00:17:44Z",
        "body": "Closing this. Feel free to reopen it as needed."
      }
    ]
  },
  {
    "number": 2368,
    "title": "Log Format for Traefik and Docker",
    "created_at": "2022-08-22T04:03:45Z",
    "closed_at": "2022-08-25T18:29:22Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2368",
    "body": "Could I get some assistance with finding the right format for the following setup? I was unable to locate a similar one from previous posts.\r\n\r\n```\r\ntime=\"2022-07-26T10:01:42-04:00\" level=error msg=\"accept tcp [::]:443: use of closed network connection\" entryPointName=websecure\r\ntime=\"2022-07-26T10:01:42-04:00\" level=error msg=\"accept tcp [::]:80: use of closed network connection\" entryPointName=web\r\ntime=\"2022-07-26T10:01:42-04:00\" level=error msg=\"close tcp [::]:80: use of closed network connection\" entryPointName=web\r\ntime=\"2022-07-26T10:01:43-04:00\" level=error msg=\"close tcp [::]:443: use of closed network connection\" entryPointName=websecure\r\ntime=\"2022-07-27T14:55:34-04:00\" level=error msg=\"accept tcp [::]:443: use of closed network connection\" entryPointName=websecure\r\ntime=\"2022-07-27T14:55:34-04:00\" level=error msg=\"accept tcp [::]:80: use of closed network connection\" entryPointName=web\r\ntime=\"2022-07-27T14:55:34-04:00\" level=error msg=\"close tcp [::]:80: use of closed network connection\" entryPointName=web\r\ntime=\"2022-07-27T14:55:34-04:00\" level=error msg=\"close tcp [::]:443: use of closed network connection\" entryPointName=websecure\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2368/comments",
    "author": "the-jchusid",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-08-23T13:29:00Z",
        "body": "Please try the following (>= v1.6.2):\r\n\r\n    goaccess log --log-format='%^=\"%x\" %^=%e %^[%h]:%^: %U\" %^=%v' --datetime-format='%Y-%m-%dT%H:%M:%S%z' --hour-spec=min --date-spec=min --http-protocol=no --http-method=no --ignore-panel=OS --ignore-panel=BROWSERS --ignore-panel=REFERRING_SITES --ignore-panel=REQUESTS --ignore-panel=REQUESTS_STATIC --ignore-panel=NOT_FOUND --ignore-panel=STATUS_CODES"
      },
      {
        "user": "the-jchusid",
        "created_at": "2022-08-25T18:29:15Z",
        "body": "Perfect, thanks I was able to get it going with that!"
      }
    ]
  },
  {
    "number": 2364,
    "title": "Error occurred at: src/util.c - get_home",
    "created_at": "2022-08-05T04:03:40Z",
    "closed_at": "2022-09-22T00:18:46Z",
    "labels": [
      "question",
      "other"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2364",
    "body": "when i create html report it have a error\r\nFatal error has occurred\r\nError occurred at: src/util.c - get_home - 466\r\nUnable to determine the HOME environment variable.\r\n\r\nHow can I go to fix it\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2364/comments",
    "author": "SuperLemons",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-08-05T12:58:59Z",
        "body": "Please upgrade to the latest version of goaccess. Otherwise, please try setting the HOME env variable."
      },
      {
        "user": "allinurl",
        "created_at": "2022-09-22T00:18:46Z",
        "body": "Closing this. Feel free to reopen it as needed."
      }
    ]
  },
  {
    "number": 2360,
    "title": "debug-file flag",
    "created_at": "2022-08-01T15:52:49Z",
    "closed_at": "2022-08-01T19:24:20Z",
    "labels": [
      "question",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2360",
    "body": "Hi,\r\n\r\nI'm running something similar to below, not sure if I'm doing something wrong here but the debug file gets created as \"--debug-file=goaccess.debug\" rather than \"goaccess.debug\". The invalid requests file gets created correctly.\r\n\r\ngoaccess -l --debug-file=goaccess.debug --invalid-requests=goaccess.invalid --no-global-config --ping-interval=15 --config-file=goaccess.conf\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2360/comments",
    "author": "xavier-hernandez",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-08-01T17:33:58Z",
        "body": "Looks like you are passing `-l` + `--debug-file` which are the same. I'd do one or the other one but not both:\r\n\r\n    goaccess --debug-file=goaccess.debug --invalid-requests=goaccess.invalid --no-global-config --ping-interval=15 --config-file=goaccess.conf"
      },
      {
        "user": "xavier-hernandez",
        "created_at": "2022-08-01T18:41:35Z",
        "body": "@allinurl thanks that worked. I guess I misunderstood the man page :/\r\n\r\nBy the way, I saw this as well,--ping-interval≶secs> . It should be =< . Do you want me to open a separate issue for that?\r\n\r\nThanks."
      },
      {
        "user": "allinurl",
        "created_at": "2022-08-01T19:21:51Z",
        "body": "Thanks for letting me know. It should be fixed now :)"
      }
    ]
  },
  {
    "number": 2351,
    "title": "Stats when rewriting log file on remote sync",
    "created_at": "2022-07-09T06:09:48Z",
    "closed_at": "2022-07-13T15:18:20Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2351",
    "body": "Hi,\r\n\r\nI am doing real time syncing files from our web server to goaccess server. And we have lots of servers\r\n\r\nFor now, I did for 4 servers, so all the log files from those servers are available in goaccess server and I am running goaccess by mentioning all the log files. But I am getting wrong data \r\n\r\nHow do I confirm?\r\n\r\n1) BW in the server is not matching with the goaccess stats\r\n2) We also measure stats via stats plugin provided by the server and it is not matching with goaccess\r\n\r\n3) I see 150M+ hits in goacces stats where as I went to each log files and counted the lines\r\n\r\na) 7518\r\nb) 1692\r\nc) 1678\r\nd) 68134\r\n\r\nNot sure why gostats gives wrong value. Where it went wrong?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2351/comments",
    "author": "rsidhaarth",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-07-09T13:12:55Z",
        "body": "Sounds like a log format issue. Please see your other post #2350. Are you parse only one of those logs, e.g., 1692 and see if you get the same number of lines? Otherwise, feel free to attach that log here and I can take a look. \r\n\r\n"
      },
      {
        "user": "rsidhaarth",
        "created_at": "2022-07-09T13:42:30Z",
        "body": "You did not understand the issue, maybe I did not explain it well.\r\n\r\nI just ran this\r\n\r\nwc -l squid.log\r\n\r\n12760 squid.log\r\n\r\nAnd then I made goaccess to parse only that log, every thing is configured in .conf file\r\n\r\nSo I ran goaccess and immediately I see only those lines 12760, but after few seconds, it started increasing to large quantity.\r\n\r\nBecause, the log file is being synced from remote host to this server via lsyncd. So goaccess is reading again differently.\r\n\r\n\r\n\r\n\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2022-07-09T13:49:54Z",
        "body": "It sounds like it's overwriting the file each time you synced the log. You need a way to forward your logs to central log server as opposed to copying it over and over again. or you could try mounting it via sshfs and have goaccess read those logs from the mount."
      },
      {
        "user": "allinurl",
        "created_at": "2022-07-13T15:18:20Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 2348,
    "title": "How can I pass custom nginx log format to GoAccess",
    "created_at": "2022-07-06T06:57:06Z",
    "closed_at": "2022-07-13T15:18:42Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2348",
    "body": "My nginx custom log format is\r\n\r\n    log_format plain_trace '$remote_addr - $remote_user [$time_local] \"$request\" $status '\r\n                 '$body_bytes_sent \"$http_referer\" \"$http_user_agent\" '\r\n                 '\"$http_x_forwarded_for\" $int_request_id $msec $request_time '\r\n                 '$upstream_connect_time $upstream_header_time $upstream_response_time';\r\n\r\nexample:\r\n10.81.142.115 - - [30/Jun/2022:05:30:08 +0300] \"GET /api/modules/data-hash HTTP/1.1\" 200 10 \"-\" \"-\" \"10.81.142.115\" 2e4895b6f9a462e35d60e8126a84fb1b 1656556208.724 0.000 0.000 0.000 0.000\r\n\r\nPlease help me whith:\r\ntime-format\r\ndate-format\r\nlog_format",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2348/comments",
    "author": "vidanil89",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-07-06T22:51:54Z",
        "body": "This should work:\r\n\r\n    goaccess access.log --log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %^ %^ %^ %^ %^ %^ %T' --date-format=%d/%b/%Y --time-format=%T -o report.html --real-time-html\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2022-07-13T15:18:42Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 2326,
    "title": "Please help with my Apache Log format (including request times)",
    "created_at": "2022-05-23T08:48:26Z",
    "closed_at": "2022-05-25T00:22:14Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2326",
    "body": "Hello,\r\n\r\nMy Apache LogFormat was the following:\r\n\r\n    LogFormat \"%{X-Forwarded-For}i %l %u %t \\\"%r\\\"  %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" varnish\r\n    LogFormat \"%{X-Forwarded-For}i %h %l %u %t \\\"%r\\\"  %s %b \\\"%{Referer}i\\\" \\\"%{User-agent}i\\\"\" combined-forwarded\r\n    CustomLog /var/log/httpd/access.log varnish\r\n    ErrorLog /var/log/httpd/error.log \r\n\r\nWith this, I am able to generate report with goaccess without problems, but I am not fetching the response times so the report is being generated without the AVG. TS / CUM. T.S / MAX. T.S that i need.\r\n\r\nI have tried adding the '%D' param in the LogFormat like this:\r\n\r\n    LogFormat \"%{X-Forwarded-For}i %l %u %t %D \\\"%r\\\"  %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" varnish\r\n    LogFormat \"%{X-Forwarded-For}i %h %l %u %t %D \\\"%r\\\"  %s %b \\\"%{Referer}i\\\" \\\"%{User-agent}i\\\"\" combined-forwarded\r\n    CustomLog /var/log/httpd/access.log varnish\r\n    ErrorLog /var/log/httpd/error.log \r\n\r\nIn the /var/log/httpd/access.log I can see this info is now being received, for example:\r\n\r\n10.10.49.139 - - [23/May/2022:10:15:17 +0200] **18598** \"GET /xxxxx/animations.min.css HTTP/1.1\"  200 18468 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:100.0) Gecko/20100101 Firefox/100.0\"\r\n10.10.49.139 - - [23/May/2022:10:15:17 +0200] **22010** \"GET /xxxxx/appart-custom.js HTTP/1.1\"  200 432 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:100.0) Gecko/20100101 Firefox/100.0\"\r\n10.10.49.139 - - [23/May/2022:10:15:17 +0200] **13073** \"GET /xxxxxdist/scripts/main.js HTTP/1.1\"  200 55574 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:100.0) Gecko/20100101 Firefox/100.0\"\r\n\r\nI am not able to generate a valid Goaccess report that includes the (AVG. TS / CUM. T.S / MAX. T.S) - i understand now this values is being fetched with the '%D'.\r\n\r\nPlease anybody can help me with the log-format parsing for my case? It will be high appreciated.\r\n\r\nThanks in advance for help.\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2326/comments",
    "author": "amilhub",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-05-23T18:24:59Z",
        "body": "Please try the following, it should do the job:\r\n\r\n    goaccess access.log --log-format='%h %^[%d:%t %^] %D \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T\r\n"
      },
      {
        "user": "amilhub",
        "created_at": "2022-05-24T06:44:26Z",
        "body": "Hello,\r\n\r\n==24275== Token '' doesn't match specifier '%s'\r\n==24275== Errores de Formato - Verifique su formato de log/fecha/hora\r\n\r\nWith your log-format suggestion gives me this error (about %s status code), is not being parsed correctly (format errors on log/date/time).\r\n\r\nThank you very much again.\r\n\r\nEDIT: The issue was a \"blank\" space on log file, so with the suggested '--log-format' params it seems working like a charm :)"
      },
      {
        "user": "allinurl",
        "created_at": "2022-05-25T00:22:14Z",
        "body": "Glad to hear it worked. Closing this. Feel free to reopen it if needed."
      },
      {
        "user": "a-v-ebrahimi",
        "created_at": "2022-07-31T07:57:45Z",
        "body": "Great it worked, thanks"
      }
    ]
  },
  {
    "number": 2291,
    "title": "[Question] Why does there need to be separate databases for --date-spec?",
    "created_at": "2022-03-10T23:30:29Z",
    "closed_at": "2022-03-31T18:16:14Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2291",
    "body": "I assumed that I could use the same database when accessing --date-spec=hr when I already created a database with --date-spec=date. I assumed that all the data for --date-spec=hr would be there in the database from --date-spec=date. However, when I try that it does not work and only shows the results from --date-spec=date instead of hourly. I am using output of json.\r\n\r\nIt does work if I create 2 separate databases.\r\n\r\nIs this by design?\r\nI have another feature request for --date-spec=min. I am also curious about that.\r\nI need to generate a report for all three (date, hr, min) and I am trying to find the most efficient way possible.\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2291/comments",
    "author": "ggedde",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-03-11T01:04:29Z",
        "body": "Good question. When using `--date-spec=<hr|min>`, that data is parsed and stored into the db as specified by that option. In your case, you probably want to create three reports, however, it depends exactly on what you are looking for. If you are mostly interested on the visitors panel metrics, then you could generate it using `--date-spec=min` and then you can post-process the JSON file and strip the date as needed.\r\n\r\nI'm working on #117 as we speak, I'm thinking this would give you more flexibility as you will be able to filter by date ranges and correlate all that data. \r\n"
      },
      {
        "user": "ggedde",
        "created_at": "2022-03-11T02:39:02Z",
        "body": "Thanks @allinurl, creating three different reports and databases is not that big of an issue. So I'll probably keep moving forward with that.\n\nAs far as doing the post process I don't think that'll work for my reports. I am only focused on the unique visitors. If hour 1 has four unique visitors and hour 2 has 3 unique visitors, there's no real way to know for sure how many unique visitors there were for hours 1 and 2 as it could be anything between 4 and 7. This is also the same issue between hours and days and that's why I can't just process off of the hours report to get the days numbers. Let me know if that makes sense or if there is something that I am missing.\n\nThanks"
      },
      {
        "user": "allinurl",
        "created_at": "2022-03-15T00:15:25Z",
        "body": "Makes sense. You will need to have goaccess process the log at the granular level. "
      }
    ]
  },
  {
    "number": 2280,
    "title": "Log format for Lancache log",
    "created_at": "2022-02-21T16:02:43Z",
    "closed_at": "2022-03-21T11:20:07Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2280",
    "body": "Hey, i am trying to figure out the log format for lancache (basically a nginx caching dns server)\r\n\r\nHere are some examples from the access log file:\r\n`[wsus] 192.168.178.111 / - - - [26/Sep/2021:22:24:12 +0200] \"GET /d/msdownload/update/software/defu/2021/09/am_engine_6e3f9e436b6a01de0f94768c358118017fae86a9.exe HTTP/1.1\" 206 1048576 \"-\" \"Microsoft-Delivery-Optimization/10.0\" \"MISS\" \"au.download.windowsupdate.com\" \"bytes=4194304-5242879\"`\r\n\r\n`[steam] 192.168.178.111 / - - - [26/Sep/2021:22:26:44 +0200] \"GET /ipv6check HTTP/1.1\" 502 182 \"-\" \"Valve/Steam HTTP Client 1.0\" \"MISS\" \"ipv6check-http.steamcontent.com\" \"-\"`\r\n\r\n`[steam] 192.168.178.111 / - - - [26/Sep/2021:22:26:48 +0200] \"GET /appinfo/480/sha/394df648147c92962d8339895e7dbe1cf11ea30f.txt.gz HTTP/1.1\" 200 1256 \"-\" \"Valve/Steam HTTP Client 1.0\" \"MISS\" \"clientconfig.akamai.steamstatic.com\" \"-\"`\r\n\r\n`[steam] 192.168.178.111 / - - - [26/Sep/2021:22:26:48 +0200] \"GET /appinfo/570/sha/a5088931c6d3a9e06144fc463dbad334c5667b1f.txt.gz HTTP/1.1\" 200 50478 \"-\" \"Valve/Steam HTTP Client 1.0\" \"MISS\" \"clientconfig.akamai.steamstatic.com\" \"-\"`\r\n\r\n`[steam] 192.168.178.111 / - - - [26/Sep/2021:22:26:48 +0200] \"GET /appinfo/92/sha/05b3b2b559e000b02e3f0ce6fc6eb444c5ce2d4f.txt.gz HTTP/1.1\" 200 747 \"-\" \"Valve/Steam HTTP Client 1.0\" \"MISS\" \"clientconfig.akamai.steamstatic.com\" \"-\"`\r\n\r\n`[epicgames] 192.168.178.95 / - - - [15/Feb/2022:19:27:13 +0100] \"GET /Builds/Org/o-uvtztrtfjdn3xgrwyhbuwwb5z42mbv/63ed46b9c4964f83baa782aac4d77f7b/default/ChunksV3/28/972745AE7012E686_581531284821C9D0CA61F6B9691BBBE9.chunk HTTP/1.1\" 200 994634 \"-\" \"EpicGamesLauncher/13.1.5-18673502+++Portal+Release-Live Windows/10.0.22000.1.768.64bit\" \"HIT\" \"fastly-download.epicgames.com\" \"-\"`",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2280/comments",
    "author": "Joly0",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-02-22T23:55:40Z",
        "body": "Please try this, it should work:\r\n\r\n    goaccess access.log --log-format='%^ %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" \"%C\" %^' --date-format=%d/%b/%Y --time-format=%T"
      }
    ]
  },
  {
    "number": 2275,
    "title": "Hundreds of Invalid Requests",
    "created_at": "2022-02-12T03:23:49Z",
    "closed_at": "2022-02-12T05:33:17Z",
    "labels": [
      "question",
      "log/date/time format",
      "JSON"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2275",
    "body": "Unsure as to why I'm getting so many failed requests over this data. I only want the request_url, timestamp, http_host, and remote_address.  The dashboard and console show hundreds of invalid requests\r\n\r\n**This is my config file details**\r\n```\r\ntime-format %T\r\ndate-format %d/%b/%Y\r\nlog-format %^,%^,%^,\"request_url:\"\"%U\",\"timestamp:\"\"%d:%T\",%^,\"http_host:\",\"%q\", \"remote_address\"\"%h\",\"http_referer:\"\r\n```\r\n\r\n**Slimmed-down example**\r\n\r\n```\r\n{\"remote_address\":\"55.555.55.555\",\r\n\"http_accept_language\":\"\",\r\n\"http_version\":\"HTTP/1.1\",\r\n\"request_url\":\"/example/example/\",\r\n\"request_type\":\"GET\",\r\n\"upstream_country_code\":\"US\",\r\n\"request_time\":\"0.001\",\r\n\"scheme\":\"https\",\r\n\"http_referer\":\"\",\r\n\"http_user_agent\":\"Mozilla/5.0\",\r\n\"http_host\":\"example.com\",\r\n\"sent_cache_control\":\"max-age=300, must-revalidate\",\r\n\"status\":\"200\",\r\n\"content_type\":\"text/html; charset=UTF-8\",\r\n\"timestamp\":\"10/Feb/2022:15:17:11 +0000\",\r\n\"timestamp_iso8601\":\"2022-02-10T15:17:11+00:00\",\r\n\"http_x_forwarded_for\":\"\"}\r\n```\r\n\r\nThe script I'm running inside of Ubuntu 20.04 LTS\r\n\r\n`zcat 1_*.gz | /home/ubuntu/goaccess/./goaccess -p goaccess_nginx_log.conf -access.log`\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2275/comments",
    "author": "f00d4tehg0dz",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-02-12T16:40:20Z",
        "body": "goaccess supports JSON formats, so you should be able to use this:\r\n\r\n    goaccess access.log --log-format='{\"remote_address\":\"%h\",\"http_version\":\"%H\",\"request_url\":\"%U\",\"request_type\":\"%m\",\"request_time\":\"%T\",\"http_referer\":\"%R\",\"http_user_agent\":\"%u\",\"http_host\":\"%v\",\"status\":\"%s\",\"content_type\":\"%M\",\"timestamp\":\"%d:%t %^\"}' --date-format=%d/%b/%Y --time-format=%T"
      }
    ]
  },
  {
    "number": 2267,
    "title": "Token for '%b' specifier is NULL",
    "created_at": "2022-01-22T06:55:06Z",
    "closed_at": "2022-01-23T02:21:06Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2267",
    "body": "Example log entries:\r\n`192.168.112.89 - - [22/Jan/2022:00:00:01 +0800] \"GET /app/bed/message/unread?admId=18413&X-ARR-CACHE-HIT=0&X-ARR-LOG-ID=ed1bf584-5da6-4010-9435-7ce111a75131&SERVER-STATUS=200 HTTP/1.1\" 200 192`\r\n\r\nGoaccess version:\r\n`GoAccess - version 1.5.4 - Jan 20 2022 11:47:38` \r\n\r\nSo I start goaccess via:\r\n`LANG='zh_CN.UTF-8' LC_TIME='en_US.UTF-8' goaccess goaccess.log -a -o report.html --log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"\" \"%u\"'  --date-format=%d/%b/%Y --time-format=%H:%M:%S`\r\n\r\nAnd i get a fails msg  about  `Token for '%b' specifier is NULL`.\r\n\r\nIf i chang `%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"\" \"%u\"` to `%h %^[%d:%t %^] \"%r\" %s \"%R\" \"%u\"\" \"%u\"` it's work wall.\r\n\r\nSo it's a bug for this version ?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2267/comments",
    "author": "snowlyg",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2022-01-22T15:16:08Z",
        "body": "Please try using:\r\n\r\n    goaccess --log-format=COMMON access.log\r\n"
      },
      {
        "user": "snowlyg",
        "created_at": "2022-01-23T02:21:03Z",
        "body": "> Please try using:\r\n> \r\n> ```\r\n> goaccess --log-format=COMMON access.log\r\n> ```\r\n\r\nThanks, It's working."
      }
    ]
  },
  {
    "number": 2259,
    "title": "What is this log format?",
    "created_at": "2022-01-07T14:25:40Z",
    "closed_at": "2022-01-07T19:06:54Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2259",
    "body": "I think it's Common Log Format with Virtual Host, but the prefix is throwing me off. Log is rendered like so:\r\n\r\n```log\r\nDec 16 00:00:00 prod.site.com auth-apache-access: 99.99.99.999 9999 - [16/Dec/2021:00:00:00 +0000] \"POST /api/user/ HTTP/1.1\" 200 471 \"-\" \"Python-urllib/3.7\"\r\n```\r\n\r\nHow do I take this into account for the custom format?\r\n\r\nThanks for your time.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2259/comments",
    "author": "rdhar-test",
    "comments": [
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2022-01-07T17:36:23Z",
        "body": "Hi @rdhar-tc \r\n\r\nIt is seems more NCSA Combined with Virtual Host (VCOMBINED).\r\nMaybe you can try this, at `goaccess.conf`:\r\n\r\n`time-format %H:%M:%S`\r\n`date-format %d/%b/%Y`\r\n`log-format %^ %^ %^ %v %^ %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"`\r\n\r\nor `--time-format=\"...\"` `--date-format=\"...\"`  `--log-format=\"...\"`, at command-line.\r\n"
      },
      {
        "user": "rdhar-test",
        "created_at": "2022-01-07T19:06:54Z",
        "body": "Thank you, @0bi-w6n-K3nobi, I really appreciate your response. That works a treat!\r\n\r\nAs an added (low-fi) workaround, I also had success with `cut -c17- access.log` to trim the fixed length prefix before piping the output as `--log-format=VCOMMON`.\r\n\r\nThanks once again for your time."
      }
    ]
  },
  {
    "number": 2249,
    "title": "hello",
    "created_at": "2021-12-15T09:37:24Z",
    "closed_at": "2021-12-20T04:29:37Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2249",
    "body": "hello ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2249/comments",
    "author": "zhouzhenhua",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-12-21T02:46:06Z",
        "body": "Feel free to reopen it if needed and please post a few lines from your access.log. Thanks"
      }
    ]
  },
  {
    "number": 2216,
    "title": "`--html-prefs='{\"theme\":\"dark gray\"}'` does not work, maybe?",
    "created_at": "2021-10-24T11:42:46Z",
    "closed_at": "2021-10-25T10:16:58Z",
    "labels": [
      "question",
      "html report"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2216",
    "body": "Hello everyone,\r\n\r\nwe’re having problems with starting `goaccess` with the `dark gray` theme applied by default …\r\n\r\n`goaccess /var/log/nginx/access.log -o /var/www/monitoring/index.html --log-format=COMBINED --real-time-html --html-prefs='{\"theme\":\"dark gray\"}' --ssl-cert=/etc/letsencrypt/live/<domain>/fullchain.pem --ssl-key=/etc/letsencrypt/live/<domain>/privkey.pem --daemon`\r\n\r\nWe tried `--html-prefs='{\"theme\":\"dark gray\"}'`, `--html-prefs='{\"theme\":\"dark-gray\"}'`, `--html-prefs='{\"theme\":\"dark_gray\"}'`, `--html-prefs='{\"theme\":\"darkgray\"}'`, and `--html-prefs='{\"theme\":\"darkGray\"}'` without sucess.\r\n\r\nAny advice, please?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2216/comments",
    "author": "fooness",
    "comments": [
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2021-10-24T23:23:17Z",
        "body": "Hi @fooness \r\n\r\nThe correct form is `{\"theme\":\"dark_gray\"}`.\r\nHowever, the browser can cache your last choice at any report or real-time report that you already seen.\r\nSo, do you need clean cache or create a new profile [at browser] to be sure that your selection was obeyed.\r\n\r\nI hope that could help you.\r\n"
      },
      {
        "user": "fooness",
        "created_at": "2021-10-25T10:16:55Z",
        "body": "Thank you!"
      }
    ]
  },
  {
    "number": 2201,
    "title": "Ask for help for parsing Weblogic log ",
    "created_at": "2021-10-04T02:55:57Z",
    "closed_at": "2022-06-16T22:11:13Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2201",
    "body": "Hi, i want to try to use GoAccess to parse Weblogic log with the following format:\r\n\r\n2021-09-30\t11:07:21\tGET\t/foo/bar/test.jsp\t200\txx.xx.xx.xx\t-\t-\r\n2021-09-30\t11:07:22\tGET\t/foo/bar/\t200\txx.xx.xx.xx\t\"yy.yy.yy.yy\"\t\"Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko\"\r\n\r\nIt is tab separated, xx.xx.xx.xx is the proxy ip and \"yy.yy.yy.yy\" is the client ip. \r\nFor \"VISITOR HOSTNAMES AND IPS\", if \"yy.yy.yy.yy\" is -, use xx.xx.xx.xx, if \"yy.yy.yy.yy\" has value, use yy.yy.yy.yy.\r\n\r\nWhen I try to use:\r\ngoaccess test.log* --log-format='%d\\t%t\\t%m\\t%U\\t%s\\t%h\\t~h{\"\\t}\\t\"%u\"' --date-format='%Y-%m-%d' --time-format='%H:%M:%S'\r\n\r\nIt will return error:\r\n\r\nParsed 1 linesproducing the following errors:\r\nToken already set for '%h' specifier.\r\nFormat Errors - Verify your log/date/time format\r\n\r\nWould you please help? Thank you.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2201/comments",
    "author": "Fatsi321",
    "comments": [
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2021-10-05T10:29:26Z",
        "body": "Hi @Fatsi321\r\n\r\nFirst , I have two questions:\r\n* Maybe the first line have quotation marks in the last fields? i.e `... xx.xx.xx.xx` **`\"-\"` `\"-\"`**\r\n   A pattern is needed on all lines/requests.\r\n* Is there really `TABS` between the fields? Wouldn't it be simple `SPACE`? "
      },
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2021-10-05T11:31:49Z",
        "body": "Hi @allinurl\r\n\r\nI'm having a little trouble doing this parse...\r\nI am not able to adjust the `~h` field correctly and so it is swallowing the others as `%u`.\r\n\r\nYeah! I'm using last version _1.5.2_.\r\n"
      },
      {
        "user": "Fatsi321",
        "created_at": "2021-10-06T01:31:23Z",
        "body": "> Hi @Fatsi321\r\n> \r\n> First , I have two questions:\r\n> \r\n> * Maybe the first line have quotation marks in the last fields? i.e `... xx.xx.xx.xx` **`\"-\"` `\"-\"`**\r\n>   A pattern is needed on all lines/requests.\r\n> * Is there really `TABS` between the fields? Wouldn't it be simple `SPACE`?\r\n\r\nThanks for replying.\r\nI tried to manual edit the log with \"\" in the last fields, but seems not working.\r\nYes they the tabs, I double checked in Notepad++ too.\r\nThank you."
      },
      {
        "user": "geof77",
        "created_at": "2021-12-09T07:46:21Z",
        "body": "I think using %h and ~h in the same filter is not supported. I would replace %h with %^ (ignore field)."
      },
      {
        "user": "allinurl",
        "created_at": "2021-12-10T01:30:55Z",
        "body": "Sorry for the late reply. Can you please attach a file with actual access log lines (a few lines is fine)? It's hard to determine the spacing without an actual file to work with. Thanks"
      },
      {
        "user": "allinurl",
        "created_at": "2022-06-16T22:11:13Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 2186,
    "title": "[Help] Need real-time-html report",
    "created_at": "2021-09-20T07:14:29Z",
    "closed_at": "2021-09-22T03:54:44Z",
    "labels": [
      "question",
      "websocket-server"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2186",
    "body": "Recently started using goaccess for our apache base website. We are able to get console running and even was able to generate static HTML page. But again whenever I try to generate report in HTML either static or relatime it shows Websocket interface. Wereas would like to automate a process to generate real-time-html report which runs in background as a daemon or system service. Please can you guide. If this is answered already then please excuse me and share the link for me to refer.   ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2186/comments",
    "author": "JoelDivekar",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-09-21T00:05:07Z",
        "body": "I'm not sure I follow, but if you are interested in running goaccess in the background, you could run it as:\r\n\r\n    goaccess access.log --log-format=COMBINED --daemonize\r\n\r\nOr you could do it through systemd, e.g., #1898 \r\n\r\nLet me know if that helps."
      },
      {
        "user": "JoelDivekar",
        "created_at": "2021-09-22T03:54:43Z",
        "body": "Yes, I did that exactly and it is working fine. But I may have to set it up as a service which will auto start with system reboot. Thanks a lot @allinurl"
      },
      {
        "user": "allinurl",
        "created_at": "2021-09-22T13:19:50Z",
        "body": "Glad to hear you got it to work :)\r\n\r\nFeel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 2184,
    "title": "Issue with custom date/time/log format for custom logs (syslog date/time)",
    "created_at": "2021-09-15T11:01:39Z",
    "closed_at": "2021-09-15T12:17:15Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2184",
    "body": "Hi!\r\n\r\nI do have a custom log file with the following:\r\n`1.23.81.34 - - [Wed, 15 Sep 2021 09:59:09 GMT] \"GET /some/url/home.html HTTP/1.1\" 200 70749 \"-\" \"Amazon CloudFront\"`\r\n\r\nHaving difficulties to set appropriate parameters in date/time/log format.\r\nChanged combined  date format to following:\r\n\r\n`%a, %d %b %Y`\r\n\r\nBut still unable to parse.\r\nAny hints on this one? ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2184/comments",
    "author": "mgrapiniak",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-09-20T23:33:35Z",
        "body": "This should work:\r\n\r\n    goaccess access.log --log-format='%h %^[%d %t %^] \"%r\" %s %b \"%R\" \"%u\"' --date-format='%a, %d %b %Y' --time-format=%T"
      }
    ]
  },
  {
    "number": 2167,
    "title": "Error Config file: No config file used",
    "created_at": "2021-08-19T08:08:12Z",
    "closed_at": "2021-08-25T07:37:34Z",
    "labels": [
      "question",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2167",
    "body": "I'm unable to set my config file for GoAccess permanently.\r\n\r\nIf I run `goaccess access.log -c` and chose the first option everything goes smoothly and I can access the log. If I want to create a real-time webpage, I got the error on the title.\r\n\r\nMy GoAccess conf file is in _/etc/goaccess/goaccess.conf_ and my log is in _/var/log/apache2/access.log_\r\n\r\nHo can I create the dynamic page in my public HTML folder _/var/www/html/report.html_ ?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2167/comments",
    "author": "NicoCaldo",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-08-24T01:45:59Z",
        "body": "Please try setting your config file under `~/.goaccessrc` and setting your options in there (no equal sign within the config file).\r\n\r\nThen you should be able to run it as:\r\n\r\n    # goaccess /var/log/apache2/access.log -o /var/www/html/report.html\r\n\r\nor \r\n\r\n    # goaccess /var/log/apache2/access.log -p ~/.goaccessrc -o /var/www/html/report.html"
      },
      {
        "user": "NicoCaldo",
        "created_at": "2021-08-25T07:37:34Z",
        "body": "It seems that this command worked\r\n\r\n```\r\n# goaccess /var/log/apache2/access.log -p /etc/goaccess/goaccess.conf -o /var/www/html/report.html --real-time-html\r\n```\r\n"
      }
    ]
  },
  {
    "number": 2155,
    "title": "Having a hard time with persistent storage",
    "created_at": "2021-07-28T23:00:59Z",
    "closed_at": "2021-07-29T00:54:34Z",
    "labels": [
      "question",
      "on-disk"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2155",
    "body": "Hey,\r\nI'm running into some issues with persistent storage and live monitoring.\r\nI want to constantly transfer data from my log file to the persistent storage location but also keep already saved logs.\r\nBut somehow every time I launch goaccess with\r\n`--real-time-html --persist --restore`\r\nit doesn't constantly save to my storage location.\r\nIt isn't quite clear to me whether it saves periodically or not at all.\r\nI couldn't really find anything regarding this in the doc.\r\nI'm honestly really confused rn.\r\nI managed to load all of my old log files using `zcat /var/log/apache2/access.log.*.gz | goaccess -a\r\n`\r\nand then `goaccess --persist`\r\nIf you could help me out by telling me wether it will save to my data location would be great.\r\nAlso does running it daemonized have an impact on it?\r\nEdit: config file is setup correctly with a persistent storage location.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2155/comments",
    "author": "Lennart01",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-07-28T23:10:41Z",
        "body": "I'd run it once as:\r\n\r\n    # zcat access.log.*.gz | goaccess access.log.1 - -o report.html --log-format=COMBINED --persist\r\n\r\nand then just keep adding data to the db as:\r\n\r\n    # goaccess access.log -o report.html --log-format=COMBINED --persist --restore\r\n\r\nEvery time the log rotates, access.log would be the newest and you would just keep adding the new data on top it. \r\n\r\nAlso, before you try that, I'd make sure to the delete current runs that you may have persisted before, e.g.,\r\n\r\n    # rm -rf /tmp/*.db\r\n\r\nGive it a shot and let me know how it goes."
      },
      {
        "user": "Lennart01",
        "created_at": "2021-07-28T23:15:05Z",
        "body": "yeah about that.\r\nmy initial question would be whether if I run it with --real-time-html and ---persist will it save only once on execution or also down the line?\r\nand thanks if this doesn't work I will definitely try that."
      },
      {
        "user": "Lennart01",
        "created_at": "2021-07-28T23:26:36Z",
        "body": "If `--real-time-html --persist` doesnt autosave I would just run it once with `--realtime-html` and implement a log rotate hook as described in the guide by Arnaud Rebillout.\r\nI kinda want a live monitoring with live data but also long-term data storage.\r\nIve now managed to get my old logs pulled with the method you described.\r\nIm now running it with `goaccess /var/log/apache2/access.log -o /var/www/html/downloads/report.html --persist --restore --log-format=COMBINED --real-time-html`"
      },
      {
        "user": "allinurl",
        "created_at": "2021-07-28T23:51:47Z",
        "body": "You should be fine, `--real-time-html` doesn't affect anything since a complete parse is done, the only difference is that when using real-time, the response to the browser is much lighter than a full blown report. The data is persisted upon exiting/closing goaccess. e.g., SIGINT - `Ctrl+C`"
      },
      {
        "user": "Lennart01",
        "created_at": "2021-07-28T23:53:42Z",
        "body": "so If I run it with `--real-time-html` from now on it will autosave on termination.\r\nThank you very much that saved me a lot of hastle."
      },
      {
        "user": "allinurl",
        "created_at": "2021-07-29T00:54:34Z",
        "body": "Happy to help :)\r\n\r\nClosing this, feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 2149,
    "title": "Issue with %h specifier with custom log",
    "created_at": "2021-07-16T13:38:27Z",
    "closed_at": "2022-06-16T22:14:18Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2149",
    "body": "I have the following log\r\n`[16/Jul/2021:06:58:18 +0000] - 200 200 - GET https api.jirubizu.cc \"/docs\" [Client 141.101.99.151] [Length 504] [Gzip 1.98] [Sent-to 192.168.1.153] \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:90.0) Gecko/20100101 Firefox/90.0\" \"-\"\r\n`\r\nAnd this is my log format\r\n`log_format [%d:%t %^] - %s %^ - %m  %v \"%U\" [Client %h] [Length %b] [Gzip %^] \"%u\" \"%R\"\r\ntime-format %T\r\ndate-format %d/%b/%Y\r\n`\r\n\r\nHowever I keep getting this error\r\n`Token 'lient 141.101.99.151' doesn't match specifier '%h'`",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2149/comments",
    "author": "Jirubizu",
    "comments": [
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2021-07-21T14:12:32Z",
        "body": "Hi @Jirubizu \r\n\r\nAlmost is OK here! But you did forgot to ignore `https` word.\r\nTry this:\r\n`log_format [%d:%t %^] - %s %^ - %m`**`^%`**`%v \"%U\" [Client %h] [Length %b] [Gzip %^] \"%u\" \"%R\"`\r\n\r\nNotes:\r\nAre you sure it will always be this \"minus\" character? At the excerpt above: `... +0000] - 200 200 - ...`\r\nIf `NOT` then change `log_format` to `... %^] %^ %s %^ %^ %m ...`"
      },
      {
        "user": "allinurl",
        "created_at": "2021-07-28T01:09:51Z",
        "body": "This should do it:\r\n\r\n    goaccess log --log-format='[%d:%t %^] - %s %^ - %m %^ %v \"%U\" [Client %h] [Length %b] %^\"%u\" \"%R\"' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "allinurl",
        "created_at": "2022-06-16T22:14:18Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 2148,
    "title": "X-Forwarded-For field not parsing",
    "created_at": "2021-07-15T13:48:45Z",
    "closed_at": "2021-07-19T22:02:48Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2148",
    "body": "goaccess 1.5.1 macos 11.4\r\n\r\nI am not able to convince goaccess about the X-Forwarded-For field in my logs.  There is nothing special about it:\r\n\r\n```\r\ntest.log:\r\nx.x.x.x - - [15/Jul/2021:14:18:11 +0200] \"GET / HTTP/1.1\" 200 33900 \"-\" \"-\" \"y.y.y.y.y\" 0.137 TLSv1.2\r\n```\r\n\r\n```\r\ngoaccess --log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" ~h{,\" } %T %^' test.log\r\n```\r\n\r\nThis always shows `x.x.x.x` in the \"Visitor Hostnames and IPs\" (not `y.y.y.y`)",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2148/comments",
    "author": "minusf",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-07-15T21:42:17Z",
        "body": "For the given log, e.g.,\r\n\r\n```\r\n192.168.0.1 - - [15/Jul/2021:14:18:11 +0200] \"GET / HTTP/1.1\" 200 33900 \"-\" \"-\" \"190.12.12.12\" 0.137 TLSv1.2\r\n192.168.0.1 - - [15/Jul/2021:14:18:11 +0200] \"GET / HTTP/1.1\" 200 33900 \"-\" \"-\" \"10.12.12.12, 21.2.212.2\" 0.137 TLSv1.2\r\n```\r\n\r\nThis should work:\r\n\r\n    goaccess access.log --log-format='%^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" ~h{,\" } %T %K' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "minusf",
        "created_at": "2021-07-15T22:44:23Z",
        "body": "so `%h` and `~h` are exclusive?  is this mentioned somewhere in the man page? "
      },
      {
        "user": "allinurl",
        "created_at": "2021-07-17T18:41:51Z",
        "body": "Part of it was in the man page, under the specifiers section. I expanded this to hosts as well.\r\n\r\n> Important\r\n> If multiple time served specifiers or hosts are used at the same time, the first option specified in the format string will take priority over the other specifiers."
      },
      {
        "user": "minusf",
        "created_at": "2021-07-17T19:20:42Z",
        "body": "ok, that helps.  but i am still confused becasue `%h != ~h`, one is `host`, the other is `x-forwarded-for`, they might be both just ip numbers but they are specifying 2 entirely different things..  i see that `%x` is already taken but maybe `~X` would be a less confusing specifier for it?"
      },
      {
        "user": "allinurl",
        "created_at": "2021-07-19T21:19:44Z",
        "body": "Good point, the reason it uses `~h` is that whatever is extracted either through `~h` or `%h`, that's what it's going to be put in the hosts panel. "
      },
      {
        "user": "minusf",
        "created_at": "2021-07-19T22:02:48Z",
        "body": "ok, that also kind of makes sense :}  if some of this could be captured in the man page, i think that would be great! i'll close this now if it's fine with you. thank you for the help."
      }
    ]
  },
  {
    "number": 2130,
    "title": "--ignore-referer is now --ignore-referrer ???",
    "created_at": "2021-06-03T16:37:42Z",
    "closed_at": "2021-06-05T16:49:28Z",
    "labels": [
      "question",
      "change",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2130",
    "body": "Please tell me this was an unfortunate case of an editor/IDE auto-correcting a string, and not someone thinking it's OK to just change the name of an option like that???\r\n\r\n```\r\ngoaccess[22164]: /usr/bin/goaccess: unrecognized option '--ignore-referer=example.com'\r\n```\r\n\r\nFrom man:\r\n\r\n```\r\n       --ignore-referrer=<referrer>\r\n              Ignore referers from being counted. Wildcards allowed. e.g., *.domain.com ww?.domain.*\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2130/comments",
    "author": "stephenreay",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-06-03T16:48:44Z",
        "body": "Sorry about this. Unfortunately the option was deprecated under #2102. I should have kept the previous option for backwards compatibility. I'll be more cautious next time ;)"
      }
    ]
  },
  {
    "number": 2128,
    "title": "log format (error 1998)",
    "created_at": "2021-06-01T08:56:57Z",
    "closed_at": "2021-06-01T09:57:35Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2128",
    "body": "",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2128/comments",
    "author": "cvetazh",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-06-01T13:07:24Z",
        "body": "FWIW, this should work:\r\n\r\n    goaccess access.log --log-format=COMBINED"
      }
    ]
  },
  {
    "number": 2117,
    "title": "OpenLiteSpeed Common log format not being detected",
    "created_at": "2021-05-21T02:56:02Z",
    "closed_at": "2021-06-12T06:28:42Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2117",
    "body": "Hello and thanks for reading my issue :D \r\n\r\nI've been experiencing some trouble reading my virtual host access log for anylisis and I've scrapped the whole web in search of answers but I could not find a forum for this tool.\r\n\r\nI changed my virtual host log format from `NCSA extended/combined log format` to `Common Log Format (CLF)` since my results didn't show any unique visitors, 404's, time distributions or even http status codes.  I was using this command: `sudo goaccess vhost.access_log --log-format='\"%h %l %u [%d:%T] \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" \"%{Host}i\"\"' --date-format=%d/%b/%Y --time-format=%T` When i used NCSA ext/com.\r\n\r\nNow, when trying to parse Common Log Format things get weird, the OpenLiteSpeed documentation shows the exact same expression as the apache documentation which is this one: `\"%h %l %u %t \\\"%r\\\" %>s %b\"` (Note the `\\` used to escape quotations).\r\n\r\nBut when trying to load the new common log format file I get this error:\r\n\r\n```\r\nParsed 10 lines producing the following errors:\r\n\r\nToken 'example.com' doesn't match specifier '%h'\r\nToken 'example.com' doesn't match specifier '%h'\r\n```\r\nMy log file looks like this (CLF):\r\n\r\n```\r\n\"example.com 000.000.000.00 - - [21/May/2021:02:36:14 +0000] \"GET / HTTP/2\" 200 10540\"\r\n```\r\n\r\nI'm using this command: `sudo goaccess vhost.access_log --log-format='\"%h %l %u %t \"%r\" %>s %b\"' --date-format=%d/%b/:Y --time-format=%T` which doesn't work.\r\n\r\nWhat am I doing wrong here? I've checked the documentation and tried a few variants in the log format but no success yet :( is there any way to solve the missing results issue? or am I just wrong in the log format?\r\n\r\nThanks in advance for your response :)\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2117/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-05-21T12:47:40Z",
        "body": "Hello,\r\n\r\nAssuming no quotes around each line, then this should work:\r\n\r\n    sudo goaccess vhost.access_log --log-format='%v %h %^[%d:%t %^] \"%r\" %s %b' --date-format=%d/%b/%Y --time-format=%T\r\n\r\nwith quotes:\r\n\r\n    sudo goaccess vhost.access_log --log-format='\"%v %h %^[%d:%t %^] \"%r\" %s %b\"' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "ghost",
        "created_at": "2021-05-21T21:27:03Z",
        "body": "The first command worked like a charm. I'm assuming I missed the `%v` parameter and the `%^` as well. Thanks a lot for helping me solve this issue :) , I think I should have read the documentation again to see those two. "
      },
      {
        "user": "allinurl",
        "created_at": "2021-05-21T21:28:39Z",
        "body": "Glad that solved the issue :)\r\n\r\nFeel free to reopen it if needed."
      },
      {
        "user": "ghost",
        "created_at": "2021-06-12T06:24:39Z",
        "body": "My server logs changed (without prior notice, idk if this came with an OLS update) and now look like this:\r\n\r\n`\"<ip-addr> - - [12/Jun/2021:06:10:42 +0000] \"GET /route/ HTTP/1.1\" 301 0\"`\r\n\r\nI've tried modifying the commands above but I get stuck at parsing the date with this error :(\r\n`Token '-' doesn't match specifier '%h'`\r\n\r\nShould I include the `-` 's in the log format?\r\n"
      },
      {
        "user": "ghost",
        "created_at": "2021-06-12T06:28:42Z",
        "body": "Fixed it. Here is the solution if someone else comes around the same problem:\r\n`--log-format='\"%h - - %^[%d:%t %^] \"%r\" %s %b\"' --date-format=%d/%b/%Y --time-format=%T`"
      }
    ]
  },
  {
    "number": 2114,
    "title": "Custom json log parsing with goaccess",
    "created_at": "2021-05-19T12:37:00Z",
    "closed_at": "2021-05-19T14:46:21Z",
    "labels": [
      "duplicate",
      "question",
      "log/date/time format",
      "JSON"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2114",
    "body": null,
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2114/comments",
    "author": "mathoyus",
    "comments": [
      {
        "user": "mathoyus",
        "created_at": "2021-05-19T12:58:42Z",
        "body": "how can i define this log type"
      },
      {
        "user": "allinurl",
        "created_at": "2021-05-19T14:46:21Z",
        "body": "Closing this as it is a dup. Please don't open multiple issues for the same thing. Thanks"
      },
      {
        "user": "allinurl",
        "created_at": "2021-05-19T14:47:24Z",
        "body": "dup of #2115"
      }
    ]
  },
  {
    "number": 2113,
    "title": "error log ",
    "created_at": "2021-05-19T01:38:27Z",
    "closed_at": "2021-05-21T02:00:19Z",
    "labels": [
      "invalid",
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2113",
    "body": null,
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2113/comments",
    "author": "mathoyus",
    "comments": [
      {
        "user": "mathoyus",
        "created_at": "2021-05-19T09:24:49Z",
        "body": "how do i fix this,"
      },
      {
        "user": "allinurl",
        "created_at": "2021-05-21T02:00:19Z",
        "body": "Looks like an error log. You need consistent fields in that log."
      },
      {
        "user": "63070016",
        "created_at": "2023-11-28T04:07:31Z",
        "body": "how to fix it"
      }
    ]
  },
  {
    "number": 2112,
    "title": "Token '23/Oct/2020' doesn't match specifier '%d'",
    "created_at": "2021-05-17T02:47:36Z",
    "closed_at": "2021-05-17T02:56:22Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2112",
    "body": "Hiya, getting the error \"Token '23/Oct/2020' doesn't match specifier '%d'\" when trying to use goaccess to analyse our httpd apache access logs, our log format and relevant config lines are as below, any idea what's going on here?\r\n```127.0.0.1 - - [23/Oct/2020:13:27:34 +0800] \"GET / HTTP/1.1\" 200 203\r\n127.0.0.1 - - [23/Oct/2020:13:27:34 +0800] \"GET /favicon.ico HTTP/1.1\" 404 196\r\n127.0.0.1 - - [23/Oct/2020:13:44:14 +0800] \"GET / HTTP/1.1\" 200 203\r\n127.0.0.1 - - [23/Oct/2020:13:44:21 +0800] \"GET / HTTP/1.1\" 200 203\r\n127.0.0.1 - - [23/Oct/2020:13:44:21 +0800] \"GET /favicon.ico HTTP/1.1\" 404 196\r\n127.0.0.1 - - [23/Oct/2020:13:45:38 +0800] \"GET /test.php HTTP/1.1\" 200 103941\r\n\r\ntime-format %H:%M:%S +%z\r\ndate-format %d/%b/%Y\r\nlog-format %h %^[%d:%t %^] \"%r\" %s %b",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2112/comments",
    "author": "powertashton",
    "comments": [
      {
        "user": "powertashton",
        "created_at": "2021-05-17T02:56:22Z",
        "body": "Figured out that it's my locale not being set... think I have it working now"
      },
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2021-05-17T12:07:02Z",
        "body": "Hi @powertashton \r\n\r\nIf you yet have problem, try remove **`+%z`** from time format."
      },
      {
        "user": "allinurl",
        "created_at": "2021-05-17T12:37:40Z",
        "body": "Also, If your access log contains English months such as 12/Jan/2021 but your machine locale is not set to English, then you need to set your LC_TIME.\r\n\r\n    # LC_TIME=\"en_US.UTF-8\" bash -c 'goaccess access.log --log-format=COMBINED'"
      }
    ]
  },
  {
    "number": 2088,
    "title": "Timestamp format issue for a non-access log",
    "created_at": "2021-04-14T11:00:31Z",
    "closed_at": "2021-04-16T01:05:40Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2088",
    "body": "Hello,\r\n\r\nsry for my bad englisch...\r\n\r\ni cant´t parse my RemoteLogs from my Unifi Devices.\r\n> `2021-04-14T12:55:48+02:00 SecurityGateway kernel: [LAN_LOCAL-default-A]IN=eth1 OUT= MAC=ff:ff:ff:ff:ff:ff:XX:XX:XX:7b:8b:91:08:00 SRC=10.X.X.XXX DST=255.255.255.255 LEN=32 TOS=0x00 PREC=0x00 TTL=64 ID=18017 DF PROTO=UDP SPT=54688 DPT=10001 LEN=12`\r\n\r\nhas anyone the correct date/time/log format for this?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2088/comments",
    "author": "ErikSlevin-zz",
    "comments": [
      {
        "user": "Sergerant",
        "created_at": "2021-04-14T11:55:28Z",
        "body": "GoAccess is a web log analyzer. To analyze log files that a web server produces, when someone visits the website. 'RemoteLogs from Unifi Devices' are no web server access log. So GoAccess won't be suitable for your needs, as far as I can tell. "
      },
      {
        "user": "allinurl",
        "created_at": "2021-04-16T01:05:39Z",
        "body": "There is a request to have goaccess parse non-access logs (and/or custom panels), it's still for review though. So far, you can probably parse the log you posted using goaccess but you would end up with no much useful data. Like @Sergerant said, you probably need to use a different tool for now.\r\n\r\nClosing this. Feel free to reopen if needed. "
      }
    ]
  },
  {
    "number": 2060,
    "title": "Hostname doesn't match specifier %h",
    "created_at": "2021-03-22T20:04:53Z",
    "closed_at": "2021-04-02T02:41:28Z",
    "labels": [
      "question",
      "log-processing",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2060",
    "body": "ppp-mia-30.shadow.net - - [01/Jul/1995:00:00:41 -0400] \"GET /images/NASA-logosmall.gif HTTP/1.0\" 200 786\r\n\r\nToken 'ppp-mia-30.shadow.net' doesn't match specifier '%h'\r\n\r\nIs it possible to read the hostname without it being ipv4 or ipv6? ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2060/comments",
    "author": "Alex-C96",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-03-23T13:10:36Z",
        "body": "Please try using `--no-ip-validation`."
      },
      {
        "user": "allinurl",
        "created_at": "2021-04-02T02:41:28Z",
        "body": "Closing this. Feel free to reopen it if needed."
      },
      {
        "user": "Alex-C96",
        "created_at": "2021-04-03T04:31:41Z",
        "body": "Thank you!"
      }
    ]
  },
  {
    "number": 2051,
    "title": "Token '134>Feb  8 11' doesn't match specifier '%d'",
    "created_at": "2021-03-10T15:41:53Z",
    "closed_at": "2021-04-02T02:43:06Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2051",
    "body": "Hello. Please help me parse log.\r\nFormat: \r\n<134>Feb  8 11:44:00 haproxy[888]: 192.168.103.203:37776 [08/Feb/2021:11:44:00.092] in-75-m-local -mobile/app 1/0/0/4/5 200 268 - - ---- 2128/102/41/5/0 0/0 \"GET /service/api/oauth/verify HTTP/1.1\"\r\n\r\nI tried \r\n\r\n goaccess accesslog --log-format='[%d:%t %^] %^=%h %^=\"%r\" %s %^=%b %\r\n^' --date-format='%d/%b/%Y' --time-format=%T\r\nParsed 1 linesproducing the following errors:\r\n\r\nToken '134>Feb  8 11' doesn't match specifier '%d'\r\n\r\n\r\nand many otger queries. But still have errors",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2051/comments",
    "author": "Lsytnyk",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-03-10T15:57:12Z",
        "body": "Hello. Could you please describe all the fields in your log format? e.g., 2128/102/41/5/0, etc"
      },
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2021-03-11T13:14:49Z",
        "body": "Hi @Lsytnyk .\r\n\r\nCan You show `HAProxy` logformat for this?\r\n\r\nthanks."
      },
      {
        "user": "allinurl",
        "created_at": "2021-04-02T02:43:06Z",
        "body": "Closing this. Feel free to share those fields/reopen it if needed."
      }
    ]
  },
  {
    "number": 2048,
    "title": "Look for a Maintainer",
    "created_at": "2021-03-06T01:03:43Z",
    "closed_at": "2021-03-06T02:00:30Z",
    "labels": [
      "question",
      "other"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2048",
    "body": "@allinurl Please look for a maintainer.\r\nThere are **six years** old open issues.\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2048/comments",
    "author": "szepeviktor",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-03-06T02:00:30Z",
        "body": "Viktor, rest assured the project is actively maintained  - nonetheless, I do appreciate your concern about taking care of old issues but as you know, there are priority issues that have and need to be addressed before any other. If there are issues that you would like to help or if you know of someone who would like to speed up some requests, by all means, feel free to submit a PR.\r\n\r\nClosing this as I don't think there is need for a maintainer."
      },
      {
        "user": "szepeviktor",
        "created_at": "2021-03-06T08:53:10Z",
        "body": "Okay."
      }
    ]
  },
  {
    "number": 2043,
    "title": "report not generated",
    "created_at": "2021-02-25T23:03:38Z",
    "closed_at": "2021-03-16T23:48:09Z",
    "labels": [
      "question",
      "html report",
      "websocket-server"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2043",
    "body": "      'lo All,\r\nI've installed GoAccess on my  Debian/Apache2 webserver and am having some trouble getting GoAccess to generate output.\r\n\r\n--TheCommand:\r\ngoaccess /var/log/apache2/other_vhost_access.log -o /f1/websites/80_home/html/goaccess/index.html --log-format=VCOMBINED --real-time-html\r\n--TheOutput:\r\nDaemonized GoAccess: 3438\r\n\r\n\r\n...Yet the file:[/f1/websites/80_home/html/goaccess/index.html]  is never created.\r\nThere is no error text.\r\nthere is no existing ~index.html file\r\n\r\nand ps aux | 3438 yields no output either.\r\n\r\n--TheRequest:\r\nCan any of you lend some insight on how to troubleshoot/resolve this?\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2043/comments",
    "author": "GrepZen",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-02-26T00:24:37Z",
        "body": "Please don't daemonize the process and check for any errors you may be getting. Also make sure you can write to that path."
      },
      {
        "user": "allinurl",
        "created_at": "2021-03-16T02:55:56Z",
        "body": "Any updates on this?"
      },
      {
        "user": "GrepZen",
        "created_at": "2021-03-16T23:48:09Z",
        "body": "Allinurl  .. two things\r\n1st ... Thank you so much for the follow up on this.  Time had gotten away from me and this reminder helped me close a task. --Thank You!\r\n2nd ... I ran w/o daemonizing and was able to see errors (log file path) that readily lead to solution.  GoAccess is now performing well and displaying beautifully.  Thank you again!"
      }
    ]
  },
  {
    "number": 2040,
    "title": "Help on how to parse JSON format custom log",
    "created_at": "2021-02-23T15:20:07Z",
    "closed_at": "2021-03-02T01:17:56Z",
    "labels": [
      "duplicate",
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2040",
    "body": "Can someone please help to parse below custom JSON log\r\n\r\n**Nginx Logformat**\r\n\r\nlog_format logjson '{ \"@timestamp\": \"$time_iso8601\", '\r\n                         '\"msec\": $msec, '\r\n                         '\"remote_addr\": \"$remote_addr\", '\r\n                         '\"x_forwarded_for\": \"$proxy_add_x_forwarded_for\", '\r\n                         '\"remote_port\": \"$remote_port\", '\r\n                         '\"pipelined\": \"$pipe\", '\r\n                         '\"body_bytes_sent\": \"$body_bytes_sent\", '\r\n                         '\"bytes_sent\": $bytes_sent, '\r\n                         '\"request_time\": $request_time, '\r\n                         '\"upstream_response_time\": \"$upstream_response_time\", '\r\n                         '\"upstream_response_length\": \"$upstream_response_length\", '\r\n                         '\"upstream_status\": \"$upstream_status\", '\r\n                         '\"kore_route\": \"$upstream_http_x_route\", '\r\n                         '\"koreserver\": \"$upstream_http_server\", '\r\n                         '\"host\": \"$host\", '\r\n                         '\"hostname\": \"$hostname\", '\r\n                         '\"server_name\": \"$server_name\", '\r\n                         '\"request_completion\": \"$request_completion\", '\r\n                         '\"status\": $status, '\r\n                         '\"connection_requests\": $connection_requests, '\r\n                         '\"request_uri\": \"$request_uri\", '\r\n                         '\"request_method\": \"$request_method\", '\r\n                         '\"request_content_type\": \"$content_type\", '\r\n                         '\"request_content_length\": \"$content_length\", '\r\n                         '\"request_total_length\": $request_length, '\r\n                         '\"args\": \"$args\",'\r\n                         '\"is_args\": \"$is_args\", '\r\n                         '\"x-traceid\":\"$upstream_http_x_traceid\", '\r\n                         '\"http_user_agent\": \"$http_user_agent\" }';\r\n\r\n\r\n\r\n**Sample Loglines:**\r\n\r\n{ \"@timestamp\": \"2021-02-23T08:27:47+00:00\", \"msec\": 1614068867.506, \"remote_addr\": \"172.1.0.32\", \"x_forwarded_for\": \"172.1.0.32\", \"remote_port\": \"2431\", \"pipelined\": \".\", \"body_bytes_sent\": \"46\", \"bytes_sent\": 710, \"request_time\": 0.010, \"upstream_response_time\": \"0.012\", \"upstream_response_length\": \"46\", \"upstream_status\": \"401\", \"kore_route\": \"-\", \"koreserver\": \"KoreServer/\", \"host\": \"wb-bots.korebots.com\", \"hostname\": \"app-57c5bc4bb7-4m2r2\", \"server_name\": \"_\", \"request_completion\": \"OK\", \"status\": 401, \"connection_requests\": 2, \"request_uri\": \"/api/1.1/rtm/start\", \"request_method\": \"POST\", \"request_content_type\": \"application/json\", \"request_content_length\": \"122\", \"request_total_length\": 729, \"args\": \"-\",\"is_args\": \"\", \"x-traceid\":\"-\", \"http_user_agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.150 Safari/537.36\" }\r\n\r\n{ \"@timestamp\": \"2021-02-23T08:27:47+00:00\", \"msec\": 1614068867.926, \"remote_addr\": \"172.1.0.32\", \"x_forwarded_for\": \"172.1.0.32\", \"remote_port\": \"2431\", \"pipelined\": \".\", \"body_bytes_sent\": \"53\", \"bytes_sent\": 698, \"request_time\": 0.008, \"upstream_response_time\": \"0.008\", \"upstream_response_length\": \"53\", \"upstream_status\": \"401\", \"kore_route\": \"-\", \"koreserver\": \"KoreServer/\", \"host\": \"wb-bots.korebots.com\", \"hostname\": \"app-57c5bc4bb7-4m2r2\", \"server_name\": \"_\", \"request_completion\": \"OK\", \"status\": 401, \"connection_requests\": 3, \"request_uri\": \"/api/1.1/users/sts?rnd=wb729\", \"request_method\": \"POST\", \"request_content_type\": \"application/json;charset=UTF-8\", \"request_content_length\": \"2\", \"request_total_length\": 861, \"args\": \"rnd=wb729\",\"is_args\": \"?\", \"x-traceid\":\"-\", \"http_user_agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.150 Safari/537.36\" }",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2040/comments",
    "author": "mahesh-kore",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-03-02T01:17:55Z",
        "body": "I answered the other post #2044. Please don't create dups. Closing this."
      },
      {
        "user": "mahesh-kore",
        "created_at": "2021-03-02T08:55:53Z",
        "body": "Thank you "
      }
    ]
  },
  {
    "number": 2015,
    "title": "Token '' doesn't match specifier '%h'",
    "created_at": "2021-01-29T17:17:19Z",
    "closed_at": "2021-01-29T19:26:15Z",
    "labels": [
      "question",
      "log/date/time format",
      "other"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2015",
    "body": "So, I am having this issue when trying out goaccess. I am trying to read the standard linux .log files.\r\n\r\nToken '' doesn't match specifier '%h'\r\n\r\nLogs are like this one:\r\n\r\nJan 25 23:06:39 gopwcd kernel: [    0.000000] KERNEL supported cpus:\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2015/comments",
    "author": "gopwcd",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-01-29T19:26:15Z",
        "body": "Hello - goaccess works very well with access logs. You will need a consistent pattern to parse other logs."
      }
    ]
  },
  {
    "number": 2008,
    "title": "Log Format",
    "created_at": "2021-01-26T14:02:28Z",
    "closed_at": "2021-01-27T13:17:10Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2008",
    "body": "Hi i want to ask to help with configure log format.\r\nMy apache config is set to\r\nlog-format %{%Y-%m-%d %T}t.%{msec_frac}t %{%z}t %v:%p [%{c}a|%a] [%{X-Forwarded-For}i] %X \\\"%u\\\" \\\"%r\\\" %>s %Ib %Ob %{us}Tus",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2008/comments",
    "author": "vidanil89",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2021-01-26T15:36:55Z",
        "body": "Please post a few lines from your access.log. Thanks"
      },
      {
        "user": "vidanil89",
        "created_at": "2021-01-27T06:09:15Z",
        "body": "2021-01-27 00:00:06.929 +0300 POLZI-IA-WEB1.oiktest.local:33443 [127.0.0.1|10.81.129.170] [-] - \"-\" \"GET /api/modules/data-hash HTTP/1.1\" 503 875b 3181b 1019284us\r\n2021-01-27 00:00:11.414 +0300 POLZI-IA-WEB1.oiktest.local:33443 [127.0.0.1|10.81.129.170] [-] + \"-\" \"POST /auth/nego/token HTTP/1.1\" 200 1641b 4015b 15572us\r\n2021-01-27 00:58:35.358 +0300 POLZI-IA-WEB1.oiktest.local:33443 [127.0.0.1|10.81.129.170] [-] + \"-\" \"GET /api/sqlmon/status HTTP/1.1\" 200 642b 17526b 5078074us"
      },
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2021-01-27T12:17:07Z",
        "body": "Hi @vidanil89.\r\n\r\nLet's go on...\r\nTry this, in `goaccess.conf`:\r\n\r\n`date-format %Y-%m-%d`\r\n`time-format %H:%M:%S`\r\n`log-format %d %t.%^ %^ %v:%^ [%^|%h] %^\"%R\" \"%r\" %s %^ %bb %Dus`\r\n\r\nor in command-line:\r\n`--date-format='...'` `--time-format='...'` `--log-format='...'`\r\n\r\n**notes:**\r\n* `seconds.fraction` is not yet implemented, so I ignored the fractional part;\r\n* it is more common to use the `%B` format instead of `%O`, however `%O` will better express the Tx. Amount.;\r\n* additionally you can ignore the unused panels:\r\n  `--ignore-panel=OS`, `--ignore-panel=BROWSERS` and `--ignore-panel=REQUESTS_STATIC`;\r\n\r\nI hope it helped."
      }
    ]
  },
  {
    "number": 2000,
    "title": "Default value of keep-last",
    "created_at": "2021-01-17T09:36:46Z",
    "closed_at": "2021-01-19T01:48:15Z",
    "labels": [
      "question",
      "on-disk",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/2000",
    "body": "Hello, \r\nwhat is the default value of the **keep-last** parameter, \r\nused in conjunction with **persist = true**?\r\n7 days?\r\ninfinite?\r\n\r\nThank's for your job!",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/2000/comments",
    "author": "danilort",
    "comments": [
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2021-01-18T14:29:55Z",
        "body": "Hi @danilort \r\n\r\nJust see into your conf `/etc/goaccess/goaccess.conf`.\r\nIf it is commented then it is `zero` == `infinite`, i.e. without any limitation.\r\nDo a simple test, with a few requests for each day, and you will be sure of it.\r\nAnd this parameter is independent of the flag `persit`.\r\n\r\nI hope I've helped.\r\n\r\n"
      },
      {
        "user": "danilort",
        "created_at": "2021-01-18T15:22:15Z",
        "body": "Great. \r\nThanks"
      },
      {
        "user": "allinurl",
        "created_at": "2021-01-19T01:48:15Z",
        "body": "As @0bi-w6n-K3nobi zero is default which is equal to infinity regardless of persist. \r\n\r\nIf you have any other questions, feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1981,
    "title": "How to make \"Encryption Settings\" panel work？",
    "created_at": "2020-12-19T15:38:18Z",
    "closed_at": "2020-12-19T23:48:10Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1981",
    "body": "In goaccess manual page, there have an \"Encryption Settings\" panel, it said: this panel shows the SSL/TLS protocol used along the Cipher Suites. This panel is not enabled unless %K is given within the log-format variable.\r\n\r\nbut I don't know how to add %K，please help, I want to check TLS & ciphers (%K & %k)\r\n\r\nI'm using ubuntu 20.10, goaccess 1.4.3, nginx 1.19.5\r\n\r\nI make goaccess as service, and use real-time-html, everything is work\r\n\r\n```\r\nroot@ubuntu:/etc/nginx# service goaccess status\r\n● goaccess.service - Goaccess Web log report.\r\n     Loaded: loaded (/etc/systemd/system/goaccess.service; enabled; vendor preset: enabled)\r\n     Active: active (running) since Sat 2020-12-19 23:20:32 HKT; 14min ago\r\n   Main PID: 302423 (goaccessreport)\r\n      Tasks: 4 (limit: 971)\r\n     CGroup: /system.slice/goaccess.service\r\n             ├─302423 /bin/bash /usr/local/bin/goaccessreport\r\n             └─302425 /usr/local/bin/goaccess /var/log/nginx/access.log - -o /var/www/html/index.html --ws-url=wss://xxx.xxx.com --ssl-cert=/etc/cert>\r\n\r\nDec 19 23:20:32 ubuntu systemd[1]: Started Goaccess Web log report..\r\n```\r\n\r\n I just want to add %K & %k, make \"Encryption Settings\" panel work, here is the goaccess.service\r\n\r\n```\r\n[Unit]\r\nDescription=Goaccess Web log report.\r\nAfter=network.target\r\nStartLimitIntervalSec=0\r\n\r\n[Service]\r\nType=simple\r\nUser=root\r\nGroup=root\r\nRestart=always\r\nRestartSec=1800\r\nExecStart=/usr/local/bin/goaccessreport\r\nStandardInput=tty\r\nStandardOutput=tty\r\nStandardError=tty\r\nTTYPath=/dev/tty7\r\n\r\n[Install]\r\nWantedBy=multi-user.target\r\n```\r\n\r\n/usr/local/bin/goaccessreport :\r\n\r\n```\r\n#!/bin/bash\r\nzcat -f /var/log/nginx/*access.log.* | /usr/local/bin/goaccess /var/log/nginx/*access.log - -o /var/www/html/index.html --ws-url=wss://xxx.xxx.com --ssl-cert=/etc/cert/ecc384.crt --ssl-key=/etc/cert/ecc384.key --log-format=COMBINED --real-time-html\r\n```\r\n\r\nhere is my nginx.conf log setting:\r\n\r\n```\r\nlog_format proxy '$proxy_protocol_addr - $remote_user [$time_local] '\r\n                     '$ssl_protocol/$ssl_cipher '\r\n                     '\"$request\" $status $body_bytes_sent '\r\n                     '\"$http_referer\" \"$http_user_agent\"';\r\n```\r\n\r\nand here is the real log in /var/log/nginx/access.log\r\n\r\n```\r\n111.224.7.4 - - [19/Dec/2020:23:10:18 +0800] TLSv1.2/ECDHE-ECDSA-AES128-GCM-SHA256 \"GET /1 HTTP/1.1\" 404 188 \"-\" \"Mozilla/4.054101423 Mozilla/4.0 (compatible; MSIE 9.0; Windows NT 6.1)\"\r\n```\r\n\r\nIn my case, how to make \"Encryption settings\" panel work?\r\n\r\nSorry, I'm stupid, I really don't understand the manual page \"CUSTOM LOG/DATE FORMAT\" section.\r\n\r\nthanks for help first.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1981/comments",
    "author": "cwyin7788",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-12-19T19:13:32Z",
        "body": "This should do it:\r\n\r\n    goaccess access.log --log-format='%h %^[%d:%t %^] %K/%k \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "cwyin7788",
        "created_at": "2020-12-19T23:48:10Z",
        "body": "> This should do it:\r\n> \r\n> ```\r\n> goaccess access.log --log-format='%h %^[%d:%t %^] %K/%k \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T\r\n> ```\r\n\r\nThank you very much for your quick reply, it works."
      }
    ]
  },
  {
    "number": 1948,
    "title": "Goaccess Error occurred at: src/parser.c - read_log - 2730",
    "created_at": "2020-10-27T14:34:22Z",
    "closed_at": "2020-10-28T08:56:43Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1948",
    "body": "Good day!\r\nI am getting an error when executing the command:\r\n\r\n$ zcat /var/log/nginx/access.log.*.gz | goaccess /var/log/nginx/access.log --log-format=COMBINED\r\n\r\nGoAccess - version 1.4 - Oct 19 2020 14:08:20\r\nConfig file: /usr/local/etc/goaccess/goaccess.conf\r\n\r\nFatal error has occurred\r\nError occurred at: src/parser.c - read_log - 2730\r\nUnable to open the specified log file. Permission denied\r\n\r\nI work with DJANGO and I have failed to implement real-time statistics export.\r\nTherefore, I implemented the export of the report through a script, but when the script is executed, the statistics are displayed for one day.  And I need to display statistics since the start of the web server.\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1948/comments",
    "author": "andrgayday",
    "comments": [
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2020-10-27T21:30:34Z",
        "body": "Hi.\r\nI hope that message is clear. Or not? **`\"...  Permission denied\"`**\r\nYour user need permission for read the `LOG`.\r\n\r\nI should too add character **`-`** for read from `PIPE`. I.E:\r\n\r\n `zcat /var/log/nginx/access.log.*.gz | goaccess`**`-`**`/var/log/nginx/access.log --log-format=COMBINED`"
      },
      {
        "user": "andrgayday",
        "created_at": "2020-10-28T08:56:43Z",
        "body": "Problem solved! I changed the permissions on the log file.\r\nMany thanks!"
      }
    ]
  },
  {
    "number": 1946,
    "title": "Token for '%b' specifier is NULL.",
    "created_at": "2020-10-21T20:49:02Z",
    "closed_at": "2020-10-21T21:15:23Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1946",
    "body": "Hi,\r\n\r\nI am unable to make goaccess works on CentOS release 6.8 running Apache/2.2.15 \r\n\r\ncat /var/log/httpd/ssl_access_log\r\n```\r\n192.168.1.10 - username [21/Oct/2020:16:51:25 -0300] \"GET /top.html HTTP/1.1\" 200 2003\r\n192.168.1.11 - - [21/Oct/2020:17:20:47 -0300] \"GET /BGP HTTP/1.1\" 401 478\r\n```\r\n\r\ncat /etc/goaccess.conf\r\n```\r\ntime-format %H:%M:%S\r\ndate-format %d/%b/%Y\r\nlog-format %h %^[%d:%t %^] \"%r\" %s %b\r\n```\r\n\r\ngoaccess syntax\r\n```\r\nname@server$ goaccess /var/log/httpd/ssl_access_log -o /usr/local/report.html --log-format=COMBINED\r\n/var/log/httpd/ssl_access_log\r\nParsed 10 lines producing the following errors:\r\n\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\n\r\nFormat Errors - Verify your log/date/time format\r\n\r\nname@server$\r\n```\r\n\r\nI have tried to remove %b from log-format %h %^[%d:%t %^] \"%r\" %s %b, but problem remain\r\n\r\nAny idea is more than welcome.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1946/comments",
    "author": "zetto33",
    "comments": [
      {
        "user": "zetto33",
        "created_at": "2020-10-21T21:15:23Z",
        "body": "nevermind.. I was using wrong syntax... \r\n\r\nI have edited file /etc/goaccess.conf , but I still was using '--log-format=COMBINED'. Using correct syntax it start working\r\nname@server$ goaccess /var/log/httpd/ssl_access_log -o /usr/local/report.html"
      },
      {
        "user": "allinurl",
        "created_at": "2020-10-21T23:02:49Z",
        "body": "Glad that worked!"
      }
    ]
  },
  {
    "number": 1942,
    "title": "Custom log format",
    "created_at": "2020-10-13T14:12:28Z",
    "closed_at": "2020-10-13T15:12:54Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1942",
    "body": "We use a custom log format that I've been having the hardest time configuring GoAccess to parse. Any help/input would be appreciated.\r\n\r\nhttpd.conf log format;\r\n\r\nLogFormat \"\\\"%{X-Forwarded-For}i\\\" %v %h %l %u %t \\\"%r\\\" %>s %b %D \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" custom\r\n\r\nlog output example;\r\n\r\n\"70.X.X.X, 90.X.X.X\" test.host.com 172.X.X.X - - [11/Oct/2020:03:12:03 +0000] \"POST /api/rest.php HTTP/1.1\" 200 745 229390 \"-\" \"Amazon CloudFront\"\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1942/comments",
    "author": "route-print",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-10-13T14:20:47Z",
        "body": "This should do it:\r\n\r\n    goaccess access.log --log-format='~h{\", } %v %^ %^[%d:%t %^] \"%r\" %s %b %D \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "route-print",
        "created_at": "2020-10-13T15:12:54Z",
        "body": "Thanks!, that did the trick."
      }
    ]
  },
  {
    "number": 1941,
    "title": "exclude ip with dynamic ip address",
    "created_at": "2020-10-13T09:48:33Z",
    "closed_at": "2020-10-25T15:21:02Z",
    "labels": [
      "question",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1941",
    "body": "I´m using a dynamic ip address on my server with a ddns host address, how do I make it to work with exclude ip? ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1941/comments",
    "author": "tellustheguru",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-10-14T00:40:25Z",
        "body": "You can probably use the ip range? "
      },
      {
        "user": "tellustheguru",
        "created_at": "2020-10-24T09:38:31Z",
        "body": "No, I will then exclude other guests on that provider, not just me."
      },
      {
        "user": "allinurl",
        "created_at": "2020-10-25T15:21:00Z",
        "body": "I can't think right of another way than the ip range. You could write a script that captures those IPs and keep some sort of db that can be used with goaccess exclude param. I don't think it should be goaccess that keeps track of this, though. \r\n\r\nIf you have any ideas, feel free to post them, For now I'm closing this."
      }
    ]
  },
  {
    "number": 1940,
    "title": "How to reduce memory usage when analyze big logs?",
    "created_at": "2020-10-13T01:30:34Z",
    "closed_at": "2020-11-25T03:03:24Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1940",
    "body": "I try analyze a month log of multiple files format CloudFront with 4G memory docker, but it failed, `dmesg` give me such output:\r\n```\r\n[4695469.005548] Task in /kubepods/burstable/podd5e9c899-0c5d-11eb-85eb-06098a6c69e2/a8bb09b80bb0877d2a8b11b1997f62016ea966a7c8fc554783dd6c3ce6e94876 killed as a result of limit of /kubepods/burstable/podd5e9c899-0c5d-11eb-85eb-06098a6c69e2\r\n[4695469.022357] memory: usage 3906248kB, limit 3906248kB, failcnt 4242621\r\n[4695469.026610] memory+swap: usage 3906248kB, limit 9007199254740988kB, failcnt 0\r\n[4695469.032534] kmem: usage 82384kB, limit 9007199254740988kB, failcnt 0\r\n[4695469.036748] Memory cgroup stats for /kubepods/burstable/podd5e9c899-0c5d-11eb-85eb-06098a6c69e2: cache:0KB rss:0KB rss_huge:0KB shmem:0KB mapped_file:0KB dirty:0KB writeback:0KB swap:0KB inactive_anon:0KB active_anon:0KB inactive_file:0KB active_file:0KB unevictable:0KB\r\n[4695469.052229] Memory cgroup stats for /kubepods/burstable/podd5e9c899-0c5d-11eb-85eb-06098a6c69e2/afb951ee5fe415a63499a1b4f017ec495f8c585d682e98e5263a4e09ffe3fcab: cache:0KB rss:44KB rss_huge:0KB shmem:0KB mapped_file:0KB dirty:0KB writeback:0KB swap:0KB inactive_anon:0KB active_anon:44KB inactive_file:0KB active_file:0KB unevictable:0KB\r\n[4695469.071408] Memory cgroup stats for /kubepods/burstable/podd5e9c899-0c5d-11eb-85eb-06098a6c69e2/a8bb09b80bb0877d2a8b11b1997f62016ea966a7c8fc554783dd6c3ce6e94876: cache:248KB rss:3823572KB rss_huge:0KB shmem:4KB mapped_file:12KB dirty:36KB writeback:0KB swap:0KB inactive_anon:4KB active_anon:3823572KB inactive_file:156KB active_file:36KB unevictable:0KB\r\n[4695469.091197] [ pid ]   uid  tgid total_vm      rss nr_ptes nr_pmds swapents oom_score_adj name\r\n[4695469.097806] [16998]     0 16998      256        1       4       3        0          -998 pause\r\n[4695469.104332] [17391]     0 17391     1092      169       8       3        0           955 tini\r\n[4695469.110829] [17420]     0 17420     3325      755      11       3        0           955 bash\r\n[4695469.117326] [17421]     0 17421     3326      605      10       3        0           955 bash\r\n[4695469.123755] [17424]     0 17424     3325      769      11       3        0           955 bash\r\n[4695469.130255] [17431]     0 17431    30230      770      56       4        0           955 nginx\r\n[4695469.136776] [17432]   999 17432    30348     1705      58       4        0           955 nginx\r\n[4695469.143300] [17433]   999 17433    30348     1705      58       4        0           955 nginx\r\n[4695469.149807] [17434]     0 17434  2754099   131359     550      14        0           955 java\r\n[4695469.156309] [17435]   999 17435    30348     1705      58       4        0           955 nginx\r\n[4695469.162804] [17436]   999 17436    30348     1705      58       4        0           955 nginx\r\n[4695469.169294] [17438]   999 17438    30348     1705      58       4        0           955 nginx\r\n[4695469.175784] [17439]   999 17439    30348     1705      58       4        0           955 nginx\r\n[4695469.182294] [17440]   999 17440    30348     1705      58       4        0           955 nginx\r\n[4695469.188817] [17441]   999 17441    30348     1705      58       4        0           955 nginx\r\n[4695469.195327] [17442]   999 17442    30348     1705      58       4        0           955 nginx\r\n[4695469.201859] [17444]   999 17444    30348     1705      58       4        0           955 nginx\r\n[4695469.208393] [17445]   999 17445    30348     1705      58       4        0           955 nginx\r\n[4695469.214895] [17446]   999 17446    30348     1556      58       4        0           955 nginx\r\n[4695469.221404] [17447]   999 17447    30348     1558      58       4        0           955 nginx\r\n[4695469.227955] [17448]   999 17448    30348     1705      58       4        0           955 nginx\r\n[4695469.234488] [17450]   999 17450    30348     1705      58       4        0           955 nginx\r\n[4695469.241055] [17451]   999 17451    30348     1705      58       4        0           955 nginx\r\n[4695469.247585] [22486]     0 22486     3359      861      11       3        0           955 sh\r\n[4695469.357239] [30378]     0 30378     3326      739      11       3        0           955 bash\r\n[4695469.363705] [30382]     0 30382     3619     1025      12       3        0           955 sh\r\n[4695469.370137] [20124]     0 20124     3359      878      11       3        0           955 sh\r\n[4695469.376527] [30463]     0 30463     3359      866      11       3        0           955 sh\r\n[4695469.382917] [20843]     0 20843     3360      850      12       3        0           955 sh\r\n[4695469.389347] [29503]     0 29503     3360      861      12       3        0           955 sh\r\n[4695469.395926] [ 5493]     0  5493     3359      852      11       3        0           955 sh\r\n[4695469.402450] [30428]     0 30428     1359      378       8       3        0           955 gzip\r\n[4695469.409035] [30429]     0 30429   855985   820359    1640       6        0           955 goaccess\r\n[4695469.415683] Memory cgroup out of memory: Kill process 30429 (goaccess) score 1796 or sacrifice child\r\n[4695469.422448] Killed process 30429 (goaccess) total-vm:3423940kB, anon-rss:3276652kB, file-rss:4784kB, shmem-rss:0kB\r\n[4695469.586276] oom_reaper: reaped process 30429 (goaccess), now anon-rss:0kB, file-rss:0kB, shmem-rss:0kB\r\n[4696388.212527] goaccess invoked oom-killer: gfp_mask=0x14000c0(GFP_KERNEL), nodemask=(null),  order=0, oom_score_adj=955\r\n[4696388.220012] goaccess cpuset=a8bb09b80bb0877d2a8b11b1997f62016ea966a7c8fc554783dd6c3ce6e94876 mems_allowed=0\r\n[4696388.227011] CPU: 5 PID: 13949 Comm: goaccess Not tainted 4.14.146-119.123.amzn2.x86_64 #1\r\n[4696388.233333] Hardware name: Amazon EC2 m5.4xlarge/, BIOS 1.0 10/16/2017\r\n[4696388.237656] Call Trace:\r\n[4696388.240268]  dump_stack+0x5c/0x82\r\n[4696388.243228]  dump_header+0x94/0x229\r\n[4696388.246314]  oom_kill_process+0x223/0x420\r\n[4696388.249579]  out_of_memory+0x2af/0x4c0\r\n[4696388.252696]  mem_cgroup_out_of_memory+0x49/0x80\r\n[4696388.256184]  mem_cgroup_oom_synchronize+0x2ed/0x330\r\n[4696388.259829]  ? mem_cgroup_css_online+0x30/0x30\r\n[4696388.263307]  pagefault_out_of_memory+0x32/0x77\r\n[4696388.266796]  __do_page_fault+0x4b4/0x4c0\r\n[4696388.270054]  ? async_page_fault+0x2f/0x50\r\n[4696388.273319]  async_page_fault+0x45/0x50\r\n[4696388.276540] RIP: 270b:0x4011\r\n[4696388.279346] RSP: 385d77b8:00007fb8385d7760 EFLAGS: 00004000\r\n[4696388.279366] Task in /kubepods/burstable/podd5e9c899-0c5d-11eb-85eb-06098a6c69e2/a8bb09b80bb0877d2a8b11b1997f62016ea966a7c8fc554783dd6c3ce6e94876 killed as a result of limit of /kubepods/burstable/podd5e9c899-0c5d-11eb-85eb-06098a6c69e2\r\n[4696388.296378] memory: usage 3906248kB, limit 3906248kB, failcnt 4488939\r\n[4696388.300736] memory+swap: usage 3906248kB, limit 9007199254740988kB, failcnt 0\r\n[4696388.306904] kmem: usage 81484kB, limit 9007199254740988kB, failcnt 0\r\n[4696388.311188] Memory cgroup stats for /kubepods/burstable/podd5e9c899-0c5d-11eb-85eb-06098a6c69e2: cache:0KB rss:0KB rss_huge:0KB shmem:0KB mapped_file:0KB dirty:0KB writeback:0KB swap:0KB inactive_anon:0KB active_anon:0KB inactive_file:0KB active_file:0KB unevictable:0KB\r\n[4696388.326980] Memory cgroup stats for /kubepods/burstable/podd5e9c899-0c5d-11eb-85eb-06098a6c69e2/afb951ee5fe415a63499a1b4f017ec495f8c585d682e98e5263a4e09ffe3fcab: cache:0KB rss:44KB rss_huge:0KB shmem:0KB mapped_file:0KB dirty:0KB writeback:0KB swap:0KB inactive_anon:0KB active_anon:44KB inactive_file:0KB active_file:0KB unevictable:0KB\r\n[4696388.346234] Memory cgroup stats for /kubepods/burstable/podd5e9c899-0c5d-11eb-85eb-06098a6c69e2/a8bb09b80bb0877d2a8b11b1997f62016ea966a7c8fc554783dd6c3ce6e94876: cache:212KB rss:3824420KB rss_huge:0KB shmem:4KB mapped_file:16KB dirty:36KB writeback:0KB swap:0KB inactive_anon:4KB active_anon:3824416KB inactive_file:140KB active_file:44KB unevictable:0KB\r\n```\r\nAnyone can HELP?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1940/comments",
    "author": "yujiaao",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-10-14T00:42:16Z",
        "body": "How big is your log (i.e., size and number of lines)? Also, you could try using `-q` to strip timestamped requests, if you have any."
      },
      {
        "user": "allinurl",
        "created_at": "2020-11-25T03:03:24Z",
        "body": "Closing this awaiting for response. Feel free to reopen it if needed."
      },
      {
        "user": "packeteer",
        "created_at": "2021-07-08T05:09:11Z",
        "body": "I'm also facing a similar issue.\r\nI'm running Goaccess 1.5.1 on AWS Linux 2 (essentially Centos 7).\r\nI'm trying to process 1 month of Cloudfront logs (120GB) to html or csv and the process OOMs at around 61 million records.\r\n\r\nbuilt from source ( ./configure --enable-utf8 )\r\nrunning with the following: goaccess jan.log --log-format=CLOUDFRONT -o cdn-jan.csv --restore --persist --db-path /root/persist\r\n\r\nany ideas how to best solve this?"
      },
      {
        "user": "allinurl",
        "created_at": "2021-07-08T14:27:33Z",
        "body": "@packeteer how much ram/swap do you have available? also, do you have a lot of timestamped or unique requests? if that's the case, you could try using `-q`."
      }
    ]
  },
  {
    "number": 1919,
    "title": "Format for SHOUTcast V2 Log Files?",
    "created_at": "2020-09-19T17:33:51Z",
    "closed_at": "2021-02-09T01:13:08Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1919",
    "body": "I tried a little bit but dont get it working with shoutcast v2 log files.\r\n\r\n**Example**\r\n```\r\n#Software: SHOUTcast\r\n#Version: 2.6.0.750\r\n#Fields: c-ip c-dns date time cs-uri-stem c-status cs(User-Agent) sc-bytes x-duration avgbandwidth\r\n217.232.69.000 217.232.69.000 2020-09-19 11:12:00 /stream?title=Little%20Eva%20-%20Some%20Kind-A%20Wonderful%20%5B8e5%5D 200 WinampMPEG%2F5.50 2423327 152 127543\r\n88.99.58.000 88.99.58.000 2020-09-19 11:12:00 /stream?title=Little%20Eva%20-%20Some%20Kind-A%20Wonderful%20%5B8e5%5D 200 WinampMPEG%2F5.50 2432105 152 128005\r\n85.220.185.00 85.220.185.00 2020-09-19 11:12:00 /stream?title=Little%20Eva%20-%20Some%20Kind-A%20Wonderful%20%5B8e5%5D 200 WinampMPEG%2F5.50 2433776 152 128093\r\n87.162.74.00 87.162.74.00 2020-09-19 11:12:00 /stream?title=Little%20Eva%20-%20Some%20Kind-A%20Wonderful%20%5B8e5%5D 200  2432522 152 128027\r\n95.217.164.000 95.217.164.000 2020-09-19 11:12:09 /stream?title=Little%20Eva%20-%20Some%20Kind-A%20Wonderful%20%5B8e5%5D 200  16384 0 0\r\n85.220.185.00 85.220.185.00 2020-09-19 11:14:07 /stream?title=The%20Kinks%20-%20Dandy%20%5B2d9%5D 200 WinampMPEG%2F5.50 2023340 127 127454\r\n217.232.69.000 217.232.69.000 2020-09-19 11:14:07 /stream?title=The%20Kinks%20-%20Dandy%20%5B2d9%5D 200 WinampMPEG%2F5.50 2031282 127 127954\r\n88.99.58.000 88.99.58.000 2020-09-19 11:14:07 /stream?title=The%20Kinks%20-%20Dandy%20%5B2d9%5D 200 WinampMPEG%2F5.50 2024594 127 127533\r\n87.162.74.00 87.162.74.00 2020-09-19 11:14:07 /stream?title=The%20Kinks%20-%20Dandy%20%5B2d9%5D 200  2023759 127 127480\r\n```\r\n\r\nCould someone help please with the right format?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1919/comments",
    "author": "XfactorDO",
    "comments": [
      {
        "user": "scysys",
        "created_at": "2020-09-22T13:05:21Z",
        "body": "`--log-format='%h %v %d %t %U %s %u %b %T %^'`\r\n\r\nShould help"
      },
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2020-09-22T13:38:10Z",
        "body": "Try this, in `goaccess.conf`:\r\n\r\n`time-format %H:%M:%S` or in same way `time-format %T`\r\n`date-format %Y-%m-%d` or in same way `date-format %F`\r\n`log-format %h %^ %d %t %U %s %u %b %L %^`\r\n\r\nor in command-line\r\n`--time-format='...' --date-format='...' --log-format='...'`\r\n\r\n**notes:**\r\nI believe that `.00` and `.000` in the `IPs` are just examples. These values are not valid.\r\nThere is no field for the `http method`, so use `--http-method=no`.\r\n\r\nIt will be difficult to process this `LOG`. \r\nIt sometimes introduces the `user-agent`, others not present.\r\nYou will must have to separate these lines into 2 distinct files.\r\nOr ignore all fields just after status `%s`, using `%^`. i.e. : \r\n\r\n`log-format %h %^ %d %t %U %s %^`\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2021-02-09T01:13:08Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1912,
    "title": "date format using Russian localization crash",
    "created_at": "2020-09-08T12:55:05Z",
    "closed_at": "2020-09-09T05:48:21Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1912",
    "body": "Hello All!\r\nI use your wonderful analyzer, I like it very much.\r\nEverything works fine in the default locale (English). One has only to change the locale to Russian (I love Russian, I'm from Russia), the demon stops running. I am using the default config file. My operating FreeBSD hostname 12.1-RELEASE-p9 FreeBSD 12.1-RELEASE-p9 GENERIC amd64.\r\nUsually I switch the login class with the command pw user mod user -L russian.\r\nMy goaccess.conf\r\n###\r\ntime-format% H:% M:% S\r\ndate-format% d /% b /% Y\r\nlog-format% v:% ^% h% ^ [% d:% t% ^] \"% r\"% s% b \"% R\" \"% u\"\r\nlog-format COMBINED\r\nconfig-dialog false\r\nhl-header true\r\nhtml-report-title\r\njson-pretty-print false\r\nno-color false\r\nno-column-names false\r\nno-csv-summary false\r\nno-progress false\r\nno-tab-scroll false\r\nwith-mouse false\r\nlog-file /var/log/nginx/access.log\r\nagent-list false\r\nwith-output-resolver false\r\nhttp-method yes\r\nhttp-protocol yes\r\noutput /usr/local/www/index.html\r\nno-query-string false\r\nno-term-resolver false\r\n444-as-404 false\r\n4xx-to-unique-count false\r\nall-static-files false\r\ndouble-decode false\r\nignore-crawlers false\r\ncrawlers-only false\r\nignore-panel REFERRERS\r\nignore-panel KEYPHRASES\r\nreal-os true\r\nstatic-file .css\r\nstatic-file .js\r\nstatic-file .jpg\r\nstatic-file .png\r\nstatic-file .gif\r\nstatic-file .ico\r\nstatic-file .jpeg\r\nstatic-file .pdf\r\nstatic-file .csv\r\nstatic-file .mpeg\r\nstatic-file .mpg\r\nstatic-file .swf\r\nstatic-file .woff\r\nstatic-file .woff2\r\nstatic-file .xls\r\nstatic-file .xlsx\r\nstatic-file .doc\r\nstatic-file .docx\r\nstatic-file .ppt\r\nstatic-file .pptx\r\nstatic-file .txt\r\nstatic-file .zip\r\nstatic-file .ogg\r\nstatic-file .mp3\r\nstatic-file .mp4\r\nstatic-file .exe\r\nstatic-file .iso\r\nstatic-file .gz\r\nstatic-file .rar\r\nstatic-file .svg\r\nstatic-file .bmp\r\nstatic-file .tar\r\nstatic-file .tgz\r\nstatic-file .tiff\r\nstatic-file .tif\r\nstatic-file .ttf\r\nstatic-file .flv\r\ngeoip-database /usr/local/share/GeoIP/GeoLiteCity.dat\r\n###\r\npw user mod root -L default\r\n/ usr / local / bin / goaccess -p /usr/local/etc/goaccess/goaccess.conf --no-progress\r\n/var/log/nginx/access.log\r\nEverything is OK\r\nIf I change the class pw user mod root -L russian\r\n / usr / local / bin / goaccess -p /usr/local/etc/goaccess/goaccess.conf --no-progress\r\n/var/log/nginx/access.log\r\nParsed 1 lines producing the following errors:\r\nToken '01 / Sep / 2020 'doesn't match specifier'% d '\r\nFormat Errors - Verify your log / date / time format",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1912/comments",
    "author": "partnumber",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-09-08T15:17:28Z",
        "body": "It sounds like you are changing the date/time format upon setting it to Russian. I'd make sure not to change the date/time locale. You could always try checking the output of `date` in your terminal after switching to Russian. Feel free to post the output."
      },
      {
        "user": "partnumber",
        "created_at": "2020-09-09T05:48:11Z",
        "body": "Thank you for quick answer.\r\nIt helped me env LC_TIME = \"en_US.UTF-8\" / usr / local / bin / goaccess -p /usr/local/etc/goaccess/goaccess.conf --no-progress.\r\nGood luck."
      }
    ]
  },
  {
    "number": 1883,
    "title": "goaccess conf for fail2ban logs ?",
    "created_at": "2020-08-13T17:21:11Z",
    "closed_at": "2020-09-16T23:26:33Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1883",
    "body": "Hello everyone,\r\n\r\nI'm a bit stuck on the way to **configure goaccess to read the fail2ban logs** that have this format/syntax : \r\n\r\n`2020-08-13 18:57:11,326 fail2ban.actions        [10357]: NOTICE  [firewall] Ban ww.xx.yy.zz`\r\n\r\nCan't figure out the log-format (tried various combinations related to `%d %t %^ %^ %^ %^ %^ %h` syntax).\r\n\r\nCould you help :) ? \r\n\r\nThanks in advance.\r\n\r\nSincerely,",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1883/comments",
    "author": "securixhk",
    "comments": [
      {
        "user": "securixhk",
        "created_at": "2020-08-19T07:46:10Z",
        "body": "The solution is to carefully respect the `spaces` quantity :) besides some tricks as : \r\n\r\n18:57:11,326 -> **%t,%^**\r\n\r\nThanks"
      },
      {
        "user": "allinurl",
        "created_at": "2020-09-16T23:26:21Z",
        "body": "You can try:\r\n \r\n    goaccess fail2ban.log --log-format='%d %t,%^ %U %^ %^ %^ %v %h' --date-format=%Y-%m-%d --time-format=%T --http-protocol=no --http-method=no --ignore-panel=OS --ignore-panel=BROWSERS"
      },
      {
        "user": "allinurl",
        "created_at": "2020-09-16T23:26:33Z",
        "body": "Closing this, feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1865,
    "title": "[Log format] python loggging, replace of ELK",
    "created_at": "2020-08-03T01:47:41Z",
    "closed_at": "2020-08-03T22:31:15Z",
    "labels": [
      "invalid",
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1865",
    "body": "I need to use goacess to analyse the log which created by python logging. how can I Statistics the request such like ELK. thanks.\r\n\r\nmy log such like \r\n\r\n`\r\n2018-03-13 21:06:46,092 - D:/write_to_log.py[line:25] - DEBUG: debug\r\n  \r\n2018-03-13 21:06:46,092 - D:/write_to_log.py[line:26] - INFO: info  \r\n\r\n2018-03-13 21:06:46,092 - D:/write_to_log.py[line:27] - WARNING: xxx  \r\n\r\n2018-03-13 21:06:46,099 - D:/write_to_log.py[line:28] - ERROR: xxx  \r\n\r\n2018-03-13 21:06:46,099 - D:/write_to_log.py[line:29] - CRITICAL:xxx  \r\n\r\n2018-03-13 21:06:46,100 - D:/write_to_log.py[line:30] - ERROR: error  \r\n`\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1865/comments",
    "author": "LYUYork",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-08-03T22:31:15Z",
        "body": "You would probably need a different tool. GoAccess works primarily with the access log.\r\n\r\nClosing this, feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1862,
    "title": "Ignore specific ip from data",
    "created_at": "2020-08-01T05:55:13Z",
    "closed_at": "2020-08-02T02:37:50Z",
    "labels": [
      "question",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1862",
    "body": "I visit my own website for testing purposes. So is there some way to \"ignore\" my ip?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1862/comments",
    "author": "Titaniumtown",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-08-02T02:31:41Z",
        "body": "Yes, please take a look at:\r\n\r\n    -e 192.168.0.1"
      }
    ]
  },
  {
    "number": 1852,
    "title": "Setup goaccess as a systemd service",
    "created_at": "2020-07-23T06:49:57Z",
    "closed_at": "2020-07-29T02:06:56Z",
    "labels": [
      "question",
      "cron"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1852",
    "body": "Is there a way to generate a log.html file every hour or so? So I don't have to run the command manually?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1852/comments",
    "author": "Titaniumtown",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-07-24T00:31:13Z",
        "body": "Could you run it through the cron? \r\n\r\n    cron -e\r\n\r\nthen add:\r\n\r\n    0 * * * *"
      },
      {
        "user": "Titaniumtown",
        "created_at": "2020-07-24T02:32:06Z",
        "body": "Wait, before i do that, how to i make it so the command: ``` goaccess /mnt/tb_hdd/logs/access_log_apache.txt --log-format=COMBINED --num-test=0 --real-time-html -o /mnt/hdd/http_share/log.html ``` only saves the html file, and not resulting in: ``` WebSocket server ready to accept new client connections ```"
      },
      {
        "user": "Titaniumtown",
        "created_at": "2020-07-24T08:27:09Z",
        "body": "Sorry, I was just an idiot. about the above comment ^^^^^^^^^^^^^ I had real-time-html set in the args. lmao"
      },
      {
        "user": "allinurl",
        "created_at": "2020-07-29T02:05:46Z",
        "body": "So is this resolved?"
      }
    ]
  },
  {
    "number": 1848,
    "title": "Log Format Help - Syslog",
    "created_at": "2020-07-16T08:27:47Z",
    "closed_at": "2020-07-16T23:59:12Z",
    "labels": [
      "invalid",
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1848",
    "body": "I had tried all the methods mentioned here in the issues, but none helped. Kindly help me parse auth.log file. Below are few data:\r\n\r\n```\r\nJul 15 18:53:21 ip-172-26-15-120 sshd[2761]: Connection closed by 195.158.80.60 port 37508 [preauth]\r\nJul 15 18:53:23 ip-172-26-15-120 sshd[2763]: Connection closed by 195.158.80.60 port 39200 [preauth]\r\nJul 15 18:53:24 ip-172-26-15-120 sshd[2765]: Connection closed by 195.158.80.60 port 40936 [preauth]\r\nJul 15 18:53:26 ip-172-26-15-120 sshd[2767]: Connection closed by 195.158.80.60 port 42776 [preauth]\r\nJul 15 18:53:28 ip-172-26-15-120 sshd[2769]: Connection closed by 195.158.80.60 port 44510 [preauth]\r\nJul 15 18:53:30 ip-172-26-15-120 sshd[2771]: Connection closed by 195.158.80.60 port 46188 [preauth]\r\nJul 15 18:53:32 ip-172-26-15-120 sshd[2773]: Connection closed by 195.158.80.60 port 47890 [preauth]\r\nJul 15 18:53:33 ip-172-26-15-120 sshd[2775]: Connection closed by 195.158.80.60 port 49658 [preauth]\r\nJul 15 18:53:35 ip-172-26-15-120 sshd[2777]: Connection closed by 195.158.80.60 port 51380 [preauth]\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1848/comments",
    "author": "nabeelaejaz",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-07-16T23:58:58Z",
        "body": "goaccess analyses web access logs, you probably need to use a different tool."
      }
    ]
  },
  {
    "number": 1836,
    "title": "Error occured at src/parser.c - read_log. But only when run from cron. And yes, I'm using absolute paths.",
    "created_at": "2020-07-05T10:06:58Z",
    "closed_at": "2020-07-11T17:37:07Z",
    "labels": [
      "question",
      "cron"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1836",
    "body": "Hi,\r\nI know this looks like the 50 identical issues I've googled so far, but I have no idea why this doesn't work. The point is, it works when invoked in shell, but doesn't when run from cron. The cron is root-owned, so there should be no permission issues. I use absolute paths, so ENV variables shouldn't be an issue either.\r\n\r\nThis is the problematic line:\r\n```\r\nzcat /var/log/nginx/access.log.*.gz | goaccess /var/log/nginx/access.log{,.1} - -q --log-format=COMBINED -o /var/www/html/foo/bar/report.html >/dev/null\r\n```\r\n\r\nIt works in shell, but not in cron.\r\n\r\n```\r\nParsing... [0] [0/s]\r\nGoAccess - version 1.2 - Jun 19 2017 12:55:29\r\nConfig file: /etc/goaccess.conf\r\n\r\nFatal error has occurred\r\nError occured at: src/parser.c - read_log - 2669\r\nUnable to open the specified log file. No such file or directory\r\n```\r\n\r\nThis looks like I misspecified the log paths, but when I paste the command into shell, everything works. I thought it was going to be `$PATH` issue, but I specify absolute paths everywhere. And both `zcat` and `goaccess` are in cron `$PATH` already.\r\n\r\nAny ideas?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1836/comments",
    "author": "SoptikHa2",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-07-08T21:23:56Z",
        "body": "Can you please try without expanding multiple logs?\r\n\r\n    zcat /var/log/nginx/access.log.*.gz | goaccess /var/log/nginx/access.log - -q --log-format=COMBINED -o /var/www/html/foo/bar/report.html\r\n\r\nand  \r\n\r\n     goaccess /var/log/nginx/access.log - -q --log-format=COMBINED -o /var/www/html/foo/bar/report.html\r\n"
      },
      {
        "user": "SoptikHa2",
        "created_at": "2020-07-11T17:37:07Z",
        "body": "Thanks a lot, the issue disappears when I remove the shell expand. I guess it's some shell opt-in feature.\r\n\r\nSorry for inconvenience!"
      },
      {
        "user": "allinurl",
        "created_at": "2020-07-13T21:55:53Z",
        "body": "Glad that solved the issue. Yeah my best guess is that the cron doesn't expand it due to a tty. You can probably run a scripts instead of running goaccess directly.\r\n\r\nClosing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1826,
    "title": "Hello i get below error while parsing my custom log files as below:",
    "created_at": "2020-06-24T13:39:39Z",
    "closed_at": "2020-06-26T14:36:24Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1826",
    "body": "Parsed 1 lines producing the following errors:\r\nToken '020-06-05 17' doesn't match specifier '%d'\r\n\r\nFormat Errors - Verify your log/date/time format\r\n\r\nInput Log files are as below:\r\n```\r\n2020-06-05 17:54:34:019 [TID 25532][INFO ] Default Logger initialized [casAPIPlatform]^M\r\n2020-06-05 17:54:34:019 [TID 25532][INFO ] ENTER: Config default values [casAPIPlatform]^M\r\n2020-06-05 17:54:34:019 [TID 25532][INFO ] EXIT: Config default values [casAPIPlatform]^M\r\n2020-06-05 17:54:34:019 [TID 25532][INFO ] ENTER: LoadSystemControllers [casAPIPlatform]^M\r\n2020-06-05 17:54:34:019 [TID 25532][INFO ] EXIT: LoadSystemControllers [casAPIPlatform]^M\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1826/comments",
    "author": "cmmanoj",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-06-25T01:56:35Z",
        "body": "Is this an access log? Please note that GoAccess requires the following fields:\r\n```\r\na valid IPv4/6 %h\r\na valid date %d\r\nthe request %r\r\n```"
      },
      {
        "user": "cmmanoj",
        "created_at": "2020-06-25T11:18:29Z",
        "body": "This is not Apache or Nginx access log. It is the log file of a customized web server.\r\nDate and all is valid. i believe goaccess should be able to parse any log file is not it.\r\n\r\nAny pointers as to how i parse the log file for below: \r\n\r\n2020-06-05 17:54:34:019 [TID 25532][INFO ] Default Logger initialized [casAPIPlatform]^M\r\n2020-06-05 17:54:34:019 [TID 25532][INFO ] ENTER: Config default values [casAPIPlatform]^M\r\n2020-06-05 17:54:34:019 [TID 25532][INFO ] EXIT: Config default values [casAPIPlatform]^M\r\n "
      },
      {
        "user": "cmmanoj",
        "created_at": "2020-06-25T11:20:13Z",
        "body": "how do i achieve the format to parse the log files?\r\n\r\n2020-06-05 17:54:34:019 [TID 25532][INFO ] Default Logger initialized [casAPIPlatform]^M\r\n2020-06-05 17:54:34:019 [TID 25532][INFO ] ENTER: Config default values [casAPIPlatform]^M\r\n2020-06-05 17:54:34:019 [TID 25532][INFO ] EXIT: Config default values [casAPIPlatform]^M"
      },
      {
        "user": "cmmanoj",
        "created_at": "2020-06-25T14:45:10Z",
        "body": "How do i construct the Log format so that goaccess can parse the logfiles ?\r\n\r\n2020-06-05 17:54:34:019 [TID 25532][INFO ] Default Logger initialized [casAPIPlatform]^M\r\n2020-06-05 17:54:34:019 [TID 25532][INFO ] ENTER: Config default values [casAPIPlatform]^M\r\n2020-06-05 17:54:34:019 [TID 25532][INFO ] EXIT: Config default values [casAPIPlatform]^M"
      },
      {
        "user": "allinurl",
        "created_at": "2020-06-26T13:10:43Z",
        "body": "Sorry there's no much that goaccess can help in here. You need a valid IPv4/6 %h and request."
      },
      {
        "user": "cmmanoj",
        "created_at": "2020-06-26T14:26:28Z",
        "body": "Hello,\n Ok thanks then.\n\n\n\nBest Regards\n\nManoj\n    On Friday, 26 June, 2020, 06:40:58 pm IST, Gerardo O. <notifications@github.com> wrote:  \n \n \n\n\nSorry there's no much that goaccess can help in here. You need a valid IPv4/6 %h and request.\n\n—\nYou are receiving this because you authored the thread.\nReply to this email directly, view it on GitHub, or unsubscribe.\n  "
      }
    ]
  },
  {
    "number": 1793,
    "title": "Can i use GoAccess with iptables.log ?",
    "created_at": "2020-05-29T17:01:13Z",
    "closed_at": "2020-06-05T14:07:54Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1793",
    "body": "Hello, i search a tool for visualized my file iptables.log.\r\n\r\nCan i use GoAccess with iptables.log ?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1793/comments",
    "author": "ZerooCool",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-06-01T22:15:17Z",
        "body": "You may. Though the fields won't necessarily match the context of goaccess' report. e.g., request, browser, etc..."
      },
      {
        "user": "ZerooCool",
        "created_at": "2020-06-02T14:35:46Z",
        "body": "Ok, in my case, I don't want to have to adapt fields, so I consider that, initially, it is not adapted.\r\n\r\nThank you for your reply.\r\nIf, despite everything, someone has used GoAcces with Iptables logs, tutorials are welcome."
      },
      {
        "user": "allinurl",
        "created_at": "2020-06-05T14:07:54Z",
        "body": "Closing this. However, feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1791,
    "title": "Help with custom log format with tabs",
    "created_at": "2020-05-27T06:07:37Z",
    "closed_at": "2020-06-01T06:56:57Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1791",
    "body": "Hi, I have a custom log that separates data by tab (TSV log format).\r\nLog is a DNS query.\r\n\r\nThis is a snipped of the log\r\n[2020-05-27 14:47:47]\t10.10.1.1\tbadexample.com\tA\tFORWARD\t24ms\t10.10.1.1:53\r\n\r\nThis is my goaccess.conf \r\n\r\n```\r\ntime-format %H:%M:%S\r\ndate-format %Y-%m-%d\r\nlog-format [%d %t] %h %v %U %^ %^ %^ %^\r\n\r\n```\r\nIt works fine when I manually change tab to space, but can't figure out how to get the tab read by goaccess so interprets the log file.\r\n\r\nThis is what I keep getting when trying to run goaccess\r\n\r\nParsed 1 lines producing the following errors:\r\nToken for '%h' specifier is NULL.\r\nFormat Errors - Verify your log/date/time format\r\n\r\nThanks in advance",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1791/comments",
    "author": "p01acos",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-05-28T23:19:43Z",
        "body": "You can always use `\\t` as delimiter. e.g., \r\n\r\n    log-format [%d %t]\\t%h\\t%v\\t%U\\t%^"
      },
      {
        "user": "p01acos",
        "created_at": "2020-06-01T06:56:54Z",
        "body": "> log-format [%d %t]\\t%h\\t%v\\t%U\\t%^\r\n\r\nso simple yet so far :|\r\nbloody legend mate, cheers"
      }
    ]
  },
  {
    "number": 1784,
    "title": "Token '92.118.161.13.netsystemsresearch.com' doesn't match specifier '%h' in v1.4",
    "created_at": "2020-05-24T16:09:43Z",
    "closed_at": "2020-05-25T00:43:18Z",
    "labels": [
      "question",
      "log/date/time format",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1784",
    "body": "Using Apache  common log format. When running goaccess (v1.4):\r\n/usr/local/bin/goaccess - -o /home/cvmiller/my_report.html --log-format=COMBINED\r\n\r\nI get the error:\r\n```\r\nParsed 1 lines producing the following errors:\r\n\r\nToken '92.118.161.13.netsystemsresearch.com' doesn't match specifier '%h'\r\n\r\nFormat Errors - Verify your log/date/time format\r\n```\r\n\r\nIt seems like the parser is confused by the fact that the hostname begins like an IPv4 address, but is in fact part of a larger hostname. Other hosts which fail with this error are:\r\n```\r\n187.114.156.0.static.host.gvt.net.br\r\nec2-34-223-93-168.us-west-2.compute.amazonaws.com\r\n```\r\nAlso saw this issue  in version 1.3. Built goaccess with the following:\r\n```\r\n ./configure --enable-utf8 --without-libintl-prefix\r\nmake\r\nsudo make install\r\n```\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1784/comments",
    "author": "cvmiller",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-05-24T22:41:08Z",
        "body": "You can try using `--no-ip-validation`."
      },
      {
        "user": "cvmiller",
        "created_at": "2020-05-25T00:14:56Z",
        "body": "Thanks! That solves the problem.\r\n\r\nPerhaps this is a documentation issue, as I don't see `--no-ip-validation` in the `--help`"
      },
      {
        "user": "allinurl",
        "created_at": "2020-05-25T00:43:18Z",
        "body": "Thanks for reporting that. I did add it to the man page but completely forgot adding it to the `--help`. I just pushed an update upstream.\r\n\r\nClosing this, feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1769,
    "title": "Error goaccess - custom log format without delimiters",
    "created_at": "2020-05-14T12:09:04Z",
    "closed_at": "2020-12-17T20:06:50Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1769",
    "body": "when I try to run \"goaccess -f  access.log -a\",it return some err like:\r\nGoAccess - version 0.8.5 - Dec  5 2014 06:36:01\r\n\r\nFatal error has occurred\r\nError occured at: goaccess.c - main - 832\r\nNothing valid to process.\r\n\r\n\r\nconfig:\r\ndate-format %d/%b/%Y\r\nlog-format \"%h\"\"\\t%d:%t +0800\"\"\\t%m %U %H\"\"\\t%D\"\"\\t%s\"\"\\t%b\"\"\\t%R\"\"\\t%^\"\"\\t%^\"\"\\t%^\"\"\\t%^\"\"\\t%^\"\"\\t%^\"\"\\t%^\"\"\\t%^\"\"\\t%^\"\"\\t%^\"\"\\t%^\"\"\\t%^\"\"\\t%^\"\"\\t%^\"\"\\t%^\"\"\\t%^\"\"\\t%^\"\"\\t%^\"\r\n\r\nnginx log format:\r\n```\r\nlog_format access \"$remote_addr\"\r\n                      \"\\t$time_local\"\r\n                      \"\\t$request\"\r\n                      \"\\t$request_time\"\r\n                      \"\\t$status\"\r\n                      \"\\t$body_bytes_sent\"\r\n                      \"\\t$http_referer\"\r\n                      \"\\t$http_user_agent\"\r\n                      \"\\t$http_x_forwarded_for\"\r\n                      \"\\t$host\"\r\n                      \"\\t$hostname\"\r\n                      \"\\t$scheme\"\r\n                      \"\\t$server_name\"\r\n                      \"\\t$ssl_protocol\"\r\n                      \"\\t$ssl_server_name\"\r\n                      \"\\t$server_protocol\"\r\n                      \"\\t$ssl_cipher\"\r\n                      \"\\t$ssl_session_reused\"\r\n                      \"\\t$pipe\"\r\n                      \"\\t$tcpinfo_rtt\"\r\n                      \"\\t$upstream_addr\"\r\n                      \"\\t$upstream_connect_time\"\r\n                      \"\\t$upstream_response_time\"\r\n                      \"\\t$msec\"\r\n                      \"\\t$upstream_status\";\r\n```\r\n\r\n\r\nlog:\r\n\r\n    127.0.0.1       14/May/2020:17:05:47 +0800      GET HTTP://test.vip.com/123 HTTP/1.1  0.115   200     2       -curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.21.7 OpenSSL/1.0.0r zlib/1.2.3   -       ydtest.vip.com  xxx.com http    test.vip.com  -       -       HTTP/1.1        -       -       .       1000    10.198.189.46:80  0.057   0.115   1589447147.239  200\r\n\r\nwhat's wrong??\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1769/comments",
    "author": "xhhan",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-05-16T15:31:19Z",
        "body": "You won't be able to fully parse it as it's not delimited. For instance there's no delimiter between the user agent. Closest would be:\r\n\r\n    goaccess access.log --log-format='%h %d:%t %^ %m %U %H %T %s %b %u %^' --date-format=%d/%b/%Y --time-format=%T\r\n\r\nI'd set delimiters in that log format."
      },
      {
        "user": "allinurl",
        "created_at": "2020-12-17T20:06:50Z",
        "body": "Closing this."
      }
    ]
  },
  {
    "number": 1761,
    "title": "geoip-database",
    "created_at": "2020-05-08T07:30:39Z",
    "closed_at": "2020-05-09T21:06:05Z",
    "labels": [
      "question",
      "build",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1761",
    "body": "configure :\r\n./configure --prefix=$GOACCESS --enable-utf8 --with-getline --with-openssl --enable-geoip=../goaccess/lib/GeoLite2-City.mmdb\r\nsudo make && make install\r\ngoaccess.conf:\r\nlog-format COMBINED\r\nwith-mouse false\r\nreal-time-html true\r\nlog-file /www/wwwlogs/192.168.0.172.log\r\nlog-file /www/wwwlogs/access.log\r\nhttp-method yes\r\nhttp-protocol yes\r\noutput /www/wwwroot/app/public/1.html\r\nreal-os true\r\ngeoip-database ../../lib/GeoLite2-City.mmdb\r\nstatic-file .css\r\n......\r\nstartrun:\r\n\r\nunrecognized option '--geoip-database'",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1761/comments",
    "author": "q5451227",
    "comments": [
      {
        "user": "ajayramaswamy",
        "created_at": "2020-05-09T02:53:29Z",
        "body": "no the correct way is\r\n./configure --enable-debug --enable-geoip=mmdb --enable-utf8 --with-getline --with-openssl\r\n\r\nand then later in the config file /etc/goaccess/goacces.conf\r\nadd\r\n\r\ndb-path /var/cache/goaccess/\r\npersist true\r\nrestore true\r\ngeoip-database /usr/share/GeoIP/GeoLite2-City.mmdb\r\n"
      },
      {
        "user": "q5451227",
        "created_at": "2020-05-09T03:02:12Z",
        "body": "Thank you\r\nExcuse me:If the terminal is closed, the program can still output logs(not shutdown)"
      },
      {
        "user": "allinurl",
        "created_at": "2020-05-09T21:06:05Z",
        "body": "@q5451227 Yes, please run goaccess with the option `--daemonize`"
      }
    ]
  },
  {
    "number": 1759,
    "title": "Help with custom log format",
    "created_at": "2020-05-07T07:21:42Z",
    "closed_at": "2020-05-18T20:27:39Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1759",
    "body": "my nginx log format below:\r\n```\r\nlog_format json '{\"@timestamp\": \"$time_iso8601\", '\r\n        '\"client_ip\": \"$remote_addr\", '\r\n        '\"xff\": \"$http_x_forwarded_for\", '\r\n        '\"server_ip\": \"$server_addr\", '\r\n        '\"method\": \"$request_method\", '\r\n        '\"uri\": \"$request_uri\", '\r\n        '\"http_protocol\": \"$server_protocol\", '\r\n        '\"response_code\": \"$status\", '\r\n        '\"request_length\": \"$request_length\", '\r\n        '\"sent\": \"$bytes_sent\", '\r\n        '\"body_bytes_sent\": \"$body_bytes_sent\", '\r\n        '\"upstream_status\": \"$upstream_status\", '\r\n        '\"upstream_response_time\": \"$upstream_response_time\", '\r\n        '\"upstream_connect_time\": \"$upstream_connect_time\", '\r\n        '\"upstream_header_time\": \"$upstream_header_time\", '\r\n        '\"referer\": \"$http_referer\", '\r\n        '\"agent\": \"$http_user_agent\", '\r\n        '\"connection\": \"$connection\", '\r\n        '\"pipe\": \"$pipe\", '\r\n        '\"connection_requests\": \"$connection_requests\"}';\r\n```\r\n\r\nsome logs sample:\r\n```\r\n{\"@timestamp\": \"2020-05-07T06:46:56+00:00\", \"client_ip\": \"10.0.2.39\", \"xff\": \"197.46.14.49\", \"server_ip\": \"10.0.20.36\", \"method\": \"GET\", \"uri\": \"/v2/rooms/msg\", \"http_protocol\": \"HTTP/1.1\", \"response_code\": \"200\", \"request_length\": \"1164\", \"sent\": \"227\", \"body_bytes_sent\": \"12\", \"upstream_status\": \"200\", \"upstream_response_time\": \"0.036\", \"upstream_connect_time\": \"0.000\", \"upstream_header_time\": \"0.036\", \"referer\": \"-\", \"agent\": \"other/3.3.2(device_id/f8c81e06be256b94;network/wifi;channel/googleplay;pid/414;version/3.3.2;device_platform/android;device_type/E1 Plus;device_brand/ILA;os_api/27;os_version/8.1.0;country/;resolution/480*888;dpi/240;uuid/ff-2fd35179-eb16-4074-805d-d4fa853af854)\", \"connection\": \"12450\", \"pipe\": \".\", \"connection_requests\": \"3\"}\r\n\r\n{\"@timestamp\": \"2020-05-07T06:48:43+00:00\", \"client_ip\": \"10.0.2.39\", \"xff\": \"-\", \"server_ip\": \"10.0.20.36\", \"method\": \"GET\", \"uri\": \"/v1/sts/status\", \"http_protocol\": \"HTTP/1.1\", \"response_code\": \"200\", \"request_length\": \"138\", \"sent\": \"240\", \"body_bytes_sent\": \"30\", \"upstream_status\": \"200\", \"upstream_response_time\": \"0.012\", \"upstream_connect_time\": \"0.000\", \"upstream_header_time\": \"0.012\", \"referer\": \"-\", \"agent\": \"ELB-HealthChecker/2.0\", \"connection\": \"12566\", \"pipe\": \".\", \"connection_requests\": \"1\"}\r\n\r\n{\"@timestamp\": \"2020-05-07T06:47:29+00:00\", \"client_ip\": \"10.0.17.232\", \"xff\": \"157.43.223.27\", \"server_ip\": \"10.0.20.36\", \"method\": \"POST\", \"uri\": \"/v2/action_log/user_event_log\", \"http_protocol\": \"HTTP/1.1\", \"response_code\": \"200\", \"request_length\": \"1770\", \"sent\": \"227\", \"body_bytes_sent\": \"12\", \"upstream_status\": \"200\", \"upstream_response_time\": \"0.060\", \"upstream_connect_time\": \"0.000\", \"upstream_header_time\": \"0.060\", \"referer\": \"-\", \"agent\": \"other/3.3.3(device_id/4ecc95ed6c248fd8;network/4g;channel/googleplay;pid/414;version/3.3.3;device_platform/android;device_type/HRY-AL00;device_brand/HONOR;os_api/29;os_version/10;country/;resolution/1080*2139;dpi/480;uuid/ff-814a68fd-da25-4e94-a788-bddc6e410f43)\", \"connection\": \"12470\", \"pipe\": \".\", \"connection_requests\": \"12\"}\r\n\r\n```\r\n\r\nmy goaccess settings:\r\n```\r\n--log-format='%^: \"%dT%t+%^\", %^: %^, %^: ~h{,\" }, %^: \"%m\", %^: \"%U\", %^: \"%H\", %^: \"%s\", %^: %^, %^: %^, %^: \"%b\", %^: %^, %^: \"%T\", %^: %^, %^: %^, %^: \"%R\", %^: \"%u\", %^: %^, %^: %^, %^: %^' --date-format='%Y-%m-%d' --time-format='%T'\r\n```\r\nit works, but not works well.\r\n1. after \"xff\" field here has \"server_ip\" filed but --log-format can't parse it \r\n2. only one visitor and one URLs found ?\r\n```\r\n--log-format='%^: \"%dT%t+%^\", %^: %^, %^: ~h{,\" }, %^: %^, %^: \"%m\", %^: \"%U\", %^: \"%H\", %^: \"%s\", %^: %^, %^: %^, %^: \"%b\", %^: %^, %^: \"%T\", %^: %^, %^: %^, %^: \"%R\", %^: \"%u\", %^: %^, %^: %^, %^: %^' --date-format='%Y-%m-%d' --time-format='%T'\r\n```\r\nwhy it doesn't work? ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1759/comments",
    "author": "codiy1992",
    "comments": [
      {
        "user": "codiy1992",
        "created_at": "2020-05-17T04:48:08Z",
        "body": "help me please"
      },
      {
        "user": "allinurl",
        "created_at": "2020-05-17T12:30:24Z",
        "body": "Sorry for the delay on this response, this should work:\r\n\r\n    goaccess access.log --log-format='%^: \"%dT%t+%^\",%^:%^: \"%h\",%^:%^: \"%m\",%^: \"%U\",%^: \"%H\",%^: \"%s\",%^: \"%b\",%^,%^,%^,%^: \"%T\",%^,%^,%^: \"%R\",%^: \"%u\",%^' --date-format=%Y-%m-%d --time-format=%T"
      }
    ]
  },
  {
    "number": 1736,
    "title": "Counts hits etc multiple times if log configured in .conf & command line",
    "created_at": "2020-04-14T03:40:56Z",
    "closed_at": "2020-04-14T20:58:42Z",
    "labels": [
      "question",
      "on-disk"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1736",
    "body": "I've only been using Goaccess for a few days and love it but was surprised to see my web traffic almost doubled over a period of one hour.\r\n\r\nI'm using version 1.3 on  Centos 7.\r\n\r\nI checked the stats in the usual way and then closed it. Came back an hour later and reloaded it and found web traffic had doubled. The difference being that I had configured the goaccess.conf and included the log file to read and then loaded from the command line using \"sudo goaccess /var/log/nginx/access.log\"\r\n\r\nIt would seem goaccess read /var/log/nginx/access.log from the config file and then again from the command line and processed it twice.\r\n\r\nIs it possible to add an internal check to see if the log file has been re-specified? I'm likely to do it again and be just as confused as I was earlier.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1736/comments",
    "author": "Admiral-Noisy-Bottom",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-04-14T12:31:05Z",
        "body": "I'm guessing you are using the on-disk storage? If that's the case, the soon-to-be-release version will have this protection. #334 "
      },
      {
        "user": "Admiral-Noisy-Bottom",
        "created_at": "2020-04-14T20:58:42Z",
        "body": "Brilliant, thanks. It isn't a real issue but it was confusing until I realized my mistake.\r\n\r\nThanks again."
      }
    ]
  },
  {
    "number": 1734,
    "title": "GeoIP legacy in Docker image",
    "created_at": "2020-04-11T22:46:40Z",
    "closed_at": "2020-05-19T00:46:06Z",
    "labels": [
      "question",
      "dependencies",
      "docker"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1734",
    "body": "Could there be geoip legacy support within the docker image?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1734/comments",
    "author": "realies",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-04-13T03:47:47Z",
        "body": "Any advantage of having a legacy support?"
      }
    ]
  },
  {
    "number": 1731,
    "title": "为什么时隔2年 还没有发布新版本？",
    "created_at": "2020-04-08T03:39:49Z",
    "closed_at": "2020-04-09T00:57:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1731",
    "body": "为什么300多的issues没有人解决？",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1731/comments",
    "author": "letwang",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-04-08T13:14:01Z",
        "body": "v1.4 will be released pretty soon (hoping this month).\r\n\r\nPlease feel free to help lower the 300 opened issues :)"
      }
    ]
  },
  {
    "number": 1723,
    "title": "Custom log format request",
    "created_at": "2020-03-31T04:51:20Z",
    "closed_at": "2020-12-17T19:55:57Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1723",
    "body": "Hi everyone,\r\n\r\nHere is my nginx log.\r\n\r\n    2020-03-22T04:27:07+07:00 10.1.71.26 \"GET /intranet/intranet.php HTTP/1.1\" - 301 0.000 520 162 \"-\" \"Mozilla/5.0 (Linux; Android 6.0.1; SM-N910C) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.149 Mobile Safari/537.36\" \"-\"\r\n\r\nand this is nginx config.\r\n`'$time_iso8601 $remote_addr \"$request\" ' '$upstream_cache_status $status $request_time $bytes_sent $body_bytes_sent ' '\"$http_referer\" \"$http_user_agent\" \"$http_x_forwarded_for\" '`\r\n\r\nPlease help me create log-format.\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1723/comments",
    "author": "phanumax",
    "comments": [
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2020-09-17T23:48:14Z",
        "body": "Try this:\r\n\r\n`time-format %T%Z`  or in same way `time-format %H:%M:%S%Z`\r\n`date-format %F`\r\n`log_format %dT%t %h \"%r\" %C %s %T %b %^ \"%R\" \"%u\" \"%^\"`\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2020-12-17T19:55:57Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1714,
    "title": "Issue in Custom Log Format",
    "created_at": "2020-03-26T06:59:06Z",
    "closed_at": "2020-12-17T15:14:18Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1714",
    "body": "Hi Everyone,\r\n  I am new to goaccess. My Custom Log format in apache is:- \r\nLogFormat \"%h %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-agent}i\\\" %A %D %H %p %P %q %T %U\" combined\r\n\r\nHow do i permanently set it in my goaccees.  i tried but getting errors. the specifiers are different in goaccess. Can any one help me out with this",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1714/comments",
    "author": "prakashk22",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-05-19T00:31:07Z",
        "body": "Please post a few lines from your log and I can take a look at it."
      },
      {
        "user": "allinurl",
        "created_at": "2020-12-17T15:14:18Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1711,
    "title": "How to enable on-disk support from development version?",
    "created_at": "2020-03-24T11:13:59Z",
    "closed_at": "2020-03-25T12:23:34Z",
    "labels": [
      "question",
      "on-disk"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1711",
    "body": "When I try to run:\r\n`./configure --enable-utf8 --enable-tcb=btree --with-openssl`\r\n\r\nAnd in the final of the output there is a line `configure: WARNING: unrecognized options: --enable-tcb`\r\n\r\nIf I build the source code without appending `--enable-tcb=btree`, when I try to run:\r\n`goaccess history.log --keep-db-files`\r\n\r\nIt just shows:\r\n`goaccess: unrecognized option '--keep-db-files'`\r\n\r\nBTW I'm using Ubuntu 18.04",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1711/comments",
    "author": "arischow",
    "comments": [
      {
        "user": "arischow",
        "created_at": "2020-03-24T11:40:30Z",
        "body": "OK I checked the git log and I found there's new option named `--keep-last=<NUM>`\r\n\r\nIf I am correct, I should use `--keep-last=<NUM> --persist --restore`."
      },
      {
        "user": "allinurl",
        "created_at": "2020-03-24T12:38:12Z",
        "body": "There are three options. `--persist` `--restore` `--db-path=<dir>` by default it saves all data to /tmp"
      },
      {
        "user": "allinurl",
        "created_at": "2020-03-24T12:43:41Z",
        "body": "BTW, `--keep-last` it's used to only show the last x number of days. e.g., show last 5 days and regardless of how many days it parsed. It does clean up the data that's not within those X days if new data is appended."
      },
      {
        "user": "arischow",
        "created_at": "2020-03-25T03:21:08Z",
        "body": "Thanks for your reply. I think it will be better to update the documentation for dev version 😄 "
      },
      {
        "user": "allinurl",
        "created_at": "2020-03-25T12:23:34Z",
        "body": "It will before v1.4 is released. Thanks for the heads up"
      }
    ]
  },
  {
    "number": 1697,
    "title": "Format error-please check your log / date / time format due to locale",
    "created_at": "2020-03-09T06:13:37Z",
    "closed_at": "2020-12-17T20:03:05Z",
    "labels": [
      "question",
      "log/date/time format",
      "i18n"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1697",
    "body": "time-format %H:%M:%S\r\ndate-format %d/%b/%Y\r\nlog-format %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"\r\n\r\n\r\nToken '09/Mar/2020' doesn't match specifier '%d'\r\n\r\n     127.0.0.1 - - [09/Mar/2020:14:01:24 +0800] \"GET /test/nginx_log.html HTTP/1.1\" 200 331225 \"-\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36\" \"-\"\r\n\r\n\r\nNo reason found🤢",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1697/comments",
    "author": "ychunc",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-03-10T14:05:08Z",
        "body": "Please use the following, I'm guessing your log has English dates and your machine has a different locale.\r\n\r\n    LANG=\"en_US.UTF-8\" bash -c 'goaccess access.log'"
      },
      {
        "user": "Globulopolis",
        "created_at": "2020-04-17T14:47:31Z",
        "body": "@allinurl  same issue on Windows platform with non-english locale. Can we somehow fix it without adding `LANG` and changing default location in Windows?"
      },
      {
        "user": "allinurl",
        "created_at": "2020-12-17T20:03:04Z",
        "body": "@Globulopolis goaccess uses `strptime` `strftime` to perform date stuff. The issue here is that the server is logging the date in English so I guess we could let the user set the locale as a command line option? which essentially `LANG` is doing.\r\n\r\nClosing this, feel free to create a new issue if needed. Thanks"
      }
    ]
  },
  {
    "number": 1693,
    "title": "How to analyze zipped log files on a remote webserver?",
    "created_at": "2020-03-04T18:37:26Z",
    "closed_at": "2021-02-09T01:38:55Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1693",
    "body": "I want to set up goaccess on my local RaspberryPi and after that I want to analyze logfiles from a few remote server of the same provider. This provider stores all the logfiles in /logs\r\n\r\nSo far so good...\r\n\r\nBut... all these logfiles are zipped like: access_log_2020-03-03.gz\r\nIs it somehow possible to read these zipped logfiles with goaccess?\r\n\r\nThanks in advance... :)",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1693/comments",
    "author": "JoshDebris",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-03-04T19:10:15Z",
        "body": "Great question. I'd use `sshfs` and mount that directory on your RaspberryPi."
      },
      {
        "user": "JoshDebris",
        "created_at": "2020-03-04T20:09:46Z",
        "body": "Thank you for that tip.\r\n\r\nI'm totaly overwhelmed wth the whole Linux stuff.... but I will read the documentation about sshfs.\r\nHopefully I can get goaccess running at all? ;-)"
      },
      {
        "user": "allinurl",
        "created_at": "2020-03-04T20:32:54Z",
        "body": "You should be able to run it as (assuming debian on the RaspberryPi):\r\n\r\n```\r\n  # apt-get install sshfs\r\n  # mkdir /home/your_user/logs\r\n  # sshfs remote_user@remote_server.com:/var/log/apache2/ /home/your_user/logs\r\n  # zcat -f /home/your_user/logs/access.log* | goaccess - --log-format=COMBINED\r\n```"
      },
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2020-09-18T00:14:18Z",
        "body": "I use `socat` for transfer and real-time analysis.\r\nHowever, you will need to have a permanent link and some mechanism/trick to deal with any failure."
      },
      {
        "user": "allinurl",
        "created_at": "2021-02-09T01:38:55Z",
        "body": "You could try:\r\n\r\n    # ssh -n root@server 'zcat -f /var/log/apache2/access_log*' | goaccess -\r\n\r\n**Note**: SSH requires `-n` so GoAccess can read from stdin. Also, make sure to use SSH keys for authentication as it won't work if a passphrase is required."
      }
    ]
  },
  {
    "number": 1680,
    "title": "How the bandwith are calculated ?",
    "created_at": "2020-02-24T10:02:07Z",
    "closed_at": "2020-02-25T13:23:56Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1680",
    "body": "Hello,\r\nThis is a question about the bandwith statistics, how goacces get this info. ?\r\nIn my log format i don't have this information\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1680/comments",
    "author": "vdeville",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-02-24T13:29:20Z",
        "body": "If it's not as part of your log, then it won't be able to calculate it."
      },
      {
        "user": "vdeville",
        "created_at": "2020-02-24T18:18:34Z",
        "body": "Hello, what’s is TX and RX in the report ? \n\n\n\nSent from my iPhone\n\n> On 24 Feb 2020, at 14:29, Gerardo O. <notifications@github.com> wrote:\n> \n> ﻿\n> If it's not as part of your log, then it won't be able to calculate it.\n> \n> —\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub, or unsubscribe.\n"
      },
      {
        "user": "allinurl",
        "created_at": "2020-02-24T19:07:29Z",
        "body": "There's only T.X. It's the accumulated \"bandwidth\" from the access log."
      },
      {
        "user": "vdeville",
        "created_at": "2020-02-24T19:12:47Z",
        "body": "Yeah, but in my access log i not have bandwith"
      },
      {
        "user": "allinurl",
        "created_at": "2020-02-24T19:23:21Z",
        "body": "It would need to be in the log, otherwise there's no way to report it out."
      },
      {
        "user": "allinurl",
        "created_at": "2020-02-25T13:23:56Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1669,
    "title": "Tomcat 8.5.47 COMBINED",
    "created_at": "2020-02-13T23:20:24Z",
    "closed_at": "2020-02-13T23:37:51Z",
    "labels": [
      "question",
      "log/date/time format",
      "i18n"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1669",
    "body": "Hi, I use lastest release:\r\n```\r\n$ goaccess --version\r\nGoAccess - 1.3.\r\n```\r\n\r\nI have set up server.xml as\r\n\r\n```\r\n<Valve className=\"org.apache.catalina.valves.AccessLogValve\" directory=\"logs\"\r\n          prefix=\"api-example_access_log\" suffix=\".txt\"\r\n          pattern=\"combined\" />\r\n```\r\n\r\nthan after restart new file generated logs like:\r\n\r\n> 127.0.0.1 - - [13/Feb/2020:23:29:49 +0100] \"GET / HTTP/1.1\" 302 - \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0\"\r\n> 127.0.0.1 - - [13/Feb/2020:23:29:50 +0100] \"GET /login/auth HTTP/1.1\" 200 2283 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0\"\r\n> 127.0.0.1 - - [13/Feb/2020:23:29:50 +0100] \"GET /favicon.ico HTTP/1.1\" 404 46 \"-\" \"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:72.0) Gecko/20100101 Firefox/72.0\"\r\n> \r\n\r\n### COMBINED \r\n after running\r\n`$ goaccess ./logs/api-example_access_log.2020-02-13.txt --log-format=COMBINED`\r\n\r\nI received:\r\n\r\n>  Parsing... [0] [0/s]                                                                                                                                             /./logs/api-example_access_log.2020-02-13.txt\r\n> Parsed 1 linesproducing the following errors:\r\n> \r\n> Token '13/Feb/2020' doesn't match specifier '%d'\r\n> \r\n> Format Errors - Verify your log/date/time format\r\n\r\nsame error pops up if I start goaccess without `--log-format` param and choose `NCSA Combined Log Format `\r\n\r\nsame issue if I run \r\n`$ LANG=\"en_US.UTF-8\" bash -c 'goaccess ./logs/api-example_access_log.2020-02-13.txt --log-format=COMBINED'`\r\n\r\n###  VCOMBINED\r\n\r\n after running\r\n`$ goaccess ./logs/api-example_access_log.2020-02-13.txt --log-format=VCOMBINED`\r\n\r\nI received:\r\n\r\n>  Parsing... [0] [0/s]                                                                                                                                             /./logs/api-example_access_log.2020-02-13.txt\r\n> Parsed 1 linesproducing the following errors:\r\n> \r\n> Token '+0100]' doesn't match specifier '%h'\r\n> \r\n> Format Errors - Verify your log/date/time format\r\n\r\nsam eissue if I run \r\n`LANG=\"en_US.UTF-8\" bash -c 'goaccess ./logs/api-example_access_log.2020-02-13.txt --log-format=VCOMBINED'`\r\n\r\n```\r\n$ uname -a\r\nFreeBSD example.com 11.3-RELEASE-p3 FreeBSD 11.3-RELEASE-p3 #1: Tue Oct 15 01:53:29 CEST 2019\r\n```\r\n\r\nAny help will be appreciated\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1669/comments",
    "author": "majkelo",
    "comments": [
      {
        "user": "majkelo",
        "created_at": "2020-02-13T23:37:51Z",
        "body": "### Solution\r\n\r\n`LC_ALL=\"en_US.UTF-8\" bash -c 'goaccess ./logs/api-example_access_log.2020-02-13.txt --log-format=COMBINED'`\r\n\r\n### Explanation\r\n\r\nmy system has different locale:\r\n\r\n```\r\n$ locale\r\nLANG=\r\nLC_CTYPE=pl_PL.UTF-8\r\nLC_COLLATE=pl_PL.UTF-8\r\nLC_TIME=pl_PL.UTF-8\r\nLC_NUMERIC=pl_PL.UTF-8\r\nLC_MONETARY=pl_PL.UTF-8\r\nLC_MESSAGES=pl_PL.UTF-8\r\nLC_ALL=\r\n```\r\nI had to explicitly enforce US locale (for alphabetic name of the month)"
      },
      {
        "user": "allinurl",
        "created_at": "2020-02-14T00:36:01Z",
        "body": "Good call on that. Probably a better error message should be displayed on those cases."
      }
    ]
  },
  {
    "number": 1668,
    "title": "Parsing access log date and time in a single variable tab delimited",
    "created_at": "2020-02-12T14:10:42Z",
    "closed_at": "2020-02-13T14:50:40Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1668",
    "body": "Hi all, I'm new to goaccess and I'm trying to my web access log to be inspect:\r\n\r\nthis is my apache log format: \r\n\r\n`LogFormat \"%V\\t%h\\t%{SSL_PROTOCOL}x\\t%{SSL_CIPHER}x\\t%{SSL_CLIENT_S_DN_CN}x\\t%u\\t%{%d/%m/%Y %T %Z}t\\t%{UNIQUE_ID}e\\t%{JSESSIONID}C\\t%H\\t%m\\t%U\\t\\\"%q\\\"\\t%>s\\t%b\\t\\\"%{Referer}i\\\"\\t\\\"%{User-Agent}i\\\"\\t%D\\t%X\\t%I\\t%O\" mycustumlog\r\n`\r\n\r\n\r\nexample output:\r\n\r\n\r\n    www.test.it   192.168.253.176                 -       -       20/01/2020 01:00:47 CET XiTtr38AAAEAAAzn8PkAAABX        7E7E5A44F91C8095E2E6EC57EBD0221E        HTTP/1.1        GET     0       /cms/   \"\"      200     143296  \"-\"     \"Zabbix\"        309722  +       477     147885\r\n\r\n`\r\nI try with:\r\n\r\n`goaccess access.log -o report.html  -p /etc/goaccess/goaccess.conf  --time-format='%H:%M:%S %Z' --date-format='%d/%m/%Y' --log-format='%v\\t%h\\t-\\t-\\t-\\t%d\\t'`\r\n\r\nbut I get:\r\n\r\n```\r\nParsed 1 linesproducing the following errors:\r\n\r\nToken '20/01/2020 01:00:47 CET' doesn't match specifier '%d'\r\n\r\nFormat Errors - Verify your log/date/time format\r\n\r\n```\r\nCould anyone help? \r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1668/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-02-12T15:14:11Z",
        "body": "For this log:\r\n\r\n```\r\nwww.test.it\t192.168.253.176\t-\t-\t20/01/2020 01:00:47 CET\tXiTtr38AAAEAAAzn8PkAAABX\t7E7E5A44F91C8095E2E6EC57EBD0221E\tHTTP/1.1\tGET\t0\t/cms/\t\"\"\t200\t143296\t\"-\"\t\"Zabbix\"\t309722\t+\t477\t147885\r\n```\r\n\r\nThis should work:\r\n\r\n    goaccess access.log --log-format='%v\\t%h\\t%^\\t%^\\t%d %t %^\\t%^\\t%^\\t%H\\t%m\\t%^\\t%U\\t\"%q\"\\t%%s\\t%b\\t^\"%R\"\\r\"%u\"\\t%D\\t%^' --date-format=%d/%m/%Y --time-format=%T"
      },
      {
        "user": "ghost",
        "created_at": "2020-02-13T08:12:59Z",
        "body": "thank you so much! I add some extra %^ to parse \"-\" chars and now the magic string:\r\n\r\n     goaccess access.log --log-format='%v\\t%h\\t%^\\t%^\\t%^\\t%^\\t%d %t %^\\t%^\\t%^\\t%H\\t%m\\t%^\\t%U\\t\"%q\"\\t%%s\\t%b\\t^\"%R\"\\r\"%u\"\\t%D\\t%^' --date-format=%d/%m/%Y --time-format=%T\r\n\r\nthanks for help! Great software!!!"
      },
      {
        "user": "allinurl",
        "created_at": "2020-02-13T14:50:40Z",
        "body": "Glad that did the job :)"
      }
    ]
  },
  {
    "number": 1664,
    "title": "AWS Beanstalk Custom Access Log Format",
    "created_at": "2020-02-03T18:50:08Z",
    "closed_at": "2020-05-19T00:28:50Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1664",
    "body": "Im trying to figure out how to set the custom access log for Beanstalk\r\n\r\nThe example \r\n\r\n> 172.31.13.163 (45.56.150.80, 172.31.13.163) - - [15/Jan/2020:20:02:40 +0000] \"GET /test?station=25&playtime=cool/playlist.m3u8 HTTP/1.1\" 200 975 \"-\" \"Mozilla/5.0 (Linux; Android 7.1.2; AFTMM Build/NS6268; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/70.0.3538.110 Mobile Safari/537.36\"\r\n\r\nI hope this helps \r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1664/comments",
    "author": "colender",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-02-03T23:59:38Z",
        "body": "Please try:\r\n\r\n    goaccess access.log --log-format=COMBINED\r\n"
      },
      {
        "user": "colender",
        "created_at": "2020-02-04T00:02:30Z",
        "body": "It worked thank you!! "
      },
      {
        "user": "colender",
        "created_at": "2020-02-04T22:38:26Z",
        "body": "How would I be able to get the X-FORWARDED ip the part (45.56.150.80, 172.31.13.163) with COMBINED it doesn't get the ip from the user Im just getting the ip from the server. I have tried to use. \r\n`--log-format= %h (~h{,}) -- [%d:%t %^] \"%m %U %H\" %s %b \"%R\" \"%u\" --date-format=%d/%b/%Y --time-format=%T`\r\n I tried that but I get a %h has been specified error "
      },
      {
        "user": "allinurl",
        "created_at": "2020-02-05T17:26:46Z",
        "body": "Close, this should work:\r\n\r\n    goaccess access.log --log-format='%^ (~h{, }) %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "allinurl",
        "created_at": "2020-05-19T00:28:50Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1655,
    "title": "Unknown browser behind apache reverse proxy",
    "created_at": "2020-01-18T12:16:00Z",
    "closed_at": "2020-01-21T19:23:32Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1655",
    "body": "Hi,\r\n\r\nmy webserver is behind an apache reverse proxy. Therefore my apache LogFormat looks like this:\r\n`LogFormat \"%a %l %u %t \\\"%r\\\" %>s %O \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" proxy`\r\n\r\nOutput:\r\n`192.168.99.1 - - [18/Jan/2020:13:37:36 +0100] \"GET /favicon.ico HTTP/1.1\" 301 232 \"-\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:72.0) Gecko/20100101 Firefox/72.0\"`\r\n\r\nIf i choose the \"Common Log Format (CLF)\" in goaccesss.conf, it does work, but shows 100% unknown browsers.\r\nI tried a few other strings without success.\r\n\r\nWhat would be the correct logformat in goaccess.conf?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1655/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2020-01-21T01:54:36Z",
        "body": "Looks like the COMBINED format. Please try passing\r\n\r\n    goaccess access.log --log-format=COMBINED\r\n\r\nOtherwise, feel free to post a few lines from your access log and I can take a look. Thanks"
      },
      {
        "user": "ghost",
        "created_at": "2020-01-21T19:23:32Z",
        "body": "Thank you, that works! "
      }
    ]
  },
  {
    "number": 1639,
    "title": "Token '26/12/2019' doesn't match specifier '%d'",
    "created_at": "2019-12-26T14:57:03Z",
    "closed_at": "2019-12-27T05:36:17Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1639",
    "body": "My Log format is\r\n\r\n```\r\n26/12/2019 20:23:22 | 106.51.74.192, 106.51.74.192 |  \"GET / HTTP/1.1\" 304 - \"-\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36\"\r\n```\r\n\r\n***used command***\r\n\r\n```\r\ngoaccess app.log -o root/public/report.html --log-format=COMBINED --real-time-html --log-format='%d %t %^ %h %^ \"%m %r %H\" %s %^ \"%^\" \"%u\" --date-format=%d/%m/%Y --time-format=%T'\r\n```\r\n\r\nit's showing error\r\n```\r\nParsed 1 linesproducing the following errors:\r\nToken '26/12/2019' doesn't match specifier '%d'\r\nFormat Errors - Verify your log/date/time format\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1639/comments",
    "author": "devv-aman",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-12-26T16:01:45Z",
        "body": "Please try this, it should do it:\r\n\r\n     goaccess access.log --log-format='%d %t %^ ~h{,| } %^\"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%m/%Y --time-format=%T"
      }
    ]
  },
  {
    "number": 1634,
    "title": "doesn't work two parameters together",
    "created_at": "2019-12-25T08:34:22Z",
    "closed_at": "2020-11-25T02:49:46Z",
    "labels": [
      "question",
      "html report",
      "terminal output",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1634",
    "body": "goaccess /var/tmp/access.log-20191201 /var/tmp/access.log-20191208 -a **-o report.html**  **--config-dialog**\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1634/comments",
    "author": "almirus",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-12-26T16:12:00Z",
        "body": "When outputting to a file, you can't prompt the config dialog as ncurses is disabled. You will need to specify the log either in your config file or using a CLI option. "
      },
      {
        "user": "almirus",
        "created_at": "2019-12-26T20:11:22Z",
        "body": "I tried using config file, but can't add leading space #1635 \r\n`log-format [space]%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"`"
      },
      {
        "user": "allinurl",
        "created_at": "2020-01-02T15:18:42Z",
        "body": "Please try using single quotes. e.g., \r\n\r\n    goaccess access.log --log-format=' %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T"
      }
    ]
  },
  {
    "number": 1621,
    "title": "log format errors",
    "created_at": "2019-12-05T07:03:47Z",
    "closed_at": "2020-05-19T00:52:37Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1621",
    "body": "goaccess nginx.log --log-format='%d\\t%t\\t%m\\t%h\\t%^\\t%R\\t%u\\t%b\\t%^\\t%^\\t%v\\t%T\\t%s\\t%^\\t%U\\t%^' --date-format=%Y-%m-%d --time-format=%T\r\nParsed 10 lines producing the following errors:\r\n\r\nToken for '%d' specifier is NULL.\r\nToken for '%d' specifier is NULL.\r\nToken for '%d' specifier is NULL.\r\nToken for '%d' specifier is NULL.\r\nToken for '%d' specifier is NULL.\r\nToken for '%d' specifier is NULL.\r\nToken for '%d' specifier is NULL.\r\nToken for '%d' specifier is NULL.\r\nToken for '%d' specifier is NULL.\r\nToken for '%d' specifier is NULL.\r\n\r\nFormat Errors - Verify your log/date/time format\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1621/comments",
    "author": "teejaswin",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-12-13T15:51:58Z",
        "body": "Please post some lines from your access log. "
      },
      {
        "user": "gggeek",
        "created_at": "2020-07-30T08:29:38Z",
        "body": "Hello.\r\n\r\nSame error message here.\r\n\r\nThis is my log line:\r\n\r\n`\"192.168.56.1, 172.19.1.10, 127.0.0.81\" 127.0.0.1 - - [30/Jul/2020:09:02:39 +0100] \"GET / HTTP/1.1\" 302 901 \"-\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36\" \"-\" 109488`\r\n\r\nAnd parsing command:\r\n\r\n`goaccess /var/log/apache2/www.access.log --time-format='%H:%M:%S' --date-format='%d/%b/%Y' -a --all-static-files --keep-last=30 --persist -o /tmp/a.html --log-format='~h{,\" } %^ - %e %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %^ %L'`\r\n\r\nApart from the fact that it is not too clear if the '%d' token mentioned in the error message stands for date or for day, I have the following questions:\r\n- in the default config log formats, I see that the square brackets are preceded by '%^'. What is correct to match (and skip parsing) a left bracket: is it '%^[' or simply '[' ?\r\n- same for a literal '-' in the log\r\n- and how to match (and skip) the token '\"something\"', ie. wrapped in double quotes?\r\n- what is the correct time format that would match the timezone after the space, is it: '%H:%M:%S %z'?\r\n"
      },
      {
        "user": "gggeek",
        "created_at": "2020-07-30T08:57:51Z",
        "body": "Answering to my own question(s):\r\n\r\n1. it seems that the correct formats in my case are:\r\n\r\n```\r\ntime-format='%H:%M:%S %z'\r\nlog-format='~h{ \",} %^[%d:%t] \"%r\" %s %b \"%R\" \"%u\" \"%^\" %L'\r\n```\r\n\r\n2. it seems that a single '%^' token does greedy matching, ie. it will match any chars, including whitespace (but probably not a double quote nor slash character). That's why '%^[' can be used to match the string '127.0.0.1 - - ['\r\n\r\nIt would be nice if the parsing tokens were better explained in the docs and default config file.\r\n\r\nAlso: it would be nice to have a token able to match any length of non-whitespace chars - it would make life easier when matching multiple non-quoted fields...\r\n\r\nAnd while I am at it: it could also help troubleshooting if, when a parsing error is found, the program would echo the current-line matched value for each token up to the offending one, eg. in my case the matched value for '~h{ \",}', then the matched value for '%^', etc..."
      },
      {
        "user": "allinurl",
        "created_at": "2020-08-04T01:15:13Z",
        "body": "@gggeek Thanks for the feedback. I can look into those suggestions.\r\n\r\nCan you please post a few lines from your access log so I can take a look at what might be the issue? Thanks again."
      },
      {
        "user": "gggeek",
        "created_at": "2020-08-05T10:25:43Z",
        "body": "Hello. Thanks for replying.\r\n\r\nI have pasted in my first comment an example of what my log lines look like, as well as a correct log-format string in the 2nd comment (now reformatted for readability).\r\n\r\nI did not keep a copy of the log-format strings which I tested unsuccessfully before managing to build the correct one, however I can tell by memory that I struggled with:\r\n\r\n- parsing the bit `  127.0.0.1 - - [ ` : I tried to use 3 tokens for that, unsuccessfully. I settled on using a single `%^` to match and discard it all even though at least the 2nd dash might actually be used by goaccess when it is not a dash but a username (we do use basic auth for some parts of the site)\r\n\r\n- understanding what is matched by `%^`\r\n\r\n- understanding how to match bits like `-` and `\"hello\"`\r\n"
      }
    ]
  },
  {
    "number": 1600,
    "title": "Token '2019-08-07' doesn't match specifier '%h'",
    "created_at": "2019-11-11T11:27:09Z",
    "closed_at": "2022-01-21T01:03:31Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1600",
    "body": "I am trying to load an IIS log file to goaccess, and I get the message above.\r\n\r\nAny suggestions? I have tried to edit the goaccess.conf file but no progress.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1600/comments",
    "author": "phatjak",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-11-11T23:27:13Z",
        "body": "Please post a few lines from your access log and the description of each field."
      },
      {
        "user": "phatjak",
        "created_at": "2019-11-12T09:37:13Z",
        "body": "```\r\n#Software: Microsoft Internet Information Services 10.0\r\n#Version: 1.0\r\n#Date: 2019-06-25 00:47:37\r\n#Fields: date time s-ip cs-method cs-uri-stem cs-uri-query s-port cs-username c-ip cs(User-Agent) cs(Referer) sc-status sc-substatus sc-win32-status time-taken\r\n2019-06-25 00:47:37 10.22.1.7 POST /apc/apcwebservice.asmx - 443 - 3.216.62.60 Mozilla/4.0+(compatible;+MSIE+6.0;+MS+Web+Services+Client+Protocol+4.0.30319.42000) - 200 0 0 875\r\n2019-06-25 00:47:37 10.22.1.7 POST /apc/apcwebservice.asmx - 443 - 166.239.39.225 Mozilla/4.0+(compatible;+MSIE+6.0;+MS+Web+Services+Client+Protocol+4.0.30319.42000) - 200 0 0 156\r\n\r\n```"
      },
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2020-09-22T12:40:15Z",
        "body": "Try this, in `goaccess.conf`:\r\n\r\n`time-format %T` or in same way `time-format %H:%M:%S`\r\n`date-format %F`\r\n`log-format %d %t %v %m %U %^ %^ %^ %h %u %R %s %^ %^ %L`\r\n\r\nor in command-line:\r\n`--time-format='...' --date-format='...'  --log-format='...'`\r\n\r\n**notes:**\r\nI used the server's IP for `VHOST`. \r\nIf you don't want to change `%v` with `%^` and disable it\r\nand the Virtual Hosts panel will be too.\r\n\r\nI assumed the `time-taken field` is in _milliseconds_."
      },
      {
        "user": "allinurl",
        "created_at": "2022-01-21T01:03:31Z",
        "body": "Closing this."
      }
    ]
  },
  {
    "number": 1597,
    "title": "No config file used error",
    "created_at": "2019-11-07T18:51:07Z",
    "closed_at": "2019-11-07T20:50:20Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1597",
    "body": "Hi! \r\nI have recently started using goaccess on my Windows PC through CowAxess and I'm encountering the following issue when I enter \r\ngoaccess C:\\cowaxess_x64\\Logfles\\access.log.1 -c \r\n(I have selected the NCSA Combined Log Format)\r\nGoAccess - version 1.3 - Jul 18 2019 15:50:59                                                                           \r\nConfig file: No config file used       \r\n                                                                                                                                                                                                         \r\nFatal error has occurred                                                                                                \r\nError occurred at: src/parser.c - read_log - 2728                                                                       \r\nUnable to open the specified log file. No such file or directory\r\n \r\nlog file:\r\n203.82.24.254 - - [31/Oct/2019:10:43:37 -0700] \"GET /form.htm HTTP/1.1\" 200 1667 \"-\" \"Mozilla/5.0 (compatible; Funnelback)\"\r\n\r\n\r\nAm I missing something? I couldn't find any config file in the installed directory. \r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1597/comments",
    "author": "srikarrampa",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-11-11T18:20:24Z",
        "body": "Just for the record, seems like the issue is related to not finding the access log and not the config file. The `No config file used` is just a note not part of the error. \r\n\r\nFeel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1596,
    "title": "IIS 8.5 : Token 'server' doesn't match specifier '%m'",
    "created_at": "2019-11-07T13:50:36Z",
    "closed_at": "2019-11-11T18:12:33Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1596",
    "body": "Hello,\r\n\r\nI have the following issue and tried a lot of answers from other threads, but no one did it for me : \r\n\r\nmy log is like that  : \r\n\r\n```\r\n#Software: Microsoft Internet Information Services 8.5\r\n#Version: 1.0\r\n#Date: 2018-10-04 14:09:23\r\n#Fields: date time s-sitename s-computername s-ip cs-method cs-uri-stem cs-uri-query s-port cs-username c-ip cs-version cs(User-Agent) cs(Cookie) cs(Referer) cs-host sc-status sc-substatus sc-win32-status sc-bytes cs-bytes time-taken x-forwarded-for\r\n2018-10-05 06:59:10 W3SVC1261474369 srv-cli-nbr-001 10.82.97.10 GET /Notification.svc/not-seen/_count - 80 - 10.169.7.11 HTTP/1.1 - - - rec-svc-cli-fra 500 19 1346 1376 2138 15 -\r\n2018-10-05 06:59:10 W3SVC1261474369 srv-cli-nbr-001 10.82.97.10 GET /UISetting.svc/Shortcuts - 80 - 10.169.7.10 HTTP/1.1 - - - rec-svc-cli-fra 500 19 1346 1376 2129 0 -\r\n2018-10-05 06:59:10 W3SVC1261474369 srv-cli-nbr-001 10.82.97.10 GET /Notification.svc/list/3 - 80 - 10.169.7.11 HTTP/1.1 - - - rec-svc-cli-fra 500 19 1346 1376 2105 0 -\r\n```\r\n\r\nUnfortunately,  when using  \r\n\r\n.\\goaccess.exe -f u_ex181005_x.log --log-format='%d %t %^ %m-%m-%-%-% %U %q %^ %^ %h %u %^' --date-format=%Y-%m-%d --time-format=%T\r\n\r\nI have this result \r\n\r\n```\r\nParsed 1 linesproducing the following errors:\r\nToken 'srv' doesn't match specifier '%m'\r\nFormat Errors - Verify your log/date/time format\r\n```\r\n\r\nI tried a lot of other log format configurations, but i am stuck here! \r\n\r\nThank you!\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1596/comments",
    "author": "almoreau",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-11-07T15:38:28Z",
        "body": "This should work:\r\n\r\n    goaccess access.log --log-format='%d %t %^ %^ %^ %m %U %q %^ %^ %h %H %u %^ %R %v %s %^ %^ %b %L %^' --date-format=%Y-%m-%d --time-format=%T"
      },
      {
        "user": "almoreau",
        "created_at": "2019-11-08T09:05:41Z",
        "body": "Thank you very much, it is ok now!!"
      },
      {
        "user": "allinurl",
        "created_at": "2019-11-11T18:12:33Z",
        "body": "Glad that worked. Closing this."
      }
    ]
  },
  {
    "number": 1585,
    "title": " Problem with the log format",
    "created_at": "2019-10-31T15:01:38Z",
    "closed_at": "2020-12-17T20:05:38Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1585",
    "body": "\r\nHello\r\nThe first thank your help\r\nI have the following error\r\n Token for '% b' specifier is NULL.\r\n\r\nI have the default format after installing ssl (yum install mod_ssl)\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1585/comments",
    "author": "fmartineza",
    "comments": [
      {
        "user": "fmartineza",
        "created_at": "2019-10-31T15:23:32Z",
        "body": "I use\r\nCustomLog logs/ssl_request_log \\\r\n          \"%t %h %{SSL_PROTOCOL}x %{SSL_CIPHER}x \\\"%r\\\" %b\"\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2019-11-01T16:21:45Z",
        "body": "Can you please post a few lines from your access log? Thanks"
      },
      {
        "user": "allinurl",
        "created_at": "2020-12-17T20:05:38Z",
        "body": "For `%{SSL_PROTOCOL}x` `%{SSL_CIPHER}x` you can use `%K` and `%k`. e.g., \r\n\r\n    --log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %K %k'\r\n\r\nClosing this."
      }
    ]
  },
  {
    "number": 1583,
    "title": "Format Error",
    "created_at": "2019-10-31T03:38:34Z",
    "closed_at": "2019-11-01T08:07:56Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1583",
    "body": "Hi,\r\n\r\n    goaccess is amazing!\r\n    But I encountered a problem,\r\n\r\n    I use this 'goaccess -a -d -f /var/log/nginx/access.log --log-format=%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %D --date-format=%d/%b/%Y --time-format=%T -o /root/report.html --real-time-html' to parse my log, but I get following error.\r\n\r\nToken '185.56.159.254 - - [31/Oct/2019:06:35:30 +0800] \"GET / HTTP/1.1\" 200 11 \"-\" \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36\"' doesn't match specifier '%h'\r\n\r\n I am using goaccess 1.2, Can you help me out.\r\n\r\nBest wishes",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1583/comments",
    "author": "inisis",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-11-01T02:43:35Z",
        "body": "Please enclose the log-format in single quotes:\r\n\r\n    goaccess -a -d -f /var/log/nginx/access.log --log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %D' --date-format=%d/%b/%Y --time-format=%T -o /root/report.html --real-time-html"
      }
    ]
  },
  {
    "number": 1579,
    "title": "Token '﻿2015-09-09' doesn't match specifier '%d'",
    "created_at": "2019-10-25T22:02:14Z",
    "closed_at": "2019-10-27T15:46:16Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1579",
    "body": "Did a fair amount of digging and still not seeing what i'm missing here.\r\n\r\n```\r\nGoAccess Command:\r\ngoaccess -f output.log --log-format='%d %t %h %^ %e %m %U %q %s %^ %b %^ %H' --date-format=%Y-%m-%d --time-format=%T -a -o report.html\r\n\r\nParsed 1 linesproducing the following errors:\r\n\r\nToken '﻿2015-09-09' doesn't match specifier '%d'\r\n\r\nFormat Errors - Verify your log/date/time format\r\n\r\nLog: \r\n2015-09-09 18:20:26 192.168.3.35 - - [1]GET / - 302 987 260 - 443 \r\n2015-09-09 18:20:26 192.168.3.35 - - [2]GET /EFTClient/Account/Login.htm - 200 5222 314 - 443 \r\n2015-09-09 18:20:26 192.168.3.35 - - [3]GET /EFTClient/Shared/forms.css - 200 3687 353 - 443 \r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1579/comments",
    "author": "25808383",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-10-25T22:06:48Z",
        "body": "This works for me:\r\n\r\n    goaccess access.log --log-format='%d %t %h %^ %^]%m %U %q %s %D %b %^' --date-format=%Y-%m-%d --time-format=%T --http-protocol=no --ignore-panel=OS --ignore-panel=BROWSERS --ignore-panel=REFERRING_SITES"
      },
      {
        "user": "25808383",
        "created_at": "2019-10-25T22:14:34Z",
        "body": "Same result, I am using CowAxcess if that makes a difference.\r\n\r\nbash-4.4$ goaccess output.log --log-format='%d %t %h %^ %^]%m %U %q %s %D %b %^' --date-format=%Y-%m-%d --time-format=%T --http-protocol=no --ignore-panel=OS --ignore-panel=BROWSERS --ignore-panel=REFERRING_SITES                         \r\n\r\nParsed 1 linesproducing the following errors:\r\n\r\nToken '﻿2015-09-09' doesn't match specifier '%d'\r\n\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2019-10-25T22:16:33Z",
        "body": "What's your locale? e.g., `locale -a`"
      },
      {
        "user": "25808383",
        "created_at": "2019-10-27T14:03:49Z",
        "body": "I tried it in ubuntu (on windows) and got the same result. Cygwin bundled with goaccess didn't have the locale command built-in. I also tried setting the LANG variable but didn't make a difference. Also tried converting the file from Windows (DOS) to unix, no difference, same error.\r\n\r\n**goaccess output.log --log-format='%d %t %h %^ %^]%m %U %q %s %D %b %^' --date-format=%Y-%m-%d --time-format=%T --http-protocol=no --ignore-panel=OS --ignore-panel=BROWSERS --ignore-panel=REFERRING_SITES**\r\nParsed 1 linesproducing the following errors:\r\n\r\nToken '﻿2015-09-09' doesn't match specifier '%d'\r\n\r\nFormat Errors - Verify your log/date/time format\r\n\r\n**locale -a**\r\nC\r\nC.UTF-8\r\nPOSIX\r\nen_US.utf8"
      },
      {
        "user": "25808383",
        "created_at": "2019-10-27T14:26:00Z",
        "body": "When I look at the file in VI/VIM I don't show a space before the first line but I do see it when I view via \"head\". When I delete the first line the space shows up on whatever is the first line.\r\n\r\n$ head output.log\r\n ﻿2015-09-09 18:20:26 192.168.3.35 - - [3]GET /EFTClient/Shared/forms.css - 200 3687 353 - 443\r\n2015-09-09 18:20:26 192.168.3.35 - - [5]GET /EFTClient/Shared/PTCs.js - 200 2195 371 - 443\r\n2015-09-09 18:20:26 192.168.3.35 - - [4]GET /EFTClient/Shared/jquery-1.4.2.min.js - 200 72476 383 - 443"
      },
      {
        "user": "25808383",
        "created_at": "2019-10-27T15:46:16Z",
        "body": "The space was the issue, I still don't get where that is coming from and why it persists (on the new first line) when I delete the line but I just read the files in backward with tac and was able to get my data imported."
      }
    ]
  },
  {
    "number": 1574,
    "title": "Custom Log with delimiter didn't work",
    "created_at": "2019-10-18T11:53:34Z",
    "closed_at": "2019-10-23T15:28:28Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1574",
    "body": "Hi,\r\n\r\nI have costum log Apache HTTPD:\r\n`LogFormat \"%{%Y%m%d,%H%M%S}t,%{msec_frac}t,%h,%D,\\\"%r\\\",%B,\\\"%{Referer}i\\\",\\\"%{User-agent}i\\\",%P,%v,%>s\"`\r\n\r\nOutput: \r\n`20191018,133018,277,202.51.110.214,1171,\"GET / HTTP/1.1\",3503,\"-\",\"Mozilla/5.0 (redhat-x86_64-linux-gnu) Siege/3.0.8\",1127,mediasport.id,200`\r\n\r\nI try with this but It didn't work :\r\n```\r\ngoaccess -f access.log --log-format='%{%Y%m%d,%H%M%S}t,%{msec_frac}t,%h,%D,\\\"%r\\\",%B,\\\"%{Referer}i\\\",\\\"%{User-agent}i\r\n\\\",%P,%v,%>s'  --date-format='%Y%m%d' --time-format='%H%M%S' -o ~/var/www/html/report/report.html\r\n```\r\n\r\nPlease help me\r\n\r\nThank you.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1574/comments",
    "author": "sunardo",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-10-21T14:30:00Z",
        "body": "Please try:\r\n\r\n    goaccess access.log --log-format='%d,%t,%^,%h,%D,\"%r\",%b,\"%R\",\"%u\",%^,%v,%s' --date-format=%Y%m%d --time-format=%H%M%S"
      },
      {
        "user": "allinurl",
        "created_at": "2019-10-23T15:28:28Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1571,
    "title": "macOS 10.15 nginx access_log Token doesn't match specifier '%d",
    "created_at": "2019-10-16T03:09:16Z",
    "closed_at": "2019-10-17T14:48:03Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1571",
    "body": "Hello,\r\n\r\n I keep on getting this error no matter what I do:\r\n\r\n`Token '16/Oct/2019' doesn't match specifier '%d'`\r\n\r\nThe command I am using is:\r\n`goaccess test.nginx.com.log -o ../html/report.html --real-time-html --time-format='%H:%M:%S' --date-format='%d/%b/%Y' --log-format=COMMON`\r\n\r\nI tried other methods and it was the same error.example:\r\n`goaccess test.nginx.com.log -o ../html/report.html --real-time-html --time-format='%H:%M:%S' --date-format='%d/%b/%Y' --log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"'`\r\n\r\nAn example log file line:\r\n`127.0.0.1 - - [16/Oct/2019:10:43:04 +0800] \"GET /report.html HTTP/1.1\" 304 0 \"-\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36\" \"-\"`\r\n\r\nIn addition,the output of `date ` my terminal is :\r\n`2019年10月16日 星期三 11时04分36秒 CST`\r\n\r\nThanks in advance ! :)",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1571/comments",
    "author": "huxxhua",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-10-17T13:56:21Z",
        "body": "Looks like your access log has english dates while your system locale is set to Chinese. \r\n\r\n    LANG=\"en_US.UTF-8\" bash -c 'goaccess access.log --log-format=COMBINED'"
      },
      {
        "user": "huxxhua",
        "created_at": "2019-10-17T14:47:56Z",
        "body": "it work!\r\nI added it`LANG=\"en_US.UTF-8\"` in front of the command line.\r\n\r\nThe command I am using is:\r\n`LANG=\"en_US.UTF-8\" bash -c  'goaccess test.nginx.com.log -o ../html/report.html --real-time-html --time-format='%H:%M:%S' --date-format='%d/%b/%Y' --log-format=COMMON'`\r\n\r\nMaybe the system language affects the match\r\n\r\nanyway,Thank you very much!"
      }
    ]
  },
  {
    "number": 1569,
    "title": "Custom format with only IP and UA",
    "created_at": "2019-10-14T15:32:14Z",
    "closed_at": "2019-10-15T17:09:54Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1569",
    "body": "here is my nginx access_log conf\r\n```\r\nlog_format  main_ext  '$remote_addr - \"$http_user_agent\"';\r\n```\r\n\r\na sample of the access log file\r\n```\r\n156.195.xx.xx - \"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36\"\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1569/comments",
    "author": "XOR-LIFE",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-10-15T13:58:34Z",
        "body": "GoAccess requires the following fields:\r\n\r\n> a valid IPv4/6 %h\r\n> a valid date %d\r\n> the request %r"
      },
      {
        "user": "XOR-LIFE",
        "created_at": "2019-10-15T14:38:13Z",
        "body": "@allinurl \r\nWhat is the minimum log format in Nginx?"
      },
      {
        "user": "allinurl",
        "created_at": "2019-10-15T14:40:34Z",
        "body": "Not sure. I'm guessing only one field?"
      },
      {
        "user": "XOR-LIFE",
        "created_at": "2019-10-15T14:44:38Z",
        "body": "@allinurl \r\nMy bad, I meant for goaccess\r\n\r\nmy current log format as you saw is \r\n```\r\nlog_format  main_ext  '$remote_addr - \"$http_user_agent\"';\r\n```\r\n\r\nas i'm only interested in logging IP's, OS and Browsers.\r\n\r\nWhat else should I add as a minimum so that goaccess would accept my log file ? or anyway i could bypass that?"
      },
      {
        "user": "XOR-LIFE",
        "created_at": "2019-10-15T16:22:42Z",
        "body": "@allinurl \r\n\r\nAs per your guideline, this is my log format now\r\n```\r\n    log_format  main_ext  '$remote_addr - $remote_user [$time_local]'\r\n                          '\"$request\" \"$http_user_agent\"' ;\r\n```\r\n\r\nand when i start goaccess i use this command\r\n```\r\ngoaccess -f /var/log/nginx/site-access.*\r\n```\r\n\r\nThen I choose `NCSA Combined Log Format` and then I delete ` %s %b \"%R\"` from log format\r\n\r\nMy question is how can I append this to my command?"
      },
      {
        "user": "XOR-LIFE",
        "created_at": "2019-10-15T16:37:35Z",
        "body": "**I found the solution and its working great !!**\r\nI just need you to confirm if it's right\r\n\r\n```\r\ngoaccess -f /var/log/nginx/site-access.* --log-format=\"%h %^[%d:%t %^] \"%r\" \"%u\"\" --date-format=\"%d/%b/%Y\" --time-format=\"%H:%M:%S\"\r\n```"
      },
      {
        "user": "allinurl",
        "created_at": "2019-10-15T16:45:23Z",
        "body": "Glad you got it work. That looks right to me for the minimum amount of data."
      },
      {
        "user": "XOR-LIFE",
        "created_at": "2019-10-15T17:02:59Z",
        "body": "@allinurl \r\n\r\njust one last question, how to add several panels in `--ignore-panel` ?\r\n\r\nI want to add these\r\n```\r\nREQUESTS_STATIC NOT_FOUND VISIT_TIMES REFERRERS REFERRING_SITES KEYPHRASES STATUS_CODES\r\n```"
      },
      {
        "user": "allinurl",
        "created_at": "2019-10-15T17:05:30Z",
        "body": "    --ignore-panel=REQUESTS_STATIC --ignore-panel=NOT_FOUND --ignore-panel=VISIT_TIMES --ignore-panel=REFERRERS --ignore-panel=REFERRING_SITES --ignore-panel=KEYPHRASES --ignore-panel=STATUS_CODES"
      },
      {
        "user": "allinurl",
        "created_at": "2019-10-15T17:05:56Z",
        "body": "or if you prefer & cleaner, through the config file."
      },
      {
        "user": "XOR-LIFE",
        "created_at": "2019-10-15T17:09:49Z",
        "body": "@allinurl \r\n \r\nWell, I will stick with this now. Thank you very much for your time :)"
      }
    ]
  },
  {
    "number": 1544,
    "title": "GoAccess submitting aggregate data to MySQL",
    "created_at": "2019-09-06T08:13:17Z",
    "closed_at": "2019-09-17T10:13:54Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1544",
    "body": "Is it possible to make GoAccess count views from Apache log (single server) in real-time and submit the aggregate data to MySQL according some threshold? (ex: each 5 min or 1KB)",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1544/comments",
    "author": "MarkMessa",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-09-16T02:05:57Z",
        "body": "It's not possible. Could you please describe a use case for this? Thanks."
      },
      {
        "user": "MarkMessa",
        "created_at": "2019-09-17T10:13:54Z",
        "body": "> Could you please describe a use case for this?\r\n\r\nSuppose you wanna count views and update MySQL aggregate table out of the client request cycle.  \r\nIt seems that the most common way to achieve that is via ELK stack. Unfortunately, for a single server, ELK stack is to much complicated. Therefore, I'm looking for lighter alternatives."
      },
      {
        "user": "allinurl",
        "created_at": "2019-09-18T12:41:32Z",
        "body": "I'm working on a more robust on-disk storage which more likely will support wither postgres or mysql. This will replace the existing on-disk implementation. Please stay tuned for the upcoming release."
      },
      {
        "user": "MarkMessa",
        "created_at": "2019-09-18T13:06:52Z",
        "body": "@allinurl Mind to give more details?\r\n- Is this gonna be an improvement of GoAccess or it will be a completely new web analytics software?\r\n- Still FOSS?\r\n- Still lightweight?"
      },
      {
        "user": "allinurl",
        "created_at": "2019-09-18T14:27:34Z",
        "body": "It's just a change on the current on-disk implementation. Always FOSS, and lightweight too."
      },
      {
        "user": "MarkMessa",
        "created_at": "2019-09-18T15:05:28Z",
        "body": "Any release date forecast?"
      },
      {
        "user": "JanUrlaub",
        "created_at": "2020-08-13T11:40:59Z",
        "body": "That would be a really nice to have.\r\nA changeable DSN like mysql://user@pasword:server/database insteat of slite3://path/to/folder\r\n"
      }
    ]
  },
  {
    "number": 1539,
    "title": "IIS 7.5 Logs",
    "created_at": "2019-08-29T18:57:10Z",
    "closed_at": "2019-10-23T15:28:46Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1539",
    "body": "Log:\r\n\r\n```\r\n#Software: Microsoft Internet Information Services 7.5\r\n#Version: 1.0\r\n#Date: 2019-08-05 04:00:05\r\n#Fields: date time s-ip cs-method cs-uri-stem cs-uri-query s-port cs-username c-ip cs(User-Agent) cs(Cookie) cs(Referer) sc-status sc-substatus sc-win32-status time-taken\r\n2019-08-05 04:00:05 172.17.10.100 GET / - 443 - 200.55.193.211 - - - 200 0 0 0\r\n2019-08-05 04:00:05 172.17.10.100 POST /Microsoft-Server-ActiveSync Cmd=Ping&User=cns%5Cjprojas&DeviceId=SEC00F07C6BD125A&DeviceType=SAMSUNGSMP350&X-ARR-CACHE-HIT=0&X-ARR-LOG-ID=afa2ee71-cc7b-4af0-9913-aa3e8bacfa01 443 - 200.90.179.37 Android-SAMSUNG-SM-P350/101.6000\r\n1 - - 502 3 1236 197437\r\n```\r\n\r\nError GOaccess:\r\n\r\n```\r\n[root@webcl Logs]# goaccess *.log -o report.html --log-format=W3C\r\nu_ex190805.log [0/s]\r\nParsed 10 lines producing the following errors:\r\n\r\nToken '-' doesn't match specifier '%s'\r\nToken '-' doesn't match specifier '%s'\r\nToken '-' doesn't match specifier '%s'\r\nToken '-' doesn't match specifier '%s'\r\nToken '-' doesn't match specifier '%s'\r\nToken '-' doesn't match specifier '%s'\r\nToken '-' doesn't match specifier '%s'\r\nToken '-' doesn't match specifier '%s'\r\nToken '-' doesn't match specifier '%s'\r\nToken '-' doesn't match specifier '%s'\r\n\r\nFormat Errors - Verify your log/date/time format\r\n\r\n```\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1539/comments",
    "author": "KikeMuller",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-09-16T02:33:18Z",
        "body": "Please try this, though I'm not sure there's consistency in the log as the last line will be invalid.\r\n\r\n    goaccess access.log --log-format='%d %t %^ %m %U %q %^ %^ %h %u %^' --date-format=%Y-%m-%d --time-format=%T"
      },
      {
        "user": "allinurl",
        "created_at": "2019-10-23T15:28:46Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1538,
    "title": "PfSense Log File",
    "created_at": "2019-08-26T21:21:36Z",
    "closed_at": "2019-10-23T15:37:18Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1538",
    "body": "Which log file I should use in pfsense to generate html file, and If anyone knows date and time setting for Pfsense Logs.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1538/comments",
    "author": "manjotsc",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-08-27T00:15:50Z",
        "body": "Please try this #880, if that doesn't work, feel free to post a few sample lines from your access.log"
      },
      {
        "user": "allinurl",
        "created_at": "2019-10-23T15:37:18Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1536,
    "title": "Trying to exclude a specific user agent (Web Site Monitor)",
    "created_at": "2019-08-20T18:24:35Z",
    "closed_at": "2019-08-24T01:58:24Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1536",
    "body": "I was reading how you had added the ability to add a list of browsers in a text file, and was trying to use this as a way to omit our uptime requests from the log parsing.\r\n\r\nWe use NodePing, so i created a file called browsers.txt, using your demo file and added a line to the top:\r\nNodePing                                          Crawler\r\n\r\nI was using the following command in bash:\r\n\r\n    bash-4.4$ goaccess /cygdrive/e/temp/goaxess/*.log --log-format='%d %t.%^ ~h{,\" } %e %v %^ %m %U %q %s %^ %^ %L \"%u\" %R %^' --date-format=%Y-%m-%d --time-format=%T --http-protocol=no -o /cygdrive/e/temp/ws_all_report_20190919.html --real-time-html --browsers-file=/cygdrive/e/temp/browsers.txt --ignore-crawlers\r\n\r\nIt still has the same mount of requests over all with or without the last two switches in the command line (I think this is intended to show the total number of requests without filtering the browsers file)\r\n\r\nI am just looking for confirmation that this is the way to execute this type of result\r\n\r\nLet me know what you think",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1536/comments",
    "author": "Gecko483",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-08-22T01:43:29Z",
        "body": "Please try setting it as `Crawlers` instead of `Crawler`. Also make sure it is tab delimited e.g.,\r\n\r\n    NodePing\\t\\tCrawlers\r\n\r\nthat is, \r\n\r\n    NodePing\t\tCrawlers"
      },
      {
        "user": "Gecko483",
        "created_at": "2019-08-22T15:42:23Z",
        "body": "I added the tab delimiter in between the name and the type instead of spaces.\r\n\r\nI also see that it removes the top requested file based on the browsers.txt file.\r\n\r\nThis is what i was looking for \r\n\r\nThanks!"
      }
    ]
  },
  {
    "number": 1528,
    "title": "Token '13/Aug/2019' doesn't match specifier '%d'",
    "created_at": "2019-08-13T06:38:22Z",
    "closed_at": "2019-10-23T15:26:14Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1528",
    "body": "##### when I run the below command\r\n```\r\ngoaccess access.log --log-format='%^\\t%h\\t%^\\t%^\\t%^\\t%d:%t +0800\\t%r\\t%b\\t%b\\t%^\\t%s\\t%^\\t%^\\t%u\\t%^' --time-format=%H:%M:%S --date-format=%d/%b/%Y\r\n```\r\n##### error\r\nToken '13/Aug/2019' doesn't match specifier '%d'\r\n\r\n##### nginx log format\r\n```\r\n'$http_host\\t$server_addr\\t$hostname\\t$remote_addr\\t$http_x_forwarded_for\\t$time_local\\t$request_uri\\t$request_length\\t$bytes_sent\\t$request_time\\t$status\\t$upstream_addr\\t$upstream_response_time\\t$http_user_agent\\t$scheme';\r\n```\r\n##### access.log\r\n```\r\nhello_test.com\t127.0.0.1\ttest.local\t127.0.0.1\t-\t13/Aug/2019:11:34:38 +0800\t/0.js\t738\t201\t0.002\t304\t127.0.0.1:8081\t0.002\tMozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.100 Safari/537.36\thttp\r\n\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1528/comments",
    "author": "Jason-mor",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-08-13T14:16:12Z",
        "body": "Please try:\r\n\r\n    goaccess access.log --log-format='%v\\t%h\\t%e\\t%^\\t%^\\t%d:%t %^\\t%U\\t%^\\t%b\\t%T\\t%s\\t%^\\t%^\\t%u\\t' --date-format=%d/%b/%Y --time-format=%T --http-protocol=no --http-method=no"
      },
      {
        "user": "Jason-mor",
        "created_at": "2019-08-14T02:31:28Z",
        "body": "I use your command, but it doesn't work.\r\nI also try the below configuration\r\n```\r\ngoaccess access.log --log-format='%^\\t%^\\t%^\\t%^\\t%^\\t%d:%t %^\\t%^\\t%^\\t%^\\t%^\\t%^\\t%^\\t%^\\t%^\\t' --date-format=%d/%b/%Y --time-format=%T --http-protocol=no --http-method=no\r\n```\r\n\r\n#### My Environment\r\nmacVersion:10.14.5\r\ngoaccess:1.13\r\n\r\ninstall by brew install goaccess\r\n\r\nThanks\r\n\r\n\r\n\r\n"
      },
      {
        "user": "Jason-mor",
        "created_at": "2019-08-17T07:32:17Z",
        "body": "@allinurl  \r\nbrew install goaccess -s \r\nit also does't work.\r\nHelp solve it, thank you"
      },
      {
        "user": "allinurl",
        "created_at": "2019-08-20T14:04:19Z",
        "body": "The command I posted works fine on v1.3 with the line you posted above. Could you please post/attach several lines? THanks."
      },
      {
        "user": "allinurl",
        "created_at": "2019-10-23T15:26:14Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1518,
    "title": "Help with log format",
    "created_at": "2019-08-05T16:54:00Z",
    "closed_at": "2019-08-07T14:19:52Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1518",
    "body": "Log format: \r\n```\r\n'[$time_local] $remote_addr -> $upstream_addr | $scheme $request | urt: $upstream_response_time msec | rt: $request_time msec | status: $status'\r\n```\r\n\r\nBeing set in nginx via:\r\n```\r\nlog_format upstreamlog '[$time_local] $remote_addr -> $upstream_addr | $scheme $request | urt: $upstream_response_time msec | rt: $request_time msec | status: $status';\r\n```\r\n\r\ngoaccess config file:\r\n```\r\ntime-format %T\r\ndate-format %d/%b/%Y\r\nlog_format [%d:%t %^] %h -> %^ | %^ %r | urt: %^ msec | rt: %T msec | status: %s\r\n```\r\n(generated with nginx2goaccess.sh)\r\n\r\nRunning:\r\n```\r\ngoaccess /var/log/nginx/access.log -p /etc/goaccess.conf\r\n```\r\n\r\nGetting:\r\n```\r\nParsed 1 linesproducing the following errors:\r\n\r\nToken ': 0.018 msec | status: 200' doesn't match specifier '%s'\r\n\r\nFormat Errors - Verify your log/date/time format\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1518/comments",
    "author": "joaodlf",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-08-05T19:17:14Z",
        "body": "Please post a few lines from your log. "
      },
      {
        "user": "joaodlf",
        "created_at": "2019-08-05T19:48:31Z",
        "body": "Hi, here we go:\r\n\r\n```\r\n[05/Aug/2019:20:45:55 +0100] 127.0.0.1 -> 127.0.0.1 | https POST /api/post HTTP/1.1 | urt: 0.016 msec | rt: 0.016 msec | status: 200\r\n[05/Aug/2019:20:45:55 +0100] 127.0.0.1 -> 127.0.0.1 | https POST /api/post HTTP/1.1 | urt: 0.017 msec | rt: 0.017 msec | status: 200\r\n[05/Aug/2019:20:45:55 +0100] 127.0.0.1 -> 127.0.0.1 | https POST /api/post HTTP/1.1 | urt: 0.018 msec | rt: 0.018 msec | status: 200\r\n```"
      },
      {
        "user": "allinurl",
        "created_at": "2019-08-07T14:18:07Z",
        "body": "    goaccess access.log --log-format='[%d:%t %^] %h %^| %^ %m %U %H %^: %T %^: %^: %s' --date-format=%d/%b/%Y --time-format=%T --ignore-panel=BROWSERS --ignore-panel=OS --ignore-panel=REFERRING_SITES"
      },
      {
        "user": "joaodlf",
        "created_at": "2019-08-07T14:19:52Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 1517,
    "title": "Help with custom log format",
    "created_at": "2019-08-01T23:05:28Z",
    "closed_at": "2019-10-23T15:37:03Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1517",
    "body": "Hi guys... I'm trying to parse this log format with goaccess (last version):\r\n\r\nLogFormat \"%{X-Forwarded-For}i,%l,%u,%t,\\\"%r\\\",%>s,%b,microsec,%D,WAS,%{WAS}e,jsess,%{JSESSIONID}C\"\r\n\r\nI must be able to parse log entries like this but no luck until now:\r\n\r\n```\r\n127.0.0.1,-,-,[01/Jan/2019:00:00:32 -0300],\"POST /preengine/api/pesendapi HTTP/1.1\",200,366,microsec,8847,WAS,myhost:8081,jsess,-\r\n-,-,-,[01/Jan/2019:00:00:32 -0300],\"GET /server-status?auto HTTP/1.1\",200,4255,microsec,556,WAS,-,jsess,-\r\n```\r\n\r\nPlease can you help me with the right command ?\r\n\r\nThanks in advance.\r\nRegards\r\nSergio",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1517/comments",
    "author": "SSalinasC",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-08-05T14:07:48Z",
        "body": "You would need a valid IP, however, it looks like the second sample line doesn't have one.\r\n\r\n    goaccess access.log --log-format='%h,%^[%d:%t %^],\"%r\",%s,%b,%^,%D,%^,%v,%e,%^' --date-format=%d/%b/%Y --time-format=%T --ignore-panel=BROWSERS --ignore-panel=OS --ignore-panel=REFERRING_SITES"
      },
      {
        "user": "allinurl",
        "created_at": "2019-10-23T15:37:03Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1511,
    "title": "Token '+0900]' doesn't match specifier '%h' ",
    "created_at": "2019-07-24T06:24:33Z",
    "closed_at": "2019-10-23T15:26:33Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1511",
    "body": "HI\r\n\r\nI can't figure out why goaccess error. What's wrong?\r\n\r\nPlease Help me\r\n\r\n```\r\n$goaccess test --log-format=VCOMMON –o report.html —real-time-html\r\nParsed 1 linesproducing the following errors:\r\nToken '+0900]' doesn't match specifier '%h'\r\nFormat Errors - Verify your log/date/time format\r\n\r\n$ goaccess --version\r\nGoAccess - 1.3.\r\n\r\n```\r\nLOG sample\r\n```\r\n[24/Jul/2019:00:00:08 +0900] XXX.XXX.XXX.XXX TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384 \"GET / HTTP/2.0\" 4\r\n[24/Jul/2019:00:00:10 +0900] XXX.XXX.XXX.XXX TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384 \"GET /web-inf/component/font-awesome/fonts/fontawesome-webfont.woff2?v=4.7.0 HTTP/2.0\" 77160\r\nXXX.XXX.XXX.XXX - - [24/Jul/2019:00:13:13 +0900] \"GET / HTTP/1.1\" 200 139 \"-\" \"Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36\"\r\n\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1511/comments",
    "author": "kgs921",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-07-25T13:46:28Z",
        "body": "Do these logs have the same log format? I see the first two have the same format but not the third one. Currently GoAccess has only capability to read one format."
      },
      {
        "user": "kgs921",
        "created_at": "2019-07-26T01:21:06Z",
        "body": "Thank you for answer\r\n\r\nI installed apache2 with yum and Logformat is default in httpd.conf\r\n-------------------------------------------------------------------------------\r\n```\r\nLog_config_module\r\nLogFormat \"%h %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" combined\r\nLogFormat \"%h %l %u %t \\\"%r\\\" %>s %b\" common\r\n\r\n<IfModule logio_module>\r\n# You need to enable mod_logio.c to use %I and %O\r\nLogFormat \"%h %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\" %I %O\" combinedio\r\n</IfModule>\r\n```\r\n-----------------------------------------------------------------------------------\r\ndaily_log\r\n\r\n```\r\n[25/Jul/2019:00:08:53 +0900] 123.123.123.123 TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384 \"GET /folder/folder2/folder3/file.xx?xx=xx123456 HTTP/2.0\" 27370\r\n[25/Jul/2019:00:08:57 +0900] 123.123.123.123 TLSv1.2 ECDHE-RSA-AES256-GCM-SHA384 \"GET /folder/folder/folder/file.file?xxxx=xx123456 HTTP/2.0\" 137940\r\n123.123.123.123 - - [25/Jul/2019:00:09:43 +0900] \"GET / HTTP/1.1\" 200 139 \"-\" \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36\"\r\n```\r\n\r\nDaily logs are running in this format\r\n\r\n    goaccess /logs/daily_log --log-format='[%d:%t %^] %h %r \"%b\" \"%R\"' --date-format=%d/%b/%Y --time-format=%T -o /www/report.html --real-time-html --daemonize\r\n\r\nWhen I ask the first question, I can not run it with the error message. But now you're ready to run.\r\nA report.html file is also created and can be viewed on the website But I wonder if the analysis works."
      },
      {
        "user": "allinurl",
        "created_at": "2019-07-31T14:23:41Z",
        "body": "Sorry, I'm not sure I follow your question. Did you get it to parse your access log? Are you able to see the report?"
      },
      {
        "user": "allinurl",
        "created_at": "2019-10-23T15:26:33Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1510,
    "title": "Need help about log format like kind of IP=127.0.0.1",
    "created_at": "2019-07-23T05:50:29Z",
    "closed_at": "2019-08-05T02:03:05Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1510",
    "body": "This is my log.\r\n\r\n`07-17-2019 00:24:27.984 ip=127.0.0.1  status=200  tenant=- user=- correlationId=-  request=\"GET /platform-webapp/ HTTP/1.1\" userType=- requestInfo=- duration=0 bytes=3505 thread=http-nio-8080-exec-20 service=platform-webapp itemType=N-A itemOperation=READ dataLayer=N-A incomingItemCnt=- outgoingItemCnt=-`\r\n\r\nCan you guide me what is the format? Thanks!!\r\n\r\nI using like this:\r\nlog-format: %d %t ip=%h %^ %^ %^ %^ request=%m %U %^ %^ duration=%D %^ %^ %^ %^ %^ %^ %^ %^\r\ndate-format: %b-%d-%Y\r\ntime-format: %H:%M:%S\r\n\r\nbut get the error:\r\nToken '07-17-2019' doesn't match specifier '%d'",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1510/comments",
    "author": "liuhongyuand",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-07-25T13:51:26Z",
        "body": "Assuming there's a valid IPv4/6, this should work:\r\n\r\n    goaccess access.log --log-format='%d %t.%^ %^=%h %^=%s %^ %^=%e %^ %^\"%r\" %^ %^ %^=%T %^=%b %^=%^v %^' --date-format=%m-%d-%Y --time-format=%T --ignore-panel=OS --ignore-panel=BROWSERS --ignore-panel=REFERRING_SITES"
      }
    ]
  },
  {
    "number": 1509,
    "title": "how to make log format configuration my own log format?",
    "created_at": "2019-07-22T08:19:01Z",
    "closed_at": "2019-10-23T15:25:50Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1509",
    "body": "We are using below own log format. but I have no idea how to set 00log-format & --date-format && --time-format.\r\n2019/07/22 15:16:23 [info] 43891#43891: *72832 proxy [2001:db8:a01:2101:9::a102]:38302 connected to [2001:db8:a01:2053:4::16]:4430\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1509/comments",
    "author": "oiluuurk",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-07-22T13:56:33Z",
        "body": "GoAccess requires the following fields:\r\n\r\n> a valid IPv4/6 %h\r\n> a valid date %d\r\n> the request %r\r\n\r\nYou've got the date and IP but doesn't look like there's a request. Is this an access log?"
      },
      {
        "user": "allinurl",
        "created_at": "2019-10-23T15:25:50Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1500,
    "title": "Unable to parse custom JSON log format",
    "created_at": "2019-07-15T09:32:47Z",
    "closed_at": "2019-10-23T15:25:38Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1500",
    "body": "I am trying to use goaccess to analyze my nginx log, my log is customized with json,like this\r\n\r\n    {\"time_date\": \"2019-07-15T08:22:45+00:00\",\"client\": \"172.30.148.128\", \"host\": \"test.my-9c-clu.xx.xxx\", \"scheme\": \"http\", \"request_method\": \"GET\", \"request_uri\": \"/PingServlet\", \"request_id\": \"817c80d5e6791c10bf459b166cb311ad\", \"status\": 200, \"upstream_addr\": \"172.30.78.203:8000\", \"upstream_status\": 200, \"request_time\": 0.006, \"upstream_response_time\": 0.004, \"upstream_connect_time\": 0.000, \"upstream_header_time\": 0.004}\r\n\r\nI tried to use\r\n\r\n```\r\nlog-format '%^: \"%^\",%^: \"%h\", %^: \"%U\", %^: \"%^\", %^: \"%^\", %^: \"%U\", %^: \"%^\", %^: %s, %^: \"%h:%^\", %^: %T, %^: %T, %^: %T, %^: %T, %^: %T'\r\ndate-format %Y-%m-%d\r\ntime-format %T\r\n```\r\n\r\nbased on some issues I reference, but still can't parse the log\r\n\r\nI got the error like\r\n```\r\nFatal error has occurred\r\nError occured at: src/goaccess.c - main - 1033\r\nNothing valid to process.\r\n```\r\n\r\nCould you please help me on what format I should use for log, time and date? Thanks very much",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1500/comments",
    "author": "shiyan0109",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-07-16T13:51:51Z",
        "body": "This should do it:\r\n\r\n    goaccess access.log --log-format='%^: \"%dT%t+%^\",%^: \"%h\",%^: \"%v\",%^,%^: \"%m\",%^: \"%U\",%^,%^: %s,%^,%^,%^: %T,%^' --date-format=%Y-%m-%d --time-format=%T --ignore-panel=BROWSERS --ignore-panel=OS --ignore-panel=REFERRING_SITES --http-protocol=no"
      },
      {
        "user": "allinurl",
        "created_at": "2019-10-23T15:25:37Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1458,
    "title": "Config file: No config file used",
    "created_at": "2019-05-15T20:21:17Z",
    "closed_at": "2019-05-16T10:12:31Z",
    "labels": [
      "question",
      "log-processing",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1458",
    "body": "Hellow\r\n\r\nI'm sorry, I'm completely newbie at coding and server administration but I very need to get GoAccess on my website.\r\n\r\nI've installed successfully GoAccess on my server but when I'm trying to set up log format with a command\r\n\r\n`# goaccess access.log -c`\r\n\r\nI got answer\r\n\r\n```\r\nGoAccess - version 1.3 - Nov 22 2018 23:57:27\r\nConfig file: No config file used\r\n\r\nFatal error has occurred\r\nError occurred at: src/parser.c - read_log - 2728\r\nUnable to open the specified log file. No such file or directory\r\n```\r\n\r\nI've tried to to find anny files accoiciated with \"access.log\" and \"goaccess\" via\r\n```\r\n# locate -i access.log\r\n# locate -i goaccess\r\n```\r\nwhich gave me no files with such names...\r\n\r\nWhat I did wrong?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1458/comments",
    "author": "pyataevsv",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-05-15T20:24:11Z",
        "body": "Which webserver are you using? i.e., apache, nginx, etc You can try running:\r\n\r\n    # find / -name access.log\r\n\r\nthen run goaccess as e.g.,\r\n\r\n    # goaccess /var/log/apache2/access.log -c"
      },
      {
        "user": "pyataevsv",
        "created_at": "2019-05-15T20:50:52Z",
        "body": "I use  bitnami lamp stack\r\n\r\nThere is no such file `access.log` on my server.\r\n\r\nI've tried \r\n```\r\n# find / -name access.log\r\n# locate -i access.log\r\n```\r\n\r\nCan It be with a different name?\r\nMay be it means server configuratin file like `httpd.conf`?\r\n"
      },
      {
        "user": "pyataevsv",
        "created_at": "2019-05-16T10:12:31Z",
        "body": "\r\nI found out my log file as a access_log.\r\nOther problems solved.\r\n\r\nThank you for product."
      }
    ]
  },
  {
    "number": 1446,
    "title": "Goaccess will no longer parse my logs",
    "created_at": "2019-05-02T18:58:48Z",
    "closed_at": "2019-10-23T15:29:04Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1446",
    "body": "I am running KUbuntu:\r\n\r\nNo LSB modules are available.\r\nDistributor ID: Ubuntu\r\nDescription:    Ubuntu 18.04.2 LTS\r\nRelease:        18.04\r\nCodename:       bionic\r\n\r\n\r\nI run Goaccess every month on my server logs, it has worked well for me. \r\n\r\nI use the COMBINED log format\r\n\r\nThis month it refuses to parse my log file:\r\n\r\nParsed 1 linesproducing the following errors:\r\n\r\nToken 'node3.virginia.node.siteuptime.com' doesn't match specifier '%h'\r\n\r\nHere is the full log line:\r\n\r\n    node3.virginia.node.siteuptime.com - - [01/Apr/2019:00:01:21 -0400] \"GET /index.php HTTP/1.1\" 200 30183 \"-\" \"SiteUptime\"\r\n\r\nBut is has always been able to process these lines. Here is an equivalent from last months log:\r\n\r\n    node3.virginia.node.siteuptime.com - - [01/Mar/2019:00:10:48 -0500] \"GET /index.php HTTP/1.1\" 200 31937 \"-\" \"SiteUptime\"\r\n\r\nThey look the same to me. Last month Goaccess processed the log file with no errors. This month if refuses to parse the log with the same entries.\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1446/comments",
    "author": "mwarnett",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-05-07T12:06:55Z",
        "body": "Please post the exact command and attach the config file that you are running. Thanks"
      },
      {
        "user": "allinurl",
        "created_at": "2019-07-02T01:59:13Z",
        "body": "Any updates on this?"
      },
      {
        "user": "allinurl",
        "created_at": "2019-10-23T15:29:04Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1445,
    "title": "No Such File or Directory",
    "created_at": "2019-05-02T12:10:21Z",
    "closed_at": "2019-05-02T19:56:41Z",
    "labels": [
      "question",
      "log-processing",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1445",
    "body": "\t$ goaccess -p /usr/local/etc/goaccess/goaccess.conf mylog.log-20190502 ~/desktop/alpha.html\r\n\r\n\tGoAccess - version 1.3 - Apr 29 2019 17:12:23\r\n\tConfig file: /usr/local/etc/goaccess/goaccess.conf\r\n\r\n\tFatal error has occurred\r\n\tError occurred at: src/parser.c - read_log - 2728\r\n\tUnable to open the specified log file. No such file or directory\r\n\r\n\t$ ll\r\n\t-rwxr-xr-x   1 rich  admin    21K Oct 15  2018 mylog.log-20181003\r\n\t-rwxr-xr-x@  1 rich  admin   1.1M May  2 07:59 mylog.log-20190502\r\n\r\nFor some reason, the log file cannot be opened.  It's there (last line) and it's copied and pasted so I'm not overlooking it.  \r\n\r\nAnything I should try?  ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1445/comments",
    "author": "daBee",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-05-02T14:38:59Z",
        "body": "Please specify the output flag. e.g.,\r\n\r\n    $ goaccess -p /usr/local/etc/goaccess/goaccess.conf mylog.log-20190502 -o ~/desktop/alpha.html\r\n"
      },
      {
        "user": "daBee",
        "created_at": "2019-05-02T19:56:41Z",
        "body": "That was it.  Not sure how I missed that.  "
      }
    ]
  },
  {
    "number": 1444,
    "title": "Haproxy log format help",
    "created_at": "2019-05-02T07:27:55Z",
    "closed_at": "2024-07-10T01:24:33Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1444",
    "body": "Can you please help me to convert the below log format/line to work with goaccess?\r\n\r\nlog-format = [%pid]\\ [%Ts.%ms]\\ %ac/%fc/%bc/%bq/%sc/%sq/%rc\\ %Tq/%Tw/%Tc/%Tr/%Tt\\ %tsc\\ %ci:%cp\\ %fi:%fp\\ %si:%sp\\ %ft\\ %sslc\\ %sslv\\ %{+Q}r\\ %ST\\ %b:%s\\ \"%CC\"\\ \"%hr\"\\ \"%CS\"\\ \"%hs\"\\ req_size=%U\\ resp_size=%B\r\n\r\nLog line:\r\n\r\n    Apr 30 08:38:15 usw02-rel-dataservices-ts-timeseries-lb haproxy[849]: [849] [1556613495.891] 1/1/1/0/1/0/0 0/0/0/33/+33 ---- 10.72.131.11:45036 10.72.148.46:80 10.72.148.49:8787 time_series - - \"GET /v1/datapoints/latest?tags=default.d15ba919-4d4c-4e26-95ad-fc28ebf31768.OVPN_RX,default.d15ba919-4d4c-4e26-95ad-fc28ebf31768.OVPN_TX HTTP/1.1\" 200 time_series_aeondb:10.72.148.49 - {time-series-store-pr||} - {Jetty(9.3.11.v201607||no-cache||} req_size=0 resp_size=+294\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1444/comments",
    "author": "bajigithub",
    "comments": [
      {
        "user": "bajigithub",
        "created_at": "2019-05-03T04:29:36Z",
        "body": "Any pointer to the documentation on how to convert would also help?"
      },
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2020-09-26T21:42:44Z",
        "body": "Try this, in `goaccess.conf`:\r\n\r\n`date-format %s`\r\n`time-format %s`\r\n`log-format %^ [%x.%^] %^ %^ %^ %h:%^ %^ %^ %^ %^ %^ \"%r\" %s %^resp_size=+%b`\r\n\r\nor in command-line:\r\n`--date-format='...' --time-format='...' --log-format='...'`\r\n\r\n**notes:**\r\nMan, really little useful information that can be extracted and used.\r\nGoAccess have a Bug so Time Distribution panel always blank . See at #1810.\r\nIf you wish you can use the `HAProxy` `%b` `backend_name` field like a `GoAccess` `vhost` `%v`.\r\nFor that, change piece of `log-format`: \r\n`%s %^resp_size=+%b`  by  `%s %v:%^resp_size=+%b`\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2024-07-10T01:24:33Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1443,
    "title": "Token '30/Apr/2019' doesn't match specifier '%d'",
    "created_at": "2019-04-30T09:19:33Z",
    "closed_at": "2019-05-07T11:54:03Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1443",
    "body": "when I run the below command\r\n\r\n    goaccess temp.log --date-format='%d/%b/%Y' --time-format='%T' --log-format=\"[%d:%t] %T\"\r\n\r\nerror:\r\n\r\n> Token '30/Apr/2019' doesn't match specifier '%d'\" alert\r\n\r\naccess log\r\n```\r\n[30/Apr/2019:00:10:04] 0.373\r\n[30/Apr/2019:00:10:04] 0.265\r\n[30/Apr/2019:00:10:05] 0.397\r\n[30/Apr/2019:00:10:06] 0.267\r\n[30/Apr/2019:00:10:06] 0.397\r\n[30/Apr/2019:00:10:07] 0.401\r\n[30/Apr/2019:00:10:10] 0.397\r\n[30/Apr/2019:00:10:10] 0.397\r\n[30/Apr/2019:00:10:10] 0.396\r\n[30/Apr/2019:00:10:11] 0.398\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1443/comments",
    "author": "hoswey",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-04-30T14:16:20Z",
        "body": "Please post a few sample lines from your access.log. Thanks"
      },
      {
        "user": "hoswey",
        "created_at": "2019-05-06T06:26:55Z",
        "body": "@allinurl  it has attach the access log, it just a simple text \"[30/Apr/2019:00:10:04] 0.373\r\n\""
      },
      {
        "user": "allinurl",
        "created_at": "2019-05-07T11:54:03Z",
        "body": "GoAccess requires the following fields:\r\n\r\n- a valid IPv4/6 %h\r\n- a valid date %d\r\n- the request %r"
      }
    ]
  },
  {
    "number": 1435,
    "title": "SSL problem",
    "created_at": "2019-04-24T11:33:05Z",
    "closed_at": "2019-04-25T08:56:09Z",
    "labels": [
      "question",
      "websocket-server"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1435",
    "body": "Hi guys,\r\n\r\nI have installed goaccess but i want to use it with SSL.\r\n\r\nSo far i have installed with --with-openssl and i have this input line \r\n\r\n`find /home/ubuntu/s3/ -cmin -300 -name \"*.log\" -exec cat {} \\; | goaccess -a - --log-format=AWSELB -p /usr/local/etc/goaccess/goaccess.conf -o /var/www/html/index.html --ssl-cert=/home/ubuntu/s3/server.crt --ssl-key=/home/ubuntu/s3/server.key --ws-url=wss://publicipoftheserver:7890`\r\n\r\nThen when i visit my public ip i don't have ssl, even with :7890 and with https:// i only have port 80, and goaccess doesn't show any errors while parsing. Tried to use debug mode but no luck there.\r\nOnly working option is without ssl, port 80, is there anything else i need to look for ?\r\nI am using Ubuntu 16.04.\r\n\r\nThanks guys.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1435/comments",
    "author": "kenzoawa",
    "comments": [
      {
        "user": "iWoodsman",
        "created_at": "2019-04-24T11:52:43Z",
        "body": "The reason for the ws-url is for live updating. \r\nSo 1. Enable that with —real-time-html\r\n2. You can probably skip the ws-url if the websocket will be on the same host as goaccess (very likely).\r\nNow check it. Note that if you DON’T want the live updates, then there’s no websocket on port 7890 and you can also skip the SSL flags. The static page is served by your existing ssl-configured web server, using its ports. There is a nonzero chance I am wrong about some of this, but this ended up working for me. Oh and obviously, check any firewalls too. "
      },
      {
        "user": "kenzoawa",
        "created_at": "2019-04-24T12:23:38Z",
        "body": "So basically you are saying that i just insert the SSL certs and keys to the apache that is running local and skip the SSL flags .. etc right ?"
      },
      {
        "user": "iWoodsman",
        "created_at": "2019-04-24T12:58:04Z",
        "body": "Correct. The report page itself is a plain old static page served by Apache, and if you have configured Apache for SSL, then the report page will be delivered as such. You only need to explicitly tell goaccess about SSL and certificates if you want the real time HTML data that is transferred between the goaccess websocket and the end-user’s browser to be encrypted. That’s when you specify the cert and the key to goaccess, and if necessary the ws server and port. The latter will default to your apache host, and port 7890.\r\nStrangely, I found that using the ws=wss directive to specify the server and port caused the real time HTML to not work, whereas not specifying that and letting the defaults be used did work, even though what I was specifying were in fact the defaults. \r\n\r\n\r\n—\r\nSent from a mouse-sized keyboard, please forgve typos.\r\n\r\n> On Apr 24, 2019, at 8:23 AM, kenzoawa <notifications@github.com> wrote:\r\n> \r\n> So basically you are saying that i just insert the SSL certs and keys to the apache that is running local and skip the SSL flags .. etc right ?\r\n> \r\n> —\r\n> You are receiving this because you commented.\r\n> Reply to this email directly, view it on GitHub, or mute the thread.\r\n"
      },
      {
        "user": "kenzoawa",
        "created_at": "2019-04-25T08:56:09Z",
        "body": "Hey @iWoodsman thanks for the advice, much appreciated! I was successful.   \r\n\r\nI have installed the SSL on the apache and works like a charm if you are not using --real-time-html.\r\n\r\nIf anyone stumbles across that problem - just use ssl on the apache without real time report."
      }
    ]
  },
  {
    "number": 1429,
    "title": "Custom Log format GoAccess Nginx",
    "created_at": "2019-04-17T15:20:14Z",
    "closed_at": "2019-07-02T01:59:25Z",
    "labels": [
      "invalid",
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1429",
    "body": "Hi \r\nMy name is MJ \r\n\r\nI have problems with the format I add it manually or in the conf file and I do not consider the date or time.\r\n\r\nWhat can you suggest?\r\n\r\n\r\n    [root@ip~]# /tmp/goaccess-1.3/goaccess -f /tmp/LOGS/LT/error.log-20190411 --log-format=%d %t %^, %^, client: %h, server: %^, request: \"%r\", host: \"%v\", referrer: \"%R\", %^, host \"%v\"\r\n\r\nParsed 1 linesproducing the following errors:\r\n\r\n    Token '2019/04/10 03:40:09 [error] 32450#0: *1731 FastCGI sent in stderr: \"PHP message: PHP Warning:  file_get_contents(/srv/www/xxxx/wp-content/json/portadas/portada_link-externo.json): failed to open stream: No such file or directory in /srv/www/xxxx/wp-content/themes/gnuble/functions.php on line 1964' doesn't match specifier '%d'\r\n\r\nFormat Errors - Verify your log/date/time format\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1429/comments",
    "author": "MJC2",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-04-17T20:46:34Z",
        "body": "Looks like you are trying to parse an error log instead of an access log. You will need a different tool for that."
      },
      {
        "user": "allinurl",
        "created_at": "2019-07-02T01:59:25Z",
        "body": "Closing this, feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1424,
    "title": "syncing logs from elb - live report",
    "created_at": "2019-04-12T15:05:56Z",
    "closed_at": "2019-04-19T10:03:38Z",
    "labels": [
      "question",
      "log-processing",
      "other"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1424",
    "body": "Hey guys, i just tried GoAccess and it works like a charm once you get to know it.\r\n\r\nIt's not a issue but more of a logical question.\r\n\r\nI am successful in parsing the s3/elb logs that are stored there with s3cmd sync command to EC2. \r\nWhat i am trying to do is having that sync from s3 to GoAccess live - incrementally because sync works that way, only new logs are shipped and i want those new ones added to the report, not all of them.\r\n\r\nIf i put the command for report.html it parses the whole folder, not just the new ones that were copied. \r\nHere is the command : \r\n\r\n`find /tmp/s3/ -name \"*.log\" -exec cat {} \\; | goaccess -a --log-format=AWSELB -p /usr/local/etc/goaccess/goaccess.conf -o /var/www/html/report.html --real-time-html`\r\n\r\nIs there any possibility for goaccess to only parse the new logs in real time because my bucket is dozens of gigabytes ? I tried something with crontab but unsuccessful. \r\nThank you guys.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1424/comments",
    "author": "kenzoawa",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-04-13T14:51:05Z",
        "body": "You could use find and see the latest mod files:\r\n\r\n> find . -cmin +<time>\r\n> find . -cmin -<time>\r\n> find . -cmin  <time>\r\n\r\nFor example, the files with last edition in a maximum of 5 minutes, are given by:\r\n\r\n    find  /tmp/s3/ -cmin -5 -name \"*.log\" -exec cat {} \\; | goaccess -a --log-format=AWSELB -p /usr/local/etc/goaccess/goaccess.conf -o /var/www/html/report.html --real-time-html\r\n\r\n\r\n"
      },
      {
        "user": "kenzoawa",
        "created_at": "2019-04-15T08:56:01Z",
        "body": "Thank you very much allinurl! \r\nYou are a saver. \r\n\r\nI will try the command and give feedback here."
      },
      {
        "user": "kenzoawa",
        "created_at": "2019-04-19T10:03:38Z",
        "body": "Works like a charm, thanks allinurl!"
      }
    ]
  },
  {
    "number": 1421,
    "title": "Custom log format apache with UNIQUE_ID",
    "created_at": "2019-04-05T17:03:18Z",
    "closed_at": "2019-07-02T02:15:33Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1421",
    "body": "Hi,\r\nCan anyone help on the log format for the below access log.\r\n\r\n```\r\n10.247.0.2 - - [07/Mar/2019:23:58:57 -0500] XIH2kQryBjAAADqBoQcAAAG7 \"GET /lbcheck.html HTTP/1.1\" 200 33 612\r\n10.247.0.2 - - [07/Mar/2019:23:58:58 -0500] XIH2kgryBjAAAEWSlZ8AAAA- \"GET /lbcheck.html HTTP/1.1\" 200 33 846\r\n10.247.0.2 - - [07/Mar/2019:23:59:00 -0500] XIH2lAryBjAAAEWSlb0AAAAj \"GET /lbcheck.html HTTP/1.1\" 200 33 804\r\n10.247.0.3 - - [07/Mar/2019:23:59:00 -0500] XIH2lAryBjAAAEbTbqEAAATY \"GET /lbcheck.html HTTP/1.1\" 200 33 594\r\n10.247.0.2 - - [07/Mar/2019:23:59:00 -0500] XIH2lAryBjAAAEWSlcEAAADN \"GET /lbcheck.html HTTP/1.1\" 200 33 575\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1421/comments",
    "author": "augustinonline",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-04-13T15:03:26Z",
        "body": "    goaccess access.log --log-format='%h %^[%d:%t %^] %v \"%r\" %s %^ %b' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "allinurl",
        "created_at": "2019-07-02T02:15:33Z",
        "body": "Closing this, feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1406,
    "title": "[Solved] Processing logs with goaccess and logrotate  - question.",
    "created_at": "2019-03-14T11:08:03Z",
    "closed_at": "2019-03-14T18:56:35Z",
    "labels": [
      "question",
      "html report",
      "log-processing",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1406",
    "body": "Hi!\r\n\r\nI am using this command to print real-time html output:\r\ngoaccess /path/to/access.log --log-format=COMBINED -o /path/to/www/root/report.html --real-time-html --real-os --all-static-files --agent-list --http-protocol=yes --http-method=yes --hl-header\r\n\r\nAnd it shows statistics only from one day (current day). There is also files like access.log.12.gz due to logrotate. How can I use all of the data? Also compressed with logrotate.\r\n\r\nThanks in advance!",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1406/comments",
    "author": "AreYouLoco",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-03-14T13:51:03Z",
        "body": "Please try using:\r\n\r\n    zcat access.log.*.gz | goaccess access.log --log-format=COMBINED - -o /path/to/www/root/report.html\r\n\r\nAlso note that each active panel has a total of 50 entries in the real-time HTML report instead of the 366 in static mode.  Let me know how that goes."
      },
      {
        "user": "AreYouLoco",
        "created_at": "2019-03-14T18:52:13Z",
        "body": "Yup it works now as expected. Thanks!\r\n\r\nI switched to static pages and your pipe trick and now I can see all the data which is more than disturbing.\r\nWhy people would like to break into my phpmyadmin, why?:D\r\n\r\nIssue marked solved and closed."
      }
    ]
  },
  {
    "number": 1400,
    "title": "About the date display of report. #1310",
    "created_at": "2019-03-08T01:12:02Z",
    "closed_at": "2019-03-17T04:47:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1400",
    "body": "I'm troubled. How do you solve this problem.\r\n\r\nI suggested before. #1310\r\nI fork and verified the repository to see how this should be resolved. And I found a way to solve this problem.\r\n\r\n```\r\n127.0.0.1 - - [07/Mar/2019:01:48:21 +0900] \"GET /timelines/62583497 HTTP/1.1\" 200 109 \"/user/kamino\" \"Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.56 Safari/535.11\"\r\n```\r\n\r\nThis is a part of the log recorded in the **Combined format,** but I was able to confirm that the date and time are in British expression.\r\nWhich source code should I change to convert this to RFC3339 format? (I think that the `get_visitors_date` function in` util.c` is doubtful)\r\n\r\n-----\r\nOnce this issue is resolved, I start to new issue proposing a change from \"MIT\" to \"Apache License 2.0\"\r\nThe contributors' rights will be clarified, the opportunities used by corporations will increase and the load (to solve problems) will be dispersed.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1400/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-03-08T13:00:24Z",
        "body": "Just so I understand, are you trying to parse this specific format `[07/Mar/2019:01:48:21 +0900]` or  display  it in different format?"
      },
      {
        "user": "ghost",
        "created_at": "2019-03-08T13:24:39Z",
        "body": "Parser don't modify. Convert the captured data and make it compliant with RFC3339 format."
      },
      {
        "user": "allinurl",
        "created_at": "2019-03-14T14:05:35Z",
        "body": "To answer your question, yes, you are probably looking at `get_visitors_date` which should take care of the displaying of the parsed dates."
      },
      {
        "user": "ghost",
        "created_at": "2019-03-17T04:47:47Z",
        "body": "Thx! If conversion to RFC3339 format is successful, send PR."
      }
    ]
  },
  {
    "number": 1399,
    "title": "Parsing error : For Spark Log",
    "created_at": "2019-03-07T13:52:13Z",
    "closed_at": "2019-03-08T12:48:16Z",
    "labels": [
      "invalid",
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1399",
    "body": "Hi I am trying to use goaccess for first time. While trying to parse my log file getting below error.\r\n\r\nParsed 1 linesproducing the following errors:\r\nToken '' doesn't match specifier '%m' \r\n\r\ncommand : goaccess -f /home/demoUser/source-log.log  -o spark-log-report.html --real-time-html --ws-url=host -p config/goaccess.conf\r\n\r\noutput : \r\n/home/demoUser/spark-log.log\r\nParsed 1 linesproducing the following errors:\r\nToken '' doesn't match specifier '%m'\r\nFormat Errors - Verify your log/date/time format\r\n\r\nConfig:\r\ntime-format %H:%M:%S\r\ndate-format %Y-%m-%d\r\nlog-format W3C\r\n\r\n\r\nFew lines of logs:\r\n```\r\n2019-02-22 08:47:59 WARN  NativeCodeLoader:62 - Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\r\nlog4j2ConfigFile: bigdata-config/bigdata-app-config/log4j2.xml\r\nConfiguring the Log4j2 for the path:: bigdata-config/bigdata-app-config/log4j2.xml\r\n08:48:01.243 [main] ERROR  - Error Message!\r\n08:48:01.244 [main] FATAL  - Fatal Message!\r\n[INFO ]  2019-02-22 08:48:01.244 [main] - [TDACommon]- Inside to load loadRawRecordsDefaultValues Method.\r\n[INFO ]  2019-02-22 08:48:01.359 [main] - [TDACommon]- Exit Raw_Records_Default_Values is loaded successfully\r\n[INFO ]  2019-02-22 08:48:01.363 [main] - [DBUtility]- update method   192.168.xx.xx  --analytics\r\n2019-02-22 08:48:01 INFO  cluster:71 - Cluster created with settings {hosts=[192.168.xx.xx:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}\r\n[INFO ]  2019-02-22 08:48:01.597 [main] - [DBUtility]- @@@@       date from update method         @@@@Tue Feb 22 08:48:01 EST 2039\r\n2019-02-22 08:48:01 INFO  cluster:71 - No server chosen by WritableServerSelector from cluster description ClusterDescription{type=UNKNOWN, connectionMode=SINGLE, serverDescriptions=[ServerDescription{address=192.168.xx.xx:27017, type=UNKNOWN, state=CONNECTING}]}. Waiting for 30000 ms before timing out\r\n```\r\n\r\n\r\nI suspect somthing wrong configured.\r\nPlease provide some solution.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1399/comments",
    "author": "subhasis-tsipl",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-03-08T12:48:16Z",
        "body": "Seems like you are trying to parse a spark log. Please note that goaccess is a web/access log analyzer, so you won't be able to use for a spark log."
      }
    ]
  },
  {
    "number": 1389,
    "title": "goaccess with zabbix",
    "created_at": "2019-02-28T11:19:33Z",
    "closed_at": "2019-04-08T17:00:17Z",
    "labels": [
      "question",
      "other"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1389",
    "body": "Hi, Srs !\r\n\r\nI need to implement the goaccess panel inside zabbix, has anyone managed to do this?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1389/comments",
    "author": "SlackMaker",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-03-05T13:01:27Z",
        "body": "Can you post some additional details about this? I'm not familiar with zabbix, however, it would be interesting to know what exactly you are trying to do."
      },
      {
        "user": "ottok",
        "created_at": "2019-04-08T14:24:10Z",
        "body": "How to implement a new panel in Zabbix is completely a Zabbix question and thus I recommend you close this issue as there is nothing in GoAccess to design/implement in this regard."
      },
      {
        "user": "allinurl",
        "created_at": "2019-04-08T17:00:17Z",
        "body": "Closing this. @SlackMaker feel free to post additional details if needed."
      }
    ]
  },
  {
    "number": 1386,
    "title": "I can't figure out which format from Microsoft Azure Web App",
    "created_at": "2019-02-26T15:28:03Z",
    "closed_at": "2020-12-17T15:15:43Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1386",
    "body": "Here are the first few lines of my log files... any help is appreciated.\r\n\r\nI tried the 6 built in configs: NCSA, Common, W3C and Squid.\r\n\r\n\r\n```\r\n#Software: Microsoft Internet Information Services 8.0\r\n#Fields: date time s-sitename cs-method cs-uri-stem cs-uri-query s-port cs-username c-ip cs(User-Agent) cs(Cookie) cs(Referer) cs-host sc-status sc-substatus sc-win32-status sc-bytes cs-bytes time-taken\r\n2019-02-07 19:21:04 ATLAS__2173 GET / X-ARR-LOG-ID=2b796b96-some-guid-86f2-e2a201b321a4 443 - 12.222.222.222 Mozilla/5.0+(Windows+NT+10.0;+Win64;+x64)+AppleWebKit/537.36+(KHTML,+like+Gecko)+Chrome/71.0.3578.98+Safari/537.36 hubspotutk=somekey;+_ga=GA1.2.2038255895.1529523876;+__utma=241314645.2038255895.1529523876.1531231321.1531423268.1;+__hstc=144062222.c555febc4421f576e150d9af50a810b2.1526563524507.1541019204126.1542123450202.12;+ARRAffinity=0f7eeaccb9c55553df67208d87bebcfa661e83dda4a08dbce9da1c92b42323a5;+ASP.NET_SessionId=xhysomeletters;+ai_user=Ks344|2019-02-05T14:44:00.039Z - www.domainname.com 304 0 0 353 1594 31\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1386/comments",
    "author": "wrek",
    "comments": [
      {
        "user": "0bi-w6n-K3nobi",
        "created_at": "2020-09-24T20:04:01Z",
        "body": "Try this, in `goaccess.conf`:\r\n\r\n`time-format %T` or `time-format %H:%M:%S`\r\n`date-format %F` or `date-format %Y-%m-%d`\r\n`log-format %d %t %^ %m %U %q %^ %^ %h %u %^ %R %v %s %^ %^ %b %^ %L`\r\n\r\nor in command-line:\r\n`--date-format='...' --time-format='...' --log-format='...'`\r\n\r\n**notes:**\r\nThe field user-agent `%u` will be parsed right for `Bowser` but not for `OS panel`.\r\nThe `GoAccess` need expand char `+` for `SPACE` for it."
      },
      {
        "user": "allinurl",
        "created_at": "2020-12-17T15:15:43Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1375,
    "title": "how to rename the dashboard",
    "created_at": "2019-02-13T06:46:37Z",
    "closed_at": "2019-02-15T13:05:46Z",
    "labels": [
      "question",
      "html report",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1375",
    "body": "Hi, guys!\r\nHow to modify the name of dashboard?  \r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1375/comments",
    "author": "hurricane1988",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-02-13T12:59:10Z",
        "body": "Please use `--html-report-title='My Awesome Web Stats'`"
      },
      {
        "user": "allinurl",
        "created_at": "2019-02-15T13:05:46Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1371,
    "title": "laravel log format doesn't match specifier",
    "created_at": "2019-02-04T09:56:53Z",
    "closed_at": "2019-02-05T14:51:44Z",
    "labels": [
      "invalid",
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1371",
    "body": "I have a laravel file and i want to run goaccess on it:\r\nHere is my sample log format:\r\n\r\n`[2019-02-04 08:27:54] debuge.ERROR: Symfony\\Component\\Debug\\Exception\\FatalThrowableError: Class 'Illuminate\\Mail\\MailServiceProvider' not found in /home/api/domains/dayacom.ir/public_html/vendor/laravel/lumen-framework/src/Application.php:176\r\nStack trace:\r\n#0 /home/api/domains/dayacom.ir/public_html/bootstrap/app.php(132): Laravel\\Lumen\\Application->register('Illuminate\\\\Mail...')\r\n#1 /home/api/domains/dayacom.ir/public_html/public/index.php(14): require('/home/api/domai...')\r\n#2 {main} {\"exception\":\"[object] (Symfony\\\\Component\\\\Debug\\\\Exception\\\\FatalThrowableError(code: 0): Class 'Illuminate\\\\Mail\\\\MailServiceProvider' not found at /home/api/domains/dayacom.ir/public_html/vendor/laravel/lumen-framework/src/Application.php:176)\r\n[stacktrace]\r\n#0 /home/api/domains/dayacom.ir/public_html/bootstrap/app.php(132): Laravel\\\\Lumen\\\\Application->register('Illuminate\\\\\\\\Mail...')\r\n#1 /home/api/domains/dayacom.ir/public_html/public/index.php(14): require('/home/api/domai...')\r\n#2 {main}\r\n\"} `\r\n\r\nbut with goaccess it through an error:\r\n`'[2019-02-04' doesn't match specifier '%h'`\r\n\r\ni run this goaccess command:\r\n` goaccess lumen.log -o /home/api/public_html/public/monitor.html --log-format=COMBINED --real-time-html`",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1371/comments",
    "author": "MasoudKaviani",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-02-05T14:51:44Z",
        "body": "Unfortunately your log format doesn't appear to be from an access log so goaccess won't be of much help. You will need to try a different tool though. "
      }
    ]
  },
  {
    "number": 1367,
    "title": "How do you extend the number of entries that show within a panel for HTML output?",
    "created_at": "2019-01-29T19:00:17Z",
    "closed_at": "2019-01-29T19:33:27Z",
    "labels": [
      "question",
      "html report"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1367",
    "body": "I've tried the following to limit the generated HTML panels list to just the \"HOSTS\" panel with the hope that it would expand to include more entries, but no such luck:\r\n\r\n```shell\r\ngrep '29/Jan' other_vhosts_access.log | \\\r\n\tgoaccess \\\r\n\t\t--log-format VCOMMON \\\r\n\t\t--agent-list \\\r\n\t\t--all-static-files \\\r\n\t\t--enable-panel=\"HOSTS\" \\\r\n\t\t--ignore-panel=\"REQUESTS\" \\\r\n\t\t--ignore-panel=\"REQUESTS_STATIC\" \\\r\n\t\t--ignore-panel=\"NOT_FOUND\" \\\r\n\t\t--ignore-panel=\"VISITORS\" \\\r\n\t\t--ignore-panel=\"OS\" \\\r\n\t\t--ignore-panel=\"BROWSERS\" \\\r\n\t\t--ignore-panel=\"VISIT_TIMES\" \\\r\n\t\t--ignore-panel=\"VIRTUAL_HOSTS\" \\\r\n\t\t--ignore-panel=\"REFERRERS\" \\\r\n\t\t--ignore-panel=\"REFERRING_SITES\" \\\r\n\t\t--ignore-panel=\"KEYPHRASES\" \\\r\n\t\t--ignore-panel=\"STATUS_CODES\" \\\r\n\t\t--ignore-panel=\"REMOTE_USER\" \\\r\n\t\t--ignore-panel=\"GEO_LOCATION\" \\\r\n\t\t--with-output-resolver \\\r\n\t\t-o SYSTEM_NAME_HERE-2019-01-29.html\r\n```\r\n\r\nI assume I'm doing something wrong, but the entries in the panel appear to be limited to 7 items.\r\n\r\nWhat I'm really trying to accomplish is either a longer listing of top visitors *or* a grouping of visitors by domain instead of via individual IPs or (in my case) by unique FQDN.\r\n\r\nThanks for your help.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1367/comments",
    "author": "atc0005",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-01-29T19:18:23Z",
        "body": "You can set the number of items through the preferences (HTML report) or through your config file, e.g., \r\n\r\n    html-prefs {\"autoHideTables\":true,\"layout\":\"horizontal\",\"perPage\":15,\"theme\":\"darkPurple\"}\r\n\r\nPlease note you may need to reload the report (Ctrl+Shift+r)"
      },
      {
        "user": "atc0005",
        "created_at": "2019-01-29T19:20:49Z",
        "body": "omg, I am so blind. Thank you for patiently/kindly pointing that out. :)"
      },
      {
        "user": "allinurl",
        "created_at": "2019-01-29T19:33:27Z",
        "body": "Glad to hear you were able to spot it :)"
      }
    ]
  },
  {
    "number": 1348,
    "title": "Custom JSON log format on go access. Error.",
    "created_at": "2019-01-09T12:29:50Z",
    "closed_at": "2019-10-23T15:30:13Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1348",
    "body": "Hi! I have an application that generates this kind of JSON:\r\n\r\n    { \"resourceId\": \"/SUBSCRIPTIONS/subscriptionid/RESOURCEGROUPS/resource/PROVIDERS/MICROSOFT.NETWORK/APPLICATIONGATEWAYS/TVSTGAPPGTW\", \"operationName\": \"ApplicationGatewayAccess\", \"time\": \"2018-12-21T15:00:04Z\", \"category\": \"ApplicationGatewayAccessLog\", \"properties\": {\"instanceId\":\"ApplicationGatewayRole_IN_1\",\"clientIP\":\"10.10.203.120\",\"clientPort\":52963,\"httpMethod\":\"POST\",\"requestUri\":\"/Reports/messagebroker/amf\",\"requestQuery\":\"X-AzureApplicationGateway-CACHE-HIT=0&SERVER-ROUTED=172.29.1.84&X-AzureApplicationGateway-LOG-ID=b9eba8b7-bf28-4779-b9c5-ba77faa09b3d&SERVER-STATUS=200\",\"userAgent\":\"Mozilla/5.0+(Windows+NT+10.0;+Win64;+x64;+rv:64.0)+Gecko/20100101+Firefox/64.0\",\"httpStatus\":200,\"httpVersion\":\"HTTP/1.1\",\"receivedBytes\":989,\"sentBytes\":340,\"timeTaken\":78,\"sslEnabled\":\"off\",\"host\":\"172.29.1.118:4180\"}}\r\n\r\nGoaccess can read but doesn't generate any graphics on dashboard, only number of errros.  What the custom log format? Any help would be great.\r\n\r\nThanks.\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1348/comments",
    "author": "marcelboccato",
    "comments": [
      {
        "user": "marcelboccato",
        "created_at": "2019-02-13T13:03:59Z",
        "body": "@allinurl can you help-me on this?\r\n\r\nI'm got following error:\r\n\r\n```\r\nParsed 1 linesproducing the following errors:\r\nToken '▒▒\"2019-02-12' doesn't match specifier '%d'\r\nFormat Errors - Verify your log/date/time format\r\n```\r\n\r\n\r\nThe configurations are:\r\n\r\n```\r\n# Start GoAccess\r\n/usr/local/bin/goaccess /var/log/azure/Microsoft.Azure.Networking.ApplicationGateway.LogProcessor/access.log* -o /var/www/html/report.html --real-time-html --port=8080 --log-format='\"%dT%tZ\"{%^:\"%h\",%^:\"%m\",%^:\"%U\",%^:\"%q\",%^:\"%u\",%^:\"%s\",%^:\"%H\",%^:\"%b\",%^:\"%T\",%^:%v}' --time-format='%T' --date-format='%Y-%m-%d'\r\n\r\n```\r\n-------------------------------------------------------------------------------------------------------\r\n\r\nThe logprocessor mentioned above it's working fine, fetching logs from my Azure Storage. No concern about this. It is strange that the same log format was working some days ago...Then i've updated to Goaccess 1.3 and got this.\r\n\r\nExemple from my logs:\r\n\r\n`\"2019-02-12T15:59:45Z\"{\"ClientIp\":\"1.1.1.1\",\"HttpMethod\":\"POST\",\"RequestUri\":\"/ws/services/WriterWsMessageDispatcher\",\"RequestQuery\":\"X-AzureApplicationGateway-CACHE-HIT=0&SERVER-ROUTED=1.1.1.1&X-AzureApplicationGateway-LOG-ID=609a3c46-65a1-4c50-87e3-e59b744b19e9&SERVER-STATUS=200\",\"UserAgent\":\"Apache+CXF+3.1.2\",\"HttpStatus\":\"200\",\"HttpVersion\":\"HTTP/1.1\",\"SentBytes\":\"83675\",\"TimeTaken\":\"146\",\"Host\":\"my-domain.com:31443\"}`\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2019-02-20T18:55:17Z",
        "body": "Sorry for the delay on my reply. So is the log that you are trying to parse w/ goaccess the former or the latter? e.g., \r\n\r\n    { \"resourceId\": \"/SUBSCRIPTIONS/subscriptionid/RESOURCEGROUPS/resource/PROVIDERS/MICROSOFT.NETWORK/APPLICATIONGATEWAYS/TVSTGAPPGTW\", \"operationName\": \"ApplicationGatewayAccess\", \"time\": \"2018-12-21T15:00:04Z\", \"category\": \"ApplicationGatewayAccessLog\", \"properties\": {\"instanceId\":\"ApplicationGatewayRole_IN_1\",\"clientIP\":\"10.10.203.120\",\"clientPort\":52963,\"httpMethod\":\"POST\",\"requestUri\":\"/Reports/messagebroker/amf\",\"requestQuery\":\"X-AzureApplicationGateway-CACHE-HIT=0&SERVER-ROUTED=172.29.1.84&X-AzureApplicationGateway-LOG-ID=b9eba8b7-bf28-4779-b9c5-ba77faa09b3d&SERVER-STATUS=200\",\"userAgent\":\"Mozilla/5.0+(Windows+NT+10.0;+Win64;+x64;+rv:64.0)+Gecko/20100101+Firefox/64.0\",\"httpStatus\":200,\"httpVersion\":\"HTTP/1.1\",\"receivedBytes\":989,\"sentBytes\":340,\"timeTaken\":78,\"sslEnabled\":\"off\",\"host\":\"172.29.1.118:4180\"}}\r\n\r\nOR\r\n\r\n    \"2019-02-12T15:59:45Z\"{\"ClientIp\":\"1.1.1.1\",\"HttpMethod\":\"POST\",\"RequestUri\":\"/ws/services/WriterWsMessageDispatcher\",\"RequestQuery\":\"X-AzureApplicationGateway-CACHE-HIT=0&SERVER-ROUTED=1.1.1.1&X-AzureApplicationGateway-LOG-ID=609a3c46-65a1-4c50-87e3-e59b744b19e9&SERVER-STATUS=200\",\"UserAgent\":\"Apache+CXF+3.1.2\",\"HttpStatus\":\"200\",\"HttpVersion\":\"HTTP/1.1\",\"SentBytes\":\"83675\",\"TimeTaken\":\"146\",\"Host\":\"my-domain.com:31443\"}"
      },
      {
        "user": "marcelboccato",
        "created_at": "2019-02-21T19:49:39Z",
        "body": "Hi @allinurl \r\nI don't know why, but reinstalling GoAccess 1.2 (was using 1.3), apparently back to normal and working without problems so far.\r\n\r\nThe latter log, starting with \"\"2019-02-12T15:59:45Z\".\r\nI'm afraid update to v1.3 ang get same error..."
      },
      {
        "user": "vincenzocapel",
        "created_at": "2019-06-23T20:00:56Z",
        "body": "HI,\r\ncan you help to identify this log format?\r\nI did lot of test but without success.\r\nthanks\r\n\r\n\r\n  \r\n   \"timestamp\":\"2016-10-06T22:47:51+02:00\",\r\n   \"remote_addr\":\"10.10.10.10\",\r\n   \"http_x_real_ip\":\"-\",\r\n   \"server_name\":\"10.10.10.11\",\r\n   \"uri\":\"/index.html\",\r\n   \"status\":\"200\",\r\n   \"body_bytes_sent\":\"118\",\r\n   \"request\":\"GET / HTTP/1.1\",\r\n   \"request_time\":\"0.000\",\r\n   \"http_user_agent\":\"Mozilla/5.0 (X11; Linux x86_64; rv:49.0) Gecko/20100101 Firefox/49.0\",\r\n   \"http_referer\":\"-\",\r\n   \"upstream_cache_status\":\"-\",\r\n   \"upstream_status\":\"-\",\r\n   \"upstream_response_time\":\"-\",\r\n   \"upstream_addr\":\"-\",\r\n   \"cdn_client\":\"-\",\r\n   \"content_id\":\"-\",\r\n   \"content_kind\":\"-\"\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2019-10-23T15:30:13Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1344,
    "title": "--keep-db-files not available",
    "created_at": "2019-01-04T03:54:43Z",
    "closed_at": "2019-01-04T04:02:09Z",
    "labels": [
      "question",
      "dependencies"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1344",
    "body": "When I want to use --keep-db-files command, it prompts me that it does not exist. When I recompile configure: error:*** Missing development libraries for Tokyo Cabinet Database./configure --enable-utf8 --enable-geoip=legacy --enable-tcb=btree.But when I do./configure --enable-utf8 --enable-geoip=legacy --enable-tcb, it works. Will the btree open",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1344/comments",
    "author": "orange723",
    "comments": [
      {
        "user": "orange723",
        "created_at": "2019-01-04T03:56:20Z",
        "body": "Storage method: in-memory Hash Database (Default) is displayed as follows after successful compilation"
      },
      {
        "user": "allinurl",
        "created_at": "2019-01-04T03:57:44Z",
        "body": "That's right. If `btree` or `memhash` is not specified, it defaults to the main hash tables."
      },
      {
        "user": "orange723",
        "created_at": "2019-01-04T04:02:37Z",
        "body": "> That's right. If `btree` or `memhash` is not specified, it defaults to the main hash tables.\r\n\r\nI want to use --keep-db-files this parameter how should I compile --keep-db-files is based on btree"
      },
      {
        "user": "allinurl",
        "created_at": "2019-01-04T04:05:17Z",
        "body": "This should enable `--keep-db-files` and `--load-from-disk`:\r\n\r\n    $ ./configure --enable-utf8 --enable-geoip=legacy --enable-tcb=btree\r\n    $ make\r\n    # make install\r\n\r\nor to uninstall\r\n\r\n    # make uninstall"
      },
      {
        "user": "orange723",
        "created_at": "2019-01-04T04:09:05Z",
        "body": "> This should enable `--keep-db-files` and `--load-from-disk`:\r\n> \r\n> ```\r\n> $ ./configure --enable-utf8 --enable-geoip=legacy --enable-tcb=btree\r\n> $ make\r\n> # make install\r\n> ```\r\n> or to uninstall\r\n> \r\n> ```\r\n> # make uninstall\r\n> ```\r\nConfigure: error: *** Missing development libraries for Tokyo Cabinet Database\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2019-01-04T04:22:36Z",
        "body": "Please try:\r\n\r\n    # apt-get install libtokyocabinet-dev\r\n"
      },
      {
        "user": "orange723",
        "created_at": "2019-01-04T04:54:58Z",
        "body": "> Please try:\r\n> \r\n> ```\r\n> # apt-get install libtokyocabinet-dev\r\n> ```\r\n\r\nI'm sorry to reply you so late. I can't find it using yum search using centos7 system"
      },
      {
        "user": "orange723",
        "created_at": "2019-01-04T05:39:02Z",
        "body": "I think I've found a solution. Thank you very much \r\nyum install tokyocabinet-devel ncurses-devel geoip-devel bzip2-devel\r\n./configure --enable-utf8 --enable-geoip=legacy --enable-tcb=btree"
      },
      {
        "user": "allinurl",
        "created_at": "2019-01-04T12:29:49Z",
        "body": "Glad to hear that :+1:  Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1343,
    "title": "Apache2 error log format",
    "created_at": "2019-01-03T00:12:14Z",
    "closed_at": "2019-07-02T02:00:37Z",
    "labels": [
      "invalid",
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1343",
    "body": "I have Apache on an Ubuntu setup with errorlog file that looks like this\r\n\r\n> [Wed Jan 02 06:25:31.604168 2019] [mpm_prefork:notice] [pid 20659] AH00163: Apache/2.4.29 (Ubuntu) configured -- resuming normal operations\r\n> [Wed Jan 02 06:25:31.604188 2019] [core:notice] [pid 20659] AH00094: Command line: '/usr/sbin/apache2'\r\n\r\nI am trying to read it with goaccess using this command, but need help with date and time format\r\ngoaccess /var/log/apache2/error..log --log-format='[%^ %d %t.%^ %^] [%^] [%^] [%^ %h:%^] %^: %U, %^: %R'\r\n\r\nThanks,\r\nNick",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1343/comments",
    "author": "fakename10",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-01-03T15:51:08Z",
        "body": "At this time, unfortunately you cannot analyze error logs. "
      },
      {
        "user": "allinurl",
        "created_at": "2019-07-02T02:00:37Z",
        "body": "Closing this, feel free to reopen it if needed."
      },
      {
        "user": "Josh-of-TT",
        "created_at": "2020-06-01T23:17:29Z",
        "body": "Will this feature ever be available?"
      },
      {
        "user": "allinurl",
        "created_at": "2020-06-02T13:27:22Z",
        "body": "@Josh-of-TT There are no immediate plans but I also don't want to completely close it and say it won't ever be available :)"
      }
    ]
  },
  {
    "number": 1342,
    "title": "Fetch logs using FTP",
    "created_at": "2019-01-02T22:48:19Z",
    "closed_at": "2019-01-07T10:52:01Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1342",
    "body": "Is there any way to download logs from another server using FTP and make the goaccess read them in real time? If it does not exist, it would be a good option because the goaccess takes a lot of CPU on servers with high traffic.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1342/comments",
    "author": "Yokutto",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2019-01-03T15:52:50Z",
        "body": "You can certainly use something like sftp or even better, sshfs and read the mounted log with goaccess."
      },
      {
        "user": "Yokutto",
        "created_at": "2019-01-03T19:49:30Z",
        "body": "You can give me an example of configuration that i can use?\r\n\r\nAnother question, I tried to use GoAcess to read a log created by a CDN that I use, but it always gives an error with the filter, I think and because the UserAgent is in the middle of the log, then goaccess can not differentiate a filter from other. In the examples inside the configuration, I have seen that the useragent is always inside quotation marks or something. Is there any way to make the goaccess read this type of log?\r\n\r\nA line of the log\r\n> 2019-01-03\t19:16:34\tGET\t187.x.x.x\thttp\t-\tMozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.98 Safari/537.36\t155\t672\t509\t151.139.61.116\t0.012\t200\t-\t/path/example.png\t-\t-\r\n\r\nFilter that i use: \r\n\r\n> %d %t %m %h %H %R %u %^ %b %^ %^ %T %s %q %U %^ %^\r\n\r\nThanks for your help"
      },
      {
        "user": "allinurl",
        "created_at": "2019-01-07T04:00:59Z",
        "body": "You can try this:\r\n\r\n```\r\n# apt-get install sshfs\r\n# mkdir server\r\n# sshfs root@remote-server.com:/data/www/nginx/logs/ ./server/\r\n```\r\n\r\nFor your log, unofnurtly you won't be able since you are not delimiting some of the fields, for instance, the user agent has spaces in between but is not enclosed within quotes."
      },
      {
        "user": "Yokutto",
        "created_at": "2019-01-07T10:52:01Z",
        "body": "I will try to resolve it with my CDN. Thanks for you help, have a good 2019."
      },
      {
        "user": "allinurl",
        "created_at": "2019-01-07T13:03:58Z",
        "body": "Thank you, you as well!"
      }
    ]
  },
  {
    "number": 1341,
    "title": "goaccess for AWS VPC flowlogs",
    "created_at": "2018-12-28T19:16:05Z",
    "closed_at": "2019-10-23T15:29:16Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1341",
    "body": "goaccess for AWS VPC flowlogs are throwing errors even after trying the formats like\r\n\r\n--log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %^ %D' --date-format=%d/%b/%Y --time-format=%T",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1341/comments",
    "author": "mukunthd",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-12-31T15:09:33Z",
        "body": "Please post a few lines from your access log. Thanks."
      },
      {
        "user": "mukunthd",
        "created_at": "2019-01-02T17:09:02Z",
        "body": "VPC logs from AWS are zipped but if you look into the actual file, the below is the actual format (lines)\r\n\r\n```\r\n2018-09-22T20:28:14.000Z 2 633112549318 eni-d68830d4 209.141.42.153 10.155.108.192 54252 8088 6 1 40 1537648094 1537648129 ACCEPT OK\r\n2018-09-22T20:28:14.000Z 2 633112549318 eni-d68830d4 197.46.163.49 10.155.108.192 28057 80 6 1 40 1537648094 1537648129 ACCEPT OK\r\n2018-09-22T20:28:39.000Z 2 633112549318 eni-d68830d4 176.119.7.38 10.155.108.192 42742 4094 6 1 40 1537648119 1537648157 ACCEPT OK\r\n2018-09-22T20:28:40.000Z 2 633112549318 eni-d68830d4 134.119.193.57 10.155.108.192 40478 64133 6 1 40 1537648120 1537648179 ACCEPT OK\r\n2018-09-22T20:29:12.000Z 2 633112549318 eni-d68830d4 - - - - - - - 1537648152 1537648249 - NODATA\r\n```"
      },
      {
        "user": "allinurl",
        "created_at": "2019-01-03T15:58:12Z",
        "body": "I'm not sure if you would consider this to be an access log, so there's no much for goaccess to extract from it. You could try this, although the request file is missing from your log, e.g.,\r\n\r\n    goaccess access.log --log-format='%dT%t.%^ %^ %^ %v %h %^ %b %^ %^ %^ %^ %^ %^ %U %^' --date-format=%Y-%m-%d --time-format=%T"
      },
      {
        "user": "allinurl",
        "created_at": "2019-10-23T15:29:16Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1337,
    "title": "How to use Chinese with GoAccess?",
    "created_at": "2018-12-24T03:30:14Z",
    "closed_at": "2019-01-04T03:38:39Z",
    "labels": [
      "question",
      "other"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1337",
    "body": "Hello，everyone， i want make out to use chinese, but i don't want to change LANG. Have any method to realize this?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1337/comments",
    "author": "damaainan",
    "comments": [
      {
        "user": "damaainan",
        "created_at": "2018-12-24T03:43:53Z",
        "body": "Like this\r\n```\r\nexport LANG=\"zh_CN.UTF-8\"      \r\ngoaccess -a -d -f access.log -p goaccess.conf -o report_all.html  \r\nexport LANG=\"en_US.UTF-8\"     \r\n````"
      },
      {
        "user": "allinurl",
        "created_at": "2018-12-24T05:08:07Z",
        "body": "You have to set `LANG` as it relies on `gettext` to perform the translations."
      },
      {
        "user": "allinurl",
        "created_at": "2018-12-24T05:10:46Z",
        "body": "You could try something like:\r\n\r\n    LANG=\"zh_CN.UTF-8\" bash -c 'goaccess access.log --log-format=COMBINED'"
      },
      {
        "user": "knight0zh",
        "created_at": "2018-12-27T04:44:14Z",
        "body": "> You could try something like:\r\n> \r\n> ```\r\n> LANG=\"zh_CN.UTF-8\" bash -c 'goaccess access.log --log-format=COMBINED'\r\n> ```\r\n\r\n@allinurl \r\n\r\n\r\n    root@123.123.123.123-bmpt report # LANG=\"zh_CN.UTF-8\" bash -c 'goaccess  /data/logs/nginx/www.gtarcade.com.access.log -o /data/html/report/www.html --log-format='%h %^[%d:%t %^] %v \"%r\" \"%s\" %b \"%R\" \"%u\" %^'  --real-time-html --time-format=%T --date-format='%d/%b/%Y' '\r\nParsing... [0] [0/s]\r\nGoAccess - version 1.3 - Dec 25 2018 09:57:00\r\nConfig file: No config file used\r\n\r\nFatal error has occurred\r\nError occurred at: src/parser.c - parse_log - 2764\r\n未在配置文件中设置时间格式\r\n\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2018-12-29T17:08:57Z",
        "body": "Please ensure you properly escape the quotes. e.g.,\r\n\r\n    # LANG=\"zh_CN.UTF-8\" bash -c 'goaccess  /data/logs/nginx/www.gtarcade.com.access.log -o /data/html/report/www.html --log-format=\\'%h %^[%d:%t %^] %v \"%r\" \"%s\" %b \"%R\" \"%u\" %^\\'  --real-time-html --time-format=%T --date-format=%d/%b/%Y'"
      },
      {
        "user": "orange723",
        "created_at": "2019-01-04T03:34:09Z",
        "body": "> LANG=\"zh_CN.UTF-8\" bash -c\r\n\r\nvery good , I succeeded in using Chinese "
      },
      {
        "user": "allinurl",
        "created_at": "2019-01-04T03:38:39Z",
        "body": "Awesome. Closing this. Feel free to reopen it if needed."
      },
      {
        "user": "orange723",
        "created_at": "2019-01-09T03:24:12Z",
        "body": "> 真棒。关闭这个。如果需要，请随意重新打开。\r\n\r\nWhen I use LANG=\" zh_cn.utf-8 \"bash -c on another ubuntu1604 server does not show Chinese, I try to execute LANG=\" zh_cn.utf-8\" to start goaccess again and still show English"
      },
      {
        "user": "allinurl",
        "created_at": "2019-01-18T01:36:39Z",
        "body": "Is Chinese locals installed on the machine? e.g., ‘locale -a’"
      },
      {
        "user": "oodenough",
        "created_at": "2024-05-08T08:20:24Z",
        "body": "If not, you may install with `sudo apt install language-pack-zh-hans` on Debian/Ubuntu. And then execute `LANG=\"zh_CN.UTF-8\" bash -c 'goaccess ...'`."
      }
    ]
  },
  {
    "number": 1330,
    "title": "SSH auth log in GoAccess",
    "created_at": "2018-12-07T15:40:45Z",
    "closed_at": "2018-12-08T00:09:24Z",
    "labels": [
      "question",
      "other"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1330",
    "body": "Is it possible to visualize the ssh auth.log from the server (including geoip) in GoAccess? \r\nIf so, how should I configure the log format?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1330/comments",
    "author": "hitmax117",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-12-07T16:15:24Z",
        "body": "It's not possible to parse the auth.log. "
      }
    ]
  },
  {
    "number": 1326,
    "title": "Please help with my error log-format (custom nginx)",
    "created_at": "2018-12-05T21:16:55Z",
    "closed_at": "2018-12-21T06:52:34Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1326",
    "body": "Hi\r\ntried this\r\n\r\n    log-format %d %t %^ %^ %^ %^ \"%r\" %s %b \"%R\" \"%u\" \"%T\" \"%^\" \"%^\" \"%^\"\r\n\r\nlog file errors.log\r\n\r\n    2018/12/02 06:33:08 [error] 8001#8001: *655829940 \"/var/www/html/index.html\" is not found (2: No such file or directory), client: 104.222.43.41, server: , request: \"GET / HTTP/1.1\", host: \"news1.golderynsaffet.webcam\"\r\n\r\nreceived\r\n```\r\nToken 'OST' doesn't match specifier '%s'\r\nToken 'ET' doesn't match specifier '%s'\r\nToken 'ET' doesn't match specifier '%s'\r\nToken 'OST' doesn't match specifier '%s'\r\nToken 'ET' doesn't match specifier '%s'\r\nToken 'OST' doesn't match specifier '%s'\r\nToken 'ET' doesn't match specifier '%s'\r\nToken 'OST' doesn't match specifier '%s'\r\nToken 'ET' doesn't match specifier '%s'\r\nToken 'ET' doesn't match specifier '%s'\r\n```\r\n\r\nplease tell me how to make a format? \r\nexplain to me how you do it. I do not understand, but I want to learn",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1326/comments",
    "author": "ilgosen",
    "comments": [
      {
        "user": "ilgosen",
        "created_at": "2018-12-05T21:33:25Z",
        "body": "log-format %d %t %^ %^ %^ %^ %^ %^ %^ %^ %^ %^ %^ %^ %^ ~h{,} %^ \"%r\" %v"
      },
      {
        "user": "ilgosen",
        "created_at": "2018-12-05T21:45:39Z",
        "body": "html is not exported ("
      },
      {
        "user": "allinurl",
        "created_at": "2018-12-06T13:08:04Z",
        "body": "The following should work for the line you posted. However, please note goaccess is NOT an error log parser, so depending on the message, it will work or it may not.\r\n\r\n    goaccess access.log --log-format='%d %t %^ %^ \"%^\" %^, %^: %h, %^\"%r\", %^: \"%v\"' --date-format='%Y/%m/%d' --time-format=%T"
      },
      {
        "user": "ilgosen",
        "created_at": "2018-12-06T16:09:12Z",
        "body": "Parsing... [0] [0/s]\r\nnot exported "
      },
      {
        "user": "allinurl",
        "created_at": "2018-12-06T20:54:29Z",
        "body": "As I said, you need to parse an access log not an error log for goaccess to work."
      }
    ]
  },
  {
    "number": 1315,
    "title": "Please, help with my log format",
    "created_at": "2018-11-30T15:16:13Z",
    "closed_at": "2018-12-03T13:00:19Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1315",
    "body": "I have such logs:\r\n2018-11-30 07:55:00,741 [VER:7.5.0.0][MK:UK][CL:UAT][CR:(null)][CID:(null)] INFO   {Scheduler} Starting\r\n2018-11-30 07:55:00,741 [VER:7.5.0.0][MK:UK][CL:UAT][CR:(null)][CID:(null)] INFO   {global_asax} Application started\r\nI want to parse it with GoAccess, and i cant make correct format for it, please help ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1315/comments",
    "author": "ShklyanikVladislav",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-12-03T13:00:19Z",
        "body": "It looks like your log is not an access log. GoAccess parses access logs only."
      }
    ]
  },
  {
    "number": 1294,
    "title": "Log format for this one?",
    "created_at": "2018-11-05T14:16:47Z",
    "closed_at": "2018-11-18T04:13:03Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1294",
    "body": "```\r\n2018-11-05T08:32:31-05:00 app01 httpd: 10.136.47.231 - - [05/Nov/2018:08:32:31 -0500] \"HEAD / HTTP/1.0\" 200 315 \"-\" \"-\"\r\n2018-11-05T08:32:31-05:00 app01 httpd: 10.136.66.86 - - [05/Nov/2018:08:32:31 -0500] \"HEAD / HTTP/1.0\" 200 315 \"-\" \"-\"\r\n2018-11-05T08:32:35-05:00 app01 httpd: 10.136.47.231 - - [05/Nov/2018:08:32:35 -0500] \"HEAD / HTTP/1.0\" 200 315 \"-\" \"-\"\r\n2018-11-05T08:32:35-05:00 app01 httpd: 10.136.66.86 - - [05/Nov/2018:08:32:35 -0500] \"HEAD / HTTP/1.0\" 200 315 \"-\" \"-\"\r\n2018-11-05T08:32:37-05:00 app01 httpd: 10.136.47.231 - - [05/Nov/2018:08:32:37 -0500] \"HEAD / HTTP/1.0\" 200 315 \"-\" \"-\"\r\n2018-11-05T08:32:37-05:00 app01 httpd: 10.136.66.86 - - [05/Nov/2018:08:32:37 -0500] \"HEAD / HTTP/1.0\" 200 315 \"-\" \"-\"\r\n2018-11-05T08:32:41-05:00 app01 httpd: 10.136.47.231 - - [05/Nov/2018:08:32:41 -0500] \"HEAD / HTTP/1.0\" 200 315 \"-\" \"-\"\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1294/comments",
    "author": "damirabal",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-11-06T02:57:50Z",
        "body": "This should work:\r\n\r\n    goaccess access.log --log-format='%^ %v %^ %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "allinurl",
        "created_at": "2018-11-18T04:13:03Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1290,
    "title": "custom log format / additional identifiers",
    "created_at": "2018-11-01T15:36:31Z",
    "closed_at": "2018-11-23T15:49:03Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1290",
    "body": "i'm trying to make goaccess understand my custom log format. basically it's standard apache, but extended by some fields. i've read parser.c to build my own format, but failed to find the following identifiers:\r\n\r\n\r\n```\r\n 127.0.0.1- - [01/Nov/2018:07:48:51 +0000] \"GET / HTTP/1.1\" 302 120 \"-\" \"Mozilla/5.0\" 616 6347 mod_deflate: In:124 Out:102:82pct 62485 0 - localhost\r\n<---------------- A P A C H E  F O R M A T ----------------------------------------->  %I  %O  mod_deflate: In:%IC Out:%OC:%Cpct   %D %k %s   %v\r\n```\r\n%I received bytes (total)\r\n%O sent bytes (total)\r\n%IC compression input bytes\r\n%OC compresseion output bytes\r\n%C compression ratio\r\n%k keepalive requests\r\n%s status \r\n\r\nhere's the apache log format config:\r\n```\r\nLogFormat \"%h %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\" %I %O mod_deflate: In:%{deflate_in_info}n Out:%{deflate_out_info}n:%{deflate_ratio_info}npct %D %k %X %V\"\r\n```\r\n\r\nin general it would be useful to have a \"ignore\"-identifier, so that we can parse logs, even though some fields are not implemented.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1290/comments",
    "author": "pille",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-11-02T12:09:01Z",
        "body": "Please try the following:\r\n\r\n    goaccess access.log --log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %^ %^ %^ %^ %^ %D %^' --date-format=%d/%b/%Y --time-format=%T\r\n"
      },
      {
        "user": "pille",
        "created_at": "2018-11-02T12:20:42Z",
        "body": "thanks. `%^` was the field i was missing. \r\nfeel free to close if you don't plan on implementing compression ratio report."
      },
      {
        "user": "allinurl",
        "created_at": "2018-11-23T15:49:03Z",
        "body": "Closing this. Please feel free to open a new issue so I can look into the compression ratio panel. Thanks."
      }
    ]
  },
  {
    "number": 1281,
    "title": "How should the Format should look like?",
    "created_at": "2018-10-25T13:00:07Z",
    "closed_at": "2018-11-18T04:13:16Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1281",
    "body": "192.168.1.96 - - [25/Oct/2018:14:27:47 +0200] \"GET /shop/caller.php HTTP/1.1\" 200 20",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1281/comments",
    "author": "shanke",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-10-25T13:58:34Z",
        "body": "    goaccess access.log --log-format=COMMON"
      },
      {
        "user": "allinurl",
        "created_at": "2018-11-18T04:13:16Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1279,
    "title": "Custom log formating",
    "created_at": "2018-10-24T07:09:08Z",
    "closed_at": "2018-10-24T15:52:32Z",
    "labels": [
      "question",
      "log/date/time format",
      "other"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1279",
    "body": "hey, i need to know if i can use this tool to analyze my log files which are not web server logs : \r\na sample of my log files:\r\n\r\n    14224430529 | TX: id: 401550a, data:  27 0 0 0 0 0 0 212, dlc: 8, flags: 30004\r\n    14224430597 | TX: id: 401550a, data:  27 0 0 0 0 0 0 213, dlc: 8, flags: 30004\r\n    14224430662 | RX: id: 401550a, data:  27 0 0 0 0 0 0 214, dlc: 8, flags: 30004\r\n\r\nwhere the first column is a timestamp, and it does not have an IP field or protocol\r\nand i wanted to analyze this based on some calculation of mine \r\n\r\n if so , how can i configure it to work with my logs\r\nthanks ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1279/comments",
    "author": "ashrafyassin",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-10-24T15:43:38Z",
        "body": "Unfortunately you can't. To properly parse a log it needs a valid IPv4/6, date/time and the request."
      }
    ]
  },
  {
    "number": 1276,
    "title": "Parsing timestamps from Traefik",
    "created_at": "2018-10-22T17:12:15Z",
    "closed_at": "2018-10-22T18:05:11Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1276",
    "body": "Example timestamp `2018-10-12T17:20:36.403088507Z`\r\n\r\n`%T` doesn't seem to be able to parse that sort of precision. I tried a few different methods without success.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1276/comments",
    "author": "ipmb",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-10-22T17:53:21Z",
        "body": "The following format should do it: `2018-10-12T17:20:36.403088507Z` = `%dT%t.%^`"
      },
      {
        "user": "ipmb",
        "created_at": "2018-10-22T18:05:11Z",
        "body": "Perfect... thanks!"
      }
    ]
  },
  {
    "number": 1275,
    "title": "Need Help with custom nginx access Logs",
    "created_at": "2018-10-20T18:28:16Z",
    "closed_at": "2018-10-21T18:30:51Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1275",
    "body": "Hello guys,\r\nI came across this library and after seeing demo i think its really great, i want to use it, however i couldnt figure out right configuration for my cusom nginx log format.. \r\n\r\nThis is what i have in my nginx conf for custom format. \r\n```\r\n'$remote_addr - $remote_user [$time_local] \"$request\" '\r\n'$status $body_bytes_sent \"$http_referer\" '\r\n'\"$http_user_agent\" \"$http_x_forwarded_for\"';\r\n```\r\nAnd this is how a line of access log look like for me -\r\n```\r\n27.49.201.3 - - [20/Oct/2018:23:45:19 +0530] \"GET /updatefirmware HTTP/1.0\" 200 2 \"-\" \"MyClient\" \"-\"\r\n```\r\n\r\nCan somebody please help me with right configuration for parsing these logs... \r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1275/comments",
    "author": "arihantdaga",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-10-20T19:10:51Z",
        "body": "This should work:\r\n\r\n    goaccess access.log --log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %^' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "arihantdaga",
        "created_at": "2018-10-21T06:12:03Z",
        "body": "It Did.. @allinurl  Thanks a lot.. This is awesome.. "
      },
      {
        "user": "allinurl",
        "created_at": "2018-10-21T18:30:51Z",
        "body": "Great! Closing this."
      }
    ]
  },
  {
    "number": 1263,
    "title": "goaccess json.c file tip trojan",
    "created_at": "2018-10-10T00:51:14Z",
    "closed_at": "2018-10-10T11:04:19Z",
    "labels": [
      "question",
      "security",
      "other"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1263",
    "body": "hello! My cloud host caveat goaccess/src/json.c  is a trojan file (type: Webshell) . Why is that?\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1263/comments",
    "author": "docvirt",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-10-10T00:55:00Z",
        "body": "Sounds more like an issue on the scanner though. Not sure why it's reporting it as such. Are you able to report this issue to them?"
      },
      {
        "user": "docvirt",
        "created_at": "2018-10-10T11:04:03Z",
        "body": "thank you @allinurl "
      }
    ]
  },
  {
    "number": 1256,
    "title": " nothing valid to process",
    "created_at": "2018-10-04T07:34:24Z",
    "closed_at": "2018-10-15T14:00:42Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1256",
    "body": "",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1256/comments",
    "author": "sontqq",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-10-04T14:34:44Z",
        "body": "Please provide better details on this issue. Also please post how you are running goaccess and a few sample lines from your log."
      },
      {
        "user": "allinurl",
        "created_at": "2018-10-15T14:00:42Z",
        "body": "Closing this. "
      }
    ]
  },
  {
    "number": 1255,
    "title": "Do not get goaccess to work with my log file",
    "created_at": "2018-10-04T05:59:45Z",
    "closed_at": "2018-10-09T17:02:12Z",
    "labels": [
      "question",
      "log/date/time format",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1255",
    "body": "Hi, I went through all kind of issues, but I am not able to get the default vcombined to work\r\n\r\nTHis is an example of a line:\r\n\r\ntestma.mantagifts.com:443 ip-217-105-39-28.ip.prioritytelecom.net - mantasalesapp [04/Oct/2018:07:53:48 +0200] \"POST /sales_app/backups/backup.php HTTP/1.1\" 200 427 \"-\" \"Appcelerator Titanium/7.4.0 (iPad/12.0; iOS; en_US;)\"\r\n\r\nThis is my command:\r\n> goaccess /var/log/apache2/access_ssl_testma.mantagifts.com.log --log-format=VCOMBINED\r\n\r\n..\r\nToken 'ip-217-105-39-28.ip.prioritytelecom.net' doesn't match specifier '%h'\r\n..\r\nFormat Errors - Verify your log/date/time format\r\n\r\nI have tried multiple thinkgs (custom log, time etc),but nothing seem to work. Can you help me with this?\r\nThanks\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1255/comments",
    "author": "Jurnjuistdit",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-10-05T14:06:38Z",
        "body": "You need a valid IPv4/6. GoAccess doesn't parse the hostname as it's not completely unique. You will need to strip it out from your log and replace it with a valid IP, or skip resolving the IP."
      },
      {
        "user": "Jurnjuistdit",
        "created_at": "2018-10-08T07:40:20Z",
        "body": "Ok, thanks. Will manage this"
      },
      {
        "user": "allinurl",
        "created_at": "2018-10-09T17:02:12Z",
        "body": "Closing this, feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1249,
    "title": "OS & Browsers Unknown",
    "created_at": "2018-10-02T04:26:37Z",
    "closed_at": "2018-10-02T11:12:34Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1249",
    "body": "hi please help\r\nlook I have this on vhost\r\n\r\n```\r\nLogFormat \"%{X-Forwarded-For}i %l %u %t \\\"%r\\\" %>s %b \\\"%{User-agent}i\\\"\" varnishcombined\r\nCustomLog /var/log/httpd/access_custom.log varnishcombined\r\n```\r\n\r\n\r\nnext are a few lines from log\r\n\r\n```\r\n172.69.206.20 - - [02/Oct/2018:04:21:29 +0000] \"GET /wp-content/uploads/2018/09/El-Higua%C3%ADn-colombiano-1024x576.jpg HTTP/1.1\" 200 56145 \"Mozilla/5.0 (Linux; Android 6.0.1; SM-G610M Build/MMB29K; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/69.0.3497.100 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/191.0.0.35.96;]\"\r\n172.69.206.98 - - [02/Oct/2018:04:21:29 +0000] \"GET /wp-content/uploads/2018/09/ronaldo_penaltie_fifa19-1-1024x576.jpg HTTP/1.1\" 200 120648 \"Mozilla/5.0 (Linux; Android 6.0.1; SM-G610M Build/MMB29K; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/69.0.3497.100 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/191.0.0.35.96;]\"\r\n172.69.206.92 - - [02/Oct/2018:04:21:30 +0000] \"GET /wp-content/uploads/2016/07/Rueda_28_07_16-1024x512.jpg HTTP/1.1\" 200 76519 \"Mozilla/5.0 (Linux; Android 6.0.1; SM-G610M Build/MMB29K; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/69.0.3497.100 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/191.0.0.35.96;]\"\r\n172.69.206.62 - - [02/Oct/2018:04:21:29 +0000] \"POST /wp-admin/admin-ajax.php HTTP/1.1\" 200 45 \"Mozilla/5.0 (Linux; Android 6.0.1; SM-G610M Build/MMB29K; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/69.0.3497.100 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/191.0.0.35.96;]\"\r\n172.69.206.86 - - [02/Oct/2018:04:21:29 +0000] \"GET /wp-admin/admin-ajax.php?action=alm_query_posts&nonce=77d43de364&query_type=standard&id=inicio&post_id=34799&slug=marcelo-gallardo-entrenador-perfecto-seleccion-colombia&canonical_url=http%3A%2F%2Fhablaelbalon.com%2Ffutbol-colombiano%2Fmarcelo-gallardo-entrenador-perfecto-seleccion-colombia&cache_logged_in=false&repeater=default&theme_repeater=null&acf=&nextpage=&cta=&comments=&users=&post_type%5B%5D=post&sticky_posts=&post_format=&category=la-11-ideales%2Canalisis%2Cco-analisis%2Csc-analisis%2Cbalon-de-bolsillo%2Cbalon-de-cuero%2Cbalon-de-papel%2Ccolombianos-en-el-exterior%2Ccronica%2Cla-diamante-en-bruto%2Ceditorial%2Cla-el-colombiano%2Centretenimiento%2Cespecial%2Cevento%2Cfutbol-colombiano%2Clas-claves%2Cla-las-claves%2Csc-las-claves%2Cliga-aguilas%2Cnoticias%2Cla-noticias%2Cla-recordando%2Crusia-2018%2Cla-se-busca%2Cseleccion-colombia%2Ctop%2Cvoz-del-hincha&category__not_in=&tag=&tag__not_in=&taxonomy=&taxonomy_terms=&taxonomy_operator=&taxonomy_relation=&meta_key=&meta_value=&meta_compare=&meta_relation=&meta_type=&author=&year=&month=&day=&post_status=&order=DESC&orderby=date&post__in=&post__not_in=&exclude=&search=&custom_args=&posts_per_page=5&page=0&offset=0&preloaded=true&preloaded_amount=10&seo_start_page=1&paging=false&previous_post=&lang= HTTP/1.1\" 200 22148 \"Mozilla/5.0 (Linux; Android 6.0.1; SM-G610M Build/MMB29K; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/69.0.3497.100 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/191.0.0.35.96;]\"\r\n141.101.110.80 - - [02/Oct/2018:04:21:32 +0000] \"GET /futbol-colombiano/asi-viven-los-11-del-inolvidable-junior-campeon-del-93 HTTP/1.1\" 200 377285 \"Mozilla/5.0 (Linux; Android 6.0; CAM-L03 Build/HUAWEICAM-L03; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/69.0.3497.100 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/190.0.0.34.94;]\"\r\n172.69.206.86 - - [02/Oct/2018:04:21:35 +0000] \"POST / HTTP/1.1\" 204 - \"Mozilla/5.0 (Linux; Android 6.0.1; SAMSUNG-SM-J320A Build/MMB29K; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/69.0.3497.91 Mobile Safari/537.36 [FB_IAB/FB4A;FBAV/190.0.0.34.94;]\"\r\n\r\n```\r\nI'm using this: `goaccess /var/log/httpd/access_custom.log --log-format=COMBINED`\r\n\r\nand I'm getting 100% OS unknown and similar with browsers\r\n\r\nplease help, what is wrong?\r\nthnx in advance",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1249/comments",
    "author": "johanflorez",
    "comments": [
      {
        "user": "johanflorez",
        "created_at": "2018-10-02T11:12:34Z",
        "body": "hi I solve this with\r\n`goaccess /var/log/httpd/access_custom.log --log-format='%h %l %^[%d:%t %^] \"%r\" %s %b %u' --date-format='%d/%b/%Y' --time-format=%T`\r\nthanks anyway"
      },
      {
        "user": "allinurl",
        "created_at": "2018-10-02T11:54:34Z",
        "body": "    goaccess access.log --log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%u\"' --date-format=%d/%b/%Y --time-format=%T"
      }
    ]
  },
  {
    "number": 1241,
    "title": "Time Distribution by HTTP Status code",
    "created_at": "2018-09-20T10:56:01Z",
    "closed_at": "2018-09-20T14:03:16Z",
    "labels": [
      "duplicate",
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1241",
    "body": "Is there any way to generate Time Distribution by HTTP Status code chart?\r\nActually one of most important charts for analysis.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1241/comments",
    "author": "zoulja",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-09-20T11:59:51Z",
        "body": "You can preprocess and feed that goaccess e.g.,\r\n\r\n    # awk '$9~/500/' access.log | goaccess -"
      },
      {
        "user": "zoulja",
        "created_at": "2018-09-20T12:16:14Z",
        "body": "I got the point, but it's really resource consuming and not user-friendly way, need to regenerate report for each response code and so on.\r\nIs there any chance such function will be available in the future out-of-the-box?"
      },
      {
        "user": "allinurl",
        "created_at": "2018-09-20T12:21:14Z",
        "body": "Great question. Yes I do agree that is not the nicest way, though, is a workaround while #117 is implemented. Stay tuned for that feature 😀"
      }
    ]
  },
  {
    "number": 1232,
    "title": "Can't see any User-Agent",
    "created_at": "2018-09-18T07:52:15Z",
    "closed_at": "2018-09-18T21:41:16Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1232",
    "body": "I checked documentation, examples and issue tracker but still haven't realized what I should do to get User-Agent/Browser info - I always see Unknown\r\nMy log sample:\r\n\r\n> 191.207.59.68 - [14/Sep/2018:00:00:01 +0800] 0.003 \"/API/peer/OnLinePing\" 200 80 612 656 \"query\" \"\" \"8080\" \"161443355\" \"1\" \"127.0.0.1:8081\" \"0.002\" \"Mozilla/5.0 (PlayStation 4 6.00) AppleWebKit/605.1.15 (KHTML, like Gecko)\"\r\n> 125.26.31.174 - [14/Sep/2018:00:00:01 +0800] 0.003 \"/API/peer/GetInfo\" 200 206 312 769 \"query\" \"\" \"8080\" \"161443358\" \"1\" \"127.0.0.1:8081\" \"0.003\" \"OTT-iOS\"\r\n> 5.167.160.65 - [14/Sep/2018:00:00:01 +0800] 0.003 \"/API/peer/GetInfo\" 200 206 312 769 \"query\" \"\" \"8080\" \"161443356\" \"1\" \"127.0.0.1:8081\" \"0.003\" \"OTT-iOS\"\r\n> 137.110.51.114 - [14/Sep/2018:00:00:01 +0800] 0.010 \"/API/peer/ReportData\" 200 53 383 615 \"query\" \"\" \"8080\" \"161443363\" \"1\" \"127.0.0.1:8081\" \"0.010\" \"OTT-Android\"\r\n\r\nLog format: %h - [%d:%t %^] %T \"%r\" %s %b %^ %b \"%^\" \"%^\" \"%^\" \"%^\" \"%^\" \"%^\" \"%^\" \"%u\"\r\n\r\nPlease advise how I can fix it.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1232/comments",
    "author": "zoulja",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-09-18T13:57:24Z",
        "body": "This should do it:\r\n\r\n    goaccess access.log --log-format='%h %^[%d:%t %^] %T \"%U\" %s %^ %^ %b \"%q\" %^ %^ %^ %^ %^ %^ \"%u\"' --date-format=%d/%b/%Y --time-format=%T --http-method=no --http-protocol=no"
      },
      {
        "user": "zoulja",
        "created_at": "2018-09-18T21:20:15Z",
        "body": "Thanks for checking this.\r\nI'm really confused but result still the same: Browser/OS are displayed as Unknown\r\n(actually \"query\" here is just a really static string, not HTTP query)\r\n\r\nUpdate:\r\nI was able to get UA info in HTML report, thanks"
      }
    ]
  },
  {
    "number": 1223,
    "title": "Can I get one vale from nginx log $request_body?",
    "created_at": "2018-09-03T10:00:21Z",
    "closed_at": "2018-09-20T14:06:23Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1223",
    "body": "In my header request_body have many value,like app_version,os_version,user_id...\r\n\r\nCan I get one vale from nginx log $request_body?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1223/comments",
    "author": "Haitianisgood",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-09-03T16:16:47Z",
        "body": "In your log, what `request_body` looks like? Could you please post a few sample lines?"
      },
      {
        "user": "Haitianisgood",
        "created_at": "2018-09-04T02:01:35Z",
        "body": "request_body:\r\n\r\n```\r\nappid=1&mac=d7909c4f6d3a4xe9842ccf57dc23b656&version=6.2.9&count=200&screen=375.000000%20x%20667.000000&from=d&seq=52769&os=ios10.3.3&userId=13999218&token=84a8867aebxea814e830f8f5bfb1a79f&versionCode=20180203&model=iPhone%206\r\n```"
      },
      {
        "user": "allinurl",
        "created_at": "2018-09-06T12:04:37Z",
        "body": "If you are not using%e within your log, you can certainly use that to output `request_body`. e.g.,\r\n\r\n    --log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %e'"
      },
      {
        "user": "allinurl",
        "created_at": "2018-09-20T14:06:23Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1219,
    "title": "Better Support for Streaming Services like Icecast / SHOUTcast",
    "created_at": "2018-08-29T12:29:29Z",
    "closed_at": "2018-09-20T14:08:15Z",
    "labels": [
      "enhancement",
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1219",
    "body": "Maybe you can add an better Support for Streaming Servers like Icecast and so on.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1219/comments",
    "author": "scysys",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-08-29T13:56:52Z",
        "body": "Thanks for bringing this up. Aren't these access logs compatible with other httpd log formats? Would you be able to post a few sample lines from the corresponding streaming service access log?"
      },
      {
        "user": "allinurl",
        "created_at": "2018-09-20T14:08:15Z",
        "body": "Closing this. Feel free to reopen it if needed."
      },
      {
        "user": "leixet",
        "created_at": "2018-11-25T11:32:32Z",
        "body": "This is how the Icecast logs look:\r\n\r\n```\r\n149.202.66.234 - - [25/Nov/2018:06:25:22 +0100] \"GET /stream HTTP/1.x\" 200 29338 \"-\" \"Mozilla/5.0\" 0\r\n134.0.11.238 - - [25/Nov/2018:06:25:24 +0100] \"GET /admin/stats HTTP/1.0\" 200 1980 \"-\" \"-\" 0\r\n208.94.247.82 - - [25/Nov/2018:06:25:33 +0100] \"GET /stream HTTP/1.0\" 200 55812 \"-\" \"Winamp 2.81\" 1\r\n208.94.247.82 - - [25/Nov/2018:06:25:49 +0100] \"GET /stream HTTP/1.0\" 200 54211 \"-\" \"Winamp 2.81\" 1\r\n208.94.247.82 - - [25/Nov/2018:06:26:08 +0100] \"GET /stream HTTP/1.0\" 200 49828 \"-\" \"Winamp 2.81\" 0\r\n134.0.11.238 - - [25/Nov/2018:06:26:13 +0100] \"GET /admin/stats HTTP/1.0\" 200 1980 \"-\" \"-\" 0\r\n```"
      },
      {
        "user": "allinurl",
        "created_at": "2018-11-26T03:00:15Z",
        "body": "@leixet Can I ask what is the last field you have in there? 0, 1, etc..."
      },
      {
        "user": "leixet",
        "created_at": "2018-11-29T23:23:30Z",
        "body": "> @leixet Can I ask what is the last field you have in there? 0, 1, etc...\r\n\r\nYes @allinurl. I think it's the duration of the connection to the stream, in seconds...\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2018-12-03T13:02:44Z",
        "body": "Please try:\r\n\r\n    goaccess access.log --log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %T' --date-format=%d/%b/%Y --time-format=%T"
      }
    ]
  },
  {
    "number": 1218,
    "title": "use GoAccess central for multiple hosts",
    "created_at": "2018-08-28T13:06:27Z",
    "closed_at": "2018-09-20T14:07:52Z",
    "labels": [
      "question",
      "other"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1218",
    "body": "Hello\r\n\r\nCan I use GoAccess for centrale usage? \r\nI have 1 dedicated server for all metrics stuff, but I want to give all my customers their own personal \"statatistics\" page from their website. \r\nEach website is running on their own host or on a host sharing other service containers with other clients (depending on the size of the project). \r\n\r\nSo basically, I want to keep everything central on 1 server and have some kind of \"agent/daemon\" running on the child hosts so the logs are available for the central to render the statistics. \r\n\r\nAnybody who can explain me more how to do this with GoAccess please? \r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1218/comments",
    "author": "codeagencybe",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-08-29T01:24:51Z",
        "body": "It sounds like you should be able to achieve that. Please take a look at **#532**."
      },
      {
        "user": "allinurl",
        "created_at": "2018-09-20T14:07:52Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1215,
    "title": "Older data wiped",
    "created_at": "2018-08-24T09:40:00Z",
    "closed_at": "2018-08-28T11:51:33Z",
    "labels": [
      "question",
      "log-processing",
      "on-disk"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1215",
    "body": "Sequence of events:\r\n1. built goaccess\r\n2. run it against current access.log (rotated daily). Static html produced and fine\r\n3. saw it was good, so run it against the old gzipped logs. Again html was fine and older data visible\r\n4. cron execution against current access.log: html generated and older data trashed, I see only today's data\r\n\r\nI didn't expected older data to be deleted. Is this normal?\r\nAlso, when having two months of data, how can I scroll/zoom to see only one specific period?\r\nThanks",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1215/comments",
    "author": "LoZio",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-08-28T00:23:39Z",
        "body": "Are you using the on-disk storage? did you use `--keep-db-files` and `--load-from-disk`? For scrolling, #117 will add that feature. At the moment you need to preprocess the data, i.e., sed, awk, grep..."
      },
      {
        "user": "LoZio",
        "created_at": "2018-08-28T09:49:39Z",
        "body": "Yes, Tokio, but I assume to have borked something myself. Not having the option to scroll in any case is a show stopper right now."
      },
      {
        "user": "allinurl",
        "created_at": "2018-08-28T11:51:33Z",
        "body": "Stay tuned for #117. Closing this, feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1214,
    "title": "cron problem due to missing path",
    "created_at": "2018-08-23T23:25:12Z",
    "closed_at": "2018-08-27T14:28:46Z",
    "labels": [
      "question",
      "command-line options",
      "other",
      "cron"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1214",
    "body": "I try to run this cron job but goaccess can not creat the report,\r\n*/2 * * * * goaccess access.log -a > report.html \r\nalthough when i run this command from my ssh it works fine\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1214/comments",
    "author": "egy1st",
    "comments": [
      {
        "user": "LoZio",
        "created_at": "2018-08-24T09:34:35Z",
        "body": "Mostly due to missing path entries when run via crond.\r\nChech which is the full path of goaccess:  `which goaccess`\r\nYou'll get something like: `/usr/local/bin/goaccess`\r\nIn your cron line use the full path above instead of just `goaccess`.\r\n`*/2 * * * * /usr/local/bin/goaccess access.log -a > report.html`"
      },
      {
        "user": "egy1st",
        "created_at": "2018-08-24T14:25:45Z",
        "body": "Thank you. it works now"
      }
    ]
  },
  {
    "number": 1213,
    "title": "modsecurity audit log",
    "created_at": "2018-08-23T22:05:34Z",
    "closed_at": "2018-08-27T14:28:11Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1213",
    "body": "Is there a way to use your amazing tool to analyze modsecurity audit log",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1213/comments",
    "author": "egy1st",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-08-24T03:17:38Z",
        "body": "GoAccess requires the following fields:\r\n\r\n- a valid IPv4/6 **%h**\r\n- a valid date **%d**\r\n- the request **%r**\r\n\r\nIf modsecurity audit log contains those fields, then yes."
      },
      {
        "user": "allinurl",
        "created_at": "2018-08-24T14:01:27Z",
        "body": "Unfortunately you won't be able to parse that with goaccess. "
      },
      {
        "user": "egy1st",
        "created_at": "2018-08-24T14:27:26Z",
        "body": "Thank you for your instant reply. you are really amazing. Keep the good work."
      }
    ]
  },
  {
    "number": 1205,
    "title": "I find the value of \"unique visitors\" is not right!",
    "created_at": "2018-08-20T09:44:39Z",
    "closed_at": "2018-08-22T11:47:04Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1205",
    "body": "env：\r\nGoAccess - 1.2\r\nubuntu 14.04\r\n\r\nmy goaccess command:\r\n\r\n```\r\ngoaccess -f /srv/logs/access.log -o report.html \r\n```\r\nThe result of \"unique visitors\" is : '10704\"\r\n\r\nBut if I use shell command:\r\n\r\n```\r\ncat /srv/logs/access.log |awk '{print $1}'|sort|uniq -c|wc -l\r\n````\r\nThe result is : \"5025\"\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1205/comments",
    "author": "Haitianisgood",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-08-20T14:29:38Z",
        "body": "Please note that HTTP requests containing the **same IP**, the **same date**, and the **same user agent** are considered a unique visitor. In your case, I'm assuming you are only taking unique IPs. \r\n\r\nThe unique IPs count should be displayed right above the data column in the Visitors Panel. "
      },
      {
        "user": "Haitianisgood",
        "created_at": "2018-08-21T02:42:46Z",
        "body": "Thank you for you reply!\r\nIn my opinion the \"HTTP requests containing the same IP, the same date, and the same user agent are considered a unique visitor\" should be less than unique IPs. Because it have too many restrictions.\r\n\r\nI think one IP requested two or more API should be one unique visitor,is it right?\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2018-08-21T11:43:34Z",
        "body": "Not really. Think about a house where all of them go out with the same public IP, but each house member has a different device, e.g., D1 => Chrome, D2 => iPad, D3 => Android Firefox. All of them using the same IP but different agent. Thus IP, Date and Agent = unique visitor."
      },
      {
        "user": "Haitianisgood",
        "created_at": "2018-08-22T02:35:19Z",
        "body": "Thank you very much for you reply again!\r\nWhat you explain is very well!It is real fact!"
      }
    ]
  },
  {
    "number": 1199,
    "title": "[One of those] Format Errors - Verify your log/date/time format",
    "created_at": "2018-08-13T19:31:53Z",
    "closed_at": "2018-08-13T20:15:51Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1199",
    "body": "I'm really struggling with log format. I was told the logs were supposed to be w3c but I guess they aren't.\r\n\r\n```\r\n#Fields: date\ttime\tcs-method\tc-ip\tcs-version\tcs-referrer\tcs-user-agent\tfilesize\tcs-bytes\tsc-bytes\ts-ip\ttime-taken\tsc-status\tcs-uri-query\tcs-uri-stem\tx-byte-range\tcomment\r\n```\r\n\r\nex.\r\n\r\n```\r\n2018-07-10\t11:23:12\tGET\tip.ip.ip.ip\thttps\t-\tXtream-Codes IPTV Panel Pro\t4057980\t159\t4058361\tip.ip.ip.ip\t0.033\t200\t-\t/path/to/file.ext\t-\t-\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1199/comments",
    "author": "asciifaceman",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-08-13T19:40:34Z",
        "body": "Please try this:\r\n\r\n    goaccess access.log --log-format='%d\\t%t\\t%m\\t%h\\t%^\\t%R\\t%u\\t%b\\t%^\\t%^\\t%v\\t%T\\t%s\\t%^\\t%U\\t%^' --date-format=%Y-%m-%d --time-format=%T"
      },
      {
        "user": "asciifaceman",
        "created_at": "2018-08-13T20:11:56Z",
        "body": "Holy cow @allinurl this looks great.\r\n\r\nI may not understand the log format, but it looks phenomenal once right. It isn't relevant right now, but would it be overly annoying if I opened another issue in the future as the log format might change slightly to capture individual values out of one of these field - or should this one remain open.\r\n\r\nI'm sure you get these a lot and they are quite a burden."
      },
      {
        "user": "allinurl",
        "created_at": "2018-08-13T20:15:51Z",
        "body": "Glad that worked :) Feel free to open a new issue if things change. Closing this."
      }
    ]
  },
  {
    "number": 1197,
    "title": "make `%h` match anonymized ip",
    "created_at": "2018-08-09T14:59:35Z",
    "closed_at": "2018-08-30T01:46:26Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1197",
    "body": "The access log file I would like to parse has anonymized ip adresses: `123.213.122.x`. Goaccess fails to parse those. Is there anything that can be done for such a case?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1197/comments",
    "author": "thomasleveil",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-08-13T12:08:18Z",
        "body": "You will have to do some preprocessing to the IP field and then pipe the output to goaccess. Either `sed` or `awk` should do the job fairly easy.\r\n\r\nNote that upstream added the option `--anonymize-ip`  to anonymize IPv/4/6 so there's no need to that beforehand. This will be shipped in the upcoming version."
      },
      {
        "user": "allinurl",
        "created_at": "2018-08-30T01:46:26Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1196,
    "title": "how can i parse this json？",
    "created_at": "2018-08-09T10:14:44Z",
    "closed_at": "2018-08-30T01:46:17Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1196",
    "body": "nginx.conf\r\n\r\n```\r\naccess_log_json '{\"user_ip\":\"$http_x_real_ip\",\"lan_ip\":\"$remote_addr\",\"log_time\":\"$time_iso8601\",\"user_req\":\"$request\",\"http_code\":\"$status\",\"body_bytes_sents\":\"$body_bytes_sent\",\"req_time\":\"$request_time\",\"user_ua\":\"$http_user_agent\"}';\r\n```\r\nnginx log:\r\n\r\n    {\"user_ip\":\"-\",\"lan_ip\":\"192.168.120.1\",\"log_time\":\"2018-08-09T17:45:09+08:00\",\"user_req\":\"GET /common/js/index.js HTTP/1.1\",\"http_code\":\"200\",\"body_bytes_sents\":\"3230\",\"req_time\":\"0.012\",\"user_ua\":\"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/36.0.1985.125 Safari/537.36\"}",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1196/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "ghost",
        "created_at": "2018-08-09T10:15:45Z",
        "body": "thinks"
      },
      {
        "user": "allinurl",
        "created_at": "2018-08-09T19:28:03Z",
        "body": "Assuming you have a valid IP for `user_ip`, this works:\r\n\r\n    goaccess access.log --log-format='%^:\"%h\",%^,%^:\"%dT%t+%^\",%^:\"%r\",%^:\"%s\",%^:\"%b\",%^:\"%T\",%^:\"%u\"' --date-format='%Y-%m-%d' --time-format=%T"
      },
      {
        "user": "allinurl",
        "created_at": "2018-08-30T01:46:17Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1189,
    "title": "UniqueID from Apache",
    "created_at": "2018-08-05T17:35:40Z",
    "closed_at": "2018-08-06T14:04:32Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1189",
    "body": "Hi @allinurl , Thank you for GoAccess. \r\n\r\nIn our context, we use the Apache unique ID on our logs:\r\n\r\n    %{UNIQUE_ID}e %h %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\r\n\r\nWhich produces an output as such: \r\n\r\n    W05TOAAhHiEXJHDTpZ1psQAAACc 165.227.40.119 - - [17/Jul/2018:20:36:08 +0000] \"HEAD /games/turtles.php HTTP/1.1\" 200 - \"-\" \"Mozilla/5.0 (Windows NT 5.1; rv:21.0) Gecko/20130331 Firefox/21.0\"\r\n\r\nI tried editing the log format options within GoAccess but it still not happy with the unique id \r\n(Token 'W05TOAAhHiEXJHDTpZ1psQAAACc' doesn't match specified).\r\n\r\nPlease, is it possible to convince GoAccess to like our logs ? \r\n\r\nThanks in advance for your time, appreciated.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1189/comments",
    "author": "domainoverflow",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-08-06T11:52:14Z",
        "body": "Please try this, it should work:\r\n\r\n    goaccess access.log --log-format='%v %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "domainoverflow",
        "created_at": "2018-08-06T13:59:58Z",
        "body": "Thank you @allinurl ,  it worked, I had not realised the brackets around the dates  ( %^[%d:%t %^] ) ... thank you!"
      },
      {
        "user": "allinurl",
        "created_at": "2018-08-06T14:04:32Z",
        "body": "Glad that worked :)"
      }
    ]
  },
  {
    "number": 1186,
    "title": "Combined Log Format :(",
    "created_at": "2018-08-02T10:56:10Z",
    "closed_at": "2018-08-30T01:47:38Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1186",
    "body": "This is a sample of my log file format\r\n\r\n```\r\n82.132.220.242 - - [02/Aug/2018:10:50:35 +0100] \"GET /printer/api/orderrequest_new.php?a=15776&u=15652&p=874651\" 200 14 \"-\" \"-\"\r\n95.129.20.19 - - [02/Aug/2018:10:50:35 +0100] \"GET /printer/api/orderrequest_new.php?a=8058&u=7943&p=607673\" 200 14 \"-\" \"-\"\r\n95.129.20.20 - - [02/Aug/2018:10:50:35 +0100] \"GET /printer/api/orderrequest_new.php?a=16783&u=16658&p=523873\" 200 14 \"-\" \"-\"\r\n95.129.20.19 - - [02/Aug/2018:10:50:35 +0100] \"GET /printer/api/orderrequest_new.php?a=16843&u=16718&p=167662\" 200 14 \"-\" \"-\"\r\n82.132.237.109 - - [02/Aug/2018:10:50:35 +0100] \"GET /printer/api/message_process.php?a=15558&u=15434&p=607472\" 200 16 \"-\" \"-\"\r\n95.129.20.20 - - [02/Aug/2018:10:50:35 +0100] \"GET /printer/api/orderrequest_new.php?a=14184&u=14069&p=637209\" 200 14 \"-\" \"-\"\r\n95.129.20.20 - - [02/Aug/2018:10:50:35 +0100] \"GET /printer/api/orderrequest_new.php?a=15912&u=15789&p=235474\" 200 14 \"-\" \"-\"\r\n95.129.20.18 - - [02/Aug/2018:10:50:35 +0100] \"GET /printer/api/orderrequest_new.php?a=16708&u=16583&p=395125\" 200 14 \"-\" \"-\"\r\n213.205.194.11 - - [02/Aug/2018:10:50:35 +0100] \"GET /printer/api/pushreporting.php?a=15749&u=15625&p=984323&signalAv=63&signa\r\n```\r\n\r\nI have tried: %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"  ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1186/comments",
    "author": "melliston",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-08-02T14:09:54Z",
        "body": "Try:\r\n\r\n    goaccess access.log --log-format=COMBINED"
      },
      {
        "user": "melliston",
        "created_at": "2018-08-02T20:37:56Z",
        "body": "Hi Thanks allinurl however the requested files doesnt show the correct data I dont think. It is showing:\r\n\r\n```\r\n 1356611 99.63% 8578 74.17%   40.57 MiB ---  ---      -\r\n 1636     0.12%    1  0.01%   37.24 MiB POST HTTP/1.1 /ext/api/\r\n 384      0.03%  175  1.51%    4.04 MiB GET  HTTP/1.1 /\r\n 46\t  0.00%   15  0.13%   24.13 KiB GET  HTTP/1.1 /inc/img/wholesaler/16850png\r\n```\r\n\r\n\r\nIs that correct? It doesnt feel correct. Is there a way to easily find the apache log format out? Its a managed server so im struggling to view the httpd.conf\r\n\r\n\r\nMany thanks.\r\n\r\nMatthew"
      },
      {
        "user": "allinurl",
        "created_at": "2018-08-03T00:56:09Z",
        "body": "As far as how is the data being outputted, looks right to me. Why would  you say is not right? Feel free to attach the whole log and I can verify this. "
      },
      {
        "user": "allinurl",
        "created_at": "2018-08-30T01:47:38Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1183,
    "title": "Piping both outputs to goaccess (multiple pipes)",
    "created_at": "2018-07-26T13:48:22Z",
    "closed_at": "2018-07-27T06:53:55Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1183",
    "body": "Hello,\r\n\r\nI'm quite new to linux, and found myself stuck trying to pipe two things at the same time from the access_log into the goaccess report. \r\n\r\nFor example:\r\n\r\nI'm trying to pipe statistics only for certain url, like this:\r\ngrep -h -i 'example.com' /var/log/httpd/access_log | goaccess -a -o /usr/local/goaccess/testreport.html -\r\n\r\nBut I also want to, at the same time pipe the statistics for only previous day.\r\nI've seen in the documentation something like: \r\nsed -n '/'$(date '+%d\\/%b\\/%Y' -d 'yesterday')'/,$ p' /var/log/httpd/access_log | goaccess -a -o /usr/local/goaccess/testreport.html -\r\n\r\nIs there a good way to combine both of these options so I can generate html output for only example.com url and only for previous day?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1183/comments",
    "author": "fractured",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-07-26T14:06:14Z",
        "body": "Great question, you can add additional pipes, e.g.,\r\n\r\n    sed -n '/'$(date '+%d/%b/%Y' -d 'yesterday')'/,$ p' /var/log/httpd/access_log | grep -h -i 'example.com' | goaccess -a -o /usr/local/goaccess/testreport.html -"
      },
      {
        "user": "fractured",
        "created_at": "2018-07-27T06:53:55Z",
        "body": "Thank you!\r\nThat worked perfectly. I was not aware I could just add additional pipes, while performing them with different commands."
      }
    ]
  },
  {
    "number": 1182,
    "title": "unable to set the exact log format",
    "created_at": "2018-07-26T11:50:09Z",
    "closed_at": "2018-07-26T14:09:25Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1182",
    "body": "Hi,\r\ni am new to goaccess ,while i am processing  my log file i am getting errors .can anyone help me with the exact formats.\r\nmy data looks like:\r\n\r\n```\r\nJul 26 15:48:21 quickstart NetworkManager[4656]: <info> Activation (eth0) Stage 5 of 5 (IP Configure Commit) scheduled...\r\nJul 26 15:48:21 quickstart NetworkManager[4656]: <info> Activation (eth0) Stage 4 of 5 (IP4 Configure Get) complete.\r\nJul 26 15:48:21 quickstart NetworkManager[4656]: <info> Activation (eth0) Stage 5 of 5 (IP Configure Commit) started...\r\nJul 26 15:48:21 quickstart NetworkManager[4656]: <info> (eth0): device state change: ip-config -> activated (reason 'none') [7 8 0]\r\nJul 26 15:48:21 quickstart NetworkManager[4656]: <info> Policy set 'System eth0' (eth0) as default for IPv4 routing and DNS.\r\n```\r\n\r\ni am getting this errors:\r\n```\r\nToken 'Jul' doesn't match specifier '%h'\r\nToken 'Jul' doesn't match specifier '%h'\r\nToken 'Jul' doesn't match specifier '%h'\r\nToken 'Jul' doesn't match specifier '%h'\r\n```\r\n\r\nThanks.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1182/comments",
    "author": "dineshkumar4728",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-07-26T14:09:25Z",
        "body": "Hello, GoAccess is a web log analyzer tool so unfortunately you won't be able to parse your log."
      }
    ]
  },
  {
    "number": 1181,
    "title": "Help with guicorn log format",
    "created_at": "2018-07-21T23:34:09Z",
    "closed_at": "2018-07-22T00:07:18Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1181",
    "body": "Hey, \r\n\r\nI've been trying to write a custom log-format for the access log. Got something working, but the numbers in the report don't add up, so I'm guessing I've done something wrong. \r\n\r\nA line from the log:\r\n\r\n`\r\n[2018-07-21 20:00:30] [INFO    ] [gunicorn.access:24588] GET /page/1 HTTP/1.1 - 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36' 200 - 0.055556 127.0.0.1\r\n`\r\n\r\nIn addition to chrome I've also used curl.\r\n\r\nWhat I've been running:\r\n\r\n`\r\ncat webui.log | grep gunicorn.access | goaccess --log-format='[%d %t] [%^] [%^] %^ %r %H - %u %s - %L %h' --date-format=%Y-%m-%d --time-format=%H:%M:%S -  -o ~/Desktop/report2.html\r\n`\r\n\r\nI've got 1000 lines for testing with \r\n924 lines of status 200\r\n32 lines of status 500\r\n44 lines of status 404\r\n\r\n76 lines with failed (500 and 404) \r\n\r\nreport2.html \r\nsays 922 good requests, 78 failed. \r\n\r\nAll browsers are listed as Unknown or Other. The 404 section is empty. OS is unknown. \r\n\r\nHTTP status codes: \r\n912 2xx\r\n8 5xx\r\n404 not listed. \r\n\r\nWhat can I do to get all the data parsed?\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1181/comments",
    "author": "dave9191",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-07-21T23:43:04Z",
        "body": "Give this a shot:\r\n\r\n    goaccess access.log --log-format=\"[%d %t] [%^] [%v] %m %U %H %^ '%u' %s %^ %T %h\" --date-format=%Y-%m-%d --time-format=%T"
      },
      {
        "user": "dave9191",
        "created_at": "2018-07-22T00:05:18Z",
        "body": "Amazing, work like a charm. Thank you so much. Burnt so much time on this. "
      }
    ]
  },
  {
    "number": 1173,
    "title": "No valid hits on custom log",
    "created_at": "2018-07-08T19:50:10Z",
    "closed_at": "2018-07-14T09:55:18Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1173",
    "body": "here's my log format:\r\n\r\n`05:28:25.644 /folder/file.php - \"hostname.com\" - 127.0.0.1 GET 418`\r\n\r\nI run with a `-c` option and configure the following log format:\r\n\r\n`%~ %U %~ %~ %~ %~ %m %b`\r\n\r\nI get \"no valid hits\". I also get \"please specify date format\" but I have no date in my log... So I just set it to %d (because it does not let me continue without one)\r\n\r\nAlso, THERE'S NO CONFIG FILE. I searched my whole hard drive.\r\n\r\nPS. running on windows ubuntu-subsystem, installed via `apt-get install goaccess`",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1173/comments",
    "author": "alex-jitbit",
    "comments": [
      {
        "user": "alex-jitbit",
        "created_at": "2018-07-09T15:17:37Z",
        "body": "created a `~/.goaccessrc` file with the following content - still not working, prompts me for log format, and \"no valid hits\" again\r\n\r\n```\r\nlog-format %^ %U %q %^ %^ %^ %m %b\r\ndate-format %d/%b/%Y\r\n```"
      },
      {
        "user": "allinurl",
        "created_at": "2018-07-12T14:20:40Z",
        "body": "You need a valid date and time in order for the parser to properly read the log."
      },
      {
        "user": "alex-jitbit",
        "created_at": "2018-07-12T16:12:12Z",
        "body": "@allinurl thanks"
      },
      {
        "user": "alex-jitbit",
        "created_at": "2018-07-13T20:34:05Z",
        "body": "Still not working. \"No valid hits\"\r\n\r\n`2018-07-12 12:25:25.091 /folder/file.js v=6767-22501 \"hostname.com\" \"173.00.0.0\" 162.0.0.0 GET 3719`\r\n\r\n`%d %^ %U %q %^ %^ %h %m %b`\r\n\r\ndate format `%Y-%m-%d`\r\n\r\nPS. Also, why does it keep prompting me for format even if I have created a ~/.goaccess file?"
      },
      {
        "user": "allinurl",
        "created_at": "2018-07-14T03:45:12Z",
        "body": "This should do it:\r\n\r\n    goaccess access.log --log-format='%d %t.%^ %U %q \"%v\" \"%h\" %^ %m %b' --date-format=%Y-%m-%d --time-format=%T\r\n\r\nIt should be `~/.goaccessrc` Please build from development, it should address this issue you mentioned above. Otherwise, feel free to  specify it as `-p ~/.goaccessrc`"
      },
      {
        "user": "alex-jitbit",
        "created_at": "2018-07-14T07:57:43Z",
        "body": "It gives me `Unknown option '--'`.\r\n\r\n"
      },
      {
        "user": "alex-jitbit",
        "created_at": "2018-07-14T08:00:52Z",
        "body": "Thanks it finally works, turns out I just had a really old version."
      }
    ]
  },
  {
    "number": 1171,
    "title": "Feature request: extend a usage scenario",
    "created_at": "2018-07-04T01:34:01Z",
    "closed_at": "2018-07-27T21:28:21Z",
    "labels": [
      "question",
      "on-disk",
      "cron"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1171",
    "body": "Hi,\r\nIt's intresting to see another simple stupid usage way,for a basic scenario, for an example, something like: goaccess -f /var/log/nginx/access.log* -o /web/root/goaccess.html --keep-db-files --update, it will read access.log file, and the .gz rotate files,and use cronjob to update them.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1171/comments",
    "author": "ed29",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-07-04T23:30:19Z",
        "body": "What do you mean \"use cron job to update them\"? Thanks"
      },
      {
        "user": "ed29",
        "created_at": "2018-07-07T14:38:09Z",
        "body": "@allinurl Means it can be add to crontab to easily execute, append the new records, ignore the old records. It seems goaccess don't support crontab update well,it seams just load the log file again.another thing is i don't know how to load the total files including .gz rotate files,and\r\nbase on it to update,i use: zcat /var/log/nginx/access.log.*gz|goaccess - -f /var/log/nginx/access.log -o /web/root/goaccess.html --keep-db-files --load-from-disk,when execute again,it will append old records too.\r\n\r\nI am newer,i don't know what I thought that was right or wrong. :)"
      },
      {
        "user": "allinurl",
        "created_at": "2018-07-17T16:26:27Z",
        "body": "@ed29 I'm not entirely sure I follow your question, but you can certainly run goaccess through the cron. Also, please take a look at #334, there's a script that can help as a workaround while this feature is implemented."
      },
      {
        "user": "allinurl",
        "created_at": "2018-07-27T21:28:21Z",
        "body": "Closing this as it's not very clear what feature should be added. Feel free to reopen if needed."
      }
    ]
  },
  {
    "number": 1157,
    "title": "Displaying data from the last month #Newbie!",
    "created_at": "2018-06-24T11:46:25Z",
    "closed_at": "2018-07-17T16:28:35Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1157",
    "body": "Hi,\r\n\r\nStruggling with this, i'm simply trying to output a report for the last month.\r\n\r\nThe below works fine, but only for the current day. Tried many things with grep/date but no luck!\r\n\r\n`goaccess /path/to/log.log -o /server/thedomain.com/web/goreport.html --log-format=COMBINE`",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1157/comments",
    "author": "johneemac",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-06-24T23:42:38Z",
        "body": "Are you rotating the logs? Have you tried parsing the previous log? e.g.,\r\n\r\n    goaccess /path/to/log.log.1 -o /server/thedomain.com/web/goreport.html --log-format=COMBINED"
      },
      {
        "user": "allinurl",
        "created_at": "2018-07-17T16:28:35Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1155,
    "title": "Report not showing CUM T.S., AVG T.S., ",
    "created_at": "2018-06-21T12:54:01Z",
    "closed_at": "2018-06-21T16:28:21Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1155",
    "body": "Hey,\r\n\r\nWhen I open the report it looks good but missing the AVG T.S, etc.  Based on research guessing Im not picking the correct options but struggling a bit. Lookin for some advice. \r\n\r\n**Running:**\r\ngoaccess.exe apache_alc_access.log -a -o report.html\r\n\r\n**Log format:**\r\n\r\n1.1.1.1 2.2.2.2 - [19/Jun/2018:03:11:40 -0300] \"POST /api/pam/login HTTP/1.1\" 200 1107 472104 \"-\" \"Jakarta Commons-HttpClient/3.1\"\r\n\r\n**usr/local/etc/config is:**\r\ntime-format %T\r\n\r\ndate-format %d/%b/%Y\r\n\r\nlog-format %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1155/comments",
    "author": "Jameswc5",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-06-21T16:10:32Z",
        "body": "This should work:\r\n\r\n    goaccess access.log --log-format='%h %^[%d:%t %^] \"%r\" %s %b %D \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "Jameswc5",
        "created_at": "2018-06-21T16:25:08Z",
        "body": "Perfect! I updated the go-access config file to:\r\n%T\r\n%h %^[%d:%t %^] \"%r\" %s %b %D \"%R\" \"%u\r\n%d/%b/%Y\r\n\r\n"
      }
    ]
  },
  {
    "number": 1144,
    "title": "Token 'Jun' doesn't match specifier '%h' on failover log",
    "created_at": "2018-06-14T04:36:03Z",
    "closed_at": "2018-06-14T13:53:58Z",
    "labels": [
      "invalid",
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1144",
    "body": "can pls help n show me how to fix the error\r\ni dunno which format is wrong n how to fix\r\n\r\n# here is my log file\r\nJun 14 12:34:02 failover systemd: Started Session 352431 of user cetakbaj.\r\nJun 14 12:34:02 failover systemd: Starting Session 352431 of user cetakbaj.\r\nJun 14 12:34:02 failover systemd: Started Session 352432 of user cetakbaj.\r\nJun 14 12:34:02 failover systemd: Starting Session 352432 of user cetakbaj.\r\nJun 14 12:34:02 failover systemd: Started Session 352433 of user cetakbaj.\r\nJun 14 12:34:02 failover systemd: Starting Session 352433 of user cetakbaj.\r\nJun 14 12:34:02 failover systemd: Started Session 352435 of user cetakbaj.\r\nJun 14 12:34:02 failover systemd: Starting Session 352435 of user cetakbaj.\r\nJun 14 12:34:02 failover systemd: Started Session 352434 of user cetakbaj.\r\nJun 14 12:34:02 failover systemd: Starting Session 352434 of user cetakbaj.\r\n\r\n\r\n# here is my goaccess.conf\r\n\r\nTime Format Options (required)\r\ntime-format %H:%M:%S\r\n\r\nDate Format Options (required)\r\ndate-format %d/%b/%Y\r\n\r\nLog Format Options (required)\r\nNCSA Combined Log Format\r\nlog-format %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1144/comments",
    "author": "lblBotAkz",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-06-14T13:53:55Z",
        "body": "It looks like your log it's not an access.log. GoAccess parses specifically the web access log."
      }
    ]
  },
  {
    "number": 1140,
    "title": "input access.log json",
    "created_at": "2018-06-11T07:24:59Z",
    "closed_at": "2018-06-15T21:15:21Z",
    "labels": [
      "question",
      "log/date/time format",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1140",
    "body": "Hi,\r\n\r\nIs it possible to read the access file in json format?\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1140/comments",
    "author": "dincerkurnaz",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-06-11T13:54:05Z",
        "body": "If each request is on a single line, it is certainly possible."
      },
      {
        "user": "allinurl",
        "created_at": "2018-06-15T21:15:21Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1139,
    "title": "Parsing squid log",
    "created_at": "2018-06-07T12:43:25Z",
    "closed_at": "2018-06-20T12:07:09Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1139",
    "body": "hi\r\n\r\ni´m trying to parse an squid log and i´m receiving some errors:\r\n\r\ncommand: sudo goaccess access.log\r\nerror:\r\n```\r\nLog Format Configuration                                  |\r\n                                                     +-----------------------------------------------------------+\r\n                                                     | Format Errors - Verify your log/date/time format          |\r\n                                                     | [UP/DOWN] to scroll - [q] to quit                         |\r\n                                                     |                                                           |\r\n                                                     | Token '43 - FIRST_UP_PARENT/194' doesn't match specifier  |\r\n                                                     | Token '43 - FIRST_UP_PARENT/194' doesn't match specifier  |\r\n                                                     | Token '43 - FIRST_UP_PARENT/194' doesn't match specifier  |\r\n                                                     | Token '43 - FIRST_UP_PARENT/194' doesn't match specifier  |\r\n                                                     | Token '43 - FIRST_UP_PARENT/194' doesn't match specifier  |\r\n                                                     | Token '43 - FIRST_UP_PARENT/194' doesn't match specifier  |\r\n                                                     | Token '43 - FIRST_UP_PARENT/194' doesn't match specifier  |\r\n                                                     | Token '43 - FIRST_UP_PARENT/194' doesn't match specifier  |\r\n                                                     | Token '43 - FIRST_UP_PARENT/194' doesn't match specifier  |\r\n                                                     | Token '43 - FIRST_UP_PARENT/194' doesn't match specifier  |\r\n```\r\n\r\n\r\nsome lines from the log file: (I changed the ip´s and the real URL´s)\r\n```\r\n1528020004.498  14820 IP5.IP6.IP7.IP8 TCP_MISS/200 162489 CONNECT URL1:443 - FIRST_UP_PARENT/IP1.IP2.IP3.IP4 -\r\n1528020006.169  14780 IP5.IP6.IP7.IP8 TCP_MISS/200 154264 CONNECT URL1:443 - FIRST_UP_PARENT/IP1.IP2.IP3.IP4 -\r\n1528020011.498  14556 IP5.IP6.IP7.IP8 TCP_MISS/200 153976 CONNECT URL1:443 - FIRST_UP_PARENT/IP1.IP2.IP3.IP4 -\r\n1528020013.527  14496 IP5.IP6.IP7.IP8 TCP_MISS/200 141968 CONNECT URL1:443 - FIRST_UP_PARENT/IP1.IP2.IP3.IP4 -\r\n1528020014.387  14476 IP5.IP6.IP7.IP8 TCP_MISS/200 141514 CONNECT URL1:443 - FIRST_UP_PARENT/IP1.IP2.IP3.IP4 -\r\n1528020018.401  13886 IP5.IP6.IP7.IP8 TCP_MISS/200 135545 CONNECT URL1:443 - FIRST_UP_PARENT/IP1.IP2.IP3.IP4 -\r\n\r\n```\r\n\r\nhow can i solve it?\r\n\r\nthanks a lot.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1139/comments",
    "author": "kakitogit",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-06-07T15:11:01Z",
        "body": "Please attach a text file with a few but exact lines from your access.log. Thanks"
      },
      {
        "user": "allinurl",
        "created_at": "2018-06-12T14:51:19Z",
        "body": "Any updates on this?"
      },
      {
        "user": "allinurl",
        "created_at": "2018-06-20T12:07:09Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1138,
    "title": "Parsing apache error_log",
    "created_at": "2018-06-07T12:36:36Z",
    "closed_at": "2018-06-07T15:04:18Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1138",
    "body": "hi\r\n\r\ni´m trying to use goaccess to parse an error.log from apache but i´m getting errors and don´t know how to solve it. could anyone help?\r\n\r\ncommand: sudo goaccess error_log -c\r\nsome lines from error_log file:\r\n```\r\n[Wed Jun 06 12:00:09 2018] [notice] Apache/2.2.34 (Linux/SUSE) mod_ssl/2.2.34 OpenSSL/0.9.8j-fips configured -- resuming normal operations\r\n[Wed Jun 06 12:01:23 2018] [error] [client 139.22.4.209] proxy: DNS lookup failure for: vmware-localhost returned by vmware-localhost:8093\r\n[Wed Jun 06 12:01:23 2018] [error] [client 139.22.4.209] Options FollowSymLinks or SymLinksIfOwnerMatch is off which implies that RewriteRule directive is forbidden: /$\r\n```\r\n\r\nerror: (NCSA Combined Log Format) \r\n```\r\n Log Format Configuration                                  |\r\n                                                     +-----------------------------------------------------------+\r\n                                                     | Format Errors - Verify your log/date/time format          |\r\n                                                     | [UP/DOWN] to scroll - [q] to quit                         |\r\n                                                     |                                                           |\r\n                                                     | Token '[Wed' doesn't match specifier '%h'                 |\r\n                                                     | Token '[Wed' doesn't match specifier '%h'                 |\r\n                                                     | Token '[Wed' doesn't match specifier '%h'                 |\r\n                                                     | Token '[Wed' doesn't match specifier '%h'                 |\r\n                                                     | Token '[Wed' doesn't match specifier '%h'                 |\r\n                                                     | Token '[Wed' doesn't match specifier '%h'                 |\r\n                                                     | Token '[Wed' doesn't match specifier '%h'                 |\r\n                                                     | Token '[Wed' doesn't match specifier '%h'                 |\r\n                                                     | Token '[Wed' doesn't match specifier '%h'                 |\r\n                                                     | Token '[Wed' doesn't match specifier '%h'                 |\r\n\r\n```\r\nerror: (NCSA Combined Log Format with Virtual Host) (I have no Virtual host, just trying)\r\n\r\n```\r\n Log Format Configuration                                  |\r\n                                                     +-----------------------------------------------------------+\r\n                                                     | Format Errors - Verify your log/date/time format          |\r\n                                                     | [UP/DOWN] to scroll - [q] to quit                         |\r\n                                                     |                                                           |\r\n                                                     | Token '2018]' doesn't match specifier '%h'                |\r\n                                                     | Token '2018]' doesn't match specifier '%h'                |\r\n                                                     | Token '2018]' doesn't match specifier '%h'                |\r\n                                                     | Token '2018]' doesn't match specifier '%h'                |\r\n                                                     | Token '2018]' doesn't match specifier '%h'                |\r\n                                                     | Token '2018]' doesn't match specifier '%h'                |\r\n                                                     | Token '2018]' doesn't match specifier '%h'                |\r\n                                                     | Token '2018]' doesn't match specifier '%h'                |\r\n                                                     | Token '2018]' doesn't match specifier '%h'                |\r\n                                                     | Token '2018]' doesn't match specifier '%h'                |\r\n```\r\n\r\n\r\nthe same errors appears for Common Log Format (CLF) and for Common Log Format (CLF) with Virtual Host\r\n\r\nhow can i solve it?\r\n\r\n\r\nthanks a lot.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1138/comments",
    "author": "kakitogit",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-06-07T15:04:18Z",
        "body": "GoAccess doesn't parse the error log. You probably need to use a different tool for that."
      }
    ]
  },
  {
    "number": 1137,
    "title": "debugging error",
    "created_at": "2018-06-06T09:54:08Z",
    "closed_at": "2018-06-14T19:22:33Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1137",
    "body": "our log sample like below\r\n\r\n    2018-06-05\t16:45:53\t95.17.199.99\tGET\t/test.justice.com/hello/test.jpg\t200\t9785\t0\t\"-\"\t\"Dalvik/2.1.0 (Linux; U; Android 6.0; C1_Mini Build/MRA58K)\"\t\"-\"\t\"-\"\t9432\r\n\r\nwhen I try to run I got error like\r\n\r\n    Token '2018-06-05\t16:45:53\t95.17.199.99\tGET\t/test.justice.com/hello/test.jpg\t200\t9785 0\t\"-\"\t\"Dalvik/2.1.0' doesn't match specifier '%d'\r\n\r\nFormat Errors - Verify your log/date/time format\r\n\r\ncli like below\r\n\r\n    goaccess log.log --log-format='%d %t %h %^ %^ %^ %^ %^ \"%^\" \"%^\" \"%^\" \"%^\" %^' --date-format=%Y-%m-%d --time-format=%H:%M:%S",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1137/comments",
    "author": "helofsf",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-06-06T21:40:48Z",
        "body": "Can you please attach on a file a few sample lines from your log? Also, can you please describe the fields you got in there? Thanks."
      },
      {
        "user": "allinurl",
        "created_at": "2018-06-12T14:51:31Z",
        "body": "Any updates on this?"
      },
      {
        "user": "allinurl",
        "created_at": "2018-06-14T19:22:33Z",
        "body": "Closing this. You can try the following:\r\n\r\n    goaccess access.log --log-format='%d %t %h %m %U %s %bq \"%R\" \"%u\"' --date-format=%Y-%m-%d --time-format=%T"
      }
    ]
  },
  {
    "number": 1127,
    "title": "goaccess suddenly stops ",
    "created_at": "2018-05-27T14:31:02Z",
    "closed_at": "2018-05-27T14:47:52Z",
    "labels": [
      "question",
      "html report",
      "websocket-server"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1127",
    "body": "Hello. My site is ssl protected so i need wss which needs --ssl-cert and --ssl-key\r\n\r\nI have compiled goaccess from this git repo. The problem is that when i start goaccess\r\n`goaccess /var/log/nginx/access.log -o /var/www/html/report.html --log-format=COMBINED --real-time-html --ssl-cert=/etc/letsencrypt/live/sevenlight.ru/fullchain.pem --ssl-key=/etc/letsencrypt/live/sevenlight.ru/privkey.pem`\r\n\r\nit suddenly stops after about 3 seconds.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1127/comments",
    "author": "legale",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-05-27T14:45:23Z",
        "body": "What output do you get in your browser's console?"
      },
      {
        "user": "legale",
        "created_at": "2018-05-27T14:45:28Z",
        "body": "Question is not actual anymore. Just wrong cert file. Now everything works smooth. "
      },
      {
        "user": "allinurl",
        "created_at": "2018-05-27T14:47:52Z",
        "body": "Glad to hear that :)"
      }
    ]
  },
  {
    "number": 1121,
    "title": "how to configure tomcat custom log",
    "created_at": "2018-05-21T15:44:49Z",
    "closed_at": "2019-10-23T15:36:45Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1121",
    "body": "Hi , \r\n\r\nMy tomcat log format is following\r\n\r\n    catalina.java.util.logging.SimpleFormatter.format=[%1$td.%1$tm.%1$tY %1$tH:%1$tM:%1$tS,%1$tL] %4$s [%2$s] %5$s %6$s %n\r\n\r\n an example is following\r\n\r\n    [20.05.2018 06:26:25,116] INFO [se.ltu.ssr.webapp.secureConnections.FiwareProxy getDataFrmFiwareProxy] body{\"contextElements\":[{\"id\":\"300090 Lgh 304\",\"attributes\":[{\"name\":\"function_name\",\"value\":\"power 3\",\"type\":\"string\"},{\"name\":\"sensorDataRecevTime\",\"value\":\"1526790385115\",\"type\":\"epochtime\"}],\"type\":\"Gateway\",\"isPattern\":false}],\"updateAction\":\"APPEND\",}  \r\n    [20.05.2018 06:26:25,116] INFO [se.ltu.ssr.webapp.secureConnections.FiwareProxy verifyToFiware] Verifying with keyrock------------  \r\n\r\nHow can i configure this log format..\r\n\r\nthanks in advance for the help..",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1121/comments",
    "author": "raiuli",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-05-22T11:59:40Z",
        "body": "GoAccess requires the following fields:\r\n\r\n```\r\na valid IPv4/6 %h\r\na valid date %d\r\nthe request %r\r\n```\r\n\r\nIt looks like your log is missing the IP and the request part."
      },
      {
        "user": "allinurl",
        "created_at": "2019-10-23T15:36:45Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1107,
    "title": "Cronjob issues",
    "created_at": "2018-05-03T05:27:14Z",
    "closed_at": "2018-05-05T10:56:19Z",
    "labels": [
      "question",
      "log-processing",
      "cron"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1107",
    "body": "Hello.  Thanks for Goaccess. The following command works without a cron job:  \r\n```\r\nzcat -f /var/log/apache2/access.log /var/log/apache2/access.log.{1..16} | goaccess -o /var/www/html/analytics123456789.html\r\n```\r\n\r\nWhen it runs on a crob job, it only seems to take in account the first access log `/var/log/apache2/access.log` and doesn't get data for the rest.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1107/comments",
    "author": "christ0ph3r",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-05-03T11:47:54Z",
        "body": "Can you try adding a single dash to goaccess, i.e., \r\n\r\n    zcat -f /var/log/apache2/access.log /var/log/apache2/access.log.{1..16} | goaccess - -o /var/www/html/analytics123456789.html"
      },
      {
        "user": "christ0ph3r",
        "created_at": "2018-05-05T10:44:59Z",
        "body": "Just tried and no luck, and I tried it before when I was first reading into this issue.  It is only showing `/var/log/apache2/access.log` when doing it with a cron job.  When I run the command in the CLI, it works.\r\n\r\nAnd I am running `GoAccess - 1.2`."
      },
      {
        "user": "christ0ph3r",
        "created_at": "2018-05-05T10:56:19Z",
        "body": "```zcat -f /var/log/apache2/access.log.* | goaccess - -o /var/www/html/analytics123456789.html```\r\n\r\nThat works ^^^ and is better anyways.  Going to close this.  Thanks for your help."
      }
    ]
  },
  {
    "number": 1106,
    "title": "No date format was found on your conf file",
    "created_at": "2018-05-03T01:45:52Z",
    "closed_at": "2018-05-08T16:31:52Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1106",
    "body": "`Fatal error has occurred\r\nError occured at: src/parser.c - parse_log - 2705\r\nNo date format was found on your conf file.`\r\n\r\nVersion 1.2\r\nFreeBSD 11.1\r\n\r\nIn `/usr/local/etc/goaccess.conf`:\r\n\r\n`time-format %H:%M:%S` \r\n\r\nin `~/.goaccessrc`:\r\n\r\n`time-format %T`\r\n`date-format %d/%b/%Y`\r\n`log_format %h - %^ [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"`\r\n\r\nSo two time-formats provided, yet I'm getting this error.  ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1106/comments",
    "author": "daBee",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-05-03T02:26:41Z",
        "body": "Can you try specifying these command line options in-line? e.g.,\r\n\r\n    goaccess access.log --log-format='%h - %^ [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T\r\n\r\nor can you please try:\r\n\r\n    goaccess access.log -p /usr/local/etc/goaccess.conf  --no-global-config\r\n\r\n"
      },
      {
        "user": "daBee",
        "created_at": "2018-05-03T10:58:08Z",
        "body": "OK the first one worked.  Reworked my script, and this is what comes back:\r\n\r\n`testy.sh: line 12: unexpected EOF while looking for matching `''\r\n`testy.sh: line 16: syntax error: unexpected end of file`\r\n\r\nLine 12:\r\n\r\ngoaccess $src --log-format='%h - %^ [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T --no-query-string --real-os --output=$fname\r\n\r\nSorry, can't Markdown that one.  Not sure how you did that.  "
      },
      {
        "user": "allinurl",
        "created_at": "2018-05-03T11:49:21Z",
        "body": "Can you please post your whole script?"
      },
      {
        "user": "daBee",
        "created_at": "2018-05-04T12:22:09Z",
        "body": "`clear\r\necho \"RF_scripts/admin/goaccess/testy.sh\"\r\n\r\nsrc='/var/log/nginx/src='/var/log/nginx/access_pass1.log'\r\nfname='/home/adminuser/goaccess/'$(date -v -1d +%Y-%m-%B_access_pass1.html)\r\necho $src\r\necho $fname\r\n\r\ngoaccess $src  --log-format='%h - %^ [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T --no-query-string --real-os --output=$fname`\r\n\r\nWell, markdown didn't work there either.  "
      },
      {
        "user": "allinurl",
        "created_at": "2018-05-08T15:51:46Z",
        "body": "Please check your `src` variable, there's some extra quotes in there... e.g.,\r\n\r\n```\r\nclear\r\necho \"RF_scripts/admin/goaccess/testy.sh\"\r\n\r\ntoday=$(date -v -1d +%Y-%m-%B)\r\nsrc=/var/log/nginx/access_pass1.log\r\nfname=/home/adminuser/goaccess/$today_access_pass1.html\r\necho $src\r\necho $fname\r\n\r\ngoaccess $src --log-format='%h - %^ [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"' --date-format=%d/%b/%Y --time-format=%T --no-query-string --real-os --output=$fname\r\n```"
      },
      {
        "user": "daBee",
        "created_at": "2018-05-08T16:31:52Z",
        "body": "Everything is fine now.  Not sure what happened.  The log is fine, but my syntax was different than what I posted here.  "
      }
    ]
  },
  {
    "number": 1096,
    "title": "Haproxy log parsing troubles",
    "created_at": "2018-04-24T03:11:09Z",
    "closed_at": "2018-05-06T02:00:23Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1096",
    "body": "Hi, I've been trying to get this to work; any hints?\r\n\r\n    Apr 23 21:02:35 pfs.valtus.com haproxy[2212]: [23/Apr/2018:21:02:35.430] [4A5DBD51:882A_4AC81DD4:0050_5ADE9E4A_102D0] 74.93.189.81:34858 PUBLIC_80_443 APP_pool/app12u_8280 0/1184/0/0/412/415 200 23571 JSESSIONID=F449A837F6ECF24CA6DDF53AE83624C8 - ---- 30/28/1/1/0 0/0 {www.valtus.com|keep-alive|python-requests/2.18.4|} {|image/jpeg|} \"GET /views/wmts?userid=XXXXXX&passwd=XXXXXXXX;?/1.0.0/HOAG/default/g/19/186597/87026.jpg HTTP/1.1\"",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1096/comments",
    "author": "jwelter1971",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-04-24T03:37:11Z",
        "body": "Can you please describe the fields you have in there? Thanks."
      },
      {
        "user": "jwelter1971",
        "created_at": "2018-04-24T12:25:04Z",
        "body": "Hi,\r\n\r\nI have copied the log format string I am using as well as the HAPROXY log entities.\r\n\r\nOne thing that might be really helpful would be to be able to use the HAPROXY log format string to pass to goaccess to make this easier as I notice a ton of questions on this topic?\r\n\r\nFor example perhaps a command switch like:\r\n\r\n`--log-haproxy-defined [%tr]\\ [%ID]\\ %ci:%cp\\ %ft\\ %b/%s\\ %TR/%Tq/%Tw/%Tc/%Tr/%Ta\\ %ST\\ %B\\ %CC\\ %CS\\ %tsc\\ %ac/%fc/%bc/%sc/%rc\\ %sq/%bq\\ %hr\\ %hs\\ %{+Q}r\r\n`\r\nAnyhow my log is defined as:\r\n\r\n `[%tr]\\ [%ID]\\ %ci:%cp\\ %ft\\ %b/%s\\ %TR/%Tq/%Tw/%Tc/%Tr/%Ta\\ %ST\\ %B\\ %CC\\ %CS\\ %tsc\\ %ac/%fc/%bc/%sc/%rc\\ %sq/%bq\\ %hr\\ %hs\\ %{+Q}r`\r\n\r\nAnd the entity chart:\r\n\r\n ```\r\n+---+------+-----------------------------------------------+-------------+\r\n  | R | var  | field name (8.2.2 and 8.2.3 for description)  | type        |\r\n  +---+------+-----------------------------------------------+-------------+\r\n  |   | %o   | special variable, apply flags on all next var |             |\r\n  +---+------+-----------------------------------------------+-------------+\r\n  |   | %B   | bytes_read           (from server to client)  | numeric     |\r\n  | H | %CC  | captured_request_cookie                       | string      |\r\n  | H | %CS  | captured_response_cookie                      | string      |\r\n  |   | %H   | hostname                                      | string      |\r\n  | H | %HM  | HTTP method (ex: POST)                        | string      |\r\n  | H | %HP  | HTTP request URI without query string (path)  | string      |\r\n  | H | %HQ  | HTTP request URI query string (ex: ?bar=baz)  | string      |\r\n  | H | %HU  | HTTP request URI (ex: /foo?bar=baz)           | string      |\r\n  | H | %HV  | HTTP version (ex: HTTP/1.0)                   | string      |\r\n  |   | %ID  | unique-id                                     | string      |\r\n  |   | %ST  | status_code                                   | numeric     |\r\n  |   | %T   | gmt_date_time                                 | date        |\r\n  |   | %Ta  | Active time of the request (from TR to end)   | numeric     |\r\n  |   | %Tc  | Tc                                            | numeric     |\r\n  |   | %Td  | Td = Tt - (Tq + Tw + Tc + Tr)                 | numeric     |\r\n  |   | %Tl  | local_date_time                               | date        |\r\n  |   | %Th  | connection handshake time (SSL, PROXY proto)  | numeric     |\r\n  | H | %Ti  | idle time before the HTTP request             | numeric     |\r\n  | H | %Tq  | Th + Ti + TR                                  | numeric     |\r\n  | H | %TR  | time to receive the full request from 1st byte| numeric     |\r\n  | H | %Tr  | Tr (response time)                            | numeric     |\r\n  |   | %Ts  | timestamp                                     | numeric     |\r\n  |   | %Tt  | Tt                                            | numeric     |\r\n  |   | %Tw  | Tw                                            | numeric     |\r\n  |   | %U   | bytes_uploaded       (from client to server)  | numeric     |\r\n  |   | %ac  | actconn                                       | numeric     |\r\n  |   | %b   | backend_name                                  | string      |\r\n  |   | %bc  | beconn      (backend concurrent connections)  | numeric     |\r\n  |   | %bi  | backend_source_ip       (connecting address)  | IP          |\r\n  |   | %bp  | backend_source_port     (connecting address)  | numeric     |\r\n  |   | %bq  | backend_queue                                 | numeric     |\r\n  |   | %ci  | client_ip                 (accepted address)  | IP          |\r\n  |   | %cp  | client_port               (accepted address)  | numeric     |\r\n  |   | %f   | frontend_name                                 | string      |\r\n  |   | %fc  | feconn     (frontend concurrent connections)  | numeric     |\r\n  |   | %fi  | frontend_ip              (accepting address)  | IP          |\r\n  |   | %fp  | frontend_port            (accepting address)  | numeric     |\r\n  |   | %ft  | frontend_name_transport ('~' suffix for SSL)  | string      |\r\n  |   | %lc  | frontend_log_counter                          | numeric     |\r\n  |   | %hr  | captured_request_headers default style        | string      |\r\n  |   | %hrl | captured_request_headers CLF style            | string list |\r\n  |   | %hs  | captured_response_headers default style       | string      |\r\n  |   | %hsl | captured_response_headers CLF style           | string list |\r\n  |   | %ms  | accept date milliseconds (left-padded with 0) | numeric     |\r\n  |   | %pid | PID                                           | numeric     |\r\n  | H | %r   | http_request                                  | string      |\r\n  |   | %rc  | retries                                       | numeric     |\r\n  |   | %rt  | request_counter (HTTP req or TCP session)     | numeric     |\r\n  |   | %s   | server_name                                   | string      |\r\n  |   | %sc  | srv_conn     (server concurrent connections)  | numeric     |\r\n  |   | %si  | server_IP                   (target address)  | IP          |\r\n  |   | %sp  | server_port                 (target address)  | numeric     |\r\n  |   | %sq  | srv_queue                                     | numeric     |\r\n  | S | %sslc| ssl_ciphers (ex: AES-SHA)                     | string      |\r\n  | S | %sslv| ssl_version (ex: TLSv1)                       | string      |\r\n  |   | %t   | date_time      (with millisecond resolution)  | date        |\r\n  | H | %tr  | date_time of HTTP request                     | date        |\r\n  | H | %trg | gmt_date_time of start of HTTP request        | date        |\r\n  | H | %trl | locla_date_time of start of HTTP request      | date        |\r\n  |   | %ts  | termination_state                             | string      |\r\n  | H | %tsc | termination_state with cookie status          | string      |\r\n  +---+------+-----------------------------------------------+-------------+\r\n\r\n```\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2018-04-26T02:08:24Z",
        "body": "This should work.\r\n\r\n    goaccess access.log --log-format='%^]: [%d:%t.%^] %^ %h:%^ %^ %e/%^ %^/%^/%^/%^/%L/%^ %s %b %^{%v|%^|%u} %^ \"%r\"' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "allinurl",
        "created_at": "2018-05-06T02:00:23Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1087,
    "title": "How to analyse Dante Socks server logs with GoAccess?",
    "created_at": "2018-04-16T13:06:35Z",
    "closed_at": "2018-04-19T08:29:27Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1087",
    "body": "For example:\r\n\r\n    Apr 13 11:35:13 (1523619313.153088) danted[6894]: info: pass(1): tcp/connect [: username%MY_USERNAME@94.25.169.233.27725 167.99.247.172.1080 -> 167.99.247.172.27725 149.154.163.37.44\r\n\r\nDate is three different columns, can i parse it with GoAccess?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1087/comments",
    "author": "Enfield",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-04-16T16:59:36Z",
        "body": "Can you please describe the fields you've got in there? Thanks."
      },
      {
        "user": "Enfield",
        "created_at": "2018-04-17T17:02:48Z",
        "body": "For this string (it's a SOCKS5 proxy):\r\n\r\n    Apr 13 11:35:13 (1523619313.153088) danted[6894]: info: pass(1): tcp/connect [: username%MY_USERNAME@94.25.169.233.27725 167.99.247.172.1080 -> 167.99.247.172.27725 149.154.163.37.44\r\n\r\nfields be:\r\n\r\n    month day time (timestamp with milliseconds) ignore ignore request_status protocol/action[:username%login@incoming_ipv4.port server_ipv4.port -> server_ipv4.port outcoming_ipv4.port"
      },
      {
        "user": "allinurl",
        "created_at": "2018-04-19T00:35:29Z",
        "body": "Unfortunately there's no delimiter for those IPs,  e.g., `94.25.169.233.27725`. If you could split the last part, then it you could do:\r\n\r\n    goaccess access.log --log-format='%^(%x.%^) %v: %^ %^ %U %^ %e@%h:%^ %^ %^' --date-format=%s --time-format=%s --ignore-panel=REQUESTS_STATIC --ignore-panel=NOT_FOUND --ignore-panel=OS --ignore-panel=BROWSERS --ignore-panel=REFERRERS --ignore-panel=REFERRING_SITES --ignore-panel=STATUS_CODES --http-method=no --http-protocol=no"
      },
      {
        "user": "Enfield",
        "created_at": "2018-04-19T11:19:26Z",
        "body": "Thx!"
      }
    ]
  },
  {
    "number": 1078,
    "title": "extract all visitors and page views",
    "created_at": "2018-04-10T14:11:56Z",
    "closed_at": "2018-04-15T21:26:42Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1078",
    "body": "I have a few questions in relation to visitors.\r\nI am trying to find a way to extract some specific info from the logs.\r\n\r\nAs per your docs goaccess reports unique visitors , \r\n1. What are the conditions for a visitor to be considered unique ?\r\n2. is there a way to report the total number of visitors to the site regardless if some of them are double up ( non-unique visitors )\r\n3. In relation to page-views as specified in the docs i tried to use\r\nawk '$7~/\\.html|\\.htm|\\.php/' access.log | goaccess -\r\nMy issue is the hosted site is WordPress and the pages have no extension;\r\n- home page in the logs file is listed as: '/'\r\n- contact page is listed as: '/contact' etc.\r\n\r\nThe above log parsing won't work in this case scenario where the pages or posts don't have an extension, is there a way to extract page views in this case scenario ?\r\n\r\nThank You",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1078/comments",
    "author": "expressmarketing",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-04-11T15:06:15Z",
        "body": "1. Hits/requests having the same IPv4/6, date and user agent are considered a unique visitor.\r\n2. Not exactly, but probably you could deduce this from the Visitors (IPs) panel by looking at how many unique visitors there are for a single IP.\r\n3. To extract page views that don't contain an extension (assuming a COMBINED log format), you could use:\r\n\r\n` ` ` \r\n    awk '$7!~/\\..*$/' access.log | goaccess --log-format=COMBINED -\r\n` ` ` "
      },
      {
        "user": "expressmarketing",
        "created_at": "2018-04-11T16:26:33Z",
        "body": "Thank you for the great insight on how the goaccess works.\r\nI will give this a try.\r\n\r\nThank you again"
      },
      {
        "user": "allinurl",
        "created_at": "2018-04-15T21:26:42Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1070,
    "title": "Format Errors - Verify your log/date/time format",
    "created_at": "2018-04-04T08:52:38Z",
    "closed_at": "2018-04-20T00:44:34Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1070",
    "body": "our log sample like below\r\n\r\n```\r\n5.47.151.236 - - [03/Apr/2018:03:32:11 +0300] \"GET /assets/mobil/js/sepet_app.js?_=1522715528263 HTTP/1.0\" 200 1986\r\n5.47.34.94 - - [03/Apr/2018:03:32:10 +0300] \"GET /kategoriler/aramalar/0?s=63 HTTP/1.0\" 200 14938\r\n5.47.34.94 - - [03/Apr/2018:03:32:11 +0300] \"GET /assets/mobil/js/detay_app.js?_=1522715531148 HTTP/1.0\" 200 1383\r\n```\r\n\r\nwhen I try to run I got error like\r\n\r\n```\r\n[root@server]# goaccess access.log -a -o report.html\r\nweb4ing... [0] [0/s]\r\nParsed 10 lines producing the following errors:\r\n\r\nToken '+0300]' doesn't match specifier '%h'\r\nToken '+0300]' doesn't match specifier '%h'\r\nToken '+0300]' doesn't match specifier '%h'\r\nToken '+0300]' doesn't match specifier '%h'\r\nToken '+0300]' doesn't match specifier '%h'\r\nToken '+0300]' doesn't match specifier '%h'\r\nToken '+0300]' doesn't match specifier '%h'\r\nToken '+0300]' doesn't match specifier '%h'\r\nToken '+0300]' doesn't match specifier '%h'\r\nToken '+0300]' doesn't match specifier '%h'\r\n\r\nFormat Errors - Verify your log/date/time format\r\n[root@server]# \r\n\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1070/comments",
    "author": "hahlatci",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-04-05T12:08:12Z",
        "body": "Looks like a `COMMON` log, please try:\r\n\r\n    goaccess --log-format=COMMON access.log -a -o report.html"
      },
      {
        "user": "allinurl",
        "created_at": "2018-04-20T00:44:34Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1069,
    "title": "Redirect Analysis",
    "created_at": "2018-04-03T11:36:31Z",
    "closed_at": "2018-04-08T19:14:17Z",
    "labels": [
      "question",
      "log/date/time format",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1069",
    "body": "Hi,\r\n\r\nwe have a vast amount of http redirects and want to analyse which of the configured redirects is still being used.\r\nWe are using httpd and have a custom log format contains:\r\n\r\n- http host of the request\r\n- http uri of the request\r\n- http referer of the request\r\n- http location of the response\r\n\r\nIs it possible to analyse that with GoAccess?\r\n\r\n\r\nThanks,\r\nRobert",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1069/comments",
    "author": "rkno82",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-04-03T14:55:41Z",
        "body": "It sounds like goaccess should be able to parse your log without issues. It would be great if you can post a few sample lines from your access log to come up with a possible log-format."
      },
      {
        "user": "allinurl",
        "created_at": "2018-04-08T13:40:24Z",
        "body": "Any updates on this?"
      },
      {
        "user": "rkno82",
        "created_at": "2018-04-08T19:14:17Z",
        "body": "Hi Gerardo,\r\n\r\ncurrently I cannot provide logs as we are still planning.\r\nYour answers enabled me to use GoAccess for the reporting.\r\n\r\n\r\nThanks!"
      }
    ]
  },
  {
    "number": 1065,
    "title": "is it possible to define new customized filed in log format",
    "created_at": "2018-03-31T02:19:34Z",
    "closed_at": "2018-05-18T11:29:58Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1065",
    "body": "my tomcat log format is\r\n\r\n`pattern=\"%a %{jira.request.id}r %{jira.request.username}r %t &quot;%m %U%q %H&quot; %s %b %D &quot;%{Referer}i&quot; &quot;%{User-Agent}i&quot; &quot;%{jira.request.assession.id}r&quot;`\r\n\r\nis it possible to show the  `username`  in the goaccess result ,  I could only ignore it by `^%` so far,\r\nBut it's really necessary to get the statistics of username hints.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1065/comments",
    "author": "theSalt",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-03-31T03:16:27Z",
        "body": "`%e` should display the authenticated user."
      },
      {
        "user": "allinurl",
        "created_at": "2018-05-18T11:29:58Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1051,
    "title": "How to analyse this log with GoAccess?",
    "created_at": "2018-03-22T16:10:15Z",
    "closed_at": "2018-05-18T11:30:54Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1051",
    "body": "How I can use this log format:\r\n\r\n~~~\r\nhead -n 10 core.20180322.log\r\n\r\nMar 22 00:00:00 (info) appsse[49343] [localhost] [ E ] [14c9606a2d485027] [vapp07] Started GET \"/status/gesundheit\" for 192.168.32.99 at 2018-03-22 00:00:00 +0100\r\nMar 21 23:59:59 (info) appsse[838] [localhost] [ E ] [6c39814e49c0394d] [vapp04] Started GET \"/wlw/status/health\" for 192.168.32.100 at 2018-03-21 23:59:59 +0100\r\nMar 21 23:59:59 (info) appsse[38988] [localhost] [ E ] [05c4da4cf117810c] [vapp03] Started GET \"/wlw/status/health\" for 192.168.32.100 at 2018-03-21 23:59:59 +0100\r\nMar 22 00:00:00 (info) appsse[19100] [localhost] [ E ] [ddba40121fa4b56a] [vapp02] Started GET \"/wlw/status/health\" for 192.168.32.100 at 2018-03-22 00:00:00 +0100\r\nMar 22 00:00:00 (info) appsse[49343] [localhost] [ E ] [0513631c23dfdb23] [vapp07] Started GET \"/wlw/status/health\" for 192.168.32.99 at 2018-03-22 00:00:00 +0100\r\nMar 22 00:00:01 (info) appsse[41883] [localhost] [ E ] [7e104f61dbaa756f] [vapp01] Started GET \"/status/gesundheit\" for 192.168.32.99 at 2018-03-22 00:00:01 +0100\r\nMar 22 00:00:01 (info) appsse[43253] [localhost] [ E ] [3b7615971bd6041c] [vapp08] Started GET \"/status/gesundheit\" for 192.168.32.99 at 2018-03-22 00:00:01 +0100\r\nMar 22 00:00:01 (info) appsse[43253] [localhost] [ E ] [4919ac5690f0f3ae] [vapp08] Started GET \"/wlw/status/health\" for 192.168.32.99 at 2018-03-22 00:00:01 +0100\r\nMar 22 00:00:00 (info) appsse[8607] [localhost] [ E ] [9bae56272e91a0ba] [vapp05] Started GET \"/status/gesundheit\" for 192.168.32.99 at 2018-03-22 00:00:00 +0100\r\n~~~",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1051/comments",
    "author": "astropanic",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-03-23T03:20:49Z",
        "body": "Please try this:\r\n\r\n    goaccess access.log --log-format='%^) %e[%^] %^[ %^[ %^[ %^[%v] %^ %m \"%U\" %^ %h %^ %d %t %^' --date-format=%Y-%m-%d --time-format=%T --ignore-panel=OS --ignore-panel=BROWSERS --ignore-panel=REFERRING_SITES --ignore-panel=STATUS_CODES --http-protocol=no"
      },
      {
        "user": "allinurl",
        "created_at": "2018-05-18T11:30:54Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 1050,
    "title": "Get monthly records with needing to specify day number.",
    "created_at": "2018-03-22T02:15:26Z",
    "closed_at": "2018-04-10T20:45:36Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1050",
    "body": "If we want to parse only a certain time-frame from DATE a to DATE b, we can do:\r\n`# sed -n '/5\\/Nov\\/2010/,/5\\/Dec\\/2010/ p' access.log | goaccess -a -`\r\n\r\nHow can I do something similar to this, but just get the records for a month?\r\n\r\nExample: everything in `Feb 2010`, so I don't need to calculate whether it is a leap year or how many days are in the month etc etc.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1050/comments",
    "author": "robertmylne",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-03-22T02:57:34Z",
        "body": "You could simply do:\r\n\r\n    grep 'Mar\\/2018' /var/log/apache2/access.log | goaccess --log-format=COMBINED -\r\n\r\nor you can play also with `date`, e.g. to get only today's entries,\r\n\r\n    grep `date +\"%d/%b\"` /var/log/apache2/access.log | goaccess --log-format=COMBINED -"
      },
      {
        "user": "robertmylne",
        "created_at": "2018-03-22T03:18:30Z",
        "body": "Perfect thank you :)\r\n\r\nCould I please ask if you have an example for getting data for a single hour as well? (in each format)"
      },
      {
        "user": "allinurl",
        "created_at": "2018-03-22T12:23:04Z",
        "body": "Glad to hear that worked:)\r\n\r\nYou can do something like (assuming you have a COMBINED log)\r\n\r\n    awk -F'[: ]' '$5~/06/' /var/log/apache2/access.log | goaccess --log-format=COMBINED -\r\n\r\nThat will match the hour field (fifth) to 06 (6am).\r\n\r\nAnd you can always combine multiple pipes, e.g.,\r\n\r\n    grep 'Mar\\/2018' /var/log/apache2/access.log | awk -F'[: ]' '$5~/06/'  | goaccess --log-format=COMBINED -\r\n\r\nThis should get much easier when #117 is implemented :)"
      },
      {
        "user": "allinurl",
        "created_at": "2018-04-10T20:45:21Z",
        "body": "> Is there a way to do it for multiple files at the same time, like in cPanel it has 2 files one for ssl and one for non ssl. So if the domain has been changed it is spread over multiple log files.\r\n\r\nFor multiple files you can simply cat those files and then grep as above. e.g.,\r\n\r\n    cat /var/log/apache2/access.log /var/log/apache2/access-ssl.log | grep 'Mar\\/2018' | awk -F'[: ]' '$5~/06/'  | goaccess --log-format=COMBINED -"
      },
      {
        "user": "allinurl",
        "created_at": "2018-04-10T20:45:36Z",
        "body": "Closing this. Feel free to reopen if needed."
      }
    ]
  },
  {
    "number": 1047,
    "title": "goaccess not working with cron and not showing full log",
    "created_at": "2018-03-15T21:09:20Z",
    "closed_at": "2018-03-15T22:30:59Z",
    "labels": [
      "question",
      "other",
      "cron"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1047",
    "body": "hello, I can manually run GoAccess just fine with the command\r\n`sudo goaccess -f /var/log/nginx/access.log -a > /var/www/logs/report.html`\r\n\r\nbut when trying to run the same command in cron I just get an empty output. \r\n`PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\r\n0 * * * * sudo goaccess -f /var/log/nginx/access.log -a > /var/www/logs/report.html`\r\n\r\nit also seems that the log file goes way further back than GoAccess actually shows, I'd really appreciate it if someone could help :)",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1047/comments",
    "author": "AndreasJacobsen",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-03-15T21:13:36Z",
        "body": "You probably want to add it to root's crontab instead.\r\n\r\n    sudo crontab -e\r\n\r\nand then try adding:\r\n\r\n    goaccess /var/log/nginx/access.log -a -o /var/www/logs/report.html\r\n\r\nOtherwise you could write a bash script with goaccess on it and run the script from the cron. Let me know if that solves the issue."
      },
      {
        "user": "AndreasJacobsen",
        "created_at": "2018-03-15T22:08:16Z",
        "body": "that fixed it, thanks!"
      },
      {
        "user": "allinurl",
        "created_at": "2018-03-15T22:30:59Z",
        "body": "Glad to hear that :)"
      }
    ]
  },
  {
    "number": 1034,
    "title": "Custom Apache access log format",
    "created_at": "2018-02-28T21:43:50Z",
    "closed_at": "2019-01-09T14:54:19Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1034",
    "body": "Hello,\r\n\r\nCould you please help me with the configuration of the log format I'm using?\r\n\r\nHere's a line that shows it in the access.log:\r\n\r\n    [28/Feb/2018:09:09:00 +0100] [www.website.com:443] [client 117.201.55.235] \"GET / HTTP/1.1\" 200 62972 \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1\"\r\n\r\nThank you in advance.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1034/comments",
    "author": "eibravomacias",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-02-28T21:53:11Z",
        "body": "Please try this:\r\n\r\n    goaccess access.log --log-format='[%d:%t %^] [%v:%^] [%^ %h] \"%r\" %s %b \"%u\"' --date-format=%d/%b/%Y --time-format=%T --ignore-panel=REFERRING_SITES"
      },
      {
        "user": "eibravomacias",
        "created_at": "2018-02-28T22:06:16Z",
        "body": "Perfect! It worked like a charm.\r\n\r\nThank you very much!"
      }
    ]
  },
  {
    "number": 1027,
    "title": "Caddy log format",
    "created_at": "2018-02-24T09:54:49Z",
    "closed_at": "2018-02-24T15:59:20Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1027",
    "body": "Hi all,\r\ngreat project first of all :+1: \r\nFollowing getting started section, I have issues configuring log format for Caddy server.\r\n\r\nDefault format in `access.log`:\r\n```\r\n11.11.11.11 - - [24/Feb/2018:10:47:27 +0100] \"GET / HTTP/2.0\" 304 0\r\n11.11.11.11 - - [24/Feb/2018:10:47:28 +0100] \"GET /assets/css/main.css HTTP/2.0\" 304 0\r\n```\r\nI've masked IPv4 but it could be IPv6 as well.\r\n\r\nThanks for your support and have a nice day\r\nmidzer",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1027/comments",
    "author": "midzer",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-02-24T14:29:32Z",
        "body": "Looks like COMMON log format. Please try:\r\n\r\n    goaccess access.log --log-format=COMMON"
      },
      {
        "user": "midzer",
        "created_at": "2018-02-24T15:59:20Z",
        "body": "After upgrading to Official GoAccess Debian & Ubuntu repository, it worked flawlessly with COMMON log format. Thanks @allinurl "
      },
      {
        "user": "allinurl",
        "created_at": "2018-02-24T16:28:13Z",
        "body": "Glad that did the job :)"
      }
    ]
  },
  {
    "number": 1025,
    "title": "nohup Unable to open the specified log file",
    "created_at": "2018-02-23T08:06:07Z",
    "closed_at": "2018-03-03T13:02:15Z",
    "labels": [
      "question",
      "command-line options",
      "other"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1025",
    "body": "When I excute : \r\n\r\n    nohup /usr/local/goaccess/bin/goaccess /usr/local/goaccess/bin/logs/1550/xtougu.access.log  -p /root/.goaccessrc  -o /usr/local/nginx/html/realtime.html --real-time-html &\r\n\r\nThe error log shows :\r\n\r\n```\r\nFatal error has occurred\r\nError occured at: src/parser.c - read_log - 2669\r\nUnable to open the specified log file. No such file or directory\r\n\r\n```\r\n\r\nIf I remove nohup,It works ok.How to solve this problem?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1025/comments",
    "author": "l36t",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-02-23T12:49:56Z",
        "body": "You can try daemonizing it instead,\r\n\r\n    /usr/local/goaccess/bin/goaccess /usr/local/goaccess/bin/logs/1550/xtougu.access.log -p /root/.goaccessrc -o /usr/local/nginx/html/realtime.html --real-time-html --daemonize"
      },
      {
        "user": "allinurl",
        "created_at": "2018-02-27T02:01:35Z",
        "body": "Any updates?"
      },
      {
        "user": "allinurl",
        "created_at": "2018-03-03T13:02:15Z",
        "body": "Closing this. Feel free to reopen it if needed."
      },
      {
        "user": "sakuya-kai",
        "created_at": "2020-01-15T08:40:37Z",
        "body": "I have the same problem, nohup dosen't work, but I find another way to solve it, use tmux tool, it is more practical."
      }
    ]
  },
  {
    "number": 1020,
    "title": "Apache Custom Log Format",
    "created_at": "2018-02-18T18:04:39Z",
    "closed_at": "2018-02-19T20:24:35Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1020",
    "body": "Hello, I can't seem to figure out this custom log format for goaccess:\r\n\r\nApahce LogFormat:\r\n\r\n    \"%{Host}i:%p %a %l %u %t \\\"%r\\\" %>s %O \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\" %{%s}t %D %P\"\r\n\r\nExample:\r\n\r\n    10.61.244.2:80 10.61.244.1 - - [18/Feb/2018:17:49:27 +0000] \"GET /favicon.ico HTTP/1.1\" 404 502 \"-\" \"Mozilla/5.0 (X11; Linux x86_64; rv:58.0) Gecko/20100101 Firefox/58.0\" 1518976167 207 527\r\n\r\nWhat I tried:\r\nlog-format \"%H:%p %a %l %u %t \"%r\" %s %O \"%R\" \"%u\" \\t%s %D %P\r\n\r\nCan someone help me ?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1020/comments",
    "author": "TheHitchhiker",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-02-18T19:25:56Z",
        "body": "Please try this:\r\n\r\n    goaccess access.log --log-format='%h: %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %^ %D %^' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "TheHitchhiker",
        "created_at": "2018-02-19T20:13:41Z",
        "body": "It works perfectly. Thank you !"
      },
      {
        "user": "allinurl",
        "created_at": "2018-02-19T20:24:35Z",
        "body": "Glad to hear that :)"
      }
    ]
  },
  {
    "number": 1018,
    "title": "Error occured at: src/parser.c - read_log - 2669",
    "created_at": "2018-02-17T19:49:08Z",
    "closed_at": "2018-02-19T22:07:55Z",
    "labels": [
      "question",
      "log/date/time format",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1018",
    "body": "Hi, \r\n\r\nI have the following error when we invoke goaccess:\r\n\r\n> GoAccess - version 1.2 - Mar  7 2017 06:40:58\r\n> Config file: /etc/goaccess.conf\r\n> \r\n> Fatal error has occurred\r\n> Error occured at: src/parser.c - read_log - 2669\r\n> Unable to open the specified log file. No such file or directory\r\n\r\nMy config file has the following:\r\n```\r\ntime-format %H:%M:%S\r\ndate-format %d/%b/%Y\r\nlog-format %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"\r\n```\r\n\r\nAnd some example traces of my log are:\r\n```\r\n90.68.17.241 - - [17/Feb/2018:20:15:00 +0100] \"GET /escudos.php HTTP/1.1\" 200 195 \"-\" \"Dalvik/2.1.0 (Linux; U; Android 7.0; SM-G935F Build/NRD90M)\"\r\n79.144.48.17 - - [17/Feb/2018:20:15:00 +0100] \"GET /escudos.php HTTP/1.1\" 302 249 \"-\" \"Dalvik/2.1.0 (Linux; U; Android 5.1.1; SM-J500FN Build/LMY48B)\"\r\n```\r\n\r\nIs something wrong in my log-format?\r\nThanks in advance!",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1018/comments",
    "author": "kete1987",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-02-17T20:11:05Z",
        "body": "How did you invoke goaccess? The following should work:\r\n\r\n    goaccess /path/access.log --log-format=COMBINED"
      },
      {
        "user": "kete1987",
        "created_at": "2018-02-19T18:35:06Z",
        "body": "I usually try with  \r\n`goaccess -f ${LOGFILE} -a > /var/www/html/report/report.html`\r\nUsing your command, it returns:\r\n```\r\n:~$ sudo goaccess /var/log/apache2/access.log.1518652800 --log-format=COMBINED\r\n\r\nGoAccess - version 1.2 - Mar  7 2017 06:40:58\r\nConfig file: /etc/goaccess.conf\r\n\r\nFatal error has occurred\r\nError occured at: src/parser.c - read_log - 2669\r\nUnable to open the specified log file. Device or resource busy\r\n```\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2018-02-19T18:58:53Z",
        "body": "You must be using the same log from a different process and thus goaccess can't open it. Please make sure no other process is using it and try again. This may help:\r\n\r\n>     lsof +D /path\r\n> \r\n> That will recurse through the filesystem under /path, so beware doing it on large directory trees.\r\n> \r\n> Once you know which processes have files open, you can exit those apps, or kill them with the kill(1) or pkill command."
      },
      {
        "user": "kete1987",
        "created_at": "2018-02-19T22:07:55Z",
        "body": "Hi, \r\n\r\nIt's solved, i had a rookie error (in my config file I had uncommented log-file parameter)\r\n\r\nThanks for your help, i close the issue"
      },
      {
        "user": "allinurl",
        "created_at": "2018-02-19T22:14:04Z",
        "body": "@kete1987 Glad to hear that :)"
      },
      {
        "user": "dshook",
        "created_at": "2024-02-09T02:35:29Z",
        "body": "For me this was caused by goaccess not being able to create the report file in the folder.  I had to manually create the report file first with `touch`"
      }
    ]
  },
  {
    "number": 1017,
    "title": "Nginx Json custom log format",
    "created_at": "2018-02-16T18:10:18Z",
    "closed_at": "2018-02-16T20:22:24Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1017",
    "body": "I am trying to parse our custom nginx log format with the following setup:\r\n```\r\n{\"server_name\": \"$server_name\", \"server_port\": $server_port, \"server_protocol\": \"$server_protocol\", \"http_host\": \"$http_host\", \"remote_addr\": \"$remote_addr\", \"remote_user\": \"$remote_user\", \"time_local\": \"$time_local\", '\r\n                          '\"request\": \"$request\", \"status\": $status, \"body_bytes_sent\": $body_bytes_sent, \"http_referrer\": \"$http_referer\", '\r\n                          '\"http_user_agent\": \"$http_user_agent\", \"request_time\": \"$request_time\", \"http_client_ip\": \"$http_client_ip\", \"http_x_forwarded_for\" : \"$http_x_forwarded_for\"}\r\n```\r\nExample from nginx log:\r\n```\r\n{\"server_name\":` \"domain.*\", \"server_port\": 80, \"server_protocol\": \"HTTP/1.1\", \"http_host\": \"www.example.com\", \"remote_addr\": \"ip_removed\", \"remote_user\": \"-\", \"time_local\": \"15/Feb/2018:14:26:56 -0500\", \"request\": \"GET /example/test/test HTTP/1.1\", \"status\": 200, \"body_bytes_sent\": 21, \"http_referrer\": \"-\", \"http_user_agent\": \"user agent string\", \"request_time\": \"0.015\", \"http_client_ip\": \"-\", \"http_x_forwarded_for\" : \"ip_removed, ip_removed, ip_removed\"}\r\n```\r\n\r\nCurrent formats trying to use:\r\n```\r\ntime-format %H:%M:%S %z\r\ndate-format %d/%b/%Y\r\nlog-format {\"%^\": \"%v\", \"%^\": %^, \"%^\": \"%H\", \"%^\": \"%^\", \"%^\": \"%^\", \"%^\": \"%d:%t\", \"%^\": \"%m %U %H\", \"%^\": %s, \"%^\": %b, \"%^\": \"%R\", \"%^\": \"%u\", \"%^\": \"%T\", \"%^\": \"%h\", \"%^\" : \"%^\"}\r\n```\r\nAny help would be appreciated.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1017/comments",
    "author": "kmentch",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-02-16T19:10:45Z",
        "body": "Give this a shot:\r\n\r\n    goaccess access.log --log-format='%^ \"%v\"%^:%^:%^:%^: \"%h\"%^: \"%e\"%^: \"%d:%t %^\"%^: \"%r\"%^: %s, %^: %b, %^: \"%R\"%^: \"%u\"%^: \"%T\" %^' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "kmentch",
        "created_at": "2018-02-16T20:22:24Z",
        "body": "Awesome, that worked perfect!"
      }
    ]
  },
  {
    "number": 1016,
    "title": "Static Resources Panel empty",
    "created_at": "2018-02-16T01:15:40Z",
    "closed_at": "2018-02-19T16:17:44Z",
    "labels": [
      "question",
      "log-processing",
      "command-line options"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1016",
    "body": "Static Resources Panel empty in trunk (not sure how revision but has 1 or 2 weeks only.\r\n\r\nIn my log I have some css (like mycss.css?hash=XXXXXXX9) ans images in JPG, SVG and PNG formats (maybe more extensions but this 4 sure. .jpg files don't have ?hash).\r\nI hope I can send a partial log soon and put my branch revision.\r\n\r\nThanks so much for this great piece of code! ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1016/comments",
    "author": "jabiertxof",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-02-16T01:43:19Z",
        "body": "Please use `--all-static-files` to include static files that contain a query string."
      },
      {
        "user": "allinurl",
        "created_at": "2018-02-19T16:17:44Z",
        "body": "Closing this. Feel free to reopen it if needed."
      },
      {
        "user": "jabiertxof",
        "created_at": "2018-02-19T18:51:21Z",
        "body": "Sorry for don reply fast, Im on middle of server migration...\r\nIs a mine problem, Im logging static files in other file.\r\nSorry for the noise!\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2018-02-19T18:55:59Z",
        "body": "@jabiertxof no problem. Glad you were able to figure it out :)"
      },
      {
        "user": "jabiertxof",
        "created_at": "2018-02-19T18:57:38Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 1010,
    "title": "Logback log format trouble with Date/Time",
    "created_at": "2018-02-12T18:57:02Z",
    "closed_at": "2018-02-12T19:15:31Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1010",
    "body": "I have tried many, many combinations but cannot get goaccess to parse my log file. Apparently, it has to do with the data/time format the log has. Could you shed some light on this? Thanks.\r\n\r\nI modified the goacc ess configuration file such that there are only a few uncommented sections:\r\n\r\n```\r\ntime-format %H:%M:%S\r\ndate-format %b %d\r\nlog-format %d %T %v %p %c{0} - %q - %X{username} : %X{company}\r\n\r\n```\r\nI get the errors\r\n\r\n```\r\nIPv4/6 is required.\r\nFormat Errors - Verify your log/date/time format\r\n\r\n```\r\nThe Logback pattern\r\n\r\n    %d{MMM dd HH:mm:ss} %p %c{0} - %m - %X{username} : %X{company}\r\n\r\nSample log line\r\n\r\n    Feb 12 15:29:29 LAPTOP-MHM31I0V INFO ComboDescriptionCell - ComboBox is going to be showed with 154 items. Current selection is -1  - Francisco Sepulveda  : Great Plains Stainless Company\r\n\r\nBroken down\r\n\r\n```\r\n**_(%d)_** Feb 12 15:29:29 \r\n**_(%p)_** LAPTOP-MHM31I0V \r\n**_(%c{0})_** INFO \r\n**_(%m)_** ComboDescriptionCell - ComboBox is going to be showed with 154 items. Current selection is -1 \r\n_(- %X{username})_ - Francisco Sepulveda \r\n**_(: %X{company})_** : Great Plains Stainless Company\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1010/comments",
    "author": "othenos",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-02-12T19:02:29Z",
        "body": "It looks like your log is not from a web server (access log). GoAccess is a web log analysis tool so in your case, goaccess won't be of much help."
      },
      {
        "user": "othenos",
        "created_at": "2018-02-12T19:05:54Z",
        "body": "You're correct. It is from an application running under Tomcat. Sorry to hear GoAccess is restricted to access logs. Thanks for your quick response."
      },
      {
        "user": "allinurl",
        "created_at": "2018-02-12T19:15:31Z",
        "body": "Closing this. FWIW **#845** may eventually give some flexibility to goaccess."
      }
    ]
  },
  {
    "number": 1000,
    "title": "Diferent output formats with one process on logs",
    "created_at": "2018-01-29T08:36:03Z",
    "closed_at": "2018-01-29T23:08:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/1000",
    "body": "Hi could be cool have the variable json_data at the same place than the output in HTML to dont need to process two times or parse the result. \r\nMaybe can be a option like: html_output_json_data:<inline|external|both>\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/1000/comments",
    "author": "jabiertxof",
    "comments": [
      {
        "user": "jabiertxof",
        "created_at": "2018-01-29T08:54:00Z",
        "body": "Maybe is not a good idea because we write from std out the filo so only one file, maybe a option to parse a JSON file to create a HTML report could be better."
      },
      {
        "user": "allinurl",
        "created_at": "2018-01-29T16:58:44Z",
        "body": "Hi @jabiertxof, Sorry I'm not sure I follow this. Can I ask you what would be the reason to have the json_data variable on a different file? I believe right now it's being parsed only once upon loading the document."
      },
      {
        "user": "jabiertxof",
        "created_at": "2018-01-29T23:08:48Z",
        "body": "Hi, Sorry for the noise. I can parse the JSON data without processsing logs, so don need this and is much better as it. Thanks for the fast reply.\r\n"
      },
      {
        "user": "jabiertxof",
        "created_at": "2018-01-29T23:10:49Z",
        "body": "For anyone came later, if you dont give log files goacces process again with the same data but without processing files, and you can output to JS or CSV if your original request is HTML."
      }
    ]
  },
  {
    "number": 996,
    "title": "Help with Wildfly 8 access log format",
    "created_at": "2018-01-18T22:26:28Z",
    "closed_at": "2018-01-19T12:52:41Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/996",
    "body": "Hello,\r\nI have been dancing around getting **widlfly** access logs parsing correctly.\r\nI get \"Nothing valid to process. Verify your date/time/log format.\"\r\n\r\nFormat used in generating the access log \r\n\r\n    %h %l %u %t \"%r\" %s %b %D\r\n\r\ncheers\r\n\r\n```\r\nSample logs\r\n===========\r\n127.0.0.1 - - 18/Jan/2018:00:02:32 +0100 \"GET /remita/res/app-resources/custom/css/poster.css HTTP/1.1\" 200 6626 -\r\n127.0.0.1 - - 18/Jan/2018:00:02:32 +0100 \"GET /remita/res/app-resources/custom/js/poster.js HTTP/1.1\" 200 289 -\r\n127.0.0.1 - - 18/Jan/2018:00:02:32 +0100 \"GET /remita/res/app-resources/custom/images/loading.gif HTTP/1.1\" 200 8533 -\r\n127.0.0.1 - - 18/Jan/2018:00:02:32 +0100 \"POST /remita/onepage/api/v1/payment.spa HTTP/1.1\" 200 51127 -\r\n127.0.0.1 - - 18/Jan/2018:00:02:33 +0100 \"GET /remita/res/app-resources/dest/onepage-bundle.min.css?v=1.1.12 HTTP/1.1\" 200 79956 -\r\n127.0.0.1 - - 18/Jan/2018:00:02:33 +0100 \"GET /remita/res/app-resources/dest/onepage-payment-bundle.min.js?v=1.1.12 HTTP/1.1\" 200 183220 -\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/996/comments",
    "author": "mujibishola",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-01-18T22:41:32Z",
        "body": "This should do it:\r\n\r\n    goaccess access.log --log-format='%h %^ %^ %d:%t %^ \"%r\" %s %b %^' --date-format=%d/%b/%Y --time-format=%T --ignore-panel=BROWSERS --ignore-panel=OS --ignore-panel=REFERRING_SITES"
      },
      {
        "user": "mujibishola",
        "created_at": "2018-01-19T07:13:56Z",
        "body": "That was quick.\r\nThanks a lot.Works like a charm!."
      },
      {
        "user": "allinurl",
        "created_at": "2018-01-19T12:52:41Z",
        "body": "Glad that worked! Closing this."
      }
    ]
  },
  {
    "number": 990,
    "title": "--daemonize option does not work",
    "created_at": "2018-01-12T10:54:07Z",
    "closed_at": "2018-01-12T17:33:01Z",
    "labels": [
      "question",
      "html report"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/990",
    "body": "centos:\r\n\r\nthis work: \r\n```\r\ngoaccess access.log -o /usr/local/ieternal/nH-frontend/goacces-out/website/real-time.html --real-time-html \r\n```\r\nthis do not work (--daemonize), aslo no out put:\r\n\r\n```\r\ngoaccess access.log -o /usr/local/ieternal/nH-frontend/goacces-out/website/real-time.html --real-time-html --daemonize\r\n```",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/990/comments",
    "author": "ccqgithub",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-01-12T15:15:38Z",
        "body": "Please try using full paths in every command line option. e.g.,\r\n\r\n    goaccess /var/log/nginx/access.log -o /usr/local/ieternal/nH-frontend/goacces-out/website/real-time.html --real-time-html --daemonize"
      },
      {
        "user": "ccqgithub",
        "created_at": "2018-01-12T17:33:01Z",
        "body": "it work! thanks!"
      }
    ]
  },
  {
    "number": 987,
    "title": "Need help with custom squid log ",
    "created_at": "2018-01-09T12:26:29Z",
    "closed_at": "2018-01-19T12:40:54Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/987",
    "body": "I have a setup working reading the squid log, but now i was asked to change the epoch from squid log files to human readble date and time.. so my logs now are like this\r\n\r\n    04/Jan/2018:17:41:13 -0000 - FIN 10.XXX.XX.XXX 403 PARENT_HIT 403 FIN 10.XXX.XXX.XXX 10.XXX.XX.XX 0.140\r\n\r\ncan anyone please help me. thanks in advance\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/987/comments",
    "author": "xventil",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2018-01-09T20:10:12Z",
        "body": "Were you using goaccess before with a different date/time format? The date/time format should be the default `--date-format=%d/%b/%Y` and `time-format=%T`. Though, goaccess requires the requested file part from the log."
      },
      {
        "user": "allinurl",
        "created_at": "2018-01-12T16:21:50Z",
        "body": "Any updates on this?"
      },
      {
        "user": "xventil",
        "created_at": "2018-01-19T12:40:53Z",
        "body": "Sorry for the delay on the answer...\r\nthis was what i placed on conf, and worked\r\nlog-format %x.%^ %~ %L %h %^/%s %b %m %U %^\r\nand date and time format - %s\r\n\r\ngot my boss to drop the time conversion.\r\n\r\nthank you for the help, and sorry again for the long time in replying\r\n"
      }
    ]
  },
  {
    "number": 979,
    "title": "Real time HTML output and server performance",
    "created_at": "2017-12-31T15:15:40Z",
    "closed_at": "2018-01-12T16:24:32Z",
    "labels": [
      "question",
      "documentation",
      "html report",
      "websocket-server"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/979",
    "body": "Gday,\r\n\r\nWanted to bring discussion on what are the key considerations when real time enabled?\r\n\r\nWould it consume CPU, Memory? What about the I/O? Did someone have an article or some link about GoAccess performance in its real time?\r\n\r\nMy customer brought this question to me and I stayed: hmmm great question, never thought about that.\r\n\r\nRegardless his question, I don't see a problem in real time parsing. that may be a tail -f or something like that and processing in CPU and lower memory. what are your thoughts?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/979/comments",
    "author": "imv7",
    "comments": [
      {
        "user": "Fieel",
        "created_at": "2017-12-31T15:59:00Z",
        "body": "I'm also really interested, will subscribe."
      },
      {
        "user": "allinurl",
        "created_at": "2018-01-09T20:29:50Z",
        "body": "Great question! I'd assume you are referring to the HTML live report. GoAccess will certainly make use of your CPU (100% 1 core) when parsing the log for the first time and the amount of memory consumed is relative to the size of your access log (assuming you are using the in-memory storage). \r\n\r\nIf the amount of data you are processing is larger than the amount of physical ram, you may choose to use the on-disk storage at the cost of processing speed (+ more I/O). Once it has finished the first run, then it will keep reading from the log as it's fed so CPU-wise is minimal as the parser is timed to read every second. Memory will increase as more data is parsed and stored in goaccess (again, using the in-memory storage).\r\n\r\nNow, as far as the terminal output, the memory consumption is even less since it doesn't have the overhead of the web socket server, though, the difference is almost negligible.\r\n\r\nFor real-time reports, it's best to establish some best practices such as rotating your logs and having a cron job that restarts the goaccess process every x time. I recommend using the in-memory storage for real-time reports. \r\n\r\nFor comprehensive reports, it's probably best to just output a plain HTML file (not in real-time) as your server will perform best."
      },
      {
        "user": "allinurl",
        "created_at": "2018-01-12T16:24:32Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 974,
    "title": "Trying to match pattern: Django application log pattern",
    "created_at": "2017-12-28T16:40:44Z",
    "closed_at": "2018-01-09T20:34:19Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/974",
    "body": "I have tried W3C log format for the matching below sample log and it shows the below error. I am unable to fix this now.  Any idea how to fix this - please help?\r\n\r\nLog format sample:\r\n2017-10-16 04:35:16,379 - WARNING - test - Active Directory: Failed login for user abcd\r\n\r\nError :\r\nFormat Errors - Verify your log/date/time format:\r\nToken '04:35:16,379' doesn't match specifier '%t'  \r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/974/comments",
    "author": "parthyz",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-12-29T05:40:54Z",
        "body": "GoAccess is a web log analyzer. It looks like your log is not a web log though."
      },
      {
        "user": "allinurl",
        "created_at": "2018-01-09T20:34:19Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 971,
    "title": "Multiple log files via goaccess.conf?",
    "created_at": "2017-12-26T06:10:20Z",
    "closed_at": "2018-01-09T20:36:37Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/971",
    "body": "Greetings,\r\n\r\nI'm using the Docker image under Plesk and creating containers for users that want to use it. This means no command-line access. The Apache log files are separated by protocol (`access_log` and `access_ssl_log`).\r\n\r\nHowever, in `goaccess.conf`, it appears that I can only specify one `log-file`. For my site, I chose HTTPS traffic since my entire site is HTTPS. However, it would be nice if I could configure `goaccess.conf` to process both `access_log` and `access_ssl_log` for users that have mixed.\r\n\r\nIs this possible via the config file? (again, shared hosting environment - limited or no SSH access for users).\r\n\r\nThank you,\r\nDaniel",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/971/comments",
    "author": "dmhendricks",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-12-27T06:20:04Z",
        "body": "Great question. It should let you specify multiple `log-file` variables in the configuration file. e.g.,\r\n\r\n    log-file /var/log/access.log\r\n    log-file /var/log/access_ssl.log\r\n\r\nPlease let me know if that solves the issue for you."
      },
      {
        "user": "allinurl",
        "created_at": "2018-01-09T20:36:37Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 965,
    "title": "View details of per virtual host (filtering)",
    "created_at": "2017-12-11T04:09:54Z",
    "closed_at": "2017-12-15T12:54:55Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/965",
    "body": "Hi Developers,\r\nThanks for this great application, it really helps me a lot.\r\nThere are many virtual hosting in my server. \r\nIs it possible to view the detail of one selected virtual host ?\r\nThanks.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/965/comments",
    "author": "ppc52776",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-12-11T04:17:35Z",
        "body": "Certainly, awk, grep, sed are your friends for this, e.g. (assuming your vhost is the first field),\r\n\r\n    awk '$1~/dev.domain.com/' access.log | goaccess --log-format=VCOMBINED -\r\n    "
      },
      {
        "user": "ppc52776",
        "created_at": "2017-12-15T08:06:42Z",
        "body": "Thanks a lot. :smile:"
      }
    ]
  },
  {
    "number": 954,
    "title": "Unable to open",
    "created_at": "2017-11-26T07:47:10Z",
    "closed_at": "2017-11-26T16:50:05Z",
    "labels": [
      "question",
      "html report"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/954",
    "body": "Hi,\r\nI've this issue when i try to create a report.\r\n\r\ngoaccess -f /home/websitename/logs/access_log -a -o  --log-format=COMBINED /home/websitename/htdocs/report.html --real-time-html\r\nParsing... [0] [0/s]\r\nGoAccess - version 1.2 - Oct 29 2017 18:03:51\r\nConfig file: /usr/local/etc/goaccess.conf\r\n\r\nFatal error has occurred\r\nError occured at: src/parser.c - read_log - 2669\r\nUnable to open the specified log file. No such file or directory\r\n\r\nFew lines of my log\r\nxx.xx.xx.xx - - [27/Sep/2017:11:24:52 +0200] \"GET /robots.txt HTTP/1.1\" 404 208\r\nxx.xx.xx.xx - - [27/Sep/2017:11:24:53 +0200] \"GET / HTTP/1.1\" 302 -\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/954/comments",
    "author": "ikaroweb",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-11-26T14:23:42Z",
        "body": "You need to specify the name of the output log after -o, e.g.,\r\n\r\n    goaccess /home/websitename/logs/access_log -a -o /home/websitename/htdocs/report.html --log-format=COMBINED --real-time-html"
      },
      {
        "user": "ikaroweb",
        "created_at": "2017-11-26T15:00:24Z",
        "body": "Parsed 10 lines producing the following errors:\r\n\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\nToken for '%b' specifier is NULL.\r\n\r\nFormat Errors - Verify your log/date/time format\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2017-11-26T15:55:53Z",
        "body": "Please use the common log format instead of combined.\r\n\r\n    goaccess /home/websitename/logs/access_log -a -o /home/websitename/htdocs/report.html --log-format=COMMON --real-time-html"
      },
      {
        "user": "ikaroweb",
        "created_at": "2017-11-26T16:50:05Z",
        "body": "Fine, now works thanks :)"
      }
    ]
  },
  {
    "number": 939,
    "title": "Parsing IBM WebSeal 6.1.1 logs (Tivoli Access Manager)",
    "created_at": "2017-11-08T14:10:03Z",
    "closed_at": "2017-11-09T15:34:27Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/939",
    "body": "Hi.\r\nI'm trying to parse IBM WebSeal logs without success,\r\n\r\nThe log record is in this format:\r\n    _ip_address_client_ - _username_ dd/mm/yyyy:hh:mm:ss +0200 \"_url request_\" _status_code_ _bytes_\r\n\r\nNotice that the \"-\" and \"+200\" characters in second and fifth position are fixed\r\n\r\nI've personalized the log-format parameter in this way:\r\n```\r\n%h - %e %d:%t %^ \"%r\" %s %b\r\nand --date-format=%d%b%Y\r\n```\r\n\r\nbut I get the message:\r\n\r\nParsed 10 lines producing the following errors:\r\nToken '_all my original log record_' doesn't match specifier '%h'\r\n.................\r\n.................\r\n\r\nIt would seem that all the entire log record is parsed with %h specifier, without consider every single word. \r\nWhere I am wrong?\r\nThank you.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/939/comments",
    "author": "FrankieReds",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-11-08T15:07:04Z",
        "body": "Can you please post a few lines from your access log so I can take a look? Thanks."
      },
      {
        "user": "FrankieReds",
        "created_at": "2017-11-08T15:41:40Z",
        "body": "Sure.\r\nHere are some lines:\r\n```\r\n10.54.136.177 - C012065 25/Oct/2017:14:11:04 +0200 \"POST /bpm/notification/cometd/connect HTTP/1.1\" 200 58 -\r\n10.54.32.73 - C077062 25/Oct/2017:14:11:35 +0200 \"GET /was85/autenticazione/login.jsp HTTP/1.1\" 200 8227 -\r\n77.43.29.122 - e677350e 25/Oct/2017:14:11:33 +0200 \"POST /wass/LAMPO/lampo?discaricoConfirm HTTP/1.1\" 200 10013 -\r\n```\r\n\r\nThanks."
      },
      {
        "user": "allinurl",
        "created_at": "2017-11-08T16:51:49Z",
        "body": "This should do it:\r\n\r\n    goaccess access.log --log-format='%h %^ %v %d:%t %^ \"%r\" %s %b %^' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "FrankieReds",
        "created_at": "2017-11-09T09:13:23Z",
        "body": "Yes, this works fine!\r\nThank you for your support. \r\nBest regards."
      }
    ]
  },
  {
    "number": 937,
    "title": "Trying to match pattern on custom web server log (syslog)",
    "created_at": "2017-11-08T08:22:04Z",
    "closed_at": "2018-01-27T02:46:03Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/937",
    "body": "Hello, I've been trying to match the pattern without success.\r\n\r\nsample from my syslog:\r\n\r\n```\r\nNov  3 00:02:37 cd-msite-central1-201705121615-4xql cd_msite: [03/Nov/2017:00:02:37 +0000] viejo-m.segundamano.mx (130.211.3.134) \"GET / HTTP/1.1\" (403) 321 \"-\" \"GoogleHC/1.0\" \"130.211.3.134\" Upstream(10.68.0.65:80 0.145 321)\r\n```\r\n\r\nmy log format in nginx:\r\n\r\n```\r\n[$time_local] $server_name ($client_ip) \"$request\" ($status) $body_bytes_sent \"$http_referer\" \"$http_user_agent\" \"$client_forwarded\" Upstream($upstream_addr $upstream_response_time $upstream_response_length)\r\n```\r\n\r\nThanks a lot in advance.\r\nMohamed.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/937/comments",
    "author": "MohamedAlaa",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-11-08T12:46:23Z",
        "body": "This should do it:\r\n\r\n    goaccess access.log --log-format='%^[%d:%t %^] %v (%h) \"%r\" (%s) %b \"%R\" \"%u\" %^ %^ %T %^' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "MohamedAlaa",
        "created_at": "2017-11-09T05:52:55Z",
        "body": "Thanks a lot @allinurl for your quick reply. but I'm getting an error:\r\n\r\n```\r\ngoaccess: unrecognized option `--refox/50.0\"'\r\n```"
      },
      {
        "user": "allinurl",
        "created_at": "2017-11-09T15:37:44Z",
        "body": "Did you copy the exact command as above. It seems you added something else as well to the command line and thus that message. Perhaps `Firefox/50.0`?"
      },
      {
        "user": "allinurl",
        "created_at": "2018-01-27T02:46:03Z",
        "body": "Closing this. Feel free to reopen it as needed."
      }
    ]
  },
  {
    "number": 922,
    "title": "Journald support",
    "created_at": "2017-10-25T15:21:06Z",
    "closed_at": "2017-11-07T02:44:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/922",
    "body": "Journald is becoming popular and requires journalctl to extract and parse logs instead of reading files on disk. Goaccess could fetch logs from it.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/922/comments",
    "author": "FedericoCeratto",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-10-30T02:16:08Z",
        "body": "Are these web server requests? Could you please post a some lines from your journalctl that you would like goaccess to parse? "
      },
      {
        "user": "allinurl",
        "created_at": "2017-11-03T13:52:26Z",
        "body": "@FedericoCeratto Any notes on this? Thanks"
      },
      {
        "user": "FedericoCeratto",
        "created_at": "2017-11-03T15:56:37Z",
        "body": "journald can contain logs from webservers. Some examples:\r\n\r\nnginx conf: `access_log syslog:server=unix:/dev/log;`\r\n\r\n```\r\njournalctl -u nginx.service --since today\r\njournalctl -u nginx.service --since today -o json\r\n```\r\nThere's a handful of -o flags for journalctl\r\n\r\nExample output:\r\n```\r\nmyhost nginx: 192.30.xxx.xx - - [03/Nov/2017:15:54:59 +0000] \"GET /badges/debian/testing/neovim/version.svg HTTP/1.1\" 200 933 \"-\" \"github-camo (bacd3d5b)\"\r\n```"
      },
      {
        "user": "allinurl",
        "created_at": "2017-11-03T16:03:51Z",
        "body": "Wouldn't this work?\r\n\r\n    journalctl -u nginx.service --since today | goaccess ..."
      },
      {
        "user": "allinurl",
        "created_at": "2017-11-07T02:44:15Z",
        "body": "Assuming `journalctl -u nginx.service --since today` simply outputs web server requests, then it should be totally doable to pipe the output into goaccess and configure the log-format accordingly. Closing this, feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 915,
    "title": "cloudfront x-edge-location not present in report",
    "created_at": "2017-10-13T15:39:22Z",
    "closed_at": "2017-10-16T11:46:57Z",
    "labels": [
      "question",
      "add"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/915",
    "body": "When using cloudfront logs type it would be great to have statistics on x-edge-location\r\nI do not see this value in any report (html, csv or json)",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/915/comments",
    "author": "jfc-evs",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-10-14T01:27:11Z",
        "body": "Are you looking to have a dedicated panel that displays this metric? or should this metric be part of an existing panel? \r\n\r\nBTW, a quick workaround and if you are not using the virtualhost panel, you can simply use %v to display the x-edge-location."
      },
      {
        "user": "jfc-evs",
        "created_at": "2017-10-16T11:40:32Z",
        "body": "`%v` is ok, I changed goaccess.conf using :\r\n\r\nAWS | Amazon CloudFront (Download Distribution)\r\n\r\n    log-format %d\\t%t\\t%v\\t%b\\t%h\\t%m\\t%^\\t%r\\t%s\\t%R\\t%u\\t%^\r\n\r\nvirtual host panel display the info \r\n\r\nI also see it in my scv, everything is ok !\r\n\r\nThanks 👍 \r\n"
      }
    ]
  },
  {
    "number": 906,
    "title": "Custom log format and GoAccess",
    "created_at": "2017-09-29T17:14:10Z",
    "closed_at": "2017-09-29T18:09:08Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/906",
    "body": "Hello,\r\nI am on this since many hours and i don't understand at all.\r\nI have read many issue in the repository to help me but cannot find any way.\r\n\r\n**Here is a log example :** \r\n\r\n```\r\n165.225.76.111 - https - www.mysite.com - - [2017-09-01T06:27:36+02:00] \"POST /pro/sync?version=5&group_id=75716&code_version=17.1.0&guid_pro=b05318735deb3436af14af1ce55d49d479b8e19a HTTP/1.1\" 200 365 Time Taken 0.013\r\n81.134.4.185 - https - www.mysite.com - - [2017-09-01T06:27:36+02:00] \"POST /pro/sync?version=5&group_id=95649&code_version=17.1.0&guid_pro=5bf2c2c708b868e4ee5d93970f9e5b78d721c1ff HTTP/1.1\" 200 365 Time Taken 0.014\r\n165.225.76.125 - https - www.mysite.com - - [2017-09-01T06:27:37+02:00] \"POST /pro/sync?version=5&group_id=75480&code_version=17.1.0&guid_pro=6dafd16e1ad4bef5bdae6f9497ee1c303f502c71 HTTP/1.1\" 200 365 Time Taken 0.013\r\n213.56.81.46 - https - www.mysite.com - - [2017-09-01T06:27:37+02:00] \"POST /pro/sync?version=5&group_id=85875&code_version=17.1.0&guid_pro=a8f06901108f8e2b6aa575529076c67e7820b7c6 HTTP/1.1\" 200 365 Time Taken 0.013\r\n62.23.147.136 - https - www.mysite.com - - [2017-09-01T06:27:37+02:00] \"POST /pro/sync?version=5&group_id=41659&code_version=17.1.0&guid_pro=b64387e855525e95a8b1d2337444448bf42a358c HTTP/1.1\" 200 365 Time Taken 0.014\r\n62.23.147.136 - https - www.mysite.com - - [2017-09-01T06:27:38+02:00] \"POST /pro/sync?version=5&group_id=85459&code_version=17.1.0&guid_pro=5f65e4f96ed6530c09656cd0afc4aff4a8dd0427 HTTP/1.1\" 200 365 Time Taken 0.012\r\n\r\n```\r\n**Here is my config :** \r\n\r\n```\r\ntime-format %H:%M:%S%^\r\ndate-format %Y-%m-%d\r\nlog-format %h - %^ - %v - %^ - [%dT%t] \\\"%r\\\" %s %b Time Taken %T\r\n```\r\n\r\n**Bug :**\r\n\r\n```\r\nParsed 10 lines producing the following errors:\r\n\r\nToken '06:27:30+02:00' doesn't match specifier '%t'\r\nToken '06:27:30+02:00' doesn't match specifier '%t'\r\nToken '06:27:31+02:00' doesn't match specifier '%t'                                                                                                                                                                                                        Token '06:27:31+02:00' doesn't match specifier '%t'\r\nToken '06:27:31+02:00' doesn't match specifier '%t'\r\nToken '06:27:31+02:00' doesn't match specifier '%t'\r\nToken '06:27:31+02:00' doesn't match specifier '%t'                                                                                                                                                                      Token '06:27:32+02:00' doesn't match specifier '%t'                                                                                                                                                                                                                         Token '06:27:32+02:00' doesn't match specifier '%t'\r\nToken '06:27:32+02:00' doesn't match specifier '%t'\r\nFormat Errors - Verify your log/date/time format\r\n```\r\n\r\n\r\nIt works if i use : log-format %h - %^ - %v - %^ - [%dT%^] \\\"%r\\\" %s %b Time Taken %T\r\n\r\nBut i don't have the time distribution and really need it, i am analysing a server crash.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/906/comments",
    "author": "mikrob",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-09-29T17:20:40Z",
        "body": "This should do it:\r\n\r\n    goaccess access.log --log-format='%h %^ %^ %v %^[%dT%t+%^] \"%r\" %s %b %^ %^ %T' --date-format='%Y-%m-%d' --time-format=%T --ignore-panel=OS --ignore-panel=BROWSERS --ignore-panel=REFERERS --ignore-panel=REFERRING_SITES"
      },
      {
        "user": "mikrob",
        "created_at": "2017-09-29T17:36:23Z",
        "body": "You are my hero today :)"
      }
    ]
  },
  {
    "number": 892,
    "title": "Token 'HTTPS' doesn't match specifier '%H'",
    "created_at": "2017-09-21T09:03:53Z",
    "closed_at": "2017-09-22T02:06:02Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/892",
    "body": "``` \r\n20170920145951 112.4.154.81 xfzdl2.haowanyou.com /PalaceM2_cn_cn/S180049901/HttpRoot/1.2.6/0_23.pkg?17082918 2177457 120 1046 206 NULL 60003 \"NULL\" \"36992816-\" GET HTTPS hit\r\n ```\r\n\r\n```\r\ngoaccess -f 1.txt --log-format='%x %h %v %U %b %^ %^ %s %R %L \"%u\" %^ %m %H %^' --date-format=%Y%m%d%H%M%S --time-format=%Y%m%d%H%M%S -d -a > test.html\r\n```\r\n\r\nToken 'HTTPS' doesn't match specifier '%H'\r\n\r\nPls help me\r\n\r\nGoAccess - 1.2      ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/892/comments",
    "author": "hulao6",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-09-21T19:27:57Z",
        "body": "Close, however, HTTPS is not a valid protocol, this should do it:\r\n\r\n    goaccess access.log --log-format='%x %h %v %U %b %^ %^ %s %R %L \"%u\" %^ %m %^' --date-format=%Y%m%d%H%M%S --time-format=%Y%m%d%H%M%S --http-protocol=no"
      },
      {
        "user": "hulao6",
        "created_at": "2017-09-22T02:06:02Z",
        "body": "TKS"
      }
    ]
  },
  {
    "number": 888,
    "title": "Custom nginx log-format and GoAccess",
    "created_at": "2017-09-20T13:19:54Z",
    "closed_at": "2017-09-21T13:45:54Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/888",
    "body": "    log_format main\r\n              '$time_iso8601|$http_x_forwarded_for|$http_host|$request|'\r\n               '$status|$request_time|$body_bytes_sent|$http_referer|'\r\n               '$upstream_addr|$upstream_response_time'\r\n\r\nlog sample\r\n\r\n    2017-09-19T00:00:04+08:00|192.168.0.9|192.168.0.85:8080|GET /UserSystem/ParkingLeaseInformation/v1_2/getParkingLeaseInformationBylicensePlateNumber.do?licensePlateNumber=%E4%BA%ACNE68N8&leaseParkId=476901 HTTP/1.0|200|0.026|686|-|192.168.0.141:8080|0.024\r\n\r\nthank you\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/888/comments",
    "author": "jingting969",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-09-20T13:51:48Z",
        "body": "I see you have `$http_x_forwarded_for` in your second field, how are your IPs delimited on that field?"
      },
      {
        "user": "jingting969",
        "created_at": "2017-09-21T01:43:22Z",
        "body": "This IP is real client IP, who call the api. Only one for `$http_x_forwarded_for`.\r\n\r\n```\r\n2017-09-19T18:13:24+08:00|192.168.0.21|192.168.0.85:8080|POST /UserSystem/UserPlate/v2/queryUserByUserPlate.do HTTP/1.0|200|0.012|35|-|192.168.0.140:8080|0.010\r\n\r\n2017-09-19T18:13:24+08:00|192.168.0.100|192.168.0.85:8080|POST /BackgroundAppExtend/parkingLocation/V1_1/updateParkEmpty.do HTTP/1.0|200|0.004|71|-|192.168.0.11:8080|0.002\r\n\r\n2017-09-19T18:13:24+08:00|192.168.0.101|192.168.0.85:8080|POST /carPark_old/gdExportRecognize/saveGdExportRecognize.shtml HTTP/1.0|200|0.027|177|-|192.168.0.100:8080|0.025\r\n\r\n2017-09-19T18:13:24+08:00|192.168.0.21|192.168.0.85:8080|POST /UserSystem/UserPlate/v2/queryUserByUserPlate.do HTTP/1.0|200|0.009|35|-|192.168.0.141:8080|0.007\r\n```\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2017-09-21T03:21:16Z",
        "body": "Assuming there's only one IP for that field, this should do it:\r\n\r\n    goaccess access.log --log-format=\"%dT%t+%^|%h|%v|%r|%s|%T|%b|%R|%^\" --date-format=W3C --time-format=%T --ignore-panel=OS --ignore-panel=BROWSERS"
      },
      {
        "user": "jingting969",
        "created_at": "2017-09-21T05:53:06Z",
        "body": "O le, thank you!\r\n\r\nfrom China"
      }
    ]
  },
  {
    "number": 885,
    "title": "Custom Nginx LogFormat and GoAccess",
    "created_at": "2017-09-18T19:51:55Z",
    "closed_at": "2017-09-18T21:31:01Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/885",
    "body": "Hello, i have nginx log file:\r\n\r\n```\r\n'$remote_addr - $remote_user [$time_local] '\r\n'\"$request\" $status $bytes_sent \"$http_referer\" '\r\n'\"$http_user_agent\" \"$uid_got\" \"$uid_set\" $msec '\r\n'adfr=\"$cookie_adfr\" '\r\n'dv=\"$cookie_dv\" dvr=\"$cookie_dvr\" '\r\n'lv=\"$cookie_lv\" lvr=\"$cookie_lvr\" '\r\n'rt=$request_time ut=\"$upstream_response_time\" '\r\n'cs=$upstream_cache_status ua=\"$upstream_addr\" us=\"$upstream_status\"'\r\n```\r\n\r\nLogging example:\r\n\r\n```\r\n10.41.32.104 - - [18/Sep/2017:00:00:02 +0300] \"GET /breaking/current/?project_id=1 HTTP/1.1\" 200 206 \"-\" \"python-requests/2.13.0\" \"-\" \"-\" 1505682002.098 adfr=\"-\" dv=\"-\" dvr=\"-\" lv=\"-\" lvr=\"-\" rt=0.000 ut=\"-\" cs=HIT ua=\"-\" us=\"-\"\r\n10.16.32.116 - - [18/Sep/2017:00:00:02 +0300] \"GET /clusters/info?rubricator_id=1&ids=37189260 HTTP/1.1\" 200 2961 \"-\" \"python-requests/2.13.0\" \"-\" \"-\" 1505682002.133 adfr=\"-\" dv=\"-\" dvr=\"-\" lv=\"-\" lvr=\"-\" rt=0.151 ut=\"0.151\" cs=MISS ua=\"10.16.20.25:8084\" us=\"200\"\r\n```\r\n\r\nGoaccess config:\r\n\r\n```\r\nlog-format %h %^ - [%d:%t] \"%r\" %s %b %^ \"%u\" %^ %^ %^ %^ %^ %^ %^ %^ %T\r\ndate-format %d/%b/%Y\r\ntime-format %H:%M:%S %z\r\n```\r\n\r\nHow I can get `$response_time` in html result? I get Constantly 0.00",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/885/comments",
    "author": "ikrivosheev",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-09-18T19:57:23Z",
        "body": "This should do it:\r\n\r\n    goaccess access.log --log-format='%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %^ %^ %^ %^ %^ %^ %^ %^ %^=%T %^' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "ikrivosheev",
        "created_at": "2017-09-18T21:31:01Z",
        "body": "It works! Excellent! Thank you."
      }
    ]
  },
  {
    "number": 876,
    "title": "Custom log format for Nginx and GoAccess",
    "created_at": "2017-09-05T06:02:57Z",
    "closed_at": "2017-09-10T02:04:54Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/876",
    "body": "hi ,\r\n\r\ni got this error below when i generate to .html is there any configuration that i missed on goaccess.conf  ? \r\n\r\n```\r\nToken '[05/Sep/2017:06:25:05' doesn't match specifier '%h'\r\nToken '[05/Sep/2017:06:25:20' doesn't match specifier '%h'\r\nToken '[05/Sep/2017:06:25:21' doesn't match specifier '%h' \r\n```\r\n\r\n\r\nhere's my custom logs : \r\n\r\n    log_format upstreamlog '[$time_local] $remote_addr - $remote_user - $server_name to: $upstream_addr: $request upstream_response_time $upstream_response_time msec $msec request_time $request_time';",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/876/comments",
    "author": "buluxan",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-09-05T11:50:38Z",
        "body": "Please post a few lines from your access log."
      },
      {
        "user": "allinurl",
        "created_at": "2017-09-10T02:04:54Z",
        "body": "Closing this. Feel free to reopen it if you are still having this issue along with a few lines from your access log."
      },
      {
        "user": "anamika-m",
        "created_at": "2018-02-16T05:38:07Z",
        "body": "Sep  9 06:39:01 thunder CRON[16142]: pam_unix(cron:session): session opened for user root by (uid=0)\r\n\r\nPlease provide log,date and time format"
      },
      {
        "user": "allinurl",
        "created_at": "2018-02-16T12:50:18Z",
        "body": "@anamika-m please note that goaccess is a web log (access.log) analyzer, so you won't be able to parse that string."
      },
      {
        "user": "anamika-m",
        "created_at": "2018-03-02T05:39:49Z",
        "body": "Mar  1 06:30:58 gw kernel: [782740.844689] FORWARD-New-Connection: IN=eth1 OUT=eth1 MAC=2c:41:38:88:45:35:d4:85:64:16:54:62:08:00 SRC=172.16.0.30 DST=172.17.13.114 LEN=60 TOS=0x00 PREC=0x00 TTL=254 ID=1646 PROTO=ICMP TYPE=8 CODE=0 ID=5 SEQ=6250 \r\n\r\nPlease provide log,date and time format\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2018-03-05T15:38:47Z",
        "body": "@anamika-m Try this, it should work:\r\n\r\n    goaccess your.log --log-format='%d %t %^ %v: %^ %U: %^ %^ %^ %^=%h %R %^=%b %^ %^ %^=%L %^' --date-format='%b %e' --time-format=%T --ignore-panel=BROWSERS --ignore-panel=OS --ignore-panel=STATUS_CODES --ignore-panel=REFERRING_SITES --ignore-panel=REQUESTS_STATIC --ignore-panel=NOT_FOUND --http-method=no --http-protocol=no"
      }
    ]
  },
  {
    "number": 875,
    "title": "How can I see request url per time?",
    "created_at": "2017-09-05T02:50:00Z",
    "closed_at": "2017-09-10T02:05:43Z",
    "labels": [
      "question",
      "html report",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/875",
    "body": "I'm new to goaccess.\r\nI have some apache server logs. And I've generated report.html file with the following command.\r\n```\r\n$ goaccess https_access.log.2017-08-29-15_25_20 -a > report.html\r\n```\r\nAnd I saw the report.html on chrome. But I did find 'request url per time'.\r\nDo not support this feature which is request url per time?\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/875/comments",
    "author": "greenfrog82",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-09-05T02:54:10Z",
        "body": "Are you looking to display the time taken to process a request? If you do you probably want to use `%D` in your log format, else feel free to post a few lines from your access log and the log-format you are using and I can take a look."
      },
      {
        "user": "greenfrog82",
        "created_at": "2017-09-05T08:43:03Z",
        "body": "Thank u for ur comment.\r\nI've found that option about %D of apache log-format few minutes ago.\r\nBut I can't check it after applied log %D.\r\nI will comment after check it out ASAP. \r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2017-09-10T02:05:43Z",
        "body": "Closing this. Feel free to reopen it if needed."
      },
      {
        "user": "abdulmutal",
        "created_at": "2020-01-23T05:30:04Z",
        "body": "how to get the request time per url in goaccess\r\nits show avg. time and cum. time according to no. of hits or visitor"
      },
      {
        "user": "allinurl",
        "created_at": "2020-01-24T17:18:43Z",
        "body": "@abdulmutal You would need to log that from your web server. For apache you would use `%D`."
      },
      {
        "user": "abdulmutal",
        "created_at": "2020-02-26T05:37:38Z",
        "body": "Thanks for your Response"
      }
    ]
  },
  {
    "number": 870,
    "title": "static files with paremeters should not be in the \"requested files\"",
    "created_at": "2017-08-28T11:15:10Z",
    "closed_at": "2017-08-30T13:35:51Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/870",
    "body": "```\r\n> goaccess --version\r\nGoAccess - 1.2.\r\n```\r\n```\r\n> lsb_release -a                                                                                                           \r\nNo LSB modules are available.\r\nDistributor ID:\tUbuntu\r\nDescription:\tUbuntu 16.04.3 LTS\r\nRelease:\t16.04\r\nCodename:\txenial\r\n```\r\n\r\nfor example, from my site's recent log, I got:\r\n\r\n```\r\n   2 - Requested Files (URLs)                                                                                                                                                               Total: 366/630\r\n\r\n Hits    h% Vis.    v%   Bandwidth Mtd  Proto    Data\r\n ---- ----- ---- ----- ----------- ---- -------- ----\r\n 316  8.86%   11 0.39%     0.0   B HEAD HTTP/1.1 /\r\n 147  4.12%   80 2.81%    1.33 MiB GET  HTTP/1.1 /\r\n 112  3.14%   30 1.05%  339.14 KiB GET  HTTP/1.1 /feed\r\n 64   1.80%   33 1.16%  245.41 KiB GET  HTTP/1.1 /wp-login.php\r\n 63   1.77%   61 2.14%   35.56 KiB GET  HTTP/1.1 /wp-includes/js/comment-reply.min.js?ver=4.8.1\r\n 61   1.71%   59 2.07%   37.18 KiB GET  HTTP/1.1 /wp-content/themes/twentytwelve/js/navigation.js?ver=20140711\r\n 61   1.71%   59 2.07%   43.09 KiB GET  HTTP/1.1 /wp-includes/js/wp-embed.min.js?ver=4.8.1\r\n```\r\n\r\nThose files like `xxx.js?ver=x.y.z` should not be recognized as requested files, they are actually static files too.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/870/comments",
    "author": "chrisyue",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-08-28T12:10:29Z",
        "body": "Please  use `--all-static-files`"
      },
      {
        "user": "chrisyue",
        "created_at": "2017-08-29T02:49:51Z",
        "body": "@allinurl thanks for the reply, the `--all-static-files` solves the problem.\r\n\r\nhowever, I notice that there is some font files are still recognized as \"requested files\"\r\n\r\n```\r\n > 2 - Requested Files (URLs) \r\n...\r\n 6     1.65%    6 2.64%   11.65 KiB GET  HTTP/1.1 /wp-content/plugins/hermit/assets/fonts/hermiticon.eot?\r\n```"
      },
      {
        "user": "allinurl",
        "created_at": "2017-08-29T17:06:25Z",
        "body": "Please use:\r\n\r\n    goaccess access.log --all-static-files --static-file=.eot\r\n\r\nor uncomment your static extensions from your config file.\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2017-08-30T13:35:51Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 864,
    "title": "Why goaccess need on-disk B+tree database?",
    "created_at": "2017-08-11T09:04:12Z",
    "closed_at": "2017-08-15T01:30:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/864",
    "body": "Seems this on-disk database is useless, is that right?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/864/comments",
    "author": "MM629",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-08-11T13:50:39Z",
        "body": "If you can fit your dataset in memory, then you're golden, no need for on-disk db."
      },
      {
        "user": "BarbzYHOOL",
        "created_at": "2017-08-14T18:47:16Z",
        "body": "To save ram I guess."
      },
      {
        "user": "allinurl",
        "created_at": "2017-08-15T01:30:18Z",
        "body": "Closing this. Feel free to reopen it if needed."
      },
      {
        "user": "MM629",
        "created_at": "2017-08-15T07:25:27Z",
        "body": "Yes. I got it. \r\nBut the problem is how can I apply some filter to on-disk database ? Like I just want to see the requests from a exactly ip address or a given time range."
      },
      {
        "user": "allinurl",
        "created_at": "2017-08-15T13:40:56Z",
        "body": "A filtering tool would be your friend here, e.g.,\r\n\r\n    grep `date +\"%d/%b\"` /var/log/apache2/access.log | grep '192.168.0.1' | goaccess --log-format=COMBINED\r\n\r\n#117 would do this without the need of these filtering tools."
      },
      {
        "user": "MM629",
        "created_at": "2017-08-16T08:52:35Z",
        "body": "That's why I ask this question. Cuz in my thought goaccess should be support many kinds of filter on on-disk database. That would be nice for non-IT guys 👍 :)\r\n\r\nThank You Boss."
      }
    ]
  },
  {
    "number": 849,
    "title": "Can't create log-format for IIS logs",
    "created_at": "2017-07-21T10:35:43Z",
    "closed_at": "2017-07-21T12:21:55Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/849",
    "body": "I cannot create log-format for IIS logs:\r\n\r\n```\r\n2017-07-18 00:09:01 172.18.40.65 GET /healthcheck.html - 443 - 172.18.1.11 ELB-HealthChecker/2.0 - 200 0 0 0\r\n2017-07-18 00:09:07 172.18.40.65 GET /healthcheck.html - 443 - 172.18.5.124 ELB-HealthChecker/2.0 - 200 0 0 1\r\n2017-07-18 00:09:32 172.18.40.65 GET /healthcheck.html - 443 - 172.18.1.11 ELB-HealthChecker/2.0 - 200 0 0 0\r\n```\r\n\r\nI've tried to find any solutions for that, but all of the options, whose I found, isn't help.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/849/comments",
    "author": "veniaminshi",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-07-21T11:48:39Z",
        "body": "Can you please describe each of the fields? Thanks."
      },
      {
        "user": "veniaminshi",
        "created_at": "2017-07-21T12:08:49Z",
        "body": "DATE - TIME - IP of machine with IIS - HTTP method - site page (like /allinurl/goaccess/issues/849) - PORT - IP of machine from where request was arrived - browser or program from where request was arrived - HTTP status - substatus - win32-status"
      },
      {
        "user": "allinurl",
        "created_at": "2017-07-21T12:15:09Z",
        "body": "Please try:\r\n\r\n    goaccess access.log --log-format='%d %t %^ %m %U %^ %^ %^ %h %u %^ %s %^' --date-format=%Y-%m-%d --time-format=%T --http-protocol=no"
      },
      {
        "user": "veniaminshi",
        "created_at": "2017-07-21T12:21:55Z",
        "body": "it works, thanks"
      }
    ]
  },
  {
    "number": 839,
    "title": "Specifying target log file does not prevent loading of file specified in configuration",
    "created_at": "2017-07-13T21:27:04Z",
    "closed_at": "2017-07-15T19:17:18Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/839",
    "body": "Running goaccess 1.2:\r\n\r\nI have a massive access log (28GiB) configured in the goaccess configuration file, but want to analyze a subsection of this file exported to disk via `goaccess -f`.\r\n\r\nCalling `goaccess -f /tmp/somelog` either loads `/tmp/somelog` in addition to the file specified in the goaccess config or else loads only the path specified in the goaccess config (it is hard to tell without waiting for it to load the 28GiB).\r\n\r\nIn all cases, calling `goaccess --no-global-config -f /tmp/somelog` works, but of course, I lose all configuration settings (not just the path to the log).",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/839/comments",
    "author": "mqudsi",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-07-13T21:38:37Z",
        "body": "You can copy the global config file, remove the log input from there and use the new config with `-p`, e.g.,\r\n\r\n    goaccess /tmp/somelog -p goaccess.bkp.conf"
      },
      {
        "user": "allinurl",
        "created_at": "2017-07-15T19:17:18Z",
        "body": "Closing this since currently it's possible to use a secondary config file. Feel free to reopen it if needed."
      },
      {
        "user": "mqudsi",
        "created_at": "2017-07-17T17:07:12Z",
        "body": "Thanks for responding.\r\n\r\nWould you be open to a PR that disabled the access log parameter of the config file if `-f` was supplied? Logically (and consistent with most other apps) command line arguments override configuration file parameters."
      },
      {
        "user": "allinurl",
        "created_at": "2017-07-17T17:52:26Z",
        "body": "I'll certainly welcome the PR :)"
      }
    ]
  },
  {
    "number": 822,
    "title": "Requests are reducing over time",
    "created_at": "2017-06-28T12:44:33Z",
    "closed_at": "2017-06-28T16:50:25Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/822",
    "body": "Question:\r\nI am using goAccess for a production site I have live for some months now.\r\nFurthermore, I have a script that parses the log files and uploads the html report.\r\nInitially everything was working great. On my last report update, I noticed that the requests are actually less for a longer amount of time.\r\n\r\nGiven that:\r\n1. logs are generated by the apache in an excellent production server from a big enterprise\r\n2. I actually parsed them one by one and the sum is the same small number\r\n3. nothing changed in my script\r\n\r\nCould you think of a reason why this happens?\r\n\r\nMy script for parsing logs:\r\n```bash\r\nssh <username>@server zcat $APP_PATH'access.http.log.*.gz' >> file.log\r\nssh <username>@server zcat $APP_PATH'access.https.log.*.gz' >> file.log\r\n\r\nssh <username>@server 'cat '$APP_PATH'access.http.log' >> file.log\r\nssh <username>@server 'cat '$APP_PATH'access.http.log.1' >> file.log\r\nssh <username>@server 'cat '$APP_PATH'access.https.log' >> file.log\r\nssh <username>@server 'cat '$APP_PATH'access.https.log.1' >> file.log\r\n\r\ngoaccess file.log -o /var/www/ngcc_report.html\r\n```\r\nLogs:\r\n```bash\r\n $ls -1\r\naccess.http.log\r\naccess.http.log.1\r\naccess.http.log.2.gz\r\naccess.http.log.3.gz\r\naccess.http.log.4.gz\r\naccess.http.log.5.gz\r\naccess.https.log\r\naccess.https.log.1\r\naccess.https.log.2.gz\r\naccess.https.log.3.gz\r\naccess.https.log.4.gz\r\naccess.https.log.5.gz\r\naccess.https.log.6.gz\r\n# + error logs\r\n```\r\nStats:\r\nFirst 3 months: ~45000 total requests\r\nLast update (first 3 months + 2 more): ~23000 total requests",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/822/comments",
    "author": "stavros-liaskos",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-06-28T14:44:27Z",
        "body": "I'm not sure I follow, do you mean that the number of requests shown in goaccess is decreasing after parsing the concatenated file (file.log)? \r\n\r\nWhich storage are you using (`goaccess -s`)? Also can you please verify that the number of requests in your file.log matches the number of requests displayed in goaccess, e.g., `wc -l file.log`? Thanks."
      },
      {
        "user": "stavros-liaskos",
        "created_at": "2017-06-28T16:50:25Z",
        "body": "You can ignore this. GoAccess was right. Also Awstats.\r\nIt was strange but I got 1/3 of the total visits in 1/15 of the total time the site was up. \r\nApache deleted the logs for these first days so the total requests drop significantly."
      }
    ]
  },
  {
    "number": 812,
    "title": "Incorrect time on Real-Time HTML Report",
    "created_at": "2017-06-16T18:16:25Z",
    "closed_at": "2017-06-16T20:26:35Z",
    "labels": [
      "question",
      "html report"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/812",
    "body": "The real-time HTML stats show the time as Last Updated: 2017-06-16 17:34:33 +0000.\r\n\r\nOn Centos 7 when I run \"timedatectl\" it shows:\r\n\r\nLocal time: Fri 2017-06-16 13:12:46 CDT\r\nUniversal time: Fri 2017-06-16 18:12:46 UTC\r\nRTC time: Fri 2017-06-16 13:12:46\r\nTime zone: America/Chicago (CDT, -0500)\r\nNTP enabled: yes\r\nNTP synchronized: yes\r\nRTC in local TZ: yes\r\nDST active: yes\r\n\r\nHow do I correct the Time Zone for GoAccess? \r\n\r\nThanks for all your help..",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/812/comments",
    "author": "jcfromkc",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-06-16T18:26:13Z",
        "body": "The time displayed in your report is the localtime of your machine. What's the output of `date`?"
      },
      {
        "user": "jcfromkc",
        "created_at": "2017-06-16T18:39:17Z",
        "body": "Fri Jun 16 13:39:04 CDT 2017"
      },
      {
        "user": "jcfromkc",
        "created_at": "2017-06-16T20:25:39Z",
        "body": "Please close. A server reboot fixed this issue. "
      }
    ]
  },
  {
    "number": 806,
    "title": "Log format matching problem",
    "created_at": "2017-06-13T09:54:14Z",
    "closed_at": "2017-06-14T01:28:57Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/806",
    "body": "```\r\n20170608130017 222.94.248.183 xfzdl2.haowanyou.com /PalaceM2_cn_cn/S180039901/HttpRoot/1.2.2/31.pkg?17060807 236388 120 2 206 NULL 54 \"NULL\" \"0-\" GET HTTP/1.1 hit\r\n20170608130157 \t117.169.78.10 xfzdl2.haowanyou.com /PalaceM2_cn_cn/S180049901/HttpRoot/1.2.6/2.pkg?17060807 770998 1465 1046 206 NULL 75 \"NULL\" \"0-\" GET HTTP/1.1 hit\r\n```\r\n\r\n`goaccess -f qcloudcdn.log --log-format='%d%t %h %v %U %b %~ %~ %s %R %T \"%u\" \"%~\" %H %~' --date-format='%Y%m%d' --time-format='%H%M%S' -d -a > test.html`\r\n\r\n\r\n**I use this order to analyze the generated html, no content, please help to see if it is wrong, Tks**\r\n\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/806/comments",
    "author": "hulao6",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-06-13T12:15:05Z",
        "body": "This should do it:\r\n\r\n    goaccess access.log --log-format='%x %h %v %U %b %^ %^ %s %R %L \"%u\" %^ %m %H %^' --date-format=%Y%m%d%H%M%S --time-format=%Y%m%d%H%M%S"
      },
      {
        "user": "hulao6",
        "created_at": "2017-06-14T01:28:53Z",
        "body": "**The problem has been resolved, thank you very much for your reply, TKS** "
      }
    ]
  },
  {
    "number": 803,
    "title": "Unique visitors count much greater than Google Analytics",
    "created_at": "2017-06-12T07:47:35Z",
    "closed_at": "2017-06-16T13:38:50Z",
    "labels": [
      "question",
      "documentation"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/803",
    "body": "Hello,\r\n\r\nI am confused with the results given by goaccess versus other analytics tools. As much as I understand that client-side analytics tools are somewhat unreliable, the difference in terms of result my website experiences seems unbelievably huge.\r\n\r\nExample:\r\nPiwik, today (last 16 hours): 12,427 visits\r\nGo access last 16 hours (result of `sed -n '/'$(date '+%d\\/%b\\/%Y' -d '16 hours ago')'/,$ p' /var/log/virtualmin/domain.com_access_log | goaccess -o /home/user/public_html/goaccess/monitor.html --real-time-html --ignore-crawlers`): 51,567 unique visitors\r\n\r\nBy comparison, Piwik and google analytics are very close. My user base does not typically use adblock or other script blockers.\r\n\r\nCould you help me figure out what could be happening here?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/803/comments",
    "author": "froger-me",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-06-12T14:28:10Z",
        "body": "Great question and somehow difficult to answer without having access to the logs. \r\n\r\nHowever, recently a similar question was asked (**#789**), and as I mentioned over there, Google Analytics counts unique visitors differently from goaccess and my assumption must be the same for Piwik. \r\n\r\nSince both of them use cookies to track a visitor, then it's possible that the same user could visit your website using different IPs while the cookie still living in their browser (same laptop, different locations) — That could be one of the things you are experiencing. \r\n\r\nOn the other hand, GoAccess considers requests containing the same IP, same date (e.g., `12/Jun/2017`), and the same user agent a unique visitor. This is due to the nature of GoAccess attempting to get an accurate picture of what's happening at the server level as opposed to a marketing level of your website.\r\n\r\nI'd suggest taking a small data set from your access log, e.g., 50-100 lines and then parsing it with goaccess. Take a look at the unique visitors count and see if it matches what you expect by looking at the log entries manually.\r\n\r\nNow if you can run the same data set in any of the other tools (probably not possible with Google Analytics), then you may get an idea on how the numbers differ."
      },
      {
        "user": "allinurl",
        "created_at": "2017-06-16T13:38:50Z",
        "body": "Closing this. Feel free to reopen it as needed."
      }
    ]
  },
  {
    "number": 798,
    "title": "formatting issue with goaccess and customized haproxy",
    "created_at": "2017-06-07T17:19:55Z",
    "closed_at": "2017-06-07T18:49:40Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/798",
    "body": "Format below is customized and I'm getting some issues trying to read it. Any suggestions ?\r\nSample:\r\n\r\n    Apr 16 03:30:01 localhost haproxy[9830]: [9830] [1492313401.408] 6/6/6/0/2/0/0 0/0/0/3/3 ---- 10.64.57.13:47226 10.64.57.11:80 10.67.28.21:9090 xpress - - \"POST /1.0/apps/asdfasdf/inbox/users/SBBSBB/channels/NorthSouth HTTP/1.1\" 200 apisvr:stgapi01 - {8.123.123.123|sng.example.com} - req_size=391 resp_size=341\r\n\r\nRunning with thef following:\r\n\r\n    goaccess --date-format='%d/%b/%Y' --time-format='%H:%M:%S' -q --log-format='%^  %^ %^:%^:%^ %^ %^[%^]: [%^] [%^] %^/%^/%^/%^/%^/%^/%^ %^/%^/%^/%^/%^ %^ %^:%^ %^:%^ %^:%^ %^ %^ %^ \"%r\" %s %^:%^ %^ {%h|%^} %^ %^ %^' -f haproxy.log\r\n\r\nAny help would be greatly appreciated.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/798/comments",
    "author": "tsauce",
    "comments": [
      {
        "user": "tsauce",
        "created_at": "2017-06-07T17:20:24Z",
        "body": "When i run that command i see:\r\n\r\nA valid date is required."
      },
      {
        "user": "allinurl",
        "created_at": "2017-06-07T18:47:15Z",
        "body": "Please try this, it should do the job:\r\n\r\n    goaccess access.log --log-format='%^[ %^[ %^[%x.%^] %^\"%r\" %s %^ %^{%h|%v} %^=%b %^' --date-format=%s --time-format=%s"
      },
      {
        "user": "tsauce",
        "created_at": "2017-06-07T18:49:38Z",
        "body": "Sweet! This works :) Thanks allinurl\r\n"
      }
    ]
  },
  {
    "number": 796,
    "title": "Unable to parse log v0.9.4 - Nothing valid to process.",
    "created_at": "2017-06-05T15:32:24Z",
    "closed_at": "2017-06-05T15:57:33Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/796",
    "body": "When im trying to parse the file with html file, im getting this error.\r\n\r\n```\r\nParsing... [1,949] [0/s]\r\nGoAccess - version 0.9.4 - Feb  7 2016 10:13:30\r\nConfig file: /etc/goaccess.conf\r\n\r\nFatal error has occurred\r\nError occured at: src/goaccess.c - main - 1033\r\nNothing valid to process.\r\n\r\n```\r\n\r\nAny help please ? \r\n\r\n\r\nThank you ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/796/comments",
    "author": "K0ZL1K",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-06-05T15:34:51Z",
        "body": "Looks like you have an invalid log/date/time format. I'd recommend upgrading to the latest version, v1.2 - it will display the reason why is unable to process the log."
      },
      {
        "user": "K0ZL1K",
        "created_at": "2017-06-05T15:35:56Z",
        "body": "ok, i will try it ! \r\n\r\nWill let you know after that.\r\n\r\nThank you"
      },
      {
        "user": "K0ZL1K",
        "created_at": "2017-06-05T15:55:07Z",
        "body": "Update solved this problem ! \r\n\r\nThank you for hint. \r\n\r\nHave nice day "
      }
    ]
  },
  {
    "number": 790,
    "title": "Issue with real time html in remote server ",
    "created_at": "2017-06-01T19:38:25Z",
    "closed_at": "2017-06-02T11:37:54Z",
    "labels": [
      "question",
      "html report",
      "websocket-server"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/790",
    "body": "Hi,\r\nI have a problem with real time html. GoAccess is running on a remote server and  report is not updating real time.\r\n\r\nI have found following error message on firebug\r\n\r\n    VM2464:35 WebSocket connection to 'ws://thushan-goaccess-ws.dev.xxxx.com:7890/' failed: Error in connection establishment: net::ERR_CONNECTION_TIMED_OUT\r\n\r\nAs well as my web application access (url) via proixy which is running on the remote server.\r\n\r\nIt would be great if you can help me on this.\r\n\r\nThanks in advance.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/790/comments",
    "author": "thushan85",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-06-01T19:49:34Z",
        "body": "Have tried opening port 7890? \r\n\r\nAlso, recently a PR was submitted that fixed an issue when parsing the host header upon opening a WebSocket connection. So if your domain contains the sub string `get`, then you will need to build from development to apply this patch. This will be pushed out in the upcoming version."
      },
      {
        "user": "thushan85",
        "created_at": "2017-06-01T20:15:37Z",
        "body": "Yes I have verified that 7890 is working (checked telnet). \r\n\r\nActually url just a proxy pass to specific port on the server."
      },
      {
        "user": "allinurl",
        "created_at": "2017-06-01T20:27:07Z",
        "body": "If  the WS server is running on 7890 but all clients from outside go through proxy on client port then you can specify that port using --ws-url. e.g., \r\n\r\n    goaccess access.log --real-time-html --ws-url=thushan-goaccess-ws.dev.xxxx.com:9999 --port=7890"
      },
      {
        "user": "thushan85",
        "created_at": "2017-06-02T08:58:33Z",
        "body": "Hi @allinurl \r\n\r\nThanks for the help. Proxy server is not supported for web sockets. But I could resolved it by creating tunnel over ssh to remote server.\r\nThanks"
      }
    ]
  },
  {
    "number": 789,
    "title": "Unique visitors count different than Google Analytics",
    "created_at": "2017-06-01T13:40:46Z",
    "closed_at": "2017-06-05T23:50:17Z",
    "labels": [
      "question",
      "documentation"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/789",
    "body": "Hi\r\n(Please my bad English, I'm French and I'm not a *nix guru :-)\r\n\r\nI just installed latest GoAccess 1.2, I run it with:\r\n`goaccess mydomain.com-ssl_log-Mar-2017 --time-format COMBINED --date-format COMBINED --log-format COMBINED --ignore-crawlers -o report.html`\r\n\r\nAnd for just 1 month I get 44 213 unique visitors?! I would like to but it's not the reality...\r\nGoogle Analytics give me only 5 055 unique visitors.\r\n\r\nMaybe there is an option I missed?\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/789/comments",
    "author": "pako69",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-06-01T14:07:44Z",
        "body": "Great question and somehow difficult to answer, however, there are for sure a couple of things to consider.\r\n\r\n1. By default, GoAccess counts crawlers/bots as legitimate visitors. You can stop counting them using `--ignore-crawlers`. However, since it's not possible to account for all bots out there, even after you disable the most popular ones, you may still get a few in your logs.\r\n\r\n2. Google Analytics keeps track of visitors using cookies, so if a browser has cookies or JavaScript disabled, then it won't keep track of it. This includes the now so popular **adblockers** and bots as well. GoAccess should be able to track these down fine since it works at the server level.\r\n\r\n3. You can narrow down the unique visitors count to unique IPs. It will show you the total number in the upper-right corner of the panel.\r\n\r\n4. You may be able to identify some bots/crawlers by listing the user agents of the given host. Passing `-a` will give you that list upon expanding a host in the hosts panel. Also, resolving the request IP with `-d` may give you a hint (assuming you are outputting HTML). It will add an extra column under the hosts panel (**Note**: `-d` will need to resolve all IPs and therefore the time it takes to parse will be longer)\r\n\r\nI believe tracking visitors at the client level deflates the actual number of visitors (due to reason listed on #2). On the other hand, server-side tracking gives you a more accurate number at the cost of not knowing for sure if the client is a human behind a browser."
      },
      {
        "user": "allinurl",
        "created_at": "2017-06-05T23:50:17Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 785,
    "title": "make failed",
    "created_at": "2017-05-30T09:35:51Z",
    "closed_at": "2017-05-30T10:44:44Z",
    "labels": [
      "question",
      "build"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/785",
    "body": "Hello,\r\n\r\nI am trying to install goaccess 1.2 from source but i can not be succeded yet.\r\nI tried with two different server (CentOS 6.9 centos-release-6-9.el6.12.3.x86_64 and CentOS 7 centos-release-7-2.1511.el7.centos.2.10.x86_64) but every time i am stucking on step;\r\n\r\ngcc -O2 -DSYSCONFDIR=\\\"/usr/local/etc\\\" -Wno-long-long -Wall -W -Wnested-externs -Wformat=2 -Wmissing-prototypes -Wstrict-prototypes -Wmissing-declarations -Wwrite-strings -Wshadow -Wpointer-arith -Wsign-compare -Wbad-function-cast -Winline -Wcast-align -Wextra -Wdeclaration-after-statement -Wno-missing-field-initializers -pthread -rdynamic  -o goaccess src/base64.o src/browsers.o src/color.o src/commons.o src/csv.o src/error.o src/gdashboard.o src/gdns.o src/gholder.o src/gmenu.o src/goaccess.o src/gslist.o src/gstorage.o src/gwsocket.o src/json.o src/opesys.o src/options.o src/output.o src/parser.o src/settings.o src/sha1.o src/sort.o src/ui.o src/util.o src/websocket.o src/xmalloc.o  src/gkhash.o    -lnsl -lncursesw -lpthread\r\nmake[1]: Leaving directory /root/goaccess-1.2\r\n\r\nI tried with different configurations but i did not be succeded. My latest configuration is;\r\n`Your build configuration:\r\n\r\n  Prefix         : /usr/local\r\n  Package        : goaccess\r\n  Version        : 1.2\r\n  Dynamic buffer : no\r\n  Geolocation    : N/A\r\n  Storage method : In-memory Hash Database (Default)\r\n  TLS/SSL        : no\r\n  Compiler flags :  -pthread\r\n  Linker flags   : -lnsl -lncursesw -lpthread\r\n  Bugs           : goaccess@prosoftcorp.com`\r\n\r\nAnd my error message after make command;\r\n\r\nIn file included from src/gkhash.c:40:\r\nsrc/gkhash.h: In function ‘ins_is32’:\r\nsrc/gkhash.h:43: warning: inlining failed in call to ‘kh_resize_is32’: call is unlikely and code size would grow\r\nsrc/gkhash.h:43: warning: called from here\r\nsrc/gkhash.h:43: warning: inlining failed in call to ‘kh_resize_is32’: call is unlikely and code size would grow\r\nsrc/gkhash.h:43: warning: called from here\r\nsrc/gkhash.h: In function ‘ht_insert_meta_data’:\r\nsrc/gkhash.h:53: warning: inlining failed in call to ‘kh_resize_su64’: call is unlikely and code size would grow\r\nsrc/gkhash.h:53: warning: called from here\r\nsrc/gkhash.h:53: warning: inlining failed in call to ‘kh_resize_su64’: call is unlikely and code size would grow\r\nsrc/gkhash.h:53: warning: called from here\r\nsrc/gkhash.h: In function ‘ht_insert_agent’:\r\nsrc/gkhash.h:51: warning: inlining failed in call to ‘kh_resize_igsl’: call is unlikely and code size would grow\r\nsrc/gkhash.h:51: warning: called from here\r\nsrc/gkhash.h:51: warning: inlining failed in call to ‘kh_resize_igsl’: call is unlikely and code size would grow\r\nsrc/gkhash.h:51: warning: called from here\r\nsrc/gkhash.h: In function ‘ht_insert_maxts’:\r\nsrc/gkhash.h:45: warning: inlining failed in call to ‘kh_resize_iu64’: call is unlikely and code size would grow\r\nsrc/gkhash.h:45: warning: called from here\r\nsrc/gkhash.h:45: warning: inlining failed in call to ‘kh_resize_iu64’: call is unlikely and code size would grow\r\nsrc/gkhash.h:45: warning: called from here\r\ngcc -O2 -DSYSCONFDIR=\\\"/usr/local/etc\\\" -Wno-long-long -Wall -W -Wnested-externs -Wformat=2 -Wmissing-prototypes -Wstrict-prototypes -Wmissing-declarations -Wwrite-strings -Wshadow -Wpointer-arith -Wsign-compare -Wbad-function-cast -Winline -Wcast-align -Wextra -Wdeclaration-after-statement -Wno-missing-field-initializers -pthread -rdynamic  -o goaccess src/base64.o src/browsers.o src/color.o src/commons.o src/csv.o src/error.o src/gdashboard.o src/gdns.o src/gholder.o src/gmenu.o src/goaccess.o src/gslist.o src/gstorage.o src/gwsocket.o src/json.o src/opesys.o src/options.o src/output.o src/parser.o src/settings.o src/sha1.o src/sort.o src/ui.o src/util.o src/websocket.o src/xmalloc.o  src/gkhash.o    -lnsl -lncursesw -lpthread\r\nmake[1]: Leaving directory `/root/Downloads/goaccess-1.2'\r\n\r\nCan you help me about this?\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/785/comments",
    "author": "mezorba",
    "comments": [
      {
        "user": "mag250",
        "created_at": "2017-05-30T09:44:30Z",
        "body": "Those are warnings, so build was done...\r\nYou need to make\r\n`$ make install`\r\n\r\nI would recommend first doing a test  with\r\n```\r\n$ mkdir -p /tmp/PKG\r\n$ make install DESTDIR=/tmp/PKG/\r\n```\r\n"
      }
    ]
  },
  {
    "number": 783,
    "title": "structured log format",
    "created_at": "2017-05-26T11:03:24Z",
    "closed_at": "2017-05-31T13:46:19Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/783",
    "body": "Hi,\r\nIs there a possibility for goaccess to support structured logs such as\r\n\r\n    <12>1 2017-05-15T10:43:37.192+03:00 HOSTNAME RT_UTM - WEBFILTER_URL_PERMITTED [system@2636.1.1.1.2.40 source-address=\"10.x.x.x.\" source-port=\"63424\" destination-address=\"189.x.x.x\" destination-port=\"443\" name=\"allowed-sites\" error-message=\"BY_WHITE_LIST\" profile-name=\"block_selected_sites\" object-name=\"189.x.x.x\" pathname=\"/\" username=\"N/A\" roles=\"N/A\"]\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/783/comments",
    "author": "mag250",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-05-26T11:45:55Z",
        "body": "As long as you have a valid client IP, a request and a date/time then goaccess should be able to parse it. The log line you posted above seems it does contain these fields, is pathname the request?"
      },
      {
        "user": "mag250",
        "created_at": "2017-05-29T07:28:16Z",
        "body": "Thanks for the reply,\r\nthe above log is an example, others are with more fields...\r\nThe problem is I confused about how to configure log-format...\r\n\r\nThanks"
      },
      {
        "user": "allinurl",
        "created_at": "2017-05-29T13:15:34Z",
        "body": "Which field is the client IP?"
      },
      {
        "user": "mag250",
        "created_at": "2017-05-30T07:55:04Z",
        "body": "Well this is from firewall log, so source-address is the internal client IP and destination-address is the site visited.\r\nHOSTNAME is the firewall.\r\n\r\nThanks"
      },
      {
        "user": "allinurl",
        "created_at": "2017-05-30T12:09:06Z",
        "body": "I'm not sure goaccess is the right tool for firewall logs, but the following does the job for the line you posted above (make sure you have actual IPs):\r\n\r\n    goaccess access.log --log-format='%^ %dT%t.%^ %v %^ %^ %^ %^ %^ %^ %^=\"%h\" %^ %^ %^ %^ %^ %^=\"%U\" %^=\"%e\" %^' --date-format=%Y-%m-%d --time-format=%T --http-method=no --http-protocol=no"
      },
      {
        "user": "allinurl",
        "created_at": "2017-05-31T13:46:19Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 779,
    "title": "Download a report as PDF",
    "created_at": "2017-05-22T08:33:52Z",
    "closed_at": "2017-05-24T12:09:41Z",
    "labels": [
      "question",
      "html report"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/779",
    "body": "I have a question about the report, Is there any way to download  the report generated by GoAccess in pdf?\r\nThanks ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/779/comments",
    "author": "sarastef",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-05-22T11:35:18Z",
        "body": "No through goaccess, but you probably can print it (Ctrl+p) and hit save as PDF."
      },
      {
        "user": "allinurl",
        "created_at": "2017-05-24T12:09:41Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 776,
    "title": "shell_exec does not work correctly when using \"awk\" before generating report",
    "created_at": "2017-05-18T08:05:09Z",
    "closed_at": "2017-05-19T02:49:11Z",
    "labels": [
      "question",
      "html report",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/776",
    "body": "Hi Support,\r\n\r\nI'm facing the problem with \"awk\" and \"goaccess\"\r\n\r\n**My PHP script**:\r\n```\r\n$cmd = \"awk '$7 ~ /schedule/' /var/logs/httpd/access_log* | goaccess -a -o /var/www/html/log/generate_report.html\"\r\n$output = shell_exec($cmd);\r\n```\r\n\r\n**Error Log**:\r\n\r\n> AH01215: awk: cmd. line:1: (FILENAME=/var/logs/httpd/access_log-20170508 FNR=126) fatal: print to \"standard output\" failed (Broken pipe)\r\n\r\nThis issue only happens when output of \"awk\" is input of \"goaccess\", because when I use \r\nanother \"awk\" instead of \"goaccess\", it still works well. Ex:\r\n\r\n    $cmd = \"awk '$7 ~ /schedule/' /var/logs/httpd/access_log* | awk '{gsub(/[\\/]+/,\"/\",$7); print }'\"\r\n\r\nSo, there is any way to fix this issue? Thank you so much.\r\n\r\nLooking forward to knowing your response.\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/776/comments",
    "author": "nhochong",
    "comments": [
      {
        "user": "nhochong",
        "created_at": "2017-05-18T10:48:40Z",
        "body": "Hi Support,\r\n\r\nThank you so much for your contribute.\r\n\r\nI have resolved this issue by myself.\r\n\r\nMy solution: write filtered record to a new file before generating the report from the new file.\r\n\r\nScript:\r\n\r\n```\r\n// Filter logs\r\n$cmd = \"awk '$7 ~ /schedule/' /var/logs/httpd/access_log* > /var/logs/httpd/filtered_log\"\r\nshell_exec($cmd);\r\n```\r\n\r\n// Generate report\r\n```\r\n$cmd = \"goaccess /var/logs/httpd/filtered_log -a -o /var/www/html/log/generate_report.html\"\r\nshell_exec($cmd);\r\n```\r\n\r\nLet me know if you have a better solution for this :)\r\n\r\nThanks again."
      },
      {
        "user": "allinurl",
        "created_at": "2017-05-18T11:44:11Z",
        "body": "Using\r\n\r\n```\r\n$cmd = \"awk '$7 ~ /schedule/' /var/logs/httpd/access_log* | goaccess -a -o /var/www/html/log/generate_report.html\"\r\n$output = shell_exec($cmd);\r\n```\r\n\r\nwhat output do you get? Also please try adding a single dash `-` to let goaccess know it should read from a pipe. e.g., \r\n\r\n    $cmd = \"awk '$7 ~ /schedule/' /var/logs/httpd/access_log* | goaccess -a -o /var/www/html/log/generate_report.html -\""
      },
      {
        "user": "nhochong",
        "created_at": "2017-05-19T02:49:11Z",
        "body": "Hi Support,\r\n\r\nAmazing, your suggestion ( a single dash) works perfectly. But, seems when running command directly on the server, it still work correctly even with or without a single dash. Anyway, it's my mistake and thank you so much for your help :). I very appreciate it. I will close this question now."
      },
      {
        "user": "allinurl",
        "created_at": "2017-05-19T12:06:11Z",
        "body": "@nhochong Glad that worked :) Running it through shell_exec and awk probably does not give you a terminal and thus the dash is needed."
      }
    ]
  },
  {
    "number": 767,
    "title": "Avg.T.S, Cum. T.S, and Max T.S. Columns Not Showing",
    "created_at": "2017-05-12T17:08:58Z",
    "closed_at": "2017-06-07T16:28:27Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/767",
    "body": "I have the following log format in my apache configuration...\r\n```\r\nLogFormat \"%h %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-agent}i\\\"\" combined-time\r\nCustomLog /var/www/access.log combined-time\r\n```\r\n\r\nIn the goaccess.conf file I am using the following log format...\r\n```\r\n# NCSA Combined Log Format\r\nlog-format %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"\r\n```\r\n\r\nBut the Avg.T.S, Cum. T.S, and Max T.S. is not in the apache access log. Am I missing something in my apache configuration to show the times? ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/767/comments",
    "author": "sero323",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-05-12T18:12:52Z",
        "body": "You will need to add `%D` to your Apache's LogFormat, e.g., \r\n\r\n    LogFormat \"%h %l %u %t \\\"%r\\\" %>s %b \\\"%{Referer}i\\\" \\\"%{User-agent}i\\\" %D\" combined-time"
      },
      {
        "user": "allinurl",
        "created_at": "2017-06-07T16:28:27Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 762,
    "title": "Custom log format with XFF and tab/space delimited",
    "created_at": "2017-05-07T05:26:26Z",
    "closed_at": "2017-05-07T17:43:34Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/762",
    "body": "Hi @allinurl \r\n\r\nWhat's the right log format for the following access log. I have tried many but still not worked. \r\n\r\n    [03/May/2017:23:58:18 -0400]\t127.0.0.1\t127.0.0.1\t200\t4876\tGET /appQuery?query=monitorServer HTTP/1.0\t273\t-\t-\r\n\r\nFormat:\r\n\r\n    LogFormat in apache config: \"%t   %{X-Forwarded-For}i %a  %>s %D  %r  %B  %{Referer}i %{User-Agent}i\" combined\r\n\r\nGoaccess verion 1.2\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/762/comments",
    "author": "thushan85",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-05-07T13:22:25Z",
        "body": "It looks like you have a mix of spaces and tabs delimiting the log. I'd recommend using a consistent format. However, this should do it:\r\n\r\n    goaccess access.log --log-format='[%d:%t %^]\\t~h{\\t}\\t%s\\t%D\\t%m %U %H\\t%b\\t%R\\t%u' --date-format=%d/%b/%Y --time-format=%T"
      },
      {
        "user": "thushan85",
        "created_at": "2017-05-07T16:11:42Z",
        "body": "Thank you very much @allinurl  It worked...!!!!"
      }
    ]
  },
  {
    "number": 756,
    "title": "How to load new html-prefs and set them as default?",
    "created_at": "2017-05-03T09:06:28Z",
    "closed_at": "2017-05-11T01:10:09Z",
    "labels": [
      "question",
      "documentation",
      "html report"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/756",
    "body": "I'm trying to uncomment this section of goaccess.conf\r\n`html-prefs {\"theme\":\"bright\",\"perPage\":10,\"layout\":\"vertical\",\"showTables\":true,\"visitors\":{\"plot\":{\"chartType\":\"bar\"}}}`\r\nbecause I want to the number of item per page will be 10 and the orientation of a panel: vertically by default in my report html. But It doesn't work I tried with this command\r\n`goaccess  access.log -o /var/www/report.html --html-prefs='{\"theme\":\"bright\",\"perPage\":10,\"layout\":\"vertical\",\"showTables\":true,\"visitors\":{\"plot\":{\"chartType\":\"bar\"}}}'`\r\nbut nothing change in my report",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/756/comments",
    "author": "sarastef",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-05-03T15:03:53Z",
        "body": "Great question. GoAccess makes use of localStorage in your browser. So if you load the report once, then next time it will load the same preferences from localStorage. To use the new specified preferences, you will need to clear your localStorage."
      },
      {
        "user": "allinurl",
        "created_at": "2017-05-11T01:10:09Z",
        "body": "Closing this. Feel free to reopen it if needed."
      },
      {
        "user": "rc5hack",
        "created_at": "2024-03-13T07:48:18Z",
        "body": "To debug html-prefs changing without manually clearing your localStorage, you also could use \"private browsing\" mode in your browser (in Firefox: Shift + CTRL + P (on Windows/Linux), Shift + ⌘ + P (on macOS), in other browsers: google for it)."
      }
    ]
  },
  {
    "number": 755,
    "title": "Session expiration when counting unique visitors",
    "created_at": "2017-05-02T22:12:52Z",
    "closed_at": "2017-05-02T22:34:31Z",
    "labels": [
      "question",
      "documentation"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/755",
    "body": "What duration does goaccess consider as 1 session when counting visitors?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/755/comments",
    "author": "szepeviktor",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-05-02T22:26:58Z",
        "body": "HTTP requests containing the same IP, the same date, and the same user agent are considered a unique visitor. There's no concept of session when counting unique visitors."
      },
      {
        "user": "szepeviktor",
        "created_at": "2017-05-02T22:28:11Z",
        "body": "Thanks.\r\n\r\nSo If I visit a site at 06:01 and at 16:59 that will count as two hits and one visitor?"
      },
      {
        "user": "allinurl",
        "created_at": "2017-05-02T22:33:30Z",
        "body": "That's correct. Just note that the hits counter can be more than 2 if there are static files when loading the site."
      },
      {
        "user": "szepeviktor",
        "created_at": "2017-05-02T22:34:31Z",
        "body": "> if there are static files when loading the site.\r\n\r\nThank you.\r\nI usually use a CDN."
      },
      {
        "user": "MIvanchev",
        "created_at": "2024-06-14T17:22:31Z",
        "body": "Hey, I just wanna ask, because this is relevant for me right now, would you consider adding support for an option which specifies a timeout separating unique visits? I.e. <n> seconds/minutes/hours between visits triggers a new unique visit."
      },
      {
        "user": "allinurl",
        "created_at": "2024-06-14T17:38:52Z",
        "body": "@MIvanchev #2669 appears to be the same request. What are your thoughts on that?"
      },
      {
        "user": "MIvanchev",
        "created_at": "2024-06-14T23:53:42Z",
        "body": "@allinurl Yes, it appears to be semantically the same, only difference being @jlmenut wanted a longer period and I need a shorter one. IMO there is also a somewhat problematic issue with the current approach if the requests start arriving around midnight. Considering the general interest I'll meditate a bit on your proposed solution and think about how to extend it."
      }
    ]
  },
  {
    "number": 730,
    "title": "Server locked (outgoing flood)",
    "created_at": "2017-04-10T09:05:13Z",
    "closed_at": "2017-04-10T18:52:44Z",
    "labels": [
      "question",
      "html report",
      "websocket-server"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/730",
    "body": "Hi,\r\n\r\nMy server have been locked because of an outgoing flood from goaccess.\r\n\r\nAny idea why that might happen ?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/730/comments",
    "author": "MaraScott",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-04-10T15:08:36Z",
        "body": "I'm not sure I follow, what do you mean locked because of an outgoing flood? A lot of data going out from your server? "
      },
      {
        "user": "MaraScott",
        "created_at": "2017-04-10T15:32:54Z",
        "body": "\r\nI m not sure why, but i have been blocked for that reason from the port used by goaccess which was active at that time\r\nthe log message that I have is \r\n\r\n```shell\r\n\r\n2017-04-10 10:20:56 = DDOS from IP 163.172.35.42 (attack ID 377304): protocols : tcp, targets: 43.241.50.22/32, sports: Dynamic (1024-65535), dports\r\n\r\n```"
      },
      {
        "user": "allinurl",
        "created_at": "2017-04-10T15:37:22Z",
        "body": "Did your hosting/server company block you? Were you able to get the live report working and suddenly stopped updating?  From the log you posted above, it looks like some sort of firewall is setting this for you. You can always change the port in your goaccess config file. e.g.,\r\n\r\n    port 7891"
      },
      {
        "user": "MaraScott",
        "created_at": "2017-04-10T15:42:24Z",
        "body": "Did your hosting/server company block you? yes\r\nWere you able to get the live report working and suddenly stopped updating? I don t understand\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2017-04-10T15:46:16Z",
        "body": "You probably want to talk to your server company, not sure if there's anything goaccess can do other than changing ports."
      },
      {
        "user": "MaraScott",
        "created_at": "2017-04-10T15:52:28Z",
        "body": "Okay, so based on my talk with my server company I ll have to investigate howver I don t know how to.\r\nAny advises or tuto or tools to recommand ?"
      },
      {
        "user": "allinurl",
        "created_at": "2017-04-10T17:11:54Z",
        "body": "Are you on a vps? or managed server? If you are on a vps, then I'd assume you have full control of it so it *should* be easier to know what's going on. If it's some sort of managed server, then your server company probably knows more about this.  I'd check what services you are running and start from there. Also check your iptables rules and see what might be causing the block."
      },
      {
        "user": "MaraScott",
        "created_at": "2017-04-10T18:52:41Z",
        "body": "Thks,\r\n\r\nI m on dedicated server.\r\n\r\nI ll follow your advises. thks"
      }
    ]
  },
  {
    "number": 729,
    "title": "How to enable real-time stats starting from today",
    "created_at": "2017-04-10T05:38:07Z",
    "closed_at": "2017-04-10T16:16:01Z",
    "labels": [
      "question",
      "documentation",
      "html report",
      "terminal output",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/729",
    "body": "How i can generate live report from today? if i specify `-f access.log`, it will just read from this file, I need something like this:\r\n\r\n    grep —no-filename $(date +\"%d/%b/%Y\") access.log --real-time-html\r\n\r\nis this possible?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/729/comments",
    "author": "askart",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-04-10T15:22:09Z",
        "body": "It is possible if you are using v1.2. You can run something like: \r\n\r\n    tail -f -n +0 /var/log/apache2/access.log | grep `date +\"%d/%b\"` --line-buffered | goaccess --log-format=VCOMBINED -o report.html --real-time-html"
      },
      {
        "user": "askart",
        "created_at": "2017-04-10T16:16:01Z",
        "body": "thx"
      }
    ]
  },
  {
    "number": 715,
    "title": "Question mulitple log sources",
    "created_at": "2017-04-04T19:57:33Z",
    "closed_at": "2017-04-14T14:06:53Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/715",
    "body": "Is there a way to have goaccess centralized so that it can read simultaneously from multiple log sources on different servers? Or if I have my logs forwarded to a single logstore can I ignore certain sources?\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/715/comments",
    "author": "LordNykon",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-04-04T21:37:09Z",
        "body": "Forwarding to a single logstore and ignoring entries by vhost should do it. grep/sed/awk would do the ignoring part."
      },
      {
        "user": "LordNykon",
        "created_at": "2017-04-11T11:57:11Z",
        "body": "Syntactically how would that look? \r\n\r\ngoaccess -f \"/var/log/messages-test | grep '10.100.10.1'\""
      },
      {
        "user": "allinurl",
        "created_at": "2017-04-11T12:06:24Z",
        "body": "    # tail -f -n +0 access.log | grep --line-buffered 'vhost_to_ignore' | goaccess --log-format=COMBINED -"
      },
      {
        "user": "allinurl",
        "created_at": "2017-04-14T14:06:53Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 706,
    "title": "Display warning if access log is empty",
    "created_at": "2017-03-29T04:30:46Z",
    "closed_at": "2021-01-27T02:42:23Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/706",
    "body": "I setup goaccess but somehow i forgot to add access_log on my nginx server block. When run\r\n```\r\ngoaccess /var/log/nginx/access.log\r\n# OR \r\ngoaccess -f /var/log/nginx/access.log\r\n```\r\ndidn't complaint access.log file is empty. goaccess just quit after execute these command.\r\n```\r\ngoaccess /var/log/nginx/access.log -o report.html\r\n```\r\nabove command just echo  `/var/log/nginx/access.log` without any warning.\r\n\r\nI'd love if `goaccess` give warning if log is empty, so we know whats wrong :) ",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/706/comments",
    "author": "sentabi",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-03-29T12:05:28Z",
        "body": "If your log is empty, goaccess used to error out, now it will output an empty report. This change was part of issue #471."
      }
    ]
  },
  {
    "number": 703,
    "title": "goaccess v1.2 does not work at all from a crontab",
    "created_at": "2017-03-27T08:12:40Z",
    "closed_at": "2017-03-27T14:21:04Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/703",
    "body": "Hi,\r\n\r\nsince v1.2 my crontab dont work at all .\r\n\r\nThe log of the crontab display the help of goaccess instead of dealing with my log file\r\n\r\nhere is my crontab \r\n\r\n    0 1 \t* * *  root /bin/zcat /var/log/nginx/service.log.*.gz |/usr/bin/goaccess -g -a -o /path/to/report.html\r\n\r\nwhen I run that by hand it's working fine.",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/703/comments",
    "author": "foxmask",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-03-27T12:11:37Z",
        "body": "Please make sure to use a single dash `-`, e.g.,\r\n\r\n    /bin/zcat /var/log/nginx/service.log.*.gz |/usr/bin/goaccess -g -a -o /path/to/report.html -"
      },
      {
        "user": "foxmask",
        "created_at": "2017-03-27T14:21:04Z",
        "body": "Yes ! Thanks :)"
      }
    ]
  },
  {
    "number": 680,
    "title": "Pipe log to GoAccess not working in cronjob without hyphen",
    "created_at": "2017-03-07T15:24:19Z",
    "closed_at": "2017-03-07T15:51:38Z",
    "labels": [
      "question",
      "log-processing"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/680",
    "body": "**In Cronjob:**\r\nIn version 1.1.1 the following call worked in cronjob:\r\n`zgrep -h '\\[07/Mar/2017' /var/log/apache2/access.log.gz |  goaccess --no-progress -q > /path/to/file.html`\r\n\r\nIn version 1.2 this call works only when I insert a hyphen to goaccess:\r\n`zgrep -h '\\[07/Mar/2017' /var/log/apache2/access.log.gz |  goaccess - --no-progress -q > /path/to/file.html`\r\nIf the hyphen is not used, I get the help output (goaccess without args)\r\n\r\n**Terminal**\r\nIn bash terminal both variants work well\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/680/comments",
    "author": "spy1986",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-03-07T15:30:57Z",
        "body": "Thanks for reporting this. The hyphen is now required in v1.2 if used from the cron. This fixes #647."
      },
      {
        "user": "spy1986",
        "created_at": "2017-03-07T15:46:14Z",
        "body": "Ok, Thanks"
      },
      {
        "user": "TCB13",
        "created_at": "2017-04-01T17:49:59Z",
        "body": "~@allinurl is this supposed to happen even indirectly? I'm using cron to run a bash script that will run `goaccess` and I have this issue... See #711. Thank you!~\r\n\r\n**Nevermind, exactly my issue at #647 and already answered!**"
      }
    ]
  },
  {
    "number": 658,
    "title": "is there any way to generate bandwidth report for a week",
    "created_at": "2017-02-13T13:07:23Z",
    "closed_at": "2017-02-20T02:11:55Z",
    "labels": [
      "question",
      "websocket-server",
      "on-disk"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/658",
    "body": "HI\r\n\r\nis there any way to generate bandwidth report for a week\r\n\r\n\r\nmy goaccess is running with local DB support and it's plotting live. \r\n\r\n\r\nRegards,\r\nBen",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/658/comments",
    "author": "bentech4u",
    "comments": [
      {
        "user": "bentech4u",
        "created_at": "2017-02-13T14:17:58Z",
        "body": "currently goaccess is running with \r\n\r\n/usr/local/bin/goaccess --real-time-html --ws-url=212.43.0.66 \r\n\r\nand when i tried to generate csv alogin with that, i got below\r\n\r\n_[root@centos tmp]# /usr/local/bin/goaccess -o csv > /tmp/1.csv\r\nParsing... [0] [0/s]\r\nGoAccess - version 1.1.1 - Jan 30 2017 16:08:00\r\nConfig file: /usr/local/etc/goaccess.conf\r\n\r\nFatal error has occurred\r\nError occured at: src/websocket.c - ws_socket - 2682\r\nUnable to set bind: Address already in use._\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2017-02-13T18:44:31Z",
        "body": "If you would like to run a second instance, you will need to use a different config file so it doesn't attempt to run another real-time report. Try the following (replace the log-format value as needed)\r\n\r\n     goaccess -f access.log -o report.csv --log-format=COMBINED --no-global-config"
      },
      {
        "user": "bentech4u",
        "created_at": "2017-02-14T03:10:33Z",
        "body": "HI\r\n\r\nthanks for the information.\r\n\r\nyes my log format is combined only. will it take data from existing database files under /tmp ?"
      },
      {
        "user": "allinurl",
        "created_at": "2017-02-14T03:18:31Z",
        "body": "It's up to you how you want goaccess to process the log. If you want to use the /tmp/ files, then you can indicate that, else you need to use a different path. You can copy the existing config file and remove all the real-time data variables/values and use `-p` to specify the new config file.\r\n\r\n     goaccess -f access.log -o report.csv --log-format=COMBINED --no-global-config -p /your_new/config.file"
      },
      {
        "user": "bentech4u",
        "created_at": "2017-02-14T09:18:22Z",
        "body": "hi\r\n\r\ngoaccess --load-from-disk with existing db files is possible? insted of feeding again access.log ?"
      },
      {
        "user": "bentech4u",
        "created_at": "2017-02-14T09:34:55Z",
        "body": "i issued \r\n\r\n    $ zcat -f access* | goaccess -o /tmp/log/report.csv --log-format=COMBINED --no-global-config\r\n\r\nbut the csv file is not yest generated\r\n\r\neven i tried below, but no file generated\r\n\r\n    $ goaccess -f access_log-20170206 -o /tmp/log/report.csv --log-format=COMBINED --no-global-config\r\n\r\nand the same time i tried to generate html output, that also not giving any output\r\n\r\n    $ goaccess -f access_log-20170206 -o /tmp/log.report.html --log-format=COMBINED --no-global-config\r\n    Parsing... [0] [0/s]\r\n\r\n\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2017-02-15T13:10:50Z",
        "body": "You can't use the same database files while another instance is using the files. You will need to use different db files or stop the other instance first."
      },
      {
        "user": "allinurl",
        "created_at": "2017-02-20T02:11:55Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 655,
    "title": "Goaccess live not updating",
    "created_at": "2017-02-10T16:52:05Z",
    "closed_at": "2017-02-14T04:17:30Z",
    "labels": [
      "question",
      "html report",
      "websocket-server"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/655",
    "body": "Hi,\r\nI installed Goaccess to monitor the logs generated by a reverse proxy (pound), but I can not see real-time statistics.\r\nThe page is not updated with the new entries. It is necessary to stop and start the goaccess for the statistics to be updated.\r\n\r\nThe command line I use is:\r\n\r\n    goaccess --date-format = \"% d /% b /% Y\" --time-format = \"% H:% M:% S\" --log-format = \"% v% h% % P% s% b% -f pound.log --real-time-html --ws-url = goaccess.io --addr = xxx.xxx.xxx.xxx -o /var/www/html/report.html\r\n\r\nAny suggestion?\r\nThank you.\r\nCarlos",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/655/comments",
    "author": "cbaptista",
    "comments": [
      {
        "user": "szorg",
        "created_at": "2017-02-10T17:04:09Z",
        "body": "1) You're missing a quote after the end of your log format.\r\n2) If that doesn't work, try removing the spaces (example `--ws-url=goaccess.io` instead of `--ws-url = goaccess.io`)"
      },
      {
        "user": "allinurl",
        "created_at": "2017-02-10T17:04:53Z",
        "body": "@cbaptista Also, please ensure you are using a valid `--ws-url` and a valid `--log-format`. e.g.,\r\n\r\n    goaccess -f pound.log -o /var/www/html/report.html --real-time-html --ws-url=your_server_ip_where_goaccess_is_running --log-format VCOMBINED\r\n\r\nFeel free to post a few lines from your access log to verify the log format. Also, port 7890 must be open."
      },
      {
        "user": "allinurl",
        "created_at": "2017-02-14T04:17:30Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 625,
    "title": "How to run two or more real-time-html instances of GoAccess",
    "created_at": "2017-01-16T07:29:41Z",
    "closed_at": "2017-01-17T12:47:53Z",
    "labels": [
      "question",
      "documentation",
      "html report",
      "websocket-server"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/625",
    "body": "Hello. When I run these codes , it runs with no error but it isnt refreshing new coming logs.\r\nWhat is the problem with my config?\r\nFirst:\r\n\r\n    /usr/local/bin/goaccess -f /data/goaccess/log.1 -o /var/www/html/log1.html --real-time-html --ws-url=192.168.1.2 --port=9926\r\nSecond:\r\n\r\n    /usr/local/bin/goaccess -f /data/goaccess/log.2 -o /var/www/html/log2.html --real-time-html --ws-url=192.168.1.2 --port=9927\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/625/comments",
    "author": "fahrettin89",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-01-16T16:23:31Z",
        "body": "To run multiple instances, you need to ensure the following:\r\n\r\n1. Run each instance on a different port `--port`.\r\n2. Different pipes (FIFOs) `--fifo-in=/path/in.1 --fifo-out=/path/out.1`.\r\n3. (Optionally) **IFF** you are using the on-disk storage, then you will need different path where the DB files are stored `--db-path=/path/instance1/`.\r\n\r\n**Examples**:\r\n\r\n    goaccess /prod/access.log -o /var/www/html/prod.html --real-time-html --ws-url=192.168.1.2 --port=7890 --fifo-in=/tmp/prod.in --fifo-out=/tmp/prod.out\r\n\r\nAND\r\n\r\n    goaccess /dev/access.log -o /var/www/html/dev.html --real-time-html --ws-url=192.168.1.2 --port=7891 --fifo-in=/tmp/dev.in --fifo-out=/tmp/dev.out\r\n\r\n**Note**:\r\n\r\nIssue #575 reported that `--fifo-out` and `--fifo-in` options were not taking the new params. It has been fixed. "
      },
      {
        "user": "fahrettin89",
        "created_at": "2017-01-17T07:37:25Z",
        "body": "Hello,\r\n\r\nThank you for your help. What do you mean by \"options were not taking new parameters\"? Is \"--port=\" new parameter? On last stable version,I run above commands and it didn't give any error but generated dev.html, it created prod.in and prod.out files with 0 bytes also not refreshing with new coming logs.\r\n\r\nI will build development version and try. And get back to you.\r\n\r\nI also run below command;\r\n\r\n    /usr/local/bin/goaccess -f /data/goaccess/log.1 -o /var/www/html/log1.html --ws-url=192.168.1.2 --port=7891 --html-report-title=Goaccess --ignore-panel=NOT_FOUND --ignore-panel=OS --ignore-panel=REFERRING_SITES --ignore-panel=STATUS_CODES"
      },
      {
        "user": "fahrettin89",
        "created_at": "2017-01-17T08:12:52Z",
        "body": "I build from dev version of goaccess and managed to run 2 real time html. Thank you for your support."
      },
      {
        "user": "allinurl",
        "created_at": "2017-01-17T12:47:53Z",
        "body": "Glad that worked. Stay tuned for the upcoming version."
      },
      {
        "user": "SeaMonkey82",
        "created_at": "2019-10-28T02:43:31Z",
        "body": "I'm able to run real-time for both of my sites individually, but when I try doing them at the same time using the instructions above, the second one just hangs at 'Parsing. . . [0] [0/s]'. CTRL+C won't stop the process either.\r\n\r\nHere are my commands:\r\n`zcat -f /var/log/apache2/www.site1.access.log.*.gz | goaccess /var/log/apache2/www.site1.access.log -a -d -o /var/www/html/site1.html --real-time-html --ignore-crawlers --ws-url=192.168.0.3 --port=7890 --fifo-in=/tmp/site1.in --fifo-out=/tmp/site1.out`\r\n\r\n`zcat -f /var/log/apache2/www.site2.access.log.*.gz | goaccess /var/log/apache2/www.site2.access.log -a -d -o /var/www/html/site2.html --real-time-html --ignore-crawlers --ws-url=192.168.0.3 --port=7891 --fifo-in=/tmp/site2.in --fifo-out=/tmp/site2.out`"
      },
      {
        "user": "allinurl",
        "created_at": "2019-10-28T13:50:07Z",
        "body": "@SeaMonkey82 I'm guessing you are using the on-disk storage. You will need different path where the DB files are stored `--db-path=/path/instance1/`."
      },
      {
        "user": "SeaMonkey82",
        "created_at": "2019-10-28T16:07:35Z",
        "body": "> @SeaMonkey82 I'm guessing you are using the on-disk storage. \r\n\r\nNope.  Neither in the commands nor the conf file.\r\n\r\n"
      },
      {
        "user": "karlicoss",
        "created_at": "2020-03-17T19:50:13Z",
        "body": "Had same issue while running goaccess (not even `--real-time-html`, just one-off htmls). Seems that it's indeed using on-disk storage, but that's the default (at least in Ubuntu?), so it's not obvious :)\r\nFixed by generating unique tmp dir in the wrapper script and passing to `--db-path` \r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2020-03-17T19:53:25Z",
        "body": "@karlicoss Thanks for sharing that. I'm very close to release the replacement for TC, so hopes this will be easier."
      }
    ]
  },
  {
    "number": 608,
    "title": "GoAccess counts log file again and again",
    "created_at": "2017-01-04T19:08:42Z",
    "closed_at": "2017-01-05T02:35:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/608",
    "body": "I have a problem with Goaccess 1.1.1 + Nginx and I can not solve it ..\r\n\r\nI want my statistics to be saved over the entire period (with keep db files)\r\n\r\nMy first command:\r\n\r\n    goaccess -e 127.0.0.1 -e 192.168.2.0-192.168.2.255 -f /var/log/nginx/proxy.log.1 -a -o /var/www/html/stats/stats.html --keep-db -files --db-path /root/goaccess_database/db\r\n\r\nMy second command: (also the command for the crontab)\r\n\r\n    goaccess -e 127.0.0.1 -e 192.168.2.0-192.168.2.255 -f /var/log/nginx/proxy.log -a -o /var/www/html/stats/stats.html --load-from-disk --keep -db-files --db-path /root/goaccess_database/db\r\n\r\nMy problem is every time the second command is executed, it counts the complete statistics and values from proxy.log. The statistics in stats.html double every time my cronjob runs? I dont get it..\r\n\r\nCan anyone pls help me?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/608/comments",
    "author": "m4ntic0r",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2017-01-04T19:18:58Z",
        "body": "The second command will append the content from `proxy.log` to the previously parsed `proxy.log.1` data. \r\n\r\nNow, if you are parsing the same log twice and using `--load-from-db` then it will duplicate the entries. This will be addressed in #334 "
      },
      {
        "user": "m4ntic0r",
        "created_at": "2017-01-05T00:10:19Z",
        "body": "ok thanks.\r\ni think i have now a solution for me.\r\n\r\ni run goaccess once a day via shell script and i have changed my nginx logrotate from weekly to daily.\r\nthe script is called in the nginx logrotate config after \"prerotate\".\r\ni think the \"sharedscripts\" parameter in logrotate config is important, too, so the script will only run one time.\r\n\r\nbefore logrotate and goaccess i copy the proxy.log daily to an archive as proxy_2017-01-05.log\r\nso even if there is something messed up i can recreate the stats."
      },
      {
        "user": "allinurl",
        "created_at": "2017-01-05T02:35:02Z",
        "body": "Glad that worked!\r\n\r\nStay tuned for the upcoming fix #334."
      }
    ]
  },
  {
    "number": 597,
    "title": "Correct date/time/log format for mysql-slow.log",
    "created_at": "2016-12-20T07:01:00Z",
    "closed_at": "2016-12-20T14:50:39Z",
    "labels": [
      "question",
      "log/date/time format"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/597",
    "body": "When I run this: `goaccess -f mysql-slow.log ` , I get following error: \r\n\r\n```\r\nGoAccess - version 1.0.2 - Nov  3 2016 15:46:39\r\nConfig file: /usr/local/etc/goaccess.conf\r\nFatal error has occurred\r\nError occured at: src/goaccess.c - main - 1230\r\nNothing valid to process. Verify your date/time/log format.\r\n```\r\n\r\nWhat would be the appropriate date/time/log format for mysql-slow.log ?",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/597/comments",
    "author": "towfiqpiash",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-12-20T14:50:39Z",
        "body": "GoAccess is a web log analysis tool, not a general data visualization tool. Take a look at netdata, it may offer what you are looking for."
      },
      {
        "user": "towfiqpiash",
        "created_at": "2016-12-20T17:50:13Z",
        "body": "Thanks for your suggestion "
      }
    ]
  },
  {
    "number": 596,
    "title": "Unable to output real-time-html",
    "created_at": "2016-12-20T02:28:32Z",
    "closed_at": "2016-12-24T04:47:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/596",
    "body": "use this command\r\n\r\n    # goaccess -f access.log -o /usr/share/nginx/www/rt.goaccess.io/report.html --real-time-html --ws-url=host \r\n\r\nand it appears\r\nParsing... [0] [0/s]\r\nwait for a long time",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/596/comments",
    "author": "unclecat",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-12-20T02:59:58Z",
        "body": "Can you please try parsing your log without outputting to stdout and see if that outputs some data to the terminal? i.e.,\r\n\r\n    goaccess -f access.log --log-format=COMBINED"
      },
      {
        "user": "allinurl",
        "created_at": "2016-12-24T04:47:04Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 592,
    "title": "goaccess: unrecognized option '--real-time-html'",
    "created_at": "2016-12-19T09:24:14Z",
    "closed_at": "2016-12-20T02:23:36Z",
    "labels": [
      "question",
      "html report"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/592",
    "body": " goaccess -f access.log -o /home/nginx-report.html --real-time-html --ws-url=localhost\r\nthen\r\ngoaccess: unrecognized option '--real-time-html'",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/592/comments",
    "author": "unclecat",
    "comments": [
      {
        "user": "unclecat",
        "created_at": "2016-12-19T09:25:38Z",
        "body": "cannot generate real time dashboard"
      },
      {
        "user": "allinurl",
        "created_at": "2016-12-19T13:34:06Z",
        "body": "Please make sure you are using the latest version to enable real-time data."
      }
    ]
  },
  {
    "number": 578,
    "title": "goaccess: unrecognized option '--enable-panel'",
    "created_at": "2016-11-29T11:06:08Z",
    "closed_at": "2016-12-07T13:05:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/578",
    "body": "I installed goaccess on centos 7 with yum but i want to enable visit times panel but when i try goaccess --enable-panel i get this : \r\n\r\n    goaccess: unrecognized option '--enable-panel'\r\n\r\nSo i don't have access to visit times panel config : `#ignore-panel VISIT_TIMES` is commented",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/578/comments",
    "author": "alxbob",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-11-29T12:50:36Z",
        "body": "Which version are you running? Also make sure you have a time specifier `%t` in your log-format and is matching your log entries. Otherwise, please attach your config file."
      },
      {
        "user": "allinurl",
        "created_at": "2016-12-07T13:05:33Z",
        "body": "Closing this. Feel free to reopen it if needed."
      }
    ]
  },
  {
    "number": 553,
    "title": "Is it possible to Export output in date vice",
    "created_at": "2016-10-25T08:50:16Z",
    "closed_at": "2016-10-25T13:46:53Z",
    "labels": [
      "duplicate",
      "enhancement",
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/553",
    "body": "HI\n\ni have a setup of goaccess generating logs of previous days by using cron job. so the output in goaccess is showing in a format as like starting from this month 1st to till previous day.\n\nis it possible to generate date vice  report from goaccess frontend? instead of generating from command line.\n\nRegards,\nBen\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/553/comments",
    "author": "bentech4u",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-10-25T11:57:35Z",
        "body": "If I follow correctly, you are trying to export a JSON report but you would like to filter by dates from the front end instead of the command line? \n"
      },
      {
        "user": "bentech4u",
        "created_at": "2016-10-25T12:37:12Z",
        "body": "yea, compared to that generating from command line is better with specific dates logs\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-10-25T13:46:53Z",
        "body": "Got it. Currently not possible, but issue **#117** will address this, it will be the next big update that GoAccess will get, both in the HTML side and the terminal side. Stay tuned!\n"
      },
      {
        "user": "bentech4u",
        "created_at": "2016-10-26T05:25:19Z",
        "body": "HI\n\nthanks for the update. \n\nplease let me know when the major release will release.\n\nRegards,\nBen\n"
      }
    ]
  },
  {
    "number": 551,
    "title": "goacces cron job not working",
    "created_at": "2016-10-20T17:14:43Z",
    "closed_at": "2016-10-24T13:42:01Z",
    "labels": [
      "question",
      "html report",
      "cron"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/551",
    "body": "Hello! If i run sh manually, output files was created and updated, but from cron job is not. How cat i fix it?\n\nmy `crontab`:\n\n```\n*/5 * * * * /home/monitoring/go_update.sh >> /home/monitoring/crontab.log\n```\n\nmy `go_update.sh`:\n\n```\n#!/bin/sh\necho \"start\"\nnow=$(date +\"%T\")\necho \"Current time : $now\"\nzcat /home/monitoring/logs-store/localway-prod-portal/localway-prod-portal.*.gz | goaccess -p /home/monitoring/.goaccessrc -a\necho \"finish\"\n```\n\n`cat crontab.log`:\n\n```\nstart\nCurrent time : 20:05:01\nfinish\n```\n\npart of `~/.goaccessrc`:\n\n```\noutput-format /home/monitoring/goaccess/index.html\noutput-format /home/monitoring/goaccess/status.json\n```\n\nThanx a lot!\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/551/comments",
    "author": "etomarat",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-10-20T17:24:00Z",
        "body": "Can you please try using absolute paths, e.g. (assuming goaccess is under: `/usr/bin`):\n\n```\nzcat /home/monitoring/logs-store/localway-prod-portal/localway-prod-portal.*.gz | /usr/bin/goaccess -p /home/monitoring/.goaccessrc -a\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-10-20T17:25:05Z",
        "body": "Also, make sure the script is executable. \n\n```\nchmod +x /home/monitoring/go_update.sh\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-10-24T13:42:01Z",
        "body": "Closing this. Feel free to reopen it if needed.\n"
      },
      {
        "user": "etomarat",
        "created_at": "2016-10-24T14:02:08Z",
        "body": "Thanx! Its work!\n"
      }
    ]
  },
  {
    "number": 548,
    "title": "Configuring custom log format with milliseconds resolution",
    "created_at": "2016-10-19T12:32:30Z",
    "closed_at": "2016-10-20T01:50:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/548",
    "body": "This is configuration in /etc/goaccess.conf:\r\n\r\n```\r\nlog-format %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" %^%L\r\ndate-format %d/%b/%Y\r\ntime-format %H:%M:%S\r\n```\r\n\r\n```\r\n10.180.115.175 - 0022222 [17/Oct/2016:06:47:21 +0800] \"GET /hjsdfjsd/test.git/info/refs?service=git-upload-pack HTTP/1.1\" 200 310 \"-\" \"git/1.9.0.msysgit.1\"0.401\r\n10.74.174.126 - - [17/Oct/2016:06:47:21 +0800] \"GET /ghgh/Service.git/info/refs?service=git-upload-pack HTTP/1.1\" 200 1432 \"-\" \"git/2.5.3.windows.1\"0.031\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/548/comments",
    "author": "asu126",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-10-19T13:33:38Z",
        "body": "This should work:\n\n```\n%h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"%T\n```\n"
      },
      {
        "user": "asu126",
        "created_at": "2016-10-20T01:09:56Z",
        "body": "That's ok,thanks !\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-10-20T01:50:33Z",
        "body": "Great,  closing this.\n"
      }
    ]
  },
  {
    "number": 533,
    "title": "Puzzled with custom nginx format",
    "created_at": "2016-10-05T16:24:30Z",
    "closed_at": "2016-10-06T13:29:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/533",
    "body": "Hi, I am totally puzzled why I always get \"no valid hits found\"\n\n```\n62.XXX.XXX.XXX - nginxCookie_www=VMgzClZLGttaiR6FAw2BAg==; nginxCookie_session=5deaf50a604c4eb3a651989508a295767d6e5f4a - 05/Oct/2016:06:53:12 +0200 - 200 - \"POST /api/FOO HTTP/1.1\" - \"-\" - \"Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko\" - \"-\"\n```\n\nand as format:\n\n```\n | Log Format - [c] to add/edit format         \n | %h - %^ - %d:%t - %s - %r - %^ - \\\"%u\\\" - %^\n | Date Format - [d] to add/edit format        \n | %d/%b/%Y                                                                              \n | Time Format - [t] to add/edit format        \n | %H:%M:%S %z                                 \n```\n\nI checked and retried and tried and rechecked a lot of variantions on the format strings. Any advice greatly appreciated!\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/533/comments",
    "author": "huehnerhose",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-10-05T16:33:42Z",
        "body": "Can I ask you which field is the size of the response (bytes)? or if you can post your web server's log format would be great. Thanks\n"
      },
      {
        "user": "huehnerhose",
        "created_at": "2016-10-06T06:09:49Z",
        "body": "I am afraid I don't have this field. Is it essential for goaccess to analyze the logs? I didn't see it in the documentation as required. (No doubt it would be a \"nice\" bit of information...)\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-10-06T11:53:57Z",
        "body": "It's not required, but handy :) This should work (feel free to replace `\"%R\"` with `%^` if it's not the referrer):\n\n```\n%h %^ %^ %^ %^ %d:%t %^ %^ %s %^ \"%r\" %^ \"%R\" %^ \"%u\"\n%d/%b/%Y\n%H:%M:%S\n```\n"
      },
      {
        "user": "huehnerhose",
        "created_at": "2016-10-06T12:48:32Z",
        "body": "ah great, this works! \nSo I'll take dashes has to be treated as \"fields\" from that. \n\nThanks!\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-10-06T13:29:23Z",
        "body": "Glad that worked — That's right, you could consider dashes as fields. However, it is possible to do some skipping like moving to the next char such as:\n\n```\n%h %^; %^ %^ %d:%t %^ %^ %s %^ \"%r\" %^ \"%R\" %^ \"%u\"\n```\n\nThat assumes your log format has always a `;` at that position.\n"
      }
    ]
  },
  {
    "number": 517,
    "title": "CSS",
    "created_at": "2016-09-08T11:21:43Z",
    "closed_at": "2016-11-05T16:19:12Z",
    "labels": [
      "question",
      "change"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/517",
    "body": "Agenda for a better CSS. \n\n**FF-ESR 45.3.0:**\n`mutating the [[Prototype]] of an object will cause your code to run very slowly; instead create the object with the correct initial [[Prototype]] value using Object.create        stats:1049:9847`\n\n**Safari 9.1.3:**\n`Unexpected CSS token: :     stats:8:45291`\n[...]`a:focus{text-decoration:none;background-color:transparent;background-image:none;filter:pro`[...]\n\n**Chrome  53.0.2785.89 (64-bit)**\n\n```\n**Remove unused CSS rules (758)**\n**758 rules (76%) of CSS not used by the current page.**\n**server.local/\n: 63% is not used by the current page.**\nclass^=\"fa-\"],[class*=\" fa-\"]\n.fa-user:before\n.fa-th-list:before\n.fa-gear:before\n.fa-file-o:before\n.fa-clock-o:before\n.fa-exclamation-triangle:before\n.fa-warning:before\n.fa-bar-chart-o:before\n.fa-external-link:before\n.fa-group:before\n.fa-users:before\n.fa-navicon:before\n.fa-reorder:before\n.fa-unsorted:before\n.fa-dashboard:before\n.fa-desktop:before\n.fa-circle-o:before\n.fa-code:before\n.fa-location-arrow:before\n.fa-file:before\n.fa-file-text:before\n.fa-google:before\n.fa-chrome:before\n**server.local/\n: 86% is not used by the current page.**\naudio,canvas,progress,video\naudio:not([controls])\nhidden],template\nabbr[title]\nb,strong\ndfn\nmark\nsub,sup\nsup\nsub\nimg\nfigure\nhr\npre\ncode,kbd,pre,samp\nbutton[disabled],html input[disabled]\ninput\ninput[type=\"checkbox\"],input[type=\"radio\"]\ninput[type=\"number\"]::-webkit-inner-spin-button,input[type=\"number\"]::-webkit-outer-spin-button\ninput[type=\"search\"]\ninput[type=\"search\"]::-webkit-search-cancel-button,input[type=\"search\"]::-webkit-search-decoration\nfieldset\nlegend\ntextarea\noptgroup\nabbr[title]:after\npre,blockquote\nimg\n.navbar\n.btn>.caret,.dropup>.btn>.caret\n.table-bordered th,.table-bordered td\nfigure\nimg\n.img-responsive\n.img-rounded\n.img-thumbnail\n.img-circle\nhr\n.sr-only\n.sr-only-focusable:active,.sr-only-focusable:focus\nrole=\"button\"]\nh2,.h2\nh6,.h6\np\n.lead\n.lead\nmark,.mark\n.text-left\n.text-justify\n.text-nowrap\n.text-lowercase\n.text-uppercase\n.text-capitalize\n.text-muted\n.text-primary\na.text-primary:hover,a.text-primary:focus\n.text-success\na.text-success:hover,a.text-success:focus\n.text-info\na.text-info:hover,a.text-info:focus\n.text-warning\na.text-warning:hover,a.text-warning:focus\n.text-danger\na.text-danger:hover,a.text-danger:focus\n.bg-primary\na.bg-primary:hover,a.bg-primary:focus\n.bg-success\na.bg-success:hover,a.bg-success:focus\n.bg-info\na.bg-info:hover,a.bg-info:focus\n.bg-warning\na.bg-warning:hover,a.bg-warning:focus\n.bg-danger\na.bg-danger:hover,a.bg-danger:focus\nul ul,ol ul,ul ol,ol ol\n.list-unstyled\n.list-inline\n.list-inline>li\ndl\ndt,dd\ndt\ndd\n.dl-horizontal dt\n.dl-horizontal dd\nabbr[title],abbr[data-original-title]\n.initialism\nblockquote\nblockquote p:last-child,blockquote ul:last-child,blockquote ol:last-child\nblockquote footer,blockquote small,blockquote .small\nblockquote footer:before,blockquote small:before,blockquote .small:before\n.blockquote-reverse,blockquote.pull-right\n.blockquote-reverse footer:before,blockquote.pull-right footer:before,.blockquote-reverse small:before,blockquote.pull-right small:before,.blockquote-reverse .small:before,blockquote.pull-right .small:before\n.blockquote-reverse footer:after,blockquote.pull-right footer:after,.blockquote-reverse small:after,blockquote.pull-right small:after,.blockquote-reverse .small:after,blockquote.pull-right .small:after\naddress\ncode,kbd,pre,samp\ncode\nkbd\nkbd kbd\npre\npre code\n.pre-scrollable\n.container-fluid\n.col-xs-1, .col-xs-2, .col-xs-3, .col-xs-4, .col-xs-5, .col-xs-6, .col-xs-7, .col-xs-8, .col-xs-9, .col-xs-10, .col-xs-11, .col-xs-12\n.col-xs-12\n.col-xs-11\n.col-xs-10\n.col-xs-9\n.col-xs-8\n.col-xs-7\n.col-xs-6\n.col-xs-5\n.col-xs-4\n.col-xs-3\n.col-xs-2\n.col-xs-1\n.col-xs-pull-12\n.col-xs-pull-11\n.col-xs-pull-10\n.col-xs-pull-9\n.col-xs-pull-8\n.col-xs-pull-7\n.col-xs-pull-6\n.col-xs-pull-5\n.col-xs-pull-4\n.col-xs-pull-3\n.col-xs-pull-2\n.col-xs-pull-1\n.col-xs-pull-0\n.col-xs-push-12\n.col-xs-push-11\n.col-xs-push-10\n.col-xs-push-9\n.col-xs-push-8\n.col-xs-push-7\n.col-xs-push-6\n.col-xs-push-5\n.col-xs-push-4\n.col-xs-push-3\n.col-xs-push-2\n.col-xs-push-1\n.col-xs-push-0\n.col-xs-offset-12\n.col-xs-offset-11\n.col-xs-offset-10\n.col-xs-offset-9\n.col-xs-offset-8\n.col-xs-offset-7\n.col-xs-offset-6\n.col-xs-offset-5\n.col-xs-offset-4\n.col-xs-offset-3\n.col-xs-offset-2\n.col-xs-offset-1\n.col-xs-offset-0\n.col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12\n.col-sm-12\n.col-sm-11\n.col-sm-10\n.col-sm-9\n.col-sm-8\n.col-sm-7\n.col-sm-6\n.col-sm-5\n.col-sm-4\n.col-sm-3\n.col-sm-2\n.col-sm-1\n.col-sm-pull-12\n.col-sm-pull-11\n.col-sm-pull-10\n.col-sm-pull-9\n.col-sm-pull-8\n.col-sm-pull-7\n.col-sm-pull-6\n.col-sm-pull-5\n.col-sm-pull-4\n.col-sm-pull-3\n.col-sm-pull-2\n.col-sm-pull-1\n.col-sm-pull-0\n.col-sm-push-12\n.col-sm-push-11\n.col-sm-push-10\n.col-sm-push-9\n.col-sm-push-8\n.col-sm-push-7\n.col-sm-push-6\n.col-sm-push-5\n.col-sm-push-4\n.col-sm-push-3\n.col-sm-push-2\n.col-sm-push-1\n.col-sm-push-0\n.col-sm-offset-12\n.col-sm-offset-11\n.col-sm-offset-10\n.col-sm-offset-9\n.col-sm-offset-8\n.col-sm-offset-7\n.col-sm-offset-6\n.col-sm-offset-5\n.col-sm-offset-4\n.col-sm-offset-3\n.col-sm-offset-2\n.col-sm-offset-1\n.col-sm-offset-0\n.col-md-11\n.col-md-10\n.col-md-9\n.col-md-8\n.col-md-7\n.col-md-6\n.col-md-5\n.col-md-4\n.col-md-3\n.col-md-1\n.col-md-pull-12\n.col-md-pull-11\n.col-md-pull-10\n.col-md-pull-9\n.col-md-pull-8\n.col-md-pull-7\n.col-md-pull-6\n.col-md-pull-5\n.col-md-pull-4\n.col-md-pull-3\n.col-md-pull-2\n.col-md-pull-1\n.col-md-pull-0\n.col-md-push-12\n.col-md-push-11\n.col-md-push-10\n.col-md-push-9\n.col-md-push-8\n.col-md-push-7\n.col-md-push-6\n.col-md-push-5\n.col-md-push-4\n.col-md-push-3\n.col-md-push-2\n.col-md-push-1\n.col-md-push-0\n.col-md-offset-12\n.col-md-offset-11\n.col-md-offset-10\n.col-md-offset-9\n.col-md-offset-8\n.col-md-offset-7\n.col-md-offset-6\n.col-md-offset-5\n.col-md-offset-4\n.col-md-offset-3\n.col-md-offset-2\n.col-md-offset-1\n.col-md-offset-0\n.col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12\n.col-lg-12\n.col-lg-11\n.col-lg-10\n.col-lg-9\n.col-lg-8\n.col-lg-7\n.col-lg-6\n.col-lg-5\n.col-lg-4\n.col-lg-3\n.col-lg-2\n.col-lg-1\n.col-lg-pull-12\n.col-lg-pull-11\n.col-lg-pull-10\n.col-lg-pull-9\n.col-lg-pull-8\n.col-lg-pull-7\n.col-lg-pull-6\n.col-lg-pull-5\n.col-lg-pull-4\n.col-lg-pull-3\n.col-lg-pull-2\n.col-lg-pull-1\n.col-lg-pull-0\n.col-lg-push-12\n.col-lg-push-11\n.col-lg-push-10\n.col-lg-push-9\n.col-lg-push-8\n.col-lg-push-7\n.col-lg-push-6\n.col-lg-push-5\n.col-lg-push-4\n.col-lg-push-3\n.col-lg-push-2\n.col-lg-push-1\n.col-lg-push-0\n.col-lg-offset-12\n.col-lg-offset-11\n.col-lg-offset-10\n.col-lg-offset-9\n.col-lg-offset-8\n.col-lg-offset-7\n.col-lg-offset-6\n.col-lg-offset-5\n.col-lg-offset-4\n.col-lg-offset-3\n.col-lg-offset-2\n.col-lg-offset-1\n.col-lg-offset-0\ncaption\n.table .table\n.table-condensed>thead>tr>th,.table-condensed>tbody>tr>th,.table-condensed>tfoot>tr>th,.table-condensed>thead>tr>td,.table-condensed>tbody>tr>td,.table-condensed>tfoot>tr>td\n.table-bordered\n.table-bordered>thead>tr>th,.table-bordered>tbody>tr>th,.table-bordered>tfoot>tr>th,.table-bordered>thead>tr>td,.table-bordered>tbody>tr>td,.table-bordered>tfoot>tr>td\n.table-bordered>thead>tr>th,.table-bordered>thead>tr>td\n.table-striped>tbody>tr:nth-of-type(odd)\ntable col[class*=\"col-\"]\ntable td[class*=\"col-\"],table th[class*=\"col-\"]\n.table>thead>tr>td.active,.table>tbody>tr>td.active,.table>tfoot>tr>td.active,.table>thead>tr>th.active,.table>tbody>tr>th.active,.table>tfoot>tr>th.active,.table>thead>tr.active>td,.table>tbody>tr.active>td,.table>tfoot>tr.active>td,.table>thead>tr.active>th,.table>tbody>tr.active>th,.table>tfoot>tr.active>th\n.table-hover>tbody>tr>td.active:hover,.table-hover>tbody>tr>th.active:hover,.table-hover>tbody>tr.active:hover>td,.table-hover>tbody>tr:hover>.active,.table-hover>tbody>tr.active:hover>th\n.table>thead>tr>td.success,.table>tbody>tr>td.success,.table>tfoot>tr>td.success,.table>thead>tr>th.success,.table>tbody>tr>th.success,.table>tfoot>tr>th.success,.table>thead>tr.success>td,.table>tbody>tr.success>td,.table>tfoot>tr.success>td,.table>thead>tr.success>th,.table>tbody>tr.success>th,.table>tfoot>tr.success>th\n.table-hover>tbody>tr>td.success:hover,.table-hover>tbody>tr>th.success:hover,.table-hover>tbody>tr.success:hover>td,.table-hover>tbody>tr:hover>.success,.table-hover>tbody>tr.success:hover>th\n.table>thead>tr>td.info,.table>tbody>tr>td.info,.table>tfoot>tr>td.info,.table>thead>tr>th.info,.table>tbody>tr>th.info,.table>tfoot>tr>th.info,.table>thead>tr.info>td,.table>tbody>tr.info>td,.table>tfoot>tr.info>td,.table>thead>tr.info>th,.table>tbody>tr.info>th,.table>tfoot>tr.info>th\n.table-hover>tbody>tr>td.info:hover,.table-hover>tbody>tr>th.info:hover,.table-hover>tbody>tr.info:hover>td,.table-hover>tbody>tr:hover>.info,.table-hover>tbody>tr.info:hover>th\n.table>thead>tr>td.warning,.table>tbody>tr>td.warning,.table>tfoot>tr>td.warning,.table>thead>tr>th.warning,.table>tbody>tr>th.warning,.table>tfoot>tr>th.warning,.table>thead>tr.warning>td,.table>tbody>tr.warning>td,.table>tfoot>tr.warning>td,.table>thead>tr.warning>th,.table>tbody>tr.warning>th,.table>tfoot>tr.warning>th\n.table-hover>tbody>tr>td.warning:hover,.table-hover>tbody>tr>th.warning:hover,.table-hover>tbody>tr.warning:hover>td,.table-hover>tbody>tr:hover>.warning,.table-hover>tbody>tr.warning:hover>th\n.table>thead>tr>td.danger,.table>tbody>tr>td.danger,.table>tfoot>tr>td.danger,.table>thead>tr>th.danger,.table>tbody>tr>th.danger,.table>tfoot>tr>th.danger,.table>thead>tr.danger>td,.table>tbody>tr.danger>td,.table>tfoot>tr.danger>td,.table>thead>tr.danger>th,.table>tbody>tr.danger>th,.table>tfoot>tr.danger>th\n.table-hover>tbody>tr>td.danger:hover,.table-hover>tbody>tr>th.danger:hover,.table-hover>tbody>tr.danger:hover>td,.table-hover>tbody>tr:hover>.danger,.table-hover>tbody>tr.danger:hover>th\n.table-responsive>.table-bordered\n.table-responsive>.table-bordered>thead>tr>th:first-child,.table-responsive>.table-bordered>tbody>tr>th:first-child,.table-responsive>.table-bordered>tfoot>tr>th:first-child,.table-responsive>.table-bordered>thead>tr>td:first-child,.table-responsive>.table-bordered>tbody>tr>td:first-child,.table-responsive>.table-bordered>tfoot>tr>td:first-child\n.table-responsive>.table-bordered>thead>tr>th:last-child,.table-responsive>.table-bordered>tbody>tr>th:last-child,.table-responsive>.table-bordered>tfoot>tr>th:last-child,.table-responsive>.table-bordered>thead>tr>td:last-child,.table-responsive>.table-bordered>tbody>tr>td:last-child,.table-responsive>.table-bordered>tfoot>tr>td:last-child\n.table-responsive>.table-bordered>tbody>tr:last-child>th,.table-responsive>.table-bordered>tfoot>tr:last-child>th,.table-responsive>.table-bordered>tbody>tr:last-child>td,.table-responsive>.table-bordered>tfoot>tr:last-child>td\nfieldset\nlegend\nlabel\ninput[type=\"search\"]\ninput[type=\"radio\"],input[type=\"checkbox\"]\ninput[type=\"file\"]\ninput[type=\"range\"]\nselect[multiple],select[size]\ninput[type=\"file\"]:focus,input[type=\"radio\"]:focus,input[type=\"checkbox\"]:focus\noutput\n.form-control\n.form-control:focus\n.form-control::-moz-placeholder\n.form-control:-ms-input-placeholder\n.form-control::-webkit-input-placeholder\n.form-control[disabled],.form-control[readonly],fieldset[disabled] .form-control\n.form-control[disabled],fieldset[disabled] .form-control\ntextarea.form-control\ninput[type=\"search\"]\ninput[type=\"date\"].form-control,input[type=\"time\"].form-control,input[type=\"datetime-local\"].form-control,input[type=\"month\"].form-control\ninput[type=\"date\"].input-sm,input[type=\"time\"].input-sm,input[type=\"datetime-local\"].input-sm,input[type=\"month\"].input-sm,.input-group-sm input[type=\"date\"],.input-group-sm input[type=\"time\"],.input-group-sm input[type=\"datetime-local\"],.input-group-sm input[type=\"month\"]\ninput[type=\"date\"].input-lg,input[type=\"time\"].input-lg,input[type=\"datetime-local\"].input-lg,input[type=\"month\"].input-lg,.input-group-lg input[type=\"date\"],.input-group-lg input[type=\"time\"],.input-group-lg input[type=\"datetime-local\"],.input-group-lg input[type=\"month\"]\n.radio,.checkbox\n.radio label,.checkbox label\n.radio input[type=\"radio\"],.radio-inline input[type=\"radio\"],.checkbox input[type=\"checkbox\"],.checkbox-inline input[type=\"checkbox\"]\n.radio+.radio,.checkbox+.checkbox\n.radio-inline,.checkbox-inline\n.radio-inline+.radio-inline,.checkbox-inline+.checkbox-inline\ninput[type=\"radio\"][disabled],input[type=\"checkbox\"][disabled],input[type=\"radio\"].disabled,input[type=\"checkbox\"].disabled,fieldset[disabled] input[type=\"radio\"],fieldset[disabled] input[type=\"checkbox\"]\n.radio-inline.disabled,.checkbox-inline.disabled,fieldset[disabled] .radio-inline,fieldset[disabled] .checkbox-inline\n.radio.disabled label,.checkbox.disabled label,fieldset[disabled] .radio label,fieldset[disabled] .checkbox label\n.form-control-static\n.form-control-static.input-lg,.form-control-static.input-sm\n.input-sm\nselect.input-sm\ntextarea.input-sm,select[multiple].input-sm\n.form-group-sm .form-control\n.form-group-sm select.form-control\n.form-group-sm textarea.form-control,.form-group-sm select[multiple].form-control\n.form-group-sm .form-control-static\n.input-lg\nselect.input-lg\ntextarea.input-lg,select[multiple].input-lg\n.form-group-lg .form-control\n.form-group-lg select.form-control\n.form-group-lg textarea.form-control,.form-group-lg select[multiple].form-control\n.form-group-lg .form-control-static\n.has-feedback\n.has-feedback .form-control\n.form-control-feedback\n.input-lg+.form-control-feedback,.input-group-lg+.form-control-feedback,.form-group-lg .form-control+.form-control-feedback\n.input-sm+.form-control-feedback,.input-group-sm+.form-control-feedback,.form-group-sm .form-control+.form-control-feedback\n.has-success .help-block,.has-success .control-label,.has-success .radio,.has-success .checkbox,.has-success .radio-inline,.has-success .checkbox-inline,.has-success.radio label,.has-success.checkbox label,.has-success.radio-inline label,.has-success.checkbox-inline label\n.has-success .form-control\n.has-success .form-control:focus\n.has-success .input-group-addon\n.has-success .form-control-feedback\n.has-warning .help-block,.has-warning .control-label,.has-warning .radio,.has-warning .checkbox,.has-warning .radio-inline,.has-warning .checkbox-inline,.has-warning.radio label,.has-warning.checkbox label,.has-warning.radio-inline label,.has-warning.checkbox-inline label\n.has-warning .form-control\n.has-warning .form-control:focus\n.has-warning .input-group-addon\n.has-warning .form-control-feedback\n.has-error .help-block,.has-error .control-label,.has-error .radio,.has-error .checkbox,.has-error .radio-inline,.has-error .checkbox-inline,.has-error.radio label,.has-error.checkbox label,.has-error.radio-inline label,.has-error.checkbox-inline label\n.has-error .form-control\n.has-error .form-control:focus\n.has-error .input-group-addon\n.has-error .form-control-feedback\n.has-feedback label~.form-control-feedback\n.has-feedback label.sr-only~.form-control-feedback\n.help-block\n.form-inline .form-group\n.form-inline .form-control\n.form-inline .form-control-static\n.form-inline .input-group\n.form-inline .input-group .input-group-addon,.form-inline .input-group .input-group-btn,.form-inline .input-group .form-control\n.form-inline .input-group>.form-control\n.form-inline .control-label\n.form-inline .radio,.form-inline .checkbox\n.form-inline .radio label,.form-inline .checkbox label\n.form-inline .radio input[type=\"radio\"],.form-inline .checkbox input[type=\"checkbox\"]\n.form-inline .has-feedback .form-control-feedback\n.form-horizontal .radio,.form-horizontal .checkbox,.form-horizontal .radio-inline,.form-horizontal .checkbox-inline\n.form-horizontal .radio,.form-horizontal .checkbox\n.form-horizontal .form-group\n.form-horizontal .control-label\n.form-horizontal .has-feedback .form-control-feedback\n.form-horizontal .form-group-lg .control-label\n.form-horizontal .form-group-sm .control-label\n.btn.disabled,.btn[disabled],fieldset[disabled] .btn\na.btn.disabled,fieldset[disabled] a.btn\n.btn-default.disabled,.btn-default[disabled],fieldset[disabled] .btn-default,.btn-default.disabled:hover,.btn-default[disabled]:hover,fieldset[disabled] .btn-default:hover,.btn-default.disabled:focus,.btn-default[disabled]:focus,fieldset[disabled] .btn-default:focus,.btn-default.disabled.focus,.btn-default[disabled].focus,fieldset[disabled] .btn-default.focus,.btn-default.disabled:active,.btn-default[disabled]:active,fieldset[disabled] .btn-default:active,.btn-default.disabled.active,.btn-default[disabled].active,fieldset[disabled] .btn-default.active\n.btn-default .badge\n.btn-primary\n.btn-primary:focus,.btn-primary.focus\n.btn-primary:hover\n.btn-primary:active,.btn-primary.active,.open>.dropdown-toggle.btn-primary\n.btn-primary:active:hover,.btn-primary.active:hover,.open>.dropdown-toggle.btn-primary:hover,.btn-primary:active:focus,.btn-primary.active:focus,.open>.dropdown-toggle.btn-primary:focus,.btn-primary:active.focus,.btn-primary.active.focus,.open>.dropdown-toggle.btn-primary.focus\n.btn-primary:active,.btn-primary.active,.open>.dropdown-toggle.btn-primary\n.btn-primary.disabled,.btn-primary[disabled],fieldset[disabled] .btn-primary,.btn-primary.disabled:hover,.btn-primary[disabled]:hover,fieldset[disabled] .btn-primary:hover,.btn-primary.disabled:focus,.btn-primary[disabled]:focus,fieldset[disabled] .btn-primary:focus,.btn-primary.disabled.focus,.btn-primary[disabled].focus,fieldset[disabled] .btn-primary.focus,.btn-primary.disabled:active,.btn-primary[disabled]:active,fieldset[disabled] .btn-primary:active,.btn-primary.disabled.active,.btn-primary[disabled].active,fieldset[disabled] .btn-primary.active\n.btn-primary .badge\n.btn-success\n.btn-success:focus,.btn-success.focus\n.btn-success:hover\n.btn-success:active,.btn-success.active,.open>.dropdown-toggle.btn-success\n.btn-success:active:hover,.btn-success.active:hover,.open>.dropdown-toggle.btn-success:hover,.btn-success:active:focus,.btn-success.active:focus,.open>.dropdown-toggle.btn-success:focus,.btn-success:active.focus,.btn-success.active.focus,.open>.dropdown-toggle.btn-success.focus\n.btn-success:active,.btn-success.active,.open>.dropdown-toggle.btn-success\n.btn-success.disabled,.btn-success[disabled],fieldset[disabled] .btn-success,.btn-success.disabled:hover,.btn-success[disabled]:hover,fieldset[disabled] .btn-success:hover,.btn-success.disabled:focus,.btn-success[disabled]:focus,fieldset[disabled] .btn-success:focus,.btn-success.disabled.focus,.btn-success[disabled].focus,fieldset[disabled] .btn-success.focus,.btn-success.disabled:active,.btn-success[disabled]:active,fieldset[disabled] .btn-success:active,.btn-success.disabled.active,.btn-success[disabled].active,fieldset[disabled] .btn-success.active\n.btn-success .badge\n.btn-info\n.btn-info:focus,.btn-info.focus\n.btn-info:hover\n.btn-info:active,.btn-info.active,.open>.dropdown-toggle.btn-info\n.btn-info:active:hover,.btn-info.active:hover,.open>.dropdown-toggle.btn-info:hover,.btn-info:active:focus,.btn-info.active:focus,.open>.dropdown-toggle.btn-info:focus,.btn-info:active.focus,.btn-info.active.focus,.open>.dropdown-toggle.btn-info.focus\n.btn-info:active,.btn-info.active,.open>.dropdown-toggle.btn-info\n.btn-info.disabled,.btn-info[disabled],fieldset[disabled] .btn-info,.btn-info.disabled:hover,.btn-info[disabled]:hover,fieldset[disabled] .btn-info:hover,.btn-info.disabled:focus,.btn-info[disabled]:focus,fieldset[disabled] .btn-info:focus,.btn-info.disabled.focus,.btn-info[disabled].focus,fieldset[disabled] .btn-info.focus,.btn-info.disabled:active,.btn-info[disabled]:active,fieldset[disabled] .btn-info:active,.btn-info.disabled.active,.btn-info[disabled].active,fieldset[disabled] .btn-info.active\n.btn-info .badge\n.btn-warning\n.btn-warning:focus,.btn-warning.focus\n.btn-warning:hover\n.btn-warning:active,.btn-warning.active,.open>.dropdown-toggle.btn-warning\n.btn-warning:active:hover,.btn-warning.active:hover,.open>.dropdown-toggle.btn-warning:hover,.btn-warning:active:focus,.btn-warning.active:focus,.open>.dropdown-toggle.btn-warning:focus,.btn-warning:active.focus,.btn-warning.active.focus,.open>.dropdown-toggle.btn-warning.focus\n.btn-warning:active,.btn-warning.active,.open>.dropdown-toggle.btn-warning\n.btn-warning.disabled,.btn-warning[disabled],fieldset[disabled] .btn-warning,.btn-warning.disabled:hover,.btn-warning[disabled]:hover,fieldset[disabled] .btn-warning:hover,.btn-warning.disabled:focus,.btn-warning[disabled]:focus,fieldset[disabled] .btn-warning:focus,.btn-warning.disabled.focus,.btn-warning[disabled].focus,fieldset[disabled] .btn-warning.focus,.btn-warning.disabled:active,.btn-warning[disabled]:active,fieldset[disabled] .btn-warning:active,.btn-warning.disabled.active,.btn-warning[disabled].active,fieldset[disabled] .btn-warning.active\n.btn-warning .badge\n.btn-danger\n.btn-danger:focus,.btn-danger.focus\n.btn-danger:hover\n.btn-danger:active,.btn-danger.active,.open>.dropdown-toggle.btn-danger\n.btn-danger:active:hover,.btn-danger.active:hover,.open>.dropdown-toggle.btn-danger:hover,.btn-danger:active:focus,.btn-danger.active:focus,.open>.dropdown-toggle.btn-danger:focus,.btn-danger:active.focus,.btn-danger.active.focus,.open>.dropdown-toggle.btn-danger.focus\n.btn-danger:active,.btn-danger.active,.open>.dropdown-toggle.btn-danger\n.btn-danger.disabled,.btn-danger[disabled],fieldset[disabled] .btn-danger,.btn-danger.disabled:hover,.btn-danger[disabled]:hover,fieldset[disabled] .btn-danger:hover,.btn-danger.disabled:focus,.btn-danger[disabled]:focus,fieldset[disabled] .btn-danger:focus,.btn-danger.disabled.focus,.btn-danger[disabled].focus,fieldset[disabled] .btn-danger.focus,.btn-danger.disabled:active,.btn-danger[disabled]:active,fieldset[disabled] .btn-danger:active,.btn-danger.disabled.active,.btn-danger[disabled].active,fieldset[disabled] .btn-danger.active\n.btn-danger .badge\n.btn-link\n.btn-link,.btn-link:active,.btn-link.active,.btn-link[disabled],fieldset[disabled] .btn-link\n.btn-link,.btn-link:hover,.btn-link:focus,.btn-link:active\n.btn-link:hover,.btn-link:focus\n.btn-link[disabled]:hover,fieldset[disabled] .btn-link:hover,.btn-link[disabled]:focus,fieldset[disabled] .btn-link:focus\n.btn-lg,.btn-group-lg>.btn\n.btn-xs,.btn-group-xs>.btn\n.btn-block\n.btn-block+.btn-block\ninput[type=\"submit\"].btn-block,input[type=\"reset\"].btn-block,input[type=\"button\"].btn-block\n.caret\n.dropdown-menu.pull-right\n.dropdown-menu .divider\n.dropdown-menu>.active>a,.dropdown-menu>.active>a:hover,.dropdown-menu>.active>a:focus\n.dropdown-menu>.disabled>a,.dropdown-menu>.disabled>a:hover,.dropdown-menu>.disabled>a:focus\n.dropdown-menu>.disabled>a:hover,.dropdown-menu>.disabled>a:focus\n.open>.dropdown-menu\n.open>a\n.dropdown-menu-left\n.dropdown-backdrop\n.pull-right>.dropdown-menu\n.dropup .caret,.navbar-fixed-bottom .dropdown .caret\n.dropup .dropdown-menu,.navbar-fixed-bottom .dropdown .dropdown-menu\n.navbar-right .dropdown-menu\n.navbar-right .dropdown-menu-left\n.btn-group,.btn-group-vertical\n.btn-group>.btn,.btn-group-vertical>.btn\n.btn-group>.btn:hover,.btn-group-vertical>.btn:hover,.btn-group>.btn:focus,.btn-group-vertical>.btn:focus,.btn-group>.btn:active,.btn-group-vertical>.btn:active,.btn-group>.btn.active,.btn-group-vertical>.btn.active\n.btn-group .btn+.btn,.btn-group .btn+.btn-group,.btn-group .btn-group+.btn,.btn-group .btn-group+.btn-group\n.btn-toolbar\n.btn-toolbar .btn,.btn-toolbar .btn-group,.btn-toolbar .input-group\n.btn-toolbar>.btn,.btn-toolbar>.btn-group,.btn-toolbar>.input-group\n.btn-group>.btn:not(:first-child):not(:last-child):not(.dropdown-toggle)\n.btn-group>.btn:first-child\n.btn-group>.btn:first-child:not(:last-child):not(.dropdown-toggle)\n.btn-group>.btn:last-child:not(:first-child),.btn-group>.dropdown-toggle:not(:first-child)\n.btn-group>.btn-group\n.btn-group>.btn-group:not(:first-child):not(:last-child)>.btn\n.btn-group>.btn-group:first-child:not(:last-child)>.btn:last-child,.btn-group>.btn-group:first-child:not(:last-child)>.dropdown-toggle\n.btn-group>.btn-group:last-child:not(:first-child)>.btn:first-child\n.btn-group .dropdown-toggle:active,.btn-group.open .dropdown-toggle\n.btn-group>.btn+.dropdown-toggle\n.btn-group>.btn-lg+.dropdown-toggle\n.btn-group.open .dropdown-toggle\n.btn-group.open .dropdown-toggle.btn-link\n.btn .caret\n.btn-lg .caret\n.dropup .btn-lg .caret\n.btn-group-vertical>.btn,.btn-group-vertical>.btn-group,.btn-group-vertical>.btn-group>.btn\n.btn-group-vertical>.btn-group>.btn\n.btn-group-vertical>.btn+.btn,.btn-group-vertical>.btn+.btn-group,.btn-group-vertical>.btn-group+.btn,.btn-group-vertical>.btn-group+.btn-group\n.btn-group-vertical>.btn:not(:first-child):not(:last-child)\n.btn-group-vertical>.btn:first-child:not(:last-child)\n.btn-group-vertical>.btn:last-child:not(:first-child)\n.btn-group-vertical>.btn-group:not(:first-child):not(:last-child)>.btn\n.btn-group-vertical>.btn-group:first-child:not(:last-child)>.btn:last-child,.btn-group-vertical>.btn-group:first-child:not(:last-child)>.dropdown-toggle\n.btn-group-vertical>.btn-group:last-child:not(:first-child)>.btn:first-child\n.btn-group-justified\n.btn-group-justified>.btn,.btn-group-justified>.btn-group\n.btn-group-justified>.btn-group .btn\n.btn-group-justified>.btn-group .dropdown-menu\ndata-toggle=\"buttons\"]>.btn input[type=\"radio\"],[data-toggle=\"buttons\"]>.btn-group>.btn input[type=\"radio\"],[data-toggle=\"buttons\"]>.btn input[type=\"checkbox\"],[data-toggle=\"buttons\"]>.btn-group>.btn input[type=\"checkbox\"]\n.input-group\n.input-group[class*=\"col-\"]\n.input-group .form-control\n.input-group-lg>.form-control,.input-group-lg>.input-group-addon,.input-group-lg>.input-group-btn>.btn\nselect.input-group-lg>.form-control,select.input-group-lg>.input-group-addon,select.input-group-lg>.input-group-btn>.btn\ntextarea.input-group-lg>.form-control,textarea.input-group-lg>.input-group-addon,textarea.input-group-lg>.input-group-btn>.btn,select[multiple].input-group-lg>.form-control,select[multiple].input-group-lg>.input-group-addon,select[multiple].input-group-lg>.input-group-btn>.btn\n.input-group-sm>.form-control,.input-group-sm>.input-group-addon,.input-group-sm>.input-group-btn>.btn\nselect.input-group-sm>.form-control,select.input-group-sm>.input-group-addon,select.input-group-sm>.input-group-btn>.btn\ntextarea.input-group-sm>.form-control,textarea.input-group-sm>.input-group-addon,textarea.input-group-sm>.input-group-btn>.btn,select[multiple].input-group-sm>.form-control,select[multiple].input-group-sm>.input-group-addon,select[multiple].input-group-sm>.input-group-btn>.btn\n.input-group-addon,.input-group-btn,.input-group .form-control\n.input-group-addon:not(:first-child):not(:last-child),.input-group-btn:not(:first-child):not(:last-child),.input-group .form-control:not(:first-child):not(:last-child)\n.input-group-addon,.input-group-btn\n.input-group-addon\n.input-group-addon.input-sm\n.input-group-addon.input-lg\n.input-group-addon input[type=\"radio\"],.input-group-addon input[type=\"checkbox\"]\n.input-group .form-control:first-child,.input-group-addon:first-child,.input-group-btn:first-child>.btn,.input-group-btn:first-child>.btn-group>.btn,.input-group-btn:first-child>.dropdown-toggle,.input-group-btn:last-child>.btn:not(:last-child):not(.dropdown-toggle),.input-group-btn:last-child>.btn-group:not(:last-child)>.btn\n.input-group-addon:first-child\n.input-group .form-control:last-child,.input-group-addon:last-child,.input-group-btn:last-child>.btn,.input-group-btn:last-child>.btn-group>.btn,.input-group-btn:last-child>.dropdown-toggle,.input-group-btn:first-child>.btn:not(:first-child),.input-group-btn:first-child>.btn-group:not(:first-child)>.btn\n.input-group-addon:last-child\n.input-group-btn\n.input-group-btn>.btn\n.input-group-btn>.btn+.btn\n.input-group-btn>.btn:hover,.input-group-btn>.btn:focus,.input-group-btn>.btn:active\n.input-group-btn:first-child>.btn,.input-group-btn:first-child>.btn-group\n.input-group-btn:last-child>.btn,.input-group-btn:last-child>.btn-group\n.breadcrumb\n.breadcrumb>li\n.breadcrumb>li+li:before\n.breadcrumb>.active\n.pagination>.active>a,.pagination>.active>span,.pagination>.active>a:hover,.pagination>.active>span:hover,.pagination>.active>a:focus,.pagination>.active>span:focus\n.pagination-lg>li>a,.pagination-lg>li>span\n.pagination-lg>li:first-child>a,.pagination-lg>li:first-child>span\n.pagination-lg>li:last-child>a,.pagination-lg>li:last-child>span\n.pager\n.pager li\n.pager li>a,.pager li>span\n.pager li>a:hover,.pager li>a:focus\n.pager .next>a,.pager .next>span\n.pager .previous>a,.pager .previous>span\n.pager .disabled>a,.pager .disabled>a:hover,.pager .disabled>a:focus,.pager .disabled>span\na.label:hover,a.label:focus\n.btn .label\n.label-default\n.label-default[href]:hover,.label-default[href]:focus\n.label-primary\n.label-primary[href]:hover,.label-primary[href]:focus\n.label-success\n.label-success[href]:hover,.label-success[href]:focus\n.label-info[href]:hover,.label-info[href]:focus\n.label-warning\n.label-warning[href]:hover,.label-warning[href]:focus\n.label-danger\n.label-danger[href]:hover,.label-danger[href]:focus\n.badge\n.badge:empty\n.btn .badge\n.btn-xs .badge,.btn-group-xs>.btn .badge\na.badge:hover,a.badge:focus\n.list-group-item.active>.badge,.nav-pills>.active>a>.badge\n.list-group-item>.badge\n.list-group-item>.badge+.badge\n.nav-pills>li>a>.badge\n.alert\n.alert h4\n.alert .alert-link\n.alert>p,.alert>ul\n.alert>p+p\n.alert-dismissable,.alert-dismissible\n.alert-dismissable .close,.alert-dismissible .close\n.alert-success\n.alert-success hr\n.alert-success .alert-link\n.alert-info\n.alert-info hr\n.alert-info .alert-link\n.alert-warning\n.alert-warning hr\n.alert-warning .alert-link\n.alert-danger\n.alert-danger hr\n.alert-danger .alert-link\n.modal-open\n.modal\n.modal.fade .modal-dialog\n.modal.in .modal-dialog\n.modal-open .modal\n.modal-dialog\n.modal-content\n.modal-backdrop\n.modal-backdrop.fade\n.modal-backdrop.in\n.modal-header\n.modal-header .close\n.modal-title\n.modal-body\n.modal-footer\n.modal-footer .btn+.btn\n.modal-footer .btn-group .btn+.btn\n.modal-footer .btn-block+.btn-block\n.modal-scrollbar-measure\n.modal-dialog\n.modal-content\n.modal-sm\n.modal-lg\n.center-block\n.show\n.invisible\n.text-hide\n.hidden\n.affix\n.visible-xs-block,.visible-xs-inline,.visible-xs-inline-block,.visible-sm-block,.visible-sm-inline,.visible-sm-inline-block,.visible-md-block,.visible-md-inline,.visible-md-inline-block,.visible-lg-block,.visible-lg-inline,.visible-lg-inline-block\ntable.visible-xs\ntr.visible-xs\nth.visible-xs,td.visible-xs\n.visible-xs-block\n.visible-xs-inline\n.visible-xs-inline-block\ntable.visible-sm\ntr.visible-sm\nth.visible-sm,td.visible-sm\n.visible-sm-block\n.visible-sm-inline\n.visible-sm-inline-block\n.visible-md\ntable.visible-md\ntr.visible-md\nth.visible-md,td.visible-md\n.visible-md-block\n.visible-md-inline\n.visible-md-inline-block\n.visible-lg\ntable.visible-lg\ntr.visible-lg\nth.visible-lg,td.visible-lg\n.visible-lg-block\n.visible-lg-inline\n.visible-lg-inline-block\n.visible-print\n.visible-print\ntable.visible-print\ntr.visible-print\nth.visible-print,td.visible-print\n.visible-print-block\n.visible-print-block\n.visible-print-inline\n.visible-print-inline\n.visible-print-inline-block\n.visible-print-inline-block\n.hidden-print\n**server.local/\n: 34% is not used by the current page.**\nnav header\nnav header a\nnav header a:hover\nnav.active\nnav:hover ~ #content\nnav.active .nav-bars, nav.active .nav-gears, nav.active .nav-ws-status\n.nav-ws-status.connected\nnav li a\nnav.active li a\nnav li a:hover, nav li.active a\nnav ul\nnav h3\n.row-offcanvas-left\n.row-offcanvas-right .sidebar-offcanvas\n.row-offcanvas-left .sidebar-offcanvas\n.row-offcanvas-right.active\n.row-offcanvas-left.active\n.sidebar-offcanvas\nfrom\nto\n.wrap-panels table tbody.tbody-data tr.\n.wrap-panels table tbody.tbody-data tr.child td:nth-child(1), .wrap-panels table tbody.tbody-data tr.child td:nth-child(2)\n.perpage-wrap\n.perpage-wrap a\n.perpage-wrap a.active\n.chart-tooltip\n.chart-tooltip tr\n.chart-tooltip th\n.chart-tooltip td\n.chart-tooltip td > span\n.chart-tooltip td.value\n.chart-tooltip .blue\n.chart-tooltip .red\n.dark .wrap-panels > div > table\n.dark.blue .chart-tooltip\nhtml.dark.gray, .dark.gray body\n.dark.gray .container\n.dark.gray .page-header\n.dark.gray .label-info\n.dark.gray nav\n.dark.gray div.wrap-general, .dark.gray div.wrap-panels > div\n.dark.gray .wrap-panels table tbody.tbody-meta\n.dark.gray .wrap-panels table tbody.tbody-data tr.shaded\n.dark.gray .gray\n.dark.gray .grid-module\n.dark.gray .btn-default\n.dark.gray .btn-default:active, .dark.gray .btn-default:hover, .dark.gray .btn-default.active, .dark.gray .open>.dropdown-toggle.btn-default\n.dark.gray .pagination>.disabled>a, .dark.gray .pagination>.disabled>a:hover, .dark.gray .pagination>.disabled>a:focus\n.dark.gray .pagination>li>a\n.dark.gray .pagination>li>a:hover, .dark.gray .pagination>li>a:active, .dark.gray .pagination>li>a:focus\n.dark.gray .dropdown-menu>li>a\n.dark.gray .dropdown-menu>li>a:hover, .dark.gray .dropdown-menu>li>a:focus\n.dark.gray .dropdown-menu\n.dark.gray::-webkit-scrollbar-track, .dark.gray .table-responsive::-webkit-scrollbar-track\n.dark.gray::-webkit-scrollbar, .dark.gray .table-responsive::-webkit-scrollbar\n.dark.gray::-webkit-scrollbar-thumb, .dark.gray .table-responsive::-webkit-scrollbar-thumb\n.dark.gray .chart-tooltip\n.dark.gray .report-title\n.dark .chart-tooltip th\n.dark .chart-tooltip tr\n\n```\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/517/comments",
    "author": "hdatma",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-09-09T00:20:59Z",
        "body": "Must of these are bootstrap styles or part of D3. Actually the bootstrap styles are part of a custom build specific to goaccess. Some of the styles listed above are used upon hovering, toggling stuff up, e.g., theme, chart tooltip, etc.\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-11-05T16:19:12Z",
        "body": "Updated bootstrap CSS using a custom build to minimize output file size. This will deploy on the upcoming version.\n"
      }
    ]
  },
  {
    "number": 506,
    "title": "merging log files across load-balanced webservers",
    "created_at": "2016-09-01T12:34:14Z",
    "closed_at": "2016-09-02T14:17:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/506",
    "body": "Is goaccess intelligent enough to be able to merge access logs across multiple load-balanced web servers?  I tried pipping over 1GB of logs across 8 web servers to it and it ran over 24 hours and didn't export an html report, the \"number/s\" just slowly decreased... Not sure if that was the right thing to do.  Or should I just generate 8 reports and then add them all up to get a total...?\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/506/comments",
    "author": "clueo8",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-09-01T13:41:44Z",
        "body": "goaccess will merge all data logs that you pipe into it and it will output one report out of the whole dataset. e.g.,\n\n```\n# zcat -f access.log* | goaccess\n```\n\nCan you please post how you are running goaccess and how you are feeding the logs to it? Depending on your machine, but 1GB log should go pretty fast.\n"
      },
      {
        "user": "clueo8",
        "created_at": "2016-09-01T14:10:48Z",
        "body": "I was cd'ed into a parent folder which contained sub-folders (one for each server; containing its access logs within) and then ran this from the parent folder:\n\n`zcat */access.log* | goaccess -o ~/report.html`\n\nNot sure if the first \"*\" caused any issues with it; I did that so that it would go into the sub folder... Each server had around 100 log files in it's sub-folder...\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-09-01T14:31:06Z",
        "body": "I believe `zcat` won't be able to do that (haven't tested), however, I'd try this, it should work:\n\n```\nfind . -type f -name \"*.log\" -exec cat {} + | goaccess --log-format=VCOMBINED -o ~/report.html\n```\n\nassumes the following structure\n\n```\n.\n├── server1/\n│   └── access.log\n├── server2/\n│   └── access.log\n├── server3/\n│   └── access.log\n└── server4/\n    └── access.log\n```\n"
      },
      {
        "user": "clueo8",
        "created_at": "2016-09-02T14:17:58Z",
        "body": "I believe that will work, but my logs were so large, it just was taking forever, thanks!\n"
      }
    ]
  },
  {
    "number": 504,
    "title": "Add a oneshot option",
    "created_at": "2016-08-28T21:23:49Z",
    "closed_at": "2016-08-28T21:25:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/504",
    "body": "Hi,\n\nI want replace my awstats with this super cool tool. We have many virtual hosts and I don't have the ressource to run goaccess multiple times. \n\nIf I write all vhosts to one log, I can not filter the stats by one virtual hosts. \n\nIts posible to run goaccess with oneshot to generate an html file? So I can run this tool cron-like like awstats until the virtual host filter is there.\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/504/comments",
    "author": "jkroepke",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-08-28T22:12:57Z",
        "body": "It is possible to generate an html file in one shot and deduce some stats from the vhost panel. However, if you are looking to get one full report per vhost, then you will need to parse one by one. As you said, this should be covered when #117 is implemented.\n"
      }
    ]
  },
  {
    "number": 493,
    "title": "Invalid line in JSON output",
    "created_at": "2016-08-15T11:40:19Z",
    "closed_at": "2016-08-15T23:36:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/493",
    "body": "my JSON outputs have \"Parsing... [102] [0/s]\" in the beginning of the file. Is there anyway to get rid of that.\n(Server Ubuntu 15.04/NGINX)\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/493/comments",
    "author": "mihitha",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-08-15T15:03:39Z",
        "body": "Y may use `--no-progress`. You can find the details on the man page.\n"
      },
      {
        "user": "mihitha",
        "created_at": "2016-08-15T23:36:44Z",
        "body": "It Worked. Thanks a lot for your quick response.\n"
      }
    ]
  },
  {
    "number": 488,
    "title": "Log format, a headbreaker",
    "created_at": "2016-08-05T13:56:54Z",
    "closed_at": "2016-08-05T14:35:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/488",
    "body": "Hi,\n\nGiven the following config:\n`time-format %H:%M:%S %z`\n`date-format %d/%b/%Y`\n`log-format %h %d:%t \"%r\" %s %b %v \"%u\"`\n\nAnd the following log line:\n\n> 81.71.121.51 05/Aug/2016:15:37:28 +0200 \"GET / HTTP/2.0\" 200 1672 mydomain.nl \"Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36\"\n\nWhat is wrong with the log format? Not seeing what I've defined wrong here. Using latest stable on debian. It gives me the message \"Nothing valid to process. Verify your date/time/log format.\"\n\nThanks for your effort!\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/488/comments",
    "author": "martijndeb",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-08-05T14:22:13Z",
        "body": "Great question. The parser looks for the next character after `%t`, since it's a space, then it cuts of the time before the timezone (e.g., `15:37:28`). Usually you can do this if you have a square bracket or some unique identifier, for example:\n\n```\n81.71.121.51 [05/Aug/2016:15:37:28 +0200]\n```\n\nYou could use `[%d:%t]` and have `%z` in your time-format variable.\n\nIn your case, please try this:\n\n```\nlog-format %h %d:%t %^ \"%r\" %s %b %v \"%u\"\ndate-format %d/%b/%Y\ntime-format %T\n```\n"
      },
      {
        "user": "martijndeb",
        "created_at": "2016-08-05T14:35:36Z",
        "body": "That works for me, thanks. I'll change up the params as well, using brackets is a bit nicer.\n"
      }
    ]
  },
  {
    "number": 479,
    "title": "What's the meaning of \"Processed Time\"?",
    "created_at": "2016-07-26T10:11:31Z",
    "closed_at": "2016-07-27T01:19:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/479",
    "body": "Hi,\n   about the html file,what's the meaning of \"Processed Time\"?\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/479/comments",
    "author": "weiboyiyou",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-07-26T12:19:56Z",
        "body": "The amount of time it took to parse and process the log.\n"
      },
      {
        "user": "weiboyiyou",
        "created_at": "2016-07-27T01:19:42Z",
        "body": "ok,thank you so much.\n"
      }
    ]
  },
  {
    "number": 470,
    "title": "Error parsing log (wrong hostname)",
    "created_at": "2016-07-12T13:21:26Z",
    "closed_at": "2016-07-12T15:02:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/470",
    "body": "Hello. \nI have a problem with the goaccess. While parsing, I get the message:\n\n```\nGoAccess - version 1.0.2 - Jul 11 2016 10:36:18\nConfig file: /usr/local/etc/goaccess.conf\n\nFatal error has occurred\nError occured at: src/goaccess.c - main - 1230\nNothing valid to process. Verify your date/time/log format.\n```\n\nI determined that the problem is this entry\n`ec2-54-206-80-6.ap-southeast-2.compute.amazonaws.com - - [11/Jul/2016:20:36:22 +0200] \"GET / HTTP/1.1\" 200 2282 \"\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.102 Safari/537.36\"`\n\nWhen `ec2-54-206-80-6.ap-southeast-2.compute.amazonaws.com` change to a different host address GoAccess working properly.\nAny ideas?\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/470/comments",
    "author": "pawelrosada",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-07-12T14:02:28Z",
        "body": "Hello,\n\nGoAccess requires a valid IPv4/6 for the `%h` specifier. If you are resolving the ip upon logging the request, then you would need to leave the IP as it is and set goaccess to resolve it instead.\n"
      },
      {
        "user": "pawelrosada",
        "created_at": "2016-07-12T14:17:07Z",
        "body": "I do not understand what I must do to parse this log :/ Such options should I use ?\n-a? Or I think bad?\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-07-12T14:20:54Z",
        "body": "If your log doesn't have a valid IPv4/6, then you can't parse it with goaccess. \n\nIf you want to parse it with goaccess, you will need to disable hostname lookups in your web server config options (assuming that's the case).\n"
      },
      {
        "user": "pawelrosada",
        "created_at": "2016-07-12T15:02:20Z",
        "body": "Ok, now I understand. Thanks for help ;)\n"
      },
      {
        "user": "cmaas",
        "created_at": "2017-05-30T07:44:52Z",
        "body": "@allinurl\r\n> If you want to parse it with goaccess, you will need to disable hostname lookups in your web server config options (assuming that's the case).\r\n\r\nThat is extremely unfortunate for German users. By privacy law, most German hosters disable logging of the IP address and just log a hostname given by the ISP, for example `p5XDA2268.dip0.t-ipconnect.de`. It might be silly, but a German webhoster is basically not allowed to log the actual IP address of website visitors.\r\n\r\nAny chance to make GoAccess' `%h` match a non-IP hostname in the future?"
      },
      {
        "user": "allinurl",
        "created_at": "2017-05-30T11:40:33Z",
        "body": "@cmaas Interesting. Before I make some changes, do you know what's displayed in the log when unable to resolve the IP? I'm curious about this so goaccess can associate somehow the client with a date/time and the user agent."
      },
      {
        "user": "cmaas",
        "created_at": "2017-05-30T11:55:23Z",
        "body": "@allinurl From what I see in my logs: It seems to default to IPv4 addresses apparently, if there's no hostname. I also looked into this a bit more. It's not at easy as I thought it was. Logging the hostname instead of the IP is one way to semi-anonymize visitors. But apparently, many services just set parts of the IP to 0, like so `46.124.0.0`. This makes identification of unique visitors probably difficult or almost impossible.\r\n\r\nThe question would be: Say, there's only a hostname, why does GoAccess require an actual IP address instead of just a string?"
      },
      {
        "user": "allinurl",
        "created_at": "2017-06-04T17:40:07Z",
        "body": "Was looking at this, and I think it would be safe to have some option such as `--permissive-clients`which would allow a string as client instead of a valid IP. \r\n\r\nThere's no reason as to why goaccess uses an IP other than to identify unique visitors. Though, if we add this `--permissive-clients` option, then it's possible that some of the unique counts won't be as accurate since two clients can be on the same range, e.g., 46.124.0.0 = 46.124.12.12, 46.124.10.3."
      },
      {
        "user": "maltris",
        "created_at": "2024-05-15T17:47:35Z",
        "body": "@allinurl I was searching to parse logs that have no IP information at all. And while there could be a workaround to just add any valid ip to the logs, that feature would be actually really cool to have. "
      },
      {
        "user": "allinurl",
        "created_at": "2024-05-15T23:12:50Z",
        "body": "@maltris, could you please share what your log looks like? I'm curious to see."
      }
    ]
  },
  {
    "number": 449,
    "title": "Virtual hosts",
    "created_at": "2016-06-21T17:20:28Z",
    "closed_at": "2016-06-25T20:09:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/449",
    "body": "Would be awesome to get this LogFormat working:\n`\"%h %t [%V] \\\"%r\\\" %>s \\\"%{Referer}i\\\"\"`\nI check every release :'(\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/449/comments",
    "author": "iamenderst",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-06-21T17:49:25Z",
        "body": "Please post a few lines from you access log and I can take a look.\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-06-25T20:09:45Z",
        "body": "Closing this. Feel free to reopen it as needed.\n"
      }
    ]
  },
  {
    "number": 445,
    "title": "Custom log date and time format for my  log with multiple IPs",
    "created_at": "2016-06-17T17:44:21Z",
    "closed_at": "2016-06-21T18:45:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/445",
    "body": "Hi,\ni am unable to parse the log with the format that i have.\nCan you please suggest me the suitable time,log and date format for it.\n\nHere is the log.\n\n```\n[16/Jun/2016:01:59:57 -0400] \"10.210.101.4 115.28.162.132, 60.210.20.244, 10.233.174.212, 50.19.124.104, 10.210.101.4\" \"HTTPS://www.h.com/day/hot/gb/en/res/book?met=rRt&qAt=1&qChd=0&qCiD=21&qCiMy=59886&qCoD=31&qCoMy=553856&qGRM=0&qPSt=0&qRRSrt=rt&qRf=rr&qRmP=K.O.T.X&qRms=1&qRpn=1&qRpp=12&qSHp=1&qSlH=CYPCG&qHtlC=CYPCG&qSmP=3&qSrt=sBR&qWch=0&srb_u=1\" 218 366204 489250 \"-\" \"Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.124 Safari/537.36\" \"Country_Code=geor=47,country_code=CN,region_code=ZJ,city=HANGZHOU,lat=30.26,long=120.17,timezone=GMT+8,continent=AS,throughput=vhigh,bw=2000,asnum=37963,location_id=0\" \"CD480243C97EFEE1C8D398DD14E8A48D\"\n```\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/445/comments",
    "author": "che23",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-06-17T19:09:50Z",
        "body": "Can you please describe the log format? Which one would be the client's IP?\n"
      },
      {
        "user": "che23",
        "created_at": "2016-06-20T15:06:29Z",
        "body": "Hi,\n\nBelow is the  log format which I have in my conf file\n\n```\nLogFormat \"%t \\\"%h %{X-FORWARDED-FOR}i\\\" \\\"%{X-IHG-REQUEST-PROTOCOL}i://%{Host}i%U%q\\\" %>s %B %D \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\" \\\"%{X-AKAMAI-EDGESCAPE}i\\\" \\\"%{JSESSIONID}e\\\" \" accessip\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-06-20T15:31:38Z",
        "body": "If you are using `%{X-FORWARDED-FOR}` and the amount of IPs on that field varies, then so far you won't be able to parse it. This is on the to-do list and is part of issue  #78.\n\nIf it's a fixed number of IPs, then you you should be able to parse it with the current version of goaccess.\n"
      },
      {
        "user": "che23",
        "created_at": "2016-06-21T17:38:15Z",
        "body": "Hi, \nThe link of IP's as the connection routes through Akamai CDN. Can we at least parse out the first IP? That would be the client IP whereas everything else is just Akamai nodes.\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-06-21T17:55:53Z",
        "body": "This works:\n\n```\nlog-format [%d:%t %^] \"%h %^\" \"%U\" %s %b %D \"%R\" \"%u\" %^\ndate-format %d/%b/%Y\ntime-format %H:%M:%S\nhttp-protocol no\nhttp-method no\n```\n\nor \n\n```\ngoaccess -f access.log --log-format='[%d:%t %^] \"%h %^\" \"%U\" %s %b %D \"%R\" \"%u\" %^' --date-format='%d/%b/%Y' --time-format='%H:%M:%S' --http-protocol=no --http-method=no\n```\n"
      },
      {
        "user": "che23",
        "created_at": "2016-06-21T18:41:30Z",
        "body": "thank you\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-06-21T18:45:28Z",
        "body": "Glad it worked. Closing this.\n"
      },
      {
        "user": "che23",
        "created_at": "2016-06-22T17:57:51Z",
        "body": "Hi,\nWill we be able to parse the second IP from that list of ip addresses on the log?\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-06-22T18:03:00Z",
        "body": "@che23 you can parse any IP as long as there's a fixed number of them. e.g., `\"%^ %h %^\"`\n"
      }
    ]
  },
  {
    "number": 404,
    "title": "Logformat - Apache - ELB",
    "created_at": "2016-04-22T01:35:51Z",
    "closed_at": "2016-04-22T02:26:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/404",
    "body": "Hi there,\n\nI'd like to inquire, I'm facing this issue to generate the output, \"Nothing valid to process\".\nI have done some tweaks on the format but nothing works. Could you please advise?\n\n```\nLogformat \"\\\"%t\\\",\\\"%{X-Forwarded-For}i\\\",\\\"%r\\\",\\\"%b\\\",\\\"%T\\\",\\\"%>s\\\",\\\"%{Referer}i\\\",\\\"%{User-Agent}i\\\",\\\"%h\\\",\\\"%l\\\"\" LogCustom\n```\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/404/comments",
    "author": "Asshad",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-04-22T01:50:03Z",
        "body": "Could you please post a few lines from your access log?Thanks.\n"
      },
      {
        "user": "Asshad",
        "created_at": "2016-04-22T02:00:00Z",
        "body": "Thanks for your reply.\nSure, please refer to the those lines. Thanks in advance.\n\nHTTP/1.1\",\"753\",\"0\",\"200\",\"-\",\"Amazon CloudFront\",\"172.18.211.77\",\"-\"\n\n```\n\"[09/Apr/2016:03:34:58 +0000]\",\"202.74.105.71, 54.640.147.42\",\"GET /wp-content/uploads/2015/11/sfit_fitdialysis2211_py_2-e1448115793203-190x140.jpg HTTP/1.1\",\"-\",\"0\",\"304\",\"-\",\"Amazon CloudFront\",\"172.18.212.88\",\"-\"\n\"[09/Apr/2016:03:34:59 +0000]\",\"203.117.19.195, 54.240.148.89\",\"GET /wp-content/uploads/2015/10/str2_shariljihadistR_ma_1_FORONLINE-100x80.jpg HTTP/1.1\",\"-\",\"0\",\"304\",\"-\",\"Amazon CloudFront\",\"172.18.212.88\",\"-\"\n\"[09/Apr/2016:03:34:57 +0000]\",\"66.249.64.182, 54.240.144.76\",\"GET /entertainment/movies/movie-news/2015/12/16/tedd-chan-keeps-things-fresh-in-whos-your-daddy/ HTTP/1.1\",\"21012\",\"2\",\"200\",\"-\",\"Amazon CloudFront\",\"172.18.212.142\",\"-\"\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-04-22T02:09:07Z",
        "body": "The following should work. \n\n```\nlog-format \"[%d:%t %^]\",\"%h,%^\",\"%r\",\"%b\",\"%T\",\"%s\",\"%R\",\"%u\"%^\ndate-format %d/%b/%Y\ntime-format %H:%M:%S\n```\n\nLet me know how it goes.\n"
      },
      {
        "user": "Asshad",
        "created_at": "2016-04-22T02:17:44Z",
        "body": "Hi, just tried your suggestion, processing for a few seconds then prompt the same out again.\n\n```\n$ goaccess --log-format=\"[%d:%t %^]\",\"%h,%^\",\"%r\",\"%b\",\"%T\",\"%s\",\"%R\",\"%u\"%^ --date-format=%d/%b/%Y --time-format=%H:%M:%S -f ~/Desktop/www.serverlist.com-access_log-20160409\n\nFatal error has occurred\nError occured at: src/goaccess.c - main - 1033\nNothing valid to process.\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-04-22T02:21:24Z",
        "body": "Please use single quotes within the log-format\n\n```\n$ goaccess --log-format='\"[%d:%t %^]\",\"%h,%^\",\"%r\",\"%b\",\"%T\",\"%s\",\"%R\",\"%u\"%^'\n```\n"
      },
      {
        "user": "Asshad",
        "created_at": "2016-04-22T02:24:25Z",
        "body": "Dandy, it works now. Thanks a lot. You are super awesome! \n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-04-22T02:26:57Z",
        "body": "Glad that worked! \n\nStay tuned for the upcoming version!!\n"
      }
    ]
  },
  {
    "number": 397,
    "title": "help with log/time/date format with a custom apache log format",
    "created_at": "2016-04-01T09:52:54Z",
    "closed_at": "2016-04-07T11:33:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/397",
    "body": "Hi,\n\ni've tested multiple log-format, time-format and date-format but it always returns that i have to check my formats when running goaccess\n\ncan some pleas tell my to put in goaccess.conf when i have this logformat in apache:\n\n```\nLogFormat \"%h %v %{%d-%m-%Y %H:%M:%S}t \\\"%r\\\" %b \\\"%{Referer}i\\\" \\\"%{User-Agent}i\\\"\" combined\n```\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/397/comments",
    "author": "stefandewal",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-04-01T11:56:45Z",
        "body": "Could you please post a few sample lines from your access log? Thanks.\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-04-07T11:33:58Z",
        "body": "The following should work give the format above:\n\n```\nlog-format %h %v [%d %t] \"%r\" %s %b \"%R\" \"%u\"\ndate-format %d-%m-%Y\ntime-format %T\n```\n\nFeel free to reopen if needed.\n"
      }
    ]
  },
  {
    "number": 392,
    "title": "about crontab issues",
    "created_at": "2016-03-24T02:34:39Z",
    "closed_at": "2016-03-31T12:02:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/392",
    "body": "i want to know how to solve the problem when i use the time mission of crontab on centos to creat the html issues , the size of html is 0 .\nbut i can creat the html with running the goaccess command directly .\n\nthis's the shell on crontab  \n\n```\n#!/bin/bash\ntime=$(date +%Y%m%d)\ncommandStr=`goaccess -f /log/access_log.$time -p ~/.goaccessrc -a > /report/report--$time.html`\n$commandStr\n```\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/392/comments",
    "author": "keithkuk",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-03-24T02:50:22Z",
        "body": "Which version are you running?\n\nYou can also try this:\n\n```\ncommandStr=`cat /log/access_log.$time | goaccess -p ~/.goaccessrc -a > /report/report--$time.html`\n```\n"
      },
      {
        "user": "keithkuk",
        "created_at": "2016-03-24T03:14:22Z",
        "body": "the version is GoAccess - 0.9.8\n\ni try your suggest ,  the time mission of crontab creat the html size still be 0 .\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-03-24T03:19:40Z",
        "body": "Your script does work on a debian machine. Tomorrow I can probably test this on a centos machine.\n\nBTW, you can use `--no-progress` to avoid getting progress metrics. Also, does it work if you run the bash script directly (no through the cron)?\n"
      },
      {
        "user": "keithkuk",
        "created_at": "2016-03-24T06:12:32Z",
        "body": "yes . i run the bash script on the terminal is work ! except the crontab mission . do you try on crontab with the bash script ? or just the command of the goaccess ?\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-03-24T12:14:26Z",
        "body": "Both. I tried this through the cron and directly from the script. Either way worked fine.\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-03-29T14:18:09Z",
        "body": "Sorry for the delay on this. I tested this on CentOS 6.5 and I noticed you need to specify the full path, so this worked:\n\n```\ncommandStr=`/usr/local/bin/goaccess -f /log/access_log.$time -p ~/.goaccessrc -a > /report/report--$time.html`\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-03-31T12:02:28Z",
        "body": "Closing this. Feel free to reopen it if needed.\n"
      }
    ]
  },
  {
    "number": 382,
    "title": "Avoiding special run to initialize on-disk store?",
    "created_at": "2016-03-01T15:32:56Z",
    "closed_at": "2016-03-07T14:35:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/382",
    "body": "If I understand correctly, right now this is needed for incremental parsing:\n\n```\ngoaccess -f first.log --keep-db-files\n```\n\nFollowed by:\n\n```\ngoaccess -f next.log --load-from-disk --keep-db-files\ngoaccess -f another.log --load-from-disk --keep-db-files\n```\n\nIs there a way to avoid the first invocation, and just have the store initialized if it doesn't exist already?\n\nIf not, is this a reasonable way of initializing the store?\n\n```\ngoaccess -f /dev/null --db-path=/path/to/db  --keep-db-files\n```\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/382/comments",
    "author": "bard",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-03-01T16:00:10Z",
        "body": "I'm not sure I follow the use case, however, you should be able to do the following against the `first.log`\n\n```\ngoaccess -f first.log --load-from-disk --keep-db-files\n```\n\nIf you just want to initialize the store, you could run goaccess as you posted above.\n\n```\ngoaccess -f /dev/null --keep-db-files\n```\n\nJust make sure you have a valid date/time/format in your config file so it won't complain about it.\n"
      },
      {
        "user": "bard",
        "created_at": "2016-03-03T19:57:05Z",
        "body": "> I'm not sure I follow the use case, however, you should be able to do the following against the first.log\n> \n> ```\n> goaccess -f first.log --load-from-disk --keep-db-files\n> ```\n\nWith `first.log` I meant to say that this would be the first time that goaccess is run, so db files wouldn't exist, and if I understand the man page correctly, they need to exist before goaccess can be invoked with `--load-from-disk`, no?\n\n```\n       --load-from-disk\n              Load previously stored data from disk. Database files need to exist. See keep-db-files.\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-03-03T20:03:56Z",
        "body": "You can run goaccess for the first with `--load-from-disk`. e.g.,\n\n```\ngoaccess -f first.log --load-from-disk --keep-db-files\n```\n\nIn fact, you can run goaccess as:\n\n```\ngoaccess -f first.log\n```\n\nIt will create the database files even if they don't exist. Passing `--load-from-disk` for the first time, it's like a no-op.\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-03-07T14:35:15Z",
        "body": "Closing this. Feel free to reopen it if needed.\n"
      },
      {
        "user": "bard",
        "created_at": "2016-03-09T17:01:18Z",
        "body": "Thank you! It works as you described. Perhaps it's worth checking that man page entry for ambiguity. Then again, if I'm the only one who's misunderstood, PEBKAC. :)\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-03-10T00:20:23Z",
        "body": "Thanks. I have updated the man page and the site as well.\n"
      }
    ]
  },
  {
    "number": 379,
    "title": "Trying to use with WordPress on Apache",
    "created_at": "2016-02-22T19:05:22Z",
    "closed_at": "2016-02-23T15:29:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/379",
    "body": "I'm currently trying to setup GoAccess with the WordPress default debug.log file.\n\nIs there a custom format for this already available or would I need to create one?\n\nPlease let me know.\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/379/comments",
    "author": "DaveyJake",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-02-22T19:10:50Z",
        "body": "Is the `debug.log` in WordPress some sort of error log? If you have access log data, you may be able to use goaccess. Could you please post a few lines from your log? Thanks.\n"
      },
      {
        "user": "DaveyJake",
        "created_at": "2016-02-22T21:32:52Z",
        "body": "It is the error log. Here are a couple lines as requested.\n\n`[03-Feb-2016 15:01:13 UTC] PHP Deprecated:  Methods with the same name as their class will not be constructors in a future version of PHP; Sponsors_Pro_Random_Widget has a deprecated constructor in /www/sites/daveyjake/html/wp-content/plugins/wpcm-sponsors-pro/includes/widgets/sponsors-random.php on line 6`\n`[03-Feb-2016 15:01:13 UTC] PHP Notice:  Undefined index: FTPHid in /www/sites/daveyjake/html/wp-content/plugins/ftp-access/ftp-access.php on line 32\n`\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-02-22T21:43:48Z",
        "body": "Thanks for posting this. GoAccess can process only server access log records, so it won't work for the error log.\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-02-23T15:29:59Z",
        "body": "Closing this. Feel free to reopen it if needed.\n"
      }
    ]
  },
  {
    "number": 364,
    "title": "Question - offline analisys",
    "created_at": "2016-01-29T08:58:32Z",
    "closed_at": "2016-02-01T14:51:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/364",
    "body": "I have some log files on my pc and I'd like to analyze them, is possibile with this software?\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/364/comments",
    "author": "ChristianGiupponi",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2016-01-29T12:31:53Z",
        "body": "You should be able to analyze virtually any type of web logs\n"
      },
      {
        "user": "allinurl",
        "created_at": "2016-02-01T14:51:55Z",
        "body": "Closing this. Feel free to reopen it if needed.\n"
      }
    ]
  },
  {
    "number": 344,
    "title": "What does (caret) ^ b mean ?",
    "created_at": "2015-12-17T05:23:12Z",
    "closed_at": "2015-12-17T14:44:11Z",
    "labels": [
      "question",
      "documentation"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/344",
    "body": "I don't know what this key  `^ f`  and  `^ b` mean.\nin\n\n```\n^ f   Scroll forward one screen within active module\n^ b   Scroll backward one screen within active module\n```\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/344/comments",
    "author": "gxhllj",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2015-12-17T14:44:11Z",
        "body": "The caret is for unprintable control characters. So:\n\n```\nCtrl + f -> scroll down within the expanded panel\nCtrl + b -> scroll up within the expanded panel\n```\n"
      }
    ]
  },
  {
    "number": 340,
    "title": "Documentation doesn't explain some acronyms",
    "created_at": "2015-12-10T17:46:53Z",
    "closed_at": "2015-12-15T16:00:43Z",
    "labels": [
      "question",
      "documentation"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/340",
    "body": "Hello, documentation doesn't mention what means at config file:\n-  BY_BW\n-  BY_AVGTS\n-  BY_CUMTS\n-  BY_MAXTS\n-  BY_MTHD\n\nAlso, time unit \"us\" means micro seconds?\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/340/comments",
    "author": "mdimarino",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2015-12-10T18:03:05Z",
        "body": "Hello,\n\nThanks for pointing that out. I'll make sure to explain these everywhere is applicable.\n\n`BY_` allows the user to specify the metric or field (if present) when sorting panels on the initial load.\n\n```\nBY_BW    -> Sort by bandwidth\nBY_AVGTS -> Sort by average time served\nBY_CUMTS -> Sort by cumulative time served\nBY_MAXTS -> Sort by maximum time served\nBY_MTHD  -> Sort by http method\nBY_PROT  -> Sort by http protocol\n```\n\nThat's right,  `us` is microseconds, `ms` is milliseconds.\n"
      }
    ]
  },
  {
    "number": 329,
    "title": "Does goaccess has any feature with pageview count or pageview records?",
    "created_at": "2015-10-28T02:13:10Z",
    "closed_at": "2015-10-28T02:40:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/329",
    "body": "Hi,\n\nWould like to check if GoAccess have any pageview counter or pageview record? \n\nNeed your kind output.\n\nThanks.\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/329/comments",
    "author": "coverguy",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2015-10-28T02:33:38Z",
        "body": "You can pipe data into goaccess which gives you a lot of flexibility in terms of what you want to display, so for page views, i.e., `html`, `htm`, `php`, etc.. within the request, you can do something like this:\n\n```\nawk '$7~/\\.html|\\.htm|\\.php/' /var/log/apache2/access.log | goaccess\n```\n\nNote, `$7` is the request field for the common and combined log format, (without Virtual Host,) if your log includes Virtual Host, then you probably want to use `$8` instead. You can always check which field you are shooting for:\n\n```\ntail -10 /var/log/apache2/access.log | awk '{print $8}' \n```\n"
      },
      {
        "user": "coverguy",
        "created_at": "2015-10-28T02:40:08Z",
        "body": "Thanks will be waiting for your latest update implementation in future  :)\n"
      },
      {
        "user": "nils-r3",
        "created_at": "2018-09-17T15:43:23Z",
        "body": "Hey, when i use the given command to get the pageviews my unique visitors decrease. is that possible? should they not be the same?"
      },
      {
        "user": "nils-r3",
        "created_at": "2018-09-17T16:08:06Z",
        "body": "found something because of speaking urls.\r\n`awk '$8~/\\.html|\\/\\\"|\\.htm|\\.php/' access.log | goaccess`\r\nshows more unique visitors and also close to the desired max but still some missing."
      },
      {
        "user": "allinurl",
        "created_at": "2018-09-18T02:59:08Z",
        "body": "@nilsreineke Can you please provide some concrete numbers about this?"
      },
      {
        "user": "nils-r3",
        "created_at": "2018-09-18T05:38:23Z",
        "body": "@allinurl \r\nin this case:\r\n```\r\n Dashboard - Overall Analyzed Requests (14/Sep/2018 - 14/Sep/2018)                                                                                                                                                   \r\n\r\n  Total Requests  494449 Unique Visitors  16743 Unique Files 1860 Referrers 0\r\n  Valid Requests  494449 Init. Proc. Time 124s  Static Files 1253 Log Size  153.93 MiB\r\n  Failed Requests 0      Excl. IP Hits    0     Unique 404   292  Bandwidth 128.33 GiB\r\n  Log Source      access.log_2018-09-14\r\n```\r\n\r\nvs:\r\n\r\n` awk '$8~/\\.html|\\/\\\"|\\.htm|\\.php/' access.log_2018-09-14 | goaccess`\r\n```\r\n Dashboard - Overall Analyzed Requests (14/Sep/2018 - 14/Sep/2018)                                                                                                                                                   [Active Panel: Visitors]\r\n\r\n  Total Requests  32790 Unique Visitors  14291 Unique Files 1402 Referrers 0\r\n  Valid Requests  32790 Init. Proc. Time 8s    Static Files 0    Log Size  0.0   B\r\n  Failed Requests 0     Excl. IP Hits    0     Unique 404   78   Bandwidth 331.10 MiB\r\n  Log Source      STDIN\r\n```\r\n\r\n**so 16743 unique visitors (standard-mode) vs 14291 unique visitors (in PI or PV mode)**\r\n"
      },
      {
        "user": "allinurl",
        "created_at": "2018-09-19T01:36:48Z",
        "body": "It is certainly possible. Think about for instance, a bot that only fetches for a PNG or JPG without hitting an HTML/PHP document. Or hotlinking images, etc. Thus the decrease on the number of unique visitors."
      }
    ]
  },
  {
    "number": 315,
    "title": "Request Times",
    "created_at": "2015-10-13T17:42:07Z",
    "closed_at": "2015-10-13T21:26:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/315",
    "body": "Is there a way configure the HTML reports to show the number of requests per minute or hour?\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/315/comments",
    "author": "hadisajj2",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2015-10-13T18:03:26Z",
        "body": "Not currently. That would probably be part of #300. Stay tuned for those updates.\n"
      }
    ]
  },
  {
    "number": 313,
    "title": "Consolidated report",
    "created_at": "2015-10-09T17:35:08Z",
    "closed_at": "2015-10-13T01:30:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/313",
    "body": "I have a few ngingx log files that I would like to analyze in one report. Is there a way to have goaccess read a few log files in out shot? I found this command on stackoverflow but it didn't do the trick:\n\nzcat access.log.*.gz | goaccess -a -s -b\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/313/comments",
    "author": "hadisajj2",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2015-10-09T18:03:01Z",
        "body": "This seems to be the same question you posted previously #312. The following will parse all `access.log*` files\n\n```\nsudo sh -c 'zcat -f access.log* | goaccess -a > report.html'\n```\n\nAlso, note that -s is not a valid flag, unless you are running a very old version of goaccess.\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-10-13T01:29:47Z",
        "body": "Closing this. Feel free to reopen it if needed.\n"
      }
    ]
  },
  {
    "number": 309,
    "title": "Configuring and compiling GoAccess on FreeBSD 10.1",
    "created_at": "2015-10-04T13:00:23Z",
    "closed_at": "2015-10-04T19:40:34Z",
    "labels": [
      "question",
      "build"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/309",
    "body": "Hello guys. I am running Freebsd 10.1. I am trying to compile Goaccess with geoIp support.\nWhen I do the configure with geoIP I get:\n\n```\nchecking for GeoIP_new in -lGeoIP... no\nconfigure: error: *** Missing development files for the GeoIP library\n```\n\nI have the geoip port installed (net/GeoIP)\n\n```\nroot@e5-2620v3x2:/tmp/goaccess-0.9.4 # /usr/local/bin/geoiplookup -f /usr/local/share/GeoIP/GeoLiteCity.dat 8.8.8.8\nGeoIP City Edition, Rev 1: US, CA, California, Mountain View, 94040, 37.386002, -122.083801, 807, 650\n```\n\nCan someone please tell me how to make it work with geoip ?\nIf I install the goaccess port from freebsd it's version 0.8.5 and it doesn't have geoip support\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/309/comments",
    "author": "dorin21id",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2015-10-04T14:58:34Z",
        "body": "Try the following:\n\n```\n# pkg install GeoIP glib pkgconf\n# /usr/local/bin/geoipupdate.sh\n# setenv LDFLAGS -L/usr/local/lib\n# ./configure --enable-geoip\n# make\n# make install\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-10-04T19:15:27Z",
        "body": "Just configured and compiled in FreeBSD 10.1 and the steps above worked fine.\n"
      },
      {
        "user": "dorin21id",
        "created_at": "2015-10-04T19:30:10Z",
        "body": "Damn it. Still the same :( \n\n```\n[root@e5-2620v3x2 /tmp/goaccess-0.9.4]# /usr/local/bin/geoipupdate.sh\nFetching GeoIP.dat and GeoIPv6.dat...\n/usr/local/share/GeoIP/GeoIPupdate.4KwoRT/GeoI100% of  441 kB  840 kBps 00m01s\n/usr/local/share/GeoIP/GeoIPupdate.pPQiNn/GeoI100% of  712 kB  836 kBps 00m01s\n[root@e5-2620v3x2 /tmp/goaccess-0.9.4]# set env LDFLAGS -L/usr/local/lib\n[root@e5-2620v3x2 /tmp/goaccess-0.9.4]# ./configure --enable-geoip\nchecking for a BSD-compatible install... /usr/bin/install -c\nchecking whether build environment is sane... yes \nchecking for a thread-safe mkdir -p... ./install-sh -c -d\nchecking for gawk... no\nchecking for mawk... no\nchecking for nawk... nawk\nchecking whether make sets $(MAKE)... yes \nchecking for gcc... no\nchecking for cc... cc\nchecking whether the C compiler works... yes \nchecking for C compiler default output file name... a.out\nchecking for suffix of executables...\nchecking whether we are cross compiling... no\nchecking for suffix of object files... o\nchecking whether we are using the GNU C compiler... yes \nchecking whether cc accepts -g... yes \nchecking for cc option to accept ISO C89... none needed\nchecking for style of include used by make... GNU \nchecking dependency style of cc... gcc3\nchecking whether cc understands -c and -o together... yes \nchecking for pthread_create in -lpthread... yes \nchecking build system type... x86_64-unknown-freebsd10.1\nchecking host system type... x86_64-unknown-freebsd10.1\nchecking whether to build with rdynamic for GNU ld... yes \nchecking for GeoIP_new in -lGeoIP... no\nconfigure: error: *** Missing development files for the GeoIP library\n[root@e5-2620v3x2 /tmp/goaccess-0.9.4]#\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-10-04T19:33:33Z",
        "body": "Make sure is `setenv LDFLAGS -L/usr/local/lib` and not `set env...`\n"
      },
      {
        "user": "dorin21id",
        "created_at": "2015-10-04T19:38:03Z",
        "body": "It is working now. THANK YOU VERY VERY MUCH !\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-10-04T19:40:34Z",
        "body": "Glad that worked :)\n"
      }
    ]
  },
  {
    "number": 308,
    "title": "Nothing valid to process: something wrong with my logformat?",
    "created_at": "2015-10-02T21:34:08Z",
    "closed_at": "2015-10-02T22:02:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/308",
    "body": "Hi,\n\nI am trying the following line with these settings, but keep receiving the \"Nothing valid to process\" error. I am probably overlooking something.\n\n**Settings:**\n\n```\ntime-format %T\ndate-format %d/%b/%Y\nlog-format %v %h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\"\n```\n\n**Log excerpt:**\n\n```\nhostname.com 66.249.64.111 - - [02/Oct/2015:23:32:07 +0200] \"GET /some/obscured/path.jpg HTTP/1.1\" 200 31476 \"-\" \"Googlebot-Image/1.0\"\n```\n\nWould really appreciate some help. Thanks in advance!\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/308/comments",
    "author": "arondeparon",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2015-10-02T21:38:26Z",
        "body": "It looks like it's a \"NCSA Combined Log Format with Virtual Host\". The following should work:\n\n```\nlog-format %^ %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"\ndate-format %d/%b/%Y\ntime-format %H:%M:%S\n```\n\nLet me know how it goes!\n"
      },
      {
        "user": "arondeparon",
        "created_at": "2015-10-02T22:02:40Z",
        "body": "Thanks! I managed to get it working now, with a slight tweak:\n\n```\nlog-format %v %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"\n```\n"
      }
    ]
  },
  {
    "number": 306,
    "title": "Comments in goaccess.conf and variable names differ (dash/underscore)",
    "created_at": "2015-09-28T07:59:37Z",
    "closed_at": "2015-09-28T11:57:15Z",
    "labels": [
      "question",
      "documentation"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/306",
    "body": "Hi,\n\nInstalled goaccess from official (\"goaccess\", not canonical) ubuntu repository.\n\n```\ngoaccess --version\nGoAccess - 0.9.4.\n```\n\n`/etc/goaccess.conf` states following:\n\n```\n# The date_format variable followed by a space, specifies\n# ....\n# date-format %d/%b/%Y\n```\n\nIs it on purpose that the comment refers to a `date_format` (underscore `_`) variable, where the configuration file lists the `date-format` (dash `-`) key?\n\nSame for `log_format`. Noticed while wanting to jump in vim to word under cursor ( `*`) to edit the value.\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/306/comments",
    "author": "fwolfst",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2015-09-28T11:57:15Z",
        "body": "Good question. Earlier versions would use underscore `_`, then it changed to a dash `-`. For backwards compatibility, you can use both. \n\nI've updated the config file. Thanks!\n"
      }
    ]
  },
  {
    "number": 273,
    "title": "How to access to nginx error log?",
    "created_at": "2015-07-23T11:00:56Z",
    "closed_at": "2015-07-23T12:28:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/273",
    "body": "Hi,\n\nHow can I analyze the error logs in nginx?\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/273/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2015-07-23T12:28:53Z",
        "body": "Hello, it does not analyze error logs.\n"
      },
      {
        "user": "ghost",
        "created_at": "2015-07-23T16:23:38Z",
        "body": "A pain!\n"
      }
    ]
  },
  {
    "number": 270,
    "title": "Total request more than the actual request",
    "created_at": "2015-07-17T03:50:15Z",
    "closed_at": "2015-07-22T15:12:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/270",
    "body": "nginx log format conf\nlog_format  main  '$server_name $remote_addr - $remote_user [$time_local] \"$request\" '\n                  '$status $body_bytes_sent \"$http_referer\" '\n                  '\"$http_user_agent\" \"$http_cookie\" \"$http_x_forwarded_for\" \"$upstream_addr\" \"$upstream_status\" \"$request_time\" \"$upstream_response_time\" '\n                  '\"$http_version\" \"$http_deviceId\" \"$http_deviceType\"';\nnginx log \n\n```\nwww.xxx.com 111.111.111.111 - - [15/Jul/2015:00:00:12 +0800] \"POST /xxxx/xxxxx HTTP/1.1\" 200 79 \"-\" \"ASIHTTPRequest\" \"xxx=xxx; SESSIONID=xxxxxxx\" \"-\" \"192.168.1.12:8080\" \"200\" \"0.023\" \"0.010\" \"3.0\" \"xxx-xx-x-x-x\" \"3\" \"{\\x22Id\\x22:123456}\"\n```\n## \n\n```\n/usr/local/goaccess-0.9.2/etc/goaccess.conf   \ntime-format %H:%M:%S\ndate-format %d/%b/%Y\nlog_format %^ %h %^ %^ [%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" \"%^\" \"%^\" \"%^\" \"%^\" \"%T\" \"%^\" \"%^\" \"%^\" \"%^\" \"%^\"\n```\n\nTotal Requests\n57,889\nFailed Requests\n20,080\n\nTotal request more than the actual request\nHelp to look at the format configuration\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/270/comments",
    "author": "kys1230",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2015-07-17T03:59:36Z",
        "body": "Please try the following log-format, it should work:\n\n```\nlog-format %^ %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" \"%^\" \"%^\" \"%^\" \"%^\" \"%T\"\n```\n"
      },
      {
        "user": "kys1230",
        "created_at": "2015-07-17T04:06:24Z",
        "body": "log-format %^ %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" \"%^\" \"%^\" \"%^\" \"%^\" \"%T\"\n Total Requests  57889 Unique Visitors 0 Referrers    0 Log Size  99.62 MiB\n  Failed Requests 57903 Unique Files    0 Unique 404   0 Bandwidth 0.0   B\n  Generation Time 0     Excl. IP Hits   0 Static Files 0\n\nlog-format %^ %h - %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\" \"%^\" \"%^\" \"%^\" \"%^\" \"%T\"\n  Total Requests  57889 Unique Visitors 1330 Referrers    5 Log Size  99.62 MiB\n  Failed Requests 20080 Unique Files    155  Unique 404   4 Bandwidth 261.98 MiB\n  Generation Time 1     Excl. IP Hits   0    Static Files 2\n"
      },
      {
        "user": "kys1230",
        "created_at": "2015-07-17T04:07:12Z",
        "body": "Log the number of lines is 37824\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-07-17T04:14:02Z",
        "body": "How many lines does the log file contain? The log format I posted before works with the sample log you posted.\n\nHave you checked that your access log does not have different set of lines?\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-07-22T15:12:01Z",
        "body": "Closing this, feel free to re-open it if needed.\n"
      }
    ]
  },
  {
    "number": 265,
    "title": "Separate iOS from Macintosh devices",
    "created_at": "2015-07-02T11:22:35Z",
    "closed_at": "2015-07-06T11:02:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/265",
    "body": "I know that they're both Apple devices, but in my opinion it makes little sense to group them as one big category. Android and Linux are separate, so it would seem reasonable to not include Apple touch devices in the Mac group.\n\nIt's less about the rendering capabilities of the devices (which would be almost identical) but about the desktop / mobile segmentation.\n\nMaybe instead add a section with a desktop / mobile ratio?\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/265/comments",
    "author": "Csardelacal",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2015-07-02T11:58:47Z",
        "body": "What version are you using? The two were split in v0.9.1\n"
      },
      {
        "user": "Csardelacal",
        "created_at": "2015-07-06T11:02:54Z",
        "body": "Yeah, seems the machine ran automatic updates during the weekend and the issue is gone. I am running 0.9.1 right now and it seems to work perfectly fine.\n\nThank you very much again for the great job you're doing with goaccess, and I'll stay on the hunt for new bugs.\n"
      }
    ]
  },
  {
    "number": 256,
    "title": "Analysing Traffic to sub-domains",
    "created_at": "2015-05-30T09:52:19Z",
    "closed_at": "2015-05-30T14:23:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/256",
    "body": "Not sure if this is an issue or is not supported however my GoAccess reports do not analyse out the traffic to sub-domains? Data is in the access log however no means of seeing/analysing this traffic\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/256/comments",
    "author": "Double5peed",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2015-05-30T14:23:17Z",
        "body": "Virtual Hosts are in the to-do list. Please see #23 and #67. Feel free to comment in there if you have any questions/feedback about it. Thanks.\n"
      },
      {
        "user": "Double5peed",
        "created_at": "2015-05-31T06:24:50Z",
        "body": "Thanks, the sub domains in my case are reported in the one 'main' log they are not separated out into separate hosts. Would like to be able to show traffic etc to them.\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-05-31T14:21:34Z",
        "body": "I see, could please you post a few lines from your log?\n"
      },
      {
        "user": "Double5peed",
        "created_at": "2015-05-31T15:52:13Z",
        "body": "Can I email a sample to you?\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-05-31T19:12:03Z",
        "body": "Definitely, hello [at] goaccess.io\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-05-31T20:55:30Z",
        "body": "Got your log. As you mentioned, it does not contain `%V` so no virtual host is reported. Two choices come to mind:\n\nYou could either add `%V` to your apache access config and then use `split-logfile` to generate individual reports or grep through your access log for each subdomain and have it output to a file which you could then analyze with goaccess.\n"
      }
    ]
  },
  {
    "number": 249,
    "title": "pattern matching ",
    "created_at": "2015-05-12T10:21:39Z",
    "closed_at": "2015-05-16T18:56:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/249",
    "body": "I am having logs of all servers on logentries and when I try to open it with goaccess it gives me wrong statistics. I want goaccess pattern for logentries log.\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/249/comments",
    "author": "aakash21",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2015-05-12T16:36:20Z",
        "body": "Can you please elaborate more about this? What results are you getting and what's supposed to look like? Thanks\n"
      },
      {
        "user": "aakash21",
        "created_at": "2015-05-12T19:05:49Z",
        "body": "i have all my nginx logs downloaded from logentries of my production server and now i am trying to analyse the stats with goaccess but it shows value of total requests and failed requests equal. The result must be different.So i want the log format so that i can get my stats right.\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-05-12T20:08:28Z",
        "body": "Can you post a few lines from your access log as well as the log and date format from your goaccess config file?\n"
      },
      {
        "user": "aakash21",
        "created_at": "2015-05-13T04:19:40Z",
        "body": "```\n<14>1 2015-05-12T05:04:05.814315Z ip-10-0-1-170 Nginx-Access-Log - - - hostname=XXXXXX appname=Nginx-Access-Log 10.0.1.248 - - [12/May/2015:10:34:05 +0530] \"GET /rest/getShowsList?start=0&limit=15 HTTP/1.1\" 200 5653 \"-\" \"Dalvik/1.6.0 (Linux; U; Android 4.4.4; GT-I9060I Build/KTU84P)\"\n<14>1 2015-05-12T05:04:05.814339Z ip-10-0-1-170 Nginx-Access-Log - - - hostname=XXXXX appname=Nginx-Access-Log 10.0.1.248 - - [12/May/2015:10:34:05 +0530] \"GET /rest/getexclusivedevicestatus HTTP/1.1\" 200 55 \"-\" \"Dalvik/1.6.0 (Linux; U; Android 4.4.3; D5322 Build/19.1.1.C.0.56)\"\n```\n\nthese are logs from the logentries. \nthis are formats which i have used  but can not get results.\n\n```\nlog-format \"%h %l %u %t \\\"%r\\\" %>s %b\"\nlog-format %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-05-15T03:33:16Z",
        "body": "Using goaccess >= v0.9:\n\n```\nlog-date %d/%b/%Y\nlog-time %H:%M:%S\nlog-format %^ %^ %^ %^ %^ %^ %^ %^ %^ %h %^[%d:%t %^] \"%r\" %s %b \"%R\" \"%u\"\n```\n\nRun goaccess as:\n\n```\ngoaccess -f access.log -p /path/to/goaccess.conf\n```\n"
      },
      {
        "user": "aakash21",
        "created_at": "2015-05-16T06:04:39Z",
        "body": "thnks it done.\nand alternate could be that \ngoaccess -f /path/to/log -a >report.html\nafter converting logentries log to nginx log format.\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-05-16T18:56:32Z",
        "body": "Glad that worked. Feel free to open a new issue if needed. Closing this.\n"
      }
    ]
  },
  {
    "number": 245,
    "title": "How to show requests on an IP on section 5",
    "created_at": "2015-05-02T05:33:19Z",
    "closed_at": "2015-05-05T02:55:02Z",
    "labels": [
      "enhancement",
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/245",
    "body": "Hello,\n\nOn Visitor Hostnames and IPs is it possible to display what are being requested by a specific IP?\n\nThanks.\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/245/comments",
    "author": "jmcbee",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2015-05-03T03:47:18Z",
        "body": "It's not possible right now and although coding this would be fairly easy, I think this should be optional since it could hit the overall performance. There are a couple of requests that would handle this: #201 and #138.\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-05-05T02:55:02Z",
        "body": "Closing it since issues #201 and #138 are related to this.\n"
      }
    ]
  },
  {
    "number": 226,
    "title": "~/.goaccessrc not read in default",
    "created_at": "2015-03-25T18:23:41Z",
    "closed_at": "2015-03-27T22:53:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/226",
    "body": "Hey there,\nI'm using archlinux with the new goaccess 0.9. I found something strange. I have add a ~/.goaccessrc for my default format but after running `zcat -f logs/access_log* | goaccess -a` I get:\n\n```\nGoAccess - version 0.9 - Mar 19 2015 14:06:35\n\nFatal error has occurred\nError occured at: src/parser.c - parse_log - 1650\nNo time format was found on your conf file.\n```\n\nBut if I run this `zcat -f logs/access_log* | goaccess -a -p ~/.goaccessrc` It work without a problem. But it should detect the config file automatically, or not?\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/226/comments",
    "author": "sangyye",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2015-03-25T22:48:11Z",
        "body": "By default goaccess will attempt to open the user's config file if given, otherwise, it will try to open the global config file `/etc/goaccess.conf`. I assume your global config file does not have the `time_format` variable set. You should also be able to run it as:\n\n```\nzcat -f logs/access_log* | goaccess -a --no-global-config\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-03-27T22:53:58Z",
        "body": "Closing this.\n"
      }
    ]
  },
  {
    "number": 208,
    "title": "Log format config help",
    "created_at": "2015-01-21T00:06:36Z",
    "closed_at": "2015-01-21T04:13:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/208",
    "body": "I'm just playing with goaccess for a simple home server that I have, but I can't seem to get the log format configuration to recognize my log.  I'm using gunicorn behind an nginx proxy, which forwards the real IP ahead.  A sample entry in my log (the first IP is always 127.0.0.1 as that is nginx forwarding the request to gunicorn):\n\ngunicorn log format: \n\n```\n%(h)s %(l)s %(u)s %(t)s “%(r)s” %(s)s %(b)s “%(f)s” “%(a)s” \"%({X-Real-IP}i)s\"\n```\n\n```\n127.0.0.1 - - [16/Jan/2015:14:30:15 -0800] \"GET /bars/ HTTP/1.0\" 200 2660 \"-\" \"Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.99 Safari/537.36\" \"192.168.1.100\"\n```\n\n> %^ %^ %^ [%d:%^] \"%r\" %s %b %^ \"%u\" \"%h\"\n\nThat is the formatting I came up with, but it goaccess can't find any entries.  Any ideas?\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/208/comments",
    "author": "bwainstock",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2015-01-21T00:45:32Z",
        "body": "Barry, the following should do it:\n\n```\nlog-format %^[%d:%^] \"%r\" %s %b \"%R\" \"%u\" \"%h\"\ndate-format %d/%b/%Y\n```\n\nLet me know how that goes. Thanks\n"
      },
      {
        "user": "bwainstock",
        "created_at": "2015-01-21T01:18:12Z",
        "body": "Thanks for the quick reply.\n\n```\nNo valid hits.\n```\n"
      },
      {
        "user": "allinurl",
        "created_at": "2015-01-21T01:21:58Z",
        "body": "It does parse the sample log you posted above. Are you using v0.8.5? This is how I ran it:\n\n```\ngoaccess -f log --log-format='%^[%d:%^] \"%r\" %s %b \"%R\" \"%u\" \"%h\"' --date-format='%d/%b/%Y'\n```\n"
      },
      {
        "user": "bwainstock",
        "created_at": "2015-01-21T04:13:45Z",
        "body": "Damn!  There were a few lines at the beginning of my log that didn't fit the format.  Taking them out of the file fixed the \"No valid hits\" issue.  Everything works now.  Thanks.\n"
      }
    ]
  },
  {
    "number": 199,
    "title": "Pipe leads to fatal error",
    "created_at": "2014-12-25T17:53:00Z",
    "closed_at": "2014-12-25T18:33:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/199",
    "body": "If I use a pipe for input, I get an error, while with -f the same log file works fine:\n\n---8<---\nmagnum@vmgentoo ~/src/goaccess-0.8.5 $ cat access_log | ./goaccess \n\nGoAccess - version 0.8.5 - Dec 25 2014 18:05:03\n\nFatal error has occurred\nError occured at: parser.c - parse_log - 1120\nNo date format was found on your conf file.\n\nmagnum@vmgentoo ~/src/goaccess-0.8.5 $ ./goaccess -f access_log \nmagnum@vmgentoo ~/src/goaccess-0.8.5 $\n---8<---\n\nThis is of course an example where a pipe isn't useful, but it show's that the pipe is the only difference.\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/199/comments",
    "author": "cmrcx",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2014-12-25T17:56:28Z",
        "body": "Since stdin is used for the pipe, there's no config dialog prompt to specify the date and log format. So you need to specify the correct date and log format in your config file before using goaccess through a pipe.\n"
      },
      {
        "user": "cmrcx",
        "created_at": "2014-12-25T18:33:11Z",
        "body": "Thanks for the quick reply!\n\nI was irritated, because with an older version on a different system it works without a config file.\n"
      },
      {
        "user": "allinurl",
        "created_at": "2014-12-26T02:10:50Z",
        "body": "Older versions could only read the standard Apache log/date format. This changed when the custom log/date format feature was introduced.\n"
      }
    ]
  },
  {
    "number": 5,
    "title": "can't parse custom logs",
    "created_at": "2013-08-05T21:06:50Z",
    "closed_at": "2013-08-07T13:22:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/allinurl/goaccess/issues/5",
    "body": "I'm trying to get goaccess working. Already take some time on docs and examples but without success.\n\nBasically i have log lines like:\n\n```\n10031488_71334 xpto.domain.com 88.103.999.999 - - [16/Jun/2013:15:03:26 +0000] \"GET / HTTP/1.1\" 500 5624 \"-\" \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0\" -\n```\n\nand already compile goaccess and create a conf file:\n\n```\ncat ~/.goaccessrc\ndate_format %d/%b/%Y:%T %z\nlog_format %^ %^ %h - - [$d] \"%r\" %s %b \"%R\" \"%u\" %^\n```\n\nThen i got:\n\n```\n./goaccess -a -f miniout.log\nGoAccess - version 0.6 - Aug  5 2013 20:20:16\nAn error has occurred\nError occured at: goaccess.c - render_screens - 358\nMessage: Nothing valid to process.\n```\n",
    "comments_url": "https://api.github.com/repos/allinurl/goaccess/issues/5/comments",
    "author": "abgit",
    "comments": [
      {
        "user": "allinurl",
        "created_at": "2013-08-05T21:31:03Z",
        "body": "The following should do it. Just make sure you have a valid IP. (88.103.999.999 won't let you parse the log)\n\nlog_format %^ %^ %h %^[%d:%^] \"%r\" %s %b \"%R\" \"%u\"\ndate_format %d/%b/%Y\n"
      },
      {
        "user": "abgit",
        "created_at": "2013-08-05T21:44:25Z",
        "body": "Now it works as expected. Thanks.\n- about valid ip: 88.103.999.999 was just a obuscation. valid ip's are always used;\n- btw, if ip is not valid, goaccess aborts parsing or just ignores log entry with invalid ip?\n- just an idea that can be usefull to others: this log format is the one used by rackspace. because you have amazon-couldfront log format option in log format configuration wizard, maybe you could add this rackspace-akamai format too :)\n"
      },
      {
        "user": "allinurl",
        "created_at": "2013-08-05T21:48:09Z",
        "body": "@abgit goaccess will ignore the entry and take it as an invalid request. \nI can add the Rackspace format too, do you know if they have some documentation about this that I can refer to?\n"
      },
      {
        "user": "abgit",
        "created_at": "2013-08-06T08:59:44Z",
        "body": "I don't find docs about log format but i know that rackspace has 2 log formats because i'm using their services from some time.\n- rackspace loadbalancers log:\n  10031488_71334 xpto.domain.com 88.103.999.999 - - [16/Jun/2013:15:03:26 +0000] \"GET / HTTP/1.1\" 500 5624 \"-\" \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0\" 10.201.201.5:80\n- rackspace cdn log:\n  5.3.56.7 - - [18/Jun/2013:19:50:09 +0000] \"GET /1123123a07d61231233a-8d685f5f11665a311231230a1cc93333.r66.cf6.rackcdn.com/ HTTP/1.1\" 404 363 \"-\" \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0\" \"-\"\n\nBalancer log format preprends balancerid and domain and at end adds internal httpserver node ip and port, rackspace cdn sounds like standard format.\n"
      },
      {
        "user": "allinurl",
        "created_at": "2013-08-07T13:16:45Z",
        "body": "Seems like the CDN can be parsed using the NCSA Combined Log Format. I'll add the Load Balancer format to the predefined options.\n"
      },
      {
        "user": "abgit",
        "created_at": "2013-08-07T13:22:10Z",
        "body": "that's nice. rackspace loadbalancer format can be useful to others :)\nthanks\n"
      }
    ]
  }
]