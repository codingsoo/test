[
  {
    "number": 1541,
    "title": "[FEAT] Ability to pass custom key and value as argument",
    "created_at": "2025-02-07T03:59:47Z",
    "closed_at": "2025-02-08T14:20:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/fastfetch-cli/fastfetch/issues/1541",
    "body": "### Description\n\nI would like to propose a new feature for Fastfetch that allows users to pass custom module as shell arguments like module key and module text with extra attributes like color? This way, we can easily integrate outputs from other scripts into Fastfetch, making it super flexible and customizable.\n\n### Motivation\n\nThe primary motivation for this feature is to allow users to include dynamic data from various scripts within Fastfetch's output. This can be particularly useful for users who want to display information that is not natively supported by Fastfetch but is generated by other scripts or tools. By allowing custom key-value pairs with attributes, users can maintain a consistent and visually appealing output format.\n\n### Additional context\n\nI use fastfetch in my shell startup profile to display some system level info and custom images etc. I have other script running as well to fetch some of the information which I would like to pass the output of those scripts as command line argument instead of specifying it directly in the config file.\n\n**Fish example config:**\n```\nset battery_status (acpi -b)\nfastfetch --custom-key \"Custom key: \" --custom-text $battery_status --color \"#00FF00\" \n```\n\n**Benefits:**\n\n- Enhanced flexibility to include any script output in Fastfetch.\n- Improved customization options for users.",
    "comments_url": "https://api.github.com/repos/fastfetch-cli/fastfetch/issues/1541/comments",
    "author": "johnnycarlson",
    "comments": [
      {
        "user": "CarterLi",
        "created_at": "2025-02-07T06:01:02Z",
        "body": "Did you mean\n\n```\nfastfetch -s custom --custom-key \"Custom key\" --custom-format '{#green}'$battery_status\n```\n\nOr\n\n```\nfastfetch -s command --command-key \"Custom key\" --command-text 'acpi -b' --command-format '{#red}{result}'\n```"
      },
      {
        "user": "johnnycarlson",
        "created_at": "2025-02-07T09:19:44Z",
        "body": "I want the ability to pass a variable from different command output. As far as I understand if you pass the `acpi -b`  as command text which is already possible with something like this in config or through argument flags.\n ```\n{\n      \"type\": \"command\",\n      \"key\": \"  OS Age \",\n      \"keyColor\": \"magenta\",\n      \"text\": \"birth_install=$(stat -c %W /); current=$(date +%s); time_progression=$((current - birth_install)); days_difference=$((time_progression / 86400)); echo $days_difference days\"\n},\n``` "
      },
      {
        "user": "CarterLi",
        "created_at": "2025-02-07T10:30:22Z",
        "body": "I still didnt get what you want."
      },
      {
        "user": "johnnycarlson",
        "created_at": "2025-02-07T18:46:52Z",
        "body": "Let me give you an example. Suppose I'm using a `random-image-generator` library which generates random images and some metadata about the image. I want to use that image as logo and the metadata as logo-info. Since it is random, I cannot use static info or calling it multiple time will give different results.\n\nIt is possible to pass output of a command like this `random-image-generator | fastfetch --file-raw - `\nBut how can someone pass the metadata and image to fastfetch at the same time like this?\n`set image (random-image-generator)`\n`fastfetch --raw $image[0] --logo-info $image[1]`\n\nWhat I would want is to pass any custom module name, key, text, format, in this case `--logo-info`. Let me know if you want further clarification."
      },
      {
        "user": "CarterLi",
        "created_at": "2025-02-08T01:03:40Z",
        "body": "I don't think fastfetch has a feature to display the logo info.\n\nIf you have multiple environment variables to pass into fastfetch, you may use `fastfetch -s command --command-key \"Custom key\" --command-text 'echo $VAR1 $VAR2 VAR3'`\n\nNote the syntax of array indices is fish specific. To use fish with `command` module, you may set `--command-shell fish`\n"
      },
      {
        "user": "johnnycarlson",
        "created_at": "2025-02-08T08:27:02Z",
        "body": "ENVIRONMENT VARIABLE is what can work for me. Thank you. I can set env variables and use it as command text. "
      },
      {
        "user": "CarterLi",
        "created_at": "2025-02-08T14:29:19Z",
        "body": "Syntax `{$ENV_VAR}` was added (array indices are not supported). You can use this syntax in any module, including `Custom`. Eg. `fastfetch -s custom --custom-format '{$VAR1} {$VAR2} {$VAR3}'`"
      }
    ]
  },
  {
    "number": 1490,
    "title": "[BUG] Unable to install on Debian 12 64-bit",
    "created_at": "2025-01-08T03:55:53Z",
    "closed_at": "2025-01-08T07:46:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/fastfetch-cli/fastfetch/issues/1490",
    "body": "I followed the instructions and downloaded the v2.33.0 file (fastfetch-linux-armv71.deb).  I then run this install command on my RPi running raspios bookworm:\r\n\r\nsudo dpkg -i fastfetch-linux-armv71.deb\r\n\r\nI originally received an error about libc6 but resolved it.\r\n\r\nNow when I attempt to run fastfetch, I get this error \"-bash: /usr/bin/fastfetch: cannot execute binary file: Exec format error\"\r\n\r\nAny ideas how to resolve this issue?",
    "comments_url": "https://api.github.com/repos/fastfetch-cli/fastfetch/issues/1490/comments",
    "author": "k5map",
    "comments": [
      {
        "user": "CarterLi",
        "created_at": "2025-01-08T07:45:52Z",
        "body": "AFAIK armv7 is 32-bit. You may need to install the aarch64 version"
      }
    ]
  },
  {
    "number": 1399,
    "title": "[FEAT] use bold for printing logos to better match neofetch output",
    "created_at": "2024-11-14T19:09:23Z",
    "closed_at": "2024-11-15T00:38:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/fastfetch-cli/fastfetch/issues/1399",
    "body": "## Wanted features:\r\n\r\nPrint ascii logos in bold. Or provide an option to print in bold, whether this is the default or not.\r\n\r\nThis can currently be emulated with something like `fastfetch --logo-color-1 bright_green` (which works on macos since the first color of the apple logo is green, this would obviously not work correctly for other logos).\r\n\r\n## Motivation:\r\n\r\n`neofetch` prints logos in bold by default. This can be toggled with `neofetch --ascii_bold [on|off]`. Since most of fastfetch's logo's appear to be copy/pasted from neofetch it would make sense to replicate this behavior, or at least make it an option.\r\n",
    "comments_url": "https://api.github.com/repos/fastfetch-cli/fastfetch/issues/1399/comments",
    "author": "rrotter",
    "comments": [
      {
        "user": "CarterLi",
        "created_at": "2024-11-15T00:38:30Z",
        "body": "It's already in bold if your terminal is in dark mode.\r\n\r\nThere is also an option to control it: `fastfetch --bright-color [true|false]`"
      },
      {
        "user": "rrotter",
        "created_at": "2024-11-15T01:44:36Z",
        "body": "Thank you. I was able to get this working by adding `\"display\": {\"brightColor\": true}` to my config. I missed this option because I was looking for options under `logo` rather than `display`."
      }
    ]
  },
  {
    "number": 547,
    "title": "presets",
    "created_at": "2023-08-29T09:27:04Z",
    "closed_at": "2023-08-29T09:34:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/fastfetch-cli/fastfetch/issues/547",
    "body": "Greetings,\r\nIn your presets folder, how do I use the files that are not .jsonc? ",
    "comments_url": "https://api.github.com/repos/fastfetch-cli/fastfetch/issues/547/comments",
    "author": "iomari",
    "comments": [
      {
        "user": "CarterLi",
        "created_at": "2023-08-29T09:30:34Z",
        "body": "`fastfetch --config /path/to/the/presets/file`"
      },
      {
        "user": "iomari",
        "created_at": "2023-08-29T09:32:29Z",
        "body": "thanks. They all worked except some failed with:\r\nError: unknown option: --cpu-usage-format"
      },
      {
        "user": "CarterLi",
        "created_at": "2023-08-29T09:34:42Z",
        "body": "Good. I'll fix that"
      },
      {
        "user": "iomari",
        "created_at": "2023-08-29T09:49:24Z",
        "body": "cool. BTW,this is an excellent tool. I've tried them all and this is definitely the best of the lot."
      },
      {
        "user": "CarterLi",
        "created_at": "2023-08-29T09:54:11Z",
        "body": "Thanks.\r\n\r\nHave fun!"
      }
    ]
  },
  {
    "number": 129,
    "title": "[Question] Why isn't everything here just put on neofetch?",
    "created_at": "2022-02-03T11:11:25Z",
    "closed_at": "2022-02-03T16:11:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/fastfetch-cli/fastfetch/issues/129",
    "body": "If fastfetch is so much faster then neofetch and they're both open source and MIT licensed, why isn't the code here just put on neofetch? What's the point of an entirely new program to do the same thing but better? Why not just make the original neofetch faster? It's not like there's people out there who specifically need neofetch to be slow",
    "comments_url": "https://api.github.com/repos/fastfetch-cli/fastfetch/issues/129/comments",
    "author": "ShawkMusic",
    "comments": [
      {
        "user": "hmlendea",
        "created_at": "2022-02-03T15:30:21Z",
        "body": "Because this would require 100% of neofetch's code to be wiped, and replaced with this code.\r\n\r\nNeofetch is written in bash, fastfetch is written in C.\r\n\r\nSo it would not be just an improvement, it would mean killing neofetch to put fastfetch in its place... or some might say it would basically be stealing its name.\r\n\r\nPS: It's also worth mentioning that the chosen language alone would be reason enough for some people to chose one or the other. Why? I don't know, but some people seem to be very religious about coding languages, for some reason.\r\nPitchforks and torches would be raised if anyone dared to change it to another language... and a dozen more *fetch forks / reimplementations would be spawned out of that conflict."
      },
      {
        "user": "LinusDierheimer",
        "created_at": "2022-02-03T15:47:09Z",
        "body": "A second point is that fastfetch and neofetch target a different set of machines. Fastfetch targets only Linux Systems, so i can make use of a lot of linux specific features to achieve the speed fastfetch has. Neofetch also supports MacOS, Windows and a lot of other different systems. If you wanted fastfetch to also support those systems, you basically would have to rewrite the whole thing from scratch.\r\n\r\nThat is a common deal in software development: If you support less, you can support the remaining better."
      }
    ]
  }
]