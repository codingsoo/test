[
  {
    "number": 696,
    "title": "Questions about zlib in earlier versions",
    "created_at": "2024-03-05T02:11:32Z",
    "closed_at": "2024-09-15T15:14:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/ZipArchive/ZipArchive/issues/696",
    "body": "Hello, is zipArchive actively triggering the zlib vulnerability when I use version 2.4.3?",
    "comments_url": "https://api.github.com/repos/ZipArchive/ZipArchive/issues/696/comments",
    "author": "beibeiGeng",
    "comments": [
      {
        "user": "beibeiGeng",
        "created_at": "2024-03-08T07:06:51Z",
        "body": "Hi, if you see this message, I hope you can confirm this issue. Does version 2.4.3 actively trigger this vulnerability?"
      },
      {
        "user": "Coeur",
        "created_at": "2024-09-15T15:14:41Z",
        "body": "Duplicate of #709"
      }
    ]
  },
  {
    "number": 661,
    "title": "How to get the error?",
    "created_at": "2022-12-13T19:26:12Z",
    "closed_at": "2024-11-10T14:11:17Z",
    "labels": [
      "question",
      "hard"
    ],
    "url": "https://github.com/ZipArchive/ZipArchive/issues/661",
    "body": "This isn't a bug -- just a question. How do we get the error that caused, say, `zip.open()` to fail?",
    "comments_url": "https://api.github.com/repos/ZipArchive/ZipArchive/issues/661/comments",
    "author": "dpkirchner",
    "comments": [
      {
        "user": "Coeur",
        "created_at": "2024-09-15T15:39:05Z",
        "body": "This is not supported by the underlying minizip-ng.\r\n\r\nFor `zip.open()` specifically, one of the possible failures is in `calloc` (not enough memory to allocate)."
      }
    ]
  },
  {
    "number": 494,
    "title": "SSZipArchive.createZipFile(atPath: aTempZipPath, withContentsOfDirectory: folderURL.path, keepParentDirectory: false)",
    "created_at": "2019-02-04T12:26:57Z",
    "closed_at": "2019-05-05T09:45:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/ZipArchive/ZipArchive/issues/494",
    "body": "I am keeping \"keepParentDirectory\" as \"false\", so it will remove original directory/folder after creating zip. keepParentDirectory is meant to remove original folder after compression?. If yes it is not removing original folder. Sorry if my understanding is wrong about \"keepParentDirectory\" property.",
    "comments_url": "https://api.github.com/repos/ZipArchive/ZipArchive/issues/494/comments",
    "author": "ReddyBasha",
    "comments": [
      {
        "user": "Coeur",
        "created_at": "2019-04-28T08:14:18Z",
        "body": "`keepParentDirectory` will affect unzipping:\r\n\r\n* if you zipped the file with `true`, then unzipping will give you:\r\n  * parent/file1\r\n  * parent/file2\r\n\r\n* you zipped the file with `false`, then unzipping will give you:\r\n  * file1\r\n  * file2\r\n\r\nZipping doesn't delete the original files.\r\n"
      }
    ]
  },
  {
    "number": 489,
    "title": "License GNU General Public License (GPL) is in conflict with Apple App Store? Is ZipArchive allowed to go to Apple App Store?",
    "created_at": "2019-01-03T23:22:54Z",
    "closed_at": "2019-01-04T00:39:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/ZipArchive/ZipArchive/issues/489",
    "body": "License GNU General Public License (GPL) is in conflict with Apple App Store? Is ZipArchive allowed to go to Apple App Store?\r\n\r\nI find GNU GPL license in following pod file places\r\nfileenc.h\r\nfileenc.c\r\nprng.c\r\nprng.h ",
    "comments_url": "https://api.github.com/repos/ZipArchive/ZipArchive/issues/489/comments",
    "author": "krishkumar83",
    "comments": [
      {
        "user": "jhudsonWA",
        "created_at": "2019-01-04T00:39:36Z",
        "body": "Yes, there are thousands of apps in the App Store that use this library. You are fine. "
      }
    ]
  },
  {
    "number": 467,
    "title": "Possible infinite loop",
    "created_at": "2018-08-01T21:59:43Z",
    "closed_at": "2018-08-25T14:41:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/ZipArchive/ZipArchive/issues/467",
    "body": "In line 469 of SSZipArchive.m, you have a possible infinite loop. If you pass a negative `nestedZipLevel`, I don't see anything keeping the recursive call from going on forever.\r\n\r\nI didn't test it, though.",
    "comments_url": "https://api.github.com/repos/ZipArchive/ZipArchive/issues/467/comments",
    "author": "jabcross",
    "comments": [
      {
        "user": "Coeur",
        "created_at": "2018-08-25T14:41:15Z",
        "body": "In line 217 of the same file, if you change `nestedZipLevel:0` with `nestedZipLevel:-1`, all our current tests will still succeed: that is because this value is just setting the maximum depth to unzip when you have nested zip files (and our tests don't have nested zips...).\r\n\r\nIt's not an infinite loop: if you set it to a negative value, it will just unzip recursively archive files within archive files within archive files, etc. And it will stop when there is nothing more to unzip."
      }
    ]
  },
  {
    "number": 435,
    "title": "Compress the sandbox problem",
    "created_at": "2018-01-03T09:54:11Z",
    "closed_at": "2018-04-10T04:03:16Z",
    "labels": [
      "question",
      "needs-reproduction"
    ],
    "url": "https://github.com/ZipArchive/ZipArchive/issues/435",
    "body": "Compressed ios sandbox file, and then overwrite the operation causes the program not to read sandbox file, more serious",
    "comments_url": "https://api.github.com/repos/ZipArchive/ZipArchive/issues/435/comments",
    "author": "xinyangslove",
    "comments": [
      {
        "user": "jhudsonWA",
        "created_at": "2018-01-06T22:34:58Z",
        "body": "Can you give an example?"
      },
      {
        "user": "jhudsonWA",
        "created_at": "2018-01-16T06:17:42Z",
        "body": "Anything? Please respond or I will close this issue within 24 hours."
      },
      {
        "user": "xinyangslove",
        "created_at": "2018-01-16T08:07:30Z",
        "body": "Found a problem, may not be caused by ZipArchive, the other is ZipArchive If coupled with the password decompression rate is very slow"
      },
      {
        "user": "jhudsonWA",
        "created_at": "2018-01-16T13:42:58Z",
        "body": "Details please: what environment, iOS version, ZipArchive version, etc. \r\n\r\nWe test decompression with a password in our standard test suite and it is not slow."
      },
      {
        "user": "jhudsonWA",
        "created_at": "2018-04-10T03:36:52Z",
        "body": "Any update on this?"
      },
      {
        "user": "Coeur",
        "created_at": "2018-04-10T04:00:16Z",
        "body": "He wrote \"_may not be caused by ZipArchive_\", so I wouldn't worry much. ;)\r\n\r\nMaybe we close it for now, and we re-open it if we get a confirmation that it's caused by ZipArchive."
      },
      {
        "user": "jhudsonWA",
        "created_at": "2018-04-10T04:03:16Z",
        "body": "Done and done. :) "
      }
    ]
  },
  {
    "number": 431,
    "title": "Password not recognized - should backwards compatibility for pre-AES files created with ZipArchive be built in?",
    "created_at": "2017-12-02T06:25:39Z",
    "closed_at": "2024-11-11T08:19:15Z",
    "labels": [
      "question",
      "needs-reproduction"
    ],
    "url": "https://github.com/ZipArchive/ZipArchive/issues/431",
    "body": "I have a file created with an app using ZipArchive in 2013. I have the correct password, but I am using SSZipArchive in an app trying to unzip that file, and it is saying that the password is wrong. I am certain that the passcode is correct as I have the code that produced the file with the passcode. Have you ever heard of an issue like this before?",
    "comments_url": "https://api.github.com/repos/ZipArchive/ZipArchive/issues/431/comments",
    "author": "inPhilly",
    "comments": [
      {
        "user": "jhudsonWA",
        "created_at": "2017-12-02T16:42:56Z",
        "body": "My guess is that the archive was created before AES encryption support landed. Now when it tries to apply the password it is doing so using AES which would make it not match. We were looking into a way to allow you to turn off AES support programmatically, but right now that is not possible. The passwords from before were just standard zip passwords though so any unzipping program should be able to open it. AES encryption is much stronger which is why we added support for it.\r\n\r\nCan you try this, in your source edit unzip.h and comment the line: #define HAVE_AES, then try the unzip. That should disable AES support on compile but we don't recommend it all the time."
      },
      {
        "user": "inPhilly",
        "created_at": "2017-12-02T20:26:18Z",
        "body": "I'm building via Carthage using objective-c. can't seem to find that file..."
      },
      {
        "user": "inPhilly",
        "created_at": "2017-12-02T20:28:23Z",
        "body": "I only need this to unzip those old files. Shouldn't that flag be available in the header files available for Carthage installs?"
      },
      {
        "user": "inPhilly",
        "created_at": "2017-12-02T20:38:02Z",
        "body": "Okay - I replaced with a manual install and did as you said. now it is saying that the password is correct, but the unzip still fails without a reason. Any more thoughts (and thanks for your help by the way)?\r\n"
      },
      {
        "user": "inPhilly",
        "created_at": "2017-12-02T20:49:48Z",
        "body": "Sooo, I went back to the old version, when the app was shipped, before AES. That worked. Thank you! "
      },
      {
        "user": "inPhilly",
        "created_at": "2017-12-02T21:04:09Z",
        "body": "Still, it does seem odd that backwards compatibility was not built in... am I wrong?\r\n"
      },
      {
        "user": "jhudsonWA",
        "created_at": "2017-12-02T22:40:34Z",
        "body": "It should be... Would you be willing to share the zip file? Or is that not possible?\n\n"
      },
      {
        "user": "inPhilly",
        "created_at": "2017-12-03T05:33:05Z",
        "body": "I'm sorry - I wish I could. The file has data that might be sensitive and even so, I can't share the password.\r\n"
      },
      {
        "user": "inPhilly",
        "created_at": "2017-12-03T05:35:34Z",
        "body": "I do want to help you though. The old code gives so many warnings in Xcode and I don't know how to fix them haha! In any case, I always want to try to help a fellow programmer. I am trying to think of how I can help."
      },
      {
        "user": "jhudsonWA",
        "created_at": "2017-12-03T05:40:45Z",
        "body": "Can you password protect just a text file using the old version, with a password like password and then try it in latest version to see if it has the same issue?\r\n"
      },
      {
        "user": "jhudsonWA",
        "created_at": "2017-12-03T05:41:02Z",
        "body": "That would give us a test file that is not sensitive. "
      },
      {
        "user": "inPhilly",
        "created_at": "2017-12-03T05:46:39Z",
        "body": "No, it is not that kind of an app. I wish I could. I can tell you which version of ZipArchive I used to create the file though.\r\n"
      },
      {
        "user": "inPhilly",
        "created_at": "2017-12-03T05:47:24Z",
        "body": "//  ZipArchive.m\r\n//  \r\n//\r\n//  Created by aish on 08-9-11.\r\n//  acsolu@gmail.com\r\n//  Copyright 2008  Inc. All rights reserved."
      },
      {
        "user": "inPhilly",
        "created_at": "2017-12-03T05:47:41Z",
        "body": "Does that help at all?"
      },
      {
        "user": "jhudsonWA",
        "created_at": "2017-12-03T05:55:38Z",
        "body": "Probably not without a version number of some sort. Oh well, glad you got your data decrypted. I'm going to close and reopen in the future if it comes up again.\r\n\r\n2008 was a long time ago before any of the current maintainers joined the project. It's just as likely there was a bug in that version that was fixed later in regards to passwords. Without a test file no way to know though. Again thanks for your help."
      },
      {
        "user": "inPhilly",
        "created_at": "2017-12-03T06:13:11Z",
        "body": "I can cut and paste the files if that would help.\r\n"
      },
      {
        "user": "inPhilly",
        "created_at": "2017-12-03T06:15:55Z",
        "body": "That didn't work. If you have a Dropbox link or somewhere I can upload to, I can give you all the files. There aren't too many - 9."
      },
      {
        "user": "inPhilly",
        "created_at": "2017-12-03T06:58:53Z",
        "body": "I don't think it is letting me upload, only download."
      },
      {
        "user": "inPhilly",
        "created_at": "2017-12-03T06:59:55Z",
        "body": "My Dropbox is completely full or else I'd put it there. "
      },
      {
        "user": "inPhilly",
        "created_at": "2017-12-03T07:00:05Z",
        "body": "2 Gigs goes fast."
      },
      {
        "user": "inPhilly",
        "created_at": "2017-12-03T07:08:48Z",
        "body": "Done."
      },
      {
        "user": "jhudsonWA",
        "created_at": "2017-12-03T12:22:24Z",
        "body": "Thanks!"
      },
      {
        "user": "inPhilly",
        "created_at": "2017-12-06T02:10:12Z",
        "body": "Any updates?\r\n"
      },
      {
        "user": "jhudsonWA",
        "created_at": "2017-12-06T17:17:23Z",
        "body": "No, this is lower priority for us, but we will get to it. I'm glad you got your old archives uncompressed. "
      },
      {
        "user": "inPhilly",
        "created_at": "2018-01-18T14:54:32Z",
        "body": "Any more thoughts on possibly updating this? I am now having to use the old version and it is causing so many warnings in my app (I don't know how to make these errors go away because I don't know this language). I understand that this is low priority, but in my apps, I try to take care of people all the way back to the first version in terms of making sure the app is operable. If I don't want to render my user's older backup files unusable, I have to use this bug-filled version.  : ( "
      },
      {
        "user": "inPhilly",
        "created_at": "2018-02-15T22:57:59Z",
        "body": "Any ideas on another library I could use that would handle the old files properly and will compile without multiple errors?"
      },
      {
        "user": "jhudsonWA",
        "created_at": "2018-02-15T23:47:26Z",
        "body": "So I just spent a few minutes comparing the password code in the old version to the password code in the new for non AES paths and I'm not seeing differences. The newest version works with a password protected file that has not been protected with AES, as that test is part of our test suite. \r\n\r\nSo it has to be something else, like a bug in the old version that created zip files with invalid passwords. \r\n\r\nI don't know what kind of app you made, but without a test file, it's really hard to test compatibility.  Do you not have a way to create a backup with test data using the old library that shows the problem?\r\n\r\nIf you try to unzip one of the files with the problem using the standard mac os unzip client does it work?"
      },
      {
        "user": "Coeur",
        "created_at": "2018-04-09T09:28:34Z",
        "body": "@inPhilly Hi, and sorry for the late response. Normally, we never meant to broke decompression of anything. Please provide me a sample zip file (and its password) that doesn't uncompress anymore, and I'll look into what is causing the issue."
      },
      {
        "user": "jhudsonWA",
        "created_at": "2018-04-10T03:36:19Z",
        "body": "@Coeur I did ask for a simple project and due to the type of zip files @inPhilly's app creates I have not been able to get one yet. Hopefully they can supply a test file and we can get this one figured out."
      },
      {
        "user": "Coeur",
        "created_at": "2024-11-11T08:19:15Z",
        "body": "Our unit tests ensure we support both AES decryption (testUnzippingWithAESPassword) and PKWARE decryption (testUnzippingWithPassword).\r\n\r\nClosing, in the absence of reproduction steps.\r\nI can re-open if you provide a sample archive with the issue."
      }
    ]
  },
  {
    "number": 419,
    "title": "if the uzip fails, will have an impact on the original file?",
    "created_at": "2017-11-06T02:53:22Z",
    "closed_at": "2017-11-28T23:06:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/ZipArchive/ZipArchive/issues/419",
    "body": "When i choose to overwrite the same file in the directory, if the uzip fails, will have an impact on the original file? thank you",
    "comments_url": "https://api.github.com/repos/ZipArchive/ZipArchive/issues/419/comments",
    "author": "LeeBigRay",
    "comments": [
      {
        "user": "Coeur",
        "created_at": "2017-11-06T06:17:23Z",
        "body": "failing or succeeding, unzipping shall not have any impact on the original archive... unless maybe if one of the files inside the archive had the same name as the archive itself. That edge case would be interesting to test and document.\r\n\r\nBut best practice for unzipping is to always have an empty folder for destination."
      },
      {
        "user": "jhudsonWA",
        "created_at": "2017-11-28T23:06:42Z",
        "body": "Agreed. I think @Coeur answered your question. I'm going to close the issue. "
      }
    ]
  },
  {
    "number": 411,
    "title": "Any example of using NSURLSessionDownloadTask",
    "created_at": "2017-10-24T06:35:59Z",
    "closed_at": "2017-10-25T04:35:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/ZipArchive/ZipArchive/issues/411",
    "body": "I am using NSURLSessionDownloadTask to download \"**zip**\" from web-service.\r\nAnd need to extract and use those extracted files for project.\r\n\r\n```\r\n    NSURL *url = [NSURL URLWithString:urlString];\r\n    if (url == nil) return;\r\n\r\n    NSURLSessionConfiguration *backgroundSessionConfiguration = [NSURLSessionConfiguration defaultSessionConfiguration];\r\n    self.backgroundSession = [NSURLSession sessionWithConfiguration:backgroundSessionConfiguration\r\n                                                           delegate:self\r\n                                                      delegateQueue:[NSOperationQueue mainQueue]];\r\n    \r\n    NSURLSessionDownloadTask *downloadTask = [self.backgroundSession\r\n                                              downloadTaskWithURL:url\r\n      completionHandler:^(NSURL *location, NSURLResponse *response, NSError *error) {\r\n          if (error == nil) {\r\n              NSLog(@\"Temporary file = %@\", location);\r\n\r\n              NSError *err = nil;\r\n              NSFileManager *fileManager = [NSFileManager defaultManager];\r\n              NSString *docsDir = [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) objectAtIndex:0];\r\n\r\n              NSString *unzipPath = [self tempUnzipPath];\r\n              [SSZipArchive unzipFileAtPath:docsDir toDestination:unzipPath];\r\n              \r\n              /*\r\n              NSURL *docsDirURL = [NSURL fileURLWithPath:[docsDir stringByAppendingPathComponent:@\"out.zip\"]];\r\n              if ([fileManager moveItemAtURL:location\r\n                                       toURL:docsDirURL\r\n                                       error:&err]) {\r\n                  NSLog(@\"File is saved to = %@\", docsDir);\r\n                  [SSZipArchive unzipFileAtPath:docsDir toDestination:docsDir];\r\n              } else {\r\n                  NSLog(@\"failed to move: %@\", [error userInfo]);\r\n              }\r\n              */\r\n          }\r\n    }];\r\n    [downloadTask resume];\r\n}\r\n```\r\n\r\nAny working example of extracting the file using web services.",
    "comments_url": "https://api.github.com/repos/ZipArchive/ZipArchive/issues/411/comments",
    "author": "bishalg",
    "comments": [
      {
        "user": "jhudsonWA",
        "created_at": "2017-10-24T15:29:48Z",
        "body": "What's not working about this one? Give us some details on what you are seeing."
      },
      {
        "user": "bishalg",
        "created_at": "2017-10-25T03:32:22Z",
        "body": "@jhudsonWA : \r\n1. `NSURLSessionDownloadTask's` completion task with `NSURL *location` returns the following location - \r\n`file:///Users/bishalghimire/Library/Developer/CoreSimulator/Devices/FA54F541-2559-45AC-9380-7C4842C071EA/data/Containers/Data/Application/07E83F1B-720C-478E-9D77-961B34D6155C/tmp/CFNetworkDownload_Jo1hoi.tmp`\r\n\r\nQ1. The downloaded file is actually a zip file so shouldn't the file extension be .zip ?\r\nMaybe its \"tmp\" until we move the file to `NSDocumentDirectory` ?\r\n\r\nQ2. Can we extract the downloaded file on \"/tmp\" folder or should we proceed to move to document folder before we can extract ? \r\n\r\nQ3. Will the extract work for zip file with different file extension ? ie the file is correct zip formate with just file extension of other extension.\r\n\r\nIf we have any example of using zip extraction which is downloaded from web service would be helpful."
      },
      {
        "user": "bishalg",
        "created_at": "2017-10-25T04:30:06Z",
        "body": "For following code - \r\n\r\n ```\r\n    NSString *docsDir = [NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES) objectAtIndex:0];\r\n    NSURL *docsDirURL = [NSURL fileURLWithPath:[docsDir stringByAppendingPathComponent:@\"out.zip\"]];\r\n    [SSZipArchive unzipFileAtPath:docsDirURL.absoluteString toDestination:docsDir];\r\n```\r\n\r\nWhere, \r\ndocsDirURL.absoluteString\r\n`file:///Users/bishalghimire/Library/Developer/CoreSimulator/Devices/FA54F541-2559-45AC-9380-7C4842C071EA/data/Containers/Data/Application/3F7C7E7B-455D-4AF7-A045-477DC7BC2DAD/Documents/out.zip`\r\n\r\ndocsDir\r\n`/Users/bishalghimire/Library/Developer/CoreSimulator/Devices/FA54F541-2559-45AC-9380-7C4842C071EA/data/Containers/Data/Application/3F7C7E7B-455D-4AF7-A045-477DC7BC2DAD/Documents`\r\n\r\nGetting the error - \r\n`Error Domain=SSZipArchiveErrorDomain Code=-1 \"failed to open zip file\" UserInfo={NSLocalizedDescription=failed to open zip file}`\r\n\r\n"
      },
      {
        "user": "bishalg",
        "created_at": "2017-10-25T04:35:34Z",
        "body": "Fixed the issue \r\nPath should NOT contain - `file:///`\r\nSo the way to fix is use NSURL's `path` property and not the `absoluteString`.\r\n\r\nAlso we need to move the file downloaded from temp folder to documents folder."
      }
    ]
  },
  {
    "number": 406,
    "title": "主线程卡死",
    "created_at": "2017-10-16T03:25:32Z",
    "closed_at": "2017-10-16T14:24:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/ZipArchive/ZipArchive/issues/406",
    "body": "您好,请问我执行该解压后,会导致解压期间主线程卡死,是必须要异步执行该方法么?\r\n[SSZipArchive unzipFileAtPath:downloadPath toDestination:destinationPath overwrite:YES password:nil error:&error delegate:self]\r\n\r\n",
    "comments_url": "https://api.github.com/repos/ZipArchive/ZipArchive/issues/406/comments",
    "author": "survivorsfyh",
    "comments": [
      {
        "user": "Coeur",
        "created_at": "2017-10-16T07:58:27Z",
        "body": "Hum... Google translate:\r\n>The main thread stuck\r\n>\r\n>May I ask the implementation of the decompression, will lead to decompression during the main thread stuck, it is necessary to implement the method asynchronously?\r\n"
      },
      {
        "user": "jhudsonWA",
        "created_at": "2017-10-16T14:24:06Z",
        "body": "Ah, Yes. If you want the decompression to be asynchronous then it should be fired on it's own operation queue or thread.  \r\n\r\n是。如果希望解压缩是异步的，那么它应该在自己的队列或线程上被触发。"
      },
      {
        "user": "survivorsfyh",
        "created_at": "2017-10-17T01:27:38Z",
        "body": "thank u for u answer,if the running method causes the main thread to die,it`s normal;\r\ni have started asynchronously to execute the call to this method."
      },
      {
        "user": "survivorsfyh",
        "created_at": "2017-10-17T01:37:21Z",
        "body": "but i also have a question that when i invoke the asynchronous method,\r\ni will end the decompression method and i need manually switch to the main thread,\r\ni feel like there`s something wrong,would u please advise,\r\nthank u!\r\n\r\nfor example:\r\ndispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{\r\n        NSError *error = nil;\r\n        if ([SSZipArchive unzipFileAtPath:downloadPath toDestination:destinationPath overwrite:YES password:nil error:&error delegate:self]) {\r\n            //do somethings\r\n        }\r\n        else {\r\n            //do somethings\r\n        }\r\n        \r\n        dispatch_async(dispatch_get_main_queue(), ^{\r\n            if (results) {\r\n                results(dataSource, error);\r\n            }\r\n        });\r\n        \r\n    });"
      },
      {
        "user": "Coeur",
        "created_at": "2017-10-17T01:57:49Z",
        "body": "Well, why would we return to the main thread from the lib?\r\nMain thread is used for UI, while zipping/unzipping is unrelated to UI."
      },
      {
        "user": "survivorsfyh",
        "created_at": "2017-10-17T06:43:46Z",
        "body": "i need to turn the results back to the UI;\r\nso call the main thread in asynchrony;\r\n"
      },
      {
        "user": "Coeur",
        "created_at": "2017-10-17T08:20:31Z",
        "body": "Then, yes, you need to call `dispatch_async(dispatch_get_main_queue()` yourself. :)"
      },
      {
        "user": "survivorsfyh",
        "created_at": "2017-10-17T09:12:06Z",
        "body": "yes,i do it after;\r\nthank u for u advice!"
      }
    ]
  },
  {
    "number": 381,
    "title": "when swift4.0 support?",
    "created_at": "2017-09-20T07:27:11Z",
    "closed_at": "2017-09-20T19:00:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/ZipArchive/ZipArchive/issues/381",
    "body": "I build my project in Xcode9.0 ,swit4.0, show the error: Module complied with swift3.1 cannot be imported in swift 4.0",
    "comments_url": "https://api.github.com/repos/ZipArchive/ZipArchive/issues/381/comments",
    "author": "XcqRomance",
    "comments": [
      {
        "user": "Coeur",
        "created_at": "2017-09-20T09:02:25Z",
        "body": "clean your derived data and rebuild. The code is in ObjC, not Swift."
      },
      {
        "user": "jhudsonWA",
        "created_at": "2017-09-20T19:00:01Z",
        "body": "Yep. I have a Swift 4 project running in Xcode 9 and it works great. The only swift in the project is the demo project and that does not affect the main library. \r\nI'm going to close this. Let us know if cleaning derived data does not resolve. "
      },
      {
        "user": "XcqRomance",
        "created_at": "2017-09-23T02:27:00Z",
        "body": "thanks, clean derived data, and rebuild in Xcode 9. It resovled"
      },
      {
        "user": "jhudsonWA",
        "created_at": "2017-09-23T18:18:22Z",
        "body": "Great. I'll keep it closed."
      }
    ]
  },
  {
    "number": 371,
    "title": "Background Unzipping",
    "created_at": "2017-09-07T03:34:51Z",
    "closed_at": "2017-09-23T18:19:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/ZipArchive/ZipArchive/issues/371",
    "body": "Since I extract the zip file around 600M, if the app will sleep, is there any problem? Does this library already support background unzip process? Thanks.",
    "comments_url": "https://api.github.com/repos/ZipArchive/ZipArchive/issues/371/comments",
    "author": "tharhtet",
    "comments": [
      {
        "user": "jhudsonWA",
        "created_at": "2017-09-07T15:23:03Z",
        "body": "I've always just told the OS to not sleep during the unzip process. In Swift that looks like this:\r\n\r\nUIApplication.shared.isIdleTimerDisabled = true"
      },
      {
        "user": "Coeur",
        "created_at": "2017-09-16T14:45:09Z",
        "body": "@tharhtet does that answer your question?"
      },
      {
        "user": "jhudsonWA",
        "created_at": "2017-09-23T18:19:48Z",
        "body": "As for background unzipping that would be up to you to wrap in a background process. But I still suggest just not allowing the system to go to sleep while you are unzipping. I'm going to close this. Re-open if you have more questions."
      }
    ]
  },
  {
    "number": 319,
    "title": "What is the expected behavior of unzipping a zip of zips?",
    "created_at": "2017-03-02T00:18:57Z",
    "closed_at": "2017-10-09T07:18:52Z",
    "labels": [
      "bug",
      "question"
    ],
    "url": "https://github.com/ZipArchive/ZipArchive/issues/319",
    "body": "What is the expected behavior when you unzip (via `SSZipArchive.unzipFile(atPath: ..., toDestination: ...)` in Swift) a .zip file which contains only other zip files?\r\n\r\ne.g.:\r\n\r\nA.zip\r\n|_ B.zip\r\n|_ C.zip\r\n|_ D.zip\r\n\r\nI am unzipping A.zip. What I observe is that I get the contents of D.zip in my destination directory. This is unexpected.\r\n\r\nThank you very much",
    "comments_url": "https://api.github.com/repos/ZipArchive/ZipArchive/issues/319/comments",
    "author": "mrubin",
    "comments": [
      {
        "user": "Coeur",
        "created_at": "2017-10-07T20:18:29Z",
        "body": "I agree automatically unzipping zip files is a bug. It should be optional."
      }
    ]
  },
  {
    "number": 163,
    "title": "2.0 Kickoff",
    "created_at": "2015-06-22T22:10:50Z",
    "closed_at": "2016-09-21T16:02:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/ZipArchive/ZipArchive/issues/163",
    "body": "As you may know, @soffes has formed a new Github organisation for ZipArchive. (previously called SSZipArchive. We have been planning to build a 2.0 version that includes wide-spread improvements. We're looking at modern Objective-C, better Swift bridging, nullability and more. I am looking for people who would like to contribute to the new version to start brainstorming.\n\nSo let's start that here! :smiley:\n",
    "comments_url": "https://api.github.com/repos/ZipArchive/ZipArchive/issues/163/comments",
    "author": "istx25",
    "comments": [
      {
        "user": "istx25",
        "created_at": "2015-06-22T22:13:48Z",
        "body": "I personally think that it is time to put `minizip` to bed and either find something that's better or write our own specifically for ZipArchive. Our current version of ZipArchive is using a lot of legacy Objective-C and C technologies.\n"
      },
      {
        "user": "istx25",
        "created_at": "2015-06-22T22:15:22Z",
        "body": "@jhudsonWA What do you think?\n"
      },
      {
        "user": "jhudsonWA",
        "created_at": "2015-06-22T22:24:23Z",
        "body": "Got it. minizip does seem to be the defacto for similar projects. However, it also has not been updated for years. \n"
      },
      {
        "user": "jhudsonWA",
        "created_at": "2015-06-22T22:25:07Z",
        "body": "If we are brainstorming, I would love a way to be able to get progress during the unzipping process for each file and not just an event once a file is unzipped or zipped.\n"
      },
      {
        "user": "istx25",
        "created_at": "2015-06-22T22:30:42Z",
        "body": "I would think that in between the time that `minizip` went inactive, a lot of improvements to that area probably exist. I think that we should build a modern `minizip`-like library that we can use for ZipArchive (2.0). Maybe that could be a repository/project on its own?\n"
      },
      {
        "user": "istx25",
        "created_at": "2015-06-22T23:04:36Z",
        "body": "We should also plan out what features we would like in the 2.0 version. If there are any unnecessary ones that exist in v0.3.2. Most of the existing features will be remade for modern Objective-C and a style guide.\n"
      },
      {
        "user": "scspijker",
        "created_at": "2015-06-30T14:55:52Z",
        "body": "It seems that the ZIP format hasn't really changed over the last 5 years, so the fact that Minizip hasn't been updated recently would not disqualify it from being a well proven and tested library :)\n\nHowever, I do think ZipArchive should get a 2.0 release, and the main thing would be to first test all the pull requests that have (largely untested) been granted recently.\n\nSwift support could be a version 3.0. Cleaning up and testing current HEAD would be most important imho.\n"
      },
      {
        "user": "istx25",
        "created_at": "2015-07-10T10:53:16Z",
        "body": "Sorry for the delayed response! I've been in the middle of an overseas move. \n\nI agree with @scspijker that we should fix the Objective-C version and improve the codebase. I am sorry if some of the recently PRs have been granted without being tested. We also need to rename all classname/references from `SSZipArchive` to just `ZipArchive` as @soffes recently moved the project into its own Github Organisation.\n"
      },
      {
        "user": "istx25",
        "created_at": "2015-07-12T12:17:13Z",
        "body": "As previously talked about, I have been working on fixing the Objective-C version before we move onto 3.0 features. I have done the following:\n- [x] Created a new framework project with the name \"ZipArchive\".\n- [x] Rewrote portions to ensure legacy Objective-C was removed.\n- [x] Cleaned up miscellaneous bits and bobs to ensure we're following Apple's style guide.\n- [x] Up-to-date sample code in README.md.\n- [x] Added support for Carthage.\n\nSome of the tests are still failing, but I am going to try to fix them in the coming week, but please feel free to contribute if you would like to. I am currently in a contract and that will have to take priority until it's finished. Let's try to fix what we have before adding additional functionality to ZipArchive! :boom: :+1:\n"
      },
      {
        "user": "istx25",
        "created_at": "2015-07-12T12:22:38Z",
        "body": "I would appreciate any PRs that fix the following broken tests: :kissing_smiling_eyes: :beer:\n\n``` objective\n- (void)testMultipleZipping;\n- (void)testSmallFileUnzipping;\n- (void)testUnzippingWithSymlinkedFileInside;\n- (void)testUnzippingWithRelativeSymlink;\n- (void)testUnzippingWithCancel;\n```\n"
      },
      {
        "user": "istx25",
        "created_at": "2015-07-15T15:16:02Z",
        "body": "@arthurj58 Create a new issue please. This is a thread about the future of this project.\n"
      }
    ]
  },
  {
    "number": 161,
    "title": "Does it support arm64 architecture?",
    "created_at": "2015-06-16T01:50:52Z",
    "closed_at": "2015-07-12T11:13:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/ZipArchive/ZipArchive/issues/161",
    "body": "I wanna know whether this framework support arm64 architecture. Thanks and waiting for the answer.\n",
    "comments_url": "https://api.github.com/repos/ZipArchive/ZipArchive/issues/161/comments",
    "author": "xingye",
    "comments": [
      {
        "user": "istx25",
        "created_at": "2015-07-12T11:13:31Z",
        "body": "Yes.\n"
      }
    ]
  },
  {
    "number": 157,
    "title": "Progress report on zip operations?",
    "created_at": "2015-06-12T00:29:04Z",
    "closed_at": "2015-07-12T12:32:34Z",
    "labels": [
      "feature",
      "question"
    ],
    "url": "https://github.com/ZipArchive/ZipArchive/issues/157",
    "body": "I see that there are for unzipping, but I can't see anything for when you're zipping a file. Is this possible?\n",
    "comments_url": "https://api.github.com/repos/ZipArchive/ZipArchive/issues/157/comments",
    "author": "SLboat",
    "comments": [
      {
        "user": "istx25",
        "created_at": "2015-07-10T11:08:28Z",
        "body": "Not at the moment, but I will add it to the feature request list.\n"
      },
      {
        "user": "istx25",
        "created_at": "2015-07-12T12:32:43Z",
        "body": "Read #163.\n"
      }
    ]
  },
  {
    "number": 151,
    "title": "#Question: about zip, can we get a request to break the zipping?",
    "created_at": "2015-05-17T13:33:34Z",
    "closed_at": "2015-06-09T06:12:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/ZipArchive/ZipArchive/issues/151",
    "body": "",
    "comments_url": "https://api.github.com/repos/ZipArchive/ZipArchive/issues/151/comments",
    "author": "SpongeBob-GitHub",
    "comments": [
      {
        "user": "istx25",
        "created_at": "2015-06-09T06:12:15Z",
        "body": "This feature has been requested in #45. Please feel free to create a PR (with tests). :smile: \n"
      },
      {
        "user": "istx25",
        "created_at": "2015-06-09T06:13:36Z",
        "body": "My bad: Checkout PR #105.\n"
      }
    ]
  },
  {
    "number": 242,
    "title": "No file in my zip when i zip one file",
    "created_at": "2016-03-22T11:58:55Z",
    "closed_at": "2017-07-11T22:08:23Z",
    "labels": [
      "help wanted",
      "needs-reproduction"
    ],
    "url": "https://github.com/ZipArchive/ZipArchive/issues/242",
    "body": "Hi,\n\ni try to zip a file, in my case it's an image and when i unzip it (manually in my finder) there is no file ... but when i zip a folder and i unzip there are files ...\n\nMy code \n`let archivePath = filepathSecure.path!.stringByAppendingString(\"/(self.productName.stringValue).zip\")\n\nSSZipArchive.createZipFileAtPath(archivePath, withContentsOfDirectory: self.pathURL!.path!)`\n",
    "comments_url": "https://api.github.com/repos/ZipArchive/ZipArchive/issues/242/comments",
    "author": "zemadara",
    "comments": [
      {
        "user": "jhudsonWA",
        "created_at": "2016-03-23T23:45:30Z",
        "body": "I'll take a look tomorrow. \n"
      },
      {
        "user": "jhudsonWA",
        "created_at": "2016-03-24T00:03:13Z",
        "body": "How did you zip up  the file by the way? Can you give us a quick snippet of code? \n"
      },
      {
        "user": "chirag04",
        "created_at": "2016-03-24T00:10:04Z",
        "body": "I just saw your commit. seems like what i need is `keepParentDirectory` while unzipping.\n"
      },
      {
        "user": "jhudsonWA",
        "created_at": "2016-03-24T00:10:58Z",
        "body": "I agree. Let me see what I can do\n\n> On Mar 23, 2016, at 5:10 PM, Chirag notifications@github.com wrote:\n> \n> I just saw your commit. seems like what i need is keepParentDirectory while unzipping.\n> \n> —\n> You are receiving this because you commented.\n> Reply to this email directly or view it on GitHub\n"
      }
    ]
  }
]