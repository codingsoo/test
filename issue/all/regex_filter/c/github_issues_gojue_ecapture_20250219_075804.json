[
  {
    "number": 733,
    "title": "Can the http2 frame content include a stream id field?",
    "created_at": "2025-02-13T02:20:11Z",
    "closed_at": "2025-02-14T00:06:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/gojue/ecapture/issues/733",
    "body": "Hello, I observed that in the current http2 protocol content, headers frame and data frame do not have stream id field, which makes it difficult to match the http2request and http2response of the same stream. Is there a way to add a stream id field to the output of header frames and data frames? \nIn addition, the data frame is output of several frames together, can we add an interval between the output of each data frame? \n\nHere are some of the http2 packets that I captured myself\n```\n{\"time\":\"2025-01-21T11:04:30+08:00\",\"message\":\"UUID:2555_2555_nginx_22_1_192.168.20.16:61641-192.168.10.201:5443, Name:HTTP2Response, Type:4, Length:10573\n\nFrame Type\t=>\tHEADERS\nheader field \":status\" = \"200\"\nheader field \"server\" = \"nginx\"\nheader field \"date\" = \"Tue, 21 Jan 2025 03:04:29 GMT\"\nheader field \"content-type\" = \"application/json\"\nheader field \"vary\" = \"origin,access-control-request-method,access-control-request-headers,accept-encoding\"\nheader field \"security-uuid\" = \"1141326612247232512\"\nheader field \"content-encoding\" = \"gzip\"\nheader field \"x-frame-options\" = \"SAMEORIGIN\"\nheader field \"x-content-type-options\" = \"nosniff\"\nheader field \"x-xss-protection\" = \"1; mode=block\"\nheader field \"strict-transport-security\" = \"max-age=31536000; includeSubdomains;\"\nheader field \"x-permitted-cross-domain-policies\" = \"none\"\nheader field \"referrer-policy\" = \"strict-origin-when-cross-origin\"\nheader field \"content-security-policy\" = \"script-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob:;img-src  'self' 'unsafe-inline' data: blob:; style-src 'self' 'unsafe-inline'; worker-src 'self' 'unsafe-inline' * blob:; font-src 'self' 'unsafe-inline' data: blob:;\"\nheader field \"x-downlaod-options\" = \"noopen\"\n\nFrame Type\t=>\tHEADERS\nheader field \":status\" = \"200\"\nheader field \"server\" = \"nginx\"\nheader field \"date\" = \"Tue, 21 Jan 2025 03:04:29 GMT\"\nheader field \"content-type\" = \"application/json\"\nheader field \"content-length\" = \"52\"\nheader field \"vary\" = \"Origin\"\nheader field \"vary\" = \"Access-Control-Request-Method\"\nheader field \"vary\" = \"Access-Control-Request-Headers\"\nheader field \"security-uuid\" = \"1141326612549222400\"\nheader field \"x-frame-options\" = \"SAMEORIGIN\"\nheader field \"x-content-type-options\" = \"nosniff\"\nheader field \"x-xss-protection\" = \"1; mode=block\"\nheader field \"strict-transport-security\" = \"max-age=31536000; includeSubdomains;\"\nheader field \"x-permitted-cross-domain-policies\" = \"none\"\nheader field \"referrer-policy\" = \"strict-origin-when-cross-origin\"\nheader field \"content-security-policy\" = \"script-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob:;img-src  'self' 'unsafe-inline' data: blob:; style-src 'self' 'unsafe-inline'; worker-src 'self' 'unsafe-inline' * blob:; font-src 'self' 'unsafe-inline' data: blob:;\"\nheader field \"x-downlaod-options\" = \"noopen\"\n\nFrame Type\t=>\tHEADERS\nheader field \":status\" = \"200\"\nheader field \"server\" = \"nginx\"\nheader field \"date\" = \"Tue, 21 Jan 2025 03:04:29 GMT\"\nheader field \"content-type\" = \"application/json\"\nheader field \"content-length\" = \"52\"\nheader field \"vary\" = \"Origin\"\nheader field \"vary\" = \"Access-Control-Request-Method\"\nheader field \"vary\" = \"Access-Control-Request-Headers\"\nheader field \"security-uuid\" = \"1141326612696023040\"\nheader field \"x-frame-options\" = \"SAMEORIGIN\"\nheader field \"x-content-type-options\" = \"nosniff\"\nheader field \"x-xss-protection\" = \"1; mode=block\"\nheader field \"strict-transport-security\" = \"max-age=31536000; includeSubdomains;\"\nheader field \"x-permitted-cross-domain-policies\" = \"none\"\nheader field \"referrer-policy\" = \"strict-origin-when-cross-origin\"\nheader field \"content-security-policy\" = \"script-src 'self' 'unsafe-inline' 'unsafe-eval' data: blob:;img-src  'self' 'unsafe-inline' data: blob:; style-src 'self' 'unsafe-inline'; worker-src 'self' 'unsafe-inline' * blob:; font-src 'self' 'unsafe-inline' data: blob:;\"\nheader field \"x-downlaod-options\" = \"noopen\"\n\nFrame Type\t=>\tDATA\n{\n\t\"code\":0,\n\t\"data\":{\n\t\t\"path\":\"protocol\",\n\t\t\"layers\":\"[{\\\\\"base\\\\\":{\\\\\"title\\\\\":{\\\\\"text\\\\\":\\\\\"表单框-OCMJKHCK\\\\\",\\\\\"show\\\\\":true,\\\\\"theme\\\\\":\\\\\"chartdefault\\\\\"},\\\\\"z\\\\\":1,\\\\\"color\\\\\":\\\\\"#EF9A9A\\\\\",\\\\\"active\\\\\":false},\\\\\"advance\\\\\":{},\\\\\"source\\\\\":{},\\\\\"type\\\\\":\\\\\"form\\\\\",\\\\\"group\\\\\":\\\\\"FORM\\\\\",\\\\\"w\\\\\":24,\\\\\"h\\\\\":3,\\\\\"y\\\\\":0,\\\\\"x\\\\\":0,\\\\\"i\\\\\":\\\\\"00fa633e-39ca-4a12-8cd9-24dfb2afdf1e\\\\\",\\\\\"id\\\\\":\\\\\"00fa633e-39ca-4a12-8cd9-24dfb2afdf1e\\\\\",\\\\\"minw\\\\\":1,\\\\\"minh\\\\\":1,\\\\\"static\\\\\":true,\\\\\"children\\\\\":[{\\\\\"type\\\\\":\\\\\"dateRange\\\\\",\\\\\"group\\\\\":\\\\\"FORM\\\\\",\\\\\"w\\\\\":5,\\\\\"h\\\\\":1,\\\\\"y\\\\\":0,\\\\\"x\\\\\":0,\\\\\"i\\\\\":\\\\\"c8b040c9-bc97-4915-8024-b9b9276691ff\\\\\",\\\\\"id\\\\\":\\\\\"c8b040c9-bc97-4915-8024-b9b9276691ff\\\\\",\\\\\"minw\\\\\":1,\\\\\"minh\\\\\":1,\\\\\"base\\\\\":{\\\\\"z\\\\\":1,\\\\\"color\\\\\":\\\\\"#EF9A9A\\\\\",\\\\\"active\\\\\":false,\\\\\"title\\\\\":{\\\\\"text\\\\\":\\\\\"时间范围选择-DMFNFACI\\\\\",\\\\\"theme\\\\\":\\\\\"chartdefault\\\\\",\\\\\"show\\\\\":false}},\\\\\"source\\\\\":{\\\\\"mold\\\\\":\\\\\"datepicker\\\\\",\\\\\"prop\\\\\":\\\\\"time\\\\\",\\\\\"name\\\\\":\\\\\"时间段\\\\\",\\\\\"valueFormat\\\\\":\\\\\"yyyy-MM-dd HH:mm:ss\\\\\",\\\\\"default\\\\\":60,\\\\\"type\\\\\":\\\\\"Date\\\\\"},\\\\\"static\\\\\":true,\\\\\"moved\\\\\":false},{\\\\\"base\\\\\":{\\\\\"title\\\\\":{\\\\\"text\\\\\":\\\\\"目的端口号\\\\\",\\\\\"show\\\\\":false,\\\\\"theme\\\\\":\\\\\"chartdefault\\\\\"},\\\\\"z\\\\\":1,\\\\\"color\\\\\":\\\\\"#EF9A9A\\\\\",\\\\\"active\\\\\":false},\\\\\"advance\\\\\":{},\\\\\"source\\\\\":{\\\\\"mold\\\\\":\\\\\"input\\\\\",\\\\\"prop\\\\\":\\\\\"dstPort\\\\\",\\\\\"name\\\\\":\\\\\"目的端口号\\\\\",\\\\\"operate\\\\\":\\\\\"eq\\\\\",\\\\\"type\\\\\":\\\\\"String\\\\\"},\\\\\"type\\\\\":\\\\\"form-input\\\\\",\\\\\"group\\\\\":\\\\\"FORM\\\\\",\\\\\"w\\\\\":3,\\\\\"h\\\\\":1,\\\\\"y\\\\\":0,\\\\\"x\\\\\":6,\\\\\"i\\\\\":\\\\\"7f6f3bc3-d3f8-4f0c-8b21-aba371b90bc8\\\\\",\\\\\"id\\\\\":\\\\\"7f6f3bc3-d3f8-4f0c-8b21-aba371b90bc8\\\\\",\\\\\"minw\\\\\":1,\\\\\"minh\\\\\":1,\\\\\"name\\\\\":\\\\\"输入框\\\\\",\\\\\"hide\\\\\":false,\\\\\"moved\\\\\":false},{\\\\\"base\\\\\":{\\\\\"title\\\\\":{\\\\\"text\\\\\":\\\\\"目的IP\\\\\",\\\\\"show\\\\\":false,\\\\\"theme\\\\\":\\\\\"chartdefault\\\\\"},\\\\\"z\\\\\":1,\\\\\"color\\\\\":\\\\\"#EF9A9A\\\\\",\\\\\"active\\\\\":false},\\\\\"advance\\\\\":{},\\\\\"source\\\\\":{\\\\\"mold\\\\\":\\\\\"input\\\\\",\\\\\"prop\\\\\":\\\\\"dstIpForShow\\\\\",\\\\\"name\\\\\":\\\\\"目的IP\\\\\",\\\\\"operate\\\\\":\\\\\"eq\\\\\",\\\\\"type\\\\\":\\\\\"String\\\\\"},\\\\\"type\\\\\":\\\\\"form-input\\\\\",\\\\\"group\\\\\":\\\\\"FORM\\\\\",\\\\\"w\\\\\":3,\\\\\"h\\\\\":1,\\\\\"y\\\\\":0,\\\\\"x\\\\\":9,\\\\\"i\\\\\":\\\\\"8366f5a0-8c92-457d-b396-8de7c18271af\\\\\",\\\\\"id\\\\\":\\\\\"8366f5a0-8c92-457d-b396-8de7c18271af\\\\\",\\\\\"minw\\\\\":1,\\\\\"minh\\\\\":1,\\\\\"name\\\\\":\\\\\"输入框\\\\\",\\\\\"hide\\\\\":false,\\\\\"moved\\\\\":false}],\\\\\"moved\\\\\":false},{\\\\\"base\\\\\":{\\\\\"title\\\\\":{\\\\\"text\\\\\":\\\\\"协议构成分析\\\\\",\\\\\"show\\\\\":true,\\\\\"theme\\\\\":\\\\\"chartdefault\\\\\",\\\\\"textAlign\\\\\":\\\\\"center\\\\\",\\\\\"color\\\\\":\\\\\"#333\\\\\",\\\\\"fontSize\\\\\":18,\\\\\"lineHeight\\\\\":22,\\\\\"padding\\\\\":5},\\\\\"z\\\\\":1,\\\\\"color\\\\\":\\\\\"#EF9A9A\\\\\",\\\\\"active\\\\\":false,\\\\\"entireLine\\\\\":false,\\\\\"minw\\\\\":10,\\\\\"minh\\\\\":10,\\\\\"axis\\\\\":\\\\\"both\\\\\",\\\\\"parentLim\\\\\":true,\\\\\"snapToGrid\\\\\":false,\\\\\"aspectRatio\\\\\":false},\\\\\"advance\\\\\":{\\\\\"grid\\\\\":{\\\\\"top\\\\\":\\\\\"10%\\\\\",\\\\\"bottom\\\\\":\\\\\"3%\\\\\",\\\\\"left\\\\\":\\\\\"3%\\\\\",\\\\\"right\\\\\":\\\\\"3%\\\\\",\\\\\"containLabel\\\\\":true},\\\\\"legend\\\\\":{\\\\\"show\\\\\":true,\\\\\"type\\\\\":\\\\\"scroll\\\\\",\\\\\"orient\\\\\":\\\\\"vertical\\\\\",\\\\\"top\\\\\":10,\\\\\"bottom\\\\\":\\\\\"auto\\\\\",\\\\\"left\\\\\":\\\\\"auto\\\\\",\\\\\"right\\\\\":10}},\\\\\"source\\\\\":{\\\\\"requestType\\\\\":\\\\\"INTERNAL\\\\\",\\\\\"internal\\\\\":{\\\\\"tableName\\\\\":\\\\\"result_flow_statistic_service_pro_component_every_five_minute\\\\\",\\\\\"xAxisKey\\\\\":\\\\\"time\\\\\",\\\\\"condition\\\\\":[{\\\\\"key\\\\\":\\\\\"\\\\\",\\\\\"operate\\\\\":\\\\\"\\\\\",\\\\\"value\\\\\":\\\\\"\\\\\",\\\\\"type\\\\\":\\\\\"\\\\\",\\\\\"aggregateKeys\\\\\":[],\\\\\"aggregateSums\\\\\":[]}],\\\\\"aggregate\\\\\":{\\\\\"key\\\\\":[\\\\\"time\\\\\",\\\\\"service\\\\\"],\\\\\"value\\\\\":[\\\\\"bytes\\\\\"]},\\\\\"resultFilter\\\\\":[{\\\\\"operate\\\\\":\\\\\"\\\\\",\\\\\"groupKey\\\\\":null,\\\\\"groupOther\\\\\":null,\\\\\"key\\\\\":\\\\\"\\\\\",\\\\\"value\\\\\":\\\\\"\\\\\",\\\\\"groupValue\\\\\":null}],\\\\\"slice\\\\\":{\\\\\"key\\\\\":null,\\\\\"value\\\\\":\\\\\"\\\\\"},\\\\\"handlers\\\\\":[],\\\\\"fields\\\\\":[{\\\\\"prop\\\\\":\\\\\"bytes\\\\\",\\\\\"labelProp\\\\\":\\\\\"service\\\\\",\\\\\"label\\\\\":\\\\\"协议构成分析\\\\\",\\\\\"unit\\\\\":\\\\\"bit(1024)\\\\\",\\\\\"unitPrecision\\\\\":\\\\\"exact\\\\\",\\\\\"decimalPlaces\\\\\":\\\\\"2\\\\\",\\\\\"independentDisplay\\\\\":false}]},\\\\\"customApi\\\\\":\\\\\"\\\\\",\\\\\"json\\\\\":\\\\\"\\\\\"},\\\\\"type\\\\\":\\\\\"pie\\\\\",\\\\\"group\\\\\":\\\\\"NORMAL\\\\\",\\\\\"w\\\\\":12,\\\\\"h\\\\\":11,\\\\\"y\\\\\":3,\\\\\"x\\\\\":12,\\\\\"i\\\\\":\\\\\"6103174d-5ef1-44ab-9dc3-262dfaf507b4\\\\\",\\\\\"id\\\\\":\\\\\"6103174d-5ef1-44ab-9dc3-262dfaf507b4\\\\\",\\\\\"minw\\\\\":1,\\\\\"minh\\\\\":1,\\\\\"moved\\\\\":false},{\\\\\"base\\\\\":{\\\\\"title\\\\\":{\\\\\"text\\\\\":\\\\\"协议流量分析\\\\\",\\\\\"show\\\\\":true,\\\\\"theme\\\\\":\\\\\"chartdefault\\\\\"},\\\\\"z\\\\\":1,\\\\\"color\\\\\":\\\\\"#EF9A9A\\\\\",\\\\\"active\\\\\":false,\\\\\"entireLine\\\\\":false,\\\\\"minw\\\\\":1,\\\\\"minh\\\\\":1,\\\\\"axis\\\\\":\\\\\"both\\\\\",\\\\\"parentLim\\\\\":true,\\\\\"snapToGrid\\\\\":false,\\\\\"aspectRatio\\\\\":false},\\\\\"advance\\\\\":{\\\\\"grid\\\\\":{\\\\\"top\\\\\":\\\\\"10%\\\\\",\\\\\"bottom\\\\\":\\\\\"3%\\\\\",\\\\\"left\\\\\":\\\\\"3%\\\\\",\\\\\"right\\\\\":\\\\\"20%\\\\\",\\\\\"containLabel\\\\\":true},\\\\\"xAxis\\\\\":{\\\\\"type\\\\\":\\\\\"category\\\\\",\\\\\"name\\\\\":\\\\\"\\\\\",\\\\\"show\\\\\":true,\\\\\"nameLocation\\\\\":\\\\\"start\\\\\",\\\\\"nameTextStyle\\\\\":{\\\\\"fontSize\\\\\":12,\\\\\"color\\\\\":\\\\\"#CACED8\\\\\"},\\\\\"axisLine\\\\\":{\\\\\"show\\\\\":true,\\\\\"lineStyle\\\\\":{\\\\\"color\\\\\":\\\\\"#CACED8\\\\\",\\\\\"width\\\\\":1,\\\\\"type\\\\\":\\\\\"solid\\\\\",\\\\\"opacity\\\\\":\\\\\"1\\\\\"}},\\\\\"axisTick\\\\\":{\\\\\"show\\\\\":true,\\\\\"lineStyle\\\\\":{\\\\\"color\\\\\":\\\\\"#CACED8\\\\\",\\\\\"width\\\\\":1,\\\\\"type\\\\\":\\\\\"solid\\\\\",\\\\\"opacity\\\\\":\\\\\"1\\\\\"}},\\\\\"axisLabel\\\\\":{\\\\\"show\\\\\":true,\\\\\"color\\\\\":\\\\\"#CACED8\\\\\",\\\\\"fontSize\\\\\":12,\\\\\"rotate\\\\\":0,\\\\\"margin\\\\\":8},\\\\\"splitLine\\\\\":{\\\\\"show\\\\\":false,\\\\\"lineStyle\\\\\":{\\\\\"color\\\\\":\\\\\"#CACED8\\\\\",\\\\\"width\\\\\":1,\\\\\"type\\\\\":\\\\\"solid\\\\\",\\\\\"opacity\\\\\":\\\\\"1\\\\\"}}},\\\\\"yAxis\\\\\":{\\\\\"type\\\\\":\\\\\"value\\\\\",\\\\\"name\\\\\":\\\\\"通讯量（bit）\\\\\",\\\\\"show\\\\\":true,\\\\\"nameLocation\\\\\":\\\\\"start\\\\\",\\\\\"nameTextStyle\\\\\":{\\\\\"fontSize\\\\\":12,\\\\\"color\\\\\":\\\\\"#CACED8\\\\\"},\\\\\"axisLine\\\\\":{\\\\\"show\\\\\":true,\\\\\"lineStyle\\\\\":{\\\\\"color\\\\\":\\\\\"#CACED8\\\\\",\\\\\"width\\\\\":1,\\\\\"type\\\\\":\\\\\"solid\\\\\",\\\\\"opacity\\\\\":\\\\\"1\\\\\"}},\\\\\"axisTick\\\\\":{\\\\\"show\\\\\":true,\\\\\"lineStyle\\\\\":{\\\\\"color\\\\\":\\\\\"#CACED8\\\\\",\\\\\"width\\\\\":1,\\\\\"type\\\\\":\\\\\"solid\\\\\",\\\\\"opacity\\\\\":\\\\\"1\\\\\"}},\\\\\"axisLabel\\\\\":{\\\\\"show\\\\\":true,\\\\\"color\\\\\":\\\\\"#CACED8\\\\\",\\\\\"fontSize\\\\\":12,\\\\\"rotate\\\\\":0,\\\\\"margin\\\\\":8},\\\\\"splitLine\\\\\":{\\\\\"show\\\\\":true,\\\\\"lineStyle\\\\\":{\\\\\"color\\\\\":\\\\\"#CACED8\\\\\",\\\\\"width\\\\\":1,\\\\\"type\\\\\":\\\\\"solid\\\\\",\\\\\"opacity\\\\\":\\\\\"1\\\\\"}}},\\\\\"legend\\\\\":{\\\\\"show\\\\\":true,\\\\\"type\\\\\":\\\\\"scroll\\\\\",\\\\\"orient\\\\\":\\\\\"vertical\\\\\",\\\\\"top\\\\\":10,\\\\\"bottom\\\\\":\\\\\"auto\\\\\",\\\\\"left\\\\\":\\\\\"auto\\\\\",\\\\\"right\\\\\":10}},\\\\\"source\\\\\":{\\\\\"requestType\\\\\":\\\\\"INTERNAL\\\\\",\\\\\"internal\\\\\":{\\\\\"tableName\\\\\":\\\\\"result_flow_statistic_service_pro_component_every_five_minute\\\\\",\\\\\"xAxisKey\\\\\":\\\\\"time\\\\\",\\\\\"condition\\\\\":[{\\\\\"key\\\\\":\\\\\"\\\\\",\\\\\"operate\\\\\":\\\\\"\\\\\",\\\\\"value\\\\\":\\\\\"\\\\\",\\\\\"type\\\\\":\\\\\"\\\\\",\\\\\"aggregateKeys\\\\\":[],\\\\\"aggregateSums\\\\\":[]}],\\\\\"aggregate\\\\\":{\\\\\"key\\\\\":[\\\\\"time\\\\\",\\\\\"service\\\\\"],\\\\\"value\\\\\":[\\\\\"bytes\\\\\"]},\\\\\"resultFilter\\\\\":[{\\\\\"operate\\\\\":\\\\\"\\\\\",\\\\\"groupKey\\\\\":null,\\\\\"groupOther\\\\\":null,\\\\\"key\\\\\":\\\\\"\\\\\",\\\\\"value\\\\\":\\\\\"\\\\\",\\\\\"groupValue\\\\\":null}],\\\\\"slice\\\\\":{\\\\\"key\\\\\":null,\\\\\"value\\\\\":\\\\\"\\\\\"},\\\\\"handlers\\\\\":[],\\\\\"fields\\\\\":[{\\\\\"prop\\\\\":\\\\\"bytes\\\\\",\\\\\"labelProp\\\\\":\\\\\"service\\\\\",\\\\\"label\\\\\":\\\\\"协议流量分析\\\\\",\\\\\"unit\\\\\":\\\\\"bit(1024)\\\\\",\\\\\"unitPrecision\\\\\":\\\\\"exact\\\\\",\\\\\"decimalPlaces\\\\\":\\\\\"2\\\\\",\\\\\"independentDisplay\\\\\":false}]},\\\\\"customApi\\\\\":\\\\\"\\\\\",\\\\\"json\\\\\":\\\\\"[\\\\\\\n  {\\\\\\\n    \\\\\\\\\\\\\"time\\\\\\\\\\\\\": \\\\\\\\\\\\\"2021-08-07\\\\\\\\\\\\\",\\\\\\\n    \\\\\\\\\\\\\"示例一\\\\\\\\\\\\\": 806,\\\\\\\n    \\\\\\\\\\\\\"示例二\\\\\\\\\\\\\": 665,\\\\\\\n    \\\\\\\\\\\\\"示例三\\\\\\\\\\\\\": 198\\\\\\\n  },\\\\\\\n  {\\\\\\\n    \\\\\\\\\\\\\"time\\\\\\\\\\\\\": \\\\\\\\\\\\\"2021-08-08\\\\\\\\\\\\\",\\\\\\\n    \\\\\\\\\\\\\"示例一\\\\\\\\\\\\\": 481,\\\\\\\n    \\\\\\\\\\\\\"示例二\\\\\\\\\\\\\": 796,\\\\\\\n    \\\\\\\\\\\\\"示例三\\\\\\\\\\\\\": 178\\\\\\\n  },\\\\\\\n  {\\\\\\\n    \\\\\\\\\\\\\"time\\\\\\\\\\\\\": \\\\\\\\\\\\\"2021-08-09\\\\\\\\\\\\\",\\\\\\\n    \\\\\\\\\\\\\"示例一\\\\\\\\\\\\\": 805,\\\\\\\n    \\\\\\\\\\\\\"示例二\\\\\\\\\\\\\": 466,\\\\\\\n    \\\\\\\\\\\\\"示例三\\\\\\\\\\\\\": 826\\\\\\\n  },\\\\\\\n  {\\\\\\\n    \\\\\\\\\\\\\"time\\\\\\\\\\\\\": \\\\\\\\\\\\\"2021-08-10\\\\\\\\\\\\\",\\\\\\\n    \\\\\\\\\\\\\"示例一\\\\\\\\\\\\\": 554,\\\\\\\n    \\\\\\\\\\\\\"示例二\\\\\\\\\\\\\": 423,\\\\\\\n    \\\\\\\\\\\\\"示例三\\\\\\\\\\\\\": 925\\\\\\\n  },\\\\\\\n  {\\\\\\\n    \\\\\\\\\\\\\"time\\\\\\\\\\\\\": \\\\\\\\\\\\\"2021-08-11\\\\\\\\\\\\\",\\\\\\\n    \\\\\\\\\\\\\"示例一\\\\\\\\\\\\\": 601,\\\\\\\n    \\\\\\\\\\\\\"示例二\\\\\\\\\\\\\": 780,\\\\\\\n    \\\\\\\\\\\\\"示例三\\\\\\\\\\\\\": 145\\\\\\\n  },\\\\\\\n  {\\\\\\\n    \\\\\\\\\\\\\"time\\\\\\\\\\\\\": \\\\\\\\\\\\\"2021-08-12\\\\\\\\\\\\\",\\\\\\\n    \\\\\\\\\\\\\"示例一\\\\\\\\\\\\\": 647,\\\\\\\n    \\\\\\\\\\\\\"示例二\\\\\\\\\\\\\": 92,\\\\\\\n    \\\\\\\\\\\\\"示例三\\\\\\\\\\\\\": 65\\\\\\\n  },\\\\\\\n  {\\\\\\\n    \\\\\\\\\\\\\"time\\\\\\\\\\\\\": \\\\\\\\\\\\\"2021-08-13\\\\\\\\\\\\\",\\\\\\\n    \\\\\\\\\\\\\"示例一\\\\\\\\\\\\\": 914,\\\\\\\n    \\\\\\\\\\\\\"示例二\\\\\\\\\\\\\": 393,\\\\\\\n    \\\\\\\\\\\\\"示例三\\\\\\\\\\\\\": 988\\\\\\\n  }\\\\\\\n]\\\\\"},\\\\\"type\\\\\":\\\\\"line\\\\\",\\\\\"group\\\\\":\\\\\"NORMAL\\\\\",\\\\\"w\\\\\":12,\\\\\"h\\\\\":11,\\\\\"y\\\\\":3,\\\\\"x\\\\\":0,\\\\\"i\\\\\":\\\\\"0b42e069-83fd-4119-8d74-3e281e248d13\\\\\",\\\\\"id\\\\\":\\\\\"0b42e069-83fd-4119-8d74-3e281e248d13\\\\\",\\\\\"minw\\\\\":1,\\\\\"minh\\\\\":1,\\\\\"moved\\\\\":false}]\",\n\t\t\"_id\":\"60d948ba6e23fa070194ead5\"\n\t}\n}\"}\n```\n\nLooking forward to your reply!",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/733/comments",
    "author": "huaixia777",
    "comments": [
      {
        "user": "yuweizzz",
        "created_at": "2025-02-13T07:25:55Z",
        "body": "For adding a stream ID field to the output. we just need to read it from the frame header.\n\nAnd for the frame separation, a new frame will always start with 'Frame Type => ...'. What is your suggestion about it?\n\nI can patch it later."
      },
      {
        "user": "huaixia777",
        "created_at": "2025-02-13T07:50:35Z",
        "body": "Thank you for your reply!\nAs for the framework, I think the current framework structure is good,i just found that there are several data frames output together. I hope can output data frames one by one and output the stream id of each data frame"
      },
      {
        "user": "yuweizzz",
        "created_at": "2025-02-13T08:15:34Z",
        "body": "Test result on  new pr:\n\n```\n2025-02-13T16:11:06+08:00 ??? UUID:69049_69049_curl_0_0_0.0.0.0:0-0.0.0.0:0, Name:HTTP2Response, Type:4, Length:1282\n\nFrame Type\t=>\tSETTINGS\nFrame StreamID\t=>\t0\n\nFrame Type\t=>\tWINDOW_UPDATE\nFrame StreamID\t=>\t0\n\nFrame Type\t=>\tSETTINGS\nFrame StreamID\t=>\t0\n\nFrame Type\t=>\tHEADERS\nFrame StreamID\t=>\t1\nheader field \":status\" = \"200\"\nheader field \"content-security-policy\" = \"object-src 'none'; base-uri 'none'; script-src 'unsafe-inline' 'strict-dynamic' https: http: 'sha256-DVdvl49HC0iGx/YKQq/kVNATnEdzGfExbJVTHqT95l8=' 'sha256-CoGrkqEM1Kjjf5b1bpcnDLl8ZZLAsVX+BoAzZ5+AOmc=' 'sha256-QqhlxKosyquihHG/Jahbski3BB1pDss2/CDgLzKKbmE=' 'sha256-karKh1IrXOF1g+uoSxK+k9BuciCwYY/ytGuQVUiRzcM=' 'sha256-mxm3e8M0u3nPPBmLIBgGuMvGUIL5LGv+HzV3bLAIBgw=' 'sha256-+iS8jRq15Ez/Kzz0/G+SNc0geLNvTyf2NZC7MyJgpRE=' 'sha256-UiVwSVJIK9udADqG5GZe+nRUXWK9wEot2vrxL4D2pQs=' 'sha256-cB+y/oSfWGFf7lHk8KX+ZX2CZQz/dPamIICuPvHcB6w=' 'sha256-7mi5SPcD1cogj2+ju8J/+/qJG99F6Qo+3pO4xQkRf6Q=' 'sha256-rEbn/zvLCsDDvDrVWQuUkKGEQsjQjFvIvJK4NVIMqZ4='\"\nheader field \"x-content-type-options\" = \"nosniff\"\nheader field \"x-frame-options\" = \"deny\"\nheader field \"content-type\" = \"text/html; charset=utf-8\"\nheader field \"date\" = \"Thu, 13 Feb 2025 08:11:05 GMT\"\nheader field \"server\" = \"Google Frontend\"\nheader field \"via\" = \"1.1 google\"\nheader field \"alt-svc\" = \"h3=\\\":443\\\"; ma=2592000,h3-29=\\\":443\\\"; ma=2592000\"\n\nFrame Type\t=>\tPING\nFrame StreamID\t=>\t0\n\n2025-02-13T16:11:22+08:00 ??? UUID:69075_69075_curl_0_1_0.0.0.0:0-0.0.0.0:0, Name:HTTP2Request, Type:2, Length:387\n\nFrame Type\t=>\tSETTINGS\nFrame StreamID\t=>\t0\n\nFrame Type\t=>\tWINDOW_UPDATE\nFrame StreamID\t=>\t0\n\nFrame Type\t=>\tHEADERS\nFrame StreamID\t=>\t1\nheader field \":method\" = \"HEAD\"\nheader field \":path\" = \"/\"\nheader field \":scheme\" = \"https\"\nheader field \":authority\" = \"www.zhihu.com\"\nheader field \"user-agent\" = \"curl/8.9.1\"\nheader field \"accept\" = \"*/*\"\n\nFrame Type\t=>\tSETTINGS\nFrame StreamID\t=>\t0\n\n2025-02-13T16:11:22+08:00 ??? UUID:69075_69075_curl_0_0_0.0.0.0:0-0.0.0.0:0, Name:HTTP2Response, Type:4, Length:1041\n\nFrame Type\t=>\tSETTINGS\nFrame StreamID\t=>\t0\n\nFrame Type\t=>\tWINDOW_UPDATE\nFrame StreamID\t=>\t0\n\nFrame Type\t=>\tSETTINGS\nFrame StreamID\t=>\t0\n\nFrame Type\t=>\tHEADERS\nFrame StreamID\t=>\t1\nheader field \":status\" = \"405\"\nheader field \"server\" = \"BLB/23.08.4.1\"\nheader field \"date\" = \"Thu, 13 Feb 2025 08:11:21 GMT\"\nheader field \"content-type\" = \"text/plain; charset=utf-8\"\nheader field \"x-dayu-backend-response\" = \"0.002\"\nheader field \"pragma\" = \"no-cache\"\nheader field \"vary\" = \"Accept-Encoding\"\nheader field \"referrer-policy\" = \"no-referrer-when-downgrade\"\nheader field \"x-secng-response\" = \"0.0049998760223389\"\nheader field \"set-cookie\" = \"_xsrf=QCRiVBeycBDEFGCtKy5m4OXzLjC49M7P; path=/; domain=zhihu.com; expires=Mon, 02-Aug-27 08:11:21 GMT\"\nheader field \"cache-control\" = \"private, must-revalidate, no-cache, no-store, max-age=0\"\nheader field \"content-length\" = \"0\"\nheader field \"x-nws-log-uuid\" = \"9641658840165534688\"\nheader field \"x-cache-lookup\" = \"Cache Miss\"\nheader field \"x-edge-timing\" = \"0.058\"\nheader field \"x-cdn-provider\" = \"tencent\"\n\n2025-02-13T16:11:25+08:00 ??? UUID:69080_69080_curl_0_1_0.0.0.0:0-0.0.0.0:0, Name:HTTP2Request, Type:2, Length:386\n\nFrame Type\t=>\tSETTINGS\nFrame StreamID\t=>\t0\n\nFrame Type\t=>\tWINDOW_UPDATE\nFrame StreamID\t=>\t0\n\nFrame Type\t=>\tHEADERS\nFrame StreamID\t=>\t1\nheader field \":method\" = \"GET\"\nheader field \":path\" = \"/\"\nheader field \":scheme\" = \"https\"\nheader field \":authority\" = \"www.zhihu.com\"\nheader field \"user-agent\" = \"curl/8.9.1\"\nheader field \"accept\" = \"*/*\"\n\nFrame Type\t=>\tSETTINGS\nFrame StreamID\t=>\t0\n\n2025-02-13T16:11:25+08:00 ??? UUID:69080_69080_curl_0_0_0.0.0.0:0-0.0.0.0:0, Name:HTTP2Response, Type:4, Length:3272\n\nFrame Type\t=>\tSETTINGS\nFrame StreamID\t=>\t0\n\nFrame Type\t=>\tWINDOW_UPDATE\nFrame StreamID\t=>\t0\n\nFrame Type\t=>\tSETTINGS\nFrame StreamID\t=>\t0\n\nFrame Type\t=>\tHEADERS\nFrame StreamID\t=>\t1\nheader field \":status\" = \"302\"\nheader field \"server\" = \"BLB/23.08.4.1\"\nheader field \"date\" = \"Thu, 13 Feb 2025 08:11:23 GMT\"\nheader field \"content-type\" = \"text/html; charset=utf-8\"\nheader field \"set-cookie\" = \"_zap=e790a5e3-1d78-41d2-9100-366399bf47fc; path=/; expires=Sat, 13 Feb 2027 08:11:23 GMT; domain=.zhihu.com\"\nheader field \"set-cookie\" = \"_xsrf=c90a03d6-4de6-4130-b56b-c6f6604c60cd; path=/; domain=.zhihu.com\"\nheader field \"content-security-policy\" = \"default-src * blob:;img-src * data: blob: resource: t.captcha.qq.com *.dun.163yun.com *.dun.163.com *.126.net *.nosdn.127.net nos.netease.com;connect-src * wss: blob: resource:;frame-src 'self' *.zhihu.com mailto: tel: weixin: *.vzuu.com mo.m.taobao.com getpocket.com note.youdao.com safari-extension://com.evernote.safari.clipper-Q79WDW8YH9 blob: mtt: zhihujs: captcha.guard.qcloud.com pos.baidu.com dup.baidustatic.com openapi.baidu.com wappass.baidu.com passport.baidu.com *.cme.qcloud.com vs-cdn.tencent-cloud.com t.captcha.qq.com *.dun.163yun.com *.dun.163.com *.126.net *.nosdn.127.net nos.netease.com;script-src 'self' blob: *.zhihu.com g.alicdn.com qzonestyle.gtimg.cn res.wx.qq.com open.mobile.qq.com 'unsafe-eval' unpkg.zhimg.com unicom.zhimg.com resource: zhihu-live.zhimg.com captcha.gtimg.com captcha.guard.qcloud.com pagead2.googlesyndication.com cpro.baidustatic.com pos.baidu.com dup.baidustatic.com i.hao61.net jsapi.qq.com 'nonce-3a2ab859-5e54-406d-acf4-fcc3e0335a3d' hm.baidu.com zz.bdstatic.com b.bdstatic.com imgcache.qq.com vs-cdn.tencent-cloud.com www.mangren.com www.yunmd.net zhihu.govwza.cn p.cnwza.cn ssl.captcha.qq.com t.captcha.qq.com *.dun.163yun.com *.dun.163.com *.126.net *.nosdn.127.net nos.netease.com;style-src 'self' 'unsafe-inline' *.zhihu.com unpkg.zhimg.com unicom.zhimg.com resource: captcha.gtimg.com www.mangren.com ssl.captcha.qq.com t.captcha.qq.com *.dun.163yun.com *.dun.163.com *.126.net *.nosdn.127.net nos.netease.com;font-src * data:;frame-ancestors *.zhihu.com\"\nheader field \"x-frame-options\" = \"SAMEORIGIN\"\nheader field \"strict-transport-security\" = \"max-age=15552000; includeSubDomains\"\nheader field \"surrogate-control\" = \"no-store\"\nheader field \"pragma\" = \"no-cache\"\nheader field \"expires\" = \"0\"\nheader field \"x-content-type-options\" = \"nosniff\"\nheader field \"x-xss-protection\" = \"0\"\nheader field \"location\" = \"//www.zhihu.com/signin?next=%2F\"\nheader field \"x-dayu-backend-response\" = \"0.002\"\nheader field \"vary\" = \"Accept-Encoding\"\nheader field \"referrer-policy\" = \"no-referrer-when-downgrade\"\nheader field \"x-secng-response\" = \"0.04200005531311\"\nheader field \"set-cookie\" = \"BEC=738c6d0432e7aaf738ea36855cdce904;Path=/;Max-Age=3600\"\nheader field \"cache-control\" = \"private, must-revalidate, no-cache, no-store, max-age=0\"\nheader field \"content-length\" = \"93\"\nheader field \"x-nws-log-uuid\" = \"13052027256013954697\"\nheader field \"x-cache-lookup\" = \"Cache Miss\"\nheader field \"x-edge-timing\" = \"0.099\"\nheader field \"x-cdn-provider\" = \"tencent\"\n\nFrame Type\t=>\tDATA\nFrame StreamID\t=>\t1\nRedirecting to <a href=\"//www.zhihu.com/signin?next=%2F\">//www.zhihu.com/signin?next=%2F</a>.\n\n```"
      },
      {
        "user": "huaixia777",
        "created_at": "2025-02-13T08:47:06Z",
        "body": "Thank you very much! I'll try it."
      }
    ]
  },
  {
    "number": 701,
    "title": "could support save plaintext to file with -m text",
    "created_at": "2024-12-23T05:22:01Z",
    "closed_at": "2024-12-24T01:09:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/gojue/ecapture/issues/701",
    "body": "similar with  **--keylogfile**, would u consider add a paramter such as **--textlogfile** to save plaintext to file? Thks\r\n\r\n```\r\n  -k, --keylogfile=\"ecapture_openssl_key.log\"\tThe file stores SSL/TLS keys, and eCapture captures these keys during encrypted traffic communication and saves them to the file.\r\n```\r\n\r\nAlthough using the shell's redirected output can meet this requirement, this method is not convenient to apply and will retain ecapture  log info (WRN/INF/etc.)",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/701/comments",
    "author": "chilli13",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2024-12-23T14:11:03Z",
        "body": "see `--eventaddr` flag for more detail."
      }
    ]
  },
  {
    "number": 658,
    "title": "请教一下，怎么使用，能抓到tls明文的数据包",
    "created_at": "2024-11-05T02:53:03Z",
    "closed_at": "2024-11-11T01:17:05Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/gojue/ecapture/issues/658",
    "body": "我先说下我的环境\r\n  操作系统： ubuntu24.04, 内核版本6.3\r\n我想抓的包是openresty的包，而openresty的依赖于“/usr/local/openresty/openssl3/lib/libssl.so.3”\r\n\r\n我在机器上，先./ecapture tls -h先看了看说明，首先使用的命令是\r\n    ./ecapture tls  --libssl=/usr/local/openresty/openssl3/lib/libssl.so.3\r\n这条命令能在console中打印来往的http消息，然后我想着把这些http消息抓下，保存成pcap包，用wireshark分析，然后我又用了以下的命令：\r\n   ./ecapture tls -w save.pcapng  --libssl=/usr/local/openresty/openssl3/lib/libssl.so.3 -m pcap -i ens33\r\n不过抓下来的包，不是第一条命令打印的东西，我想，是不是哪一块出问题了，还是我操作不当？ \r\n我cat了下pcap包，然后里面保存的是CLIENT_HANDSHAKE_TRAFFIC_SECRET或SERVER_HANDSHAKE_TRAFFIC_SECRET,不过，我真的不需要这些，虽然我知道可以用wireshark解密，但如果直接拿出来明文，不是更好\r\n于是我又加了一些约束条件\r\n   ./ecapture tls -w save.pcapng  --libssl=\"/usr/local/openresty/openssl3/lib/libssl.so.3\" -m pcap -i ens33 tcp port 8443\r\n但是还是出不出我想要的结果，能否给说明一下，ecapture能否直接抓取tls的明文保存成pcap包呢？\r\n",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/658/comments",
    "author": "tengliu0929",
    "comments": [
      {
        "user": "yuweizzz",
        "created_at": "2024-11-05T09:51:09Z",
        "body": "如果发起请求也是在本地，流量会因为经由 loopback 网卡无法获取，可以尝试从外部设备去访问 openresty 。"
      },
      {
        "user": "tengliu0929",
        "created_at": "2024-11-11T01:17:05Z",
        "body": "多谢回复，我试一下"
      }
    ]
  },
  {
    "number": 657,
    "title": "为什么保存不了 pcap包，最新的版本，试了-w 和 --pcapfile ，就是生成不了pcap包",
    "created_at": "2024-11-04T09:35:12Z",
    "closed_at": "2024-11-05T02:00:32Z",
    "labels": [
      "invalid",
      "question",
      "wontfix"
    ],
    "url": "https://github.com/gojue/ecapture/issues/657",
    "body": "**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Type '....'\r\n3. See error\r\n4. upload the log file\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Linux Server/Android (please complete the following information):**\r\n\r\n- Device: [e.g. Pixel 4]\r\n- Env: [run `ecapture -v` to get the eCapture version, or run the `make env` command for complete information]\r\n- OS: [e.g. Ubuntu 21.04]\r\n- Arch: [e.g. `uname -a`]\r\n- Kernel Version: [e.g. 5.10]\r\n- Version: [e.g. arm64:0.7.7-20240303-bfb4a8c:5.15.0-113-generic]\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/657/comments",
    "author": "tengliu0929",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2024-11-04T13:11:36Z",
        "body": "就标题一句话，其他任何信息都没有，请先学会提问吧。"
      },
      {
        "user": "tengliu0929",
        "created_at": "2024-11-05T01:42:16Z",
        "body": "你要什么信息哈，操作系统ubuntu22404 lts,然后ecapture是最新版本，还有用的命令是\r\n./ecapture tls --libssl=/usr/local/openresty/openssl3/lib/libssl.so.3 --pcapfile=\"/home/save.pcapng\"\r\n\r\n我也用过-w save.pcapng，但是不管用，看不到pcap或pcapng包"
      }
    ]
  },
  {
    "number": 651,
    "title": "使用nss命令抓取firefox数据时如何写pcap文件？",
    "created_at": "2024-10-18T09:54:57Z",
    "closed_at": "2024-11-17T11:00:45Z",
    "labels": [
      "help wanted",
      "question",
      "todo"
    ],
    "url": "https://github.com/gojue/ecapture/issues/651",
    "body": "nss命令选项写pcap从技术上可以实现吗？或者有没有其他方式可以实现抓取浏览器数据并写pcap文件的？",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/651/comments",
    "author": "LLIIUUKE",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2024-10-20T12:09:45Z",
        "body": "Of course, you can capture the traffic of the nss class library and save it as a pcapng file. This requires some R&D work. I need to capture the TLS communication key of the NSS class library. Can you send a PR?"
      },
      {
        "user": "cfc4n",
        "created_at": "2024-11-16T14:56:01Z",
        "body": "hello ? "
      }
    ]
  },
  {
    "number": 640,
    "title": "支持捕获envoy的https吗，它使用boringssl",
    "created_at": "2024-09-26T07:29:50Z",
    "closed_at": "2024-09-26T08:56:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/gojue/ecapture/issues/640",
    "body": "我在模块中并没有找到支持启动boringssl的方式，请问下怎么捕获",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/640/comments",
    "author": "zhanghw0103",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2024-09-26T08:07:53Z",
        "body": "见 #367\n\n\n问问题之前，请先在issue里搜一下。"
      },
      {
        "user": "zhanghw0103",
        "created_at": "2024-09-26T08:56:42Z",
        "body": "感谢"
      }
    ]
  },
  {
    "number": 636,
    "title": "How to capture encrypted communications in Edge browser?",
    "created_at": "2024-09-19T05:24:54Z",
    "closed_at": "2024-10-13T01:55:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/gojue/ecapture/issues/636",
    "body": "环境：\r\n最新版 Ubuntu 24.04.1 LTS 操作系统；\r\nEdge浏览器从微软官方下载 deb 安装。\r\neCapture 是从 GitHub 下载最新版的 deb 安装。\r\nversion:\r\nlinux_amd64:v0.8.6:6.5.0-1025-azure\r\n\r\n```bash\r\nldd /opt/microsoft/msedge/msedge | grep -E \"tls|ssl|nss|nspr\"\r\n# 回显\r\n\tlibnss3.so => /lib/x86_64-linux-gnu/libnss3.so (0x00007bbfc5588000)\r\n\tlibnssutil3.so => /lib/x86_64-linux-gnu/libnssutil3.so (0x00007bbfc5556000)\r\n\tlibnspr4.so => /lib/x86_64-linux-gnu/libnspr4.so (0x00007bbfc54ee000)\r\n\tlibgnutls.so.30 => /lib/x86_64-linux-gnu/libgnutls.so.30 (0x00007bbfc4526000)\r\n```\r\n\r\n启动命令：\r\n\r\n```bash\r\n# 依次尝试上述 so 路径，或有报错或无法抓到 edge 浏览器报文\r\nsudo ecapture nss --nspr /lib/x86_64-linux-gnu/libnspr4.so \r\n```",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/636/comments",
    "author": "ycrao",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2024-09-19T10:13:19Z",
        "body": "你需要确认一下Edge浏览器使用了哪个类库来做加密通讯。再指定eCapture的模块、参数。\r\n\r\n----\r\n\r\nYou need to confirm which library Edge browser uses for encrypted communication. Then specify the module and parameters of eCapture."
      },
      {
        "user": "cfc4n",
        "created_at": "2024-10-13T01:55:20Z",
        "body": "No response for a long time, closed"
      }
    ]
  },
  {
    "number": 590,
    "title": "\"-p\" seems not worked when create keylog",
    "created_at": "2024-08-13T07:46:27Z",
    "closed_at": "2024-08-16T16:24:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/gojue/ecapture/issues/590",
    "body": "**Describe the bug**\r\nI use the command \"./ecapture tls -m keylog -kopenssl_keylog.log -p 3334307 -i em1\" to write the keys.  I found the keylog is still written, but, in fact, the pid of 3334307 is just a process of \"tail -f XXXXX\".\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. create keylog with above command and use \"-p\" to specify a process which will not have any keys created.\r\n2. you will find the keys are still written, which means \"-p\" doesn't work.\r\n\r\n**Expected behavior**\r\nWhen \"-p\" is used,  only the  keys related to the specified process can be written into the log file.\r\n\r\n**Linux Server/Android (please complete the following information):**\r\n\r\n- Env: [run `make env` to get the environment variables]\r\n- OS: KylinV10\r\n- Arch: x86\r\n- Kernel Version:  4.19.90-24.4.v2101.ky10.x86_64\r\n",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/590/comments",
    "author": "robbietu",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2024-08-13T14:33:17Z",
        "body": "Systems with a kernel version lower than 5.2 cannot utilize certain filtering parameters, such as pid, uid, and so on."
      },
      {
        "user": "robbietu",
        "created_at": "2024-08-15T02:26:03Z",
        "body": "I find that \" g.keylogger.WriteString(b)\" is used to record tls keys in codes. How to guarantee thread safety? "
      },
      {
        "user": "cfc4n",
        "created_at": "2024-08-15T12:46:08Z",
        "body": "The `keylogger` variable is called in a single thread, so there is no need to worry about thread safety."
      }
    ]
  },
  {
    "number": 569,
    "title": "master secret length is too long for every connection",
    "created_at": "2024-06-12T09:32:37Z",
    "closed_at": "2024-06-14T09:21:06Z",
    "labels": [
      "help wanted",
      "question"
    ],
    "url": "https://github.com/gojue/ecapture/issues/569",
    "body": "**Describe the bug**\r\nFor every TLS connection made, I get the error `master secret length is too long, truncate to 64 bytes, but it may cause keylog file error length=xxx`. As a consequence, I am not able to decrypt packet capture traffic using the `ecapture_openssl_key.og` that is created by ecapture.\r\n\r\nAlso the pcap mode does not create packet captures with unencrypted traffic.\r\n\r\nText mode does work and is able to display the contents of the requests and responses, but this mode sometimes crashes ecapture.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. run `ecapture tls -m keylog` on your device\r\n2. use any app to make a TLS network connection\r\n3. See error\r\n\r\n**Expected behavior**\r\necapture is able to capture the correct master secret that would allow me to decrypt the network traffic in wireshark\r\n\r\n**Screenshots**\r\nNot really applicable\r\n\r\n**Linux Server/Android (please complete the following information):**\r\n\r\n- OS: Android 13\r\n- Arch: arm_aarch64\r\n- Kernel Version: Linux localhost 5.10.149-android13-4-00002-gca169caca7bb-ab9598324 #1 SMP PREEMPT Mon Feb 13 12:48:28 UTC 2023 aarch64 Toybox\r\n- Version: androidgki_arm64:v0.8.3:6.5.0-1021-azure\r\n\r\n**Additional context**\r\nGoogle Pixel 6a, Magisk 27\r\n",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/569/comments",
    "author": "jeromekleinen",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2024-06-12T13:33:29Z",
        "body": "> Text mode does work and is able to display the contents of the requests and responses, but this mode sometimes crashes ecapture.\r\n\r\nPlease provide the corresponding crash stack.\r\n\r\n\r\n> run ecapture tls -m keylog on your device\r\n\r\nPlease provide the output log.\r\n"
      },
      {
        "user": "jeromekleinen",
        "created_at": "2024-06-14T09:21:06Z",
        "body": "Hi cfc4n,\r\n\r\nI've upgraded my testing device to Android 14 and here it seems to work just fine. I guess we can close this. At least I am no longer able to help you debug.\r\n\r\nJerome"
      }
    ]
  },
  {
    "number": 551,
    "title": "unsupported arch library",
    "created_at": "2024-05-24T07:06:39Z",
    "closed_at": "2024-05-28T13:44:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/gojue/ecapture/issues/551",
    "body": "**Describe the bug**\r\nWhen I run eCapture, I get an error：\r\nunsupported arch library ,ELF Header Machine is :EM_386, must be one of EM_X86_64 and EM_AARCH64\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. ./ecapture tls --libssl=/system/lib/libssl.so\r\n2. module run failed\r\n\r\n- OS: android\r\n- Kernel Version: 5.4.40\r\n",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/551/comments",
    "author": "Itachi233-3",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2024-05-24T14:01:22Z",
        "body": "The 32-bit libssl.so is not supported for now."
      },
      {
        "user": "cfc4n",
        "created_at": "2024-05-27T13:43:10Z",
        "body": "Hello, do you have any other questions?"
      }
    ]
  },
  {
    "number": 473,
    "title": "这是我姿势不对么？最新版本的总提示No runnable modules, Exit(1)",
    "created_at": "2024-01-29T09:13:19Z",
    "closed_at": "2024-01-29T10:34:11Z",
    "labels": [
      "question",
      "improve"
    ],
    "url": "https://github.com/gojue/ecapture/issues/473",
    "body": "2|zeus:/ # chmod 777 /data/local/tmp/ecapture\r\nzeus:/ # /data/local/tmp/ecapture tls\r\n2024/01/29 09:10:49 Your environment is like a container. We won't be able to detect the BTF configuration.\r\ntls_2024/01/29 09:10:49 ECAPTURE :: ecapture Version : androidgki_aarch64:0.7.3-20240128-1a2abb8:[CORE]\r\ntls_2024/01/29 09:10:49 ECAPTURE :: Pid Info : 28535\r\ntls_2024/01/29 09:10:49 ECAPTURE :: Kernel Info : 5.10.101\r\ntls_2024/01/29 09:10:49 EBPFProbeOPENSSL        module initialization\r\ntls_2024/01/29 09:10:49 EBPFProbeOPENSSL        master key keylogger:\r\ntls_2024/01/29 09:10:49 ECAPTURE ::     Module.Run()\r\ntls_2024/01/29 09:10:49 EBPFProbeOPENSSL        Text MODEL\r\ntls_2024/01/29 09:10:49 EBPFProbeOPENSSL        OpenSSL/BoringSSL version found, ro.build.version.release=13\r\ntls_2024/01/29 09:10:49 EBPFProbeOPENSSL        HOOK type:2, binrayPath:/apex/com.android.conscrypt/lib64/libssl.so\r\ntls_2024/01/29 09:10:49 EBPFProbeOPENSSL        Hook masterKey function:[SSL_in_init]\r\ntls_2024/01/29 09:10:49 EBPFProbeOPENSSL        libPthread:/apex/com.android.runtime/lib64/bionic/libc.so\r\ntls_2024/01/29 09:10:49 EBPFProbeOPENSSL        target all process.\r\ntls_2024/01/29 09:10:49 EBPFProbeOPENSSL        target all users.\r\ntls_2024/01/29 09:10:49 EBPFProbeOPENSSL        BPF bytecode filename:user/bytecode/boringssl_a_13_kern.o\r\ntls_2024/01/29 09:10:49 EBPFProbeOPENSSL        module run failed, [skip it]. error:couldn't init manager error:program probe_entry_SSL_write: apply CO-RE relocations: load kernel spec: no BTF found for kernel version 5.10.101-android12-9-00005-ga829d48e78bd-ab9206161: not supported , couldn't load eBPF programs, cs:&{map[.rodata:Array(keySize=4, valueSize=36, maxEntries=1, flags=128) active_ssl_read_args_map:Hash(keySize=8, valueSize=16, maxEntries=1024, flags=0) active_ssl_write_args_map:Hash(keySize=8, valueSize=16, maxEntries=1024, flags=0) bpf_context:LRUHash(keySize=8, valueSize=472, maxEntries=2048, flags=0) bpf_context_gen:Array(keySize=4, valueSize=472, maxEntries=1, flags=0) connect_events:PerfEventArray(keySize=4, valueSize=4, maxEntries=1024, flags=0) data_buffer_heap:PerCPUArray(keySize=4, valueSize=4152, maxEntries=1, flags=0) mastersecret_events:PerfEventArray(keySize=4, valueSize=4, maxEntries=1024, flags=0) network_map:LRUHash(keySize=20, valueSize=20, maxEntries=10240, flags=0) skb_data_buffer_heap:PerCPUArray(keySize=4, valueSize=40, maxEntries=1, flags=0) skb_events:PerfEventArray(keySize=4, valueSize=4, maxEntries=10240, flags=0) ssl_st_fd:Hash(keySize=8, valueSize=8, maxEntries=10240, flags=0) tls_events:PerfEventArray(keySize=4, valueSize=4, maxEntries=1024, flags=0)] map[egress_cls_func:0x40001fc2d0 ingress_cls_func:0x40001fc240 probe_SSL_set_fd:0x40001fc5a0 probe_connect:0x40001fc510 probe_entry_SSL_read:0x40001fc480 probe_entry_SSL_write:0x40001fc120 probe_ret_SSL_read:0x40001fc1b0 probe_ret_SSL_write:0x40001fc3f0 probe_ssl_master_key:0x40001fc000 tcp_sendmsg:0x40001fc360] 0x40000bc000 LittleEndian}\r\ntls_2024/01/29 09:10:49 ECAPTURE ::     No runnable modules, Exit(1)\r\n1|zeus:/ # uname -a\r\nLinux localhost 5.10.101-android12-9-00005-ga829d48e78bd-ab9206161 #1 SMP PREEMPT Fri Oct 21 21:49:09 UTC 2022 aarch64 Toybox\r\nzeus:/ #",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/473/comments",
    "author": "w296488320",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2024-01-30T04:27:47Z",
        "body": "问题解决了吗？\r\n试试 non-co-re模式的zip包。"
      },
      {
        "user": "w296488320",
        "created_at": "2024-01-30T08:24:19Z",
        "body": "解决啦，确实版本问题。感谢回复，这块建议在readme里面添加一下nocore和正常的区别。"
      }
    ]
  },
  {
    "number": 459,
    "title": "加解密模式对性能的影响是多少",
    "created_at": "2024-01-12T03:00:46Z",
    "closed_at": "2024-01-20T14:03:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/gojue/ecapture/issues/459",
    "body": "请问一下关于tls模式下加解密模式对性能的影响是多少，有测试过么",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/459/comments",
    "author": "yifannir",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2024-01-12T05:48:12Z",
        "body": "你说的应该是“解密”吧？ 我没有做过相关测试，\r\n\r\n不过，根据eBPF原理来看，注入HOOK的影响很小。 eCapture 的代码逻辑只是读取相应内存内容，并没有复杂的逻辑，理论也是可以忽略的。"
      },
      {
        "user": "yifannir",
        "created_at": "2024-01-22T01:27:23Z",
        "body": "实测只针对某个函数测试影响有好几倍的劣化，可能是由于频繁int3的原因？"
      }
    ]
  },
  {
    "number": 447,
    "title": "鸿蒙4.0支持分析https内容不",
    "created_at": "2023-12-18T02:26:06Z",
    "closed_at": "2024-01-04T14:48:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/gojue/ecapture/issues/447",
    "body": "目前是发现有些APP应用故障，但因为https加密，无法看到内容，所有无法具体分析故障原因，该项目是否支持解密鸿蒙4.0的系统，具体怎么安装",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/447/comments",
    "author": "maojianyou",
    "comments": [
      {
        "user": "maojianyou",
        "created_at": "2023-12-18T03:08:43Z",
        "body": "能否做成类似安卓apk直接安装验证抓包的"
      },
      {
        "user": "cfc4n",
        "created_at": "2023-12-18T13:31:42Z",
        "body": "我没有鸿蒙的设备，没测试过。理论来说，只要是基于Linux的内核，都可以运行。就看内核版本是否支持。\r\n\r\n\r\nAPK的方向，我不太会写Android程序，你可以做个贡献吗？"
      },
      {
        "user": "cfc4n",
        "created_at": "2023-12-30T16:32:04Z",
        "body": "ping @maojianyou ??"
      }
    ]
  },
  {
    "number": 442,
    "title": "怎么抓经过手机热点的流量",
    "created_at": "2023-12-13T09:52:35Z",
    "closed_at": "2023-12-17T05:36:29Z",
    "labels": [
      "question",
      "wontfix"
    ],
    "url": "https://github.com/gojue/ecapture/issues/442",
    "body": "环境：小米12 Linux localhost 5.10.136\r\n手机端ecapture能正常运行，app的流量能抓到。\r\n此时一台电脑连接了手机发射的热点，无法抓到电脑访问的流量。\r\n怎么抓经过手机热点的流量。\r\n",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/442/comments",
    "author": "xingkong123600",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2023-12-13T11:04:34Z",
        "body": "做不到这一点。eCapture不支持针对网络层通信做明文捕获，只支持运行时密文做明文捕获。 即，产生密文跟抓包工具在同一台操作系统上。"
      }
    ]
  },
  {
    "number": 441,
    "title": "是否能够支持Docker中https流量解密",
    "created_at": "2023-12-11T13:16:51Z",
    "closed_at": "2023-12-17T05:36:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/gojue/ecapture/issues/441",
    "body": "是否能够支持Docker中https流量解密？有无具体操作方式",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/441/comments",
    "author": "sun363587351",
    "comments": [
      {
        "user": "blaisewang",
        "created_at": "2023-12-12T02:58:57Z",
        "body": "#65 "
      },
      {
        "user": "cfc4n",
        "created_at": "2023-12-16T12:23:51Z",
        "body": "ping？"
      }
    ]
  },
  {
    "number": 430,
    "title": "Can eCapture save decrypted HTTP to pcapng instead of saving the master key to DSB?",
    "created_at": "2023-11-24T07:25:26Z",
    "closed_at": "2023-11-24T14:05:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/gojue/ecapture/issues/430",
    "body": "能否将解密后的HTTP保存到pcapng，而不是将master key保存到DSB呢？",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/430/comments",
    "author": "bugfixer-coder",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2023-11-24T13:34:40Z",
        "body": "不能。\r\n1. 原始报文用于wireshark的网络分析场景，不适合剥离HTTP。\r\n2. 剥离HTTP的成本较大，需要拆解skb的内容，解密HTTPS，再读取HTTP，再还原到skb里。\r\n\r\n建议你自行使用wireshark来实现，未来或许可以在`文本模式`中规划这部分能力。\r\n\r\n--------\r\n\r\n1. The original packet is used for Wireshark's network analysis scenario and is not suitable for stripping HTTP.\r\n2. Stripping HTTP entails high costs, requiring the disassembly of skb content, decryption of HTTPS, reading HTTP, and then restoring it to skb.\r\n\r\nI suggest using Wireshark on your own to implement this. Perhaps in the future, this capability can be planned in text mode."
      },
      {
        "user": "bugfixer-coder",
        "created_at": "2023-11-24T13:59:40Z",
        "body": "谢谢解答，我自己考虑下如何实现这个功能。"
      },
      {
        "user": "cfc4n",
        "created_at": "2023-11-24T14:05:57Z",
        "body": "enjoy."
      }
    ]
  },
  {
    "number": 425,
    "title": "centos can't save pcapng",
    "created_at": "2023-11-22T08:37:43Z",
    "closed_at": "2023-11-28T13:26:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/gojue/ecapture/issues/425",
    "body": "**Describe the bug**\r\nA clear and concise description of what the bug is.\r\nrun ```./ecapture tls -w test.pcapng -i eth0```\r\n\r\nbut get error \r\n```\r\ntls_2023/11/22 16:29:14 ECAPTURE :: ecapture Version : linux_x86_64:0.6.6-20231119-06b63d6:5.15.0-1050-azure\r\ntls_2023/11/22 16:29:14 ECAPTURE :: Pid Info : 290477\r\ntls_2023/11/22 16:29:14 ECAPTURE :: Kernel Info : 4.18.0\r\ntls_2023/11/22 16:29:14 EBPFProbeOPENSSL\tmodule initialization\r\ntls_2023/11/22 16:29:14 ECAPTURE ::\tModule.Run()\r\ntls_2023/11/22 16:29:14 EBPFProbeOPENSSL\tTC MODEL\r\ntls_2023/11/22 16:29:14 EBPFProbeOPENSSL\torigin version:OpenSSL 1.1.1k, as key:openssl 1.1.1k\r\ntls_2023/11/22 16:29:14 EBPFProbeOPENSSL\tHOOK type:2, binrayPath:/usr/lib64/libssl.so.1.1\r\ntls_2023/11/22 16:29:14 EBPFProbeOPENSSL\tIfname:eth0, Ifindex:2,  Port:443, Pcapng filepath:/root/ecapture-v0.6.6-linux-x86_64/test.pcapng\r\ntls_2023/11/22 16:29:14 EBPFProbeOPENSSL\tHook masterKey function:SSL_write\r\ntls_2023/11/22 16:29:14 EBPFProbeOPENSSL\tBPF bytecode filename:user/bytecode/openssl_1_1_1j_kern_less52.o\r\ntls_2023/11/22 16:29:14 EBPFProbeOPENSSL\tmodule run failed, [skip it]. error:couldn't start bootstrap manager error:2 errors occurred:\r\n\t* error:error:netlink receive: no such file or directory , couldn't add a egress filter to interface 2: netlink receive: no such file or directory, {UID:, EbpfFuncName:egress_cls_func}\r\n\t* error:error:netlink receive: no such file or directory , couldn't add a ingress filter to interface 2: netlink receive: no such file or directory, {UID:, EbpfFuncName:ingress_cls_func}\r\n\r\n, probes activation validation failed .\r\ntls_2023/11/22 16:29:14 ECAPTURE :: \tNo runnable modules, Exit(1)\r\n```\r\n\r\nIf i don't use -w to save pcapng file, it work success.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Linux Server/Android (please complete the following information):**\r\n\r\n- Env: [run `make env` to get the environment variables]\r\n- OS: [e.g. Ubuntu 21.04]\r\n- Arch: [e.g. arm_aarch64]\r\n- Kernel Version: [e.g. 5.10]\r\n- Version: [e.g. 0.1.3-20220313-69c1e0]\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/425/comments",
    "author": "dobet",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2023-11-23T15:01:18Z",
        "body": "Execute shell:\r\n```shell\r\ntc qdisc add dev eth0 clsact\r\n```\r\n\r\nIf there is an error, then your kernel is not supported. You can refer to #347"
      },
      {
        "user": "cfc4n",
        "created_at": "2023-11-28T13:26:15Z",
        "body": "no response,closed."
      }
    ]
  },
  {
    "number": 424,
    "title": "0.6.6 couldn't init manager open /sys/kernel/debug/tracing/available_filter_functions: no such file or directory",
    "created_at": "2023-11-20T16:25:36Z",
    "closed_at": "2023-11-23T15:02:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/gojue/ecapture/issues/424",
    "body": "你好。运行0.6.6 报错\r\n```shell\r\n ./ecapture tls --libssl=/system/lib64/libssl.so  -w /data/asd.log\r\ntls --libssl=/system/lib64/libssl.so  -w /data/asd.log                        <\r\ntls_2023/11/20 16:22:19 ECAPTURE :: ecapture Version : androidgki_x86_64:0.6.6-20231119-06b63d6:5.15.0-1050-azure\r\ntls_2023/11/20 16:22:19 ECAPTURE :: Pid Info : 4124\r\ntls_2023/11/20 16:22:19 ECAPTURE :: Kernel Info : 4.19.110\r\ntls_2023/11/20 16:22:19 EBPFProbeOPENSSL        module initialization\r\ntls_2023/11/20 16:22:19 ECAPTURE ::     Module.Run()\r\ntls_2023/11/20 16:22:19 EBPFProbeOPENSSL        TC MODEL\r\ntls_2023/11/20 16:22:19 EBPFProbeOPENSSL        OpenSSL/BoringSSL version not found, used default version :android_default\r\ntls_2023/11/20 16:22:19 EBPFProbeOPENSSL        HOOK type:2, binrayPath:/system/lib64/libssl.so\r\ntls_2023/11/20 16:22:19 EBPFProbeOPENSSL        Ifname:wlan0, Ifindex:4,  Port:443, Pcapng filepath:/data/asd.log\r\ntls_2023/11/20 16:22:19 EBPFProbeOPENSSL        Hook masterKey function:SSL_in_init\r\ntls_2023/11/20 16:22:19 EBPFProbeOPENSSL        BPF bytecode filename:user/bytecode/boringssl_a_13_kern_less52.o\r\ntls_2023/11/20 16:22:19 EBPFProbeOPENSSL        module run failed, [skip it]. error:couldn't init manager open /sys/kernel/debug/tracing/available_filter_functions: no such file or directory\r\ntls_2023/11/20 16:22:19 ECAPTURE ::     No runnable modules, Exit(1)\r\n```\r\n\r\n不加-w 可以正常运行",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/424/comments",
    "author": "heidan123",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2023-11-21T14:31:57Z",
        "body": "请参考issue模板，补充运行环境信息等基础信息，便于排查。"
      },
      {
        "user": "heidan123",
        "created_at": "2023-11-21T14:53:27Z",
        "body": "还是夜神模拟器  安卓9 x64 \r\nuname -a\r\nLinux localhost 4.19.110 #106 SMP PREEMPT Tue Sep 26 02:29:27 CST 2023 x86_64"
      },
      {
        "user": "BiteFoo",
        "created_at": "2023-11-22T07:19:16Z",
        "body": "这个应该是内核不支持，这个内核版本需要自己的去开启bpf的编译选项。不过ecapture并不支持这么低的内核版本。"
      },
      {
        "user": "heidan123",
        "created_at": "2023-11-22T14:01:39Z",
        "body": "好的，感谢。"
      }
    ]
  },
  {
    "number": 422,
    "title": "0.6.5 libc.so: no such file or directory ",
    "created_at": "2023-11-18T03:09:18Z",
    "closed_at": "2023-11-18T15:19:57Z",
    "labels": [
      "🐞 bug",
      "question"
    ],
    "url": "https://github.com/gojue/ecapture/issues/422",
    "body": "`./ecapture tls --libssl=/system/lib64/libssl.so\r\ntls_2023/11/17 22:23:08 ECAPTURE :: ecapture Version : androidgki_x86_64:0.6.5-20231111-256a2b5:5.15.0-1050-azure\r\ntls_2023/11/17 22:23:08 ECAPTURE :: Pid Info : 10711\r\ntls_2023/11/17 22:23:08 ECAPTURE :: Kernel Info : 4.19.110\r\ntls_2023/11/17 22:23:08 EBPFProbeOPENSSL        module initialization\r\ntls_2023/11/17 22:23:08 EBPFProbeOPENSSL        master key keylogger: ecapture_masterkey.log\r\ntls_2023/11/17 22:23:08 ECAPTURE ::     Module.Run()\r\ntls_2023/11/17 22:23:08 EBPFProbeOPENSSL        UPROBE MODEL\r\ntls_2023/11/17 22:23:08 EBPFProbeOPENSSL        OpenSSL/BoringSSL version not found, used default version :android_default\r\ntls_2023/11/17 22:23:08 EBPFProbeOPENSSL        HOOK type:2, binrayPath:/system/lib64/libssl.so\r\ntls_2023/11/17 22:23:08 EBPFProbeOPENSSL        libPthread:/apex/com.android.runtime/lib64/bionic/libc.so\r\ntls_2023/11/17 22:23:08 EBPFProbeOPENSSL        Hook masterKey function:SSL_in_init\r\ntls_2023/11/17 22:23:08 EBPFProbeOPENSSL        Your kernel version is less than 5.2, the following parameters will be ignored:[target_pid, target_uid, target_port]\r\ntls_2023/11/17 22:23:08 EBPFProbeOPENSSL        BPF bytecode filename:user/bytecode/boringssl_a_13_kern_less52.o\r\ntls_2023/11/17 22:23:09 EBPFProbeOPENSSL        module run failed, [skip it]. error:couldn't start bootstrap manager error:1 error occurred:\r\n        * error:error:parse ELF file: open /apex/com.android.runtime/lib64/bionic/libc.so: no such file or directory , couldn't enable uprobe probe_connect, {UID:, EbpfFuncName:probe_connect}\r\n\r\n, probes activation validation failed .\r\ntls_2023/11/17 22:23:09 ECAPTURE ::     No runnable modules, Exit(1)`\r\n\r\n**使用0.6 版本之后的错误，使用0.5版本可以正常使用，但是没有办法保存**\r\n\r\n`./ecapture tls --libssl=/system/lib64/libssl.so -w asd.log\r\ntls_2023/11/17 22:27:05 ECAPTURE :: ecapture Version : androidgki_x86_64:0.5.3-20230521-fba6930:5.15.0-1037-azure\r\ntls_2023/11/17 22:27:05 ECAPTURE :: Pid Info : 10971\r\ntls_2023/11/17 22:27:05 ECAPTURE :: Kernel Info : 4.19.110\r\ntls_2023/11/17 22:27:05 EBPFProbeOPENSSL        module initialization\r\ntls_2023/11/17 22:27:05 ECAPTURE ::     Module.Run()\r\ntls_2023/11/17 22:27:05 EBPFProbeOPENSSL        TC MODEL\r\ntls_2023/11/17 22:27:05 EBPFProbeOPENSSL        OpenSSL/BoringSSL version not found, used default version :android_default\r\ntls_2023/11/17 22:27:05 EBPFProbeOPENSSL        HOOK type:2, binrayPath:/system/lib64/libssl.so\r\ntls_2023/11/17 22:27:05 EBPFProbeOPENSSL        Ifname:wlan0, Ifindex:4,  Port:443, Pcapng filepath:/data/asd.log\r\ntls_2023/11/17 22:27:05 EBPFProbeOPENSSL        Hook masterKey function:SSL_in_init\r\ntls_2023/11/17 22:27:05 EBPFProbeOPENSSL        BPF bytecode filename:user/bytecode/boringssl_1_1_1_kern_less52.o\r\ntls_2023/11/17 22:27:05 EBPFProbeOPENSSL        module run failed, [skip it]. error:couldn't start bootstrap manager error:2 errors occurred:\r\n        * error:error:netlink receive: no such file or directory , couldn't add a \", err clsact\" qdisc to interface 4, {UID:, EbpfFuncName:egress_cls_func}\r\n        * error:error:netlink receive: no such file or directory , couldn't add a \", err clsact\" qdisc to interface 4, {UID:, EbpfFuncName:ingress_cls_func}\r\n\r\n, probes activation validation failed .\r\ntls_2023/11/17 22:27:05 ECAPTURE ::     No runnable modules, Exit(1)`\r\n\r\n\r\n使用环境是夜神安卓模拟器 安卓9 x64 版本 \r\nuname -a\r\nLinux localhost 4.19.110 #106 SMP PREEMPT Tue Sep 26 02:29:27 CST 2023 x86_64",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/422/comments",
    "author": "heidan123",
    "comments": [
      {
        "user": "heidan123",
        "created_at": "2023-11-18T03:10:53Z",
        "body": "0.5 版本\r\n ./ecapture tls --libssl=/system/lib64/libssl.so 正常，可以获取到数据\r\n\r\n ./ecapture tls --libssl=/system/lib64/libssl.so -w asd.log 就报错了\r\n\r\n"
      },
      {
        "user": "cfc4n",
        "created_at": "2023-11-18T06:49:45Z",
        "body": "你是windows上的模拟器吧？ 暂时不支持win上的模拟android环境。"
      },
      {
        "user": "cfc4n",
        "created_at": "2023-11-18T08:06:23Z",
        "body": "> * error:error:parse ELF file: open /apex/com.android.runtime/lib64/bionic/libc.so: no such file or directory , couldn't enable uprobe probe_connect, {UID:, EbpfFuncName:probe_connect}\r\n\r\n不过，这里确实有问题，libc.so 不存在，不应该直接退出。"
      },
      {
        "user": "heidan123",
        "created_at": "2023-11-18T11:46:08Z",
        "body": "好的，感谢"
      }
    ]
  },
  {
    "number": 406,
    "title": "debian 运行出错 can't mmap: cannot allocate memory",
    "created_at": "2023-10-19T08:21:44Z",
    "closed_at": "2023-10-31T16:19:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/gojue/ecapture/issues/406",
    "body": "```\r\nroot@Debian-1013-buster-64-minimal /home/ecapture-v0.6.4-linux-x86_64 # sudo ./ecapture tls\r\ntls_2023/10/19 10:18:59 ECAPTURE :: ecapture Version : linux_x86_64:0.6.4-20231015-f50129f:5.15.0-1047-azure\r\ntls_2023/10/19 10:18:59 ECAPTURE :: Pid Info : 13964\r\ntls_2023/10/19 10:18:59 ECAPTURE :: Kernel Info : 4.19.255\r\ntls_2023/10/19 10:18:59 EBPFProbeOPENSSL\tmodule initialization\r\ntls_2023/10/19 10:18:59 EBPFProbeOPENSSL\tmaster key keylogger: ecapture_masterkey.log\r\ntls_2023/10/19 10:18:59 ECAPTURE ::\tModule.Run()\r\ntls_2023/10/19 10:18:59 EBPFProbeOPENSSL\tUPROBE MODEL\r\ntls_2023/10/19 10:18:59 EBPFProbeOPENSSL\torigin version:OpenSSL 1.1.1n, as key:openssl 1.1.1n\r\ntls_2023/10/19 10:18:59 EBPFProbeOPENSSL\tHOOK type:2, binrayPath:/lib/x86_64-linux-gnu/libssl.so.1.1\r\ntls_2023/10/19 10:18:59 EBPFProbeOPENSSL\tlibPthread:/lib/x86_64-linux-gnu/libpthread.so.0\r\ntls_2023/10/19 10:18:59 EBPFProbeOPENSSL\tHook masterKey function:SSL_write\r\ntls_2023/10/19 10:18:59 EBPFProbeOPENSSL\tYour kernel version is less than 5.2, the following parameters will be ignored:[target_pid, target_uid, target_port]\r\ntls_2023/10/19 10:18:59 EBPFProbeOPENSSL\tBPF bytecode filename:user/bytecode/openssl_1_1_1j_kern_less52.o\r\ntls_2023/10/19 10:18:59 EBPFProbeOPENSSL\treadEvents error:creating PerfEventArray(tls_events)#11 reader dns: failed to create perf ring for CPU 0: can't mmap: cannot allocate memory\r\ntls_2023/10/19 10:18:59 EBPFProbeOPENSSL\treadEvents error:creating PerfEventArray(connect_events)#13 reader dns: failed to create perf ring for CPU 0: can't mmap: cannot allocate memory\r\ntls_2023/10/19 10:18:59 EBPFProbeOPENSSL\tmodule started successfully.\r\ntls_2023/10/19 10:18:59 EBPFProbeGNUTLS\tmodule initialization\r\ntls_2023/10/19 10:18:59 ECAPTURE ::\tModule.Run()\r\ntls_2023/10/19 10:18:59 EBPFProbeGNUTLS\tBPF bytecode filename:user/bytecode/gnutls_kern_less52.o\r\ntls_2023/10/19 10:18:59 EBPFProbeOPENSSL\treadEvents error:creating PerfEventArray(mastersecret_events)#18 reader dns: failed to create perf ring for CPU 0: can't mmap: cannot allocate memory\r\ntls_2023/10/19 10:18:59 EBPFProbeGNUTLS\tHOOK type:2, binrayPath:/lib/x86_64-linux-gnu/libgnutls.so.30\r\ntls_2023/10/19 10:19:00 EBPFProbeGNUTLS\tmodule started successfully.\r\ntls_2023/10/19 10:19:00 EBPFProbeNSPR\tmodule initialization\r\ntls_2023/10/19 10:19:00 EBPFProbeGNUTLS\treadEvents error:creating PerfEventArray(gnutls_events)#38 reader dns: failed to create perf ring for CPU 0: can't mmap: cannot allocate memory\r\ntls_2023/10/19 10:19:00 ECAPTURE ::\tModule.Run()\r\ntls_2023/10/19 10:19:00 EBPFProbeNSPR\tBPF bytecode filename:user/bytecode/nspr_kern_less52.o\r\ntls_2023/10/19 10:19:00 EBPFProbeNSPR\tmodule run failed, [skip it]. error:tls module couldn't find binPath stat /usr/lib/firefox/libnspr4.so: no such file or directory \r\ntls_2023/10/19 10:19:00 ECAPTURE :: \tstart 2 modules\r\n```\r\n不清楚是什么问题。。",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/406/comments",
    "author": "heidan123",
    "comments": [
      {
        "user": "heidan123",
        "created_at": "2023-10-19T08:41:07Z",
        "body": "降低到0.6.3版本可用"
      },
      {
        "user": "cfc4n",
        "created_at": "2023-10-19T13:03:16Z",
        "body": "> 降低到0.6.3版本可用\r\n\r\n看着像是内存分配不了，应该是你系统内存不足的原因，不像eCapture 的版本问题。\r\n\r\n建议在相同系统上，分别再用两个版本跑一下。`0.6.3`  跟 `0.6.4`之间，没有内存分配相关变更。"
      },
      {
        "user": "cfc4n",
        "created_at": "2023-10-26T10:40:40Z",
        "body": "hello? @heidan123 "
      }
    ]
  },
  {
    "number": 375,
    "title": "是否可以增加http的监听，这样http和https就可以配套使用了",
    "created_at": "2023-06-20T14:55:40Z",
    "closed_at": "2023-06-21T10:13:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/gojue/ecapture/issues/375",
    "body": null,
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/375/comments",
    "author": "ownthink",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2023-06-21T10:12:07Z",
        "body": "eCapture 产品定位是用于`https/tls`的加密数据明文捕获，而非`http`的明文抓包。近期不会考虑支持http数据包补货需求，你可以使用`tcpdump`来代替。\r\n\r\n\r\n补充一下：\r\n1. pcapng模式已支持。\r\n2. text模式下，比较难区分`read`、`write` 函数的调用目的，是普通文件读写、磁盘读写、还是网络数据写入。"
      }
    ]
  },
  {
    "number": 369,
    "title": "全志的核心不能用吗请问.",
    "created_at": "2023-06-02T10:14:41Z",
    "closed_at": "2023-06-06T22:55:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/gojue/ecapture/issues/369",
    "body": "看说明书应该也是arm呀，uname显示: Linux localhost 4.9.118 #50 SMP PREEMPT Sat Sep 5 13:22:40 CST 2020 armv7l\r\n运行ecapture出错：/system/bin/sh: ./ecapture: not executable: 64-bit ELF file",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/369/comments",
    "author": "microxpgg",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2023-06-02T15:11:00Z",
        "body": "你确定看了使用说明了吗？"
      }
    ]
  },
  {
    "number": 364,
    "title": "想请问eCapture是否支撑同样基于TLS加密的QUIC协议通信明文拦截？",
    "created_at": "2023-05-11T13:52:21Z",
    "closed_at": "2023-05-14T07:24:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/gojue/ecapture/issues/364",
    "body": "我尝试了使用lsquic搭建quic服务器，并使用eCapture抓取明文，但一无所获，我尝试了各种指令与方式，查看了历史的issue，我不确定eCapture是否支持quic，如果不支持quic能否提供一定帮助以便于我添加quic支持？",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/364/comments",
    "author": "Neoinvoker",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2023-05-11T14:03:41Z",
        "body": "文本模式应该是支持的。 \r\n`ecapture tls` ，别启用pcapng模式（加`-w`、`-i`参数）。 "
      }
    ]
  },
  {
    "number": 362,
    "title": "In Android13 Raspberry 4b：read-only file system",
    "created_at": "2023-05-07T15:38:48Z",
    "closed_at": "2023-05-14T07:23:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/gojue/ecapture/issues/362",
    "body": "我在Raspberry 4b中安装了Android13 LineageOS 定制版本，Linux version 5.15.106-v8-g8d0475872f62\r\n\r\n因为使用ecapture-v0.5.2-android-aarch64后提示未开启btf,于是换成nocore版本\r\n\r\n在开启adb并获得root权限后,运行adb shell，进入环境\r\n然后运行/data/local/tmp/ecapture tls命令，提示如下\r\n\r\nrpi4:/ # /data/local/tmp/ecapture tls                                                                     \r\ntls_2023/05/05 09:22:11 ECAPTURE :: ecapture Version : androidgki_aarch64:0.5.2-20230501-ae62a6a:5.4.0-104-generic\r\ntls_2023/05/05 09:22:11 ECAPTURE :: Pid Info : 2157\r\ntls_2023/05/05 09:22:11 ECAPTURE :: Kernel Info : 5.15.106\r\ntls_2023/05/05 09:22:11 EBPFProbeOPENSSL\tmodule initialization\r\ntls_2023/05/05 09:22:11 EBPFProbeOPENSSL\tmodule initialization failed, [skip it]. error:open ecapture_masterkey.log: read-only file system\r\ntls_2023/05/05 09:22:11 ECAPTURE :: \tNo runnable modules, Exit(1)\r\n\r\n",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/362/comments",
    "author": "daxianyu",
    "comments": [
      {
        "user": "SeeFlowerX",
        "created_at": "2023-05-07T15:42:32Z",
        "body": "先cd到 /data/local/tmp 再执行 ./ecapture"
      },
      {
        "user": "daxianyu",
        "created_at": "2023-05-07T15:53:43Z",
        "body": "> 先cd到 /data/local/tmp 再执行 ./ecapture\r\n\r\n谢谢，有效果了，但是紧接着开始启动后，我打开安装的app，点进去到处进行网络访问，并没有包的请求记录打出来，ecapture_masterkey.log文件中也是空的\r\n\r\n130|:/data/local/tmp # ./ecapture tls                                                                     \r\ntls_2023/05/05 09:43:14 ECAPTURE :: ecapture Version : androidgki_aarch64:0.5.2-20230501-ae62a6a:5.4.0-104-generic\r\ntls_2023/05/05 09:43:14 ECAPTURE :: Pid Info : 2231\r\ntls_2023/05/05 09:43:14 ECAPTURE :: Kernel Info : 5.15.106\r\ntls_2023/05/05 09:43:14 EBPFProbeOPENSSL\tmodule initialization\r\ntls_2023/05/05 09:43:14 EBPFProbeOPENSSL\tmaster key keylogger: ecapture_masterkey.log\r\ntls_2023/05/05 09:43:14 ECAPTURE ::\tModule.Run()\r\ntls_2023/05/05 09:43:14 EBPFProbeOPENSSL\tUPROBE MODEL\r\ntls_2023/05/05 09:43:14 EBPFProbeOPENSSL\tOpenSSL/BoringSSL version not found, used default version :android_default\r\ntls_2023/05/05 09:43:14 EBPFProbeOPENSSL\tHOOK type:2, binrayPath:/apex/com.android.conscrypt/lib64/libssl.so\r\ntls_2023/05/05 09:43:14 EBPFProbeOPENSSL\tHook masterKey function:SSL_in_init\r\ntls_2023/05/05 09:43:14 EBPFProbeOPENSSL\ttarget all process. \r\ntls_2023/05/05 09:43:14 EBPFProbeOPENSSL\ttarget all users. \r\ntls_2023/05/05 09:43:14 EBPFProbeOPENSSL\tBPF bytecode filename:user/bytecode/boringssl_1_1_1_kern.o\r\ntls_2023/05/05 09:43:14 EBPFProbeOPENSSL\tmodule started successfully.\r\ntls_2023/05/05 09:43:14 ECAPTURE :: \tstart 1 modules\r\n\r\n\r\ntls_2023/05/05 09:52:17 EBPFProbeOPENSSL\tclose. \r\ntls_2023/05/05 09:52:18 EBPFProbeOPENSSL\tclose"
      },
      {
        "user": "SeeFlowerX",
        "created_at": "2023-05-08T01:26:16Z",
        "body": "这也看不出来什么原因...\r\n\r\n你cat下你APP的maps，看看 libssl.so 路径对不对。以及这个只支持64位的进程。\r\n\r\n另外多打开几个APP试试"
      }
    ]
  },
  {
    "number": 359,
    "title": "64-bit ELF file",
    "created_at": "2023-05-03T05:03:17Z",
    "closed_at": "2023-05-03T14:56:13Z",
    "labels": [
      "question",
      "wontfix"
    ],
    "url": "https://github.com/gojue/ecapture/issues/359",
    "body": "130|zeus:/data/local/tmp # getprop ro.product.cpu.abi\r\narm64-v8a\r\nzeus:/data/local/tmp # chmod 777 ecapture\r\nzeus:/data/local/tmp # uname -a\r\nLinux localhost 5.10.101-android12-9-g30979850fc20 #1 SMP PREEMPT Fri Dec 23 08:30:36 UTC 2022 aarch64 Toybox\r\n127|zeus:/data/local/tmp # ./ecapture tls\r\n/system/bin/sh: ./ecapture: not executable: 64-bit ELF file\r\n\r\n机型为Xiaomi 12 pro\r\n",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/359/comments",
    "author": "tongrendx",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2023-05-03T05:44:57Z",
        "body": "是不是软件包版本下错了？x86还是aarch的？"
      },
      {
        "user": "tongrendx",
        "created_at": "2023-05-03T13:37:45Z",
        "body": "x86_64的包"
      },
      {
        "user": "cfc4n",
        "created_at": "2023-05-03T14:56:13Z",
        "body": "你手机是aarch的，要下aarch64的包。  "
      }
    ]
  },
  {
    "number": 304,
    "title": "关于调试一个golang程序",
    "created_at": "2023-02-05T09:26:09Z",
    "closed_at": "2023-02-10T15:42:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/gojue/ecapture/issues/304",
    "body": "ldd bin/Go \r\n        not a dynamic executable\r\n\r\n ./ecapture tls\r\ntls_2023/02/05 09:25:23 ECAPTURE :: ecapture Version : linux_x86_64:0.4.11-20230107-7b66305:5.15.0-1023-azure\r\ntls_2023/02/05 09:25:23 ECAPTURE :: Pid Info : 19480\r\ntls_2023/02/05 09:25:23 ECAPTURE :: Kernel Info : 5.4.218\r\ntls_2023/02/05 09:25:23 EBPFProbeOPENSSL        module initialization\r\ntls_2023/02/05 09:25:23 EBPFProbeOPENSSL        master key keylogger: ecapture_masterkey.log\r\ntls_2023/02/05 09:25:23 EBPFProbeOPENSSL        Module.Run()\r\ntls_2023/02/05 09:25:23 EBPFProbeOPENSSL        UPROBE MODEL\r\ntls_2023/02/05 09:25:23 EBPFProbeOPENSSL        origin version:OpenSSL 1.1.1f, as key:openssl 1.1.1f\r\ntls_2023/02/05 09:25:23 EBPFProbeOPENSSL        HOOK type:2, binrayPath:/lib/x86_64-linux-gnu/libssl.so.1.1\r\ntls_2023/02/05 09:25:23 EBPFProbeOPENSSL        Hook masterKey function:SSL_write\r\ntls_2023/02/05 09:25:23 EBPFProbeOPENSSL        target all process. \r\ntls_2023/02/05 09:25:23 EBPFProbeOPENSSL        target all users. \r\ntls_2023/02/05 09:25:23 EBPFProbeOPENSSL        BPF bytecode filename:user/bytecode/openssl_1_1_1d_kern.o\r\ntls_2023/02/05 09:25:23 EBPFProbeOPENSSL        module started successfully.\r\ntls_2023/02/05 09:25:23 EBPFProbeGNUTLS module initialization\r\ntls_2023/02/05 09:25:23 EBPFProbeGNUTLS Module.Run()\r\ntls_2023/02/05 09:25:23 EBPFProbeGNUTLS BPF bytecode filename:user/bytecode/gnutls_kern.o\r\ntls_2023/02/05 09:25:23 EBPFProbeGNUTLS HOOK type:2, binrayPath:/lib/x86_64-linux-gnu/libgnutls.so.30\r\ntls_2023/02/05 09:25:23 EBPFProbeGNUTLS target all process. \r\ntls_2023/02/05 09:25:23 EBPFProbeGNUTLS module started successfully.\r\ntls_2023/02/05 09:25:23 EBPFProbeNSPR   module initialization\r\ntls_2023/02/05 09:25:23 EBPFProbeNSPR   Module.Run()\r\ntls_2023/02/05 09:25:23 EBPFProbeNSPR   BPF bytecode filename:user/bytecode/nspr_kern.o\r\ntls_2023/02/05 09:25:23 EBPFProbeNSPR   HOOK type:2, binrayPath:/lib/x86_64-linux-gnu/libnspr4.so\r\ntls_2023/02/05 09:25:23 EBPFProbeNSPR   target all process. \r\ntls_2023/02/05 09:25:23 EBPFProbeNSPR   module started successfully.\r\ntls_2023/02/05 09:25:23 EBPFProbeGoSSL  module [disabled].\r\ntls_2023/02/05 09:25:23 ECAPTURE ::     start 3 modules\r\n\r\n怎么都抓不到，麻烦请教过程，官方文档也是空的，我在代码看到了相关抓取golang tls的代码，请教如何使用",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/304/comments",
    "author": "qptrello",
    "comments": [
      {
        "user": "qptrello",
        "created_at": "2023-02-05T09:29:34Z",
        "body": "EBPFProbeGoSSL module [disabled]. \r\n这里被关闭了\r\n\r\n --gobin=\"/home/https_client\"  增加这个参数后 module initialization failed, [skip it]. error:decoding dwarf section info at offset 0x0: too short\r\n\r\n --gover=go1.18 增加版本参数，提示为未找到参数"
      },
      {
        "user": "cfc4n",
        "created_at": "2023-02-05T11:28:00Z",
        "body": "> EBPFProbeGoSSL module [disabled]. \n> \n> 这里被关闭了\n> \n> \n> \n>  --gobin=\"/home/https_client\"  增加这个参数后 module initialization failed, [skip it]. error:decoding dwarf section info at offset 0x0: too short\n> \n> \n> \n>  --gover=go1.18 增加版本参数，提示为未找到参数\n\nhttps_client的源码、编译参数是什么？\n"
      },
      {
        "user": "yllhwa",
        "created_at": "2023-02-05T15:07:18Z",
        "body": "Just have a look at #120 .\r\necapture can't deal with stripped golang app."
      },
      {
        "user": "cfc4n",
        "created_at": "2023-02-10T12:40:39Z",
        "body": "@qptrello 如 @yllhwa  所述，eCapture 依赖调试的DWARF端来定位HOOK的函数地址。  strip后的go elf无法定位。 建议你编译时，保留DWARF段，或者自助定位被HOOK函数的Offset，手动设定到eCapture里，自行魔改实现hook。"
      }
    ]
  },
  {
    "number": 282,
    "title": "ecapture能支持像tcpdump一样的过滤规则包语法吗",
    "created_at": "2022-12-12T10:38:12Z",
    "closed_at": "2022-12-17T02:21:56Z",
    "labels": [
      "question",
      "wontfix"
    ],
    "url": "https://github.com/gojue/ecapture/issues/282",
    "body": "**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\nVERSION:\r\n\tlinux_x86_64:0.4.10-20221211-3a46b62:[CORE]\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Linux Server/Android (please complete the following information):**\r\n\r\n- Env: [run `make env` to get the environment variables]\r\n- OS: [e.g. Ubuntu 21.04]\r\n- Arch: [e.g. arm_aarch64]\r\n- Kernel Version: [e.g. 5.10]\r\n- Version: [e.g. 0.1.3-20220313-69c1e0]\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/282/comments",
    "author": "boost2020",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2022-12-12T13:56:38Z",
        "body": "In the next two years, it is not in the plan. I do not expect eCapture to be as complex and large as tcpdump, and hope that eCapture is a supplement to tcpdump.\r\n\r\n---------------------\r\n\r\n未来2年内，不在计划中。我不期望eCapture做的跟tcpdump一样复杂庞大，希望eCapture是tcpdump的一个补充\r\n"
      }
    ]
  },
  {
    "number": 280,
    "title": "-w保存为pcapng格式文件时显示 save 0 packets into pcapng file.",
    "created_at": "2022-12-08T10:04:34Z",
    "closed_at": "2022-12-10T14:09:48Z",
    "labels": [
      "question",
      "wontfix"
    ],
    "url": "https://github.com/gojue/ecapture/issues/280",
    "body": "当我使用AVD模拟器的时候，使用最新的x86-64的ecapture，使用./ecapture tls能够很明显的看见抓的到包，但是当我./ecapture tls -w test.pcapng的时候，最后的输出是这样的：\r\ntls_2022/12/08 10:00:48 TLS1_2_VERSION: save CLIENT_RANDOM 786cc517da567e2c224345d34cde9b1eff101a0b62a03784664a4efe0ef4479a to file success, 176 bytes\r\ntls_2022/12/08 10:00:51 TLS1_2_VERSION: save CLIENT_RANDOM 42627d4f1ef118f4b3b471975f4f6f76d6545d137ffc39f1c741547f9e8ad6ef to file success, 176 bytes\r\n\r\n\r\n^Ctls_2022/12/08 10:00:53 EBPFProbeOPENSSL      saving pcapng file /data/local/tmp/aito.pcapng\r\ntls_2022/12/08 10:00:53 EBPFProbeOPENSSL         **save 0 packets into pcapng file.**关键就是这里，然后pcapng文件中什么都没有\r\ntls_2022/12/08 10:00:53 EBPFProbeOPENSSL        close.\r\ntls_2022/12/08 10:00:53 EBPFProbeOPENSSL        close.\r\n",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/280/comments",
    "author": "0xsyj",
    "comments": [
      {
        "user": "lsyel",
        "created_at": "2022-12-08T10:37:18Z",
        "body": "我也遇到这个问题了，我是android12，已经解决了，可能是网卡选择的问题。\r\n你试试Ifconfig一下列出网卡,可能会有lo,dummy0,eth0,wlan0,\r\n然后 ./ecapture tls -i eth0   -w file.pcapng 试试，或者上面四个都试试。"
      },
      {
        "user": "0xsyj",
        "created_at": "2022-12-08T10:38:20Z",
        "body": "> \r\n\r\n好，我去试试"
      },
      {
        "user": "0xsyj",
        "created_at": "2022-12-08T10:53:24Z",
        "body": "> \r\n\r\nthanks，./ecapture tls -i eth0 -w test.pcapng"
      }
    ]
  },
  {
    "number": 278,
    "title": "扩展时运行时报错",
    "created_at": "2022-11-28T03:18:53Z",
    "closed_at": "2022-11-29T11:08:10Z",
    "labels": [
      "question",
      "wontfix"
    ],
    "url": "https://github.com/gojue/ecapture/issues/278",
    "body": "当我尝试对ecapture进行扩展的时候遇到了一些问题。\r\n\r\n编译过之后加载ebpf的.o文件时校验出错。是莫名其妙的错，我在bcc里面测试过没问题的一段代码，放到这里总会出错。\r\n我怀疑是编译选项的问题，这个问题能解决吗，感谢",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/278/comments",
    "author": "CSecurityZhongYuan",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2022-11-28T13:23:58Z",
        "body": "建议你多学一些ebpf知识，借助BCC迁移到eCapture扩展的实现，可以加强一些知识的理解。 更好的掌握技术。"
      }
    ]
  },
  {
    "number": 239,
    "title": "Can't build ecapture",
    "created_at": "2022-10-15T16:33:57Z",
    "closed_at": "2022-10-20T10:59:50Z",
    "labels": [
      "question",
      "wontfix"
    ],
    "url": "https://github.com/gojue/ecapture/issues/239",
    "body": "Hi,\r\n\r\nWhen I install or build ecapture, I have this error each time I do `go install -v github.com/ehids/ecapture@latest`\r\n```\r\ngo: downloading github.com/spf13/cobra v1.4.0\r\ngo: downloading github.com/shuLhan/go-bindata v4.0.0+incompatible\r\ngo: downloading golang.org/x/sys v0.0.0-20211210111614-af8b64212486\r\ngo: downloading golang.org/x/crypto v0.0.0-20220722155217-630584e8d5aa\r\ngo: downloading github.com/cilium/ebpf v0.9.0\r\ngo: downloading github.com/ehids/ebpfmanager v0.3.0\r\ngo: downloading github.com/cfc4n/gopacket v1.1.20\r\ngo: downloading github.com/inconshreveable/mousetrap v1.0.0\r\ngo: downloading github.com/frankban/quicktest v1.14.0\r\ngo: downloading github.com/google/go-cmp v0.5.6\r\ngo: downloading github.com/avast/retry-go v3.0.0+incompatible\r\ngo: downloading github.com/florianl/go-tc v0.4.0\r\ngo: downloading github.com/vishvananda/netlink v1.1.0\r\ngo: downloading golang.org/x/net v0.0.0-20211112202133-69e39bad7dc2\r\ngo: downloading github.com/kr/pretty v0.3.0\r\ngo: downloading github.com/hashicorp/errwrap v1.0.0\r\ngo: downloading golang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1\r\ngo: downloading github.com/vishvananda/netns v0.0.0-20210104183010-2eb08e3e575f\r\ngo: downloading github.com/rogpeppe/go-internal v1.6.1\r\ngo: downloading gopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c\r\ngo: downloading github.com/josharian/native v0.0.0-20200817173448-b6b71def0850\r\ngo: downloading github.com/mdlayher/netlink v1.4.1\r\ngo: downloading github.com/jsimonetti/rtnetlink v0.0.0-20210525051524-4cc836578190\r\ngo: downloading github.com/mdlayher/socket v0.0.0-20210307095302-262dc9984e00\r\ngo: downloading github.com/mdlayher/ethtool v0.0.0-20210210192532-2b88debcdd43\r\ngo: downloading github.com/mdlayher/genetlink v1.0.0\r\n# ecapture/user/module\r\nuser/module/probe_bash.go:48:25: undefined: assets.Asset\r\nuser/module/probe_gnutls.go:49:25: undefined: assets.Asset\r\nuser/module/probe_gossl.go:85:25: undefined: assets.Asset\r\nuser/module/probe_mysqld.go:56:25: undefined: assets.Asset\r\nuser/module/probe_nspr.go:49:25: undefined: assets.Asset\r\nuser/module/probe_openssl.go:126:25: undefined: assets.Asset\r\nuser/module/probe_postgres.go:57:25: undefined: assets.Asset\r\n```\r\n\r\nAny idea how to fix this ?",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/239/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2022-10-16T03:25:50Z",
        "body": "run `make` command, and see [README.md](README.md) for more detail."
      }
    ]
  },
  {
    "number": 218,
    "title": "cannot capture data when used ebedtls",
    "created_at": "2022-09-24T08:28:08Z",
    "closed_at": "2022-09-28T12:58:30Z",
    "labels": [
      "question",
      "wontfix"
    ],
    "url": "https://github.com/gojue/ecapture/issues/218",
    "body": "**Describe the bug**\r\nA clear and concise description of what the bug is.\r\nebedtls使用的类库与ecapture hook的相同，但是无法抓取。不知原因是什么。\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Linux Server/Android (please complete the following information):**\r\n\r\n- Env: [run `make env` to get the environment variables]\r\n- OS: [e.g. Ubuntu 21.04]\r\n- Arch: [e.g. arm_aarch64]\r\n- Kernel Version: [e.g. 5.10]\r\n- Version: [e.g. 0.1.3-20220313-69c1e0]\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/218/comments",
    "author": "10cks",
    "comments": [
      {
        "user": "blaisewang",
        "created_at": "2022-09-24T11:08:17Z",
        "body": "去 ebedtls 项目提交你的疑问更合适，另外建议提供详细的背景信息"
      }
    ]
  },
  {
    "number": 91,
    "title": "Support websocket capture?like wss://xxx",
    "created_at": "2022-06-19T04:25:28Z",
    "closed_at": "2022-06-20T13:05:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/gojue/ecapture/issues/91",
    "body": null,
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/91/comments",
    "author": "chenghonour",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2022-06-19T06:07:21Z",
        "body": "It is already supported. It does not care what's the application layer,  wss\\https\\tls etc.  just not decode the payload."
      },
      {
        "user": "cfc4n",
        "created_at": "2022-06-20T13:05:55Z",
        "body": "will fixed by #90 "
      }
    ]
  },
  {
    "number": 66,
    "title": " bash的命令捕获功能，可以捕获执行完命令后的输出结果吗？",
    "created_at": "2022-05-31T06:13:01Z",
    "closed_at": "2022-06-03T02:48:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/gojue/ecapture/issues/66",
    "body": "**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Linux Server/Desktop (please complete the following information):**\r\n - OS: [e.g. iOS]\r\n - Kernel Version [e.g. 5.10]\r\n - Version [e.g. 0.1.3-20220313-69c1e0]\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/66/comments",
    "author": "yueyongyue",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2022-05-31T11:00:53Z",
        "body": "命令执行的状态（是否成功，状态值）是有的。但标准输出就没必要去捕获了，因为内容可能特别多，不太好控制。\r\n\r\n或者，你说一下你的场景，让我评估一下这个需求。"
      },
      {
        "user": "yueyongyue",
        "created_at": "2022-06-01T06:06:55Z",
        "body": "暂时也没有什么特别的需求，就是想丰富一下功能，或者说这个输出结果我用ebpf应该怎么捕获到，应该probe什么，比较迷茫"
      },
      {
        "user": "cfc4n",
        "created_at": "2022-06-01T10:27:38Z",
        "body": "嗯，我近期写一篇入门的文章吧，如何确定probe HOOK函数，如何简单使用ebpf。"
      }
    ]
  },
  {
    "number": 615,
    "title": "Can't support 5.15.49-linuxkit .",
    "created_at": "2024-09-02T09:07:57Z",
    "closed_at": "2024-09-17T11:28:46Z",
    "labels": [
      "help wanted",
      "invalid"
    ],
    "url": "https://github.com/gojue/ecapture/issues/615",
    "body": "**Describe the bug**\r\nCan't support 5.15.49-linuxkit .\r\n\r\n\r\n**Linux Server/Android (please complete the following information):**\r\neCapture Makefile Environment:\r\nPARALLEL                 6\r\nCROSS_ARCH\r\nANDROID                  0\r\nDEBUG                    0\r\nSNAPSHOT_VERSION\r\nHOST_ARCH                aarch64\r\nUNAME_R                  5.15.49-linuxkit\r\nCLANG_VERSION            14\r\nGO_VERSION\r\nCMD_CLANG                clang\r\nCMD_GIT                  git\r\nCMD_GO                   go\r\nCMD_INSTALL              install\r\nCMD_LLC                  llc\r\nCMD_MD5                  md5sum\r\nCMD_PKGCONFIG            pkg-config\r\nCMD_STRIP                llvm-strip\r\nCMD_CC_PREFIX\r\nCMD_TAR                  tar\r\nCMD_RPMBUILD             rpmbuild\r\nCMD_RPM_SETUP_TREE       rpmdev-setuptree\r\nVERSION_NUM              0.8.5-20240829-a2cb6ef\r\nLAST_GIT_TAG             0.8.5-20240829-a2cb6ef\r\nBPF_NOCORE_TAG           5_15_49-linuxkit.0_8_5-20240829-a2cb6ef\r\nKERN_RELEASE             5.15.49-linuxkit\r\nKERN_BUILD_PATH          /lib/modules/5.15.49-linuxkit/build\r\nKERN_SRC_PATH            /lib/modules/5.15.49-linuxkit/build\r\nTARGET_ARCH              aarch64\r\nGOARCH                   arm64\r\nLINUX_ARCH               arm64\r\nLIBPCAP_ARCH             aarch64-unknown-linux-gnu\r\nAUTOGENCMD               ls -al kern/bpf/arm64/vmlinux.h\r\nPACKAGE_VERSION          0.0.0\r\nOUT_DEB_FILE             ./bin/ecapture_v0.0.0_linux_arm64.deb\r\n",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/615/comments",
    "author": "lusains",
    "comments": [
      {
        "user": "Zheaoli",
        "created_at": "2024-09-02T10:06:00Z",
        "body": "提供一下具体的报错？"
      },
      {
        "user": "cfc4n",
        "created_at": "2024-09-17T11:28:46Z",
        "body": "no response, closed."
      }
    ]
  },
  {
    "number": 588,
    "title": "bugfix: openssl server side can't capture the keylog.",
    "created_at": "2024-08-10T09:18:33Z",
    "closed_at": "2024-09-03T16:12:39Z",
    "labels": [
      "🐞 bug",
      "enhancement",
      "help wanted"
    ],
    "url": "https://github.com/gojue/ecapture/pull/588",
    "body": "bugfix #587\r\n\r\nOn the OpenSSL server side, keylog can’t be captured correctly. change the materkey's probe function type from uprobe  to uretprobe can fix the bug.",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/588/comments",
    "author": "BoltzmannWXD",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2024-08-10T14:34:41Z",
        "body": "Please explain the issues within the issue."
      },
      {
        "user": "cfc4n",
        "created_at": "2024-09-03T16:12:39Z",
        "body": "no reponse, closed."
      }
    ]
  },
  {
    "number": 531,
    "title": "BoringSSL is not supported on linux",
    "created_at": "2024-04-23T20:34:49Z",
    "closed_at": "2024-05-11T14:41:55Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/gojue/ecapture/issues/531",
    "body": "**Describe the bug**\r\nBoringSSL is not fully supported on linux. The build tools only seem to build for android and do not have offsets for linux (desktop).\r\n\r\n\r\n**Expected behavior**\r\nBuild scripts and tools should have BoringSSL support.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Linux Server/Android (please complete the following information):**\r\n\r\n- OS: ubuntu-linux-22-04-02-desktop\r\n- Arch: aarch64\r\n- Kernel Version: 6.5.0-26-generic\r\n- Version: a8acecee080779e1a55a1a57d62e6d682ff21661\r\n\r\n**Additional context**\r\nThe ./utils/boringssl_non_android_offset.sh is also broken - it mostly has android code.\r\n",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/531/comments",
    "author": "mspublic",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2024-04-25T15:05:06Z",
        "body": "You need to empty the existing borlingss repository under the deps directory and re-clone the code using `boringssl_non_android_offset.sh`."
      },
      {
        "user": "cfc4n",
        "created_at": "2024-04-29T15:31:07Z",
        "body": "ping? @mspublic "
      },
      {
        "user": "mspublic",
        "created_at": "2024-04-30T21:22:33Z",
        "body": "Even with that it’s looking for android versions - not base Linux. The script needs to be modified to point to a specific commit it seems."
      },
      {
        "user": "cfc4n",
        "created_at": "2024-05-01T12:17:21Z",
        "body": "The current difficulty is that there are no feature identifiers in the libssl.so dynamic link library to distinguish between versions. It's not just about being unable to differentiate between Linux and Android.\r\n\r\nbut even on Android, it's impossible to distinguish the version of BoringSSL. Therefore, the current method for distinguishing BoringSSL versions is by selecting corresponding offsets based on the Android version, rather than using the `VersionNumber` string in OpenSSL."
      }
    ]
  },
  {
    "number": 489,
    "title": "Fix typo in README.md",
    "created_at": "2024-02-24T10:21:30Z",
    "closed_at": "2024-02-24T12:33:22Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/gojue/ecapture/pull/489",
    "body": "Fix the following typos:\r\n* `shared libraries` instead of `shard libraries`\r\n* `is compiled` instead of `is compile`",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/489/comments",
    "author": "ruitianzhong",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2024-02-24T11:05:41Z",
        "body": "感谢你的贡献，不过能否像  #479  一样，提交更有价值的PR呢？ 最初，他也是只改了一些拼写错误。\r\n\r\nThank you for your contribution, but could you submit more valuable PRs like #479 ? At first, he only corrected some spelling mistakes."
      },
      {
        "user": "ruitianzhong",
        "created_at": "2024-02-24T12:06:28Z",
        "body": "Thanks for your advice, and the example mentioned above is inspiring! I will try to find something useful to fix."
      }
    ]
  },
  {
    "number": 426,
    "title": "Add support for stripped go binaries",
    "created_at": "2023-11-22T18:39:36Z",
    "closed_at": "2023-11-26T11:49:04Z",
    "labels": [
      "enhancement",
      "help wanted",
      "invalid"
    ],
    "url": "https://github.com/gojue/ecapture/pull/426",
    "body": "Currently ecapture fails for stripped go binaries.\r\n\r\nBecause in `findRetOffsets()` method, only symbols from `sym table section` are consider for searching of `GoTlsReadFunc symbol`. Since in case of stripped go binaries no `sym table section` is present, ecapture fails to initialise.\r\n\r\n\r\nThis PR adds dynamic symbols in search space to fix the issue.\r\n\r\nfixes #428 ",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/426/comments",
    "author": "h0x0er",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2023-11-23T14:51:57Z",
        "body": "Thank you very much for your contribution. \r\n\r\nHowever, could you first raise an issue and provide some additional information about the case? \r\n\r\nAlso, please add some validation demos in this PR. Thank you very much."
      },
      {
        "user": "h0x0er",
        "created_at": "2023-11-23T17:26:17Z",
        "body": "@cfc4n , I had created an issue with extra info. Thanks"
      }
    ]
  },
  {
    "number": 228,
    "title": "a function question",
    "created_at": "2022-10-06T08:56:03Z",
    "closed_at": "2022-10-27T15:46:52Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/gojue/ecapture/issues/228",
    "body": "Could eCapture capture text content(URL etc.) from socks(ss)/https proxy(squid) /openvpn(openssl based)/stunnel's traffic?",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/228/comments",
    "author": "zstdadi",
    "comments": [
      {
        "user": "cfc4n",
        "created_at": "2022-10-06T10:35:42Z",
        "body": "> Could eCapture capture text content(URL etc.) from socks(ss)/https proxy(squid) /openvpn(openssl based)/stunnel's traffic?\n\nyes，It can."
      },
      {
        "user": "zstdadi",
        "created_at": "2022-10-06T11:58:04Z",
        "body": "> > Could eCapture capture text content(URL etc.) from socks(ss)/https proxy(squid) /openvpn(openssl based)/stunnel's traffic?\r\n> \r\n> yes，It can.\r\n\r\nCould you give us an example for capture each these apps?\r\nI tried capture https proxy(squid) traffic but failed."
      },
      {
        "user": "cfc4n",
        "created_at": "2022-10-06T14:48:46Z",
        "body": "what environment you used?\r\nOS version ? kernel version? openvpn version  ? etc...."
      },
      {
        "user": "cfc4n",
        "created_at": "2022-10-08T13:34:49Z",
        "body": "> OS version ? kernel version? openvpn version ? etc....\r\n> \r\n> ubuntu or centos\r\n> \r\n> Kernel version > 4.15\r\n> \r\n> openvpn 2.x\r\n> \r\n> You can test in your env.\r\n\r\nref #229\r\n\r\n\r\nI'll test later."
      },
      {
        "user": "cfc4n",
        "created_at": "2022-10-10T13:57:51Z",
        "body": "```shell\r\nroot@VM-16-7-ubuntu:~# which openvpn\r\n/usr/sbin/openvpn\r\nroot@VM-16-7-ubuntu:~# ldd /usr/sbin/openvpn\r\n\tlinux-vdso.so.1 (0x00007ffc8d9fd000)\r\n\tliblzo2.so.2 => /lib/x86_64-linux-gnu/liblzo2.so.2 (0x00007f67fba70000)\r\n\tliblz4.so.1 => /lib/x86_64-linux-gnu/liblz4.so.1 (0x00007f67fba4f000)\r\n\tlibpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f67fba2c000)\r\n\tlibpkcs11-helper.so.1 => /lib/x86_64-linux-gnu/libpkcs11-helper.so.1 (0x00007f67fba0c000)\r\n\tlibcrypto.so.1.1 => /lib/x86_64-linux-gnu/libcrypto.so.1.1 (0x00007f67fb736000)\r\n\tlibssl.so.1.1 => /lib/x86_64-linux-gnu/libssl.so.1.1 (0x00007f67fb6a3000)\r\n\tlibsystemd.so.0 => /lib/x86_64-linux-gnu/libsystemd.so.0 (0x00007f67fb5f2000)\r\n\tlibdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f67fb5ec000)\r\n\tlibc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f67fb3fa000)\r\n\t/lib64/ld-linux-x86-64.so.2 (0x00007f67fbb6d000)\r\n\tlibrt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f67fb3f0000)\r\n\tliblzma.so.5 => /lib/x86_64-linux-gnu/liblzma.so.5 (0x00007f67fb3c7000)\r\n\tlibgcrypt.so.20 => /lib/x86_64-linux-gnu/libgcrypt.so.20 (0x00007f67fb2a9000)\r\n\tlibgpg-error.so.0 => /lib/x86_64-linux-gnu/libgpg-error.so.0 (0x00007f67fb284000)\r\nroot@VM-16-7-ubuntu:~# ldd /usr/sbin/openvpn |grep ssl\r\n\tlibssl.so.1.1 => /lib/x86_64-linux-gnu/libssl.so.1.1 (0x00007fb1e0f2b000)\r\n```\r\nopenvpn used `/lib/x86_64-linux-gnu/libssl.so.1.1` as tls/ssl shared object lib. so ,eCapture can works.\r\n@zstdadi "
      },
      {
        "user": "zstdadi",
        "created_at": "2022-10-12T08:04:26Z",
        "body": "> ```shell\r\n> root@VM-16-7-ubuntu:~# which openvpn\r\n> /usr/sbin/openvpn\r\n> root@VM-16-7-ubuntu:~# ldd /usr/sbin/openvpn\r\n> \tlinux-vdso.so.1 (0x00007ffc8d9fd000)\r\n> \tliblzo2.so.2 => /lib/x86_64-linux-gnu/liblzo2.so.2 (0x00007f67fba70000)\r\n> \tliblz4.so.1 => /lib/x86_64-linux-gnu/liblz4.so.1 (0x00007f67fba4f000)\r\n> \tlibpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f67fba2c000)\r\n> \tlibpkcs11-helper.so.1 => /lib/x86_64-linux-gnu/libpkcs11-helper.so.1 (0x00007f67fba0c000)\r\n> \tlibcrypto.so.1.1 => /lib/x86_64-linux-gnu/libcrypto.so.1.1 (0x00007f67fb736000)\r\n> \tlibssl.so.1.1 => /lib/x86_64-linux-gnu/libssl.so.1.1 (0x00007f67fb6a3000)\r\n> \tlibsystemd.so.0 => /lib/x86_64-linux-gnu/libsystemd.so.0 (0x00007f67fb5f2000)\r\n> \tlibdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f67fb5ec000)\r\n> \tlibc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f67fb3fa000)\r\n> \t/lib64/ld-linux-x86-64.so.2 (0x00007f67fbb6d000)\r\n> \tlibrt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f67fb3f0000)\r\n> \tliblzma.so.5 => /lib/x86_64-linux-gnu/liblzma.so.5 (0x00007f67fb3c7000)\r\n> \tlibgcrypt.so.20 => /lib/x86_64-linux-gnu/libgcrypt.so.20 (0x00007f67fb2a9000)\r\n> \tlibgpg-error.so.0 => /lib/x86_64-linux-gnu/libgpg-error.so.0 (0x00007f67fb284000)\r\n> root@VM-16-7-ubuntu:~# ldd /usr/sbin/openvpn |grep ssl\r\n> \tlibssl.so.1.1 => /lib/x86_64-linux-gnu/libssl.so.1.1 (0x00007fb1e0f2b000)\r\n> ```\r\n> \r\n> openvpn used `/lib/x86_64-linux-gnu/libssl.so.1.1` as tls/ssl shared object lib. so ,eCapture can works. @zstdadi\r\n\r\nopenvpn has linked to libssl.so, but when I run ecapture tls, no results display, while when I run curl/wget it has results display."
      },
      {
        "user": "cfc4n",
        "created_at": "2022-10-12T11:54:38Z",
        "body": "how do you run openvpn?   what is the client command and server command?"
      },
      {
        "user": "zstdadi",
        "created_at": "2022-10-12T13:39:56Z",
        "body": "> how do you run openvpn? what is the client command and server command?\r\nIf a openvpn client connected to a server, it created a tun NIC, and add a route via tun NIC，when dest IP is in this route, the traffic will run via this tun NIC, I can ping such dest IP to test vpn route. No special CLi command program."
      },
      {
        "user": "cfc4n",
        "created_at": "2022-10-22T15:38:38Z",
        "body": "The reproduction steps you gave are too unclear. \r\nsetting up a runtime environment is particularly painful. I cannot finish."
      }
    ]
  },
  {
    "number": 213,
    "title": "module run failed, [skip it]. error:tls(gnutls) module couldn't find binPath stat /apex/com.android.conscrypt/lib64/libgnutls: no such file or directory",
    "created_at": "2022-09-14T02:12:08Z",
    "closed_at": "2022-09-18T12:23:35Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/gojue/ecapture/issues/213",
    "body": "**Describe the bug**\r\n1. module run failed, [skip it]. error:tls(gnutls) module couldn't find binPath stat /apex/com.android.conscrypt/lib64/libgnutls: no such file or directory\r\n2.  when use ctrl + c to stop, my phone will panic.\r\n--------------------------------\r\n**PANIC\r\nsReason: null_pointer\r\ninfo: PC __sync_icache_dcache +0x34/0xf0**\r\n-------------------------------- \r\n\r\n**To Reproduce**\r\nwhen start captrue tls session on my phone，\r\n\r\n**Screenshots**\r\n\r\n # ./ecapture tls --hex -d -p 25708                                                                                                                                             \r\n2:00:47 ECAPTURE :: version :androidgki_aarch64:0.4.3-20220909-1edb73e:5.4.0-104-generic                                                                                        \r\n2:00:47 ECAPTURE :: pid info :26810                                                                                                                                             \r\n2:00:47 EBPFProbeOPENSSL        module initialization                                                                                                                           \r\n2:00:47 EBPFProbeOPENSSL        master key keylogger: ecapture_masterkey.log                                                                                                    \r\n2:00:47 EBPFProbeOPENSSL        Module.Run()                                                                                                                                    \r\n2:00:47 EBPFProbeOPENSSL        UPROBE MODEL                                                                                                                                    \r\n2:00:47 EBPFProbeOPENSSL        HOOK type:2, binrayPath:/apex/com.android.conscrypt/lib64/libssl.so                                                                             \r\n2:00:47 EBPFProbeOPENSSL        libPthread so Path:/apex/com.android.runtime/lib64/bionic/libc.so                                                                               \r\n2:00:47 EBPFProbeOPENSSL        target PID:25708                                                                                                                                \r\n2:00:47 EBPFProbeOPENSSL        target all users.                                                                                                                               \r\n2:00:47 EBPFProbeOPENSSL        module started successfully.                                                                                                                    \r\n2:00:47 EBPFProbeGNUTLS module initialization                                                                                                                                   \r\n2:00:47 EBPFProbeGNUTLS Module.Run()                                                                                                                                            \r\n2:00:47 EBPFProbeGNUTLS module run failed, [skip it]. error:tls(gnutls) module couldn't find binPath stat /apex/com.android.conscrypt/lib64/libgnutls: no such file or directory\r\n2:00:47 EBPFProbeNSPR   module initialization                                                                                                                                   \r\n2:00:47 EBPFProbeNSPR   Module.Run()                                                                                                                                            \r\n2:00:47 EBPFProbeNSPR   module run failed, [skip it]. error:tls module couldn't find binPath stat /apex/com.android.conscrypt/lib64/libnspr4.so: no such file or directory      \r\n2:00:47 EBPFProbeGoSSL  module [disabled].                                                                                                                                      \r\n2:00:47 ECAPTURE ::     start 1 modules                                                                                                                                         \r\n\r\n**Android:**\r\n# uname -r\r\n5.10.110-qki-consolidate-android12-9-ga3375502e9ca\r\n",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/213/comments",
    "author": "sonicman",
    "comments": [
      {
        "user": "asmoker",
        "created_at": "2022-09-14T06:37:07Z",
        "body": "my error msgs:\r\n\r\n```bash\r\nalioth:/data/local/tmp $ ./ecapture tls\r\ntls_2022/09/14 06:27:00 ECAPTURE :: version :androidgki_aarch64:0.4.3-20220909-1edb73e:5.4.0-104-generic\r\ntls_2022/09/14 06:27:00 ECAPTURE :: pid info :14119\r\ntls_2022/09/14 06:27:00 EBPFProbeOPENSSL\tmodule initialization\r\ntls_2022/09/14 06:27:00 EBPFProbeOPENSSL\tmaster key keylogger: ecapture_masterkey.log\r\ntls_2022/09/14 06:27:00 EBPFProbeOPENSSL\tModule.Run()\r\ntls_2022/09/14 06:27:00 EBPFProbeOPENSSL\tUPROBE MODEL\r\ntls_2022/09/14 06:27:00 EBPFProbeOPENSSL\tHOOK type:2, binrayPath:/apex/com.android.conscrypt/lib64/libssl.so\r\ntls_2022/09/14 06:27:00 EBPFProbeOPENSSL\tlibPthread so Path:/apex/com.android.runtime/lib64/bionic/libc.so\r\ntls_2022/09/14 06:27:00 EBPFProbeOPENSSL\tmodule run failed, [skip it]. error:couldn't init manager error:operation not permitted , couldn't adjust RLIMIT_MEMLOCK\r\ntls_2022/09/14 06:27:00 EBPFProbeGNUTLS\tmodule initialization\r\ntls_2022/09/14 06:27:00 EBPFProbeGNUTLS\tModule.Run()\r\ntls_2022/09/14 06:27:00 EBPFProbeGNUTLS\tmodule run failed, [skip it]. error:tls(gnutls) module couldn't find binPath stat /apex/com.android.conscrypt/lib64/libgnutls: no such file or directory\r\ntls_2022/09/14 06:27:00 EBPFProbeNSPR\tmodule initialization\r\ntls_2022/09/14 06:27:00 EBPFProbeNSPR\tModule.Run()\r\ntls_2022/09/14 06:27:00 EBPFProbeNSPR\tmodule run failed, [skip it]. error:tls module couldn't find binPath stat /apex/com.android.conscrypt/lib64/libnspr4.so: no such file or directory\r\ntls_2022/09/14 06:27:00 EBPFProbeGoSSL\tmodule [disabled].\r\ntls_2022/09/14 06:27:00 ECAPTURE :: \tNo runnable modules, Exit(1)\r\n```\r\n\r\n---\r\n\r\nuname -r\r\n\r\n```bash\r\n4.19.157-perf-g42d3bfdbbffc\r\n```"
      },
      {
        "user": "cfc4n",
        "created_at": "2022-09-14T12:41:36Z",
        "body": "> my error msgs:\r\n> \r\n> ```shell\r\n> alioth:/data/local/tmp $ ./ecapture tls\r\n> tls_2022/09/14 06:27:00 ECAPTURE :: version :androidgki_aarch64:0.4.3-20220909-1edb73e:5.4.0-104-generic\r\n> tls_2022/09/14 06:27:00 ECAPTURE :: pid info :14119\r\n> tls_2022/09/14 06:27:00 EBPFProbeOPENSSL\tmodule initialization\r\n> tls_2022/09/14 06:27:00 EBPFProbeOPENSSL\tmaster key keylogger: ecapture_masterkey.log\r\n> tls_2022/09/14 06:27:00 EBPFProbeOPENSSL\tModule.Run()\r\n> tls_2022/09/14 06:27:00 EBPFProbeOPENSSL\tUPROBE MODEL\r\n> tls_2022/09/14 06:27:00 EBPFProbeOPENSSL\tHOOK type:2, binrayPath:/apex/com.android.conscrypt/lib64/libssl.so\r\n> tls_2022/09/14 06:27:00 EBPFProbeOPENSSL\tlibPthread so Path:/apex/com.android.runtime/lib64/bionic/libc.so\r\n> tls_2022/09/14 06:27:00 EBPFProbeOPENSSL\tmodule run failed, [skip it]. error:couldn't init manager error:operation not permitted , couldn't adjust RLIMIT_MEMLOCK\r\n> tls_2022/09/14 06:27:00 EBPFProbeGNUTLS\tmodule initialization\r\n> tls_2022/09/14 06:27:00 EBPFProbeGNUTLS\tModule.Run()\r\n> tls_2022/09/14 06:27:00 EBPFProbeGNUTLS\tmodule run failed, [skip it]. error:tls(gnutls) module couldn't find binPath stat /apex/com.android.conscrypt/lib64/libgnutls: no such file or directory\r\n> tls_2022/09/14 06:27:00 EBPFProbeNSPR\tmodule initialization\r\n> tls_2022/09/14 06:27:00 EBPFProbeNSPR\tModule.Run()\r\n> tls_2022/09/14 06:27:00 EBPFProbeNSPR\tmodule run failed, [skip it]. error:tls module couldn't find binPath stat /apex/com.android.conscrypt/lib64/libnspr4.so: no such file or directory\r\n> tls_2022/09/14 06:27:00 EBPFProbeGoSSL\tmodule [disabled].\r\n> tls_2022/09/14 06:27:00 ECAPTURE :: \tNo runnable modules, Exit(1)\r\n> ```\r\n> \r\n> uname -r\r\n> \r\n> ```shell\r\n> 4.19.157-perf-g42d3bfdbbffc\r\n> ```\r\nchange to `root` user."
      },
      {
        "user": "asmoker",
        "created_at": "2022-09-15T05:49:12Z",
        "body": "> \r\n\r\nI got that:\r\n\r\n```bash\r\nalioth:/data/local/tmp $ su root\r\n/system/bin/sh: su: inaccessible or not found\r\n```\r\n\r\nem...is that right?  🤔"
      },
      {
        "user": "cfc4n",
        "created_at": "2022-09-16T13:00:58Z",
        "body": "> > \r\n> \r\n> I got that:\r\n> \r\n> ```shell\r\n> alioth:/data/local/tmp $ su root\r\n> /system/bin/sh: su: inaccessible or not found\r\n> ```\r\n> \r\n> em...is that right? 🤔\r\n\r\nuse `su` to change to root on Android . "
      },
      {
        "user": "cfc4n",
        "created_at": "2022-09-18T12:23:35Z",
        "body": "any question yet?"
      }
    ]
  },
  {
    "number": 116,
    "title": "feature:can support a Front edge to show log?",
    "created_at": "2022-06-30T03:33:39Z",
    "closed_at": "2022-07-03T15:08:37Z",
    "labels": [
      "enhancement",
      "help wanted"
    ],
    "url": "https://github.com/gojue/ecapture/issues/116",
    "body": "希望可以有web服务,可以使用前端展示我们的ecapture的数据。",
    "comments_url": "https://api.github.com/repos/gojue/ecapture/issues/116/comments",
    "author": "Jokky6",
    "comments": [
      {
        "user": "RedWifiTeam",
        "created_at": "2022-06-30T11:25:24Z",
        "body": "我也希望或者添加个导出抓取的数据包到日志也行撒"
      },
      {
        "user": "cfc4n",
        "created_at": "2022-06-30T13:25:39Z",
        "body": "I am focusing #90 .  \r\n\r\nsave packet into a file is a grand project. There are not ASCII char who in packet.  a lot of Invisible Characters need save .\r\nso ,need to design a protocol to do. maybe like google protobuf."
      }
    ]
  }
]