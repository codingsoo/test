[
  {
    "number": 7156,
    "title": "mitmproxy user in Docker container assigned UID/GID 0 by default",
    "created_at": "2024-09-03T17:03:47Z",
    "closed_at": "2024-09-17T11:11:07Z",
    "labels": [
      "kind/feature",
      "help wanted",
      "os/linux"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/7156",
    "body": "#### Problem Description\r\nBy default, the `mitmproxy` process and user run as UID/GID 0. This seems unintentional and like an implementation artifact.\r\n\r\n#### Steps to reproduce the behavior:\r\n1. `docker run --rm -it --entrypoint /bin/bash mitmproxy/mitmproxy -c \"ls -la /home/mitmproxy\"`\r\n3. Observe that `.mitmproxy` is owned by `root:root`\r\n4. Observe that the entrypoint changes the UID/GID of `mitmproxy` to the UID/GID of this directory\r\n\r\n#### Note\r\nThis is caused by the `VOLUME` declaration in the Dockerfile - it creates the directory with the current `USER` which is `root`. Subsequently chowning it to `mitmproxy` would fix this.\r\n\r\n#### System Information\r\nMitmproxy: 10.4.2\r\nPython:    3.11.9\r\nOpenSSL:   OpenSSL 3.3.1 4 Jun 2024\r\nPlatform:  Linux-6.10.0-linuxkit-aarch64-with-glibc2.31",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/7156/comments",
    "author": "dr-yd",
    "comments": [
      {
        "user": "mhils",
        "created_at": "2024-09-04T12:43:40Z",
        "body": "Thanks for pointing this out! Would you mind sending a PR with a fix? 😃 "
      },
      {
        "user": "dr-yd",
        "created_at": "2024-09-17T11:13:28Z",
        "body": "Oh, sorry for the lack of feedback, looks like the previous notification passed by me. Thanks @jasonstultz for making the change!"
      }
    ]
  },
  {
    "number": 6661,
    "title": "mitmproxy 10.2.2 returns error on IPv6 connections when using \"--allow-hosts\"",
    "created_at": "2024-02-14T13:37:56Z",
    "closed_at": "2024-02-26T06:20:56Z",
    "labels": [
      "kind/bug",
      "help wanted",
      "area/addons"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/6661",
    "body": "#### Problem Description\r\nWhen using mitmdump (10.2.2) with \"--allow-hosts\", the IPv6 connections return error of \"too many values to unpack\" and a traceback to the file \"next_layer.py\". IPv4 works correctly. Previous mitmproxy version (10.2.1) did not exhibit this problem.\r\n\r\nHere is an example of connecting to imdb.com, which includes both IPv4 and IPv6 connections\r\n\r\n```\r\n[15:31:38.124] HTTP(S) proxy listening at *:8080.\r\n[15:31:41.438][127.0.0.1:34730] client connect                                                                                                                                                        \r\n[15:31:41.500][127.0.0.1:34730] server connect www.imdb.com:443 (52.85.152.173:443)\r\n[15:31:42.664][127.0.0.1:34732] client connect                                                                                                                                                        \r\n[15:31:42.691][127.0.0.1:34732] server connect m.media-amazon.com:443 ([2600:9000:2045:6000:1d:d7f6:39d3:d9e1]:443)\r\n[15:31:42.697] Addon error: too many values to unpack (expected 2)                                                                                                                                    \r\nTraceback (most recent call last):      \r\n  File \"/home/user/.local/pipx/venvs/mitmproxy/lib/python3.10/site-packages/mitmproxy/addons/next_layer.py\", line 111, in next_layer\r\n    nextlayer.layer = self._next_layer(                                                                                                                                                               \r\n  File \"/home/user/.local/pipx/venvs/mitmproxy/lib/python3.10/site-packages/mitmproxy/addons/next_layer.py\", line 133, in _next_layer\r\n    if self._ignore_connection(context, data_client, data_server):\r\n  File \"/home/user/.local/pipx/venvs/mitmproxy/lib/python3.10/site-packages/mitmproxy/addons/next_layer.py\", line 222, in _ignore_connection\r\n    host, port = context.server.peername                                                                                                                                                              \r\nValueError: too many values to unpack (expected 2)\r\n[15:31:44.276][127.0.0.1:34744] client connect                                                                                                                                                        \r\n[15:31:44.341][127.0.0.1:34744] server connect api.graphql.imdb.com:443 (52.85.158.29:443)\r\n[15:31:44.395][127.0.0.1:34758] client connect                                                                                                                                                        \r\n[15:31:44.441][127.0.0.1:34758] server connect api.graphql.imdb.com:443 (52.85.158.19:443)\r\n[15:31:44.526][127.0.0.1:34762] client connect                                                     \r\n[15:31:44.538][127.0.0.1:34776] client connect                                                     \r\n[15:31:44.542][127.0.0.1:34762] server connect m.media-amazon.com:443 ([2600:9000:2045:6000:1d:d7f6:39d3:d9e1]:443)\r\n[15:31:44.544] Addon error: too many values to unpack (expected 2)                                                                                                                                    \r\nTraceback (most recent call last):     \r\n  File \"/home/user/.local/pipx/venvs/mitmproxy/lib/python3.10/site-packages/mitmproxy/addons/next_layer.py\", line 111, in next_layer \r\n    nextlayer.layer = self._next_layer(                                                            \r\n  File \"/home/user/.local/pipx/venvs/mitmproxy/lib/python3.10/site-packages/mitmproxy/addons/next_layer.py\", line 133, in _next_layer       \r\n    if self._ignore_connection(context, data_client, data_server):\r\n  File \"/home/user/.local/pipx/venvs/mitmproxy/lib/python3.10/site-packages/mitmproxy/addons/next_layer.py\", line 222, in _ignore_connection\r\n    host, port = context.server.peername      \r\nValueError: too many values to unpack (expected 2)\r\n```\r\n\r\n\r\n#### Steps to reproduce the behavior:\r\n1. mitmdump --allow-hosts '^somehost\\.com$'\r\n2. Connect with your browser to an IPv6-only or a hybrid IPv4/IPv6 site (e.g. imdb.com).\r\n\r\n#### System Information\r\nMitmproxy: 10.2.2\r\nPython:    3.10.12\r\nOpenSSL:   OpenSSL 3.1.4 24 Oct 2023\r\nPlatform:  Linux-5.15.0-94-generic-x86_64-with-glibc2.35\r\n\r\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/6661/comments",
    "author": "krt222",
    "comments": [
      {
        "user": "errorxyz",
        "created_at": "2024-02-26T05:32:54Z",
        "body": "I think #6614 resolves this issue"
      }
    ]
  },
  {
    "number": 5474,
    "title": "ValueError: mutable default <class 'mitmproxy.contentviews.grpc.ProtoParser.ParserOptions'> for field parser_options is not allowed: use default_factory on python 3.11",
    "created_at": "2022-07-22T11:48:13Z",
    "closed_at": "2022-07-23T08:15:04Z",
    "labels": [
      "kind/bug",
      "help wanted"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/5474",
    "body": "#### Problem Description\r\nmitmproxy fails to start throwing a `ValueError` exception:\r\n```\r\nValueError: mutable default <class 'mitmproxy.contentviews.grpc.ProtoParser.ParserOptions'> for field parser_options is not allowed: use default_factory\r\n```\r\n\r\n#### Steps to reproduce the behavior:\r\n1. Install mitmproxy 8.1.1 on Fedora rawhide (37)\r\n2. run the binary\r\n\r\n#### System Information\r\n```\r\n$ /usr/bin/mitmproxy --version\r\nTraceback (most recent call last):\r\n  File \"/usr/bin/mitmproxy\", line 8, in <module>\r\n    sys.exit(mitmproxy())\r\n             ^^^^^^^^^^^\r\n  File \"/usr/lib/python3.11/site-packages/mitmproxy/tools/main.py\", line 118, in mitmproxy\r\n    from mitmproxy.tools import console\r\n  File \"/usr/lib/python3.11/site-packages/mitmproxy/tools/console/__init__.py\", line 1, in <module>\r\n    from mitmproxy.tools.console import master\r\n  File \"/usr/lib/python3.11/site-packages/mitmproxy/tools/console/master.py\", line 26, in <module>\r\n    from mitmproxy.tools.console import consoleaddons\r\n  File \"/usr/lib/python3.11/site-packages/mitmproxy/tools/console/consoleaddons.py\", line 6, in <module>\r\n    from mitmproxy import contentviews\r\n  File \"/usr/lib/python3.11/site-packages/mitmproxy/contentviews/__init__.py\", line 23, in <module>\r\n    from . import (\r\n  File \"/usr/lib/python3.11/site-packages/mitmproxy/contentviews/grpc.py\", line 952, in <module>\r\n    @dataclass\r\n     ^^^^^^^^^\r\n  File \"/usr/lib64/python3.11/dataclasses.py\", line 1221, in dataclass\r\n    return wrap(cls)\r\n           ^^^^^^^^^\r\n  File \"/usr/lib64/python3.11/dataclasses.py\", line 1211, in wrap\r\n    return _process_class(cls, init, repr, eq, order, unsafe_hash,\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/lib64/python3.11/dataclasses.py\", line 959, in _process_class\r\n    cls_fields.append(_get_field(cls, name, type, kw_only))\r\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/lib64/python3.11/dataclasses.py\", line 816, in _get_field\r\n    raise ValueError(f'mutable default {type(f.default)} for field '\r\nValueError: mutable default <class 'mitmproxy.contentviews.grpc.ProtoParser.ParserOptions'> for field parser_options is not allowed: use default_factory\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/5474/comments",
    "author": "rathann",
    "comments": [
      {
        "user": "mhils",
        "created_at": "2022-07-22T13:44:11Z",
        "body": "We don't officially support Python 3.11 yet, but thanks for the pointer!"
      },
      {
        "user": "lampuiho",
        "created_at": "2023-06-04T17:07:39Z",
        "body": "I have tried running mitmdump after activating venv with source env/bin/activate (after creating it with python3.9 -m venv env, which came after installing python3-pip, python3.9-dev python3.9-venv, and python3.9distutils) However, I still see 3.11 library  /usr/lib/python3.11/dataclasses.py being imported and used. When I run python3, I can see that I'm indeed on 3.9. Does mitm run python differently that it somehow escapes the venv?"
      },
      {
        "user": "mhils",
        "created_at": "2023-06-04T19:00:36Z",
        "body": "We don't do anything special, but FWIW the comment above is outdated. Please refer to our main README für the supported Python versions. At the moment that's 3.9 minimum for mitmproxy 9.x, and Python 3.10+ for the current main branch. :)"
      }
    ]
  },
  {
    "number": 4852,
    "title": "mitmproxy crashes if string option is edited",
    "created_at": "2021-10-11T09:25:05Z",
    "closed_at": "2021-10-13T11:15:35Z",
    "labels": [
      "kind/bug",
      "help wanted",
      "area/console"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/4852",
    "body": "#### Problem Description\r\nEditing options via GUI causes fatal error:\r\n\r\n```\r\nTypeError: parse_setval() missing 1 required positional argument: 'currentvalue'\r\n```\r\n\r\n<details>\r\n<summary>Full traceback</summary>\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/mitmproxy/7.0.4/libexec/lib/python3.9/site-packages/mitmproxy/master.py\", line 54, in run_loop\r\n    loop()\r\n  File \"/usr/local/Cellar/mitmproxy/7.0.4/libexec/lib/python3.9/site-packages/urwid/main_loop.py\", line 287, in run\r\n    self._run()\r\n  File \"/usr/local/Cellar/mitmproxy/7.0.4/libexec/lib/python3.9/site-packages/urwid/main_loop.py\", line 385, in _run\r\n    self.event_loop.run()\r\n  File \"/usr/local/Cellar/mitmproxy/7.0.4/libexec/lib/python3.9/site-packages/urwid/main_loop.py\", line 1494, in run\r\n    reraise(*exc_info)\r\n  File \"/usr/local/Cellar/mitmproxy/7.0.4/libexec/lib/python3.9/site-packages/urwid/compat.py\", line 58, in reraise\r\n    raise value\r\n  File \"/usr/local/Cellar/python@3.9/3.9.7/Frameworks/Python.framework/Versions/3.9/lib/python3.9/asyncio/events.py\", line 80, in _run\r\n    self._context.run(self._callback, *self._args)\r\n  File \"/usr/local/Cellar/mitmproxy/7.0.4/libexec/lib/python3.9/site-packages/urwid/raw_display.py\", line 416, in <lambda>\r\n    wrapper = lambda: self.parse_input(\r\n  File \"/usr/local/Cellar/mitmproxy/7.0.4/libexec/lib/python3.9/site-packages/urwid/raw_display.py\", line 515, in parse_input\r\n    callback(processed, processed_codes)\r\n  File \"/usr/local/Cellar/mitmproxy/7.0.4/libexec/lib/python3.9/site-packages/urwid/main_loop.py\", line 412, in _update\r\n    self.process_input(keys)\r\n  File \"/usr/local/Cellar/mitmproxy/7.0.4/libexec/lib/python3.9/site-packages/urwid/main_loop.py\", line 513, in process_input\r\n    k = self._topmost_widget.keypress(self.screen_size, k)\r\n  File \"/usr/local/Cellar/mitmproxy/7.0.4/libexec/lib/python3.9/site-packages/mitmproxy/tools/console/window.py\", line 316, in keypress\r\n    k = super().keypress(size, k)\r\n  File \"/usr/local/Cellar/mitmproxy/7.0.4/libexec/lib/python3.9/site-packages/urwid/container.py\", line 1135, in keypress\r\n    return self.body.keypress( (maxcol, remaining), key )\r\n  File \"/usr/local/Cellar/mitmproxy/7.0.4/libexec/lib/python3.9/site-packages/mitmproxy/tools/console/window.py\", line 50, in keypress\r\n    ret = super().keypress(size, key)\r\n  File \"/usr/local/Cellar/mitmproxy/7.0.4/libexec/lib/python3.9/site-packages/urwid/container.py\", line 1135, in keypress\r\n    return self.body.keypress( (maxcol, remaining), key )\r\n  File \"/usr/local/Cellar/mitmproxy/7.0.4/libexec/lib/python3.9/site-packages/mitmproxy/tools/console/options.py\", line 290, in keypress\r\n    return self.focus_item.keypress(tsize, key)\r\n  File \"/usr/local/Cellar/mitmproxy/7.0.4/libexec/lib/python3.9/site-packages/mitmproxy/tools/console/options.py\", line 184, in keypress\r\n    d = self.master.options.parse_setval(foc.opt, v)\r\nTypeError: parse_setval() missing 1 required positional argument: 'currentvalue'\r\n```\r\n</details>\r\n\r\n#### Steps to reproduce the behavior:\r\n1. Start mitmproxy\r\n2. Open options (`O`)\r\n3. Select `view_filter` option (or any other string option)\r\n4. Enter valid filter expression or just press `Enter` twice\r\n\r\n#### System Information\r\n```\r\nMitmproxy: 7.0.4\r\nPython:    3.9.7\r\nOpenSSL:   OpenSSL 1.1.1l  24 Aug 2021\r\nPlatform:  macOS-11.6-x86_64-i386-64bit\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/4852/comments",
    "author": "italankin",
    "comments": [
      {
        "user": "italankin",
        "created_at": "2021-10-11T09:25:55Z",
        "body": "Mitmproxy was installed via `brew`"
      },
      {
        "user": "italankin",
        "created_at": "2021-10-11T09:31:05Z",
        "body": "Works fine if option is edited with command line:\r\n\r\n```\r\n: set view_filter 'my_filter'\r\n```"
      },
      {
        "user": "ilyaigpetrov",
        "created_at": "2022-02-26T16:44:18Z",
        "body": "Still reproducible on:\r\n```\r\nMitmproxy: 7.0.4 binary\r\nPython:    3.9.7\r\nOpenSSL:   OpenSSL 1.1.1l  24 Aug 2021\r\nPlatform:  Linux-5.4.0-100-generic-x86_64-with-glibc2.31\r\n```"
      }
    ]
  },
  {
    "number": 4213,
    "title": "Echo HTTP trailers in addons/dumper",
    "created_at": "2020-09-28T15:16:51Z",
    "closed_at": "2020-11-08T10:56:58Z",
    "labels": [
      "kind/feature",
      "help wanted",
      "area/addons"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/4213",
    "body": "As the title says, the dumper addon should also print HTTP trailers. This should be quite straightforward to add, so I'm leaving this for someone less experienced with mitmproxy development to pick up. :)\r\n\r\nIf you're at it, please add a test!",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/4213/comments",
    "author": "mhils",
    "comments": [
      {
        "user": "shiv6146",
        "created_at": "2020-10-15T11:08:33Z",
        "body": "@mhils I have tried to fix the mentioned issue in my PR #4234 Please review it :+1: "
      }
    ]
  },
  {
    "number": 4091,
    "title": "Proxyauth addon: LDAP tests are slow",
    "created_at": "2020-07-16T19:54:47Z",
    "closed_at": "2021-02-14T11:13:24Z",
    "labels": [
      "kind/bug",
      "help wanted",
      "area/addons"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/4091",
    "body": "Our proxy auth LDAP tests seem to block on something. `test_configure` takes >5 seconds. We should track down where that comes from, my suspicion is that we don't mock sufficiently.\r\n\r\n#### Steps to reproduce the behavior:\r\n1. `pytest test_proxyauth.py`\r\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/4091/comments",
    "author": "mhils",
    "comments": [
      {
        "user": "jrblixt",
        "created_at": "2020-11-23T22:33:23Z",
        "body": "I'm not able to reproduce this. Is it still an issue? All 22 tests run in about .52 seconds for me."
      },
      {
        "user": "mhils",
        "created_at": "2021-02-14T11:13:24Z",
        "body": "This indeed seems to be fixed, thanks @jrblixt!"
      }
    ]
  },
  {
    "number": 4070,
    "title": "dumper.py POST request with non utf8 encoding crashes mitmproxy",
    "created_at": "2020-07-08T15:07:45Z",
    "closed_at": "2021-08-23T12:27:17Z",
    "labels": [
      "kind/bug",
      "help wanted",
      "area/addons"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/4070",
    "body": "#### Problem Description\r\nI have a client that uses cp1255 encoding. When it poses to download I get:\r\n\r\n```python\r\nAddon error: Traceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/dist-packages/mitmproxy/addons/dumper.py\", line 246, in response                                                \r\n    self.echo_flow(f)                                                                                                                            \r\n  File \"/usr/local/lib/python3.8/dist-packages/mitmproxy/addons/dumper.py\", line 218, in echo_flow                                               \r\n    self._echo_request_line(f)                                                                                                                   \r\n  File \"/usr/local/lib/python3.8/dist-packages/mitmproxy/addons/dumper.py\", line 166, in _echo_request_line                                      \r\n    self.echo(line)                                                                                                                              \r\n  File \"/usr/local/lib/python3.8/dist-packages/mitmproxy/addons/dumper.py\", line 70, in echo                                                     \r\n    click.secho(text, file=self.outfp, **style)                                                                                                  \r\n  File \"/usr/local/lib/python3.8/dist-packages/click/termui.py\", line 548, in secho                                                              \r\n    return echo(message, file=file, nl=nl, err=err, color=color)                                                                                 \r\n  File \"/usr/local/lib/python3.8/dist-packages/click/utils.py\", line 272, in echo                                                                \r\n    file.write(message)                                                                                                                          \r\nUnicodeEncodeError: 'utf-8' codec can't encode characters in position 138-143: surrogates not allowed  \r\n```\r\n\r\n#### Steps to reproduce the behavior:\r\n1. I am not sure, but I think posting non-unicode chars from the client seems to be breaking it, Is there a way I can capture from the dumper what its trying to do?\r\n\r\n#### System Information\r\n```\r\nMitmproxy: 5.1.1\r\nPython:    3.8.2\r\nOpenSSL:   OpenSSL 1.1.1g  21 Apr 2020\r\nPlatform:  Linux-4.14.171-136.231.amzn2.x86_64-x86_64-with-glibc2.29\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/4070/comments",
    "author": "guysoft",
    "comments": [
      {
        "user": "mhils",
        "created_at": "2020-07-11T12:40:52Z",
        "body": "Yeah, this definitely looks like a bug. Thanks!"
      },
      {
        "user": "dlbas",
        "created_at": "2021-02-14T18:21:41Z",
        "body": "@mhils, I also wish to take a look at this one, if you don't mind 🙃"
      },
      {
        "user": "mhils",
        "created_at": "2021-08-23T12:27:17Z",
        "body": "I think this is fixed. If anyone can still trigger this, please comment here with steps how to reproduce. :)"
      },
      {
        "user": "guysoft",
        "created_at": "2021-08-31T11:29:24Z",
        "body": "Don't think I have how to test it here."
      }
    ]
  },
  {
    "number": 4037,
    "title": "replay.client.stop crashes the client",
    "created_at": "2020-06-21T01:51:26Z",
    "closed_at": "2020-07-14T13:12:24Z",
    "labels": [
      "kind/bug",
      "help wanted",
      "area/addons"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/4037",
    "body": "#### Problem Description\r\nRunning replay.client.stop (with or without pending replays) will crash the client and will require a full restart.\r\n\r\nVersions:\r\nMacOS 10.15.5 (19F96)\r\nPython 3.7.7 (default, Mar 10 2020, 15:43:33)\r\n\r\nThe same also occurred on Ubuntu 20.04.\r\n\r\n#### Steps to reproduce the behavior:\r\n1. Launch mitmproxy with given version\r\n2. Run :replay.client.stop\r\n3. Whole client crashes\r\n\r\n#### System Information\r\nMitmproxy: 5.1.1\r\nPython:    3.7.7\r\nOpenSSL:   OpenSSL 1.1.1g  21 Apr 2020\r\nPlatform:  Darwin-19.5.0-x86_64-i386-64bit\r\n\r\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/4037/comments",
    "author": "Woolworths",
    "comments": [
      {
        "user": "mhils",
        "created_at": "2020-06-22T15:58:37Z",
        "body": "Thanks for the straightforward repro!"
      },
      {
        "user": "Woolworths",
        "created_at": "2020-06-24T05:20:57Z",
        "body": "@mhils No worries. I'll see if I can get to it in the near future (still a newbie to open source though). "
      }
    ]
  },
  {
    "number": 3833,
    "title": "Headers replace bug when count is set",
    "created_at": "2020-02-27T20:01:17Z",
    "closed_at": "2020-03-30T21:09:09Z",
    "labels": [
      "kind/bug",
      "help wanted",
      "area/core"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/3833",
    "body": "#### Problem Description\r\nHeaders matching for replace are fully removed, if count=1\r\n\r\n#### Steps to reproduce the behavior:\r\n1. create header instance: `headers = Headers(host='foo.com', referrer='foo.com')`\r\n2. replace `foo` with `bar` and `count=1`: `headers.replace('foo', 'bar', count=1)`\r\n3. result is empty headers: `Headers[]`\r\n\r\n```\r\n>>> headers = Headers(host='foo.com', referrer='foo.com')\r\n>>> headers.replace('foo', 'bar', count=1)\r\n1\r\n>>> headers\r\nHeaders[]\r\n```\r\n\r\n#### System Information\r\nMitmproxy: 5.0.1\r\nPython:    3.7.6\r\nOpenSSL:   OpenSSL 1.1.0j  20 Nov 2018\r\nPlatform:  Darwin-19.3.0-x86_64-i386-64bit\r\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/3833/comments",
    "author": "eremeevdev",
    "comments": [
      {
        "user": "mhils",
        "created_at": "2020-02-27T21:02:51Z",
        "body": "Thanks for providing super easy steps to reproduce this! :smiley:"
      },
      {
        "user": "naivekun",
        "created_at": "2020-02-28T10:51:42Z",
        "body": "I'll try to fix it."
      }
    ]
  },
  {
    "number": 3778,
    "title": "\"ValueError: math domain error\" in table mode when displaying a server replay flow",
    "created_at": "2020-01-10T08:37:23Z",
    "closed_at": "2020-01-10T17:45:45Z",
    "labels": [
      "kind/bug",
      "help wanted",
      "area/console"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/3778",
    "body": "#### Problem Description\r\n`mitmproxy` crashes when it tries to display a replayed flows in a table mode.\r\nWith active server replay, flow's duration is negative, so `math.log2` receives a negative value which is illegal.\r\n\r\nTraceback:\r\n```\r\n  File \"mitmproxy/master.py\", line 86, in run_loop\r\n  File \"site-packages/urwid/main_loop.py\", line 286, in run\r\n  File \"site-packages/urwid/main_loop.py\", line 384, in _run\r\n  File \"site-packages/urwid/main_loop.py\", line 1484, in run\r\n  File \"site-packages/urwid/compat.py\", line 58, in reraise\r\n  File \"asyncio/events.py\", line 88, in _run\r\n  File \"site-packages/urwid/main_loop.py\", line 1443, in faux_idle_callback\r\n  File \"site-packages/urwid/main_loop.py\", line 572, in entering_idle\r\n  File \"site-packages/urwid/main_loop.py\", line 586, in draw_screen\r\n  File \"site-packages/urwid/widget.py\", line 144, in cached_render\r\n  File \"site-packages/urwid/container.py\", line 1086, in render\r\n  File \"site-packages/urwid/widget.py\", line 144, in cached_render\r\n  File \"site-packages/urwid/decoration.py\", line 226, in render\r\n  File \"site-packages/urwid/widget.py\", line 144, in cached_render\r\n  File \"site-packages/urwid/container.py\", line 1086, in render\r\n  File \"site-packages/urwid/widget.py\", line 144, in cached_render\r\n  File \"site-packages/urwid/listbox.py\", line 471, in render\r\n  File \"site-packages/urwid/listbox.py\", line 356, in calculate_visible\r\n  File \"mitmproxy/tools/console/flowlist.py\", line 57, in get_focus\r\n  File \"mitmproxy/tools/console/flowlist.py\", line 12, in __init__\r\n  File \"mitmproxy/tools/console/flowlist.py\", line 22, in get_text\r\n  File \"mitmproxy/tools/console/common.py\", line 561, in format_flow\r\n  File \"mitmproxy/tools/console/common.py\", line 488, in raw_format_table\r\nValueError: math domain error\r\n```\r\n\r\n#### Steps to reproduce the behavior:\r\n1. Start `mitmproxy` with table layout active\r\n2. Make an HTTP call\r\n3. Add the call to server replay\r\n4. Make the call again\r\n\r\n#### System Information\r\n```\r\nMitmproxy: 5.0.1 binary\r\nPython:    3.7.5\r\nOpenSSL:   OpenSSL 1.1.0j  20 Nov 2018\r\nPlatform:  Linux-5.0.0-38-generic-x86_64-with-debian-buster-sid\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/3778/comments",
    "author": "italankin",
    "comments": [
      {
        "user": "ylmrx",
        "created_at": "2020-01-10T08:52:27Z",
        "body": "Should we set it to 0, whenever `f.response.timestamp_end < f.request.timestamp_start` ? \r\nThe number will be incorrect, but it won't crash anymore."
      },
      {
        "user": "italankin",
        "created_at": "2020-01-10T09:13:10Z",
        "body": "> Should we set it to 0, whenever f.response.timestamp_end < f.request.timestamp_start ?\r\n\r\nIt is an option, because seeing times like `-321075ms` is kind of misleading.\r\n\r\nAnother one is just take maximum of 0 and flow's duration, because the problem code is used for getting color."
      },
      {
        "user": "mhils",
        "created_at": "2020-01-10T10:54:30Z",
        "body": "I would be fine with either setting this to 0 in the console code or with refreshing the `timestamp_` attributes in the server playback addons. PRs welcome! 😃 "
      }
    ]
  },
  {
    "number": 3722,
    "title": "Search inside a flow causes mitmproxy to crash",
    "created_at": "2019-11-22T00:58:45Z",
    "closed_at": "2019-12-12T15:53:17Z",
    "labels": [
      "kind/bug",
      "help wanted"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/3722",
    "body": "#### Problem Description\r\n\r\nIf you try to use the search feature inside a flow (by pressing '/') and type something to make a search, mitmproxy crashes.\r\n\r\n#### Steps to reproduce the behavior:\r\n1. Open mitmproxy and make a few requests\r\n2. Selct one of the flows in the main screen and open it (by pressing Enter)\r\n3. In the flow, press `/` and type something and then press Enter\r\n4. Notice that mitmproxy crashes\r\n\r\n#### System Information\r\n\r\n$ mitmproxy --version\r\nMitmproxy: 5.0.0.dev (+413, commit 2f30981)\r\nPython:    3.7.3\r\nOpenSSL:   OpenSSL 1.1.0h  27 Mar 2018\r\nPlatform:  Linux-5.0.0-31-generic-x86_64-with-Ubuntu-19.04-disco\r\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/3722/comments",
    "author": "typoon",
    "comments": [
      {
        "user": "KORraNpl",
        "created_at": "2019-11-22T22:26:31Z",
        "body": "Can confirm, traceback:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/username/Projects/mitmproxy/mitmproxy/master.py\", line 86, in run_loop\r\n    loop()\r\n  File \"/Users/username/Envs/mitmproxy-0GFVzhJ3/lib/python3.7/site-packages/urwid/main_loop.py\", line 286, in run\r\n    self._run()\r\n  File \"/Users/username/Envs/mitmproxy-0GFVzhJ3/lib/python3.7/site-packages/urwid/main_loop.py\", line 384, in _run\r\n    self.event_loop.run()\r\n  File \"/Users/username/Envs/mitmproxy-0GFVzhJ3/lib/python3.7/site-packages/urwid/main_loop.py\", line 1484, in run\r\n    reraise(*exc_info)\r\n  File \"/Users/username/Envs/mitmproxy-0GFVzhJ3/lib/python3.7/site-packages/urwid/compat.py\", line 58, in reraise\r\n    raise value\r\n  File \"/usr/local/Cellar/python/3.7.4_1/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py\", line 88, in _run\r\n    self._context.run(self._callback, *self._args)\r\n  File \"/Users/username/Envs/mitmproxy-0GFVzhJ3/lib/python3.7/site-packages/urwid/raw_display.py\", line 404, in <lambda>\r\n    event_loop, callback, self.get_available_raw_input())\r\n  File \"/Users/username/Envs/mitmproxy-0GFVzhJ3/lib/python3.7/site-packages/urwid/raw_display.py\", line 502, in parse_input\r\n    callback(processed, processed_codes)\r\n  File \"/Users/username/Envs/mitmproxy-0GFVzhJ3/lib/python3.7/site-packages/urwid/main_loop.py\", line 411, in _update\r\n    self.process_input(keys)\r\n  File \"/Users/username/Envs/mitmproxy-0GFVzhJ3/lib/python3.7/site-packages/urwid/main_loop.py\", line 511, in process_input\r\n    k = self._topmost_widget.keypress(self.screen_size, k)\r\n  File \"/Users/username/Projects/mitmproxy/mitmproxy/tools/console/window.py\", line 310, in keypress\r\n    k = super().keypress(size, k)\r\n  File \"/Users/username/Envs/mitmproxy-0GFVzhJ3/lib/python3.7/site-packages/urwid/container.py\", line 1119, in keypress\r\n    return self.footer.keypress((maxcol,),key)\r\n  File \"/Users/username/Projects/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 198, in keypress\r\n    return self.ab.keypress(*args, **kwargs)\r\n  File \"/Users/username/Projects/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 145, in keypress\r\n    self.command_history.add_command(self._w.cbuf, True)\r\nAttributeError: 'Edit' object has no attribute 'cbuf'\r\n```\r\n\r\n```\r\nMitmproxy: 5.0.0.dev (+444, commit bbb7eb6)\r\nPython:    3.7.4\r\nOpenSSL:   OpenSSL 1.1.0j  20 Nov 2018\r\nPlatform:  Darwin-18.7.0-x86_64-i386-64bit\r\n```"
      },
      {
        "user": "peter-way",
        "created_at": "2019-12-01T08:45:38Z",
        "body": "@mhils Bug should be fixed in new pull request.\r\n\r\nBy the way, i'm wondering why console GUI used, instead of more advanced like QT, or GTK?"
      },
      {
        "user": "suidpit",
        "created_at": "2019-12-01T10:36:29Z",
        "body": "@peter-way I find it quite useful to be able to use mitmproxy GUI in machines I have SSH access on (keeping it running in a tmux session, for instance). Also, mitmweb interface should be the place to look for a greater \"GUI-like\" experience :) "
      }
    ]
  },
  {
    "number": 3721,
    "title": "Replaying request using upstream proxy that needs auth doesn't work",
    "created_at": "2019-11-22T00:39:42Z",
    "closed_at": "2021-10-20T14:28:54Z",
    "labels": [
      "kind/bug",
      "help wanted"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/3721",
    "body": "#### Problem Description\r\n\r\nWhen you use mitmproxy with an upstream proxy that requires authentication, you can't replay requests because the replay feature won't send the credentials in the `CONNECT` request to the upstream proxy.\r\n\r\n#### Steps to reproduce the behavior:\r\n1. Open mitmproxy configured with an upstream proxy that requires authorization\r\n2. Capture a couple of requests\r\n3. Open wireshark to watch the request sent to by mitmproxy to the upstream proxy\r\n4. Try to replay a request\r\n\r\n#### System Information\r\n\r\n$ mitmproxy -p12345 --version\r\nMitmproxy: 5.0.0.dev (+413, commit 2f30981)\r\nPython:    3.7.3\r\nOpenSSL:   OpenSSL 1.1.0h  27 Mar 2018\r\nPlatform:  Linux-5.0.0-31-generic-x86_64-with-Ubuntu-19.04-disco\r\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/3721/comments",
    "author": "typoon",
    "comments": [
      {
        "user": "HoffmannP",
        "created_at": "2021-10-20T14:21:07Z",
        "body": "The Problem is not that the credentials are not sent but that the proxy (which one are you using?) is not accepting the request.\r\n\r\nI checked the replay network traffic and found out:\r\n1. mitm is sending a CONNECT request that clearly differs from the former GET request but might be required by a agnostic replay\r\n2. mitm is sending the Proxy-Authorization header with the correct upstream_auth value\r\n3. the proxy server is checking the auth for correctness (this is specific to tinyproxy I used for debugging) and answering with 403 if the auth data is wrong\r\n4. if the auth is correct - at least tinyproxy - the server is responding with 401 (I'd prefer 405 but hey, who am I to judge)\r\n\r\nSo the current version of mitmproxy is correctly using the proxy upstream_auth value. As this issue is quite old it might also be, that this was implemented in the meantime and I just see another problem. I'd recommend discussing the reason for the CONNECT replay method instead of the original request but assume this is some clever solution for another problem.\r\n\r\n@mhils could you shed some light on this?"
      },
      {
        "user": "mhils",
        "created_at": "2021-10-20T14:28:54Z",
        "body": "The original issue was filed with our old proxy core, so you're very likely hitting something different. Please open a new issue with clear steps on how to reproduce it. :)"
      }
    ]
  },
  {
    "number": 3645,
    "title": "[Feature] Support for TLS1.3",
    "created_at": "2019-09-21T08:11:23Z",
    "closed_at": "2020-04-13T07:54:39Z",
    "labels": [
      "help wanted",
      "area/protocols",
      "area/core"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/3645",
    "body": "Hello, the tested app  only use tls1.3, does the latest version of mitmproxy supports tls1.3-https traffic analysis? Thank you.",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/3645/comments",
    "author": "njnuzhao",
    "comments": [
      {
        "user": "Kriechi",
        "created_at": "2019-09-28T09:49:57Z",
        "body": "mitmproxy is not yet tested with TLS1.3.\r\nMost of our dependencies, openssl, and their Python libs, should support it though - but we need to check our custom TLS parser logic."
      },
      {
        "user": "Kriechi",
        "created_at": "2020-04-13T07:54:39Z",
        "body": "Released as part of mitmproxy v5.1.0."
      }
    ]
  },
  {
    "number": 3596,
    "title": "WBXML is out of date",
    "created_at": "2019-07-23T12:14:43Z",
    "closed_at": "2022-04-06T09:34:52Z",
    "labels": [
      "kind/feature",
      "help wanted",
      "area/contentviews"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/3596",
    "body": "wbxml is out of date.\r\nSupport for EAS 16.1 is available upstream for more than a year\r\nand fix for #2638 is currently waiting for merge.",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/3596/comments",
    "author": "user185953",
    "comments": [
      {
        "user": "user185953",
        "created_at": "2019-07-30T17:34:19Z",
        "body": "All fixes are merged upstream, ready for pulling"
      },
      {
        "user": "mhils",
        "created_at": "2020-01-03T12:14:23Z",
        "body": "We have no vested interest in WBXML support. If you or anyone else wants to see the version in mitmproxy updated, please send a PR! 😃 "
      },
      {
        "user": "mhils",
        "created_at": "2022-04-06T09:34:52Z",
        "body": "I'm closing this here as I have no particular interest in WBXML, but I'd still be happy to merge a PR. :)"
      }
    ]
  },
  {
    "number": 3321,
    "title": "Upgrade ruamel.yaml",
    "created_at": "2018-09-07T12:45:19Z",
    "closed_at": "2020-12-13T11:43:12Z",
    "labels": [
      "help wanted",
      "area/infra"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/3321",
    "body": "Upgrading ruamel.yaml currently breaks mitmproxy. We need to adjust mitmproxy to the ruamel.yaml changes.\r\n\r\nconfig.yaml\r\n```\r\nignore_hosts:\r\n- example.com\r\n- example.org\r\n```\r\n\r\nTraceback:\r\n```\r\nλ mitmproxy\r\nTraceback (most recent call last):\r\n  File \"/home/user/venv/bin/mitmproxy\", line 9, in <module>\r\n    load_entry_point('mitmproxy', 'console_scripts', 'mitmproxy')()\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/_main.py\", line 149, in mitmproxy\r\n    run(console.master.ConsoleMaster, cmdline.mitmproxy, args)\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/_main.py\", line 93, in run\r\n    os.path.join(opts.confdir, OPTIONS_FILE_NAME),\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/optmanager.py\", line 527, in load_paths\r\n    load(opts, txt)\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/optmanager.py\", line 507, in load\r\n    opts.update_defer(**data)\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/optmanager.py\", line 221, in update_defer\r\n    unknown = self.update_known(**kwargs)\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/optmanager.py\", line 216, in update_known\r\n    self._options[k].set(v)\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/optmanager.py\", line 57, in set\r\n    typecheck.check_option_type(self.name, value, self.typespec)\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/utils/typecheck.py\", line 63, in check_option_type\r\n    raise e\r\nTypeError: Expected typing.Sequence[str] for ignore_hosts, but got <class 'ruamel.yaml.comments.CommentedSeq'>.\r\n```",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/3321/comments",
    "author": "mhils",
    "comments": [
      {
        "user": "borjasantosdiez",
        "created_at": "2018-11-29T12:15:35Z",
        "body": "I'm having the exact same issue with mitmproxy 4.0.4, and even going back to ruamel.yaml 0.15.54 hasn't solved the issue."
      },
      {
        "user": "nemani",
        "created_at": "2019-02-28T13:22:40Z",
        "body": "I would like to work on this @mhils I have used ruamel.yaml earlier for another project."
      },
      {
        "user": "nemani",
        "created_at": "2019-03-01T01:41:24Z",
        "body": "@mhils  the version of rualmel is the latest in my installation and the above config file works. So this issue too can be closed! :)"
      }
    ]
  },
  {
    "number": 3307,
    "title": "Client replay doesn't update request timestamps",
    "created_at": "2018-08-29T20:55:17Z",
    "closed_at": "2018-12-01T15:35:41Z",
    "labels": [
      "kind/bug",
      "help wanted",
      "area/addons"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/3307",
    "body": "##### Steps to reproduce the problem:\r\n\r\n1. Save flows to a file, `saved.mitm`\r\n2. Wait a few minutes\r\n3. Use  a command like `mitmdump -n -C saved.mitm -s myscript.py -w replayed.mtim` to replay the saved flows. \r\n4. Then observe the flows with `mitmproxy -n -r replayed.mitm` and see that the request-response time of the flows are inaccurate because it seems to be calculated using the start time of the requests in `saved.mitm`.\r\n\r\n##### Any other comments? What have you tried so far?\r\nIf such behavior is intentional, what's the recommended way to set the request timestamps so that they reflect the time when the requests are actually replayed rather than the previously saved timestamps?\r\n\r\nAs a workaround, I've added these two lines after the `server.wfile.flush()` line in `addons/clientplayback.py` for my use case:\r\n\r\n```\r\n                r.timestamp_end = time.time()\r\n                r.timestamp_start = server.wfile.first_byte_timestamp\r\n```\r\nIt seems reasonable but I'm not sure if it's correct.\r\n\r\n##### System information\r\nMitmproxy: 4.0.4\r\nPython:    3.7.0\r\nOpenSSL:   OpenSSL 1.0.2p  14 Aug 2018\r\nPlatform:  Darwin-17.5.0-x86_64-i386-64bit\r\n\r\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/3307/comments",
    "author": "kjkuan",
    "comments": [
      {
        "user": "mhils",
        "created_at": "2018-09-07T12:35:06Z",
        "body": "Thanks for the report. I agree - we should probably do a simple\r\n```\r\nrequest.timestamp_start = request.timestamp_end = time.time()\r\n```\r\nif/before we do client replay. Do you want to submit a PR for this? :)"
      }
    ]
  },
  {
    "number": 3196,
    "title": "Adding Addon to check SSL-Pinning on client",
    "created_at": "2018-06-09T09:09:37Z",
    "closed_at": "2020-07-14T14:38:13Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/pull/3196",
    "body": "I have created an Add-On which can help in checking SSL Pinning implementation on client side. For SSL-Pinning broadly there are 5 test cases:\r\n1. Certificate issuer\r\n2. Certificate CommonName\r\n3. Certificate Being On time\r\n4. Certificate Expire time\r\n5. Verifying complete certificate chain\r\n\r\nCase 1 can be easily tested by just sending traffic via a proxy, whose root cert is not imported in the trust store of the device/browser/client. \r\nFor Case 2, 3, 4 in my experience I didn't find many easy to use tools, and ended up creating this Add-on. Currently I am not able to hack my way to create Case 5 (any help is appreciated).  \r\n\r\nI have tested this for few browsers: Android Chrome, iOS Safari, and Firefox on MacOS, and is working fine. \r\n\r\nI am triggering the Add-On into action on 'clientconnect' event, I hope its the right way to do it. \r\n\r\nPlease let me know if something is not as per project's coding practice\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/3196/comments",
    "author": "su-vikas",
    "comments": [
      {
        "user": "Kriechi",
        "created_at": "2018-06-16T09:18:12Z",
        "body": "Thanks for the PR! 👍 \r\nIt looks like you are adding a new addon to our default addon list (e.g., core) that monkey-patches a function. I feel like we probably should address this more directly by modifying & implementing your changes in the `mitmproxy.certs.Cert` class itself. \r\n\r\nWe would also appreciate a few tests to make sure your new options actually work as expected."
      },
      {
        "user": "su-vikas",
        "created_at": "2018-06-19T02:45:06Z",
        "body": "Hi, \r\nInitially I wanted to implement this without monkey-patching, but I couldn't come-up with a neat solution. If you have some ideas on how this can be achieved, please let me know. \r\n\r\nFor tests, I will update the PR once I implement it. "
      },
      {
        "user": "mhils",
        "created_at": "2020-07-14T14:37:58Z",
        "body": "I moved this into our new examples/contrib directory. Thanks gain! 🍰 "
      }
    ]
  },
  {
    "number": 3150,
    "title": "check charset in HTML meta tags",
    "created_at": "2018-05-24T06:06:37Z",
    "closed_at": "2019-10-20T14:24:19Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/pull/3150",
    "body": "In some cases, there is no charset in response headers, such as www.baidu.com.\r\nso I edited the `_guess_encoding` method to check charset in HTML meta tags.\r\n\r\nAnd in some cases, sites using 'gb2312' encoding can cause decoding errors, such as www.qq.com.\r\nSo I changed 'gb2312' and 'gbk' to 'gb18030'. The latter is the superset of the first two.",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/3150/comments",
    "author": "0xHJK",
    "comments": [
      {
        "user": "mhils",
        "created_at": "2018-05-24T12:24:55Z",
        "body": "Thanks, this looks great! Can you please add some small tests that demonstrate each of the new cases? :smiley: 🍰 "
      },
      {
        "user": "mhils",
        "created_at": "2018-09-07T13:24:23Z",
        "body": "I'd still love to merge this - can we get a test please?"
      },
      {
        "user": "0xHJK",
        "created_at": "2018-09-12T08:08:20Z",
        "body": "Sorry. I don't have time to write test cases now. I will add it when I have time."
      },
      {
        "user": "rjt-gupta",
        "created_at": "2019-10-20T14:23:22Z",
        "body": "We can close this.."
      },
      {
        "user": "mhils",
        "created_at": "2019-10-20T14:24:19Z",
        "body": "Thanks for the heads-up!"
      }
    ]
  },
  {
    "number": 2990,
    "title": "Keybinding ‘M’ erroneously highlighted",
    "created_at": "2018-03-15T11:28:08Z",
    "closed_at": "2018-03-15T22:59:05Z",
    "labels": [
      "kind/bug",
      "help wanted",
      "area/console"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/2990",
    "body": "##### Steps to reproduce the problem:\r\n\r\n1. run `mitmproxy`\r\n2. type `O` to open the options editor\r\n3. move the cursor down to `default_contentview` and press Enter\r\n4. type `4` to select `json`\r\n5. type `q` to return to the flows list\r\n6. the status bar now says “[M:json]” with the ‘M’ highlighted, as if it were a shortcut\r\n7. however, typing `M` invokes “Toggle viewing marked flows” instead\r\n\r\n##### Any other comments? What have you tried so far?\r\n\r\nThis is similar to #2953.\r\n\r\n##### System information\r\n\r\nMitmproxy: 3.0.3 binary\r\nPython:    3.5.2\r\nOpenSSL:   OpenSSL 1.1.0g  2 Nov 2017\r\nPlatform:  Linux-4.4.0-116-generic-x86_64-with-debian-stretch-sid\r\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/2990/comments",
    "author": "vfaronov",
    "comments": [
      {
        "user": "mhils",
        "created_at": "2018-03-15T12:41:15Z",
        "body": "Thanks for reporting these with fantastic instructions, this is really helpful! For now let's just remove the binding, we can think about adding it back later. \r\n\r\nIf someone wants to tackle the \"adding back\" part in a second PR, it's a bit more difficult now that shortcuts are user-configurable. We'd need to have a function that returns the current keybinding for a given command, and catch the case where no keybinding is configured (in which case we probably need to display something else, e.g. `[mode:json]`). "
      },
      {
        "user": "fenilgandhi",
        "created_at": "2018-03-15T14:26:31Z",
        "body": "Ok, i am on it. For the time being, i am removing it but if some one is up for the task, the adding back part is still available."
      }
    ]
  },
  {
    "number": 2935,
    "title": "Mitmweb changes default value of options",
    "created_at": "2018-02-27T18:55:58Z",
    "closed_at": "2022-04-06T09:22:51Z",
    "labels": [
      "kind/bug",
      "help wanted",
      "area/web"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/2935",
    "body": "##### Steps to reproduce the problem:\r\n\r\n1. run `mitmweb`\r\n2. enable `spoof_source_address` from options\r\n3. close `mitmweb` and open `mitmproxy`\r\n4. Go to options by pressing `O` , `spoof_source_address` will be enabled by default\r\n\r\n##### Any other comments? What have you tried so far?\r\n\r\nEven if you try to change the setting using `options` from `mitmproxy` UI, the default is changed until and unless you open `mitmweb` and untick it back.\r\nIdk if it's a solid issue or not but this can trouble the user a lot. \r\n\r\n##### System information\r\n\r\n<!-- Paste the output of \"mitmproxy --version\" here. -->\r\n```\r\nMitmproxy: 4.0.0.dev1295 (commit 10b6f62) \r\nPython:    3.5.2\r\nOpenSSL:   OpenSSL 1.1.0g  2 Nov 2017\r\nPlatform:  Linux-4.13.0-36-generic-x86_64-with-Ubuntu-16.04-xenial\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/2935/comments",
    "author": "armudgal",
    "comments": [
      {
        "user": "mhils",
        "created_at": "2018-02-27T22:11:26Z",
        "body": "This is because mitmweb writes `config.yaml`. We probably should do something more elaborate here, e.g. considering a separate `mitmweb.yaml` file. @cortesi probably already has a stronger opinion on this. :)"
      },
      {
        "user": "cortesi",
        "created_at": "2018-02-27T23:07:15Z",
        "body": "Oh, wow. Yes, @cortesi has a strong opinion here - mitmweb should definitely not save options without the user clicking a \"Save\" button, and should certainly only save options that have been changed from defaults rather than blorting out all options into the file, and should certainly not over-write options the user has set explicitly. "
      },
      {
        "user": "MatthewShao",
        "created_at": "2018-03-04T13:41:52Z",
        "body": "Thanks for the opinion on this feature, I'll improve this in next few days."
      },
      {
        "user": "cortesi",
        "created_at": "2018-04-17T21:16:21Z",
        "body": "I've temporarily disabled options saving by mitmweb on master - it kept tripping me up while I was troubleshooting an unrelated issue. "
      }
    ]
  },
  {
    "number": 2882,
    "title": "TestServerBind.test_bind failure on OSX",
    "created_at": "2018-02-19T20:39:11Z",
    "closed_at": "2018-03-24T16:43:33Z",
    "labels": [
      "kind/bug",
      "help wanted",
      "area/tests"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/2882",
    "body": "I don't have time to dig into this right now, but I'm seeing the following failure on master. Perhaps related to recent IPv6 changes?\r\n\r\n```__________________________________________________ TestServerBind.test_bind ___________________________________________________\r\n\r\nself = <test.mitmproxy.net.test_tcp.TestServerBind object at 0x10f1fc828>\r\n\r\n    def test_bind(self):\r\n        \"\"\" Test to bind to a given random port. Try again if the random port turned out to be blocked. \"\"\"\r\n        for i in range(20):\r\n            random_port = random.randrange(1024, 65535)\r\n            try:\r\n                c = tcp.TCPClient(\r\n                    (\"127.0.0.1\", self.port), source_address=(\r\n                        \"127.0.0.1\", random_port))\r\n                with c.connect():\r\n>                   assert c.rfile.readline() == str((\"127.0.0.1\", random_port)).encode()\r\nE                   assert b\"('::ffff:12... 27754, 0, 0)\" == b\"('127.0.0.1', 27754)\"\r\nE                     At index 2 diff: 58 != 49\r\nE                     Left contains more items, first extra item: 32\r\nE                     Use -v to get the full diff\r\n```",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/2882/comments",
    "author": "cortesi",
    "comments": [
      {
        "user": "Kriechi",
        "created_at": "2018-03-24T16:43:33Z",
        "body": "Seems to work with current master on Travis OSX and my local machine as well."
      }
    ]
  },
  {
    "number": 2752,
    "title": "Editing set-cookies while no response is present crashes mitmproxy",
    "created_at": "2018-01-04T12:03:07Z",
    "closed_at": "2018-01-18T18:27:28Z",
    "labels": [
      "kind/bug",
      "help wanted",
      "area/addons"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/2752",
    "body": "##### Steps to reproduce the problem:\r\n\r\n1. Create a new flow by pressing `n`.\r\n2. Enter, e -> set-cookies\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/master.py\", line 216, in run\r\n    self.loop.run()\r\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\r\n    self._run()\r\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\r\n    self.event_loop.run()\r\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\r\n    self._loop()\r\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 719, in _loop\r\n    self._watch_files[fd]()\r\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\r\n    event_loop, callback, self.get_available_raw_input())\r\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input\r\n    callback(processed, processed_codes)\r\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update\r\n    self.process_input(keys)\r\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\r\n    k = self._topmost_widget.keypress(self.screen_size, k)\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 299, in keypress\r\n    k = super().keypress(size, k)\r\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\r\n    return self.body.keypress( (maxcol, remaining), key )\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 36, in keypress\r\n    ret = super().keypress(size, key)\r\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\r\n    return self.body.keypress( (maxcol, remaining), key )\r\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/container.py\", line 592, in keypress\r\n    *self.calculate_padding_filler(size, True)), key)\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/overlay.py\", line 130, in keypress\r\n    self.master.keymap.handle(\"global\", key)\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/keymap.py\", line 130, in handle\r\n    return self.executor(b.command)\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/commandexecutor.py\", line 17, in __call__\r\n    ret = self.master.commands.call(cmd)\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 221, in call\r\n    return self.call_args(parts[0], parts[1:])\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 212, in call_args\r\n    return self.commands[path].call(args)\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 101, in call\r\n    ret = self.func(*pargs)\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 251, in wrapper\r\n    return function(*args, **kwargs)\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/consoleaddons.py\", line 174, in nav_select\r\n    self.master.inject_key(\"m_select\")\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/master.py\", line 181, in inject_key\r\n    self.loop.process_input([key])\r\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\r\n    k = self._topmost_widget.keypress(self.screen_size, k)\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 299, in keypress\r\n    k = super().keypress(size, k)\r\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\r\n    return self.body.keypress( (maxcol, remaining), key )\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 36, in keypress\r\n    ret = super().keypress(size, key)\r\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\r\n    return self.body.keypress( (maxcol, remaining), key )\r\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/container.py\", line 592, in keypress\r\n    *self.calculate_padding_filler(size, True)), key)\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/overlay.py\", line 120, in keypress\r\n    self.callback(self.choices[self.walker.index])\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/consoleaddons.py\", line 264, in callback\r\n    self.master.commands.call(subcmd + \" \" + repl)\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 221, in call\r\n    return self.call_args(parts[0], parts[1:])\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 212, in call_args\r\n    return self.commands[path].call(args)\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 101, in call\r\n    ret = self.func(*pargs)\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 251, in wrapper\r\n    return function(*args, **kwargs)\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/consoleaddons.py\", line 409, in edit_focus\r\n    self.master.switch_view(\"edit_focus_setcookies\")\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/master.py\", line 236, in switch_view\r\n    self.window.push(name)\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 223, in push\r\n    self.focus_changed()\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 200, in focus_changed\r\n    i.call(\"focus_changed\")\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 110, in call\r\n    getattr(self.top_window(), name)(*args, **kwargs)\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/grideditor/base.py\", line 471, in focus_changed\r\n    self.get_data(self.master.view.focus.flow),\r\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/grideditor/editors.py\", line 149, in get_data\r\n    return self.data_in(flow.response.cookies.items(multi=True))\r\nAttributeError: 'NoneType' object has no attribute 'cookies'\r\n```\r\n\r\n##### System information\r\n\r\nMitmproxy: 3.0.0.dev0002 (commit 299df48)\r\nPython: 3.5.2\r\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\r\nPlatform: Linux-4.4.0-43-Microsoft-x86_64-with-Ubuntu-16.04-xenial",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/2752/comments",
    "author": "mhils",
    "comments": [
      {
        "user": "kajojify",
        "created_at": "2018-01-04T14:44:55Z",
        "body": "The same situation with `response-headers`:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/master.py\", line 216, in run\r\n    self.loop.run()\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\r\n    self._run()\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\r\n    self.event_loop.run()\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\r\n    self._loop()\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 719, in _loop\r\n    self._watch_files[fd]()\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\r\n    event_loop, callback, self.get_available_raw_input())\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input\r\n    callback(processed, processed_codes)\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update\r\n    self.process_input(keys)\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\r\n    k = self._topmost_widget.keypress(self.screen_size, k)\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 305, in keypress\r\n    k = super().keypress(size, k)\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\r\n    return self.body.keypress( (maxcol, remaining), key )\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 47, in keypress\r\n    ret = super().keypress(size, key)\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\r\n    return self.body.keypress( (maxcol, remaining), key )\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 592, in keypress\r\n    *self.calculate_padding_filler(size, True)), key)\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/overlay.py\", line 130, in keypress\r\n    self.master.keymap.handle(\"global\", key)\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/keymap.py\", line 130, in handle\r\n    return self.executor(b.command)\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/commandexecutor.py\", line 17, in __call__\r\n    ret = self.master.commands.call(cmd)\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 221, in call\r\n    return self.call_args(parts[0], parts[1:])\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 212, in call_args\r\n    return self.commands[path].call(args)\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 101, in call\r\n    ret = self.func(*pargs)\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 251, in wrapper\r\n    return function(*args, **kwargs)\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/consoleaddons.py\", line 174, in nav_select\r\n    self.master.inject_key(\"m_select\")\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/master.py\", line 181, in inject_key\r\n    self.loop.process_input([key])\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\r\n    k = self._topmost_widget.keypress(self.screen_size, k)\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 305, in keypress\r\n    k = super().keypress(size, k)\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\r\n    return self.body.keypress( (maxcol, remaining), key )\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 47, in keypress\r\n    ret = super().keypress(size, key)\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\r\n    return self.body.keypress( (maxcol, remaining), key )\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 592, in keypress\r\n    *self.calculate_padding_filler(size, True)), key)\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/overlay.py\", line 120, in keypress\r\n    self.callback(self.choices[self.walker.index])\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/consoleaddons.py\", line 264, in callback\r\n    self.master.commands.call(subcmd + \" \" + repl)\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 221, in call\r\n    return self.call_args(parts[0], parts[1:])\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 212, in call_args\r\n    return self.commands[path].call(args)\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 101, in call\r\n    ret = self.func(*pargs)\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 251, in wrapper\r\n    return function(*args, **kwargs)\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/consoleaddons.py\", line 392, in edit_focus\r\n    self.master.switch_view(\"edit_focus_response_headers\")\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/master.py\", line 236, in switch_view\r\n    self.window.push(name)\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 235, in push\r\n    self.focus_changed()\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 212, in focus_changed\r\n    i.call(\"focus_changed\")\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 121, in call\r\n    getattr(self.top_window(), name)(*args, **kwargs)\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/grideditor/base.py\", line 471, in focus_changed\r\n    self.get_data(self.master.view.focus.flow),\r\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/grideditor/editors.py\", line 48, in get_data\r\n    return flow.response.headers.fields\r\nAttributeError: 'NoneType' object has no attribute 'headers'\r\n```\r\n"
      }
    ]
  },
  {
    "number": 2632,
    "title": "Random Error",
    "created_at": "2017-11-17T16:22:07Z",
    "closed_at": "2018-01-01T15:40:57Z",
    "labels": [
      "kind/bug",
      "help wanted",
      "area/protocols"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/2632",
    "body": "##### Steps to reproduce the problem:\r\n\r\n1. Random Error when working with a Samsung device\r\n\r\n```\r\n Cannot parse Client Hello: TlsProtocolException('Cannot read raw Client Hello: TlsProtocolException(\\'Unexpected EOF in TLS handshake: b\"\\\\\\\\x01\\\\\\\\x00\\\\\\\\x01\\\\\\\\xfc\\\\\\\\x03\\\\\\\\x03\\\\\\\\x16\\\\\\\\xc8\\\\\\\\xca\\\\\\\\x11\\\\\\\\x80\\\\\\\\x8a\\\\\\\\x87\\\\\\\\x80\\\\\\\\x98{S_d)p\\\\\\\\xb4\\\\\\\\x97f\\\\\\\\xaeJ}\\\\\\\\x94\\\\\\\\xcew\\\\\\\\x9b\\\\\\\\\\\\\\\\\\\\\\\\xee\\\\\\\\x8en\\\\\\\\x0e\\\\\\\\x0c\\\\\\\\x1b \\\\\\\\xad\\\\\\\\xc6!l\\\\\\\\xfeD\\\\\\\\x04\\\\\\\\x00\\\\\\\\n\\\\\\\\x8f+_ t\\\\\\\\xf8\\\\\\\\xc2\\\\\\\\xb9\\\\\\\\xab\\\\\\'4\\\\\\\\xf9\\\\\\\\xa1\\\\\\\\xd9\\\\\\\\xea\\\\\\\\xc6\\\\\\\\x16d\\\\\\\\xea\\\\\\\\x1b\\\\\\\\x8a\\\\\\\\x8e\\\\\\\\xdf\\\\\\\\x00(\\\\\\\\xc0+\\\\\\\\xc0,\\\\\\\\xcc\\\\\\\\xa9\\\\\\\\xc0/\\\\\\\\xc00\\\\\\\\xcc\\\\\\\\xa8\\\\\\\\x00\\\\\\\\x9e\\\\\\\\x00\\\\\\\\x9f\\\\\\\\xc0\\\\\\\\t\\\\\\\\xc0\\\\\\\\n\\\\\\\\xc0\\\\\\\\x13\\\\\\\\xc0\\\\\\\\x14\\\\\\\\x003\\\\\\\\x009\\\\\\\\x00\\\\\\\\x9c\\\\\\\\x00\\\\\\\\x9d\\\\\\\\x00/\\\\\\\\x005\\\\\\\\xc0\\\\\\\\x11\\\\\\\\x00\\\\\\\\x05\\\\\\\\x01\\\\\\\\x00\\\\\\\\x01\\\\\\\\x8b\\\\\\\\xff\\\\\\\\x01\\\\\\\\x00\\\\\\\\x01\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x14\\\\\\\\x00\\\\\\\\x12\\\\\\\\x00\\\\\\\\x00\\\\\\\\x0fmail.mail01.org\\\\\\\\x00\\\\\\\\x17\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00#\\\\\\\\x00\\\\\\\\xb0\\\\\\\\xe8B\\\\\\\\xe8\\\\\\\\x03BX\\\\\\\\x8c\\\\\\\\xd1\\\\\\\\x19\\\\\\\\x8f=\\\\\\\\x83\\\\\\\\xadO\\\\\\\\xa0+\\\\\\\\x98J\\\\\\\\xdfR\\\\\\\\xffD\\\\\\\\xc3\\\\\\\\xea/3\\\\\\\\xd4\\\\\\\\xf37e\\\\\\\\xa3\\\\\\\\xde\\\\\\\\x07\\\\\\\\x19\\\\\\\\xd0\\\\\\\\xdf\\\\\\\\xcd|\\\\\\\\xdf$\\\\\\\\xceA\\\\\\\\t.`\\\\\\\\x94\\\\\\\\xf0\\\\\\\\x0c\\\\\\\\xef\\\\\\\\xf8\\\\\\\\x97:\\\\\\\\xadpV\\\\\\\\x8e\\\\\\\\x04\\\\\\\\xb04\\\\\\\\xb9\\\\\\\\xcd\\\\\\\\xafA\\\\\\\\xce\\\\\\\\xf6\\\\\\\\xacbHk\\\\\\\\xb2\\\\\\\\\\\\\\\\\\\\\\\\x9f\\\\\\\\x19\\\\\\\\xac\\\\\\\\xbd\\\\\\\\xf60\\\\\\\\xeb\\\\\\\\xa3\\\\\\\\xd2x\\\\\\\\xf2\\\\\\\\x18\\\\\\\\xed{\\\\\\\\xa2\\\\\\\\x8b\\\\\\\\xec\\\\\\\\x1a\\\\\\\\xfc\\\\\\\\xf1E\\\\\\\\xe5\\\\\\\\x1e\\\\\\\\xc8\\\\\\\\xd7\\\\\\\\xf5]\\\\\\\\xed\\\\\\\\xed\\\\\\\\xb2}\\\\\\\\xa3\\\\\\\\x90h\\\\\\\\xc4\\\\\\\\x1a\\\\\\\\xcc\\\\\\\\xf2%\\\\\\\\xba\\\\\\\\xfa\\\\\\\\x0c\\\\\\\\xd3q\\\\\\\\xe2\\\\\\\\xc2\\\\\\\\xdc\\\\\\'1\\\\\\\\xa4\\\\\\\\x8c\\\\\\\\xdc\\\\\\\\xa1}|Q\\\\\\\\xdf\\\\\\\\x8d\\\\\\\\x1b\\\\\\\\x90\\\\\\\\xd8>\\\\\\\\x032 \\\\\\\\x19\\\\\\\\nl\\\\\\\\xee\\\\\\\\x16\\\\\\\\xccC\\\\\\\\x81\\\\\\\\x96\\\\\\\\x842\\\\\\\\xcf\\\\\\\\xdb\\\\\\\\xe2*B\\\\\\\\xf6dk\\\\\\\\x9f\\\\\\\\x9c\\\\\\\\x9bvp\\\\\\\\x19\\\\\\\\xc67\\\\\\\\xaf\\\\\\\\xec#\\\\\\\\x82)\\\\\\\\xa2\\\\\\\\x183J\\\\\\\\x94\\\\\\\\x15\\\\\\\\x8bb\\\\\\\\x00\\\\\\\\r\\\\\\\\x00\\\\\\\\x16\\\\\\\\x00\\\\\\\\x14\\\\\\\\x06\\\\\\\\x01\\\\\\\\x06\\\\\\\\x03\\\\\\\\x05\\\\\\\\x01\\\\\\\\x05\\\\\\\\x03\\\\\\\\x04\\\\\\\\x01\\\\\\\\x04\\\\\\\\x03\\\\\\\\x03\\\\\\\\x01\\\\\\\\x03\\\\\\\\x03\\\\\\\\x02\\\\\\\\x01\\\\\\\\x02\\\\\\\\x03\\\\\\\\x00\\\\\\\\x10\\\\\\\\x00\\\\\\\\x0b\\\\\\\\x00\\\\\\\\t\\\\\\\\x08http/1.1\\\\\\\\x00\\\\\\\\x0b\\\\\\\\x00\\\\\\\\x02\\\\\\\\x01\\\\\\\\x00\\\\\\\\x00\\\\\\\\n\\\\\\\\x00\\\\\\\\x04\\\\\\\\x00\\\\\\\\x02\\\\\\\\x00\\\\\\\\x17\\\\\\\\x00\\\\\\\\x15\\\\\\\\x00{\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\"\\',)',)\r\n172.56.10.210:48383: Cannot parse Client Hello: TlsProtocolException('Cannot read raw Client Hello: TlsProtocolException(\\'Unexpected EOF in TLS handshake: b\"\\\\\\\\x01\\\\\\\\x00\\\\\\\\x01\\\\\\\\xfc\\\\\\\\x03\\\\\\\\x03\\\\\\\\x16\\\\\\\\xc8\\\\\\\\xca\\\\\\\\x11\\\\\\\\x80\\\\\\\\x8a\\\\\\\\x87\\\\\\\\x80\\\\\\\\x98{S_d)p\\\\\\\\xb4\\\\\\\\x97f\\\\\\\\xaeJ}\\\\\\\\x94\\\\\\\\xcew\\\\\\\\x9b\\\\\\\\\\\\\\\\\\\\\\\\xee\\\\\\\\x8en\\\\\\\\x0e\\\\\\\\x0c\\\\\\\\x1b \\\\\\\\xad\\\\\\\\xc6!l\\\\\\\\xfeD\\\\\\\\x04\\\\\\\\x00\\\\\\\\n\\\\\\\\x8f+_ t\\\\\\\\xf8\\\\\\\\xc2\\\\\\\\xb9\\\\\\\\xab\\\\\\'4\\\\\\\\xf9\\\\\\\\xa1\\\\\\\\xd9\\\\\\\\xea\\\\\\\\xc6\\\\\\\\x16d\\\\\\\\xea\\\\\\\\x1b\\\\\\\\x8a\\\\\\\\x8e\\\\\\\\xdf\\\\\\\\x00(\\\\\\\\xc0+\\\\\\\\xc0,\\\\\\\\xcc\\\\\\\\xa9\\\\\\\\xc0/\\\\\\\\xc00\\\\\\\\xcc\\\\\\\\xa8\\\\\\\\x00\\\\\\\\x9e\\\\\\\\x00\\\\\\\\x9f\\\\\\\\xc0\\\\\\\\t\\\\\\\\xc0\\\\\\\\n\\\\\\\\xc0\\\\\\\\x13\\\\\\\\xc0\\\\\\\\x14\\\\\\\\x003\\\\\\\\x009\\\\\\\\x00\\\\\\\\x9c\\\\\\\\x00\\\\\\\\x9d\\\\\\\\x00/\\\\\\\\x005\\\\\\\\xc0\\\\\\\\x11\\\\\\\\x00\\\\\\\\x05\\\\\\\\x01\\\\\\\\x00\\\\\\\\x01\\\\\\\\x8b\\\\\\\\xff\\\\\\\\x01\\\\\\\\x00\\\\\\\\x01\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x14\\\\\\\\x00\\\\\\\\x12\\\\\\\\x00\\\\\\\\x00\\\\\\\\x0fmail.mail01.org\\\\\\\\x00\\\\\\\\x17\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00#\\\\\\\\x00\\\\\\\\xb0\\\\\\\\xe8B\\\\\\\\xe8\\\\\\\\x03BX\\\\\\\\x8c\\\\\\\\xd1\\\\\\\\x19\\\\\\\\x8f=\\\\\\\\x83\\\\\\\\xadO\\\\\\\\xa0+\\\\\\\\x98J\\\\\\\\xdfR\\\\\\\\xffD\\\\\\\\xc3\\\\\\\\xea/3\\\\\\\\xd4\\\\\\\\xf37e\\\\\\\\xa3\\\\\\\\xde\\\\\\\\x07\\\\\\\\x19\\\\\\\\xd0\\\\\\\\xdf\\\\\\\\xcd|\\\\\\\\xdf$\\\\\\\\xceA\\\\\\\\t.`\\\\\\\\x94\\\\\\\\xf0\\\\\\\\x0c\\\\\\\\xef\\\\\\\\xf8\\\\\\\\x97:\\\\\\\\xadpV\\\\\\\\x8e\\\\\\\\x04\\\\\\\\xb04\\\\\\\\xb9\\\\\\\\xcd\\\\\\\\xafA\\\\\\\\xce\\\\\\\\xf6\\\\\\\\xacbHk\\\\\\\\xb2\\\\\\\\\\\\\\\\\\\\\\\\x9f\\\\\\\\x19\\\\\\\\xac\\\\\\\\xbd\\\\\\\\xf60\\\\\\\\xeb\\\\\\\\xa3\\\\\\\\xd2x\\\\\\\\xf2\\\\\\\\x18\\\\\\\\xed{\\\\\\\\xa2\\\\\\\\x8b\\\\\\\\xec\\\\\\\\x1a\\\\\\\\xfc\\\\\\\\xf1E\\\\\\\\xe5\\\\\\\\x1e\\\\\\\\xc8\\\\\\\\xd7\\\\\\\\xf5]\\\\\\\\xed\\\\\\\\xed\\\\\\\\xb2}\\\\\\\\xa3\\\\\\\\x90h\\\\\\\\xc4\\\\\\\\x1a\\\\\\\\xcc\\\\\\\\xf2%\\\\\\\\xba\\\\\\\\xfa\\\\\\\\x0c\\\\\\\\xd3q\\\\\\\\xe2\\\\\\\\xc2\\\\\\\\xdc\\\\\\'1\\\\\\\\xa4\\\\\\\\x8c\\\\\\\\xdc\\\\\\\\xa1}|Q\\\\\\\\xdf\\\\\\\\x8d\\\\\\\\x1b\\\\\\\\x90\\\\\\\\xd8>\\\\\\\\x032 \\\\\\\\x19\\\\\\\\nl\\\\\\\\xee\\\\\\\\x16\\\\\\\\xccC\\\\\\\\x81\\\\\\\\x96\\\\\\\\x842\\\\\\\\xcf\\\\\\\\xdb\\\\\\\\xe2*B\\\\\\\\xf6dk\\\\\\\\x9f\\\\\\\\x9c\\\\\\\\x9bvp\\\\\\\\x19\\\\\\\\xc67\\\\\\\\xaf\\\\\\\\xec#\\\\\\\\x82)\\\\\\\\xa2\\\\\\\\x183J\\\\\\\\x94\\\\\\\\x15\\\\\\\\x8bb\\\\\\\\x00\\\\\\\\r\\\\\\\\x00\\\\\\\\x16\\\\\\\\x00\\\\\\\\x14\\\\\\\\x06\\\\\\\\x01\\\\\\\\x06\\\\\\\\x03\\\\\\\\x05\\\\\\\\x01\\\\\\\\x05\\\\\\\\x03\\\\\\\\x04\\\\\\\\x01\\\\\\\\x04\\\\\\\\x03\\\\\\\\x03\\\\\\\\x01\\\\\\\\x03\\\\\\\\x03\\\\\\\\x02\\\\\\\\x01\\\\\\\\x02\\\\\\\\x03\\\\\\\\x00\\\\\\\\x10\\\\\\\\x00\\\\\\\\x0b\\\\\\\\x00\\\\\\\\t\\\\\\\\x08http/1.1\\\\\\\\x00\\\\\\\\x0b\\\\\\\\x00\\\\\\\\x02\\\\\\\\x01\\\\\\\\x00\\\\\\\\x00\\\\\\\\n\\\\\\\\x00\\\\\\\\x04\\\\\\\\x00\\\\\\\\x02\\\\\\\\x00\\\\\\\\x17\\\\\\\\x00\\\\\\\\x15\\\\\\\\x00{\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\"\\',)',)\r\n Traceback (most recent call last):\r\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/server.py\", line 119, in handle\r\n    root_layer()\r\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\r\n    layer()\r\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/tls.py\", line 383, in __call__\r\n    layer()\r\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http1.py\", line 72, in __call__\r\n    layer()\r\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http.py\", line 188, in __call__\r\n    if not self._process_flow(flow):\r\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http.py\", line 257, in _process_flow\r\n    return self.handle_regular_connect(f)\r\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http.py\", line 206, in handle_regular_connect\r\n    layer()\r\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/tls.py\", line 365, in __call__\r\n    self._client_hello.alpn_protocols or\r\nAttributeError: 'NoneType' object has no attribute 'alpn_protocols'\r\n```\r\n\r\n##### Any other comments? What have you tried so far?\r\nNothing yet, but looking into the problem. Figure I send in the log\r\n\r\n\r\n##### System information\r\nMitmproxy version: 2.0.2 (release version)\r\nPython version: 3.5.3\r\nPlatform: Linux-4.10.0-38-generic-x86_64-with-Ubuntu-17.04-zesty\r\nSSL version: OpenSSL 1.0.2g  1 Mar 2016\r\nLinux distro: Ubuntu 17.04 zesty",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/2632/comments",
    "author": "Mradr",
    "comments": [
      {
        "user": "Kriechi",
        "created_at": "2018-01-01T15:40:57Z",
        "body": "This should be fixed in git-master and v3.0.0rc1. "
      }
    ]
  },
  {
    "number": 2477,
    "title": "xss_scanner.py issue",
    "created_at": "2017-07-27T16:46:33Z",
    "closed_at": "2017-09-01T21:08:38Z",
    "labels": [
      "kind/bug",
      "help wanted",
      "area/examples"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/2477",
    "body": "hi\r\nin the function test_query_injection the body is converted to lower case (line 153) but in the get_SQLi_data function it is compared with upper case words (line 187) that results in no match\r\n\r\n\r\n\r\n\r\n##### System information\r\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/2477/comments",
    "author": "mojtabamarashee",
    "comments": [
      {
        "user": "mhils",
        "created_at": "2017-07-27T17:49:13Z",
        "body": "Thanks for the report! Would you mind sending a pull request that fixes this? 😃 "
      },
      {
        "user": "mojtabamarashee",
        "created_at": "2017-07-27T19:07:07Z",
        "body": "sure, also there are issuse with \"decode\" in log_SQLi_data function(line 176-179) that causes to error.\r\nIm working on a new sqli example that also test post data for sqli and save vulnerable hosts to file."
      },
      {
        "user": "surajt97",
        "created_at": "2017-08-31T14:49:33Z",
        "body": "@mhils can I submit a PR to fix this issue?"
      },
      {
        "user": "mhils",
        "created_at": "2017-08-31T19:51:04Z",
        "body": "@surajt97: yes, please!"
      }
    ]
  },
  {
    "number": 2435,
    "title": "[requires.io] dependency update on master branch",
    "created_at": "2017-07-10T21:49:03Z",
    "closed_at": "2017-07-24T19:03:15Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/pull/2435",
    "body": null,
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/2435/comments",
    "author": "Kriechi",
    "comments": [
      {
        "user": "mhils",
        "created_at": "2017-07-20T15:47:22Z",
        "body": "mypy is handled in 7b0485d6d6d1f3cc5d6704db39971b69dc030b80, leaving cryptography/pyOpenSSL, which is #2456."
      }
    ]
  },
  {
    "number": 2198,
    "title": "Teach options to know about a Path type",
    "created_at": "2017-03-21T23:48:19Z",
    "closed_at": "2017-12-13T18:42:13Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/2198",
    "body": "At the moment, the type we use for Path values is str. We use paths in many options, and we'd like to handle them specially in user interfaces (so we can, for instance, do path completion on tab). \r\n\r\nWe should teach optmanager to know about a Path type, which is treated just like a string. Ergonomically, I'd like user to still be able to say ```options.path = \"value\"``` rather than have to say ```options.path = types.Path(\"value\")```, so it would be good to automatically handle type promotion. ",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/2198/comments",
    "author": "cortesi",
    "comments": [
      {
        "user": "vmnguyen",
        "created_at": "2017-03-22T07:53:41Z",
        "body": "I'm working on it"
      },
      {
        "user": "nikofil",
        "created_at": "2017-03-24T20:31:55Z",
        "body": "I am also working on this. Could a maintainer tell me if #2209 is a step in the right direction? (I am also thinking of integrating some common `os.path` functions in Path)"
      }
    ]
  },
  {
    "number": 2083,
    "title": "Unable to scroll mitmweb details in Firefox",
    "created_at": "2017-03-01T17:16:57Z",
    "closed_at": "2017-03-04T16:26:37Z",
    "labels": [
      "kind/bug",
      "help wanted",
      "area/web"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/2083",
    "body": "##### Steps to reproduce the problem:\r\n\r\n1. Install Firefox ESR 45.7.0 on Linux\r\n2. Capture with mitmweb\r\n3. Find a message that requires scrolling on the right pane, and attempt to view all content. \r\n\r\n\r\n##### Any other comments? What have you tried so far?\r\n\r\nThis seems very similar to issue #615\r\nChromium scrolls fine.\r\n\r\n##### System information\r\n\r\n\r\n\r\n\r\nMitmproxy version: 2.0.0 (release version) \r\nPython version: 3.5.2\r\nPlatform: Linux-3.10.0-514.6.1.el7.x86_64-x86_64-with-centos-7.3.1611-Core\r\nSSL version: OpenSSL 1.0.1e-fips 11 Feb 2013\r\nLinux distro: CentOS Linux 7.3.1611 Core\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/2083/comments",
    "author": "wdormann",
    "comments": [
      {
        "user": "MatthewShao",
        "created_at": "2017-03-04T03:22:30Z",
        "body": "I tried this out and found that in `.flow-detail section`, if we change the css code like this:\r\n```css\r\nsection {\r\n    /* display: flex;\r\n     flex-direction: column;*/\r\n    overflow-y: scroll;\r\n}\r\n```\r\nThat works for me on Ubuntu with Firefox 51.0.1 and Chrome 52.0.2743.116, don't know if this works on other browsers."
      },
      {
        "user": "mhils",
        "created_at": "2017-03-04T10:40:17Z",
        "body": "@MatthewShao: We only care about Chrome/Firefox for now, so if that fixes things, please submit a PR! 😃 "
      },
      {
        "user": "pihug12",
        "created_at": "2017-08-12T06:39:13Z",
        "body": "It seems like this fix wasn't commit in the 2.0.x branch as well.\r\n\r\n* commit e064439 : 2017-03-04\r\n* release v2.0.1 : 2017-03-14\r\n* release v2.0.2 : 2017-04-28\r\n\r\nThe bug is still present in this last release."
      },
      {
        "user": "ptrcnull",
        "created_at": "2018-02-04T14:18:45Z",
        "body": "Still present..."
      },
      {
        "user": "armudgal",
        "created_at": "2018-02-04T19:15:38Z",
        "body": "I will take a look at it @mhils tomorrow? "
      }
    ]
  },
  {
    "number": 1960,
    "title": "Feature request: Preserve marked flows when clearing flow list",
    "created_at": "2017-01-27T14:36:10Z",
    "closed_at": "2017-02-03T10:44:00Z",
    "labels": [
      "kind/feature",
      "help wanted",
      "area/console"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/1960",
    "body": "When I'm busy in mitmproxy, I often mark an important flow using `m` to preserve it for easy access; my flow list grows pretty quickly even when I'm using a filter, so I often clear the list using `z` to tidy up.\r\n\r\nUp until very recently clearing the list preserved my marked flows, this was very convenient because I could \"clean up\" my window and keep what's important (my marked flows) around and continue working.\r\n\r\nI've installed the latest version (mitmproxy 1.0.2) and I've just noticed that clearing the flow list also removes the marked flows. \r\n\r\nCould I request this be added as a feature if what I've described was occurring by coincidence, or to be fixed if this is a regression. It is a super handy feature for myself, and hopefully others too. \r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/1960/comments",
    "author": "danielphillips",
    "comments": [
      {
        "user": "mhils",
        "created_at": "2017-01-29T01:21:01Z",
        "body": "This sounds like a reasonable request to me. Maybe we can add this under `Z`?"
      },
      {
        "user": "lymanZerga11",
        "created_at": "2017-02-01T14:16:46Z",
        "body": "There is also another issue with the flow list. The marked flows can get randomly rearranged whenever `M` or `Z` is pressed, as it iterates through `view._store` which is a dictionary, to refresh the view. "
      },
      {
        "user": "mhils",
        "created_at": "2017-02-01T14:49:48Z",
        "body": "@lymanZerga11: Yes, good catch - needs to be replaced with OrderedDict I believe. Can you open a separate issue (or PR 😛) for this please?"
      },
      {
        "user": "lymanZerga11",
        "created_at": "2017-02-01T15:33:34Z",
        "body": "Yeah okay!"
      }
    ]
  },
  {
    "number": 1928,
    "title": "@concurrent annotation doesn't work in the OOP script method",
    "created_at": "2017-01-13T17:01:47Z",
    "closed_at": "2017-02-21T14:38:35Z",
    "labels": [
      "help wanted",
      "area/addons"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/1928",
    "body": "I.E:\r\n\r\n```\r\nclass SomeClass:\r\n    @concurrent [doesn't work, 2 args]\r\n    def request(self, flow):\r\n        pass\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/1928/comments",
    "author": "ColinChartier",
    "comments": [
      {
        "user": "mhils",
        "created_at": "2017-01-17T21:47:09Z",
        "body": "Good catch - thanks!"
      }
    ]
  },
  {
    "number": 1893,
    "title": "Display Version in the Web UI",
    "created_at": "2016-12-27T18:40:11Z",
    "closed_at": "2017-02-12T09:06:47Z",
    "labels": [
      "help wanted",
      "area/web"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/1893",
    "body": "There's currently no version indication in mitmweb.",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/1893/comments",
    "author": "mhils",
    "comments": [
      {
        "user": "mosajjal",
        "created_at": "2017-02-04T15:04:05Z",
        "body": "I will work on it and will send my PR soon"
      }
    ]
  },
  {
    "number": 1682,
    "title": "Run 'basicflow' from 'examples/' fails at importing 'logging'",
    "created_at": "2016-10-27T21:53:13Z",
    "closed_at": "2016-10-29T18:32:13Z",
    "labels": [
      "kind/bug",
      "help wanted",
      "area/examples"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/1682",
    "body": "##### Steps to reproduce the problem:\n1. go to `examples/`\n   2.run `python basicflow`\n\nyou'll get an error that says cannot import Handlers from logging.\n##### Any other comments? What have you tried so far?\n\nThis is because there's also another file called 'logging.py' in 'examples/'\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/1682/comments",
    "author": "strin",
    "comments": [
      {
        "user": "mhils",
        "created_at": "2016-10-27T22:50:10Z",
        "body": "Thanks! Would you like to send a PR that renames logging.py to log.py or so? 😃 \n"
      },
      {
        "user": "Kriechi",
        "created_at": "2016-10-29T18:32:13Z",
        "body": "fixed by d56bbb9\n"
      }
    ]
  },
  {
    "number": 1652,
    "title": "Replace mitmproxy.utils.lrucache with functools.lru_cache",
    "created_at": "2016-10-23T00:05:24Z",
    "closed_at": "2016-10-28T03:52:55Z",
    "labels": [
      "help wanted",
      "area/core"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/1652",
    "body": "We have a custom Least Recently Used Cache implementation in mitmproxy, because `functools.lru_cache` did not exist before Python 3.2. It's time to just take that out and replace it with `functools.lru_cache`. The API is quite similar, so that should not be too hard to do and a good beginner task! :smiley:\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/1652/comments",
    "author": "mhils",
    "comments": [
      {
        "user": "SahilC",
        "created_at": "2016-10-23T15:48:21Z",
        "body": "Hey, I'm working on a PR for this. I had a small doubt. Do you know whom I can talk to? \n"
      },
      {
        "user": "mhils",
        "created_at": "2016-10-23T18:38:19Z",
        "body": "Feel free to just ask here or ping any of us on Slack! :)\n"
      },
      {
        "user": "Kriechi",
        "created_at": "2016-10-28T03:52:55Z",
        "body": "fixed by #1663\n"
      }
    ]
  },
  {
    "number": 1623,
    "title": "Better control of long output in mitmdump",
    "created_at": "2016-10-17T19:04:16Z",
    "closed_at": "2017-02-10T14:42:00Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/1623",
    "body": "Comments re #1621. Being able to see the full URL in the terminal is too valuable to lose entirely. A better version of this would:\n\n• Add a command-line flag to turn on full-width output (a la ``ps --ww`).\n• Use the terminal width to determine the cutoff. See `click.get_terminal_size()`. \n• Maybe make the cutoff marker clearer by making it a different colour. \n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/1623/comments",
    "author": "cortesi",
    "comments": [
      {
        "user": "mhils",
        "created_at": "2016-10-18T01:49:33Z",
        "body": "> Add a command-line flag to turn on full-width output\n\nWould you like to have a separate switch for that or shall we just make `-d` do that as well? I'm not sure if a dedicated switch would be relevant to a large enough share of users to justify it. I'm not particularly strong on this though.\n"
      },
      {
        "user": "cortesi",
        "created_at": "2016-10-18T03:07:24Z",
        "body": "I don't mind, as long as there's a knob for this.  We already have a bit of a case of flag-itis, so just using -d might be the way to go.  Showing full URLs could be detail level #1. \n"
      },
      {
        "user": "kalyan-kumar",
        "created_at": "2017-01-27T17:54:30Z",
        "body": "Shouldn't this issue be closed now?"
      },
      {
        "user": "mhils",
        "created_at": "2017-02-10T14:42:00Z",
        "body": "yes, thanks!"
      }
    ]
  },
  {
    "number": 1580,
    "title": "Provide a better error message for proxy mode misconfigurations",
    "created_at": "2016-09-26T02:15:37Z",
    "closed_at": "2017-02-09T19:56:10Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/1580",
    "body": "##### Steps to reproduce the problem:\n1. `mitmproxy -T`\n2. `curl -x localhost:8080 example.com`\n##### What is the expected behavior?\n\nmitmproxy should provide a warning that you want to run either transparent mode or configure an explicit proxy.\n##### What went wrong?\n\nmitmproxy complains about \"Invalid HTTP request form (expected: relative, got: authority)\"\n##### Any other comments? What have you tried so far?\n\nWe should just detect this very specific case (expected: relative, got: authority) and provide a better error message for it.\n\nSee #1579 for a confused user. :stuck_out_tongue:\n\n---\n\nMitmproxy Version: master\nOperating System: Ubuntu 16.04\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/1580/comments",
    "author": "mhils",
    "comments": [
      {
        "user": "wchill",
        "created_at": "2016-10-28T14:28:38Z",
        "body": "Seems like one just needs to throw in another \"if\" check and raise with a more appropriate exception? If so, I can take care of this.\n"
      },
      {
        "user": "kalyan-kumar",
        "created_at": "2017-02-01T17:23:32Z",
        "body": "I would like to work on this issue."
      }
    ]
  },
  {
    "number": 1505,
    "title": "mitmdump should display \"ready\" message after start.",
    "created_at": "2016-08-24T06:46:15Z",
    "closed_at": "2016-09-22T05:26:59Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/1505",
    "body": "##### Steps to reproduce the problem:\n1. `mitmdump`\n##### What is the expected behavior?\n\nmitmdump should print some notification that it is running and ready to receive traffic.\n##### What went wrong?\n\nmitmdump just displays nothing, it looks like it hangs.\n##### Any other comments? What have you tried so far?\n\nIdeally we'd only show that if mitmdump is invoked in a tty?\n\n---\n\nMitmproxy Version: 0.18\nOperating System: Win10 x64\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/1505/comments",
    "author": "mhils",
    "comments": [
      {
        "user": "Kriechi",
        "created_at": "2016-08-24T07:10:38Z",
        "body": "ref: #302\n"
      }
    ]
  },
  {
    "number": 1501,
    "title": "Divide by Zero error",
    "created_at": "2016-08-23T14:37:10Z",
    "closed_at": "2016-08-26T08:54:08Z",
    "labels": [
      "kind/bug",
      "help wanted",
      "area/console"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/1501",
    "body": "Its in `netlib/strutils.py`\n\nThis line # around 126 :\n\n``` python\n    for i in six.iterbytes(s[:100])\n) / len(s[:100]) > 0.3\n```\n\nif s is empty, it gives this error in the mitmproxy, (doesn't crash though due to recent improvements in mitmproxy i guess..)\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/1501/comments",
    "author": "mkagenius",
    "comments": [
      {
        "user": "mhils",
        "created_at": "2016-08-24T01:27:30Z",
        "body": "Thanks. This looks easy to fix, so if anyone wants to get started on mitmproxy development, I'd be happy to see a PR with fix + added test in test/netlib/test_strutils.py! :smiley: \n"
      }
    ]
  },
  {
    "number": 1188,
    "title": "mitmdump crashes when serving mitm.it",
    "created_at": "2016-06-01T14:50:05Z",
    "closed_at": "2016-06-03T02:55:43Z",
    "labels": [
      "kind/bug",
      "help wanted"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/1188",
    "body": "```\nTraceback (most recent call last):\n  File \"/mnt/storage/mitm/mitmproxy/venv/bin/mitmdump\", line 9, in <module>\n    load_entry_point('mitmproxy', 'console_scripts', 'mitmdump')()\n  File \"/mnt/storage/mitm/mitmproxy/mitmproxy/main.py\", line 100, in mitmdump\n    master.run()\n  File \"/mnt/storage/mitm/mitmproxy/mitmproxy/dump.py\", line 355, in run\n    super(DumpMaster, self).run()\n  File \"/mnt/storage/mitm/mitmproxy/mitmproxy/controller.py\", line 61, in run\n    self.tick(0.1)\n  File \"/mnt/storage/mitm/mitmproxy/mitmproxy/flow/master.py\", line 228, in tick\n    return super(FlowMaster, self).tick(timeout)\n  File \"/mnt/storage/mitm/mitmproxy/mitmproxy/controller.py\", line 83, in tick\n    handle_func(obj)\n  File \"/mnt/storage/mitm/mitmproxy/mitmproxy/controller.py\", line 190, in wrapper\n    ret = f(*args, **kwargs)\n  File \"/mnt/storage/mitm/mitmproxy/mitmproxy/dump.py\", line 331, in request\n    self.state.delete_flow(f)\n  File \"/mnt/storage/mitm/mitmproxy/mitmproxy/flow/state.py\", line 220, in delete_flow\n    self.flows._remove(f)\n  File \"/mnt/storage/mitm/mitmproxy/mitmproxy/flow/state.py\", line 132, in _remove\n    self._list.remove(f)\nException ValueError: list.remove(x): x not in list\nmitmproxy.exceptions.ControlException: ControlException('Un-acked message',) in <bound method Reply.__del__ of <mitmproxy.controller.Reply object at 0x957c4f30>> ignored\n```\n##### Steps to reproduce the problem:\n1. Launch `mitmdump`, commit 92cdca50c7a43a5ab59b435e73e3b17dbe01cd3b\n2. Go to mitm.it with the stock browser of Android 6.\n\nNote: `mitmproxy` does not crash.\n\n---\n\nMitmproxy Version: 92cdca50c7a43a5ab59b435e73e3b17dbe01cd3b\nOperating System: Debian Jessie ARM\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/1188/comments",
    "author": "dniku",
    "comments": [
      {
        "user": "cortesi",
        "created_at": "2016-06-03T02:56:30Z",
        "body": "I believe I just fixed this, but I don't have easy access to the Android browser you report in your bug. Please do re-open if you still see the problem. Thanks for reporting this!\n"
      },
      {
        "user": "dniku",
        "created_at": "2016-06-03T09:41:42Z",
        "body": "Works for me. Thanks for fixing this!\n"
      }
    ]
  },
  {
    "number": 1157,
    "title": "docker run with mitmproxy is finicky",
    "created_at": "2016-05-20T03:38:50Z",
    "closed_at": "2017-06-04T12:27:44Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/1157",
    "body": "##### Steps to reproduce the problem:\n1. docker run mitmproxy/mitmproxy:dev\n2. docker run -i mitmproy/mitmproxy:dev\n##### What is the expected behavior?\n\nThe user should see some reasonable error output in both cases - when we attempt to run in a non-terminal, and when we're running in both a non-termina and non-interactively. \n##### What went wrong?\n\nWe see a crash in case 1) and an unresponsive screen in case 2. \n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/1157/comments",
    "author": "cortesi",
    "comments": [
      {
        "user": "cortesi",
        "created_at": "2016-05-20T03:39:41Z",
        "body": "The correct usage here is of course:\n\n```\ndocker run -ti \n```\n\nBut we can expect users to make this error and they shouldn't be baffled when they do.\n"
      },
      {
        "user": "javabrett",
        "created_at": "2016-05-21T10:41:26Z",
        "body": "Cases 1 & 2 should be do-able, but Case 3:\n1. `docker run -t mitmproxy/mitmproxy:dev`\n\n... looks to be harder.  Result is perhaps the worst of the three - mitmproxy UI displays but is non-responsive to keystrokes.  For 1 & 2 you can use `isatty()`, but I looked and am yet to find a way to detect that the host `stdin` is not connected to container mitmproxy process - which is presumably then connected to a tty which will never produce any input.  I looked at the fd link, its target - the `-i` case was indistinguishable.  Answers on SO etc. seem to only deal properly with detecting the tty.\n\nFor that case it might be necessary to 1) pass a running-in-docker arg and use it to 2) display an initial message in the UI to warn users if they have not `docker run` with `-it` then mitmproxy will appear unresponsive.\n"
      },
      {
        "user": "Kriechi",
        "created_at": "2017-06-04T12:27:44Z",
        "body": "Fixed by fd633865937e596a647c1ad39a30d88b10a766c3\r\nUnfortunately there is no way to detect a missing `-i` option, but I would argue that 99% of the search results always mention **just add -it and it will work**.\r\n\r\nNow it behaves like this, including a new error message:\r\n```\r\n$ docker run mitmproxy/mitmproxy:dev\r\nUnable to find image 'mitmproxy/mitmproxy:dev' locally\r\ndev: Pulling from mitmproxy/mitmproxy\r\n6f821164d5b7: Pull complete\r\n771446665261: Pull complete\r\nf5dc80f69993: Pull complete\r\nea98edb07673: Pull complete\r\nDigest: sha256:23df9012c64a8c48f686c97ddc844016fb8a9c6c81395853e533deb2eeb3bcdd\r\nStatus: Downloaded newer image for mitmproxy/mitmproxy:dev\r\nError: mitmproxy's console interface requires a tty. Please run mitmproxy in an interactive shell environment.\r\n\r\n$ docker run -i mitmproxy/mitmproxy:dev\r\nError: mitmproxy's console interface requires a tty. Please run mitmproxy in an interactive shell environment.\r\n\r\n$ docker run -t mitmproxy/mitmproxy:dev\r\n<now mitmproxy console is displayed but no input is working>\r\n\r\n$ docker run -it mitmproxy/mitmproxy:dev\r\n<now mitmproxy console is displayed and working properly>\r\n```"
      }
    ]
  },
  {
    "number": 1111,
    "title": "Verify upstream certificates by default.",
    "created_at": "2016-05-03T18:23:53Z",
    "closed_at": "2016-08-01T02:44:16Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/1111",
    "body": "Per discussion in #1108 and some other places, I would like to turn on `--verify-upstream-cert` by default, with an easy option to disable it.\n\nBasic Features:\n- [ ] Add setting to the mitmproxy options menu.\n- [ ] Add `--insecure` command line switch to disable certificate verification. Do we also want to have `-k` for this, to mirror curl's API?\n\nBonus features:\n- [ ] `~/.mitmproxy/trusted.pem` should contain additional certs that are trusted by default.\n- [ ] When sending an error to the client, send a detailed error page giving the client the option to add the cert to `~/.mitmproxy/trusted.pem`.\n- [ ] Display rejects connections as flows in the UI with an easy option to add certs to `~/.mitmproxy/trusted.pem`. (this requires substantial work at other places)\n\nCaveats:\n- In a [user] -- TLS -- [mitmproxy] -- TCP -- [server] configuration, we cannot signal to the client that there's essentially no security. As I see it, this should only affect reverse proxy mode, manually changed requests and mitm.it. As such a configuration is a deliberate choice, we should be good.\n\nIf anyone wants to work on this, the first task would be to add this setting to mitmproxy's Options screen and send a separate PR for this! :smiley:\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/1111/comments",
    "author": "mhils",
    "comments": [
      {
        "user": "s4chin",
        "created_at": "2016-06-01T18:46:09Z",
        "body": "I would like to take this. For the basic features, I think it would go like this:\nRemove the `--verify-upstream-cert` and add the `--insecure` option. In the `config.py`, remove the `ssl_verify_upstream_cert` variable and add an `ssl_insecure` variable instead and make changes accordingly.\nThat way the `ssl_insecure` default value is `False` and we set an `--insecure` option to set it to `True`. Is this the correct approach or you prefer I keep the `ssl_verify_upstream_cert` variable and make changes accordingly?\n"
      },
      {
        "user": "mhils",
        "created_at": "2016-06-02T00:44:22Z",
        "body": "@s4chin: This sounds like an excellent first step (you also need to adjust the tests to reflect this change). Please go ahead! :smiley:\n"
      }
    ]
  },
  {
    "number": 817,
    "title": "HTTPS whitelist based on SNI",
    "created_at": "2015-11-04T23:26:09Z",
    "closed_at": "2016-02-08T23:00:52Z",
    "labels": [
      "kind/feature",
      "help wanted"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/817",
    "body": "I have a transparent proxy interposed between an android device and the internet, such that all traffic runs through the proxy.  I want to sort the traffic such that connections to our servers (i.e. from our app) go through the proxy (i.e., display), while other traffic (from the device) goes through a RawTCPLayer so that they are not presented with the mitmproxy cert which they will reject.\n\nI am currently using examples/tls_passthrough.py from (the unreleased) 0.13.1, and it makes a good stopgap, but it is not sufficient, as it may reject our flows due to errors (of exactly the kind I'd be looking for) and/or accept flows from other (insecure or broken) apps, whose problems do not concern me.\n\nI would like an -H flag (name not important), similar to -I, but inverse, that accepts a list of hostnames to accept for TLS proxying.  In order for this to work, the compare must be done against the SNI field.  The reason for relying on the client request to identify the server is that our servers are cloud based, such that our IP addresses cannot be guaranteed, and the DNS lookup will return CNAMEs, which may change during the course of a session, thus tracking the server side becomes nontrivial.\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/817/comments",
    "author": "chumaitoe",
    "comments": [
      {
        "user": "mhils",
        "created_at": "2016-02-08T23:00:52Z",
        "body": "I believe this is fixed by #893 - thanks again, @dweinstein! :smiley:\n"
      }
    ]
  },
  {
    "number": 807,
    "title": "Export/copy request as raw text",
    "created_at": "2015-10-27T22:05:08Z",
    "closed_at": "2016-02-04T02:21:17Z",
    "labels": [
      "kind/feature",
      "help wanted"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/807",
    "body": "A feature I've been using in Fiddler is the ability to export the request as raw text. Once saved, the raw request easily replayed (with or without manual or programmatic modification) with netcat with a command like this:\n\n```\nnc api.host.com 80 < raw-request.txt > response.txt\n```\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/807/comments",
    "author": "areichow",
    "comments": [
      {
        "user": "mhils",
        "created_at": "2015-10-27T22:07:13Z",
        "body": "refs #799 \n"
      },
      {
        "user": "gato",
        "created_at": "2015-10-28T02:11:29Z",
        "body": "Will add this to #799 in the next couple of days\n"
      },
      {
        "user": "mhils",
        "created_at": "2015-10-28T12:11:14Z",
        "body": ":+1: \n"
      },
      {
        "user": "dufferzafar",
        "created_at": "2016-02-04T02:11:07Z",
        "body": "@mhils I think this can be closed, since #884 was merged!\n"
      }
    ]
  },
  {
    "number": 713,
    "title": "Hotkey to reload all inline scripts",
    "created_at": "2015-08-06T09:04:26Z",
    "closed_at": "2016-01-31T09:20:54Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/713",
    "body": "When writing/testing inline scripts there is AFAIU two options to load fresh script version from filesystem:\n1. Restart mitmproxy.\n2. Remove and add again script via \"Editing scripts menu\".\n\nIt will be handy to have scripts reloaded with just one keystroke.\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/713/comments",
    "author": "ojab",
    "comments": [
      {
        "user": "mhils",
        "created_at": "2015-08-06T15:42:43Z",
        "body": "Good suggestions. We'd be happy to accept a PR for this! :smiley:\n"
      }
    ]
  },
  {
    "number": 685,
    "title": "Clicks on empty space can unintentionally open a new view",
    "created_at": "2015-07-16T21:57:15Z",
    "closed_at": "2015-08-26T23:25:42Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/685",
    "body": "I often click on the terminal window to activate keyboard focus.\n\nThe new click feature in mitmproxy often causes my click to open an unwanted view.\n\nThis issue is especially problematic on the flow list screen where a click almost anywhere on the screen takes you to a flow view. Even clicks on empty space surrounding the flow causes navigation.\n\nIs there a way to ignore clicks on empty spaces? Alternatively, can the mouse events be turned off?\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/685/comments",
    "author": "ender672",
    "comments": [
      {
        "user": "cortesi",
        "created_at": "2015-08-16T23:32:01Z",
        "body": "The click zone is the entirety of the flow widget, which can extend beyond the visible text. I would merge a patch to add a command-line switch to turn off mouse support. It would be a very simple patch, and a great first contribution to the project.\n"
      }
    ]
  },
  {
    "number": 652,
    "title": "mitmdump --no-pop results in redirect loop",
    "created_at": "2015-06-25T20:20:39Z",
    "closed_at": "2021-01-03T14:13:32Z",
    "labels": [
      "kind/feature",
      "help wanted"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/652",
    "body": "**What's the problem?**\nRunning mitmdump with the --no-pop results in an error like \"This webpage has a redirect loop\" for some pages.\n\n**Which versions are affected?**\nI am not sure when I first encounter this problem. I think it should go back to a version of 0.9 or 0.10. But I can confirm that this is still an issue in version 0.12.1.\n\n**How to reproduce the problem?**\nSetup mitmdump as a transparent proxy and let is save the content with option `-w`. \nOpen a browser capable of following redirects like `HTTP/1.1 301 Moved Permanently` and it should be configured to open with an empty start page like `about:blank`. Firefox, Internet Explorer, Chrome and more should work.\nGo to URL `bing.com`. After the website is loaded the URL should be `www.bing.com`.\nNow clear the cache of the browser and close the browser.\nStop mitmdump and start it as a transparent proxy with the captured content and the `--no-pop` option.\nOpen the same browser and go to URL `bing.com`. Now the browser should complain about an redirect loop instead of presenting the website.\n\n**Why does this happen?**\nmitmdump use the IP but ignores the host-field and thus the domain to find the correct response. With the `--no-pop` option mitmdump search for the first appearance of [IP]/ for both domains; with and without www. Thus the redirection is presented in both cases and the loop is born.\n\n**Are there other related problems?**\nYes. The problem is not limited for redirection to the url with www but for all virtual host related calls for the same URI on the same IP. For example it once happened that to bigger sites, both using akamai, get temporarily the same IP on recording. Thus on rewind the wrong site was presented when the second one was requested. Now they get different IPs thus it does not happen at the moment.\n\n**Are there more information?**\nI am aware of the `--replay-ignore-host` option but it is not set and thus it should be false and I could validate that it is. I also know the lines\n\n```\n         if not self.ignore_host:\n             key.append(r.host)\n```\n\nin the _hash function of flow.py. But r.host is the IP of the host and not the host field of the HTTP headers.\n\n**How could the problem be solved?**\nObviously the host field needs to be considered. As a workaround I added `r.headers.get(\"host\")` to the hash function, if present.\nI am not sure what the correct solution is. For example I do not know if r.host should be the IP and not the host-field. Additionally I do not know if the intention of `--replay-ignore-host` is to cover the request host IP and not the request host field. Thus it is not clear if these two lines are totally correct and the problem is somewhere else or not.\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/652/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "mhils",
        "created_at": "2015-07-04T16:19:47Z",
        "body": "Thanks for the excellent bug report (and sorry for getting back at it so late). The intended solution to this issue is passing `--rheader Host` to mitmdump. \nNonetheless, I think we should probably use <s>`r.pretty_host(hostheader=True)`</s>`r.pretty_host` instead of `r.host`. A PR would be highly appreciated! :smiley:\n"
      },
      {
        "user": "ghost",
        "created_at": "2015-08-13T19:47:49Z",
        "body": "It took some time but now I could test.\nAs suggested the `rheader` worked as good as my workaround. The string for the hash is a little bit longer but I doubt that this has a mensurable negative effect.\n\nChanging `r.host` to `r.pretty_host(hostheader=True)` leads to the fact that the domain is in the string for the hash and that there is no IP.  \nThus there should be a changing in behaviour. I once saw a DNS server sending another IP answer on every request. Thus with IP in Hash it would be a miss in cache every time and here, without the IP but with domain, it should be a hit. \nGoogle also change the IP from time to time. But I do not know the algorithm behind it thus there is no good way to reproduce it. Therefore this is only a speculation of mine by seeing the string for the hash. Maybe a dynamic DNS with an IP changing internet provider could help by testing this.\n\nIndependent of that, the reason of writing this text is that mitmdump is not working as suggested without an additional parameter, at least in my opinion. Thus if `--no-pop` should not work with vhosts without `--rheader Host` I would propose to add a note to the description of `--no-pop`.\n"
      },
      {
        "user": "armudgal",
        "created_at": "2018-02-12T00:03:20Z",
        "body": "Hi, I tested it using the `server_replay_nopop` and there was no issue when I tried to reproduce the problem. I am not able to find when this was resolved but I think it's not an issue anymore :)"
      },
      {
        "user": "mhils",
        "created_at": "2018-02-12T10:11:35Z",
        "body": "This issue still very much exists - the first step would probably be coming up with a good test case and then changing `.host` to `.pretty_host`.\r\nLong term, the ideal approach might be to cycle through all valid responses for one key, but finding good data structures here is not entirely trivial."
      },
      {
        "user": "interpreter95",
        "created_at": "2021-01-03T13:39:46Z",
        "body": "Hi, @mhils is this still an active issue?\r\n\r\nIf so I could try working on it (I'm new to open source contributing and I'm trying to get into it).\r\n\r\nHowever, at the moment I have only time for this during weekends so if this issue is urgent I will look for a more suitable issue to take."
      },
      {
        "user": "mhils",
        "created_at": "2021-01-03T14:13:32Z",
        "body": "@AdderAdder: I haven't looked at this for over two years now. Since nobody complained in the meantime, I'll just close this now.\r\n\r\nIf someone runs into this in the future, please open a new issue with a suitable test case. :)"
      }
    ]
  },
  {
    "number": 582,
    "title": "View used SSL/TLS Version and Cipher Suite",
    "created_at": "2015-05-13T09:58:04Z",
    "closed_at": "2016-10-27T18:38:22Z",
    "labels": [
      "kind/feature",
      "help wanted"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/582",
    "body": "Hey,\n\nis it possible to view the Cipher Suite used to encrypt the traffic? I think this could be interesting while testing some application without the need to set specific ciphers. E.g. this information could be saved as an attribute in the HTTPMessage class. Moreover this could be helpful to check if the something was really encrypted, e.g. by setting the attribute to None (or is this information already provided by the scheme attribute?).  \n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/582/comments",
    "author": "raymontag",
    "comments": [
      {
        "user": "mhils",
        "created_at": "2015-05-13T10:08:57Z",
        "body": "> (or is this information already provided by the scheme attribute?)\n\nyes. We also have the flow detail view (`X` in 0.11.3, more prominently on the current github master) to view the certificate.\nDisplaying the current cipher suite is useful, but we should keep in mind that the cipher suite may change at any point in time of the TLS connection, which makes displaying/storing it not entirely trivial.\n\nIt would be nice to have a first PR that just displays the cipher suite that is currently in use.\n"
      },
      {
        "user": "mhils",
        "created_at": "2016-10-03T07:38:29Z",
        "body": "From #1589: It would also be very useful to display the TLS version that has been used for the server and client connections. If anyone picks this up, let me know and I'm happy to help!\n"
      }
    ]
  },
  {
    "number": 542,
    "title": "Rename \"Limit\" Feature",
    "created_at": "2015-03-29T01:40:35Z",
    "closed_at": "2016-08-01T06:13:31Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/542",
    "body": "In a nutshell, I feel that \"filter\" describes the limit/filter feature more accurately than \"limit\".  Also, `f` is not taken as a keyboard shortcut. There were a few users in #mitmproxy asking for said feature, not realizing that limit does provide this functionality.\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/542/comments",
    "author": "mhils",
    "comments": [
      {
        "user": "mhils",
        "created_at": "2015-03-29T02:28:51Z",
        "body": "Quick summary of our discussion on IRC: There seems to be a consensus to ditch _limit_, but _filter_ is difficult in mitmproxy's case as one may assume that this means filtering on the wire. Also, we should consider the distinction between highlighting the flows that match and only showing the flows that match.\n\nCurrent candidates:\n1. Be explicit about what filter means, e.g. \"display filter\" or \"filter view\".\n2. \"Show only flows that match\"\n3. Search input and a \"show only search hits\" checkbox.\n   \n   > i think there's a lot of cognitive load there. we have two different things: search, coupled with \"show me stuff that matches search\". i think those go together naturally.\n4. Search input (always only showing hits) and dedicated highlight input(s).\n   \n   > Having multiple highlights would be very useful to colorize traffic based on arbitrary filters (for example to mimic Wireshark's \"colorize conversation\" feature). The idea of multiple highlights doesn't match very well with a single search input.\n\nAny opinions/feedback is welcome. :-)\n"
      },
      {
        "user": "mooring",
        "created_at": "2015-12-04T15:34:16Z",
        "body": "`f` param will be better than `l`\nfirst of all, `l` let me think setting the flow rows ,  it makes me confusing \n"
      },
      {
        "user": "mhils",
        "created_at": "2016-07-24T00:58:03Z",
        "body": "From Slack:\n\n@cortesi:\n\n> @mhils just saw your other question yesterday. lets go with “filter view” and “toggle marked flow view\"\n> \n> associated with that, i’d like to change the command line and keybindings to maintain the mnemonic\n> \n> -f for filter on the commandline. currently this is an alias for —follow, but we don’t need a short option for that.\n> \n> then i can use -l which is currently limit for some renaming i’m doing associated with logs.\n> \n> add_event -> add_log\n"
      }
    ]
  },
  {
    "number": 504,
    "title": "mitmweb: fix filters",
    "created_at": "2015-03-05T16:35:10Z",
    "closed_at": "2015-03-06T09:13:10Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/504",
    "body": "Something broke the filters, not sure what.\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/504/comments",
    "author": "mhils",
    "comments": [
      {
        "user": "legendtang",
        "created_at": "2015-03-05T18:54:55Z",
        "body": "Confirmed that it is EventEmitter related. See the PR.\n"
      }
    ]
  },
  {
    "number": 380,
    "title": "Update --client-certs docs",
    "created_at": "2014-10-13T15:56:42Z",
    "closed_at": "2015-03-04T22:07:42Z",
    "labels": [
      "kind/docs",
      "help wanted"
    ],
    "url": "https://github.com/mitmproxy/mitmproxy/issues/380",
    "body": "I was unable to find documentation on how client side certificates are configured.  It looks like this client side option would be used, but I've been unable to track down how to leverage it.\n",
    "comments_url": "https://api.github.com/repos/mitmproxy/mitmproxy/issues/380/comments",
    "author": "charliek",
    "comments": [
      {
        "user": "mhils",
        "created_at": "2014-10-16T16:22:11Z",
        "body": "Hi Charlie,\n\nthe very short explanation: You specify a directory using `--client-certs`, we search for a *.pem file in there matching the target hostname. For example, suppose you want to open example.com with a client cert, place a PEM file named `example.com.pem` in the certs directoy.\n\nWe should certainly explain that in the docs (PRs welcome :wink:). Thanks for pointing that out.\n\nCheers,\nMax\n"
      },
      {
        "user": "charliek",
        "created_at": "2014-10-16T17:22:43Z",
        "body": "Thanks Max! I'll give it a try.\n"
      }
    ]
  }
]