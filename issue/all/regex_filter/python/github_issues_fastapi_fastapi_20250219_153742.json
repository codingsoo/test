[
  {
    "number": 4415,
    "title": "Pydantic missing value error when the data already exist",
    "created_at": "2022-01-12T05:27:50Z",
    "closed_at": "2023-02-28T16:10:43Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/4415",
    "body": ".",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/4415/comments",
    "author": "NonlinearNimesh",
    "comments": [
      {
        "user": "panla",
        "created_at": "2022-01-12T08:06:53Z",
        "body": "```python\r\nfrom pydantic import Field\r\n# first, use Field not Body\r\n\r\n# second\r\nprint(res)\r\n\r\n# third, write a right Query\r\nresult = db.query(algo_details_model.AlgoDetails, model.Details).filter(\r\n    algo_details_model.AlgoDetails.algo_id == model.Details.algo_id\r\n).first()\r\n\r\ncheck the result`s type\r\n```\r\n"
      }
    ]
  },
  {
    "number": 3984,
    "title": "Choice between graphQL and REST fastAPI",
    "created_at": "2021-10-04T20:53:18Z",
    "closed_at": "2023-02-27T22:30:40Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3984",
    "body": "Hi community,\n\nI have a quick question that turns me on for a while. I work with both graphQL and fastAPI, however I can see through documentation and tutorials that REST API are by far more usual. Are they definitely better than graphQL? Since I just started my graphQL API I wonder whether I should move on REST or keep going on with strawberry?\nThanks for your lights!",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3984/comments",
    "author": "Matthieu-Tinycoaching",
    "comments": [
      {
        "user": "mustadev",
        "created_at": "2021-10-05T14:16:06Z",
        "body": "you should use Discussion. this is not a issue"
      },
      {
        "user": "Matthieu-Tinycoaching",
        "created_at": "2021-10-06T20:05:21Z",
        "body": "Thanks I have posted this in discussion."
      }
    ]
  },
  {
    "number": 3613,
    "title": "How to open tags or close?",
    "created_at": "2021-07-27T10:22:33Z",
    "closed_at": "2023-02-28T16:35:17Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3613",
    "body": "How to open tags or close?Like swagger:docExpansion=\"none\" or \"list\"",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3613/comments",
    "author": "reynold198",
    "comments": [
      {
        "user": "Cosmicoppai",
        "created_at": "2021-08-15T11:10:26Z",
        "body": "can you please more elaborate the question?"
      }
    ]
  },
  {
    "number": 3604,
    "title": "too many include_router",
    "created_at": "2021-07-26T02:09:49Z",
    "closed_at": "2023-02-28T16:35:04Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3604",
    "body": "A big application,  with many routers.  how move a separate  file ？\r\n```\r\napp.include_router(router1)\r\napp.include_router(router2)\r\napp.include_router(router3)\r\napp.include_router(router4)\r\napp.include_router(router5)\r\n....\r\n```",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3604/comments",
    "author": "linpan",
    "comments": [
      {
        "user": "AlexanderPodorov",
        "created_at": "2021-07-28T08:42:58Z",
        "body": "Probably it's not a direct answer to your question, but I found it useful to have all FastAPI initialization logic in factory function in separate file:\r\n```python\r\nfrom collections.abc import Callable\r\nfrom logging import Formatter\r\nfrom logging.handlers import RotatingFileHandler\r\nfrom typing import Any\r\n\r\nfrom fastapi import FastAPI, Request, status\r\nfrom fastapi.logger import logger\r\nfrom fastapi.responses import JSONResponse\r\n\r\nfrom settings import Settings\r\n#import all routers here\r\n\r\ndef create_api(settings: Settings):\r\n    handler = RotatingFileHandler(\r\n        filename=settings.logging_filename,\r\n        maxBytes=settings.logging_max_bytes,\r\n        backupCount=settings.logging_backup_count,\r\n        encoding=settings.logging_encoding\r\n    )\r\n    handler.setFormatter(Formatter(settings.logging_format))\r\n    logger.addHandler(handler)\r\n\r\n    api = FastAPI(title='API')\r\n\r\n    @api.middleware('http')\r\n    async def catch_exceptions_middleware(request: Request, call_next: Callable[[Request], Any]):\r\n        try:\r\n            return await call_next(request)\r\n        except Exception as error:\r\n            logger.error(error, exc_info=(type(error), error, error.__traceback__))\r\n            return JSONResponse(\r\n                status_code=status.HTTP_500_INTERNAL_SERVER_ERROR,\r\n                content={\r\n                    'detail': 'Internal Server Error'\r\n                }\r\n            )\r\n    \r\n    #include all routers here:\r\n    api.include_router(...)\r\n    \r\n    return api\r\n\r\n```\r\n`Settings` is my custom class for settings, you may not use it if you don't want. I just import `create_api` function and instantiate FastAPI instance in the same way under different circumstances (for normal run, for tests, for CLI, etc.)"
      },
      {
        "user": "Anshrk",
        "created_at": "2021-07-29T05:15:15Z",
        "body": "Like the above answer mentioned, you can seperate the pproject into apps and include all the routers to the app, then finally include all the routers to the main url.py app"
      },
      {
        "user": "linpan",
        "created_at": "2021-07-29T07:18:21Z",
        "body": "@Anshrk @AlexanderPodorov \r\nthks, guys.   A solution below:\r\nI use a function :\r\n```\r\ninclude_routers(app)\r\n```\r\n"
      },
      {
        "user": "linpan",
        "created_at": "2021-07-29T07:18:23Z",
        "body": "@Anshrk @AlexanderPodorov \r\nthks, guys.   A solution below:\r\nI use a function :\r\n```\r\ninclude_routers(app)\r\n```\r\n"
      },
      {
        "user": "fabioueno",
        "created_at": "2023-01-27T04:32:42Z",
        "body": "Hey, @linpan! 👋\r\n\r\nIs your issue resolved? 🤔"
      },
      {
        "user": "linpan",
        "created_at": "2023-01-28T01:26:49Z",
        "body": "fixed please to close  the issue."
      },
      {
        "user": "acidjunk",
        "created_at": "2023-01-28T01:36:54Z",
        "body": "It's easier when the ticket opener closes it 🙈 "
      }
    ]
  },
  {
    "number": 3593,
    "title": "Prevent pydantic validation errors from automatically disconnecting websockets connections",
    "created_at": "2021-07-23T11:42:55Z",
    "closed_at": "2023-02-27T22:25:29Z",
    "labels": [
      "question",
      "answered",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3593",
    "body": "How do I prevent pydantic validation errors from automatically disconnecting websockets connections?\r\n\r\n```\r\n    try:\r\n        while True:\r\n            data = await websocket.receive_json() # handle data\r\n\r\n    except pydantic.error_wrappers.ValidationError as e:\r\n         # NOTE: This will currently cause websocket to disconnect regardless of any statement\r\n\r\n    except Exception as e:\r\n        # Doesnt fail here\r\n\r\n    except Exception as e:\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3593/comments",
    "author": "hwlee96",
    "comments": [
      {
        "user": "RoyalGoose",
        "created_at": "2022-10-18T14:49:55Z",
        "body": "Is there any solution for this problem?"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-10-20T09:20:02Z",
        "body": "Hey there!\r\n\r\nPlease write a self contained example that I can run to see your error and understand your intention better."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2022-10-31T00:18:59Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 3588,
    "title": "Override dependencies that dont return nothing",
    "created_at": "2021-07-22T22:45:59Z",
    "closed_at": "2023-02-27T22:51:26Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3588",
    "body": "Hi.. I started this discussion on discord but seems like a more tricky thing.\r\n\r\nI'd like to know if dependency_overrides works when the dependency function dont return anything.. in my case my dependency function only pass if not wrong happens or throw an httpexception if something wrong happens..\r\nThe dependency override is not working because in fastapi.dependencies.utils, when the code will try override the dependencies, the reference of functions are different and then the override dont occurs..\r\n\r\nMy dependency:\r\n```\r\nasync def database_check():\r\n    try:\r\n        _database_is_alive()\r\n        if not database.is_connected:\r\n            await database.connect()\r\n\r\n    except ConnectionDatabaseError:\r\n        if database.is_connected:\r\n            await database.disconnect()\r\n\r\n        raise HTTPException(status_code=503)\r\n```\r\n\r\nMy 3 attempts functions to override dependency:\r\n```\r\nfrom ..api.dependencies import database_check\r\n\r\nasync def database_check_pass():\r\n    return True\r\n\r\nasync def database_check_pass():\r\n    pass\r\n\r\nasync def database_check_pass():\r\n    def handle():\r\n      return True\r\n    return handle\r\n```\r\n\r\nMy override dependency code:\r\n`app.dependency_overrides[database_check] = database_check_pass`\r\n\r\nSomething I notice, inside fastapi code, the function reference inside dependency_overrides_provider is different than the original function in app/api/dependencies.py\r\n\r\nfastapi.dependencies.utils\r\n```\r\ncall = getattr(\r\n    dependency_overrides_provider, \"dependency_overrides\", {}\r\n).get(original_call, original_call)\r\n```\r\n\r\nMy app structure:\r\n```\r\napp/\r\n  api/\r\n    dependencies.py\r\n    views.py\r\n  tests/\r\n    my_test.py\r\n  main.py\r\n```\r\n\r\nWhat am I missing here?\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3588/comments",
    "author": "Soufraz",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2021-07-24T06:45:11Z",
        "body": "I can't see any issues with this code - here's a full example that works fine:\r\n\r\n\r\n```python\r\nfrom fastapi import FastAPI, Depends\r\nfrom fastapi.testclient import TestClient\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\nasync def database_check():\r\n    try:\r\n        _database_is_alive()\r\n        if not database.is_connected:\r\n            await database.connect()\r\n\r\n    except ConnectionDatabaseError:\r\n        if database.is_connected:\r\n            await database.disconnect()\r\n\r\n        raise HTTPException(status_code=503)\r\n\r\n\r\nasync def database_check_pass():\r\n    return \"the value were expecting\"\r\n\r\n\r\napp.dependency_overrides[database_check] = database_check_pass\r\n\r\n\r\n@app.get(\"/\")\r\ndef route(database_check=Depends(database_check)):\r\n    return database_check\r\n\r\n\r\ntc = TestClient(app)\r\nassert tc.get(\"/\").json() == \"the value were expecting\"\r\n```"
      },
      {
        "user": "Soufraz",
        "created_at": "2021-07-24T14:19:58Z",
        "body": "@Mause thank you a lot for trying to help me.\r\nBut you didnt replicate my case. You made a fresh new one. Without packages and imports.\r\nTry to reply the same you did but within this structure:\r\n\r\n```\r\napp/\r\n  api/\r\n    dependencies.py\r\n    views.py\r\n  tests/\r\n    my_test.py\r\n  main.py\r\n```\r\n\r\n:)"
      },
      {
        "user": "Kludex",
        "created_at": "2021-07-24T14:22:28Z",
        "body": "Why don't you provide that structure within a repository, so we can help you easily? "
      },
      {
        "user": "Soufraz",
        "created_at": "2021-07-24T14:24:05Z",
        "body": "@Kludex \r\nRight. I'll do that. \r\nWhen ready I'll leave the link here. \r\nThank you."
      },
      {
        "user": "Soufraz",
        "created_at": "2021-07-24T17:22:07Z",
        "body": "Copying only dependencies files and routes to a fresh project works properly.  :|\r\nI'll move file by file to this new fresh project until get the error.\r\nIs there some cache to clean or anything related?"
      },
      {
        "user": "Soufraz",
        "created_at": "2021-07-24T17:23:16Z",
        "body": "I closed because probably is something related to my project."
      },
      {
        "user": "Soufraz",
        "created_at": "2021-07-24T18:02:20Z",
        "body": "Found! In tests file I was importing ..main and ..api.dependencies\r\nChanged to app.main and app.api.dependencies.\r\nThank you guys!"
      }
    ]
  },
  {
    "number": 3586,
    "title": "cannot add extra info from Query",
    "created_at": "2021-07-22T11:49:17Z",
    "closed_at": "2023-02-28T16:34:58Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3586",
    "body": "WTForm can add helper info custom desc,but I can not  find in Query,Path and Body",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3586/comments",
    "author": "rainbow2019s",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2021-07-22T12:58:29Z",
        "body": "What extra info are you referring to?"
      },
      {
        "user": "rainbow2019s",
        "created_at": "2021-07-23T00:45:42Z",
        "body": "@app.get('/api') #/api?limit=100\r\nasync def admin(\r\n    limit:int=Query(...,ge=1,le=10,description='参数错误')\r\n):\r\n    return {'limit':limit}\r\n\r\n@app.exception_handler(RequestValidationError)\r\nasync def validation_exception_handler(request, exc):\r\n    # print(type(exc.errors()))\r\n    return JSONResponse(\r\n        status_code=400,\r\n        content={\r\n            'code':'10001',\r\n            'message':exc.errors()[0]['msg'], \r\n            'data':{}}\r\n    )\r\n\r\nI want to get description in exception_handler to replace default msg"
      }
    ]
  },
  {
    "number": 3553,
    "title": "fast-api can't load variable from main",
    "created_at": "2021-07-19T07:13:31Z",
    "closed_at": "2023-02-28T16:34:39Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3553",
    "body": "This is working global variable in Head.\r\nbut not working that in main\r\n\r\nWhy can't I call the main variable(global variable)?\r\n\r\n```Python\r\n\r\n#test2,py\r\n\r\nimport uvicorn\r\napp = FastAPI()\r\n\r\nglobal header_var\r\nheader_var=\"Head\"\r\n\r\n@app.get(\"/\")\r\ndef read_root():\r\n    return {\"Code level 0 : \"f'{header_var}' }\r\n\r\n@app.get(\"/main\")\r\ndef read_root():\r\n    return {\"Code level 0 : \"f'{header_var}' , \"main src: \"f'{main_var}' }\r\n\r\n\r\n\r\nif __name__==\"__main__\":\r\n\r\n    global main_var\r\n    main_var =\"main\"\r\n    #server run\r\n    app_str='test2:app'\r\n    uvicorn.run(app_str, host='0.0.0.0', port=5000, reload=True, workers=5)\r\n```\r\n\r\nstatus code\r\n\"head\"\r\nINFO:     127.0.0.1:59650 - \"GET /head HTTP/1.1\" 200 OK\r\n\r\nstatus code\r\n\"main\"\r\nINFO:     127.0.0.1:59686 - \"GET /main HTTP/1.1\" 500 Internal Server Error\r\nERROR:    Exception in ASGI application\r\nTraceback (most recent call last):\r\n  File \"/home/heeda/anaconda3/envs/namu_pt_py38/lib/python3.8/site-packages/uvicorn/protocols/http/h11_impl.py\", line 369, in run_asgi\r\n    result = await app(self.scope, self.receive, self.send)\r\n  File \"/home/heeda/anaconda3/envs/namu_pt_py38/lib/python3.8/site-packages/uvicorn/middleware/proxy_headers.py\", line 59, in __call__\r\n    return await self.app(scope, receive, send)\r\n  File \"/home/heeda/anaconda3/envs/namu_pt_py38/lib/python3.8/site-packages/fastapi/applications.py\", line 199, in __call__\r\n    await super().__call__(scope, receive, send)\r\n  File \"/home/heeda/anaconda3/envs/namu_pt_py38/lib/python3.8/site-packages/starlette/applications.py\", line 112, in __call__\r\n    await self.middleware_stack(scope, receive, send)\r\n  File \"/home/heeda/anaconda3/envs/namu_pt_py38/lib/python3.8/site-packages/starlette/middleware/errors.py\", line 181, in __call__\r\n    raise exc from None\r\n  File \"/home/heeda/anaconda3/envs/namu_pt_py38/lib/python3.8/site-packages/starlette/middleware/errors.py\", line 159, in __call__\r\n    await self.app(scope, receive, _send)\r\n  File \"/home/heeda/anaconda3/envs/namu_pt_py38/lib/python3.8/site-packages/starlette/exceptions.py\", line 82, in __call__\r\n    raise exc from None\r\n  File \"/home/heeda/anaconda3/envs/namu_pt_py38/lib/python3.8/site-packages/starlette/exceptions.py\", line 71, in __call__\r\n    await self.app(scope, receive, sender)\r\n  File \"/home/heeda/anaconda3/envs/namu_pt_py38/lib/python3.8/site-packages/starlette/routing.py\", line 580, in __call__\r\n    await route.handle(scope, receive, send)\r\n  File \"/home/heeda/anaconda3/envs/namu_pt_py38/lib/python3.8/site-packages/starlette/routing.py\", line 241, in handle\r\n    await self.app(scope, receive, send)\r\n  File \"/home/heeda/anaconda3/envs/namu_pt_py38/lib/python3.8/site-packages/starlette/routing.py\", line 52, in app\r\n    response = await func(request)\r\n  File \"/home/heeda/anaconda3/envs/namu_pt_py38/lib/python3.8/site-packages/fastapi/routing.py\", line 216, in app\r\n    raw_response = await run_endpoint_function(\r\n  File \"/home/heeda/anaconda3/envs/namu_pt_py38/lib/python3.8/site-packages/fastapi/routing.py\", line 151, in run_endpoint_function\r\n    return await run_in_threadpool(dependant.call, **values)\r\n  File \"/home/heeda/anaconda3/envs/namu_pt_py38/lib/python3.8/site-packages/starlette/concurrency.py\", line 40, in run_in_threadpool\r\n    return await loop.run_in_executor(None, func, *args)\r\n  File \"/home/heeda/anaconda3/envs/namu_pt_py38/lib/python3.8/concurrent/futures/thread.py\", line 57, in run\r\n    result = self.fn(*self.args, **self.kwargs)\r\n  File \"/home/heeda/workproject/namu/D-detect-engine/test2.py\", line 14, in read_root\r\n    return {\"Code level 0 : \"f'{header_var}' , \"main src: \"f'{main_var}' }\r\nNameError: name 'main_var' is not defined",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3553/comments",
    "author": "heeda-namu",
    "comments": [
      {
        "user": "uricholiveira",
        "created_at": "2021-07-19T07:48:24Z",
        "body": "I believe it's because of the order of precedence./ or execution order You need to define global variables before functions. \r\n\r\nSince \"app.get\" is a function that has not been declared in \"main\", it is necessary to declare the variables first."
      },
      {
        "user": "codemation",
        "created_at": "2021-07-22T07:30:38Z",
        "body": "To add to @uricholiveira's point, you can understand what variables are \"global\" at any point in time by using the globals() built_in.\r\n\r\n```\r\n@app.get(\"/main\")\r\ndef read_root():\r\n    print(globals())\r\n    return {\"Code level 0 : \"f'{header_var}' , \"main src: \"f'{main_var}' }\r\n```"
      }
    ]
  },
  {
    "number": 3539,
    "title": "Handle error await request.json() loop",
    "created_at": "2021-07-16T14:55:22Z",
    "closed_at": "2023-02-27T22:51:03Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3539",
    "body": "```\r\nasync def http_error_handler(request: Request, exc: HTTPException) -> JSONResponse:\r\n    track_id = None\r\n    ip = None\r\n    if request:\r\n        track_id = f'{request.client.host.replace(\".\", \"\")}{generate_track_id()}'\r\n        ip = request.client.host\r\n    data_return = {\r\n        \"track_id\": track_id,\r\n        \"ip\": ip,\r\n        \"error\": {\r\n            \"code\": exc.status_code,\r\n            \"message\": exc.detail\r\n        }\r\n\r\n    }\r\n    print(await request.json()) #loop\r\n```",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3539/comments",
    "author": "tranvannhat",
    "comments": [
      {
        "user": "David-Lor",
        "created_at": "2021-07-19T19:47:01Z",
        "body": "What is the question/problem? I'd say the code provided in your issue should contain a minimal reproducible example, so we can try it."
      }
    ]
  },
  {
    "number": 3534,
    "title": "How do I match any path starting with an anchor (#) tag",
    "created_at": "2021-07-15T13:17:47Z",
    "closed_at": "2023-02-27T22:51:01Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3534",
    "body": "### Description / Issue\r\n\r\nI am trying to all paths that match a string starting with an anchor tag (#). This does not see to work as the Request parsing step seems to do something special for the # and I have not been able to find a work around. Any tips on workarounds and potential hacks will be greatly appreciated.\r\n\r\n### Example\r\n\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\n@app.get(\"/{full_path:path}\")\r\nasync def catch_all(request: Request, full_path: str):\r\n    print(\"full_path: \"+full_path)\r\n    return {\"full_path\": full_path})\r\n```\r\n\r\n### Description\r\n\r\n* Open the browser and call the endpoint `/error_code=404&error_description=Internal%20error`.\r\n* It returns a JSON with `{\"full_path\":\"error_code=404&error_description=Internal error\"}`.\r\n* Open the browser and call the endpoint `/$error_code=404&error_description=Internal%20error`.\r\n* It returns a JSON with `{\"full_path\":\"$error_code=404&error_description=Internal error\"}`.\r\n* Open the browser and call the endpoint `/#error_code=404&error_description=Internal%20error`.\r\n* It returns a JSON with `{\"full_path\":\"\"}`.\r\n* But I expected it to return `{\"full_path\":\"#error_code=404&error_description=Internal error\"}`.\r\n\r\n### Environment\r\n\r\n* OS: MacOS M1\r\n* FastAPI Version: 0.65.3\r\n* Python Version: 3.9.5\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3534/comments",
    "author": "mbharadwaj",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2021-07-15T14:05:32Z",
        "body": "The `#` is a special character in URLs - it indicates the start of the hash (or \"fragment\"). Browsers do not pass the hash to the server at all. You may be able to escape it, but I'm not sure if that would be reliable"
      },
      {
        "user": "mbharadwaj",
        "created_at": "2021-07-15T17:28:24Z",
        "body": "thank you for your quick response.\r\n\r\nduh! i had to handle this on the client. got confused. "
      }
    ]
  },
  {
    "number": 3525,
    "title": "How to add a pydantic class as a dependency for a GET route?",
    "created_at": "2021-07-13T11:32:14Z",
    "closed_at": "2023-02-28T16:33:57Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3525",
    "body": "I want to have a GET route that returns the schema of a pydantic class. This way the frontend can call the get route and can build a form that then posts to the post route. A simple version could be:\r\n\r\n```\r\nclass GenerationOptions(BaseModel):\r\n    model: str\r\n    truncation: float\r\n\r\n@router.post(\"/generate\")\r\ndef generate_image(model: GenerationOptions):\r\n    return something\r\n\r\n@router.get(\"/generate\")\r\ndef generate_image(model: dict = Depends(GenerationOptions.schema))): # doesn't work\r\n    return {\"form_fields\": model}\r\n```\r\n\r\nHowever, this doesn't work. The only way I can achieve what I want is with another function:\r\n\r\n```\r\nclass GenerationOptions(BaseModel):\r\n    model: str\r\n    truncation: float\r\n\r\n@router.post(\"/generate\")\r\ndef generate_image(model: GenerationOptions):\r\n    return something\r\n\r\ndef getSomething():\r\n    return GenerationOptions.schema()\r\n\r\n@router.get(\"/generate\")\r\ndef generate_image(model: dict = Depends(getSomething)):\r\n    return {\"form_fields\": model}\r\n```\r\nThis works but I think that there might be another/better solution. Any ideas? Thanks!\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3525/comments",
    "author": "pbizimis",
    "comments": [
      {
        "user": "rotten",
        "created_at": "2021-07-13T12:59:05Z",
        "body": "Can you get it from the swagger endpoint instead?"
      },
      {
        "user": "pbizimis",
        "created_at": "2021-07-13T15:24:06Z",
        "body": "Wouldn't that be unnecessary? Because I would need to request the complete openapi spec but I only need the parameters of one route."
      },
      {
        "user": "Mause",
        "created_at": "2021-07-13T15:55:45Z",
        "body": "Why are you using Depends to retrieve the schema for the model? Why not just retrieve it directly?"
      },
      {
        "user": "pbizimis",
        "created_at": "2021-07-13T15:57:42Z",
        "body": "Mostly because the dependency injection makes it easier to test the route."
      },
      {
        "user": "pbizimis",
        "created_at": "2021-07-13T16:30:34Z",
        "body": "My approach now is this:\r\n```py\r\nclass GenerationOptions(BaseModel):\r\n    model: str\r\n    truncation: float\r\n\r\n    @classmethod\r\n    def get_schema(cls):\r\n        return cls.schema()\r\n\r\n@router.post(\"/generate\")\r\ndef generate_image(model: GenerationOptions):\r\n    return model\r\n\r\n@router.get(\"/generate\")\r\ndef generate_image(model: dict = Depends(GenerationOptions.get_schema)):\r\n    return {\"form_fields\": model}\r\n```\r\n\r\nI am not sure if this is the best way to do this but this works perfectly for my case."
      }
    ]
  },
  {
    "number": 3511,
    "title": "Images Best Practices",
    "created_at": "2021-07-09T12:10:54Z",
    "closed_at": "2023-02-27T22:50:52Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3511",
    "body": "hi, i am developing a object detection projects on jetsons Xavier NX. where i need to monitor multiple cameras, and do some object detection on each frame of each camera\r\n :( Sorry for the long question, im trying to introduce thr problem/objective\r\n\r\nAt first... i started with only one camera... so all my code went on the same script.. something like\r\n\r\nmodel = loadModel()\r\nwhile True\r\n   frame = getFrame()\r\n   detections = model.detect(frame)\r\n   ...\r\n\r\nFor this simple script.. i had almost 70FPS (~15 ms) ( model is a tinyyolo4-416.. )\r\nThen i started with the multicamera approach... i tryed threading/multiprocess.. and worked, but i think that lacks separation of concerns.. and my code was a bit messy.\r\n\r\nin order to do separation of concerns.. i haave created two scripts/dockers.\r\n1. An Api using fastapi. which loads the model, and has the predict endpoint for prediction\r\n2. CameraProcessor.. which, as the name goes, its a python script that takes images from a camera, and it then call the API for detectin things on the frame.\r\n\r\nwhen i started testing this, again with only one camera.. my FPS went down from 70 FPS to 30FPS (~ 30ms)\r\n\r\nHere my questions\r\n* **What is the recomended/best practices to send images to the API?** \r\nright now.. im encoding the numpy image( cv2.imencode then to base64) and sending and decoding on the other side... i have done some profiling.. and the encoding/decoding takes approx 4 ms each.. wich would reduce my FPS to ~50\r\n\r\n* **Is there any \"configuration\" that i can do ? for reducing this gap ? or this is the expected latency?**\r\nthanks\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3511/comments",
    "author": "malfonso0",
    "comments": [
      {
        "user": "baby5",
        "created_at": "2021-07-12T15:00:38Z",
        "body": "in your case, not use API"
      },
      {
        "user": "malfonso0",
        "created_at": "2021-07-12T16:14:31Z",
        "body": "thanks @baby5  for your response\r\ncould you please.. explain why?.. "
      },
      {
        "user": "STeveShary",
        "created_at": "2021-07-14T17:23:41Z",
        "body": "@malfonso0 It sounds like latency is important to you.  One thought is that HTTP calls through FastAPI may not meet your needs.  Before you jump to far into an approach of using FastAPI, I would recommend that you understand the amount of time it will take to send an image over HTTP.  Below is a very simple FastAPI app that will return the name of the file sent:\r\n\r\n```from fastapi import FastAPI, File, UploadFile\r\n\r\napp = FastAPI()\r\n\r\n@app.post(\"/image\")\r\nasync def image(image: UploadFile = File(...)):\r\n    return {\"filename\": image.filename}\r\n\r\n```\r\n\r\nI expect that you will find that the time to send an image to FastAPI will be > 50ms.   It is easier to scale the number of images that can be processed but you will find that the latency may be far too much for you.\r\n\r\nBest of luck!"
      },
      {
        "user": "malfonso0",
        "created_at": "2021-07-14T18:41:38Z",
        "body": "thanks @STeveShary  for your words.\r\n seems you are correct, it doesnt matter what i do... i always have 20-50ms latency. so this is \"what's excepted\" and there is not much room for improve\r\nthanks"
      }
    ]
  },
  {
    "number": 3509,
    "title": "Header Data Format not accept the dataclass",
    "created_at": "2021-07-09T07:47:59Z",
    "closed_at": "2023-02-27T22:50:46Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3509",
    "body": "I have a question about the Header accepted data format. \r\nAs the following code shows, I want to send a Header, parse the content of this Header and GET image streamer from my server(localhost). \r\nBut if I entered some string to the Header, that will show me the error: \r\n\r\n\r\n```\r\nError: Unprocessable EntityResponse \r\nbodyDownload{   \"detail\": [     {       \"loc\": [         \"header\",         \"image-option\"       ],       \r\n\"msg\": \"instance of ImageOption, tuple or dict expected\",       \r\n\"type\": \"type_error.dataclass\",       \r\n\"ctx\": {         \"class_name\": \"ImageOption\"       }     }   ] }\r\n```\r\n\r\n\r\n This is only a test script. Laterly I will let the ImageOption inherit other class. But the premier test script won't let me do this. Or the Header can only be some str, int or float. extra.\r\n\r\nMy OS is ArchLinux, and x86_64. I think, the OS is not that problem. \r\n\r\n\r\n```import asyncio\r\nimport io\r\nfrom dataclasses import dataclass\r\nfrom time import sleep\r\nfrom typing import Optional, Dict\r\n\r\nimport uvicorn\r\nfrom fastapi import FastAPI, Header, Query, Path\r\nfrom starlette.responses import StreamingResponse\r\nimport cv2\r\nfrom harvesters.core import Harvester\r\n\r\nfrom autorein.websocket_util.ws_image import Image, create_test_image\r\n\r\napp = FastAPI()\r\n\r\n\r\n@dataclass\r\nclass ImageOption:\r\n    data: Optional[str] = None\r\n\r\n\r\ndef capcure_image(cam_source):\r\n    cap = cv2.VideoCapture(cam_source)\r\n    ret, image = cap.read()\r\n    return image\r\n\r\n\r\ndef encode_img_to_bytes():\r\n    img = capcure_image(0)\r\n    ret, img_encoded = cv2.imencode('.png', img)\r\n    return img_encoded.tobytes()\r\n\r\nasync def video_streamer():\r\n    while True:\r\n        cv2img_encode = encode_img_to_bytes()\r\n        await asyncio.sleep(0.01)\r\n        yield (b'--frame\\r\\n' b'Content-Type: image/png\\r\\n\\r\\n' +\r\n               bytearray(cv2img_encode) + b'\\r\\n')\r\n\r\n@app.get(\"/vector_image\")\r\nasync def video_feed(image_option: ImageOption = Header(...)):\r\n    print(image_option)\r\n    return StreamingResponse(video_streamer(), media_type=\"multipart/x-mixed-replace; boundary=frame\")\r\n\r\n\r\nif __name__ == '__main__':\r\n    uvicorn.run('fastapi_test:app', host='127.0.0.1', port=8000, reload=True)```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3509/comments",
    "author": "Yingliangzhe",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2021-07-09T10:46:25Z",
        "body": "What are you expecting to happen here? Headers are strings, not objects"
      },
      {
        "user": "Yingliangzhe",
        "created_at": "2021-07-09T11:27:13Z",
        "body": "I will add still some integers and strings in that ImageOption class. \r\nThe server reads the Options from the ImageOption and then return some images. \r\n\r\nShortly, set some options, parse them and according to the options, the images will be sent.\r\nSetting options better with the object injection. "
      },
      {
        "user": "Yingliangzhe",
        "created_at": "2021-07-19T10:16:32Z",
        "body": "I figure it out, that the Depends keyword can be used for this case. \r\nChange this line\r\n`async def video_feed(image_option: ImageOption = Header(...)):`\r\n to below\r\n`async def video_feed(image_option: ImageOption = Depends(ImageOption)):`"
      }
    ]
  },
  {
    "number": 3502,
    "title": "fastapi 从0.65.3 升级到 0.66.0 引发KeyError: None",
    "created_at": "2021-07-08T02:54:36Z",
    "closed_at": "2023-02-27T22:50:41Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3502",
    "body": "环境说明： windows 10 使用 uvicorn部署fastapi \r\n\r\n当我将fastapi从0.65.3 升级到 0.66.0 会引发错误：\r\n```\r\nERROR:uvicorn.error:Exception in ASGI application\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\xuzhu\\.virtualenvs\\re_fastapi\\lib\\site-packages\\uvicorn\\protocols\\http\\h11_impl.py\", line 396, in run_asgi\r\n    result = await app(self.scope, self.receive, self.send)\r\n  File \"C:\\Users\\xuzhu\\.virtualenvs\\re_fastapi\\lib\\site-packages\\uvicorn\\middleware\\proxy_headers.py\", line 45, in __call__\r\n    return await self.app(scope, receive, send)\r\n  File \"C:\\Users\\xuzhu\\.virtualenvs\\re_fastapi\\lib\\site-packages\\fastapi\\applications.py\", line 199, in __call__\r\n    await super().__call__(scope, receive, send)\r\n  File \"C:\\Users\\xuzhu\\.virtualenvs\\re_fastapi\\lib\\site-packages\\starlette\\applications.py\", line 112, in __call__\r\n    await self.middleware_stack(scope, receive, send)\r\n  File \"C:\\Users\\xuzhu\\.virtualenvs\\re_fastapi\\lib\\site-packages\\starlette\\middleware\\errors.py\", line 181, in __call__\r\n    raise exc from None\r\n  File \"C:\\Users\\xuzhu\\.virtualenvs\\re_fastapi\\lib\\site-packages\\starlette\\middleware\\errors.py\", line 159, in __call__\r\n    await self.app(scope, receive, _send)\r\n  File \"C:\\Users\\xuzhu\\.virtualenvs\\re_fastapi\\lib\\site-packages\\starlette\\middleware\\base.py\", line 26, in __call__\r\n    await response(scope, receive, send)\r\n  File \"C:\\Users\\xuzhu\\.virtualenvs\\re_fastapi\\lib\\site-packages\\starlette\\responses.py\", line 224, in __call__\r\n    await run_until_first_complete(\r\n  File \"C:\\Users\\xuzhu\\.virtualenvs\\re_fastapi\\lib\\site-packages\\starlette\\concurrency.py\", line 24, in run_until_first_complete\r\n    [task.result() for task in done]\r\n  File \"C:\\Users\\xuzhu\\.virtualenvs\\re_fastapi\\lib\\site-packages\\starlette\\concurrency.py\", line 24, in <listcomp>\r\n    [task.result() for task in done]\r\n  File \"C:\\Users\\xuzhu\\.virtualenvs\\re_fastapi\\lib\\site-packages\\starlette\\responses.py\", line 209, in stream_response\r\n    await send(\r\n  File \"C:\\Users\\xuzhu\\.virtualenvs\\re_fastapi\\lib\\site-packages\\starlette\\middleware\\errors.py\", line 156, in _send\r\n    await send(message)\r\n  File \"C:\\Users\\xuzhu\\.virtualenvs\\re_fastapi\\lib\\site-packages\\uvicorn\\protocols\\http\\h11_impl.py\", line 471, in send\r\n    reason = STATUS_PHRASES[status_code]\r\nKeyError: None\r\n```",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3502/comments",
    "author": "xujiang1",
    "comments": [
      {
        "user": "TnTomato",
        "created_at": "2021-07-08T06:30:48Z",
        "body": "What is the version of your Python and Uvicorn?"
      },
      {
        "user": "Ro0tk1t",
        "created_at": "2021-07-09T01:54:36Z",
        "body": "status code should between 100 ~ 600"
      },
      {
        "user": "panla",
        "created_at": "2021-07-09T10:42:01Z",
        "body": "在某一个返回响应的地方\r\n\r\nreturn JSONResponse(content=content, status_code=status_code)\r\n\r\nstatus_code 超出了要求\r\n"
      },
      {
        "user": "xujiang1",
        "created_at": "2021-07-13T03:11:16Z",
        "body": "> 你的 Python 和 Uvicorn 是什么版本？\r\n\r\nPython 3.8.2\r\n uvicorn              0.13.4"
      },
      {
        "user": "xujiang1",
        "created_at": "2021-07-13T03:12:04Z",
        "body": "> status code should between 100 ~ 600\r\n\r\nbut neow status code is None"
      },
      {
        "user": "xujiang1",
        "created_at": "2021-07-13T03:27:46Z",
        "body": "我查询了这个错误,来自 re_fastapi\\Lib\\site-packages\\uvicorn\\protocols\\http\\h11_impl.py 的436行 async def send(self, message):的函数，该函数传入message参数 ， status_code = message[\"status\"] status_code 由message 得到，\r\n我打印了message 得到：{'type': 'http.response.start', 'status': None, 'headers': [(b'content-length', b'13'), (b'content-type', b'application/json'), (b'x-process-ti\r\nme', b'0.001983165740966797')]}\r\n"
      },
      {
        "user": "xujiang1",
        "created_at": "2021-07-21T01:38:28Z",
        "body": "发现问题 自己代码的问题"
      }
    ]
  },
  {
    "number": 3473,
    "title": "How to return from xlwings create_report 'xlwings Book' object to be downloaded?",
    "created_at": "2021-07-06T21:55:56Z",
    "closed_at": "2023-02-28T16:57:16Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3473",
    "body": "#### OS (e.g. Windows 10 or macOS Sierra)\r\nBig Sur 11.4\r\n\r\n#### Versions of xlwings, Excel and Python (e.g. 0.11.8, Office 365, Python 3.7)\r\nPython 3.9.5\r\nExcel 16.50\r\n\r\n#### Describe your issue (incl. Traceback!)\r\nHow to return part of API from create_report?\r\n\r\n#### Include a minimal code sample to reproduce the issue (and attach a sample workbook if required!)\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\nfrom xlwings.pro.reports import create_report\r\n\r\napi = FastAPI()\r\n\r\n@api.get(\"/weekly-report/{start_date}/{end_date}\", response_class=FileResponse)\r\nasync def weekly(start_date, end_date):\r\n\r\n    wb = create_report(template_path, report_path, app=app, **data) // returns an xlwings Book object\r\n\r\n    return wb\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3473/comments",
    "author": "miriam-z",
    "comments": [
      {
        "user": "STeveShary",
        "created_at": "2021-07-14T17:34:30Z",
        "body": "Are you asking how to return not the entire `wb` object but rather an object that only has some fields?"
      }
    ]
  },
  {
    "number": 3469,
    "title": "Why ModuleNotFoundError: No module found",
    "created_at": "2021-07-05T17:24:10Z",
    "closed_at": "2023-02-28T16:57:06Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3469",
    "body": "Example\r\n\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\nimport pandas.io.sql as sqlio\r\nimport psycopg2\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/\")\r\ndef read_root():\r\n    return {\"Hello\": \"World\"}\r\n```\r\n\r\nuvicorn main:app --reload\r\n\r\n### Description\r\n\r\n    import psycopg2\r\nModuleNotFoundError: No module named 'psycopg2'\r\n\r\n\r\n### Environment\r\n\r\n* OS: [e.g. Linux / Windows / macOS]:\r\n* Big Sur 11.4\r\n\r\n* FastAPI Version [e.g. 0.3.0]:\r\n\r\nTo know the FastAPI version use:\r\n\r\n```bash\r\npython -c \"import fastapi; print(fastapi.__version__)\"\r\n```\r\n0.66.0\r\n\r\n* Python version:\r\n\r\nTo know the Python version use:\r\n\r\n```bash\r\npython --version\r\n```\r\n3.9.5\r\n\r\n\r\n### Additional context\r\n\r\n<!-- Add any other context or screenshots about the question here. -->\r\npip3 list                                             \r\nPackage           Version\r\n----------------- -------------------\r\naiofiles          0.7.0\r\nfastapi           0.66.0\r\nnumpy             1.21.0\r\npandas            1.2.5\r\npip               21.1.2\r\npsycopg2          2.9.1\r\npydantic          1.8.2\r\nrope              0.19.0\r\nsetuptools        52.0.0.post20210125\r\nsix               1.16.0\r\nstarlette         0.14.2\r\ntoml              0.10.2\r\ntornado           6.1\r\ntraitlets         5.0.5\r\ntyping-extensions 3.10.0.0\r\nuvicorn           0.14.0",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3469/comments",
    "author": "miriam-z",
    "comments": [
      {
        "user": "ArcLightSlavik",
        "created_at": "2021-07-05T20:03:55Z",
        "body": "You need to do `pip install psycopg2-binary` as well"
      },
      {
        "user": "miriam-z",
        "created_at": "2021-07-05T21:21:40Z",
        "body": "Sorry I didnt make it clear, it is not just psycopg2 but pandas also not found as well\r\n\r\n"
      },
      {
        "user": "hail-pas",
        "created_at": "2021-07-06T01:23:28Z",
        "body": "Have you use virtual environment?  Maybe you can provide with stack traceback"
      },
      {
        "user": "aminalaee",
        "created_at": "2021-07-06T14:05:21Z",
        "body": "@miriam-z  This isn't a FastAPI issue, you need to make use of virtual environments or something like `pipenv`."
      },
      {
        "user": "mehmetavnicelik",
        "created_at": "2022-02-15T09:23:07Z",
        "body": "hey! i have the same problem. is it solved? if so can you explain it please? "
      },
      {
        "user": "tqd9563",
        "created_at": "2022-07-21T05:38:33Z",
        "body": "I have the same problem too. How can I deal with it?"
      },
      {
        "user": "JarroVGIT",
        "created_at": "2022-07-21T05:44:32Z",
        "body": "This is not a FastAPI issue but an import issue. It’s impossible to provide a general solution, as there can be many causes."
      }
    ]
  },
  {
    "number": 3435,
    "title": "include_router reset all attribute",
    "created_at": "2021-06-30T12:19:35Z",
    "closed_at": "2023-02-28T16:56:41Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3435",
    "body": "I built my own APIRouter object, using custom APIRoute and APIRouter classes. However, when I use \"include router\", everything will reset. I changed the function signature of the apirouter object, especially the \"dependent\" property. But because \"include router\" runs again, it fails. Why not  \"include router\" directly for the \"dependent\" attribute about the attribute value of the object passed in by router\r\n\r\n```python\r\n\r\n\r\ndef new_typed_signature(call: typing.Callable[..., typing.Any], new_params: typing.Mapping[str, typing.Any]) -> inspect.Signature:\r\n    signature = inspect.signature(call)\r\n    globalns = getattr(call, \"__globals__\", {})\r\n    typed_params = []\r\n    for param in signature.parameters.values():\r\n        if new_params and param.name in new_params:\r\n            param._default = new_params.get(param.name)\r\n        typed_params.append(inspect.Parameter(\r\n            name=param.name,\r\n            kind=param.kind,\r\n            default=param.default,\r\n            annotation=get_typed_annotation(param, globalns),\r\n        ))\r\n    typed_signature = inspect.Signature(typed_params)\r\n    return typed_signature\r\n\r\n\r\ndef new_dependant(\r\n        *,\r\n        path: str,\r\n        call: typing.Callable[..., typing.Any],\r\n        endpoint_signature: inspect.Signature = None,\r\n        name: typing.Optional[str] = None,\r\n        security_scopes: typing.Optional[typing.List[str]] = None,\r\n        use_cache: bool = True,\r\n) -> Dependant:\r\n    path_param_names = get_path_param_names(path)\r\n    if not endpoint_signature:\r\n        endpoint_signature = get_typed_signature(call)\r\n    signature_params = endpoint_signature.parameters\r\n    if is_gen_callable(call) or is_async_gen_callable(call):\r\n        check_dependency_contextmanagers()\r\n    dependant = Dependant(call=call, name=name, path=path, use_cache=use_cache)\r\n    for param_name, param in signature_params.items():\r\n        if isinstance(param.default, params.Depends):\r\n            sub_dependant = get_param_sub_dependant(\r\n                param=param, path=path, security_scopes=security_scopes\r\n            )\r\n            dependant.dependencies.append(sub_dependant)\r\n            continue\r\n        if add_non_field_param_to_dependency(param=param, dependant=dependant):\r\n            continue\r\n        param_field = get_param_field(\r\n            param=param, default_field_info=params.Query, param_name=param_name\r\n        )\r\n        if param_name in path_param_names:\r\n            assert is_scalar_field(\r\n                field=param_field\r\n            ), \"Path params must be of one of the supported types\"\r\n            if isinstance(param.default, params.Path):\r\n                ignore_default = False\r\n            else:\r\n                ignore_default = True\r\n            param_field = get_param_field(\r\n                param=param,\r\n                param_name=param_name,\r\n                default_field_info=params.Path,\r\n                force_type=params.ParamTypes.path,\r\n                ignore_default=ignore_default,\r\n            )\r\n            add_param_to_fields(field=param_field, dependant=dependant)\r\n        elif is_scalar_field(field=param_field):\r\n            add_param_to_fields(field=param_field, dependant=dependant)\r\n        elif isinstance(\r\n                param.default, (params.Query, params.Header)\r\n        ) and is_scalar_sequence_field(param_field):\r\n            add_param_to_fields(field=param_field, dependant=dependant)\r\n        else:\r\n            field_info = param_field.field_info\r\n            assert isinstance(\r\n                field_info, params.Body\r\n            ), f\"Param: {param_field.name} can only be a request body, using Body(...)\"\r\n            dependant.body_params.append(param_field)\r\n    return dependant\r\n\r\n\r\nclass TaskAPIRoute(APIRoute):\r\n    def __init__(\r\n            self,\r\n            path: str,\r\n            endpoint: Callable[..., Any],\r\n            *,\r\n            endpoint_params: Optional[Dict[str, Any]] = None,\r\n            response_model: Optional[Type[Any]] = None,\r\n            status_code: int = 200,\r\n            tags: Optional[List[str]] = None,\r\n            dependencies: Optional[Sequence[params.Depends]] = None,\r\n            summary: Optional[str] = None,\r\n            description: Optional[str] = None,\r\n            response_description: str = \"Successful Response\",\r\n            responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\r\n            deprecated: Optional[bool] = None,\r\n            name: Optional[str] = None,\r\n            methods: Optional[Union[Set[str], List[str]]] = None,\r\n            operation_id: Optional[str] = None,\r\n            response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\r\n            response_model_exclude: Optional[Union[SetIntStr, DictIntStrAny]] = None,\r\n            response_model_by_alias: bool = True,\r\n            response_model_exclude_unset: bool = False,\r\n            response_model_exclude_defaults: bool = False,\r\n            response_model_exclude_none: bool = False,\r\n            include_in_schema: bool = True,\r\n            response_class: Union[Type[Response], DefaultPlaceholder] = Default(\r\n                JSONResponse\r\n            ),\r\n            dependency_overrides_provider: Optional[Any] = None,\r\n            callbacks: Optional[List[BaseRoute]] = None,\r\n    ) -> None:\r\n        # normalise enums e.g. http.HTTPStatus\r\n        if isinstance(status_code, enum.IntEnum):\r\n            status_code = int(status_code)\r\n        self.path = path\r\n        self.endpoint_params = endpoint_params\r\n        self.endpoint = endpoint\r\n        self.name = get_name(endpoint) if name is None else name\r\n        self.path_regex, self.path_format, self.param_convertors = compile_path(path)\r\n        if methods is None:\r\n            methods = [\"GET\"]\r\n        self.methods: Set[str] = set([method.upper() for method in methods])\r\n        self.unique_id = generate_operation_id_for_path(\r\n            name=self.name, path=self.path_format, method=list(methods)[0]\r\n        )\r\n        self.response_model = response_model\r\n        if self.response_model:\r\n            assert (\r\n                    status_code not in STATUS_CODES_WITH_NO_BODY\r\n            ), f\"Status code {status_code} must not have a response body\"\r\n            response_name = \"Response_\" + self.unique_id\r\n            self.response_field = create_response_field(\r\n                name=response_name, type_=self.response_model\r\n            )\r\n            # Create a clone of the field, so that a Pydantic submodel is not returned\r\n            # as is just because it's an instance of a subclass of a more limited class\r\n            # e.g. UserInDB (containing hashed_password) could be a subclass of User\r\n            # that doesn't have the hashed_password. But because it's a subclass, it\r\n            # would pass the validation and be returned as is.\r\n            # By being a new field, no inheritance will be passed as is. A new model\r\n            # will be always created.\r\n            self.secure_cloned_response_field: Optional[\r\n                ModelField\r\n            ] = create_cloned_field(self.response_field)\r\n        else:\r\n            self.response_field = None  # type: ignore\r\n            self.secure_cloned_response_field = None\r\n        self.status_code = status_code\r\n        self.tags = tags or []\r\n        if dependencies:\r\n            self.dependencies = list(dependencies)\r\n        else:\r\n            self.dependencies = []\r\n        self.summary = summary\r\n        self.description = description or inspect.cleandoc(self.endpoint.__doc__ or \"\")\r\n        # if a \"form feed\" character (page break) is found in the description text,\r\n        # truncate description text to the content preceding the first \"form feed\"\r\n        self.description = self.description.split(\"\\f\")[0]\r\n        self.response_description = response_description\r\n        self.responses = responses or {}\r\n        response_fields = {}\r\n        for additional_status_code, response in self.responses.items():\r\n            assert isinstance(response, dict), \"An additional response must be a dict\"\r\n            model = response.get(\"model\")\r\n            if model:\r\n                assert (\r\n                        additional_status_code not in STATUS_CODES_WITH_NO_BODY\r\n                ), f\"Status code {additional_status_code} must not have a response body\"\r\n                response_name = f\"Response_{additional_status_code}_{self.unique_id}\"\r\n                response_field = create_response_field(name=response_name, type_=model)\r\n                response_fields[additional_status_code] = response_field\r\n        if response_fields:\r\n            self.response_fields: Dict[Union[int, str], ModelField] = response_fields\r\n        else:\r\n            self.response_fields = {}\r\n        self.deprecated = deprecated\r\n        self.operation_id = operation_id\r\n        self.response_model_include = response_model_include\r\n        self.response_model_exclude = response_model_exclude\r\n        self.response_model_by_alias = response_model_by_alias\r\n        self.response_model_exclude_unset = response_model_exclude_unset\r\n        self.response_model_exclude_defaults = response_model_exclude_defaults\r\n        self.response_model_exclude_none = response_model_exclude_none\r\n        self.include_in_schema = include_in_schema\r\n        self.response_class = response_class\r\n\r\n        assert callable(endpoint), \"An endpoint must be a callable\"\r\n        self.dependant = new_dependant(path=self.path_format, call=endpoint, endpoint_signature=new_typed_signature(endpoint, self.endpoint_params))\r\n        for depends in self.dependencies[::-1]:\r\n            self.dependant.dependencies.insert(\r\n                0,\r\n                get_parameterless_sub_dependant(depends=depends, path=self.path_format),\r\n            )\r\n        self.body_field = get_body_field(dependant=self.dependant, name=self.unique_id)\r\n        self.dependency_overrides_provider = dependency_overrides_provider\r\n        self.callbacks = callbacks\r\n        self.app = request_response(self.get_route_handler())\r\n\r\n\r\nclass TaskAPIRouter(APIRouter):\r\n    def add_task_api_route(\r\n            self,\r\n            path: str,\r\n            endpoint: Callable[..., Any],\r\n            *,\r\n            endpoint_params: Optional[Dict[str, Any]] = None,\r\n            response_model: Optional[Type[Any]] = None,\r\n            status_code: int = 200,\r\n            tags: Optional[List[str]] = None,\r\n            dependencies: Optional[Sequence[params.Depends]] = None,\r\n            summary: Optional[str] = None,\r\n            description: Optional[str] = None,\r\n            response_description: str = \"Successful Response\",\r\n            responses: Optional[Dict[Union[int, str], Dict[str, Any]]] = None,\r\n            deprecated: Optional[bool] = None,\r\n            methods: Optional[Union[typing.Set[str], List[str]]] = None,\r\n            operation_id: Optional[str] = None,\r\n            response_model_include: Optional[Union[SetIntStr, DictIntStrAny]] = None,\r\n            response_model_exclude: Optional[Union[SetIntStr, DictIntStrAny]] = None,\r\n            response_model_by_alias: bool = True,\r\n            response_model_exclude_unset: bool = False,\r\n            response_model_exclude_defaults: bool = False,\r\n            response_model_exclude_none: bool = False,\r\n            include_in_schema: bool = True,\r\n            response_class: Union[Type[Response], DefaultPlaceholder] = Default(\r\n                JSONResponse\r\n            ),\r\n            name: Optional[str] = None,\r\n            route_class_override: Optional[Type[APIRoute]] = TaskAPIRoute,\r\n            callbacks: Optional[List[BaseRoute]] = None,\r\n    ) -> None:\r\n        route_class = route_class_override or self.route_class\r\n        responses = responses or {}\r\n        combined_responses = {**self.responses, **responses}\r\n        current_response_class = get_value_or_default(\r\n            response_class, self.default_response_class\r\n        )\r\n        current_tags = self.tags.copy()\r\n        if tags:\r\n            current_tags.extend(tags)\r\n        current_dependencies = self.dependencies.copy()\r\n        if dependencies:\r\n            current_dependencies.extend(dependencies)\r\n        current_callbacks = self.callbacks.copy()\r\n        if callbacks:\r\n            current_callbacks.extend(callbacks)\r\n        route = route_class(\r\n            self.prefix + path,\r\n            endpoint=endpoint,\r\n            endpoint_params=endpoint_params,\r\n            response_model=response_model,\r\n            status_code=status_code,\r\n            tags=current_tags,\r\n            dependencies=current_dependencies,\r\n            summary=summary,\r\n            description=description,\r\n            response_description=response_description,\r\n            responses=combined_responses,\r\n            deprecated=deprecated or self.deprecated,\r\n            methods=methods,\r\n            operation_id=operation_id,\r\n            response_model_include=response_model_include,\r\n            response_model_exclude=response_model_exclude,\r\n            response_model_by_alias=response_model_by_alias,\r\n            response_model_exclude_unset=response_model_exclude_unset,\r\n            response_model_exclude_defaults=response_model_exclude_defaults,\r\n            response_model_exclude_none=response_model_exclude_none,\r\n            include_in_schema=include_in_schema and self.include_in_schema,\r\n            response_class=current_response_class,\r\n            name=name,\r\n            dependency_overrides_provider=self.dependency_overrides_provider,\r\n            callbacks=current_callbacks,\r\n        )\r\n        self.routes.append(route)\r\n\r\n\r\ntask_api_router = TaskAPIRouter()\r\n\r\n\r\ndef task_api_router_init():\r\n    for idx, (task_id, task_message) in enumerate(TasksManager.__task_manage__.items()):\r\n        task_api_router.add_task_api_route(path=\"/\" + task_id,\r\n                                           endpoint=task_message['wrap'],\r\n                                           endpoint_params=task_message['params'],\r\n                                           # response_model=Response,\r\n                                           methods=[\"POST\"],\r\n                                           name=task_id,\r\n                                           summary=task_message[\"summer\"])\r\n\r\n    return task_api_router\r\n```\r\ni change dependant by`new_typed_signature` and `new_dependant` .\r\n\r\nMy requirement is to generate API through function signature, including document and route",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3435/comments",
    "author": "Euraxluo",
    "comments": [
      {
        "user": "Euraxluo",
        "created_at": "2021-06-30T12:31:27Z",
        "body": "include_router function，bug use all `add*` function, that is a bug."
      },
      {
        "user": "raphaelauv",
        "created_at": "2021-11-21T11:03:04Z",
        "body": "Sub route is buggy , it's currently not possible to do versioning of routes without sub app."
      }
    ]
  },
  {
    "number": 3388,
    "title": "Adding one global Exception Handler",
    "created_at": "2021-06-19T16:38:55Z",
    "closed_at": "2023-02-27T22:49:52Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3388",
    "body": "Let's say I have 5 different exceptions that I want to handle. I want to create 5 different files, and then apply them once in main.py (like for router) how can I do that?\r\nI want in main.py something like this:\r\n```\r\napp.add_exception_handler(my_global_handler)\r\n```\r\nand in my folder I have 5 files with different exception, here's the example of one:\r\n```\r\n@app.exception_handler(ParamValidationError)\r\n@app.exception_handler(ClientError)\r\nasync def boto_param_validation_error(request: Request, exc: ParamValidationError):\r\n    logger.error(\"[boto_param_validation_error] Error. %s\", exc)\r\n    return JSONResponse(\r\n        status_code=400,\r\n        content={\"message\": \"Bad request.\"},\r\n    )\r\n```\r\n\r\nin case with router I did\r\n```\r\napi_router = APIRouter()\r\napi_router.include_router(login.router, prefix=\"/login\", tags=[\"login\"])\r\n...\r\n...\r\n```\r\nand then in main.py `app.include_router(api_router)` is there anything similar that I can do with exception handlers?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3388/comments",
    "author": "PetrShchukin",
    "comments": [
      {
        "user": "nzig",
        "created_at": "2021-06-20T06:16:14Z",
        "body": "You could just write a function that takes `app` as a parameter:\r\n```python\r\ndef add_exception_handlers(app: FastAPI) -> None:\r\n    @app.exception_handler(ClientError)\r\n    async def boto_param_validation_error():\r\n        ...\r\n\r\n\r\n    @app.exception_handler(AnotherException)\r\n    async def another handler():\r\n        ... \r\n```\r\n\r\nAnd then call it like\r\n```python\r\nadd_exception_handlers(app)\r\n```"
      },
      {
        "user": "PetrShchukin",
        "created_at": "2021-06-20T21:09:48Z",
        "body": "@nzig yeah, I thought about that, I was wondering if passing the `app` is a good practice. Well, if there's no way of doing it in a fancy way, will do that."
      },
      {
        "user": "decastromonteiro",
        "created_at": "2021-09-23T13:51:04Z",
        "body": "Hi @PetrShchukin , I was also checking how to do this in a fancy elegant way. It turns out that FastAPI has a method called `add_exception_handler` that you can use to do this.\r\n\r\nYour exception handler must accept `request` and `exception`\r\n\r\nHere is an example of my exception handlers definitions:\r\n\r\n```py\r\nfrom fastapi import Request, status\r\nfrom fastapi.responses import JSONResponse\r\n\r\nfrom api.core.log.caishen_logger import logger\r\n\r\nfrom .authentication import AuthenticationProviderException\r\nfrom .authorization import UnAuthorizedUser\r\n\r\nasync def unauthorized_user_handler(\r\n    request: Request, exc: UnAuthorizedUser\r\n) -> JSONResponse:\r\n    logger.warning(**exc.log.dict())\r\n    headers = getattr(exc, \"headers\", None)\r\n    if headers:\r\n        return JSONResponse(\r\n            {\"detail\": exc.log.msg},\r\n            status_code=exc.log.status_code,\r\n            headers=headers,\r\n        )\r\n    else:\r\n        return JSONResponse(\r\n            {\"detail\": exc.log.msg},\r\n            status_code=exc.log.status_code,\r\n        )\r\n\r\n\r\nasync def authentication_provider_error_handler(\r\n    request: Request,\r\n    exc: AuthenticationProviderException,\r\n) -> JSONResponse:\r\n    logger.error(**exc.log.dict())\r\n    headers = getattr(exc, \"headers\", None)\r\n    if headers:\r\n        return JSONResponse(\r\n            {\"detail\": exc.log.msg},\r\n            status_code=exc.log.status_code,\r\n            headers=headers,\r\n        )\r\n    else:\r\n        return JSONResponse(\r\n            {\"detail\": exc.log.msg},\r\n            status_code=exc.log.status_code,\r\n        )\r\n```\r\n\r\nAnd how I'm using it on the main.py file:\r\n\r\n```py\r\nfrom fastapi import FastAPI\r\nfrom fastapi.middleware.cors import CORSMiddleware\r\n\r\nfrom api.core import exceptions\r\nfrom api.core.exceptions.handlers import (\r\n    authentication_provider_error_handler,\r\n    unauthorized_user_handler,\r\n)\r\nfrom api.utils.database import create_super_user\r\n\r\nfrom .routers import login, users\r\nfrom .settings import settings\r\n\r\napp = FastAPI(\r\n    title=settings.PROJECT_NAME,\r\n    description=\"This API handles User Accounts for the Caishen App\",\r\n)\r\n\r\n# Add Custom Exception Handlers\r\napp.add_exception_handler(\r\n    exceptions.UnAuthorizedUser, handler=unauthorized_user_handler\r\n)\r\n\r\napp.add_exception_handler(\r\n    exceptions.AuthenticationProviderMissmatch,\r\n    handler=authentication_provider_error_handler,\r\n)\r\n ...\r\n```"
      }
    ]
  },
  {
    "number": 3374,
    "title": "Flexible response body based on user input of list of fields as a query parameter.",
    "created_at": "2021-06-15T04:17:28Z",
    "closed_at": "2023-02-28T16:55:45Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3374",
    "body": "```Python\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/blogs/?fieldset=creator,name\")\r\ndef read_root(listOfFields=fieldset):\r\n'''\r\nreturn response which should only contain two fields but blogs resource may contain 100 fields.    \r\n\r\n```\r\n\r\n### Description\r\n\r\nI have a say two tables blogs and users. One blog can have multiple creators. So its one to many relationship.\r\nTo achieve above functionality how should we go ahead ?\r\n\r\n1. Is it possible with FastAPIs  pydantic response schema ? Can schema be created runtime based on query parameter ?\r\n2. Or We should create a query based on query parameter and create a response instead of using response schema ?\r\n3. If second option is good can we use SQL alchemy or use raw sqls ? \r\n\r\n### Environment\r\n\r\n* OS: [Windows]:\r\n* FastAPI Version [0.65.2]:\r\n* Python version:3.9.0\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3374/comments",
    "author": "parimalp-bi",
    "comments": [
      {
        "user": "sathoune",
        "created_at": "2021-06-17T19:58:56Z",
        "body": "Do you mean something like this:\r\n\r\n```python\r\nfrom typing import Set\r\nfrom pydantic import BaseModel\r\n\r\n\r\nclass BigTable(BaseModel):\r\n    name: str\r\n    age: int\r\n    something_else: str\r\n\r\n\r\nitem = BigTable(\r\n    name=\"Michael\",\r\n    age=66,\r\n    something_else=\"mamma mia\",\r\n)\r\n\r\n\r\ndef serialize_and_include(instance: BigTable, to_include: Set):\r\n    return instance.json(include=to_include)\r\n\r\n\r\nprint(serialize_and_include(item, {\"age\", \"something_else\"}))\r\nprint(serialize_and_include(item, {\"name\"}))\r\n```\r\n\r\nThat prints for me:\r\n```bash\r\n{\"age\": 66, \"something_else\": \"mamma mia\"}\r\n{\"name\": \"Michael\"}\r\n```\r\n\r\nYou could do the opposite with `exclude` on `.json`, `.dict` method should have the same parameters."
      },
      {
        "user": "sathoune",
        "created_at": "2021-06-17T20:18:21Z",
        "body": "I have a working app for you expanding on the above example:\r\n\r\n```python\r\nfrom typing import Set\r\n\r\nimport fastapi\r\nfrom pydantic import BaseModel\r\n\r\n\r\nclass BigTable(BaseModel):\r\n    name: str\r\n    age: int\r\n    something_else: str\r\n\r\n\r\nclass FalsyBigTable(BigTable):\r\n    name: str = None\r\n    age: int = None\r\n    something_else: str = None\r\n\r\nitem = BigTable(\r\n    name=\"Michael\",\r\n    age=66,\r\n    something_else=\"mamma mia\",\r\n)\r\n\r\n\r\ndef serialize_and_include(instance: BigTable, to_include: Set):\r\n    return instance.dict(include=to_include)\r\n\r\n\r\napp = fastapi.FastAPI()\r\n\r\n\r\n@app.get(\r\n    \"/fields\",\r\n    response_model=FalsyBigTable,\r\n    response_model_exclude_none=True\r\n)\r\ndef get_fields(include: str = fastapi.Query(...)):\r\n    parsed_query = set(include.split(','))\r\n    return serialize_and_include(item, parsed_query)\r\n```\r\nrun with\r\n```bash\r\nuvicorn main:app --reload\r\n```\r\nYou should be able to query the specific fields with keys separated with `,`. \r\n\r\nI included a response model with None values so you can get validation and documentation generated. You could skip `response_model` and `response_model_exclude_none` if you don't need that."
      }
    ]
  },
  {
    "number": 3366,
    "title": "Use alias to query parameter without setting the default value?",
    "created_at": "2021-06-12T19:34:44Z",
    "closed_at": "2023-02-27T22:49:25Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3366",
    "body": "Let's say, my API endpoint must implement a required parameter 'from' by contract. I cannot use 'from' directly, as it's one of the Python reserved words. So I use the alias feature:\r\n\r\n```\r\n@router.get('/test/')\r\nasync def get_test(from_: int = Query(0, alias='from')):\r\n\tpass\r\n```\r\n\r\nNow I can use 'from' parameter, but it becomes optional, as Query object requires the 'default' argument to be set. Any ideas how to get a query parameter aliased and required at the same time?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3366/comments",
    "author": "zdytch",
    "comments": [
      {
        "user": "Kludex",
        "created_at": "2021-06-12T19:36:30Z",
        "body": "```python\r\n@router.get('/test/')\r\nasync def get_test(from_: int = Query(..., alias='from')):\r\n\tpass\r\n```"
      },
      {
        "user": "zdytch",
        "created_at": "2021-06-12T19:41:20Z",
        "body": "@Kludex great, thank you!!"
      }
    ]
  },
  {
    "number": 3354,
    "title": "Weird `args` and `kwds` in path schema when using Generic subclass as dependency and using python 3.8",
    "created_at": "2021-06-10T03:30:36Z",
    "closed_at": "2023-02-27T22:48:56Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3354",
    "body": "### Problem\r\n\r\nHere is a minimal code to reproduce the problem:\r\n\r\n```Python\r\n# filename: main.py\r\nfrom typing import TypeVar, Generic\r\nfrom fastapi import FastAPI, Depends\r\n\r\nT = TypeVar(\"T\")\r\n\r\nclass Foo(Generic[T]):\r\n    pass\r\n\r\n\r\nclass Bar(Foo[int]):\r\n    pass\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/\")\r\nasync def homepage(bar: Bar = Depends()):\r\n    pass\r\n```\r\n\r\nRun the above code with `uvicorn main:app`, with python 3.8, the generated path schema is:\r\n\r\n```json\r\n{\r\n  \"paths\": {\r\n    \"/\": {\r\n      \"get\": {\r\n        \"summary\": \"Homepage\",\r\n        \"operationId\": \"homepage__get\",\r\n        \"parameters\": [\r\n          {\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"title\": \"Args\"\r\n            },\r\n            \"name\": \"args\",\r\n            \"in\": \"query\"\r\n          },\r\n          {\r\n            \"required\": true,\r\n            \"schema\": {\r\n              \"title\": \"Kwds\"\r\n            },\r\n            \"name\": \"kwds\",\r\n            \"in\": \"query\"\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Successful Response\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \r\n                }\r\n              }\r\n            }\r\n          },\r\n          \"422\": {\r\n            \"description\": \"Validation Error\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n}\r\n```\r\n\r\nWhen using python 3.9, the path schema is:\r\n\r\n```json\r\n{\r\n  \"paths\": {\r\n    \"/\": {\r\n      \"get\": {\r\n        \"summary\": \"Homepage\",\r\n        \"operationId\": \"homepage__get\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Successful Response\",\r\n            \"content\": {\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nNote that, with python 3.9, the generated schema is expected, but with python 3.8, there are wired parameters `args` and `kwds`. \r\n\r\n\r\n### Environment\r\n\r\nPython 3.8 env:\r\n\r\n```sh\r\n$ uname\r\nDarwin\r\n\r\n$ python --version\r\nPython 3.8.2\r\n\r\n$ pip freeze\r\nasgiref==3.3.4\r\nclick==8.0.1\r\nfastapi==0.65.1\r\nh11==0.12.0\r\npydantic==1.8.2\r\nstarlette==0.14.2\r\ntyping-extensions==3.10.0.0\r\nuvicorn==0.14.0\r\n```\r\n\r\nPython 3.9 env:\r\n\r\n```sh\r\n$ uname\r\nDarwin\r\n\r\n$ python --version\r\nPython 3.9.0\r\n\r\n$ pip freeze\r\nasgiref==3.3.4\r\nclick==8.0.1\r\nfastapi==0.65.1\r\nh11==0.12.0\r\npydantic==1.8.2\r\nstarlette==0.14.2\r\ntyping-extensions==3.10.0.0\r\nuvicorn==0.14.0\r\n```\r\n\r\nI'm not familiar with internals of FastAPI's typing system, so I don't know how to dig further to figure out the cause. Can anyone help to solve the problem? \r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3354/comments",
    "author": "StephenPCG",
    "comments": [
      {
        "user": "francipvb",
        "created_at": "2021-06-10T12:56:46Z",
        "body": "Hello,\r\n\r\nWhat happen if you add an attribute to the parent schema or to the child schema?"
      },
      {
        "user": "StephenPCG",
        "created_at": "2021-06-10T13:16:47Z",
        "body": "```python\r\n# Code-1\r\nclass Foo(Generic[T]):\r\n    def __init__(self, a: int):\r\n        self.a = a\r\n\r\n\r\nclass Bar(Foo[int]):\r\n    pass\r\n\r\n# Code-2\r\nclass Foo(Generic[T]):\r\n    pass\r\n\r\n\r\nclass Bar(Foo[int]):\r\n    def __init__(self, a: int):\r\n        self.a = a\r\n\r\n# Code-3\r\nclass Foo(Generic[T]):\r\n    def __init__(self, a: int):\r\n        self.a = a\r\n\r\n\r\nclass Bar(Foo[int]):\r\n    def __init__(self):\r\n        pass\r\n```\r\n\r\n| Code | Python 3.8 | Python 3.9 |\r\n| --- | --- | --- |\r\n| Code-1 | `args`, `kwds` | `a` |\r\n| Code-2 | `args`, `kwds` | `a` |\r\n| Code-3 | `args`, `kwds` | none |\r\n\r\nWith the above three variants of code, Python 3.9 always works as expected, however Python 3.8 always behave the same."
      },
      {
        "user": "uriyyo",
        "created_at": "2021-06-27T10:29:48Z",
        "body": "@StephenPCG That's because of how `inspect.signature` function behaves at python 3.8.\r\n\r\nYou can fix this behavior by introducing helper mixin class:\r\n```py\r\nimport inspect\r\n\r\nclass GenericSignatureMixin:\r\n    def __init_subclass__(cls, **kwargs):\r\n        sign = inspect.signature(cls.__init__)\r\n\r\n        params = iter(sign.parameters.values())\r\n        next(params)  # skip first parameter\r\n\r\n        cls.__signature__ = inspect.Signature(\r\n            parameters=[*params],\r\n            return_annotation=sign.return_annotation,\r\n        )\r\n```\r\n\r\nAnd usage will be pretty simple (notice that mixin should go after `Generic` class):\r\n```py\r\nclass Foo(Generic[T], GenericSignatureMixin):\r\n    pass\r\n\r\n\r\nclass Bar(Foo[int]):\r\n    pass\r\n```\r\n"
      },
      {
        "user": "StephenPCG",
        "created_at": "2021-06-28T02:03:29Z",
        "body": "@uriyyo Thanks! This works for me! "
      },
      {
        "user": "uriyyo",
        "created_at": "2021-07-07T14:56:10Z",
        "body": "@StephenPCG Happy to hear that. I believe you can close this issue."
      }
    ]
  },
  {
    "number": 3341,
    "title": "Map multiple api endpoints to a single path operation function",
    "created_at": "2021-06-07T10:05:13Z",
    "closed_at": "2023-02-27T22:48:51Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3341",
    "body": "Is there a way to map multiple api endpoints to a single path operation function? For example, if I make a get request \"/get-employees\" or \"/employees\", can they both map to the same path operation function like below?\r\n\r\n### Example\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get([\"/get-employees\", \"/employees\"])\r\ndef read_root():\r\n    return {\"Hello\": \"World\"}\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3341/comments",
    "author": "samjoy",
    "comments": [
      {
        "user": "stlucasgarcia",
        "created_at": "2021-06-07T20:38:02Z",
        "body": "You need to create two separate decorators:\r\n\r\n```py\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\n@app.get(\"/get-employees\")\r\n@app.get(\"/employees\")\r\ndef read_root():\r\n    return {\"Hello\": \"World\"}\r\n```"
      },
      {
        "user": "samjoy",
        "created_at": "2021-06-08T05:07:39Z",
        "body": "Thank you"
      }
    ]
  },
  {
    "number": 3321,
    "title": "Loading ML Models in Backgroud",
    "created_at": "2021-06-02T02:21:39Z",
    "closed_at": "2023-02-27T22:48:36Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3321",
    "body": "Hi, I've 3 deep learning models that I load when the application starts (by creating a global object) and it takes around 6-7 seconds to load completely. The problem is the endpoints do not start working until the models are loaded completely and in my Kubernetes, I cannot add a health check because it would give me connection failed.\r\n\r\nIs there a way to load the models in the background and make the health check endpoint working?\r\n\r\nThank you",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3321/comments",
    "author": "gaganmanku96",
    "comments": [
      {
        "user": "raphaelauv",
        "created_at": "2021-06-02T10:59:13Z",
        "body": "NO you should not do it by a background process ! if your API is about exposing a ML model , than wait for it ! \r\n\r\n```yaml\r\n...\r\n          readinessProbe:\r\n            httpGet:\r\n              path: /health\r\n              port: 80\r\n            initialDelaySeconds: 20\r\n```\r\n\r\nput an initialDelaySeconds to your readinessProbe in the kubernetes yaml deployment"
      },
      {
        "user": "gaganmanku96",
        "created_at": "2021-06-02T13:52:12Z",
        "body": "Got it. Thanks @raphaelauv "
      }
    ]
  },
  {
    "number": 3318,
    "title": "how active depend",
    "created_at": "2021-06-01T13:45:25Z",
    "closed_at": "2023-02-27T22:48:34Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3318",
    "body": "HI \r\n          I have a question, please see the code\r\n\r\n`\r\n\r\nclass TriggerName(str, Enum):\r\n    interval = 'interval'\r\n    date = 'date'\r\n    cron = 'cron'\r\n\r\n@as_form\r\nclass Interval(BaseModel):\r\n    id: str = Form(...)\r\n    name: str = Form(...)\r\n    job_name: str = Form(...)\r\n    trigger: TriggerName = Form(...)\r\n    args: Optional[list] = Form([])\r\n    weeks: Optional[int] = Form(0)\r\n    day: Optional[int] = Form(0)\r\n    hours: Optional[int] = Form(0)\r\n    minute: Optional[int] = Form(0)\r\n    seconds: Optional[int] = Form(0)\r\n    start_date: Optional[str] = Form(None)\r\n    end_date: Optional[str] = Form(None)\r\n    jitter: Optional[int] = Form(None)\r\n\r\n@as_form\r\nclass Date(BaseModel):\r\n    id: str = Form(...)\r\n    name: str = Form(...)\r\n    job_name: str = Form(...)\r\n    trigger: TriggerName = Form(...)\r\n    args: Optional[list] = Form([])\r\n    year: int = Form(...)\r\n    month: int = Form(...)\r\n    day: int = Form(...)\r\n    hours: Optional[int] = Form(0)\r\n    minute: Optional[int] = Form(0)\r\n    seconds: Optional[int] = Form(0)\r\n    jitter: Optional[int] = Form(None)\r\n\r\nasync def check_trigger(trigger: TriggerName = Form(...)):\r\n    return {'trigger': trigger}\r\n`\r\n    Now I want the trigger value to be \"date\", and I hope depend Date.as_form, when the trigger value is \"Interval\", depend Interval.as_form ! Ask for guidance，thx everybody ",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3318/comments",
    "author": "zhaoliguangLFL",
    "comments": [
      {
        "user": "hellocoldworld",
        "created_at": "2021-06-01T15:03:51Z",
        "body": "Hello @zhaoliguangLFL your question is very unclear. Some things you can do so we can help better are:\r\n* Format the code properly.\r\n* Please, remove any code that isn't closely related to the question (do we need to know every attribute name in order to see what is happenning?). At the same time, please include all the relevant code (for example, what is the decorator `as_form`?).\r\n* Please ask a question. What is it that you can't do?\r\n"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-22T16:25:02Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 3316,
    "title": "Does it make sense to use ThreadPoolExecutor in fastAPI",
    "created_at": "2021-06-01T09:18:26Z",
    "closed_at": "2023-02-27T22:48:30Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3316",
    "body": "Hi All,\r\n\r\nI have a super simple app that has only one endpoint. This endpoint loads data from a database and this is parallelised\r\nusing a ThreadPoolExecutor. For example:\r\n\r\n```\r\n@app.get('/load_from_db')\r\ndef load_from_db():\r\n    ....\r\n    with concurrent.futures.ThreadPoolExecutor() as executor:\r\n        for dataset in datasets:\r\n            executor.submit(dataset.load_from_database)\r\n    ....\r\n```\r\nNow I changed from Flask to FastAPI. I have declared my function as `def load_from_db` such that it is executed in a different thread-pool and does not block the main thread.\r\n\r\n**OUT-DATED**\r\nAs a result my service now is 10x slower than using Flasks? I tried to set max_workers=5 but did no really help. What is the reason?\r\n\r\n**EDIT:**\r\nI created again some thorough test cases and it turns out fastAPI is not slower for me. Let's change the question to:\r\n\r\n**Is it safe & does it make sense to use ThreadPoolExecutor in fastAPI?**\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3316/comments",
    "author": "hjilke",
    "comments": [
      {
        "user": "hellocoldworld",
        "created_at": "2021-06-01T15:06:55Z",
        "body": "Wild guess, but in FastAPI you're already running the endpoint in a different thread, so the main thread is not blocked. So you can get rid of the `concurrent.futures.ThreadPoolExecutor`."
      },
      {
        "user": "nzig",
        "created_at": "2021-06-02T14:41:52Z",
        "body": "@hellocoldworld is correct. \r\nI will add that in some cases you do actually need a thread pool, if you want to mix async with blocking operations. In that case you can use Starlette's `run_in_threadpool`:\r\n```python\r\nfrom starlette.concurrency import run_in_threadpool\r\n\r\n@app.get('/')\r\nasync def():\r\n   await do_something_async()\r\n   await run_in_threadpool(do_something_blocking)\r\n```\r\n\r\nThis is actually what FastAPI uses internally if you define your handler as `def` (and not `async def`)."
      },
      {
        "user": "hjilke",
        "created_at": "2021-06-02T14:48:44Z",
        "body": "Do you think there is a performance disadvantage of using a ThreadPoolExecuter in a regular `def` function in FastAPI?"
      },
      {
        "user": "nzig",
        "created_at": "2021-06-02T15:39:51Z",
        "body": "Yes, it's slightly slower. If you use `ThreadPoolExecuter` in a `def` function in FastAPI, what happens is:\r\n\r\n1. Thread 1 runs FastAPI. Since FastAPI is an async application and your `def` function might block, it calls it with `run_in_threadpool`, which runs it in a thread 2.\r\n2. Thread 2 runs your function. Since you created a `ThreadPoolExecuter`, this creates thread 3.\r\n3. Thread 3 runs whatever you did with the `ThreadPoolExecuter`.\r\n\r\nThis means for the handler to complete you need 4 thread switches (1->2->3->2->1).\r\n\r\nIf you use an `async def` there are 0 thread switches, and if you use `async def` with `run_in_threadpool` there are 2. Since each thread switch adds overhead, using `ThreadPoolExecuter` inside a `def` function will probably be slower.\r\n"
      },
      {
        "user": "hjilke",
        "created_at": "2021-06-04T15:10:41Z",
        "body": "Thanks for all the answers!"
      }
    ]
  },
  {
    "number": 3308,
    "title": "Map query parameters to custom function parameters",
    "created_at": "2021-05-29T13:42:49Z",
    "closed_at": "2023-02-27T22:48:22Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3308",
    "body": "Is there a way to map query parameters to custom function parameters? For example, if the request is\r\n **/items?query1=q1&query2=q2**, then can I define function parameters as shown below.\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\n@app.get(\"/items\")\r\ndef items(param1: str, param2: str):\r\n    return {\"Hello\": \"World\"}\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3308/comments",
    "author": "samjoy",
    "comments": [
      {
        "user": "Kludex",
        "created_at": "2021-05-29T14:00:55Z",
        "body": "```python\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\n@app.get(\"/items\")\r\ndef items(param1: str = Query(..., alias=\"query1\"), param2: str = Query(..., alias=\"query2\")):\r\n    return {\"Hello\": \"World\"}\r\n```"
      },
      {
        "user": "samjoy",
        "created_at": "2021-05-29T14:21:25Z",
        "body": "Thank you @Kludex "
      }
    ]
  },
  {
    "number": 3301,
    "title": "jsonable_encoder() vs dict() to obtain a dict from a BaseModel object",
    "created_at": "2021-05-27T11:31:06Z",
    "closed_at": "2023-02-28T16:54:21Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3301",
    "body": "Apparently there are two ways to convert a BaseModel object to a dict format :\r\nthe native BaseModel dict() function and the fastapi jsonable_encoder() that used internally by the framework .\r\n\r\nwhich one should I use ?\r\nis there a difference in the performance ?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3301/comments",
    "author": "imyosh",
    "comments": [
      {
        "user": "paloderosa",
        "created_at": "2021-05-28T13:52:25Z",
        "body": "Both produce dictionaries, but `dict` might produce objects like `datetime` or `Enum`, while `jsonable_encoder` produces serialized fields (it would convert those objects into `str`, for example)."
      }
    ]
  },
  {
    "number": 3289,
    "title": "data rows from Postgresql Database seem to not map to Pydantic schema",
    "created_at": "2021-05-25T22:09:59Z",
    "closed_at": "2023-02-28T16:54:09Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3289",
    "body": "I have recently switched to Postgresql from MySQL and have come across an anomaly.\r\n\r\nIn MySQL I could fetch this from Database and it would be cast into Pydantic schema automatically.\r\n\r\n```\r\nasync def get_device(device_id: str) -> Device:\r\n    query = DeviceTable.select().where(DeviceTable.c.id == device_id)\r\n    return await db.fetch_one(query)\r\n```\r\n\r\n```\r\nclass Device(BaseModel):\r\n    id: str\r\n    type: DeviceType\r\n    created_at: datetime\r\n    last_login_at: datetime\r\n    is_banned: bool\r\n```\r\n\r\nHowever when using Postgres this conversion doesn't seem to happen.\r\n\r\nFor `device.is_banned` I get the error message ```{AttributeError}'Record' object has no attribute 'is_banned'```.\r\n\r\nThe device object is in this case a Record object ```<databases.backends.postgres.Record object at 0x10d2c9860>``` instead of Pydantic Schema.\r\n\r\nWhy would FastAPI's behaviour change only because a different database is used? I can't find anything in the documentation about this.\r\n\r\n**UPDATE**\r\nI seem to have found a workaround. I have to cast the record explicitly into the Pydantic schema.\r\n\r\n```\r\nasync def get_device(device_id: str) -> Device:\r\n    query = DeviceTable.select().where(DeviceTable.c.id == device_id)\r\n    record = await db.fetch_one(query)\r\n    return Device(**record)\r\n```\r\n\r\nThis is quite odd that it doesn't happen automatically. I have to change code because the underlying database has changed. The worse part is that when no record has been found, the cast will crash. Hence I have to make more repetitive changes:\r\n\r\n```\r\nasync def get_device(device_id: str) -> Optional[Device]:\r\n    query = DeviceTable.select().where(DeviceTable.c.id == device_id)\r\n    record = await db.fetch_one(query)\r\n    if record:\r\n        return Device(**record)\r\n    else:\r\n        return None\r\n```\r\n\r\nAny advise please?\r\nMany Thanks,\r\nHouman\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3289/comments",
    "author": "houmie",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2021-05-27T12:36:54Z",
        "body": "Hi @houmie - I'm not sure why you think fastapi does automatic casting within your code, it definitely doesn't. The only situation it does \"casting\" is when you return a model from an endpoint with a schema defined"
      },
      {
        "user": "houmie",
        "created_at": "2021-05-28T07:09:57Z",
        "body": "Hi Mause,\r\n\r\nThank you for your reply. \r\n\r\nThis is caused by the underlying postgres library being used. I'm guessing there is some magic going on in the Record object of asyncpg. My guess is that the returned Record from the library does not expose the properties. Thus it requires to manually select the attributes to be fed into the pydantic model.\r\n\r\nThe function I provided above does the casting automatically when aiomysql is used (MySQL is the underlying database). The object I receive from that function is truly a Pydantic \"Device\" object. \r\n\r\nThis has been my findings since I asked the question. :-) "
      }
    ]
  },
  {
    "number": 3268,
    "title": "Path parameter redefines built-in",
    "created_at": "2021-05-21T10:19:24Z",
    "closed_at": "2023-02-27T22:46:45Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3268",
    "body": "I would like to use a path parameter with the name \"id\". However, it is not the best idea to use \"id\" as a function argument, since it redefines a built-in name. Also pylint complains about this.\r\nIs there a possibility to have the path parameter and the function argument use different names? For example id and id_?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3268/comments",
    "author": "alexschoeberl",
    "comments": [
      {
        "user": "Kludex",
        "created_at": "2021-05-21T11:05:54Z",
        "body": "```python\r\nfrom fastapi import FastAPI, Path\r\n\r\napp = FastAPI()\r\n\r\n@app.get(\"/{id}\")\r\ndef something(id_: int = Path(..., alias=\"id\")):\r\n    ...\r\n```"
      }
    ]
  },
  {
    "number": 3264,
    "title": "How to deploy fastapi on windows server 2019?",
    "created_at": "2021-05-21T01:56:27Z",
    "closed_at": "2023-02-28T16:53:39Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3264",
    "body": "### Description\r\n I want to depoly app to windows server . I use 'python main.py ' in cmd line to run my application ,and I don't think it the right way.\r\n \r\n### Additional context\r\n\r\n<!-- Add any other context or screenshots about the question here. -->\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3264/comments",
    "author": "ftqiao",
    "comments": [
      {
        "user": "badger-py",
        "created_at": "2022-05-20T15:15:57Z",
        "body": "Hi!\r\nBuy Linux server :)\r\nOn the Linux server install nginx, setup it as a proxy server. Run uvicorn is systemd unit"
      },
      {
        "user": "maxiaojunwolf",
        "created_at": "2022-07-05T05:14:48Z",
        "body": "# I use IIS,but there are a lot of problems, like the on_startup、on_shutdown  funcs do't work,win32com.......\r\nfrom a2wsgi import ASGIMiddleware\r\nwsgi_app = ASGIMiddleware(app)"
      }
    ]
  },
  {
    "number": 3261,
    "title": "Tutorial code raises mypy dict entry incompatible type errors",
    "created_at": "2021-05-20T22:50:38Z",
    "closed_at": "2023-02-28T16:53:37Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3261",
    "body": "Didn't find a similar error issue, I'm using PopOs with mypy 0.812\r\n\r\nfrom typing import Optional\r\n\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/items/\")\r\n\r\nasync def read_items(q: Optional[str] = None):\r\n\r\n    results = {\"items\": [{\"item_id\": \"Foo\"}, {\"item_id\": \"Bar\"}]}\r\n    if q:\r\n        results.update({\"q\": q})\r\n    return results\r\n\r\nthrows the following mypy error:\r\nerror: Dict entry 0 has incompatible type \"str\": \"str\"; expected \"str\": \"List[Dict[str, str]]\"\r\n\r\n\r\n\r\n\r\nalso this example raises a similar error: \r\n\"\"\"requestbody+ path + query params\"\"\"\r\nfrom typing import Optional\r\nfrom fastapi import FastAPI\r\nfrom pydantic import BaseModel\r\n\r\n\r\nclass Item(BaseModel):\r\n    name: str\r\n    description: Optional[str] = None\r\n    price: float\r\n    tax: Optional[float] = None\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.put(\"/items/{item_id}\")\r\nasync def create_item(item_id: int, item: Item, q: Optional[str] = None):\r\n    result = {\"item_id\": item_id, **item.dict()}\r\n    if q:\r\n\r\n        result.update({\"q\": q})\r\n    return result\r\n\r\nerror: Dict entry 0 has incompatible type \"str\": \"str\"; expected \"str\": \"int\"\r\nFound 1 error in 1 file (checked 1 source file)\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3261/comments",
    "author": "yiyoascen",
    "comments": [
      {
        "user": "ycd",
        "created_at": "2021-05-21T08:54:48Z",
        "body": "Could you please format the code?"
      }
    ]
  },
  {
    "number": 3252,
    "title": "response schema you like",
    "created_at": "2021-05-19T14:32:08Z",
    "closed_at": "2023-02-27T22:46:13Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3252",
    "body": "first\r\n\r\n```python\r\nclass Schema(BaseModel):\r\n    id: int = Field(..., description='id')\r\n    name: str = Field(..., description='name')\r\n```\r\n\r\nsecond\r\n\r\n```python\r\nclass BaseSchema(BaseModel):\r\n    id: int = Field(..., description='id')\r\n    name: str = Field(..., description='name')\r\n\r\nclass Schema(BaseModel):\r\n    status_code: int = 10000\r\n    message: str = ''\r\n    data: Optional[BaseSchema]\r\n```\r\n\r\nwhich schema will you like?\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3252/comments",
    "author": "panla",
    "comments": [
      {
        "user": "negadive",
        "created_at": "2021-05-20T09:38:34Z",
        "body": "this is unrelated to fastapi"
      },
      {
        "user": "panla",
        "created_at": "2021-05-20T11:33:35Z",
        "body": "you are right, i want to know others advice"
      }
    ]
  },
  {
    "number": 3227,
    "title": "Get API path parameter single get method",
    "created_at": "2021-05-14T19:13:18Z",
    "closed_at": "2023-02-27T22:46:02Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3227",
    "body": "How to enable one single get method to work with below 2 cases\r\n@app.get('/users/{id}')\r\n\r\n1. If I use \"/users\" only then all the users should be listed\r\n2. If I use \"/users/1\" only user with id 1 should be displayed.\r\nCan this be achieved with one single get method?\r\n@app.get('/users/{id}')\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3227/comments",
    "author": "shrikantnarayankar15",
    "comments": [
      {
        "user": "flashgorman-chorus",
        "created_at": "2021-05-14T19:42:41Z",
        "body": "I'm no expert, but I don't think you can, and I'm not sure why you would want to.  If you're trying to consolidate code, you should just register the two different URIs, against two different functions, one that takes no args and one that takes a single `id` arg, and then have one delegate to the other, or have them both delegate to some 3rd, private/protected function:\r\n\r\n```python\r\n@app.get(\"/users\")\r\ndef get_users():\r\n    return _get_users()\r\n\r\n@app.get(\"/users/{id}\")\r\ndef get_user(id: str):\r\n    return _get_users(id)[0]\r\n\r\ndef _get_users(id: str = None):\r\n    # do whatever you want here...\r\n```"
      },
      {
        "user": "dstlny",
        "created_at": "2021-05-14T20:59:12Z",
        "body": "You could do the following:\r\n\r\n```python\r\n\r\n@app.get('/users')\r\ndef get_users(\r\n    id: Optional[int] = None\r\n):\r\n    ...\r\n```\r\n\r\nThis way, both the following URL's will work:\r\n`/users` & `/users?id=12`\r\n\r\nBut as @flashgorman-chorus said, just split them into two endpoints w/ a common function call."
      },
      {
        "user": "shrikantnarayankar15",
        "created_at": "2021-05-15T03:03:14Z",
        "body": "Thanks.....I guess its impossible to write such method."
      },
      {
        "user": "tiangolo",
        "created_at": "2023-01-10T18:53:42Z",
        "body": "Thanks for the help here everyone! 👏  🙇 \r\n\r\nThanks for reporting back and closing the issue @shrikantnarayankar15  👍\r\n\r\nI agree that it would be better to separate that logic into two functions.\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 3226,
    "title": "Select base model at post api, based on value of path parameter",
    "created_at": "2021-05-14T19:06:04Z",
    "closed_at": "2023-02-27T22:46:00Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3226",
    "body": "Hi,\r\n    I want help on the below issue,\r\nI have 3 basemodel schema A, B, C. \r\n\r\nSuppose, \r\n@app.post('/{type}/')\r\nasync def createData(type:str, item: A)\r\n       return item\r\nIn the above, \"item : A\", this I want to change at runtime. Based on the path parameter value in this case \"type\".\r\n\r\nPython :3.9",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3226/comments",
    "author": "shrikantnarayankar15",
    "comments": [
      {
        "user": "dstlny",
        "created_at": "2021-05-14T22:51:01Z",
        "body": "> Hi,\r\n> I want help on the below issue,\r\n> I have 3 basemodel schema A, B, C.\r\n> \r\n> Suppose,\r\n> @app.post('/{type}/')\r\n> async def createData(type:str, item: A)\r\n> return item\r\n> In the above, \"item : A\", this I want to change at runtime. Based on the path parameter value in this case \"type\".\r\n> \r\n> Python :3.9\r\n\r\nDo something like:\r\n\r\n```python\r\n@app.post('/{type}/')\r\nasync def createData(\r\n     type: str,\r\n     item: Union[A, B, C] = Depends(get_item) ## or just have a common base class used in all the items, and use that in the annotation\r\n):\r\n     # do something\r\n\r\n\r\ndef get_item(type: str):\r\n      # do something\r\n      return item\r\n```"
      },
      {
        "user": "shrikantnarayankar15",
        "created_at": "2021-05-25T15:36:02Z",
        "body": "Thanks"
      }
    ]
  },
  {
    "number": 3201,
    "title": "Accessing the `app` in `Depends`",
    "created_at": "2021-05-10T07:08:01Z",
    "closed_at": "2023-02-27T22:44:56Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3201",
    "body": "I would like to access the `FastAPI` app in a `Depends` function, is there a way to do that?\r\nThe rationale here is that I would like to avoid global variables and use the `state` in `app`.\r\n\r\nExample usecase:\r\n```\r\ndef get_session(app: fastapi.FastAPI) -> Session:\r\n    [...]\r\n    access the app.state here\r\n    [...]\r\n\r\n@router.post(\"/init\")\r\ndef create(session: Session = Depends(get_session)):\r\n[...]\r\nuse the SQLAlchemy session\r\n[...]\r\n```",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3201/comments",
    "author": "nicolaerosia",
    "comments": [
      {
        "user": "chbndrhnns",
        "created_at": "2021-05-10T07:12:27Z",
        "body": "`app` is available in the `request`. So would this work for you?\r\n\r\n```\r\ndef get_session(request: Request) -> Session:\r\n    assert request.app\r\n```"
      },
      {
        "user": "nicolaerosia",
        "created_at": "2021-05-10T08:02:30Z",
        "body": "@chbndrhnns I'm aware of that, but I would like to use Depends if it's possible.\r\nFor example, Depends makes it easy to use Authentication and in the Depends function I would like to use the state\r\n```\r\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"token\")\r\n\r\ndef get_current_user(\r\n    token: str = fastapi.Depends(oauth2_scheme),\r\n) -> models.User:\r\n\r\n**USE HERE SOMEHOW THE APP STATE**\r\n\r\n[...]\r\nget full details from SQL Database\r\nvalidate\r\n[...]\r\nreturn models.User\r\n```"
      },
      {
        "user": "chbndrhnns",
        "created_at": "2021-05-10T08:19:43Z",
        "body": "This works for me:\r\n\r\n```py\r\nfrom fastapi import FastAPI, Depends\r\nfrom starlette.requests import Request\r\nfrom starlette.testclient import TestClient\r\n\r\napp = FastAPI()\r\n\r\n\r\nasync def dep(request: Request):\r\n    request.app.state.called = True\r\n\r\n\r\n@app.get(\"/me\", dependencies=[Depends(dep)])\r\nasync def me(request: Request):\r\n    return {\"called\": request.app.state.called}\r\n\r\n\r\ndef test_dep():\r\n    client = TestClient(app)\r\n    res = client.get(\"/me\")\r\n    assert res.json()[\"called\"]\r\n\r\n```"
      },
      {
        "user": "nicolaerosia",
        "created_at": "2021-05-11T17:23:36Z",
        "body": "Thank you very much, I couldn't find this in the docs, I tried it and it works!"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-12-19T22:11:20Z",
        "body": "Thanks for the help here @chbndrhnns ! 👏  🙇 \r\n\r\nThanks for reporting back and closing the issue @nicolaerosia  👍\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 3192,
    "title": "catch 404 no this url and 405 method_not_allowed",
    "created_at": "2021-05-08T02:13:06Z",
    "closed_at": "2023-02-27T22:44:47Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3192",
    "body": "## catch 404\r\n\r\ndifferent route url\r\n\r\n- there is GET `/api/users` \r\n- there is not GET `/api/all_users`\r\n\r\nif request `/api/all_users`, the default response is \r\n\r\n{\r\n\"detail\": \"Not Found\"\r\n}\r\n\r\nand i want to response\r\n\r\n{\r\n  \"status_code\": 10405,\r\n  \"message\": \"Not Found\"\r\n}\r\n\r\n## catch 405\r\n\r\nif custom exception handle, we can raise and catch 400,401,403,404 and how to catch 405 and so on?\r\n\r\nthe default response is\r\n\r\n{\r\n  \"detail\": \"Method Not Allowed\"\r\n}\r\n\r\nand i want to response\r\n\r\n{\r\n  \"status_code\": 10405,\r\n  \"message\": \"Method Not Allowed\"\r\n}",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3192/comments",
    "author": "panla",
    "comments": [
      {
        "user": "bezaca",
        "created_at": "2021-05-08T14:42:17Z",
        "body": "Have you tried using a middleware ? you can configure it to be used for all the application"
      },
      {
        "user": "panla",
        "created_at": "2021-05-09T07:22:14Z",
        "body": "> Have you tried using a middleware ? you can configure it to be used for all the application\r\n\r\nthanks.\r\n\r\nAlthough there are some flaws, but it still works.\r\n"
      }
    ]
  },
  {
    "number": 3158,
    "title": "Diplaying animated GIFs via FastApi/Streamlit",
    "created_at": "2021-05-02T00:42:15Z",
    "closed_at": "2023-02-27T23:02:57Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3158",
    "body": "### First check\r\n\r\n\r\nHello I am trying to display animated GIFs with FastApi/Streamlit I actually don't think I should be using streamlit at all.\r\n### Example\r\nHere is what I am trying to do, for the moment this does not work, any ideas, guidelines?:\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\nimport streamlit as st\r\nimport pandas as pd\r\nimport base64\r\nfrom fastapi import FastAPI, Response\r\n\r\napp = FastAPI()\r\ndf = pd.read_csv(\"/home/ludo915/code/covsco/data/train/all_data_merged/fr/traindfknnimputed.csv\")\r\ndate = (pd.to_datetime(df[\"date\"].max()) + pd.Timedelta(\"1 Days\")).strftime('%Y-%m-%d')\r\n\r\n@app.get(\"/\")\r\ndef index():\r\n    return {\"ok\": date}\r\n\r\n@app.post(\"/pm25/\")\r\nasync def displaypm25():\r\n    filepath = \"/home/ludo915/code/covsco/forecast/fr/PM2.5-concentration-\" +date +\".gif\"\r\n    file_ = open(filepath, \"rb\")\r\n    contents = file_.read()\r\n    data_url = base64.b64encode(contents).decode(\"utf-8\")\r\n    file_.close()\r\n    rt = st.markdown(\r\n        f'<img src=\"data:image/gif;base64,{data_url}\" alt=\"pm25concentration\">',\r\n        unsafe_allow_html=True,\r\n    )\r\n    return rt\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3158/comments",
    "author": "Ludo915",
    "comments": [
      {
        "user": "Ludo915",
        "created_at": "2021-05-02T00:59:28Z",
        "body": "I've managed using: \r\n\r\n```python\r\n@app.get(\r\n    \"/pm25/\",\r\n    response_model=Item,\r\n    responses={\r\n        200: {\r\n            \"content\": {\"image/gif\": {}},\r\n            \"description\": \"Return the JSON item or an image.\",\r\n        }\r\n    },\r\n)\r\nasync def read_item():\r\n    filepath = \"/home/ludo915/code/covsco/forecast/fr/PM2.5-concentration-\" +date +\".gif\"\r\n    return FileResponse(filepath, media_type=\"image/gif\")"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-12-09T14:26:08Z",
        "body": "Thanks for reporting back and closing the issue 👍\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 3155,
    "title": "OpenApi docs for subclass of list of pydantic BaseModel",
    "created_at": "2021-05-01T20:34:40Z",
    "closed_at": "2023-02-27T23:02:52Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3155",
    "body": "```Python\r\nfrom typing import List\r\nfrom fastapi import FastAPI\r\nfrom pydantic import BaseModel\r\n\r\napp = FastAPI()\r\n\r\nclass MyModel(BaseModel):\r\n    a: int\r\n\r\nclass MyModelList(List[MyModel]):\r\n    ...\r\n    # Bunch of useful methods\r\n\r\n# version 1. This one has working openapi docs\r\n@app.get(\"/with_docs\", response_model=List[MyModel])\r\ndef foo():\r\n    return [MyModel(a=10)]\r\n\r\n# version 2. How to make docs here works?\r\n@app.get(\"/without_docs\", response_model=MyModelList)\r\ndef foo2():\r\n    res = MyModelList()\r\n    res.append(MyModel(a=10)]\r\n    return res\r\n```\r\n\r\n### Description\r\nI search for a way to generate docs for type that is subclass of list of pydantic BaseModel. I have a bunch of usefull methods that operate on that list that's why I don't want to use version 1. I tried multiinheritance and other things but nothing worked.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3155/comments",
    "author": "kosciej16",
    "comments": [
      {
        "user": "kosciej16",
        "created_at": "2021-05-01T20:37:04Z",
        "body": "Actually I have been enlightened during writing a question and found a solution, but spend some time on it so decided to share it with everyone.\r\n\r\nWe can just mix both versions.\r\n```\r\n@app.get(\"/without_docs\", response_model=List[MyModel])\r\ndef foo2():\r\n    res = MyModelList()\r\n    res.append(MyModel(a=10)]\r\n    return res\r\n```"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-12-09T14:25:32Z",
        "body": "Thanks for reporting back and closing the issue 👍\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 3151,
    "title": "Increasing number of routers in FastAPI",
    "created_at": "2021-05-01T08:23:54Z",
    "closed_at": "2023-02-27T23:02:47Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3151",
    "body": "Hi,\r\n\r\nI have a concern. How good of an idea is it to have separate router for each endpoint and how does it affect performance? For example, if I am going to build 100 endpoints with 100 different independent python functions, what is the best way to build architecture for HIGH PERFORMANCE.\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3151/comments",
    "author": "INF800",
    "comments": [
      {
        "user": "Kludex",
        "created_at": "2021-05-01T13:39:37Z",
        "body": "> I have a concern. How good of an idea is it to have separate router for each endpoint and how does it affect performance?\r\n\r\nIt's a good idea, and it only affects startup time."
      },
      {
        "user": "tiangolo",
        "created_at": "2022-12-09T14:24:00Z",
        "body": "The main performance hit should actually be in your code and not in how you structure the routers. If you want to squeeze performance, use async functions with async-compatible libraries, and do the output data conversion yourself (instead of having the default by FastAPI), and return an `ORJSONResponse` directly from your path operation functions.\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2022-12-20T00:13:39Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 3143,
    "title": "error_msg_templates with nested models",
    "created_at": "2021-04-29T08:30:35Z",
    "closed_at": "2023-02-27T23:02:39Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3143",
    "body": "When I define Config.error_msg_templates on a nested model - the message is not displaying when validating the parent model:\r\n\r\n```Python\r\nclass ChildModel(BaseModel):\r\n    phone_num: str\r\n\r\n    class Config:\r\n        error_msg_templates = {\r\n            \"value_error.missing\": \"custom missing message\",  # !!!!!!!!!!!!!!!!\r\n        }\r\n\r\n\r\nclass MainModel(BaseModel):\r\n    child: ChildModel\r\n\r\n\r\ntry:\r\n    obj = MainModel(child={})\r\nexcept ValidationError as e:\r\n    print(e)\r\n\r\n```\r\n\r\nThis is what I get as output:\r\n\r\n```\r\n1 validation error for MainModel\r\nchild -> phone_num\r\n  field required (type=value_error.missing)\r\n```\r\n\r\nBut I was expecting `custom missing message` instead of default `field required`\r\n\r\n\r\n### Environment\r\n\r\n* OS: macOS\r\n* Python version: Python 3.6, 3.7, 3.8, 3.9\r\n* Pydantic: 1.8\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3143/comments",
    "author": "vitalik",
    "comments": [
      {
        "user": "vitalik",
        "created_at": "2021-04-29T08:32:34Z",
        "body": "yeah, well this acutally a pydantic issue, sorry, closing"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-12-09T14:14:08Z",
        "body": "Thanks for reporting back and closing the issue 👍\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 3124,
    "title": "SSL handshake timed out and channel closed exceptions",
    "created_at": "2021-04-23T19:14:28Z",
    "closed_at": "2023-02-27T23:02:16Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3124",
    "body": "The simplified code\r\n```\r\nimport os\r\nfrom elasticsearch import AsyncElasticsearch\r\nfrom fastapi import FastAPI, HTTPException, Depends, status\r\nimport secrets\r\nfrom fastapi.security import HTTPBasic, HTTPBasicCredentials\r\nimport uvicorn\r\n\r\napplication = FastAPI()\r\nsecurity = HTTPBasic()\r\n\r\nes_client = AsyncElasticsearch([os.getenv('ES_URI')] , maxsize=10000)\r\nes_index = os.getenv('ES_INDEX')\r\nes_doc_type = os.getenv('ES_DOC_TYPE')\r\n\r\ndef authorize(credentials: HTTPBasicCredentials = Depends(security)):\r\n    correct_username = secrets.compare_digest(credentials.username, os.getenv(\"BASIC_AUTH_USERNAME\"))\r\n    correct_password = secrets.compare_digest(credentials.password, os.getenv(\"BASIC_AUTH_PASSWORD\"))\r\n    if not (correct_username and correct_password):\r\n        raise HTTPException(\r\n            status_code=status.HTTP_401_UNAUTHORIZED,\r\n            detail=\"Incorrect username or password\",\r\n            headers={\"WWW-Authenticate\": \"Basic\"},\r\n        )\r\n    return True\r\n\r\nquery = {\r\n    'query': {\r\n        'function_score': {\r\n            'query': {\r\n                         'bool': ...\r\n                     }\r\n            },\r\n        'score_mode': 'sum', 'boost_mode': 'sum'\r\n    }, \r\n    'size': 6, \r\n    '_source': [...]\r\n}\r\n\r\n\r\n@application.get(\"/api/v1/smart-search\", dependencies=[Depends(authorize)])\r\nasync def search(size:int=12, model:str=None, carSize:int=None): \r\n    ...\r\n    es_res = await es_client.search(index=es_index, doc_type=es_doc_type, body=  query, max_concurrent_shard_requests=5000)\r\n    return es_res\r\n\r\nif __name__ == \"__main__\":\r\n    uvicorn.run(application, host=\"0.0.0.0\", port=5000)\r\n```\r\n\r\n### Description\r\nThe above code is simplified and creates a dynamic ES query.  Executes the ES query using AsyncElasticsearch. The result is parsed and returned. I tried multiple configuration for amongst others: \r\n\r\n- maxsize=10000 in AsyncElasticsearch client definition\r\n- max_concurrent_shard_requests in search\r\n- etc.\r\n\r\nThe application runs in docker. This is the dockerfile CMD:\r\n\r\n`CMD gunicorn --do-handshake-on-connect --worker-class uvicorn.workers.UvicornWorker --worker-connections 1000 --workers 3 --bind 0.0.0.0:5000 api`\r\n\r\nI tried running with:\r\n\r\n- uvicorn, gunicorn with gevent and gunicorn with uvicorn worker as worker class. \r\n- Different number of workers, worker-connections, etc.\r\n- Without and with do-handshake-on-connect\r\n\r\nAll this runs fine for:\r\n- Local setup (Run API local in docker with local ES instance) with as many concurrent users as wanted\r\n- API running in Kubernetes environment with (2 to 5 pods) and AWS c5.xlarge.elasticsearch ES cluster up to **60 concurrent users**\r\n\r\nThe API starts failing when running in Kubernetes environment with (2 to 5 pods) and AWS c5.xlarge.elasticsearch ES cluster starting for about **70 concurrent users or more**. Load generated on API (pods) is not too high and load on ES is low.\r\n\r\nThen 70% of the calls fails with the mainly following errors:\r\n\r\n- SSLException: handshake timed out (59%)\r\n- ClosedChannelException (36%)\r\n\r\nI don't have more information. Because this is all that is by Gatling load testing tool.\r\n\r\n### Environment\r\n\r\nrequirements.txt\r\n\r\n```\r\nelasticsearch[async]>=7.12.0\r\nstarlette==0.13.6\r\nelastic-apm==5.8.1\r\nfastapi==0.60.1\r\nuvicorn==0.11.8\r\ngunicorn==20.1.0\r\n```\r\n\r\n* Python version:\r\n\r\nVersion: 3.6\r\n\r\n`FROM python:3.6-alpine\r\n`\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3124/comments",
    "author": "SG87",
    "comments": [
      {
        "user": "ycd",
        "created_at": "2021-04-24T11:47:04Z",
        "body": "All the low level networking stuff handled by either uvicorn or gunicorn (Layer 4), FastAPI runs on Layer 7 and doesn't knows anything about the layers below including things like SSL, TLS, Sockets, so this is not a FastAPI problem, you'll have a better chance to get an answer in those repositories. "
      },
      {
        "user": "SG87",
        "created_at": "2021-04-24T12:08:43Z",
        "body": "Ok, thanks. I have reposted this in the uvicorn repository."
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-30T08:53:54Z",
        "body": "Thanks for the help here @ycd ! 👏  🙇 \r\n\r\nAs this wouldn't be related to FastAPI itself, I'm gonna close this one now.\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 3119,
    "title": "Improve APIRouter get/put/post/etc documentation",
    "created_at": "2021-04-23T06:34:02Z",
    "closed_at": "2023-02-28T16:52:38Z",
    "labels": [
      "feature",
      "question",
      "investigate",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3119",
    "body": "After struggling to figure out how to refer to an endpoint from a template using url_for() I found out you can add an undocumented parameter to the endpoint@get|put|post|etc to do this easily.\r\n\r\nSay I have a few APIRouters and I need to refer to an endpoint in Jinja. This can be done by using url_for() in the template. However this, by default, refers to the name of the function. So:\r\n```python\r\nfred = APIRouter()\r\n\r\n@fred.get(\"/home\")\r\nasync def home():\r\n   ...\r\n```\r\n\r\nthen in the template:\r\n\r\n```jinja2\r\n{{ url_for(\"home\") }}\r\n```\r\n\r\nThis is not very useful if you have organised your app into modules, each with their own router as you may have the function async def home() in multiple modules.\r\n\r\nI eventually found that this can be done using  an undocumented ```name= option```:\r\n\r\n```python\r\n@fred.get(\"/home\",  name=\"refer_to_this_from_url_for\")\r\n```\r\n\r\nPlease document this to save other peoples sanity... :smiley:\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3119/comments",
    "author": "pds2208",
    "comments": [
      {
        "user": "ycd",
        "created_at": "2021-04-24T11:50:37Z",
        "body": "Documenting things like this could be no brainer since there are +10 available path parameters for every operation, but i agree that this could be part of API reference. "
      }
    ]
  },
  {
    "number": 3105,
    "title": "fastAPI requesting files with jQuery failed",
    "created_at": "2021-04-20T10:34:14Z",
    "closed_at": "2023-02-27T23:01:41Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3105",
    "body": "```Python\r\nfrom fastapi import FastAPI, File, UploadFile\r\nfrom typing import Optional, List\r\napp = FastAPI()\r\n\r\n@app.post('/verify')\r\ndef verify(vctks_dir_1: List[bytes] = File(...)):\r\n    print(vctks_dir_1)\r\n    return \"Received Successfully\"\r\n```\r\n\r\n```JS\r\nfunction jfpVerify(event){\r\n    //stop submit the form, we will post it manually.\r\n    event.preventDefault();\r\n\r\n    // disable submit\r\n    $(\"#submit\").attr(\"disabled\", true);\r\n\r\n    let form = $('#form_vctks_dir_1')[0];\r\n    let result = new FormData(form);\r\n    // request\r\n    $.ajax({\r\n        headers: {\r\n        Accept: \"application/json\"\r\n        },\r\n        type: \"POST\",\r\n        enctype: \"multipart/form-data\",\r\n        processData : false,\r\n        url: APIBaseURL + \"verify\",\r\n        data: result,\r\n        error: function(xhr, textStatus, errorThrown) {\r\n            console.log(errorThrown);\r\n            console.log(textStatus);\r\n        },\r\n        success: function(data, textStatus, xhr) {\r\n            let response = xhr.responseJSON;\r\n            console.log(response);\r\n            $('#log').val(response);\r\n        }\r\n    });\r\n}\r\n```\r\n\r\n```HTML\r\n<form id=\"form_vctks_dir_1\" enctype=\"multipart/form-data\">\r\n      <input name=\"vctks_dir_1\" id=\"vctks_dir_1\" type=\"file\" multiple>\r\n      <input type=\"submit\" value=\"submit\">\r\n</form>\r\n```\r\n\r\n### Description\r\n\r\n* I tried to upload file via jQuery method but failed (successful with form submit and other method).\r\n* The failed message is as below, it seems not receive the file I sent:\r\n{loc: [\"body\", \"vctks_dir_1\"], msg: \"field required\", type: \"value_error.missing\"}\r\n* I tried to search some example on Google but find nothing, I'd really appreaciate if you can help with it.\r\n\r\n### Environment\r\n* OS: macOS:\r\n* FastAPI Version: 0.63.0\r\n* Python version: 3.7\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3105/comments",
    "author": "simonchen1992",
    "comments": [
      {
        "user": "dumtux",
        "created_at": "2021-04-20T16:52:41Z",
        "body": "Although this is not a jQuery solution, I used this method and it worked. (I modified some var names to fit to your code, so it may have a few sytax bugs)\r\n\r\n```js\r\nconst jfpVerify = event => {\r\n    event.preventDefault()\r\n    const fileInput = document.querySelector('#vctks_dir_1'),\r\n        files = fileInput.files,\r\n        formData = new FormData()\r\n    for (const f of files) {\r\n        formData.append('file', f)\r\n    }\r\n    fetch(APIBaseURL + 'verify', {method: 'POST', body: formData})\r\n        .then(response => response.json()).then(data => {\r\n            showResult(data)\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n}\r\n```\r\n\r\nI forgot everything about jQuery now, so I'm not sure how `$.ajax` will work. But maybe you can try to modify your function like this,\r\n\r\n```js\r\n    // ...\r\n    let form = $('#form_vctks_dir_1')[0];\r\n    let result = new FormData();\r\n    for (const f of form.files) {\r\n        result.append('file', f);\r\n    }\r\n    // ...\r\n```"
      },
      {
        "user": "simonchen1992",
        "created_at": "2021-04-21T02:53:21Z",
        "body": "Thanks for your response. I follow your suggestion and modify the JS code as below but still receive the same error.\r\n```JS\r\nfunction jfpVerify(event){\r\n    //stop submit the form, we will post it manually.\r\n    event.preventDefault();\r\n\r\n    // disable submit\r\n    $(\"#submit\").attr(\"disabled\", true);\r\n\r\n    let form = document.getElementById(\"vctks_dir_1\");\r\n    let result = new FormData();\r\n    for (const f of form.files) {\r\n        result.append('vctks_dir_1', f);\r\n    }\r\n    // request\r\n    $.ajax({\r\n        headers: {\r\n        Accept: \"application/json\"\r\n        },\r\n        type: \"POST\",\r\n        enctype: \"multipart/form-data\",\r\n        processData : false,\r\n        url: APIBaseURL + \"verify\",\r\n        data: result,\r\n        error: function(xhr, textStatus, errorThrown) {\r\n            console.log(errorThrown);\r\n            console.log(textStatus);\r\n        },\r\n        success: function(data, textStatus, xhr) {\r\n            let response = xhr.responseJSON;\r\n            console.log(response);\r\n            $('#log').val(response);\r\n        }\r\n    });\r\n}\r\n```"
      },
      {
        "user": "dumtux",
        "created_at": "2021-04-21T12:41:14Z",
        "body": "Did you try the `fetch()` method instead of `$.ajax`?"
      },
      {
        "user": "simonchen1992",
        "created_at": "2021-04-21T12:46:42Z",
        "body": "Yes, I tried. It works well and fetch() method is also asychrone like ajax which is fit my requirement. So I take this method as my current solution under your help.\r\n\r\nI send second response is just want to know why the ajax code doesn't work. It confused me a lot.\r\n\r\nAnyway, thanks to your reply so much! It really save my ass and solve the problem!"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-12T07:59:32Z",
        "body": "Thanks for the help here everyone! 👏  🙇 \r\n\r\nThanks for reporting back and closing the issue 👍"
      }
    ]
  },
  {
    "number": 3089,
    "title": "Prevent a timeout on SQLAlchemy",
    "created_at": "2021-04-15T22:30:44Z",
    "closed_at": "2023-02-28T16:52:20Z",
    "labels": [
      "question",
      "investigate",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3089",
    "body": "I have an application based on fastapi(0.59.0) and SQLAlchemy(1.3.18). We use postgresql as database. The max connections the db accept is 80 and since I have 4 uvicorn workers I set DATABASE_POOL_SIZE to 13 and max_overflow=4 so SQLAlchemy could use 68 connections.\r\n\r\nIf I do around 68 simultaneous requests the application stall. When it works it takes \r\naround 2.5 seconds to finished all the 68 requests. I logged the requests and I can confirm that all the requests arrived at the middleware however I can't determine if it stall at get_db or at the endpoint.\r\n\r\nI notice that If I do db.close() at the end of the endpoint I could run 500 simultaneous requests without any problem.\r\n\r\nHow can I debug what is happening? It's make no sense that 68 requests takes 2.5seconds but than on request waits 30seconds for a connection.\r\n\r\nI use a middleware for auth:\r\n```\r\n# Middlewares\r\n@app.middleware('http')\r\nasync def check_auth(request: Request, call_next):\r\n    \"\"\"Adds a middleware to all requests to check auth credentials.\r\n\r\n    Args:\r\n        request (fastapi.Request): The incoming request\r\n        call_next (types.FunctionType): The next function to call\r\n\r\n    Returns:\r\n        The response returned from the call_next function\r\n    \"\"\"\r\n    response: Response = None\r\n    # Get access token from session cookie\r\n    token = auth.decode_access_token(request.cookies.get(ACCESS_COOKIE))\r\n\r\n    logger.info(\"Request HTTP: \"+str(request.body()))\r\n\r\n    # If it's invalid\r\n    if token is None:\r\n        response = await call_next(request)\r\n```\r\n\r\nIt is an example endpoint:\r\n```\r\n@router.get('/logs/admin')\r\ndef get_logs(\r\n    id: int = Query(None, ge=0),\r\n    page: int = Query(0, ge=0),\r\n    page_size: int = Query(DEFAULT_PAGE_SIZE, ge=1),\r\n    timestamp: int = Query(None, ge=0),\r\n    live: bool = Query(None),\r\n    db: Session = Depends(get_db),\r\n):\r\n\r\n    if not live:\r\n        info = rf_logs_crud.get_paged_tag_logs(db, id, timestamp, page, page_size)\r\n        #db.close() #added to test\r\n        return info_obj\r\n```\r\n\r\nIt is the db session manager.\r\n```\r\nfrom os import getenv\r\n\r\nfrom sqlalchemy import MetaData, create_engine\r\nfrom sqlalchemy.ext.declarative import declarative_base\r\nfrom sqlalchemy.orm import sessionmaker\r\n\r\nfrom fastapi.logger import logger\r\nimport logging\r\nlogger = logging.getLogger('gunicorn.error')\r\n\r\nDATABASE_URL = getenv('DATABASE_URL')\r\nDATABASE_POOL_SIZE = int(getenv('DATABASE_POOL_SIZE'))\r\n\r\nengine = create_engine(DATABASE_URL, pool_size=DATABASE_POOL_SIZE, max_overflow=4)\r\nSessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\r\n\r\nMeta = MetaData(bind=engine)\r\nBase = declarative_base(bind=engine, metadata=Meta)\r\n\r\n# DB Dependency\r\ndef get_db():\r\n    \"\"\"Yields a db session.\r\n\r\n    Yields:\r\n        db (app.db.SessionLocal): A database session\r\n    \"\"\"\r\n    db = SessionLocal()\r\n    try:\r\n        yield db\r\n    except:\r\n        db.rollback()\r\n    finally:\r\n        db.close()\r\n```\r\n    \r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3089/comments",
    "author": "metropt",
    "comments": [
      {
        "user": "TheBeege",
        "created_at": "2021-04-22T08:48:10Z",
        "body": "For seeing timing, just add some logging statements at each point you're curious about. \r\n\r\nFor example:\r\n```Python\r\ndef get_db():\r\n    \"\"\"Yields a db session.\r\n\r\n    Yields:\r\n        db (app.db.SessionLocal): A database session\r\n    \"\"\"\r\n    start_time = time.time()\r\n    db = SessionLocal()\r\n    logging.debug('[Dependency] Time to create session: %f', time.time() - start_time)\r\n    try:\r\n        yield db\r\n    except:\r\n        logging.debug('[Dependency] Time to hit exception: %f', time.time() - start_time)\r\n        db.rollback()\r\n    finally:\r\n        logging.debug('[Dependency] Time to hit finish yield: %f', time.time() - start_time)\r\n        db.close()\r\n```\r\n\r\nI recommend doing something similar in your middleware and path operation to help isolate the timing issue.\r\n\r\nIf you want to see timing per request, in your middleware, create some uuid and set it on `request.state.x` where `x` is some property you want to use to store the request ID. Include that in your logging, and you can group by individual requests.\r\n\r\nCurious to hear about your findings, so do please post back later.\r\n\r\n(Also, adding \"Python\" immediately after the backticks in your code snippet will do Python syntax highlighting. It makes it much easier to read. I strongly recommend 😄 )"
      }
    ]
  },
  {
    "number": 3057,
    "title": "307 Temporary Redirect Did not find CR at end of boundary (40)",
    "created_at": "2021-04-08T13:54:27Z",
    "closed_at": "2023-02-27T23:00:57Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3057",
    "body": "I'm trying to upload a file and return it as TemplateResponse \r\n\r\n```Python\r\n@app.post(\"/tes\")\r\nasync def write_testv(request: Request, video: UploadFile = File(...)):\r\n    if request.method == 'POST':\r\n        with open(\"destination.mp4\", \"wb\") as buffer:\r\n            shutil.copyfileobj(video.file, buffer)\r\n\r\n       **** some code ***\r\n\r\n\r\n        return templates.TemplateResponse(\"video.html\", context={'request': request, 'result': absum})\r\n\r\n\r\n@app.get(\"/tes\")\r\nasync def read_testv(request: Request):\r\n    if request.method == 'GET':\r\n        return templates.TemplateResponse(\"video.html\", {\"request\": request}\r\n```\r\n\r\nbut getting an error like below\r\n\r\n```\r\nINFO:     127.0.0.1:54672 - \"POST /xx/xx/ HTTP/1.1\" 307 Temporary Redirect\r\nDid not find CR at end of boundary (40)\r\nINFO:     127.0.0.1:54672 - \"POST /xx/xx HTTP/1.1\" 400 Bad Request\r\n\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3057/comments",
    "author": "navan0",
    "comments": [
      {
        "user": "adryells",
        "created_at": "2022-03-14T20:47:47Z",
        "body": "How you fix it? @navan0 "
      }
    ]
  },
  {
    "number": 3053,
    "title": "websocket不能同时收发数据",
    "created_at": "2021-04-07T15:55:06Z",
    "closed_at": "2023-02-27T23:00:55Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3053",
    "body": "代码如下：\r\n```\r\nasync def gettext(websocket: WebSocket):\r\n    while True:\r\n        data = await websocket.receive_text()\r\n        print(data)\r\n        print(data == 'get')\r\n        if data == 'get':\r\n            print('text\\n\\r\\n\\r')\r\n            await manager.send_personal_message(json.dumps(res_list), websocket)\r\n            \r\nasync def sentauto(websocket: WebSocket):\r\n    old_list = []\r\n    while True:\r\n        if old_list != res_list:\r\n            old_list = res_list\r\n            print('auto')\r\n            await manager.send_personal_message(json.dumps(res_list), websocket)\r\n\r\n\r\n@router.websocket(\"/chartws\")\r\nasync def websocket_endpoint(websocket: WebSocket):\r\n    await manager.connect(websocket)\r\n    await manager.send_personal_message(json.dumps(res_list), websocket)\r\n    try:\r\n        get_task = asyncio.create_task(gettext(websocket))\r\n        send_task = asyncio.create_task(sentauto(websocket))\r\n        await get_task\r\n        await send_task\r\n    except WebSocketDisconnect:\r\n        manager.disconnect(websocket)\r\n```\r\n\r\n客户端能够正常接收数据，但是发送数据时，不能触发gettext函数``",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3053/comments",
    "author": "cgstian",
    "comments": [
      {
        "user": "Dustyposa",
        "created_at": "2021-04-08T02:50:21Z",
        "body": "code `await get_task` blocked.\r\nYou can use `gather` etc function  to run `get and sent function` at the same time"
      },
      {
        "user": "tiangolo",
        "created_at": "2023-01-10T18:52:15Z",
        "body": "Thanks for the help here @Dustyposa ! 👏  🙇 \r\n\r\nThanks for reporting back and closing the issue @cgstian  👍\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 3019,
    "title": "Programmatic run of uvicorn.run forks many processes causes k8s pod restarts",
    "created_at": "2021-03-30T21:31:39Z",
    "closed_at": "2023-02-27T23:00:15Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3019",
    "body": "Hi guys I seem to be having some issues probably my lack of understanding i do apologize if issue may seem trivial am running below \r\n\r\ncommand to run fast API programmatically \r\n\r\n`uvicorn.run(\"audio_service.worker:app\", host=\"localhost\", port=8000, reload=False, workers=1, debug=True, log_level=\"trace\", access_log=False)`\r\n\r\nI have also set the following \r\n\r\n```\r\nENV WORKERS_PER_CORE=2\r\nENV WEB_CONCURRENCY=1\r\n```\r\nwithin my docker container.  Running tensorflow to serve a model via an REST API endpoint nothing special here just a binary true false after inference. \r\n\r\ni installed htop and what i do see is \r\n\r\n/opt/conda/bin/python -B -c from multiprocessing spawn import spawn_main; spawn_main(tracker_fd=7, pipe_handle=9) --multiprocessing-fork root\r\n\r\nfollowed by a list of processes that keep getting forked maxing out the total CPU cores. Is they any way to limit this so that we can use 1 or 2 workers? The above configurations don't seem to be taking any effect. \r\n\r\nThis leads to \r\n\r\n---CUT---\r\n    State:          Running\r\n      Started:      Tue, 30 Mar 2021 13:53:24 -0700\r\n    Last State:     Terminated\r\n      Reason:       Error\r\n      Exit Code:    137\r\n      Started:      Tue, 30 Mar 2021 13:32:34 -0700\r\n      Finished:     Tue, 30 Mar 2021 13:53:23 -0700",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3019/comments",
    "author": "timothy-mugayi",
    "comments": [
      {
        "user": "MartinEliasQ",
        "created_at": "2021-03-31T02:05:57Z",
        "body": "Hello @timothy-mugayi \r\nHave you tried to increase the POD resource limits?\r\nIn any case, to make the deployments more atomic I use a concurrency of 1 for gunicorn workers on uvicorn. When you upload your model it will for sure go to RAM and it is likely that it will not finish booting due to lack of resources."
      },
      {
        "user": "timothy-mugayi",
        "created_at": "2021-03-31T05:08:09Z",
        "body": "@MartinEliasQ  i have tried below which seems to have reduced the total number of forked processes \r\n\r\n`uvicorn.run(\"audio_service.worker:app\", host=\"0.0.0.0\", port=8002, reload=False, workers=1, debug=False, log_level=\"trace\", access_log=False)`\r\n\r\nENV WORKERS_PER_CORE=1\r\nENV WEB_CONCURRENCY=1\r\n\r\nhtop we get \r\n\r\n   ```\r\n 1 root       20   0  438M  118M 43944 S  0.0  1.2  0:16.77 python -m audio_service.worker --broker ym_api\r\n  315 root       20   0  5052  3344  2876 R  0.0  0.0  0:04.34 htop\r\n   10 root       20   0  438M  118M 43944 S  0.0  1.2  0:00.00 python -m audio_service.worker --broker ym_api\r\n   11 root       20   0  438M  118M 43944 S  0.0  1.2  0:00.00 python -m audio_service.worker --broker ym_api\r\n   12 root       20   0  438M  118M 43944 S  0.0  1.2  0:00.00 python -m audio_service.worker --broker ym_api\r\n   13 root       20   0  438M  118M 43944 S  0.0  1.2  0:00.00 python -m audio_service.worker --broker ym_api\r\n   14 root       20   0  5752  3684  3112 S  0.0  0.0  0:00.06 bash\r\n```\r\nI noticed setting debug=False turns of the auto-reloading while reload=False didn't do much\r\n\r\nbefore doing this it kept on forking as many processes as available on the machine."
      },
      {
        "user": "raphaelauv",
        "created_at": "2021-04-15T16:10:54Z",
        "body": "Reduce your program to a minimal running fastapi endpoint without any call to other code and loading any other lib, you will see that it's very probably your code that is responsible. If not then share with us a minimal reproducible example."
      },
      {
        "user": "raphaelauv",
        "created_at": "2021-05-16T15:44:28Z",
        "body": "@timothy-mugayi could you please close the issue , thanks"
      },
      {
        "user": "aucampia",
        "created_at": "2021-12-24T00:16:55Z",
        "body": "@timothy-mugayi issue still open, probably should be closed."
      }
    ]
  },
  {
    "number": 3005,
    "title": "Flask to FastAPI conversion Kafka example for Kubernetes",
    "created_at": "2021-03-28T01:30:12Z",
    "closed_at": "2023-02-27T23:00:07Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/3005",
    "body": "1. How to convert from given Flask to FastAPI:\r\n2. Will I get better performance doing so in this Kakfa context?\r\n\r\nproducer.py:\r\n\r\n```\r\nfrom flask import Flask, request, jsonify\r\nfrom kafka import KafkaProducer\r\nimport json\r\n\r\napp = Flask(__name__)\r\nproducer = KafkaProducer(bootstrap_servers='kafka:9092')\r\ntopic_name = 'messages'\r\n\r\n@app.route('/', methods=[\"POST\"])\r\ndef send():\r\n    app.logger.info(\"received message\")\r\n    content = request.get_json()\r\n    jd = json.dumps(content).encode('utf-8')\r\n    producer.send(topic_name, jd)\r\n    app.logger.info(\"sent message\")\r\n    return jsonify({\"status\":\"ok\"})\r\n\r\nif __name__ == '__main__':\r\n  app.logger.info('Starting server...')\r\n  app.run(host='0.0.0.0', port=8080)\r\n```\r\n  \r\n  \r\nconsumer.py: \r\n\r\n\r\n```\r\nfrom kafka import KafkaConsumer\r\n\r\ntopic_name = 'messages'\r\n\r\nif __name__ == '__main__':\r\n  print('Starting consumer...')\r\n  consumer = KafkaConsumer(topic_name, bootstrap_servers='kafka:9092')\r\n  \r\n  print('receiving messages...')\r\n  for message in consumer:\r\n      print(f'received message {message}')\r\n\r\n  print('exiting...')\r\n```\r\n\r\nproducer/okteto.yml:\r\n\r\n```\r\nname: producer\r\nlabels:\r\n  stack.okteto.com/service: producer\r\ncommand: bash\r\nenvironment:\r\n- FLASK_DEBUG=1\r\nvolumes:\r\n- /root/.cache/pip\r\nsync:\r\n- .:/usr/src/app\r\nforward:\r\n- 8080:8080\r\nreverse:\r\n- 9000:9000\r\nresources:\r\n  limits:\r\n    cpu: \"1\"\r\n    memory: 2Gi\r\n```\r\n\r\n\r\n\r\n\r\nproducer/Dockerfile:\r\n\r\n```\r\nFROM okteto/python:3\r\nENV PYTHONUNBUFFERED=1\r\nWORKDIR /usr/src/app\r\nCOPY requirements.txt requirements.txt\r\nRUN pip install -r requirements.txt\r\nCOPY app.py app.py\r\nEXPOSE 8080\r\nCMD [\"python\", \"app.py\" ]\r\n\r\n```\r\n\r\n\r\n\r\n\r\nconsumer/okteto.yml:\r\n\r\n```\r\nname: consumer\r\nlabels:\r\n  stack.okteto.com/service: consumer\r\ncommand: bash\r\nvolumes:\r\n- /root/.cache/pip\r\nsync:\r\n- .:/usr/src/app\r\nreverse:\r\n- 9000:9000\r\nresources:\r\n  limits:\r\n    cpu: \"1\"\r\n    memory: 2Gi\r\n```\r\n\r\n\r\nconsumer/Dockerfile:\r\n```\r\nFROM okteto/python:3\r\nENV PYTHONUNBUFFERED=1\r\nWORKDIR /usr/src/app\r\nCOPY requirements.txt requirements.txt\r\nRUN pip install -r requirements.txt\r\nCOPY app.py app.py\r\nEXPOSE 8080\r\nCMD [\"python\", \"app.py\" ]\r\n```\r\n\r\n\r\nrequirements.txt:\r\n\r\nkafka-python\r\nFlask==1.1.1",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/3005/comments",
    "author": "scheung38",
    "comments": [
      {
        "user": "Kludex",
        "created_at": "2021-03-28T02:02:04Z",
        "body": "Both Dockerfiles are the same?"
      },
      {
        "user": "scheung38",
        "created_at": "2021-03-28T02:23:46Z",
        "body": "Thanks for pointing out @Kludex but yes it is duplicated"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-27T20:02:23Z",
        "body": "It seems this would probably be better asked somewhere else, maybe in those projects, as it's quite specific to your code and the packages you are using than to FastAPI. There's not a very big chance someone already had the exact same setup as you.\r\n\r\nBut if you need help porting your app to FastAPI and figuring out all the details of the packages you are using and your internal code, maybe you can hire someone to help you, you could post it on the job board in the FastAPI discord.\r\n\r\nAs this is quite out of scope for FastAPI itself, I'll close this one now, but thanks for the interest. :coffee: \r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2995,
    "title": "Issues with returning related objects to user",
    "created_at": "2021-03-26T11:49:26Z",
    "closed_at": "2023-02-27T22:59:51Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2995",
    "body": "Hi there, I'm trying to get some related fields via GET method, but when I try it I only get default value e.g null. \r\nMaybe there's someone who can explain where I'm wrong?\r\n\r\nIt seems like all the errors I'm getting is where there's a list of related objects.\r\n\r\nI'm getting the Item object in swagger, but without SupplierItem and Images relations.\r\n\r\nmodels\\item.py \r\n\r\n```\r\nclass Item(Base):\r\n    id = Column(Integer, primary_key=True, index=True)\r\n    title = Column(String, index=True)\r\n    article = Column(String, index=True)\r\n    description = Column(String, index=True)\r\n\r\n    vat_id = Column(Integer, ForeignKey(\"vat.id\"))\r\n    vat = relationship(\"Vat\")\r\n\r\n    manufacturer_id = Column(Integer, ForeignKey(\"manufacturer.id\"))\r\n    manufacturer = relationship(\"Manufacturer\", back_populates=\"items\")\r\n\r\n    unit_id = Column(Integer, ForeignKey(\"unit.id\"))\r\n\r\n    price = relationship(\"Price\", back_populates=\"item\")\r\n    images = relationship(\"Image\", back_populates=\"item\")\r\n    supplier_items = relationship(\"SupplierItem\", back_populates=\"item\")\r\n\r\n    is_active = Column(Boolean, default=True)\r\n```\r\n\r\nmodels\\supplier_item.py\r\n\r\n```\r\nclass SupplierItem(Base):\r\n    id = Column(Integer, primary_key=True, index=True)\r\n    title = Column(String, index=True, unique=True)\r\n    is_active = Column(Boolean, default=True)\r\n\r\n    price = relationship(\"Price\", back_populates=\"supplier_item\")\r\n\r\n    supplier_id = Column(Integer, ForeignKey(\"supplier.id\"))\r\n    supplier = relationship(\"Supplier\", back_populates=\"supplier_items\")\r\n\r\n    item_id = Column(Integer, ForeignKey(\"item.id\"))\r\n    item = relationship(\"Item\", back_populates=\"supplier_items\")\r\n```\r\n\r\nschemas\\item.py\r\n\r\n```\r\nclass ItemBase(BaseModel):\r\n    id: int\r\n    title: Optional[str] = None\r\n    description: Optional[str] = None\r\n    article: Optional[str] = None\r\n    manufacturer: Optional[Manufacturer] = None\r\n    unit: Optional[Unit] = None\r\n    price: Optional[List[Price]] = None\r\n    vat: Optional[Vat] = None\r\n    image: Optional[List[Image]] = None\r\n    supplier_item: Optional[List[SupplierItem]] = None\r\n```\r\n\r\nendpoints\\items.py\r\n```\r\n@router.get(\"/{id}\", response_model=schemas.Item)\r\ndef read_item(\r\n        *,\r\n        db: Session = Depends(deps.get_db),\r\n        id: int,\r\n        current_user: models.User = Depends(deps.get_current_active_user),\r\n) -> Any:\r\n    \"\"\"\r\n    Get item by ID.\r\n    \"\"\"\r\n    item = crud.item.get(db=db, id=id)\r\n    if not item:\r\n        raise HTTPException(status_code=404, detail=\"Item not found\")\r\n    if not crud.user.is_superuser(current_user):\r\n        raise HTTPException(status_code=400, detail=\"Not enough permissions\")\r\n    return item\r\n```\r\n\r\nOS MacOS 11.2.3\r\nFastAPI version 0.54.2\r\nPython 3.7.7",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2995/comments",
    "author": "kgorshkoff",
    "comments": [
      {
        "user": "waynerv",
        "created_at": "2021-03-30T01:50:45Z",
        "body": "1. You shouldn`t directly use Sqlalchemy model as Pydantic's field type.\r\n2. add `class config:orm_mode=True` for Item model."
      },
      {
        "user": "kgorshkoff",
        "created_at": "2021-03-30T07:05:19Z",
        "body": "Issue was that I misspelled couple Pydantic types, so I had issues.\r\n"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-27T20:18:46Z",
        "body": "Thanks for the help here @waynerv ! 👏  🙇 \r\n\r\nThanks for reporting back and closing the issue @kgorshkoff  👍\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2987,
    "title": "i want APIRouter add a \"name\" attribute",
    "created_at": "2021-03-24T08:57:11Z",
    "closed_at": "2023-02-27T22:59:43Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2987",
    "body": "###  Feature \r\n-  APIRouter  add a \"name\" attribute\r\n\r\n APIRoute has a \"name\" attribute but APIRouter no a \"name\" attribute; i want APIRouter add a \"name\" attribute ,so i can do as that:\r\n\r\n```python\r\nrouter = request.scope.get('router')\r\nif router.name == '':\r\n    print(router.routes)\r\n```",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2987/comments",
    "author": "un-human",
    "comments": [
      {
        "user": "Kludex",
        "created_at": "2021-03-24T14:12:14Z",
        "body": "What would be the `router.name`? The name of the class? :thinking: \r\n\r\nAlso, why?"
      },
      {
        "user": "un-human",
        "created_at": "2021-03-25T02:12:58Z",
        "body": "> name\r\n\r\nyes, The name of the class;\r\ni want get the router info by request, like:    router = request.scope.get('router')\r\nbut router.prefix is None;\r\n\r\n```python\r\nimport uvicorn\r\nfrom fastapi import FastAPI, Request, APIRouter\r\nfrom fastapi.routing import APIRoute\r\n\r\napp = FastAPI()\r\n\r\nrouter = APIRouter(prefix='/user')\r\n\r\n\r\n@router.get('/{uid}')\r\nasync def user_get(uid: int, request: Request):\r\n    print('request.url.path:', request.url.path)\r\n\r\n    router = request.scope.get('router')\r\n\r\n    print(type(router))\r\n\r\n    # why router.prefix is None ???????!!!!!\r\n    print('router.prefix:', router.prefix)\r\n\r\n    return uid\r\n\r\n\r\napp.include_router(router)\r\n\r\nif __name__ == '__main__':\r\n    uvicorn.run(app, host='0.0.0.0', port=5000, reload=False, debug=False, workers=1)\r\n\r\n```\r\n\r\ni just want get the router_info  and route_info and the current function_name  by request;  like flask request.endpoint\r\nbut the fastapi request  i just can get  request.ur.path and .scope and .header  and so on\r\n"
      },
      {
        "user": "un-human",
        "created_at": "2021-03-25T02:24:45Z",
        "body": "> What would be the `router.name`? The name of the class? 🤔\r\n> \r\n> Also, why?\r\n\r\nalso, this  code can not get router_info .........\r\n\r\n```python\r\n#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\n\r\nimport uvicorn\r\nfrom fastapi import FastAPI, Response, Request, APIRouter\r\nfrom fastapi.routing import APIRoute\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.middleware('http')\r\nasync def mid_http(request: Request, call_next):\r\n    response: Response = await call_next(request)\r\n    return response\r\n\r\n\r\nclass MyRouter(APIRouter):\r\n    def __init__(self, router_name: str, **kwargs):\r\n        super(MyRouter, self).__init__(**kwargs)\r\n        self.router_name = router_name\r\n\r\n\r\nclass MyRoute(APIRoute):\r\n    def get_route_handler(self):\r\n        super_route_handler = super().get_route_handler()\r\n\r\n        route_name = self.name\r\n\r\n        async def my_route_handler(request: Request):\r\n            # request get the APIRoute name\r\n            request.state.route_name = route_name\r\n\r\n            response: Response = await super_route_handler(request)\r\n\r\n            return response\r\n\r\n        return my_route_handler\r\n\r\n\r\nuser_router = MyRouter(router_name='user', prefix='/user', route_class=MyRoute)\r\n\r\n\r\n@user_router.get('/{uid}')\r\nasync def user_get(*, uid: int, request: Request):\r\n    print('request.url.path:', request.url.path)\r\n\r\n    print(f'user_get request.state.route_name :{request.state.route_name}')\r\n\r\n    router = request.scope.get('router')\r\n    print('router.prefix:', router.prefix)\r\n\r\n    # raise error: APIRouter has no router_name attribute, why this router is not MyRoute??\r\n    print('router.router_name:', router.router_name)\r\n\r\n    return uid\r\n\r\n\r\napp.include_router(user_router)\r\n\r\nif __name__ == '__main__':\r\n    uvicorn.run(app, host='0.0.0.0', port=5000, reload=False, debug=False, workers=1)\r\n\r\n```"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-27T19:44:33Z",
        "body": "Could you please explain your objective? What are you trying to solve? There's probably a way to do it already, but it's probably different from the way you are trying to achieve it.\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-27T22:55:24Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 2984,
    "title": "Opening a websocket seems to pause existing Background Task",
    "created_at": "2021-03-23T18:20:32Z",
    "closed_at": "2023-02-27T22:59:40Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2984",
    "body": "Most likely this is an issue with my current setup, I'm quite new to async python so I'm sure I'm missing some conceptual things.\r\n\r\nMy use case is:\r\n- Kick off a background task that involves adding database records\r\n- After each db record addition, the task updates a `progress` attribute in a `Job` model and sleeps for a bit to avoid getting rate limited by an external service\r\n- While this task is processing, stream the `progress` back to the client via a websocket\r\n\r\n### Example\r\n\r\nThis is just to illustrate the problem, won't work as is\r\n\r\n```Python\r\nimport time\r\nimport asyncio\r\n\r\nfrom fastapi import FastAPI, BackgroundTasks, WebSocket\r\nfrom pydantic import BaseModel\r\n\r\n\r\nclass Job(BaseModel):\r\n    id: int\r\n    progress: float = 0.0\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\ndef long_running_task(job: Job):\r\n    for x in range(10):\r\n        db_job = # fetch job from database\r\n        # add a database entry\r\n        db_job.progress = (x / 10) * 100\r\n        # commit to database\r\n        time.sleep(20) # needed to avoid getting rate limited by an external service\r\n\r\n\r\n@app.post('/tasks/', response_model=Job)\r\ndef create_task(background_tasks: BackgroundTasks):\r\n    job = Job()\r\n    # commit job to database\r\n    background_tasks.add_task(long_running_task, job)\r\n    return job\r\n\r\n\r\n@app.websocket(\"/job/{job_id}/ws\")\r\nasync def websocket_endpoint(websocket: WebSocket, job_id: str):\r\n    await websocket.accept()\r\n    while True:\r\n        await asyncio.sleep(2)\r\n        job = # fetch job from database\r\n        await websocket.send_json(jsonable_encoder(job))\r\n```\r\n\r\n### Description\r\n\r\nThe background task is kicked off fine and the database entries are added as expected. However when I open the websocket the background task seems to pause and remains paused until the websocket is closed. At that point the background task starts again and carries on as normal. How can I open the websocket without causing the task to stop execution?\r\n\r\nI read somewhere about using `asyncio.ensure_future` but I'm not quite sure how to use it in this context. Also quite unsure about my current setup and whether the task should be async. When I switch it to `async def` (and `await asyncio.sleep(20)`) though the post request takes a long time to return a response.\r\n\r\n### Environment\r\n\r\n* OS: macOS\r\n* FastAPI Version: 0.63.0\r\n* Python version: 3.9.2\r\n\r\nThanks in advance for any help\r\n\r\n**UPDATE**\r\nAfter adding some logging to my job it turns it is was actually being run, it's just that the job I was fetching from the database before sending a message through the websocket wasn't updated with the latest progress. After running a `db.refresh(job)` it worked. ",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2984/comments",
    "author": "dbatten5",
    "comments": [
      {
        "user": "coder3112",
        "created_at": "2021-04-07T15:01:54Z",
        "body": "> UPDATE\r\nAfter adding some logging to my job it turns it is was actually being run, it's just that the job I was fetching from the database before sending a message through the websocket wasn't updated with the latest progress. After running a db.refresh(job) it worked.\r\n\r\nPlease close the issue if it is solved."
      },
      {
        "user": "dbatten5",
        "created_at": "2021-04-07T15:05:53Z",
        "body": "@coder3122 will do - was leaving it open in case anyone had any advice on using async in this scenario"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-27T21:10:08Z",
        "body": "Thanks for the help here @coder3112 ! 👏  🙇 \r\n\r\nThanks for reporting back and closing the issue @dbatten5  👍\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2982,
    "title": "Is is possible to link app docs and its sub app docs in swagger UI using FastAPI routines?",
    "created_at": "2021-03-23T14:38:47Z",
    "closed_at": "2023-02-27T22:59:34Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2982",
    "body": "I want my app to have a hyperlink from root `/docs` to sub app `/docs`.\r\nIs is possible to link app docs and its sub app docs in swagger UI using FastAPI routines?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2982/comments",
    "author": "poul1x",
    "comments": [
      {
        "user": "Kludex",
        "created_at": "2021-03-23T14:53:56Z",
        "body": "You mean merging both? There's no native way to do that. \n\nYou'll need to create a custom openapi. \n\nI'm not on my computer, so I'll not provide a link, but you can search for \"custom openapi FastAPI\""
      },
      {
        "user": "poul1x",
        "created_at": "2021-03-23T16:47:10Z",
        "body": "I mean, in `/docs` of main app I have a hyperlink to `/docs` of sub app. In swagger UI"
      },
      {
        "user": "waynerv",
        "created_at": "2021-03-24T03:23:56Z",
        "body": "Seems unlikely to happen for swagger UI not providing a such feature.\r\n\r\nMaybe you can custom the openapi and write the hyperlink in `description`:\r\n```\r\nopenapi_schema = get_openapi(\r\n        title=settings.PROJECT_NAME,\r\n        version='0.0.1',\r\n        description='leave hyperlink here',\r\n        routes=app.routes,\r\n    )\r\n```"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-27T18:42:37Z",
        "body": "Thanks for the help here @Kludex and @waynerv ! 👏  🙇 \r\n\r\nThanks for coming back and closing the issue @poul1x  👍\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2979,
    "title": "Adding return value of an SQLAlchemy Model instance method to response model",
    "created_at": "2021-03-22T12:55:53Z",
    "closed_at": "2023-02-27T22:59:27Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2979",
    "body": "Apologies if this is a very basic question but I had a little trouble finding examples of this online, perhaps I'm searching for the wrong thing.\r\n\r\n### Question\r\n\r\nGiven a SQLAlchemy model with an instance method, how can I return the result of calling the method in the body of a response returning an instance of that model?\r\n\r\n### Example\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\nfrom sqlalchemy import Column, Integer, String\r\nfrom sqlalchemy.orm import relationship\r\nfrom pydantic import BaseModel\r\n\r\nfrom .database import Base\r\n\r\napp = FastAPI()\r\n\r\n\r\nclass User(Base):\r\n    __tablename__ = \"users\"\r\n\r\n    id = Column(Integer, primary_key=True, index=True)\r\n    first_name = Column(String)\r\n    last_name = Column(String)\r\n\r\n    def full_name(self):\r\n        return f\"{self.first_name} {self.last_name}\"\r\n\r\n\r\nclass UserOut(BaseModel):\r\n    full_name: str\r\n\r\n\r\n@app.get(\"/\")\r\ndef read_root(response_model=UserOut):\r\n    user = # fetch user here\r\n    return user\r\n```\r\n\r\n### Description\r\n\r\nThe above example (not functional as it is) throws an error because the `UserOut` model expects `full_name` to be a property on the `User` model, not a method. Is there a way I could add the `full_name` instance method to the `response_model` so I can return the user's full name in the response body? \r\n\r\nIf I make `full_name` a property with the `@property` decorator then the example above works, but for my use case I'd prefer to have it as an instance method so it can accept arguments.\r\n\r\nThanks in advance for any advice offered.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2979/comments",
    "author": "dbatten5",
    "comments": [
      {
        "user": "jbmoorhouse",
        "created_at": "2021-03-23T23:08:39Z",
        "body": "I think you may be able to achieve this with?\r\n\r\n```\r\nclass UserOut(BaseModel):\r\n    full_name: str\r\n\r\n    def __init__(self, first_name: str, last_name: str, **data: Optional[Mapping[Any, Any]]):\r\n        super().__init__(full_name=f\"{first_name} {last_name}\", **data)\r\n```"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-27T18:46:32Z",
        "body": "Hmm, if you want `full_name` to be a method that can accept arguments, then there wouldn't be an easy way to make Pydantic call it automatically, probably less with some arguments.\r\n\r\nYou probably need something that generates the data automatically as a `@property`, but if you need it to be called, then you probably have to call it manually and generate the data that you need manually, and then return that.\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2022-12-08T00:14:07Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 2975,
    "title": "how do i get endpoint like flask  by request.endpoint",
    "created_at": "2021-03-22T03:10:04Z",
    "closed_at": "2023-02-27T22:59:19Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2975",
    "body": "### question\r\n\r\n- fastapi, how do i get endpoint; like flask  by request.endpoint ??",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2975/comments",
    "author": "un-human",
    "comments": [
      {
        "user": "ycd",
        "created_at": "2021-03-22T05:13:30Z",
        "body": "There is a similar request object.  \r\n```python\r\nasync def dummy(request: Request):\r\n    return request.url.path\r\n```\r\n"
      },
      {
        "user": "un-human",
        "created_at": "2021-03-22T05:42:01Z",
        "body": "> There is a similar request object.\r\n> \r\n> ```python\r\n> async def dummy(request: Request):\r\n>     return request.url.path\r\n> ```\r\n\r\nrequest.url.path Not what I wanted；\r\ni wanted the router_name and the function_name , like flask"
      },
      {
        "user": "ycd",
        "created_at": "2021-03-22T07:37:30Z",
        "body": "Hmm you mean something like this\r\n\r\n```python\r\nfrom starlette.routing import Match\r\n\r\nroutes = request.app.router.routes\r\nfor route in routes:\r\n    match, scope = route.matches(request)\r\n    if match == Match.FULL:\r\n        path = route.path\r\n```"
      },
      {
        "user": "un-human",
        "created_at": "2021-03-22T09:10:20Z",
        "body": "> Hmm you mean something like this\r\n> \r\n> ```python\r\n> from starlette.routing import Match\r\n> \r\n> routes = request.app.router.routes\r\n> for route in routes:\r\n>     match, scope = route.matches(request)\r\n>     if match == Match.FULL:\r\n>         path = route.path\r\n> ```\r\n\r\n```python\r\nfrom fastapi import APIRouter, FastAPI\r\napp = FastAPI()\r\nrouter = APIRouter(prefix='/user')\r\n\r\n@router.get(\"/route/{id}\")\r\nasync def route_time(id: int,request: Request):\r\n    # here,i want get the  \"user\" of router   and “route_time” of the function_name , not \"/route/{id}\" of url_path\r\n    pass\r\n\r\n```"
      },
      {
        "user": "ycd",
        "created_at": "2021-03-22T10:40:26Z",
        "body": "I assume it worked. "
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-27T18:36:17Z",
        "body": "Thanks for the help here @ycd ! 👏  🙇 \r\n\r\nThanks for coming back and closing the issue @stringk245  👍\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2962,
    "title": "String getting truncated",
    "created_at": "2021-03-19T06:40:48Z",
    "closed_at": "2023-02-27T22:59:10Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2962",
    "body": "from client the client side the entire string getting pass while coming to the backend the string getting truncated",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2962/comments",
    "author": "sheikzaidh",
    "comments": [
      {
        "user": "krishnardt",
        "created_at": "2021-03-19T06:43:15Z",
        "body": "Please follow the issue template with proper example, so that someone can understand issue and help you."
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-27T17:43:15Z",
        "body": "Thanks @krishnardt! :coffee: \r\n\r\nSorry, I can't help you if you don't follow the issue template and provide more information @sheikzaidh .\r\n\r\nIf you still have problems please create a new issue and follow the template step by step.\r\n\r\nGiven that, I'm gonna close this one.\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2927,
    "title": "how to accept the part dict of the json body as the dict rather than the entire json body",
    "created_at": "2021-03-10T14:15:52Z",
    "closed_at": "2023-02-27T23:19:20Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2927",
    "body": "OS: Ubuntu 18.04 LTS\r\nPython version: 3.6.9\r\nfastapi: 0.63.0\r\n\r\nThis is part of my code\r\n\r\n```python\r\n@router.post(\"/register\")\r\nasync def register(user:dict = Body(...)):\r\n    \"the code\"\r\n```\r\nHowever, when I sent the body like below\r\n```python\r\n{\r\n  \"user\":{\r\n    \"name\":\"john\",\r\n    \"age\":14,\r\n    \"position\": \"engineer\"\r\n  }\r\n}\r\n```\r\nI wanted the param _user_ to be accepted as\r\n```python\r\n{\r\n    \"name\":\"john\",\r\n    \"age\":14,\r\n    \"position\": \"engineer\"\r\n  }\r\n```\r\nbut it turned out to be the entire body\r\n```python\r\n{\r\n  \"user\":{\r\n    \"name\":\"john\",\r\n    \"age\":14,\r\n    \"position\": \"engineer\"\r\n  }\r\n}\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2927/comments",
    "author": "0warning0error",
    "comments": [
      {
        "user": "raphaelauv",
        "created_at": "2021-03-10T17:10:56Z",
        "body": "... filter the dict yourself , in your code\r\n\r\n```python\r\n@router.post(\"/register\")\r\nasync def register(user:dict = Body(...)):\r\n    print(user[\"user\"])\r\n\r\n```\r\n\r\nyou could also do a model ( pydantic ) for an input validation of the json\r\n\r\nyou can close your issue , thank you"
      },
      {
        "user": "0warning0error",
        "created_at": "2021-03-11T01:54:30Z",
        "body": "> ... filter the dict yourself , in your code\r\n> \r\n> ```python\r\n> @router.post(\"/register\")\r\n> async def register(user:dict = Body(...)):\r\n>     print(user[\"user\"])\r\n> ```\r\n> \r\n> you could also do a model ( pydantic ) for an input validation of the json\r\n> \r\n> you can close your issue , thank you\r\n\r\nWell, even if there has been no perfect method, I find a somewhat elegant way to solve.\r\n\r\nadd a optional param that cannot be captured to the function and the param _user_ will be accepted as I want\r\n\r\n```python\r\n@router.post(\"/register\")\r\nasync def register(user:dict = Body(...),_:Optional[str] = Body(\"\")):\r\n    \"the code\"\r\n```\r\n"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-27T16:25:03Z",
        "body": "Thanks for the help here @raphaelauv ! 👏  🙇 \r\n\r\nI'm not sure I understood what you needed but I'm glad you solved your use case!\r\n\r\nThanks for reporting back and closing the issue 👍 :coffee: \r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-27T23:04:15Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 2918,
    "title": "Technical reviewer needed",
    "created_at": "2021-03-09T01:47:07Z",
    "closed_at": "2023-02-27T23:18:56Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2918",
    "body": "Hello,\r\nI dont know if this is the right place to ask this but is there anyone here up to reviewing a technical resource on FastAPI?\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2918/comments",
    "author": "aitoehigie",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2021-03-09T06:11:29Z",
        "body": "There's a jobs channel in the discord server, GitHub issues aren't the best place for job offers"
      },
      {
        "user": "aitoehigie",
        "created_at": "2021-03-09T09:11:08Z",
        "body": "Thank you."
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-24T14:11:24Z",
        "body": "Thanks for the help here @Mause ! 👏  🙇 \r\n\r\nThanks for coming back and closing the issue @aitoehigie  👍\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2917,
    "title": "Is using Path() params in a Depends() ok?",
    "created_at": "2021-03-08T18:45:08Z",
    "closed_at": "2023-02-27T23:18:54Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2917",
    "body": "I want to validate a token based on what path is being accessed. I don't see anything similar in the documentation. Below is a simplified working example of the situation. My question is: Is this a valid usage, or is it abusing the fastapi API?\r\n\r\n```py\r\nfrom fastapi import Depends, FastAPI, Header, HTTPException, Path, status\r\n\r\napp = FastAPI()\r\n\r\nauth_table = {\"me\": \"whee43\", \"you\": \"whaa32\", \"Hermoine\": \"SPEW4life\"}\r\n\r\ndef user_validator(user: str = Path(...), x_token: str = Header(...)):\r\n    if user in auth_table and auth_table[user] == x_token:\r\n        return user\r\n    raise HTTPException(status_code=status.HTTP_401_UNAUTHORIZED)\r\n\r\n@app.get(\"/users/{user}\")\r\nasync def get_user(valid_user=Depends(user_validator)):\r\n    return {\"user\": valid_user}\r\n```",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2917/comments",
    "author": "vdwees",
    "comments": [
      {
        "user": "SnkSynthesis",
        "created_at": "2021-03-09T02:27:19Z",
        "body": "Yes, it is valid usage especially if you want to use `Path(...)` for validation, documentation, etc."
      },
      {
        "user": "vdwees",
        "created_at": "2021-03-10T07:48:35Z",
        "body": "Excellent, thanks!"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-27T13:16:21Z",
        "body": "Thanks for the help here @SnkSynthesis ! 👏  🙇 \r\n\r\nAnd yep, that's fine! :heavy_check_mark: \r\n\r\nThanks for reporting back and closing the issue @vdwees  👍\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2895,
    "title": "load balancing  in fastapi websocket ",
    "created_at": "2021-03-04T11:26:05Z",
    "closed_at": "2023-02-27T23:17:52Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2895",
    "body": "\r\nhi,\r\nwe use fastapi web-socket in our project.  using docker  we create more than one instance of fastapi containers.  \r\nhow do we  implement fastapi application so that we can use a centralized web-socket system in such a load balanced configuration?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2895/comments",
    "author": "lveng",
    "comments": [
      {
        "user": "Dustyposa",
        "created_at": "2021-03-05T03:23:54Z",
        "body": "Which load balancing can use in your system?\r\nI think this is not a qa for `fastapi`, better in `k8s、etc.....` "
      },
      {
        "user": "lveng",
        "created_at": "2021-03-05T11:35:04Z",
        "body": "The question is: we want to use mulltiple fastapi containers in a docker swarm. Will be able to  manage  multiple clients of fastapi websocket  in coordination, like sending a message to a websocket   in another container? "
      },
      {
        "user": "ycd",
        "created_at": "2021-03-05T16:42:50Z",
        "body": "> Will be able to manage multiple clients of fastapi websocket in coordination, like sending a message to a websocket in another container?\r\n\r\nDo you want load balancer to manage this?"
      },
      {
        "user": "stevenj",
        "created_at": "2021-03-20T09:28:28Z",
        "body": "@lveng you can and you will need to manage this yourself.  I do it with a manager class that manages the websockets running on a particular instance.  I also have a DB which stores which instance the websocket is connected to.  Then if i am in another instance and I need to send a message out a websocket i lookup in the DB where the websocket is being managed and send a message direct to that instance (We use a UDP message for this, directed to a known port that each manager is listening on.)  The manager then gets the message and sends from UDP and then sends it out its websocket."
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-27T17:46:01Z",
        "body": "Thanks for the help here everyone! 👏  🙇 \r\n\r\nIf that solves the original problem, then you can close this issue @lveng  ✔️\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2022-12-08T00:14:27Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 2891,
    "title": "Can not see query parameter description in redoc?",
    "created_at": "2021-03-03T10:02:29Z",
    "closed_at": "2023-02-27T23:17:32Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2891",
    "body": "I mapped query parameters with pydantic model.\r\n\r\nasync def get(params: XXXModel = Depends()):\r\n\r\nIt works perfectly and I can see query parameters details in redoc.\r\nBut only one missing is I can't see query parameter description.\r\nOf course I added description to filed in model definition.\r\nI can see name, type, required or not, max length, min length etc.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2891/comments",
    "author": "heindrickdumdum0217",
    "comments": [
      {
        "user": "varun5001",
        "created_at": "2021-03-03T15:31:39Z",
        "body": "@heindrickdumdum0217 can you share your fastapi version and your model"
      },
      {
        "user": "heindrickdumdum0217",
        "created_at": "2021-03-03T16:59:23Z",
        "body": "fastapi==0.63.0\r\n\r\nAnd model is pretty simple.\r\nJust country code and language.\r\n\r\nclass RequestModel(BaseModel):\r\n    cc: str = Field(\r\n        ...,\r\n        title=\"country code\",\r\n        description=\"The two-letter country code\",\r\n        min_length=2,\r\n        max_length=2,\r\n        example=[\"US\"]\r\n    )\r\n    lang: str = Field(\r\n        None,\r\n        title=\"language\",\r\n        description=\"language\",\r\n        min_length=2,\r\n        max_length=2\r\n    )"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-14T20:12:03Z",
        "body": "Sorry, I can't help you if you don't follow the issue template and provide more information.\r\n\r\nIf you still have problems please create a new issue and follow the template step by step.\r\n\r\nGiven that, I'm gonna close this one.\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2883,
    "title": "there is any way to change pydantic body base incoming request?",
    "created_at": "2021-03-01T20:45:50Z",
    "closed_at": "2023-02-27T23:17:10Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2883",
    "body": "in django rest framework we use `get_serializer_class` in `GenericAPIView` to change serializer base incoming request .\r\nI use multiple type user and base on each user needs different pydantic body. for solve and handling  i use multiple route. there is any way to change pydantic body base incoming request? ",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2883/comments",
    "author": "zedrood",
    "comments": [
      {
        "user": "ycd",
        "created_at": "2021-03-02T08:02:52Z",
        "body": "You can use something like this\r\n\r\n\r\n```python\r\nclass A(BaseModel):\r\n    b: Union[SomeModelA, SomeModelB]\r\n\r\n    @validator(\"b\", pre=True)\r\n    def validate_b(cls, value):\r\n        if isinstance(value, dict):\r\n            someField = value.get(\"someInnerField\")\r\n            if someField == \"abc\":\r\n                return SomeModelA(**value)\r\n            elif someField == \"def\":\r\n                return SomeModelB(**value)\r\n```\r\n"
      },
      {
        "user": "zedrood",
        "created_at": "2021-03-02T08:28:20Z",
        "body": "thanks for answer @ycd  but problem is not solve each user has own permission on request and i use custom pydantic body for each user. any user can send custom pydantic body and we no that user can access on  pydantic body. can check permission user before check body and set own custom pydantic body ? "
      },
      {
        "user": "zedrood",
        "created_at": "2021-03-02T08:38:01Z",
        "body": "let me explain something like this in drf \r\n```python\r\nclass ChangeSerializerBaseTypeUserView(GenericViewSet):\r\n        ...\r\n\t\r\n\tdef get_serializer_class(self):\r\n\t\tif self.request.user.type == 1:\r\n\t\t    self.serializer_class = OneSerializer\r\n\t\telif self.request.user.type == 2:\r\n\t\t    self.serializer_class = TwoSerializer\r\n\t\telse:\r\n\t\t    self.serializer_class = OtherSerializer\r\n\t\treturn self.serializer_class\r\n\t\r\n\t...\r\n```\r\nthere is somthing like that in fastapi ? \r\ni use Depends for check permission and get current user.\r\n"
      },
      {
        "user": "insomnes",
        "created_at": "2021-03-02T08:59:26Z",
        "body": "@zedrood hello!\r\nYou can try to use `def handler(user: Union[UserModelA, UserModelB, UserModelC]):` if you have different user models which have some distinct fields."
      },
      {
        "user": "ycd",
        "created_at": "2021-03-02T09:53:21Z",
        "body": "@insomnes as far as i understand from the example he gave above, the fields are the same, but he wants to use different serializer for same fields with different types. \r\n\r\n>  i use custom pydantic body for each user. any user can send custom pydantic body and we no that user can access on pydantic body. can check permission user before check body and set own custom pydantic body ?\r\n\r\nCan you rephrase this? "
      },
      {
        "user": "zedrood",
        "created_at": "2021-03-02T10:21:26Z",
        "body": "Thanks for your answer two people @insomnes , @ycd\r\nlet me explain with example for clear what i want\r\ni two type user and two different serializer \r\n```python\r\nclass Test1Serializer(BaseModel):\r\n    x: str\r\n    y:int \r\n    z: float \r\n\r\n\r\nclass Test2Serializer(BaseModel):\r\n    t: str\r\n    n:str \r\n    u: str\r\n```\r\nfor use two user and serializer i must be two different route like this\r\n```python\r\n@router.post(\"/test1/\")\r\nasync def test1(\r\n    test_serializer: Test1Serializer = Body(...),\r\n    current_user = Depends(get_user1),\r\n):\r\n    ...\r\n\r\n\r\n@router.post(\"/test2/\")\r\nasync def test2(\r\n    test_serializer: Test2Serializer = Body(...),\r\n    current_user = Depends(get_user2),\r\n):\r\n    ...\r\n```\r\nbut i want merge two upper route in one route. before client send body i want to check permission user and set custom serializer (pydantic) body. for now i use this below code but the client can send any of the serializers and these serializers are own validation and client base on own permission not allow to send other serializers.\r\n```python\r\n@router.post(\"/test/\")\r\nasync def test(\r\n    test_serializer: Union[Test1Serializer, Test2Serializer] = Body(...),\r\n    current_user = Depends(get_user1_or_user2),\r\n):\r\n    if current_user.type == 1 and type(test_serializer) == Test1Serializer :\r\n        ...\r\n    elif current_user.type == 2 and type(test_serializer) == Test2Serializer :\r\n        ...\r\n```\r\n"
      },
      {
        "user": "zedrood",
        "created_at": "2021-03-02T19:19:21Z",
        "body": "i resolve this problem with this below code \r\n```python\r\nfrom fastapi.exception_handlers import RequestValidationError\r\nfrom pydantic import ValidationError\r\n\r\n@router.post(\"/test/\")\r\nasync def test(\r\n    test_serializer = Body(...),\r\n    current_user = Depends(get_user1_or_user2),\r\n):\r\n\t\r\n    if current_user.type == 1:\r\n    \ttry:\r\n    \t\tdata = Test1Serializer(**test_serializer).dict()\r\n    \texcept ValidationError as ex:\r\n    \t\traise RequestValidationError(errors=ex.raw_errors, body=test_serializer)\r\n        \r\n    \r\n    elif current_user.type == 2:\r\n    \ttry:\r\n    \t\tdata = Test2Serializer(**test_serializer).dict()\r\n    \texcept ValidationError as ex:\r\n    \t\traise RequestValidationError(errors=ex.raw_errors, body=test_serializer)\r\n   \r\n     ...\r\n```"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-14T19:41:34Z",
        "body": "Thanks for the help here everyone! 👏  🙇 \r\n\r\nThanks for reporting back and closing the issue @zedrood  👍"
      }
    ]
  },
  {
    "number": 2861,
    "title": "subclassing FastAPI",
    "created_at": "2021-02-22T23:52:56Z",
    "closed_at": "2023-02-27T23:16:15Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2861",
    "body": "I tried recently to subclass a FastAPI class to create a more concrete class. I didn't get any python errors but the response from FastAPI was the normal JSON error response. And all examples I've seen, I've not seen anywhere were FastAPI is subclassed so far.\nSo is it possible to subclass FastAPI class?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2861/comments",
    "author": "TobiasHT5",
    "comments": [
      {
        "user": "ycd",
        "created_at": "2021-02-23T07:39:45Z",
        "body": "It is not possible to see where you made mistakes without any code, Can you follow the issue template?"
      },
      {
        "user": "TobiasHT5",
        "created_at": "2021-03-01T22:42:43Z",
        "body": "```python\r\nfrom fastapi import FastAPI\r\n\r\nclass NewAPI(FastAPI):\r\n      def __init__(self):\r\n           super(NewAPI,self).__init__()\r\n      def get(self,path:str = \"/home\"):\r\n           return {\"greeting\":\"welcome home\"}\r\n```\r\nthat's sort of an example of what i was talking about. the one i wrote didn't have any python errors. but instead of returning the response of NewAPI's get method, it instead return an error JSON file\r\n``` json\r\n{\r\n    \"detail\": [\r\n        {\r\n            \"loc\": [\r\n                \"path\",\r\n                \"item_id\"\r\n            ],\r\n            \"msg\": \"value is not a valid integer\",\r\n            \"type\": \"type_error.integer\"\r\n        }\r\n    ]\r\n}\r\n```"
      },
      {
        "user": "Mause",
        "created_at": "2021-03-01T23:38:12Z",
        "body": "That error does not appear to be related to the code you have provided.\r\n\r\nAnd to answer your question, no, the `FastAPI` class is not intended to be subclassed to implement routes."
      },
      {
        "user": "ycd",
        "created_at": "2021-03-02T08:06:19Z",
        "body": "> ```python\r\n> from fastapi import FastAPI\r\n> \r\n> class NewAPI(FastAPI):\r\n>       def __init__(self):\r\n>            super(NewAPI,self).__init__()\r\n>       def get(self,path:str = \"/home\"):\r\n>            return {\"greeting\":\"welcome home\"}\r\n> ```\r\n> \r\n\r\nAhhh, i see, use class-based views from dmontagu's fastapi-utils.\r\n\r\nIt will be way more cleaner solution than subclassing FastAPI."
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-14T20:16:21Z",
        "body": "Thanks for the help here everyone! 👏  🙇 \r\n\r\nThanks for reporting back and closing the issue @ht-thomas  👍\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2856,
    "title": "  Exception in ASGI application",
    "created_at": "2021-02-21T14:46:48Z",
    "closed_at": "2023-02-27T23:16:03Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2856",
    "body": "Traceback (most recent call last):\r\n  File \"c:\\users\\sortol\\anaconda3\\lib\\site-packages\\uvicorn\\protocols\\http\\h11_impl.py\", line 394, in run_asgi\r\n    result = await app(self.scope, self.receive, self.send)\r\n  File \"c:\\users\\sortol\\anaconda3\\lib\\site-packages\\uvicorn\\middleware\\proxy_headers.py\", line 45, in __call__\r\n    return await self.app(scope, receive, send)\r\n  File \"c:\\users\\sortol\\anaconda3\\lib\\site-packages\\fastapi\\applications.py\", line 199, in __call__\r\n    await super().__call__(scope, receive, send)\r\n  File \"c:\\users\\sortol\\anaconda3\\lib\\site-packages\\starlette\\applications.py\", line 111, in __call__\r\n    await self.middleware_stack(scope, receive, send)\r\n  File \"c:\\users\\sortol\\anaconda3\\lib\\site-packages\\starlette\\middleware\\errors.py\", line 181, in __call__\r\n    raise exc from None\r\n  File \"c:\\users\\sortol\\anaconda3\\lib\\site-packages\\starlette\\middleware\\errors.py\", line 159, in __call__\r\n    await self.app(scope, receive, _send)\r\n  File \"c:\\users\\sortol\\anaconda3\\lib\\site-packages\\starlette\\exceptions.py\", line 82, in __call__\r\n    raise exc from None\r\n  File \"c:\\users\\sortol\\anaconda3\\lib\\site-packages\\starlette\\exceptions.py\", line 71, in __call__\r\n    await self.app(scope, receive, sender)\r\n  File \"c:\\users\\sortol\\anaconda3\\lib\\site-packages\\starlette\\routing.py\", line 566, in __call__\r\n    await route.handle(scope, receive, send)\r\n  File \"c:\\users\\sortol\\anaconda3\\lib\\site-packages\\starlette\\routing.py\", line 227, in handle\r\n    await self.app(scope, receive, send)\r\n  File \"c:\\users\\sortol\\anaconda3\\lib\\site-packages\\starlette\\routing.py\", line 41, in app\r\n    response = await func(request)\r\n  File \"c:\\users\\sortol\\anaconda3\\lib\\site-packages\\fastapi\\routing.py\", line 201, in app\r\n    raw_response = await run_endpoint_function(\r\n  File \"c:\\users\\sortol\\anaconda3\\lib\\site-packages\\fastapi\\routing.py\", line 148, in run_endpoint_function\r\n    return await dependant.call(**values)\r\n  File \".\\main.py\", line 21, in predict_image\r\n    predictions = predict(flower_img)\r\n  File \".\\helpers.py\", line 42, in predict\r\n    response = requests.post(URL, data=data, headers=headers)\r\n  File \"c:\\users\\sortol\\anaconda3\\lib\\site-packages\\requests\\api.py\", line 119, in post\r\n    return request('post', url, data=data, json=json, **kwargs)\r\n  File \"c:\\users\\sortol\\anaconda3\\lib\\site-packages\\requests\\api.py\", line 61, in request\r\n    return session.request(method=method, url=url, **kwargs)\r\n  File \"c:\\users\\sortol\\anaconda3\\lib\\site-packages\\requests\\sessions.py\", line 530, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"c:\\users\\sortol\\anaconda3\\lib\\site-packages\\requests\\sessions.py\", line 643, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"c:\\users\\sortol\\anaconda3\\lib\\site-packages\\requests\\adapters.py\", line 516, in send\r\n    raise ConnectionError(e, request=request)\r\nrequests.exceptions.ConnectionError: HTTPConnectionPool(host='localhost', port=8501): Max retries exceeded with url: /v1/models/flower-classification:predict (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000024818853520>: Failed to establish a new connection: [WinError 10061] No connection \r\ncould be made because the target machine actively refused it'))\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2856/comments",
    "author": "Adesoji1",
    "comments": [
      {
        "user": "ycd",
        "created_at": "2021-02-21T15:15:20Z",
        "body": "Can you follow the issue template? "
      },
      {
        "user": "aalifadv",
        "created_at": "2021-02-21T15:40:24Z",
        "body": "Hi @Adesoji1  \r\n\r\nI second the folks that you really should use the issue template so we can help you better.\r\n\r\nplease notice that your exception is caused by this line:\r\n\r\n`response = requests.post(URL, data=data, headers=headers)`\r\n\r\nThe error message that is interesting is this:\r\n\r\n> No connection could be made because the target machine actively refused it\r\nwhich suggests that whatever URL you are trying to request in that line of code is refusing the connection. \r\n\r\nand that gets me to wonder, why do you think this is a FastAPI issue? :broken_heart: "
      },
      {
        "user": "Adesoji1",
        "created_at": "2021-02-21T20:32:45Z",
        "body": "ok,it's not a FASTAPI issue"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-12T15:49:55Z",
        "body": "Thanks for the help here @ycd  and @aalifadv ! 👏  🙇 \r\n\r\nThanks for reporting back and closing the issue @Adesoji1  👍\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2843,
    "title": "how to compare or distinguish two different websockets in fastapi?",
    "created_at": "2021-02-19T13:53:43Z",
    "closed_at": "2023-02-27T23:15:36Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2843",
    "body": "\r\n### Front End\r\nFrom the same page, if Connect button clicked multiple times, multiple WebSocket requests landing in the backend.\r\n\r\n```Python\r\n<!DOCTYPE html>\r\n<html>\r\n    <head>\r\n        <title>Chat</title>\r\n    </head>\r\n    <body>\r\n        <h1>WebSocket Chat</h1>\r\n        <form action=\"\" onsubmit=\"sendMessage(event)\">\r\n            <label>Token: <input type=\"text\" id=\"token\" autocomplete=\"off\" value=\"some-key-token\"/></label>\r\n            <button onclick=\"connect(event)\">Connect</button>\r\n            <hr>\r\n            <!-- <label>Message: <input type=\"text\" id=\"messageText\" autocomplete=\"off\"/></label> -->\r\n            <!-- <button>Send</button> -->\r\n        </form>\r\n        <ul id='messages'>\r\n        </ul>\r\n        <script>\r\n        var ws = null;\r\n            function connect(event) {\r\n                var token = document.getElementById(\"token\")\r\n                ws = new WebSocket(\"ws://localhost:6003/ws/v1/inbox/test?token=\" + token.value);\r\n\t\t\t\t\r\n\t\t\t\tws.onopen = function () {\r\n\t\t\t\t  console.log('socket opened'); \r\n\t\t\t\t};\r\n                ws.onmessage = function(event) {\r\n                    var messages = document.getElementById('messages')\r\n                    var message = document.createElement('li')\r\n\t\t\t\t\tvar content = document.createTextNode(event.data)\r\n                    <!-- var data = document.createTextNode(event.data) -->\r\n\t\t\t\t\t<!-- var content = \"message:\" + data.message -->\r\n                    message.appendChild(content)\r\n                    messages.appendChild(message)\r\n                };\r\n\t\t\t\t\r\n\t\t\t\tws.onclose = function(e) {  \r\n\t\t\t\t  console.log('socket closed from server'); \r\n\t\t\t\t}\r\n\r\n\t\t\t\tws.onerror = function(err) {\r\n\t\t\t\t  console.error(err)\r\n\t\t\t\t};\r\n\t\t\t\t\r\n                event.preventDefault()\r\n            }\r\n            function sendMessage(event) {\r\n                var input = document.getElementById(\"messageText\")\r\n                ws.send(input.value)\r\n                input.value = ''\r\n                event.preventDefault()\r\n            }\r\n        </script>\r\n    </body>\r\n</html>\r\n```\r\n\r\n\r\n\r\n\r\n### Back End\r\nHere we are adding incoming WebSockets to a list. Here we want to compare incoming WebSockets considering the request source. The important thing a user should be able to connect from different devices, browsers, or browser tabs. \r\n\r\n```Python\r\nfrom fastapi import FastAPI, Request, Depends, WebSocket, WebSocketDisconnect, Query\r\n\r\napp = FastAPI()\r\n\r\nclass WebSocketConnectionModel:\r\n    user_id: int\r\n    account_id: int\r\n    connection_date_time_utc: datetime\r\n    socket: WebSocket\r\n\r\n\r\nclass SocketManager:\r\n    def __init__(self):\r\n        self.connections: List[WebSocketConnectionModel] = []\r\n\r\n    def len(self):\r\n        return len(self.connections)\r\n\r\n    def connect(self, account_id: int, user_id: int, websocket: WebSocket):\r\n        connection = WebSocketConnectionModel()\r\n        connection.account_id = account_id\r\n        connection.user_id = user_id\r\n        connection.socket = websocket\r\n        connection.connection_date_time_utc = datetime.utcnow()\r\n        self.connections.append(connection)\r\n        return connection\r\n\r\n    def disconnect(self, item: WebSocketConnectionModel):\r\n        self.connections.remove(item)\r\n\r\n\r\n\r\nmanager = SocketManager()\r\n\r\nasync def websocket_test(websocket: WebSocket, access_token: str = Query(..., alias=\"token\")):\r\n    user = get_current_user_from_query_token(access_token)\r\n    await websocket.accept()\r\n   #add connection to a list\r\n    connection = manager.connect(user.account_id, user.id, websocket)\r\n    try:\r\n        while True:\r\n            data = await websocket.receive_json()\r\n    except WebSocketDisconnect:\r\n        manager.disconnect(connection)\r\n\r\napp.add_websocket_route(\"/ws/v1/inbox/test\", facebook_inbox.websocket_test)\r\n\r\n```\r\n\r\nIs there any way to identify incoming WebSocket object and compare with an existing list, to avoid adding duplicates? Is there any unique identifier in WebSocket object?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2843/comments",
    "author": "DiponRoy",
    "comments": [
      {
        "user": "aalifadv",
        "created_at": "2021-02-21T12:34:17Z",
        "body": "> Is there any way to identify incoming WebSocket object and compare with an existing list to avoid adding duplicates? Is there any unique identifier in WebSocket object?\r\n\r\nThis really depends on what you consider a unique identifier and what goes into formulating the unique identifier. WebSocket allow the pass of paramaters  in the header, query and path. You can use the passed information from the client to generate unique identifier in the backend as you desire and then store it.  It can be a simple hash function that takes what you think should formulate unique identifiers e.g device_info:browser_info:client_ip -> uniquID.\r\n\r\nI have never seen this handled by a framework in the past so I dont think FastAPI would be the right place to add such a logic."
      },
      {
        "user": "stevenj",
        "created_at": "2021-02-22T08:40:39Z",
        "body": "@aalifadv is correct.  IF you have any authentication (i use basic auth over tls) you would use that to uniquely identify a client.  If a client can connect multiple times, and you need to distinguish their connections, generate a UUID on connection in the client and send it in a header, or send it as the very first message from the client.  This is an example of ways you could solve this.  Websockets are very \"Laissez-faire\" so your not going to find a bunch of prescriptive rules telling you how you must communicate, but with that freedom comes the responsibility to work out issues like this for your self.  If you work out a way that works for you, it is by definition, correct."
      },
      {
        "user": "DiponRoy",
        "created_at": "2021-02-23T06:27:45Z",
        "body": "@aalifadv and @stevenj thank you for the idea, it will work for me."
      },
      {
        "user": "redigaffi",
        "created_at": "2022-05-24T08:47:08Z",
        "body": "@aalifadv Well, in socket.IO (node.js) you actually get an identifier that you can access with: socket.id"
      }
    ]
  },
  {
    "number": 2807,
    "title": "SQLalchemy: sqlalchemy.exc.InvalidRequestError: SQL expression, column, or mapped entity expected - got 'Ellipsis'",
    "created_at": "2021-02-15T04:39:43Z",
    "closed_at": "2023-02-27T23:14:22Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2807",
    "body": "Hi there, I finally made a restapi using FastAPI and is up and running perfectly! I can fetch and push data from my database, and im quite happy :)\r\n\r\nHowever, Im trying to do a inner join using 2 tables, but im getting this error: `sqlalchemy.exc.InvalidRequestError: SQL expression, column, or mapped entity expected - got 'Ellipsis'`\r\n\r\nAnd i have no idea why..\r\n\r\nthis is my \"models.py\":\r\n\r\n```\r\nclass UserProfiles(Base):\r\n    __tablename__ = \"user_profiles\"\r\n\r\n    user_ID = Column(Integer, primary_key=True, index=True)\r\n    email_adress = Column(String, unique=True)\r\n    age = Column(Integer)\r\n    sex = Column(Integer)\r\n    height = Column(Integer)\r\n    weight = Column(Integer)\r\n    main_goal = Column(Integer)\r\n    level_experience = Column(Integer)\r\n    profile_created_at = Column(Date)\r\n\r\n\r\nclass Exercises(Base):\r\n    __tablename__ = \"exercises\"\r\n\r\n    exercise_ID = Column(Integer, primary_key=True, index=True)\r\n    exercise_name = Column(String)\r\n    exercise_type = Column(String, nullable=True)\r\n    muscle_groups_worked_out = Column(String)\r\n    equipment_ID = Column(Integer, nullable=True)\r\n\r\n\r\nclass WorkOutPlanTask(Base):\r\n    __tablename__ = \"workout_plan_task\"\r\n\r\n    task_ID = Column(Integer, primary_key=True, index=True)\r\n    user_ID = Column(Integer, ForeignKey(\"user_profiles.user_ID\"))\r\n    workout_plan_ID = Column(Integer, ForeignKey(\"workout_plan.workout_plan_ID\"))\r\n    exercise_ID = Column(Integer, ForeignKey(\"exercises.exercise_ID\"))\r\n    repetitions = Column(Integer)\r\n    sets = Column(Integer)\r\n    pause_time = Column(Integer)\r\n    day_to_perform_the_task = Column(String)\r\n```\r\n\r\ninside my \"crud.py\" i have this:\r\n\r\n```\r\ndef get_workout_plan_for_user(db: Session, user_id:int):\r\n    return db.query(models.WorkOutPlanTask).join(models.UserProfiles, models.UserProfiles.user_ID == models.WorkOutPlanTask.user_ID).join(models.Exercises, models.Exercises.exercise_ID == models.WorkOutPlanTask.exercise_ID).filter(models.UserProfiles.user_ID == user_id)\r\n    \r\n```\r\n\r\n\r\nand in \"main.py\":\r\n\r\n\r\n```\r\n@app.get(\"/all_workout_plan_tasks_for_a_user/{user_id}\")\r\ndef get_workout_plan_for_user_by_userID(user_id: int, db:Session = Depends(get_db)):\r\n    db_workout_plan = crud.get_workout_plan_for_user(db, user_id=user_id)\r\n    if db_workout_plan is None:\r\n        raise HTTPException(status_code=404, detail=\"sorry.. no workoutplans found ..\")\r\n    return [schemas.a_workout_plan_task.from_orm(v) for v in db.query(...)]\r\n```\r\n\r\n\r\nany help i can get on this?\r\n\r\n\r\n\r\nin case you need it: the mySql code i run inside the database for this query is:\r\n\r\n```\r\nselect `the_user`.`email_adress`, `the_exercise`.`exercise_name`, `run_the_workout`.`repetitions`,`run_the_workout`.`sets`,`run_the_workout`.`pause_time`,`run_the_workout`.`day_to_perform_the_task`  \r\n\r\nfrom  `workout_plan_task` `run_the_workout`  \r\ninner join `user_profiles` `the_user` on  `run_the_workout`.the_user=`the_user`.user_id\r\ninner join `exercises` `the_exercise` on `the_exercise`.`exercise_ID` = `run_the_workout`.`the_exercise`\r\nWHERE  `run_the_workout`.the_user=1\r\n```\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2807/comments",
    "author": "vlori2k",
    "comments": [
      {
        "user": "ycd",
        "created_at": "2021-02-16T22:54:39Z",
        "body": "The error comes from here, ellipsis should be used as placeholder. You are trying to query it.\r\n \r\n```python\r\ndb.query(...)\r\n```"
      },
      {
        "user": "aalifadv",
        "created_at": "2021-02-18T19:41:56Z",
        "body": "This is really not a FastAPI issue. It is as @ycd mentioned a problem with your db.query. In general, I would do the following to find out what actually is the SQL statment prepared by SqlAlchemy:\r\n\r\n```python\r\nfrom sqlalchemy.orm import Query\r\nquery = Query(models.WorkOutPlanTask).join(models.UserProfiles, models.UserProfiles.user_ID == models.WorkOutPlanTask.user_ID).join(models.Exercises, models.Exercises.exercise_ID == models.WorkOutPlanTask.exercise_ID).filter(models.UserProfiles.user_ID == user_id)\r\nprint(query)\r\n```"
      },
      {
        "user": "vlori2k",
        "created_at": "2021-02-19T11:33:45Z",
        "body": "Thank you so much! It was not an FastAPI, it was a query issue. "
      },
      {
        "user": "KetanSomvanshi",
        "created_at": "2021-07-02T13:03:56Z",
        "body": "This is query issue ... but how to solve this?\r\nFastAPI docs show this way only"
      },
      {
        "user": "rotten",
        "created_at": "2021-07-02T13:20:53Z",
        "body": "If you are sure it is a query issue, then make a little test script that just runs the query without fastapi in the middle.  Then you can focus on the root cause without the framework around it.  You can even turn that into a unit test later, so once you've solved the issue, it won't go to waste.   Alternately, you change the query to the simplest possible configuration, confirm that works, and then gradually put pieces back in the query until it breaks.\r\n"
      },
      {
        "user": "KetanSomvanshi",
        "created_at": "2021-07-02T13:30:59Z",
        "body": "I mean it works the other way ... but we have to explicitly typecast model \r\n```\r\n db.query(WorkOutPlanTask).join(UserProfiles, UserProfiles.user_ID == WorkOutPlanTask.user_ID).........\r\n  .__to_model()\r\n \r\ndef __to_model(self):\r\n        return models.WorkOutPlanTask.from_orm(self)\r\n```\r\n\r\nI am just concerned that FastAPI documentation needs to be updated"
      }
    ]
  },
  {
    "number": 2802,
    "title": "Use Fastapi as file preview generator (MINIO endpoint)",
    "created_at": "2021-02-12T22:14:05Z",
    "closed_at": "2023-02-27T23:14:04Z",
    "labels": [
      "question",
      "answered",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2802",
    "body": "Hi Everyone. \r\nI've been trying to use FastApi as a file preview generator and after digging through the docummentation for some time I'm not sure whether I understand it correctly.\r\n\r\nSo here is exactly what I would like to accomplish:\r\na. send request to FastApi to generate file preview,\r\nb. check if the preview for requested file has already been generated (check cache folder), and return it if true.\r\nIf the preview file doesn't exists, proceed:\r\nc. send request to Minio endpoint, receive the file and save it in temp directory,\r\nd. run bash command to convert saved temp file to preview (pdf)\r\ne. return generated preview to client\r\nf. remove temp file and move generated preview to cache folder\r\n\r\nI would like to make this to work using async Fastapi endpoint. Is it possible/viable to do so, or should I use def endpoint (instead of async def)?\r\nAd. b. Is os.path.exists(filepath) viable to run it in async endpoint (to check whether file exists)?\r\nAd. c. It is better to use fastapi's \"run_in_threadpool together\" with minio-py \"client.fget_object('my-bucketname', 'my-objectname', 'filepath')\" to download the file from minio and \"with open('filename, 'wb) as f:\"  to write it to disk  (since minio-py is synchronous) or use aiobotocore and aiofiles to do it asynchronously (if it is possible)?\r\nAd. d. Thinking of using asyncio.create_subprocess_shell to do this asynchronously,\r\nAd. f. Running in Background Task. Can I use \"shutil.move\" (from \"temp\" to \"cache\" directory) and \"os.path.remove\" (unnecessary temp file) safely here?\r\n\r\nThank you for all the help.\r\n\r\n### Environment\r\n\r\n* OS: [Centos 8]\r\n* FastAPI Version [newest]\r\n* Python version: [3.9.1]\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2802/comments",
    "author": "idosdawid",
    "comments": [
      {
        "user": "ycd",
        "created_at": "2021-02-12T22:54:26Z",
        "body": "There are a lot things that depends on your infra, libraries etc.\r\n\r\n> Is os.path.exists(filepath) viable to run it in async endpoint (to check whether file exists)?\r\n\r\nSure. \r\n\r\n> It is better to use fastapi's \"run_in_threadpool together\" with minio-py \"client.fget_object('my-bucketname', 'my-objectname', 'filepath')\" to download the file from minio and \"with open('filename, 'wb) as f:\" to write it to disk (since minio-py is synchronous) or use aiobotocore and aiofiles to do it asynchronously (if it is possible)?\r\n\r\nThat depends on your infra, your budget etc. What are we considering here? \r\n\r\n> Thinking of using asyncio.create_subprocess_shell to do this asynchronously\r\n\r\nI am not sure i understand what are you going to run on subprocess shell.\r\n\r\nThat said, premature optimization is evil, changing the endpoint to `async def` to `def` is just 6 backwards easy, build it, benchmark it, if you unhappy with the results, optimize it. \r\n\r\n\r\n"
      },
      {
        "user": "idosdawid",
        "created_at": "2021-02-13T11:52:50Z",
        "body": "Thank you for the info. You are right. Probably it is better to start with def endpont first and then decide whether it needs additional tweaking or not."
      },
      {
        "user": "falkben",
        "created_at": "2021-02-14T16:51:25Z",
        "body": "`os.path.exists` does an OS stat operation which can be slow. I would run it in a threadpool just to be safe (not `async def` here)"
      },
      {
        "user": "ycd",
        "created_at": "2021-02-14T18:11:00Z",
        "body": "@falkben  I hardly disagree, `os.path.exists` is one of the fastest methods in the standard library. It uses `lstat` (`GetFileAttributes` for Windows) system call underneath which is O(1)."
      },
      {
        "user": "falkben",
        "created_at": "2021-02-14T21:06:52Z",
        "body": "Interesting. With network mounted storage I seem to remember it being rather slow, but perhaps I'm misremembering."
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-11T10:47:43Z",
        "body": "Thanks for the help here @ycd and @falkben ! 👏  🙇 \r\n\r\nIf you solved the original problem, then you can close this issue @idosdawid  ✔️\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2022-11-22T00:16:37Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 2795,
    "title": "Using app.dependency_overrides with parametrized depenencies",
    "created_at": "2021-02-11T18:11:44Z",
    "closed_at": "2023-02-27T23:13:53Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2795",
    "body": "Hi! \r\nI'm trying to test my FastAPI application and got into some trouble with `app.dependency_overrides`.\r\nI'm using parametrized dependencies and when I'm trying to add the dependency to the dependency_overrides dict and run my tests, the tests runs with the original dependency instead of the mock dependency I created.\r\nWhen I use regular function, it works fine. The problem occurs only with class dependencies.\r\nHere what I tried to do: \r\n```\r\nclass NameDependency:\r\n    def __init__(self, name: str):\r\n        self._name = name\r\n    def __call__(self) -> str:\r\n        return self._name\r\n\r\napp = FastAPI()\r\n\r\n@app.get('/')\r\nasync def hello(name: str = Depends(NameDependency('foo'))):\r\n    return {'message': f'hello {name}'}\r\n\r\nclient = TestClient(app)\r\napp.dependency_overrides[NameDependency] = Mock(return_value='bar')\r\n\r\ndef test_hello():\r\n    res = client.get('/')\r\n    assert res.json()['message'] == 'hello bar'\r\n```\r\nWhen I run this test, instead of passing, I get AssertionError hello foo == hello bar.\r\nI also tried the following alternatives:\r\n```\r\n# 1st alternative\r\napp.dependency_overrides[NameDependency('foo')] = Mock(return_value='bar')\r\n\r\n# 2nd alternative\r\napp.dependency_overrides[NameDependency] = Mock(return_value=Mock(return_value='bar'))\r\n```\r\nI've tried more but I could not find the correct way to do that. \r\nI think I'm missing something and I'll glad if someone can help me. I didn't find an example to this online and I didn't see this in the docs either. \r\n\r\nThanks for anyone that will help!",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2795/comments",
    "author": "shohamy7",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2021-02-12T07:33:56Z",
        "body": "It's because your NameDependency class isn't hashable (so the lookups in the dependency_overrides dict is failing).\r\nIt's easy to fix with dataclasses:\r\n\r\n```py\r\nfrom fastapi import FastAPI, Depends\r\nfrom fastapi.testclient import TestClient\r\nfrom dataclasses import dataclass\r\n\r\n\r\n@dataclass(frozen=True, eq=True)\r\nclass NameDependency:\r\n    name: str\r\n\r\n    def __call__(self) -> str:\r\n        return self.name\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/\")\r\nasync def hello(name: str = Depends(NameDependency(\"foo\"))):\r\n    return {\"message\": f\"hello {name}\"}\r\n\r\n\r\nclient = TestClient(app)\r\napp.dependency_overrides[NameDependency(\"foo\")] = lambda: \"bar\"\r\n\r\n\r\ndef test_hello():\r\n    res = client.get(\"/\")\r\n    assert res.json()[\"message\"] == \"hello bar\"\r\n```"
      },
      {
        "user": "shohamy7",
        "created_at": "2021-02-12T09:54:43Z",
        "body": "That's works, Thank you!\r\nI wish this would have been written in the docs, it would save me a lot of time :)"
      },
      {
        "user": "delijati",
        "created_at": "2021-04-14T12:23:02Z",
        "body": "> It's because your NameDependency class isn't hashable (so the lookups in the dependency_overrides dict is failing).\r\n> It's easy to fix with dataclasses:\r\n> \r\n> ```python\r\n> from fastapi import FastAPI, Depends\r\n> from fastapi.testclient import TestClient\r\n> from dataclasses import dataclass\r\n> \r\n> \r\n> @dataclass(frozen=True, eq=True)\r\n> class NameDependency:\r\n>     name: str\r\n> \r\n>     def __call__(self) -> str:\r\n>         return self.name\r\n> \r\n> \r\n> app = FastAPI()\r\n> \r\n> \r\n> @app.get(\"/\")\r\n> async def hello(name: str = Depends(NameDependency(\"foo\"))):\r\n>     return {\"message\": f\"hello {name}\"}\r\n> \r\n> \r\n> client = TestClient(app)\r\n> app.dependency_overrides[NameDependency(\"foo\")] = lambda: \"bar\"\r\n> \r\n> \r\n> def test_hello():\r\n>     res = client.get(\"/\")\r\n>     assert res.json()[\"message\"] == \"hello bar\"\r\n> ```\r\n\r\nTook me some time to find this ... Should definitely go to the docs or faq. Thanks a lot @Mause \r\nTo get this working on any `class` you have to overwrite `__eg__` and `__hash__`:\r\n\r\n```python\r\nclass JWTBearer(HTTPBearer):\r\n    def __init__(self, auto_error: bool = True):\r\n        super().__init__(auto_error=auto_error)\r\n\r\n    def __hash__(self):\r\n        # FIXME find something uniq and repeatable                                     \r\n        return 1234   \r\n   \r\n    def __eq__(self, other):                       \r\n        \"\"\"Overrides the default implementation\"\"\"\r\n        if isinstance(other, JWTBearer):\r\n            return self.auto_error == other.auto_error                  \r\n        return False\r\n```"
      },
      {
        "user": "alijewers",
        "created_at": "2022-07-06T12:24:45Z",
        "body": "Would be really great if this could make it into the documentation, our team has ended up back here several times now after encountering this problem independently"
      }
    ]
  },
  {
    "number": 2793,
    "title": "FastAPI errors, is the \"mySql\" the problem or problem in code? -->  File \"/usr/local/lib/python3.8/site-packages/fastapi/utils.py\", line 129, in create_response_field raise fastapi.exceptions.FastAPIError( fastapi.exceptions.FastAPIError: Invalid args for response field! Hint: check that <class 'sqlalchemy.orm.session.Session'> is a valid pydantic field type",
    "created_at": "2021-02-11T10:12:26Z",
    "closed_at": "2023-02-27T23:13:49Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2793",
    "body": "This question may have been asked before, but as I have been googling it and not found any solutions, i feel i need to ask here..\r\n\r\nSo, im trying to my FastAPI restapi server(which is up and running), so my \"mySql\" database using SQLalchemy.\r\n\r\nI think i have come pretty far, but im getting this Error: \r\n\r\n`File \"/usr/local/lib/python3.8/site-packages/fastapi/utils.py\", line 129, in create_response_field raise fastapi.exceptions.FastAPIError( fastapi.exceptions.FastAPIError: Invalid args for response field! Hint: check that <class 'sqlalchemy.orm.session.Session'> is a valid pydantic field type`\r\n\r\nSo before posting some of the snippets from my code, i have some questions:\r\n\r\n1. is my SQL string correct? \r\n2. Do i need BaseModel? is it necessary?\r\n3. How do i solve this error?\r\n\r\n\r\nCode snippets:\r\n\r\nmy database_config.py:\r\n\r\n```\r\nfrom sqlalchemy import create_engine\r\nfrom sqlalchemy.ext.declarative import declarative_base\r\nfrom sqlalchemy.orm import sessionmaker\r\n\r\n\r\n\r\nSQLALCHEMY_DATABASE_URL = \"mysql+pymysql://user:pssword@ip/the_database\"\r\n\r\n\r\nengine = create_engine(\r\n    SQLALCHEMY_DATABASE_URL\r\n)\r\n\r\nSessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\r\n\r\nBase = declarative_base()\r\n```\r\n\r\n\r\n\r\nmy database_model.py:\r\n\r\n```\r\nfrom database_config import Base\r\n\r\nfrom sqlalchemy import Boolean, Column, ForeignKey, Integer, String\r\nfrom sqlalchemy.orm import relationship\r\nfrom datetime import datetime\r\n\r\n\r\n\r\nclass user_profiles(Base):\r\n    __tablename__ = \"user_profiles\"\r\n\r\n    user_ID = Column(Integer, primary_key=True, index=True)\r\n    email_adress = Column(String, unique=True)\r\n    age = Column(Integer)\r\n    sex = Column(Integer)\r\n    height = Column(Integer)\r\n    weight = Column(Integer)\r\n    main_goal = Column(Integer)\r\n    level_experience = Column(Integer)\r\n    profile_created_at = Column(default=datetime.utcnow())\r\n\r\n    work_out_plan_task = relationship(\"workout_plan_task\", back_populates=\"user_profiles\")\r\n```\r\n\r\n\r\nmy database_schema.py:\r\n\r\n\r\n```\r\nfrom pydantic import BaseModel\r\n\r\n\r\nclass a_user_profile(BaseModel):\r\n    user_ID : int\r\n    email_adress : str\r\n    age: int\r\n    sex: int\r\n    height: int\r\n    weight: int\r\n    main_goal: int\r\n    level_experience: int\r\n    profile_created_at: str\r\n\r\n\r\n    class Config:\r\n        orm_mode = True\r\n\r\n```\r\n\r\n\r\nmy main.py:\r\n\r\n```\r\nfrom sqlalchemy.orm import Session\r\nfrom fastapi import FastAPI\r\n\r\nfrom database_config import *\r\nfrom database_schemas import *\r\n\r\nBase.metadata.create_all(bind=engine)\r\n\r\nfrom database_models import user_profiles\r\n\r\napp = FastAPI()\r\n\r\n\r\n# Dependency\r\ndef get_db():\r\n    db = SessionLocal()\r\n    try:\r\n        yield db\r\n    finally:\r\n        db.close()\r\n\r\n@app.get(\"/\") # works perfectly, and i ge the \"Hello\" Fastapi message\r\ndef home():\r\n    return {\"Hello\": \"FastAPI\"}\r\n\r\n\r\n\r\n#@app.get(\"/user_profiles\", response_model=a_user_profile)\r\n@app.get(\"/user_profiles\", response_model=a_user_profile)\r\ndef get_users(db: Session):\r\n    return db.query(user_profiles).all()\r\n```",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2793/comments",
    "author": "vlori2k",
    "comments": [
      {
        "user": "ycd",
        "created_at": "2021-02-11T10:25:56Z",
        "body": "You are returning a list of response model, use `response_model=List[a_response_model]`"
      },
      {
        "user": "krishnardt",
        "created_at": "2021-02-11T10:26:05Z",
        "body": "Here you are trying to get all the records from user_profiles. But restricting to give response as a single record.\r\nplease change \r\n`response_model=a_user_profile` --> `response_model=List[a_user_profile]`\r\n\r\nthis may resolve your problem"
      },
      {
        "user": "vlori2k",
        "created_at": "2021-02-11T11:33:28Z",
        "body": "Seems i might have solved it! \r\n\r\nI changed to this:\r\n\r\n```\r\n@app.get(\"/users/\", response_model=List[schemas.a_user_profile])\r\ndef show_records(db: Session = Depends(get_db)):\r\n    records = db.query(models.user_profiles).all()\r\n    return records\r\n```\r\n\r\nNow the error i get is: \r\n\r\n```\r\n File \"/usr/local/lib/python3.8/site-packages/sqlalchemy/util/compat.py\", line 182, in raise_\r\n    raise exception\r\nsqlalchemy.exc.NoForeignKeysError: Could not determine join condition between parent/child tables on relationship user_profiles.work_out_plan_task - there are no foreign keys linking these tables.  Ensure that referencing columns are associated with a ForeignKey or ForeignKeyConstraint, or specify a 'primaryjoin' expression.\r\n\r\n```\r\n\r\nSo i just need to change a little bit at my model. "
      },
      {
        "user": "vlori2k",
        "created_at": "2021-02-11T12:13:25Z",
        "body": "Edit: finally solved. "
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-11T10:35:12Z",
        "body": "Thanks for the help here everyone! 👏  🙇 \r\n\r\nThanks for reporting back and closing the issue @vlori2k  👍\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2782,
    "title": "a question",
    "created_at": "2021-02-10T08:00:22Z",
    "closed_at": "2023-02-27T23:13:15Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2782",
    "body": "Why don't we let go of \"golang\" when Python's fastapi is constrained by data types and other things that are not aesthetic or concise",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2782/comments",
    "author": "huangchanghuai",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2021-02-10T08:39:17Z",
        "body": "Huh? What is the context for this question? What does go have to do with FastAPI?"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-11T10:27:50Z",
        "body": "Thanks for the help here @Mause ! 👏  🙇 \r\n\r\nSorry, I can't help you if you don't follow the issue template @huangchanghuai. I'm also not sure what you really mean or what you are asking, but you are of course welcome to go and work on Go lang.\r\n\r\nIf you have any other questions please create a new issue and follow the template step by step.\r\n\r\nGiven that, I'm gonna close this one."
      }
    ]
  },
  {
    "number": 2772,
    "title": "Is it allowed to mix Starlette endpoints and FastAPI?",
    "created_at": "2021-02-08T14:25:04Z",
    "closed_at": "2023-02-27T23:12:46Z",
    "labels": [
      "question",
      "answered",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2772",
    "body": "Hi, just a quick question to people who know this stuff. Is it allowed to mix starlette.endpoints and FastAPI?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2772/comments",
    "author": "adriangabura",
    "comments": [
      {
        "user": "Kludex",
        "created_at": "2021-02-08T15:39:32Z",
        "body": "Yes."
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-11T10:11:15Z",
        "body": "Thanks for the help here @Kludex ! 👏  🙇 \r\n\r\nIf that solves the original problem, then you can close this issue @adriangabura  ✔️\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2022-11-22T00:16:44Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 2758,
    "title": "Application has two interfaces CLI and REST API via FAST API - CLI works fine -- having issues with REST API",
    "created_at": "2021-02-05T16:03:58Z",
    "closed_at": "2023-02-27T23:38:06Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2758",
    "body": "Hi Tiangolo ..\r\nI have a custom application which currently has a click interface which provides a comprehensive Command Line Interface (CLI).  I have added a full RESTful API using FASTApi but my low level code (embedded and works at the hardware layer) appears to have some issues when being invoked under UVICORN via FASTApi.  \r\n\r\nI have setup .env file so that ALL the required environment settings (under Linux in this case) are setup.  Most of the time the commands will work when called via the REST Api -- tested via SWAGGER and also separately via Pytest and httpx/asynch cllient.\r\n\r\nHowever, I have run into inconsistencies which I have to attribute to the UVICORN and FAST Api environment which must differ in some ways from just a BASH shell where the CLI typically runs just fine.\r\n\r\nCan you think of some areas where the UVICORN environment where my underlying classes/methods are being invoked might be different from just a straigh bash shell?  So far I am at a loss ..\r\n\r\nI appreciate you giving this a tiny bit of thought.\r\nV/r\r\nGreg Pepus",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2758/comments",
    "author": "gpepus",
    "comments": [
      {
        "user": "gpepus",
        "created_at": "2021-02-05T18:42:36Z",
        "body": "I have done further testing on this .. and it seems after I run certain commands -- if I restart UVICORN everything works fine.  In some cases I have had to restart it TWO times once after certain commands or sets of commands.  What resource under UVICORN could run low and cause Python wrapped C-API (boost python) functions to fail. Hmmm ... its a conundrum."
      },
      {
        "user": "insomnes",
        "created_at": "2021-02-06T19:09:22Z",
        "body": "@gpepus hello!\r\nYou know this is very vague question without any real ground info in it. Please use issue template and give more info with code example of what you are doing. "
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-10T18:30:39Z",
        "body": "Sorry, I'm not sure I understand the question, I can't help you if you don't follow the issue template and provide more information.\r\n\r\nIf you still have problems please create a new issue and follow the template step by step.\r\n\r\nGiven that, I'm gonna close this one. ☕ \r\n\r\nThanks for the help @ycd!"
      }
    ]
  },
  {
    "number": 2749,
    "title": "How to change Input Request MediaType",
    "created_at": "2021-02-03T10:20:58Z",
    "closed_at": "2023-02-27T23:37:43Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2749",
    "body": "Hi Guys,\r\n\r\nIs there a way to change the input media type accepted for a specific route?\r\n\r\nE.G.\r\n\r\nI would like to set the route /foo/bar to accept only the media type 'application/octet-stream', and i would like also that this is reflected to the openapi template.\r\n\r\nSomething like the \"consume\" tag in Spring.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2749/comments",
    "author": "KiraPC",
    "comments": [
      {
        "user": "valentin994",
        "created_at": "2021-02-03T12:04:39Z",
        "body": "You could fetch that in the request header and then check if it is the right one.\r\n"
      },
      {
        "user": "valentin994",
        "created_at": "2021-02-03T12:17:41Z",
        "body": "> Hi Guys,\r\n> \r\n> Is there a way to change the input media type accepted for a specific route?\r\n> \r\n> E.G.\r\n> \r\n> I would like to set the route /foo/bar to accept only the media type 'application/octet-stream', and i would like also that this is reflected to the openapi template.\r\n> \r\n> Something like the \"consume\" tag in Spring.\r\n\r\nOne approach is this one below, or you could add middleware that processes the headers first.\r\n\r\n```\r\n@app.get(\"/req\")\r\nasync def get_header(request: Request):\r\n    print(request.headers)\r\n    return {\"do with them what you want\"}\r\n```"
      },
      {
        "user": "KiraPC",
        "created_at": "2021-02-03T12:58:17Z",
        "body": "Yes, thanks, I just arrived after opened this issue."
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-10T15:48:00Z",
        "body": "Thanks for the help here @valentin994 ! 👏  🙇 \r\n\r\nThanks for reporting back and closing the issue @KiraPC  👍\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2746,
    "title": "Path params with Query type omit the description field in openapi.json",
    "created_at": "2021-02-02T21:59:19Z",
    "closed_at": "2023-02-27T23:37:32Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2746",
    "body": "Never mind. The solution was to use a Path type for a path param.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2746/comments",
    "author": "kevinr-electric",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2022-11-10T15:46:27Z",
        "body": "Thanks for reporting back and closing the issue 👍\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2745,
    "title": "Error \"AdminShutdown\": get db session in background celery task",
    "created_at": "2021-02-02T20:04:53Z",
    "closed_at": "2023-02-27T23:37:29Z",
    "labels": [
      "question",
      "answered",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2745",
    "body": "Small api service with background task which use db session:\r\n`main.py`\r\n```Python\r\nimport celery\r\nfrom fastapi import FastAPI\r\nfrom sqlalchemy import Column, Integer, create_engine\r\nfrom sqlalchemy.ext.declarative import as_declarative\r\nfrom sqlalchemy.orm import sessionmaker\r\n\r\n### model\r\n\r\n@as_declarative()\r\nclass Model:\r\n    pass\r\n\r\nclass Entity(Model):\r\n    __tablename__ = 'entity'\r\n\r\n    id = Column(Integer, primary_key=True, index=True)\r\n\r\n### connection\r\n\r\nmain_engine = create_engine('postgresql://postgres:@127.0.0.1:5432/test', pool_pre_ping=True)\r\nMainSession = sessionmaker(autocommit=False, autoflush=False, bind=main_engine)\r\n\r\ndef get_main_db():\r\n    db = MainSession()\r\n    try:\r\n        yield db\r\n    finally:\r\n        db.close()\r\n\r\n### celery\r\n\r\ncelery_ = celery.Celery('tasks', broker='redis://127.0.0.1:6379/1')\r\ncelery_.conf.update(task_always_eager=True)\r\n\r\n@celery_.task\r\ndef background_task():\r\n    session = next(get_main_db())\r\n    session.add(obj := Entity())\r\n    session.commit()\r\n    print(obj.id)\r\n\r\n### app\r\n\r\napp = FastAPI()\r\n\r\n@app.get('/')\r\ndef read_root():\r\n    result = {'Hello': 'World'}\r\n    background_task.delay()\r\n    return result\r\n```\r\n\r\nThere is a simple test:\r\n`test.py`\r\n```Python\r\n\r\nimport pytest\r\nfrom fastapi.testclient import TestClient\r\nfrom sqlalchemy import create_engine\r\nfrom sqlalchemy_utils import create_database, database_exists, drop_database\r\n\r\nfrom main import app, Model\r\n\r\n\r\n@pytest.fixture(scope='session')\r\ndef web_client():\r\n    return TestClient(app=app)\r\n\r\n\r\n@pytest.fixture(scope='session')\r\ndef main_db_uri():\r\n    return 'postgresql://postgres:@127.0.0.1:5432/test'\r\n\r\n\r\n@pytest.fixture(scope='session')\r\ndef main_engine(main_db_uri):\r\n    return create_engine(main_db_uri, client_encoding='utf8', connect_args={'client_encoding': 'utf8'})\r\n\r\n\r\n@pytest.fixture(scope='session', autouse=True)\r\ndef database(main_engine, main_db_uri):\r\n    if database_exists(main_db_uri):\r\n        drop_database(main_db_uri)\r\n\r\n    create_database(main_db_uri)\r\n    Model.metadata.create_all(bind=main_engine)\r\n\r\n    yield\r\n\r\n    drop_database(main_db_uri)\r\n\r\n\r\ndef test_get(web_client):\r\n    assert web_client.get('/').status_code == 200\r\n```\r\n\r\nRun pytest:\r\n```\r\nTest session starts (platform: linux, Python 3.8.5, pytest 6.2.2, pytest-sugar 0.9.4)\r\nrootdir: /home/test/test_2, configfile: pyproject.toml, testpaths: tests\r\nplugins: sugar-0.9.4\r\ncollecting ... 1\r\n\r\n tests/test_.py ✓                                                                     100% ██████████\r\n\r\nResults (0.54s):\r\n       1 passed\r\nException during reset or similar\r\nTraceback (most recent call last):\r\n  File \"/home/test/test_2/venv/lib/python3.8/site-packages/sqlalchemy/pool/base.py\", line 697, in _finalize_fairy\r\n    fairy._reset(pool)\r\n  File \"/home/test/test_2/venv/lib/python3.8/site-packages/sqlalchemy/pool/base.py\", line 893, in _reset\r\n    pool._dialect.do_rollback(self)\r\n  File \"/home/test/test_2/venv/lib/python3.8/site-packages/sqlalchemy/engine/default.py\", line 558, in do_rollback\r\n    dbapi_connection.rollback()\r\npsycopg2.errors.AdminShutdown: terminating connection due to administrator command\r\nserver closed the connection unexpectedly\r\n        This probably means the server terminated abnormally\r\n        before or while processing the request.\r\n```\r\nSo, the test is has passed successful, but there is the psycopg2 error.\r\nIs the way for get db session wrong?  What is the reason that server closed the connection unexpectedly?\r\n```\r\nPython 3.8.5\r\ncelery==5.0.5\r\nfastapi==0.63.0\r\npsycopg2-binary==2.8.6\r\npydantic==1.7.3\r\npytest==6.2.2\r\nredis==3.5.3\r\nrequests==2.25.1\r\nSQLAlchemy==1.3.23\r\nSQLAlchemy-Utils==0.36.8\r\nstarlette==0.13.6\r\nuvicorn==0.13.3\r\nuvloop==0.14.0\r\n```",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2745/comments",
    "author": "elsimqoz",
    "comments": [
      {
        "user": "tuukkamustonen",
        "created_at": "2021-02-09T13:19:40Z",
        "body": "You're mixing quite a few things here (Postgres, Redis, SQLAlchemy, Celery). Can you negate away unnecessary bits and pieces from it, ie. try without Redis/Celery, even without SQLAlchemy?\r\n\r\nThe error you're seeing would indeed indicate that the server side closed the connection, not your application.\r\n\r\nI would say your test works, because the endpoint returns before the background task completes. And when the background task completes (or fails), the error is thrown, maybe because DB connection is no longer available in the context."
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-11T10:20:10Z",
        "body": "Thanks for the help here @tuukkamustonen ! 👏  🙇 \r\n\r\nIt seems your error is on Celery, right @elsimqoz? In that case that wouldn't really be FastAPI.\r\n\r\nAlso, you should probably put the Celery worker stuff in a different file and run that independently of your FastAPI app.\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2022-11-22T00:16:54Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 2741,
    "title": "Writing Tests",
    "created_at": "2021-02-02T08:45:02Z",
    "closed_at": "2023-02-27T23:37:25Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2741",
    "body": "How does one generate different settings object during testing when you use a .env file\r\n\r\nI have file that looks like this test_main.py\r\n```\r\nfrom fastapi.testclient import TestClient\r\nfrom main import app\r\nfrom configs.config_base import settings\r\n\r\n\r\nclient = TestClient(app=app)\r\n\r\n\r\n\"\"\"\r\nNotice that the testing functions are normal def, not async def.\r\nAnd the calls to the client are also normal calls, not using await.\r\nThis allows you to use pytest directly without complications.\r\n\r\nCreate functions with a name that starts with test_ (this is standard pytest conventions).\r\n\"\"\"\r\n\r\ndef test_read_main():\r\n    response = client.get(\"/\")\r\n    assert response.status_code == 200\r\n\r\ndef test_main_home():\r\n    response = client.get(\"/hello\")\r\n    assert response.status_code == 200\r\n    assert response.json() == {'message':'Hello world'}\r\n```\r\n\r\nNow when I push my code to github, since I have setup CI using github actions, it cant locate the TESTING config in the .env",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2741/comments",
    "author": "KivutiBrian",
    "comments": [
      {
        "user": "KivutiBrian",
        "created_at": "2021-02-02T09:45:14Z",
        "body": "Figured it out!"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-10T15:44:16Z",
        "body": "Thanks for reporting back and closing the issue 👍\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2708,
    "title": "Using Async generators in the startup event",
    "created_at": "2021-01-27T09:22:52Z",
    "closed_at": "2023-02-27T23:36:27Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2708",
    "body": "Hi,\r\n\r\nI am running into a strange issue. I am using Aikafka to run a consumer which I start in the startup event. It looks like this:\r\n```\r\nasync def consume():\r\n    consumer = AIOKafkaConsumer(\r\n        'topic',\r\n        loop=asynio.get_running_loop(),\r\n        client_id=\"experiment_consumer\",\r\n        bootstrap_servers=f\"server:port\",\r\n        enable_auto_commit=False,\r\n    )\r\n    await consumer.start()\r\n    async for msg in consumer:\r\n        print(\"consumed: \", msg.topic, msg.partition, msg.offset,\r\n                msg.key, msg.value, msg.timestamp)\r\n\r\n@app.on_event('startup')\r\nasync def app_startup():\r\n    asyncio.create_task(consume())\r\n```\r\nI would expect messages to be printed when published to a topic but nothing gets printed out. As soon as I restart the FastAPI process then the points are being printed. \r\nI think this may have to do with the async generator used by AIOKafka. Any ideas on what might be going on here?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2708/comments",
    "author": "m4nuC",
    "comments": [
      {
        "user": "Dustyposa",
        "created_at": "2021-01-28T03:27:36Z",
        "body": "you can try:\r\n\r\n```python\r\n@app.on_event('startup')\r\nasync def app_startup():\r\n    await consume()\r\n```"
      },
      {
        "user": "m4nuC",
        "created_at": "2021-01-28T06:25:41Z",
        "body": "@Dustyposa thanks for the suggestion, I did try this, it results in the application startup hanging as the  `consume` call never terminates(it's an async generator)"
      },
      {
        "user": "Dustyposa",
        "created_at": "2021-01-28T06:28:53Z",
        "body": "got it.\r\nYou need run it in another process.\r\nWhy you want to run it with app in same process？"
      },
      {
        "user": "m4nuC",
        "created_at": "2021-01-28T06:49:52Z",
        "body": " it should be possible to work on a single thread, it's what asyncio is for after all. So I'd like to keep multithreading as a last resort"
      },
      {
        "user": "insomnes",
        "created_at": "2021-01-28T09:57:13Z",
        "body": "@m4nuC hello! Are you sure that all is fine with your AIOKafkaConsumer setup?\r\nWith this async gen emulation I've achieved constant printing:\r\n```\r\nasync def async_gen():\r\n    i = 0\r\n    while True:\r\n        await asyncio.sleep(0.5)\r\n        yield i\r\n        i += 1\r\n\r\nasync def consume():\r\n    async for msg in async_gen():\r\n        print(f\"i: {msg}\")\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.on_event('startup')\r\nasync def app_startup():\r\n    asyncio.create_task(consume())\r\n```"
      },
      {
        "user": "m4nuC",
        "created_at": "2021-01-28T10:44:33Z",
        "body": "@insomnes Thanks for the snippet. I have tried that code have exactly the same symptoms, that is, no printing then I get everything all at once when I restart the FastAPI process. What is even stranger is that If I use the standard python logging library then the printing is indeed constant. Wonder if this could have something to do with gunicorn and possibility multiple fastAPI processes running. Looking into that now.\r\n\r\n\r\nIn dev environment (have not yet tried prod), this is how I start the server:\r\n`exec uvicorn --reload --reload-dir /app --host $HOST --port $PORT --log-level $LOG_LEVEL \"$APP_MODULE\"`\r\n\r\nCould anyone spot something odd ?"
      },
      {
        "user": "insomnes",
        "created_at": "2021-01-31T14:45:26Z",
        "body": "@m4nuC hello!\r\nAs you've closed your issue I think that you found solution.\r\nCan you explain what was the cause of your problem, please?"
      },
      {
        "user": "m4nuC",
        "created_at": "2021-02-03T06:10:57Z",
        "body": "@insomnes It turned out to be the `print` command that was buffering output once inside an async generator. So flushing with `sys.out.flush` on each iteration solve my issue. That said I am not sure why this behavior happens only inside the generator"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-10T15:47:27Z",
        "body": "Thanks for the help here @Dustyposa and @insomnes  ! 👏  🙇 \r\n\r\nThanks for reporting back and closing the issue @m4nuC  👍\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2696,
    "title": "the middleware is so slow",
    "created_at": "2021-01-25T07:18:27Z",
    "closed_at": "2023-02-27T23:36:10Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2696",
    "body": "I using the test case which is a helloworld example with 6 empty middleware(doing nothing).\r\nAnd it significant slowdown. Loss 70% performance vice not using middleware.\r\nAnd i notice the code using in TechEmpower is without middleware.\r\nDeep in the code I found out the middleware runing is using too many coroutine(create task).\r\nI think there should be some performance fixed for the middleware in fastapi.\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2696/comments",
    "author": "wesdu",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2021-01-25T07:25:38Z",
        "body": "Can you give a demonstration of your issue?"
      },
      {
        "user": "wesdu",
        "created_at": "2021-01-25T07:49:50Z",
        "body": "```\r\nfrom fastapi import FastAPI, Request\r\nimport uvicorn\r\n\r\napp = FastAPI(debug=False)\r\n\r\n\r\n@app.middleware(\"http\")\r\nasync def a(request: Request, call_next):\r\n    response = await call_next(request)\r\n    return response\r\n\r\n@app.middleware(\"http\")\r\nasync def b(request: Request, call_next):\r\n    response = await call_next(request)\r\n    return response\r\n\r\n@app.middleware(\"http\")\r\nasync def c(request: Request, call_next):\r\n    response = await call_next(request)\r\n    return response\r\n\r\n@app.middleware(\"http\")\r\nasync def d(request: Request, call_next):\r\n    response = await call_next(request)\r\n    return response\r\n\r\n\r\n@app.get(\"/\")\r\nasync def run():\r\n    return {\"message\": \"hello\"}\r\n\r\n\r\nif __name__ == '__main__':\r\n    uvicorn.run('test:app', host='0.0.0.0', port=8888, reload=True, debug=False)\r\n```\r\nwhen using the 4 level middleware \r\nI got \r\n`Requests per second:    1753.81 [#/sec] (mean)`\r\n using `ab -c 100 -n 10000`\r\n\r\notherwise, remove the empty middleware \r\n```\r\nfrom fastapi import FastAPI, Request\r\nimport uvicorn\r\n\r\napp = FastAPI(debug=False)\r\n\r\n@app.get(\"/\")\r\nasync def run():\r\n    return {\"message\": \"hello\"}\r\n\r\n\r\nif __name__ == '__main__':\r\n    uvicorn.run('test:app', host='0.0.0.0', port=8888, reload=True, debug=False)\r\n```\r\nI got \r\n`Requests per second:    3450.91 [#/sec] (mean)`"
      },
      {
        "user": "wesdu",
        "created_at": "2021-01-25T07:51:00Z",
        "body": "The middleware has a very strong impact on the performance, I don't think it should be."
      },
      {
        "user": "ycd",
        "created_at": "2021-01-27T08:49:05Z",
        "body": "I made a little profiling on this, here are my findings:\r\n\r\nI ran 1000 request with the code you given above.\r\n\r\n```\r\nSummary:\r\n  Total:\t5.5514 secs\r\n  Slowest:\t0.3520 secs\r\n  Fastest:\t0.1784 secs\r\n  Average:\t0.2755 secs\r\n  Requests/sec:\t180.1345\r\n\r\n  Total data:\t19000 bytes\r\n  Size/request:\t19 bytes\r\n\r\nResponse time histogram:\r\n  0.178 [1]\t|\r\n  0.196 [12]\t|■■\r\n  0.213 [17]\t|■■\r\n  0.231 [15]\t|■■\r\n  0.248 [154]\t|■■■■■■■■■■■■■■■■■■■■■\r\n  0.265 [292]\t|■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■\r\n  0.283 [240]\t|■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■\r\n  0.300 [26]\t|■■■■\r\n  0.317 [54]\t|■■■■■■■\r\n  0.335 [103]\t|■■■■■■■■■■■■■■\r\n  0.352 [86]\t|■■■■■■■■■■■■\r\n```\r\n\r\nSo we averaged **0.275 ms** per request.\r\n\r\nFor 1000 request, we used the the middleware  `Request Count * 4` = **4000** times.\r\n\r\nFor 1000 request which took 5.5 seconds to complete. Middleware used 1.6 second of that time. Which is nearly 29%.\r\n\r\n```\r\nname                                  ncall  tsub      ttot      tavg      \r\n...py:19 BaseHTTPMiddleware.__call__  4000  0.042633  1.170604  0.000292\r\n..py:28 BaseHTTPMiddleware.call_next  4000   0.062403  0.393508  0.000098\r\n```\r\n\r\nSo i'm not sure, is there a bottleneck or not because middlewares are generally expensive operations.\r\n\r\n\r\n\r\n"
      },
      {
        "user": "wesdu",
        "created_at": "2021-01-27T09:28:18Z",
        "body": "> I made a little profiling on this, here are my findings:\r\n> \r\n> I ran 1000 request with the code you given above.\r\n> \r\n> ```\r\n> Summary:\r\n>   Total:\t5.5514 secs\r\n>   Slowest:\t0.3520 secs\r\n>   Fastest:\t0.1784 secs\r\n>   Average:\t0.2755 secs\r\n>   Requests/sec:\t180.1345\r\n> \r\n>   Total data:\t19000 bytes\r\n>   Size/request:\t19 bytes\r\n> \r\n> Response time histogram:\r\n>   0.178 [1]\t|\r\n>   0.196 [12]\t|■■\r\n>   0.213 [17]\t|■■\r\n>   0.231 [15]\t|■■\r\n>   0.248 [154]\t|■■■■■■■■■■■■■■■■■■■■■\r\n>   0.265 [292]\t|■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■\r\n>   0.283 [240]\t|■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■\r\n>   0.300 [26]\t|■■■■\r\n>   0.317 [54]\t|■■■■■■■\r\n>   0.335 [103]\t|■■■■■■■■■■■■■■\r\n>   0.352 [86]\t|■■■■■■■■■■■■\r\n> ```\r\n> \r\n> So we averaged **0.275 ms** per request.\r\n> \r\n> For 1000 request, we used the the middleware `Request Count * 4` = **4000** times.\r\n> \r\n> For 1000 request which took 5.5 seconds to complete. Middleware used 1.6 second of that time. Which is nearly 29%.\r\n> \r\n> ```\r\n> name                                  ncall  tsub      ttot      tavg      \r\n> ...py:19 BaseHTTPMiddleware.__call__  4000  0.042633  1.170604  0.000292\r\n> ..py:28 BaseHTTPMiddleware.call_next  4000   0.062403  0.393508  0.000098\r\n> ```\r\n> \r\n> So i'm not sure, is there a bottleneck or not because middlewares are generally expensive operations.\r\n\r\nYou should add the \"Concurrency\" scene in your testing. Because the the problem is too many coroutine created which impact the  Concurrency ability.\r\nThe middleware code detail in the framework is about \"asyncio queue\" and \"create task\".\r\n"
      },
      {
        "user": "ycd",
        "created_at": "2021-01-27T10:06:55Z",
        "body": "@wesdu i ran with 50 concurrency. "
      },
      {
        "user": "Kludex",
        "created_at": "2021-01-27T11:32:20Z",
        "body": "`BaseHTTPMiddleware` should be avoided (but not related to this issue). \r\n\r\nCan you `app.add_middleware(UsefulMiddleware)` and check with this one?\r\n\r\n```python\r\nclass UsefulMiddleware:\r\n    def __init__(self, app):\r\n        self.app = app\r\n        \r\n    async def __call__(self, scope, receive, send):\r\n        await self.app(scope, receive, send)\r\n```"
      },
      {
        "user": "wesdu",
        "created_at": "2021-01-27T13:56:28Z",
        "body": "@Kludex Yep, the callback way is fast.\r\nBut not so “Useful” -- Fast to run but not so easy to write.\r\nThere should be a better `BaseHTTPMiddleware `."
      },
      {
        "user": "ycd",
        "created_at": "2021-01-27T14:23:51Z",
        "body": "> But not so “Useful” -- Fast to run but not so easy to write.\r\n> There should be a better BaseHTTPMiddleware \r\n\r\nWhat do you mean? There should be an easier way or faster way?"
      },
      {
        "user": "wesdu",
        "created_at": "2021-01-28T08:27:55Z",
        "body": "> > But not so “Useful” -- Fast to run but not so easy to write.\r\n> > There should be a better BaseHTTPMiddleware\r\n> \r\n> What do you mean? There should be an easier way or faster way?\r\n\r\nboth"
      },
      {
        "user": "ycd",
        "created_at": "2021-02-09T00:23:11Z",
        "body": "We are always open to new ideas, feel free to open a PR if you have a better implementation idea!"
      },
      {
        "user": "wesdu",
        "created_at": "2021-06-09T08:29:24Z",
        "body": "conclusion: Don't use BaseHTTPMiddleware. It loses performance and even context."
      },
      {
        "user": "tomeras1",
        "created_at": "2022-01-04T15:19:06Z",
        "body": "@wesdu did u eventually used UsefulMiddleware variation? I also ran into performance issues"
      },
      {
        "user": "wesdu",
        "created_at": "2022-01-06T07:09:16Z",
        "body": "@tomeras1 Just write the middleware in the ASGI classic way. You can take the build-in middleware in the source code as example."
      },
      {
        "user": "nisarg-ss",
        "created_at": "2022-12-12T10:51:48Z",
        "body": "> @tomeras1 Just write the middleware in the ASGI classic way. You can take the build-in middleware in the source code as example.\r\n\r\nCan you give example of how to write?\r\n\r\ni am getting an error: **ASGI callable returned without starting response.**\r\n\r\n```\r\nclass UsefulMiddleware:\r\n    def __init__(self,app):\r\n        self.app=app\r\n\r\n    async def __call__(self, scope, receive, send):\r\n        request_id = str(uuid.uuid4())\r\n        with logger.contextualize(request_id=request_id):\r\n            logger.debug(\"Request started\")\r\n            user, auth_code = token_authorization(\r\n                scope.get(\"Authorization\"), scope.get(\"path\")\r\n                )\r\n\r\n            scope[\"user\"] = user\r\n\r\n            await self.app(scope, receive, send)\r\n```"
      }
    ]
  },
  {
    "number": 2689,
    "title": "execution optiomization, redundant validation.",
    "created_at": "2021-01-21T20:39:04Z",
    "closed_at": "2023-02-27T23:35:52Z",
    "labels": [
      "question",
      "answered",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2689",
    "body": "Hello!\r\n\r\nI'm noticed a little problem with `response_model` feature:\r\n\r\nCode sample:\r\n\r\n```\r\n@router.patch(\"/settings/swipes\", response_model=schemas.UserSwipes, status_code=200)\r\ndef update_users_settings_preferences(\r\n        user_update: schemas.UserSwipes,\r\n        response: Response = Response,\r\n        token: str = Header(...),\r\n        db: Session = Depends(get_db)):\r\n    try:\r\n        ...\r\n\r\nclass UserSwipes(BaseModel):  # Consider UserProfile attributes as low boundary\r\n    smoking_low: Optional[int] = Field(..., ge=0, le=4, description=\"Minimal boundary smoking\", example=2)\r\n    smoking_high: Optional[int] = Field(..., ge=0, le=4, description=\"Maximum boundary smoking\", example=3)\r\n    alcohol_low: Optional[int] = Field(..., ge=0, le=4, description=\"Minimal boundary smoking\", example=2)\r\n    alcohol_high: Optional[int] = Field(..., ge=0, le=4, description=\"Maximum boundary smoking\", example=3)\r\n\r\n    @root_validator\r\n    def ensure_bigger(cls, values: dict[str]) -> dict[str]:\r\n        old_k_v = list(values.items())[0]\r\n        for k, v in values.items():\r\n            if 'low' in k:\r\n                old_k_v = k, v\r\n            else:\r\n                if k.split('_')[0] == old_k_v[0].split('_')[0]:\r\n                    if old_k_v[-1] > v:\r\n                        raise Exception('Minimal value biggest that Maximum item!')\r\n                else:\r\n                    raise Exception(\"'high' item must follow 'low' item.\")\r\n        return values\r\n```\r\n\r\nThis `@root_validator` executes twice because of `respomse_model` and `user_update: schemas.UserSwipes`.\r\nBut obviously you don't need to execute a  validation a second time.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2689/comments",
    "author": "david-shiko",
    "comments": [
      {
        "user": "Kludex",
        "created_at": "2021-01-21T22:17:33Z",
        "body": "You validate the input, and then you validate the output... What's the problem here?"
      },
      {
        "user": "krishnardt",
        "created_at": "2021-01-22T05:01:39Z",
        "body": "I think there is no need to validate at the response model if you already validating at user_update unless you are modifying UserSwipes data. If you are modifying the data, then may be response validation is also necessary(totally depends upon your usecase).\r\n"
      },
      {
        "user": "david-shiko",
        "created_at": "2021-01-22T08:53:06Z",
        "body": "> I think there is no need to validate at the response model if you already validating at user_update unless you are modifying UserSwipes data. If you are modifying the data, then may be response validation is also necessary(totally depends upon your usecase).\r\n\r\n\r\n@krishnardt So you suggest just to remove `response_model` parameter? I will agree with you, but it's a little bit inconvient, cuz by this parameter you can easily figure out what happens at this function (like at standard function annotation) also you can easily fold it and when you will see `return some_model` without `response_model` you will think that you just forgot it."
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-10T15:12:39Z",
        "body": "Thanks for the help here @Kludex and @krishnardt ! 👏  🙇 \r\n\r\nIf you solved your original problem, then you can close this issue ✔️\r\n\r\n...otherwise, please provide a full, minimal, self-contained example that I (we) can copy paste to understand better your use case. It's not quite obvious to me what you are trying to achieve or the problem you are seeing. 🤓 \r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2022-11-21T00:16:34Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 2687,
    "title": "add dependencies  --exclude",
    "created_at": "2021-01-21T08:29:41Z",
    "closed_at": "2023-02-27T23:35:50Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2687",
    "body": "i  add a golbal dependencies in my project,but there is one api don't need this dependencies .so how can dependencies exlude that api pythonicly.\r\ni read the add_api_route code, it always  inherits the parent router dependencies。\r\ni think you can add a parameter to make parent router dependencies=[]\r\nor can i do something to  make dependencies  exlude that api",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2687/comments",
    "author": "heyfavour",
    "comments": [
      {
        "user": "heyfavour",
        "created_at": "2021-01-21T09:26:35Z",
        "body": "i think it better add parameter in sub api instead of parent api,when parent api extend sub api,check the parent dependencies and set dependencies=[ ]"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-10T15:07:38Z",
        "body": "Sorry, I can't help you if you don't follow the issue template and provide more information.\r\n\r\nIf you still have problems please create a new issue and follow the template step by step.\r\n\r\nGiven that, I'm gonna close this one.\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2676,
    "title": "response code is 200 but response body is null",
    "created_at": "2021-01-19T15:51:10Z",
    "closed_at": "2023-02-27T23:35:19Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2676",
    "body": "my main.py is\r\nfrom fastapi import FastAPI, Request, Depends\r\nfrom pydantic import BaseModel\r\nimport models\r\nfrom sqlalchemy.orm import Session\r\nfrom database import SessionLocal, engine\r\nfrom models import product\r\n\r\n\r\n\r\n\r\napp=FastAPI()\r\n\r\nmodels.Base.metadata.create_all(bind=engine)\r\n\r\n\r\ndef get_db():\r\n    try:\r\n        db=SessionLocal()\r\n        yield db\r\n    finally:\r\n        db.close()\r\n\r\n@app.get('/')\r\ndef index():\r\n    pass\r\n\r\n\r\n@app.get('/products/{id}')\r\ndef get_product(id: int):\r\n    db=SessionLocal()\r\n    stock= db.query(models.product).filter(models.product.id == id).first()\r\n    return stock\r\n\r\n    # return pr.product_name ,pr.product_price,tenure,tenure*pr.product_price\r\n\r\n\r\nand database.py is \r\nfrom sqlalchemy import create_engine\r\nfrom sqlalchemy.ext.declarative import declarative_base\r\nfrom sqlalchemy.orm import sessionmaker\r\n\r\nSQLALCHEMY_DATABASE_URL = \"sqlite:///./product.db\"\r\n\r\n\r\nengine = create_engine(\r\n    SQLALCHEMY_DATABASE_URL, connect_args={\"check_same_thread\": False}\r\n)\r\nSessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\r\n\r\nBase = declarative_base()\r\n\r\nand models.py is \r\nfrom sqlalchemy import  Column, ForeignKey, Integer, String\r\n\r\nfrom database import Base\r\n\r\n\r\nclass product(Base):\r\n    __tablename__ = \"products\"\r\n\r\n    id = Column(Integer, primary_key=True, index=True)\r\n    product_name = Column(String, unique=True, index=True)\r\n    product_price= Column(Integer)\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2676/comments",
    "author": "Abhisheks1907",
    "comments": [
      {
        "user": "krishnardt",
        "created_at": "2021-01-19T16:03:39Z",
        "body": "can you modify  this line with  in get_product function...\r\n**db=SessionLocal()** --> **db = get_db()** and give it a try?\r\nthis would work."
      },
      {
        "user": "Abhisheks1907",
        "created_at": "2021-01-19T16:10:12Z",
        "body": "stock= db.query(models.product).filter(models.product.id == id).first()\r\nthis line it shows \r\nAttributeError: 'generator' object has no attribute 'query'"
      },
      {
        "user": "Abhisheks1907",
        "created_at": "2021-01-19T19:29:36Z",
        "body": "solved"
      },
      {
        "user": "krishnardt",
        "created_at": "2021-01-21T11:31:53Z",
        "body": "posting the solution about how you solved it would be better..\r\n\r\nmy suggestions:\r\n\r\n```\r\n@app.get('/products/{id}')\r\ndef get_product(id: int, db: Session = Depends(get_db)):\r\n    stock= db.query(models.product).filter(models.product.id == id).first()\r\n    return stock\r\n```\r\n\r\nor \r\n\r\nif you are using some function(not an api)  and that function is interacting with database...\r\n```\r\ndef get_sample( db: Session = Depends(get_db)):\r\n    \"\"\"some crud operation\"\"\"\r\n```\r\n\r\n\r\n\r\n"
      },
      {
        "user": "TDoggin",
        "created_at": "2022-10-07T05:47:47Z",
        "body": "This maybe a long shot but can someone post the solution. I’m having the exact same issue with fast api."
      },
      {
        "user": "JarroVGIT",
        "created_at": "2022-10-07T06:03:41Z",
        "body": "This issue opening is a bunch of unformatted code without any question or issue in it. Somehow, someone did found what was wrong with it (kudos to him) and posted that solution in the comment above yours. This is a very specific user-error; it might be that the docs were not up to standards as they are now back then, but without any errors, there is little to go on here. "
      },
      {
        "user": "TDoggin",
        "created_at": "2022-10-07T16:03:12Z",
        "body": "thanks for the feedback. i'm goign to open another issue then and see if i can get some help. "
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-11T15:47:23Z",
        "body": "Thanks for the help here everyone! 👏  🙇 \r\n\r\nThanks for reporting back and closing the issue @Abhisheks1907  👍\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2643,
    "title": "with peewee ORM, the normal function can depends get_db?",
    "created_at": "2021-01-13T08:56:43Z",
    "closed_at": "2023-02-27T23:34:34Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2643",
    "body": null,
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2643/comments",
    "author": "zhangwk02",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2021-01-13T09:14:17Z",
        "body": "Please follow the issue template so we can help you"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-10T14:20:14Z",
        "body": "Sorry, I (we) can't help you if you don't follow the issue template and provide more information.\r\n\r\nIf you still have problems please create a new issue and follow the template step by step.\r\n\r\nGiven that, I'm gonna close this one."
      }
    ]
  },
  {
    "number": 2624,
    "title": "Unresolved attribute reference 'email' for class 'OAuth2PasswordRequestForm'",
    "created_at": "2021-01-09T21:26:58Z",
    "closed_at": "2023-02-27T23:34:11Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2624",
    "body": "\r\n\r\nProblem:\r\n\r\nUnresolved attribute reference 'email' for class 'OAuth2PasswordRequestForm'\r\n\r\nThe solution:\r\n\r\nMake field username Union, EmailStr or str OAuth2PasswordRequestForm in fastapi/security/oauth2.py module.\r\n\r\nContext:\r\n# form_data.email not exists, only form_data.username\r\nuser = authenticate_user(crud.get_user_by_email(c), form_data.username, form_data.password)",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2624/comments",
    "author": "david-shiko",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2022-11-10T13:59:50Z",
        "body": "Sorry, I can't help you if you don't follow the issue template and provide more information.\r\n\r\nIf you still have problems please create a new issue and follow the template step by step.\r\n\r\nGiven that, I'm gonna close this one. ☕ "
      }
    ]
  },
  {
    "number": 2612,
    "title": "Conflict with openpyxl?",
    "created_at": "2021-01-06T15:01:01Z",
    "closed_at": "2023-02-28T17:16:05Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2612",
    "body": "### Describe the bug\r\nImporting `openpyxl` makes `fastapi` confuse types of query parameters.\r\n\r\n### To Reproduce\r\n\r\nHere's a self-contained, minimal, reproducible, example with my use case:\r\n\r\n<!-- Replace the code below with your own self-contained, minimal, reproducible, example, if I (or someone) can copy it, run it, and see it right away, there's a much higher chance I (or someone) will be able to help you -->\r\n\r\n```Python\r\nimport fastapi\r\nimport openpyxl   # if comment out, the result would be OK\r\nfrom typing import List, Union, Optional\r\n\r\napp = fastapi.FastAPI()\r\n\r\n@app.get('/')\r\ndef read_items(p: Optional[Union[int, str]] = None):\r\n    return isinstance(p, int)   # if p = 1, return false!\r\n```\r\n\r\n### Description\r\n\r\n<!-- Replace the content below with your own problem, question, or error -->\r\n\r\n* Open the browser and call the endpoint `/`.\r\n* Input `p = 1`.\r\n* It returns `false`.\r\n* But I expected it to return `true`.\r\n* If comment out `import openpyxl`, the result would be `true` as expected.\r\n\r\n### Environment\r\n\r\n* OS: macOS\r\n* FastAPI Version: 0.62.0\r\n* Python version: 3.7.6\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2612/comments",
    "author": "ufoym",
    "comments": [
      {
        "user": "falkben",
        "created_at": "2021-01-06T17:09:42Z",
        "body": "I cannot reproduce.\r\n\r\nTested with: \r\n\r\n```python\r\nfrom fastapi.testclient import TestClient\r\n\r\nclient = TestClient(app)\r\n\r\n\r\ndef test_read_items():\r\n    resp = client.get(\"/?p=1\")\r\n    assert resp.json() is True\r\n```"
      },
      {
        "user": "ycd",
        "created_at": "2021-01-07T21:49:06Z",
        "body": "Tested with the exact code, I wasn't able to reproduce this either. \r\n\r\n### Output\r\n\r\n```python\r\nINFO:     127.0.0.1:38636 - \"GET /?p=1 HTTP/1.1\" 200 OK\r\n```\r\n\r\n### Environment\r\n\r\n```python                                                                          \r\nPython 3.9.1\r\nfastapi    0.63.0\r\nopenpyxl-3.0.5\r\n```\r\n"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-10T13:54:55Z",
        "body": "Thanks for the help here @falkben and @ycd ! 👏  🙇 \r\n\r\nIf that solves the original problem, then you can close this issue @ufoym  ✔️\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2022-11-21T00:16:43Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 2609,
    "title": "Arabic Language for documents",
    "created_at": "2021-01-05T21:12:20Z",
    "closed_at": "2023-02-28T17:16:03Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2609",
    "body": "I fell in love with fastapi, this is a great Python framework and I hope that an Arabic translation will be added to the documents.\r\n\r\nthanks",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2609/comments",
    "author": "khaled555",
    "comments": [
      {
        "user": "ycd",
        "created_at": "2021-01-05T21:29:30Z",
        "body": "See #1497."
      }
    ]
  },
  {
    "number": 2603,
    "title": "Improve response time latency",
    "created_at": "2021-01-05T08:17:45Z",
    "closed_at": "2023-02-27T23:33:48Z",
    "labels": [
      "question",
      "answered",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2603",
    "body": "Hi there, \r\nI am recently using fast api for machine learning prediction.\r\nHowever, the model is loaded once when the server is began, and I communicate with the database only twice before and after prediction, it seems that there is a bottleneck in my code. I tried to check the robustness of my server with sending requests by threads. When there is less than 10 request every thing is fine and the max response time is acceptable. But when I increase the number of thread to about 100, the server response time increase exponentially and it might get even 200 seconds for client  to receive the response. \r\nCAn wany body have any Idea?\r\nI do use asysnc and await keywords in both when accessing to the database and the prediction function.\r\nThe sequential response time is less than 1 second.\r\nHow can I improve the performance of my server when it is supposed to process a huge number of requests.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2603/comments",
    "author": "marziehoghbaie",
    "comments": [
      {
        "user": "ycd",
        "created_at": "2021-01-05T08:22:20Z",
        "body": "What do you mean by improve response time latency?"
      },
      {
        "user": "marziehoghbaie",
        "created_at": "2021-01-05T08:26:03Z",
        "body": "@ycd I provided more details about my problem"
      },
      {
        "user": "marziehoghbaie",
        "created_at": "2021-01-05T08:29:42Z",
        "body": "The response time is quite annoying, cause every thing works fine, my friend has implemented the same project in flask, and its delay is less than 10 second under the same circumstances, \r\nAnd it make me to think why FastAPI does not work?\r\nit supposed to be faster"
      },
      {
        "user": "ycd",
        "created_at": "2021-01-05T09:00:03Z",
        "body": "You are missing the main point of asynchronous IO.\r\n\r\n> it supposed to be faster\r\n\r\nYou are doing a heavy computation that takes more than >1 sec. If that computation is not a coroutine(It's 99% not.) asyncio does not do any context switching.\r\n\r\nThis means it is going to block your event loop.\r\n\r\nYou should use `def` instead of `async def` for that endpoint.  By default, FastAPI will run handle your request  `run_in_threadpool` when your endpoint is not a coroutine. It is better for endpoints that does heavy computation.\r\n\r\nCan you try changing that endpoint to `def` instead of `async def`?  \r\n"
      },
      {
        "user": "marziehoghbaie",
        "created_at": "2021-01-05T09:24:40Z",
        "body": "this is my end point\r\n@router.post('')\r\nasync def predict(x: str = Body(...), file: UploadFile = File(...),\r\n                  user: Optional[User] = Depends(fastapi_users_.get_current_user)):\r\n         pass\r\n\r\n\r\nAs I understood from your message, I should remove the aysnc, But if I do this I can't use any await before DB operation of prediction function, SO I should remove them too?"
      },
      {
        "user": "marziehoghbaie",
        "created_at": "2021-01-05T09:26:19Z",
        "body": "Besides, If one user sends many requests at once they might need to update the DB in an async manner in a update function and to avoid resource starvation I do something like \r\n```\r\n    try:\r\n        session.add(db_item)\r\n        session.commit()\r\n        session.refresh(db_item)\r\n    except:\r\n        session.rollback()\r\n    finally:\r\n        session.close()\r\n```"
      },
      {
        "user": "marziehoghbaie",
        "created_at": "2021-01-05T10:01:13Z",
        "body": "> \r\n> \r\n> You are missing the main point of asynchronous IO.\r\n> \r\n> > it supposed to be faster\r\n> \r\n> You are doing a heavy computation that takes more than >1 sec. If that computation is not a coroutine(It's 99% not.) asyncio does not do any context switching.\r\n> \r\n> This means it is going to block your event loop.\r\n> \r\n> You should use `def` instead of `async def` for that endpoint. By default, FastAPI will run handle your request `run_in_threadpool` when your endpoint is not a coroutine. It is better for endpoints that does heavy computation.\r\n> \r\n> Can you try changing that endpoint to `def` instead of `async def`?\r\n\r\nI tried this solution, and I faced so many other issues. It seems that my model is not fully loaded and the prediction function raises an error. I loaded my model once when I create the routers, so all the requests can access it, but when I remove the async, the model can do the prediction. "
      },
      {
        "user": "ycd",
        "created_at": "2021-01-05T11:30:11Z",
        "body": "> As I understood from your message, I should remove the aysnc, But if I do this I can't use any await before DB operation of prediction function, SO I should remove them too?\r\n\r\nYes that's correct. \r\n\r\nAlso, you can run an asynchronous function with `asyncio.run()` inside a non async function.\r\n\r\n```python\r\ndef dummy():\r\n    asyncio.run(my_coroutine())\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
      },
      {
        "user": "ycd",
        "created_at": "2021-01-05T11:39:20Z",
        "body": "> but when I remove the async, the model can do the prediction.\r\n\r\nWhat's wrong with this?\r\n\r\n> It seems that my model is not fully loaded and the prediction function raises an error.\r\n\r\nCan you share the error message?\r\n"
      },
      {
        "user": "marziehoghbaie",
        "created_at": "2021-01-05T11:40:18Z",
        "body": "> \r\n> \r\n> > but when I remove the async, the model can do the prediction.\r\n> \r\n> What's wrong with this?\r\n> \r\n> > It seems that my model is not fully loaded and the prediction function raises an error.\r\n> \r\n> Can you share the error message?\r\n\r\nYes Sure,\r\n    raise ValueError(\"Tensor %s is not an element of this graph.\" % obj)\r\n    ValueError: Tensor Tensor(\"X/mul_24:0\", shape=(?, 3), dtype=float32) is not an element of this graph.\r\nthis is the error"
      },
      {
        "user": "marziehoghbaie",
        "created_at": "2021-01-05T11:56:35Z",
        "body": "I have implemented the whole prediction process as a Class, at first I create the mentioned object, then call a load_model function in the router script, then I implement the endpoints and then call the prediction function of the created class object in each endpoint, \r\nIt works fine except for the latency problem , but when I remove the async tag, it falls apart...\r\n\r\n\r\nAs far as I know this problem relates to the tensorflow graph"
      },
      {
        "user": "marziehoghbaie",
        "created_at": "2021-01-05T12:21:24Z",
        "body": "> \r\n> \r\n> I have implemented the whole prediction process as a Class, at first I create the mentioned object, then call a load_model function in the router script, then I implement the endpoints and then call the prediction function of the created class object in each endpoint,\r\n> It works fine except for the latency problem , but when I remove the async tag, it falls apart...\r\n> \r\n> As far as I know this problem relates to the tensorflow graph\r\n\r\nI solved the model problem but still, the server response time is  not really satisfying. When I send requests sequentially the server processing time is less than one second, but now the maximum response time is about 30 seconds, which is not really good. I should notice that I have ignored the dataBase writing and when I included again I got the following error\r\n``\r\nsqlalchemy.exc.OperationalError: (sqlite3.OperationalError) database is locked\r\n``\r\nI previously have got this before and I tried to solve it by creating sessions like :\r\n``\r\n    try:\r\n        session.add(db_item)\r\n        session.commit()\r\n        session.refresh(db_item)\r\n    except:\r\n        session.rollback()\r\n    finally:\r\n        session.close()\r\n``\r\n\r\nand now, even though I have not changed the database part, and still use the same code, but it seems that there is database starvation problem "
      },
      {
        "user": "marziehoghbaie",
        "created_at": "2021-01-05T12:29:00Z",
        "body": "This is my code::\r\n``\r\n   x, y= asyncio.run(my_model.predict(file_path))\r\n\r\n   asyncio.run(update_db(x, y))\r\n\r\n    session = Session()\r\n\r\n    db_item = ...\r\n    try:\r\n        session.add(db_item)\r\n        session.commit()\r\n        session.refresh(db_item)\r\n    except:\r\n        session.rollback()\r\n    finally:\r\n        session.close()\r\n\r\n``"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-10T12:52:58Z",
        "body": "Thanks for the help @ycd! 🚀 \r\n\r\n@marziehoghbaie please provide a minimal, self-contained example that I (or someone else) can run here to see your problem, otherwise it's quite difficult to help, guessing what you might have in your code.\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2022-11-22T00:16:58Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 2599,
    "title": "FastAPI on a VPS - what will be the bottleneck?",
    "created_at": "2021-01-04T10:52:24Z",
    "closed_at": "2023-02-27T23:33:35Z",
    "labels": [
      "question",
      "answered",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2599",
    "body": "I will host my FastAPI backend on a VPS server with 4 vCPU Cores, 8GB RAM, SSD for storage and 300MBit Upload bandwith.\r\nAn endpoint usually triggers:\r\n- two SELECT (lets say 50% of the rquests)\r\n- one SELECT and one ADD ROW ( 25% of the requests)\r\n- one SELECT and one UPDATE ROW (25% of the requests)\r\nThese are async calls to a Postgres database (with the package \"databases\").\r\n\r\nWith this environment, what will be the bottleneck and what should be upgraded to increase the number of requests/second? CPU cores, RAM or the bandwith?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2599/comments",
    "author": "Koliham",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2021-01-04T11:16:35Z",
        "body": "Are you currently seeing performance issues?"
      },
      {
        "user": "Koliham",
        "created_at": "2021-01-04T11:36:02Z",
        "body": "> \r\n> \r\n> Are you currently seeing performance issues?\r\n\r\nIt is more fore long-term planning to make the appication scalable, that I know where to invest.. I have two VPS providers. One is offering more vCPU cores, the other one is offering more bandwith,"
      },
      {
        "user": "ycd",
        "created_at": "2021-01-05T08:34:21Z",
        "body": "This question really depends on what you are trying to achieve.\r\n\r\n > `two SELECT`  \r\n\r\nIt is just one select? Usually, aggregation and ordering cause bottlenecks since they are CPU intensive operations. This question also depends on what is your expectation from the database. How many rows do you expect? \r\n\r\n\r\n"
      },
      {
        "user": "WilliamDEdwards",
        "created_at": "2021-01-16T16:13:02Z",
        "body": "\"Premature optimization is the root of all evil.\""
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-10T14:33:48Z",
        "body": "Thanks for the help here everyone! 👏  🙇 \r\n\r\nIf you solved the original problem/question, then you can close this issue @Koliham  ✔️\r\n\r\n...but yep, better try it out and test and benchmark your app with your provider(s).\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2022-11-22T00:17:00Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 2579,
    "title": "KeyError with OpenAPI URL and Form data.",
    "created_at": "2020-12-30T01:18:12Z",
    "closed_at": "2023-02-28T17:15:37Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2579",
    "body": "When I expose an endpoint with the following signature:\r\n\r\n```\r\n    @frf.action(detail=False, methods=['post'])                                                          \r\n    async def token(self,                                                                                \r\n        response: Response,                                                                              \r\n        grant_type: str = Form(None),                                                                    \r\n        client_id: str = Form(None),                                                                     \r\n        code: str = Form(None),                                                                          \r\n        redirect_uri: str = Form(None),                                                                  \r\n        assertion: str = Form(None),                                                                     \r\n        scope: str = Form(None),                                                                         \r\n        resource: str = Form(None),                                                                      \r\n        clients=frf.ContextualInjected('ClientRepository')                                               \r\n    ): \r\n```\r\n\r\nI get `KeyError` when running the following test case:\r\n\r\n```\r\nclass ApplicationMetadataEndpointsTestCase(unittest.TestCase):                                           \r\n                                                                                                         \r\n    def setUp(self):                                                                                     \r\n        self.client = TestClient(get_asgi_application())                                                 \r\n                                                                                                         \r\n    def test_openapi_url_is_served(self):                                                                \r\n        response = self.client.get(settings.OPENAPI_URL)                                                 \r\n        self.assertEqual(response.status_code, 200)\r\n```\r\n\r\nThe error is:\r\n\r\n```\r\n    def get_model_definitions(\r\n        *,\r\n        flat_models: Set[Union[Type[BaseModel], Type[Enum]]],\r\n        model_name_map: Dict[Union[Type[BaseModel], Type[Enum]], str],\r\n    ) -> Dict[str, Any]:\r\n        definitions: Dict[str, Dict[str, Any]] = {}\r\n        for model in flat_models:\r\n            m_schema, m_definitions, m_nested_models = model_process_schema(\r\n                model, model_name_map=model_name_map, ref_prefix=REF_PREFIX\r\n            )\r\n            definitions.update(m_definitions)\r\n>           model_name = model_name_map[model]\r\nE           KeyError: <class 'pydantic.main.Body_oauth2_token_token_post'>\r\n\r\n.lib/python/runtime/fastapi/utils.py:28: KeyError\r\n```\r\n\r\nThis error does not occur when visiting `/ui` in the browser.\r\n\r\nFastAPI version is 0.63.0.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2579/comments",
    "author": "cochiseruhulessin",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2020-12-30T06:53:03Z",
        "body": "What is frf here?"
      },
      {
        "user": "cochiseruhulessin",
        "created_at": "2021-05-22T11:09:09Z",
        "body": "Its a wrapper around the method to register the endpoint."
      }
    ]
  },
  {
    "number": 2576,
    "title": "External URL in OAuth2PasswordBearer ",
    "created_at": "2020-12-29T07:09:00Z",
    "closed_at": "2023-02-27T23:32:30Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2576",
    "body": "I have created an api which authenticates the user using username and password, which is present in micro service A.\r\nI want to use that authentication api in micro service B using\r\n```Python\noauth2_scheme=OAuth2PasswordBearer(tokenUrl=\"/auth/token\")\n```\r\nsomething like this. I want to put the authentication api URL which is present in a different micro service in tokenURL.\nHow should I achieve this as the api is present different micro service?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2576/comments",
    "author": "adityashanbhog",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2020-12-29T09:29:14Z",
        "body": "Please follow the issue template"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-09T21:40:20Z",
        "body": "Sorry, I (we) can't help you if you don't follow the issue template and provide more information.\r\n\r\nIf you still have problems please create a new issue and follow the template step by step.\r\n\r\nGiven that, I'm gonna close this one.\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2572,
    "title": "how to save video files from response input ",
    "created_at": "2020-12-27T09:20:44Z",
    "closed_at": "2023-02-27T23:32:11Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2572",
    "body": "i am working on object detection task. for that i was passing video input from html page to app but i am not able to save that video file in application. How can i save video input file which is coming from html response?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2572/comments",
    "author": "akshaykadam771",
    "comments": [
      {
        "user": "ycd",
        "created_at": "2020-12-27T09:35:15Z",
        "body": "Please follow the issue template and edit the question."
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-09T21:32:44Z",
        "body": "Thanks for the help @ycd ! 🍰 \r\n\r\nSorry @akshaykadam771, I (and we) can't help you if you don't follow the issue template and provide more information.\r\n\r\nIf you still have problems please create a new issue and follow the template step by step.\r\n\r\nGiven that, I'm gonna close this one. ☕ \r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2550,
    "title": "fastapi 内部如何获取uvicorn的端口",
    "created_at": "2020-12-21T09:29:57Z",
    "closed_at": "2023-02-27T23:31:26Z",
    "labels": [
      "question",
      "answered",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2550",
    "body": "Get the port of the service in FastAPI. I expect FastAPI to get its own port, and then periodically update the IP and port of the machine to the database to prevent the service of one machine from being suspended\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2550/comments",
    "author": "xujiang1",
    "comments": [
      {
        "user": "ycd",
        "created_at": "2020-12-21T09:37:50Z",
        "body": "Please re-ask the question in English."
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-09T21:15:22Z",
        "body": "Thanks for the help @ycd! 🍰 \r\n\r\n@xujiang1 that would then be outside of FastAPI, if you are running the Uvicorn command from outside, you would have to stop it and start it again with the new host and port. If you run Uvicorn from inside Python, you would also have to, in some way, stop the process and restart it with the new host and port. But in both cases it would really be outside of FastAPI.\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2022-11-20T00:16:56Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 2507,
    "title": "Pydantic missing value error for existing database record",
    "created_at": "2020-12-12T11:53:04Z",
    "closed_at": "2023-02-28T17:15:21Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2507",
    "body": "I am using FastApi to build simple api, there are two tables, with users and account type.\r\nWhen creating user there is also created record in account type table. It is there, I checked it.\r\nWhen I am trying to display user information it shows me this error:\r\n```\r\npydantic.error_wrappers.ValidationError: 2 validation errors for User\r\nresponse -> account -> active\r\n  field required (type=value_error.missing)\r\nresponse -> account -> id\r\n  field required (type=value_error.missing)\r\n```\r\nHere is my code:\r\n\r\nmain.py\r\n```\r\n@app.post(\"/api/register/\", response_model=schemas.User)\r\ndef create_user(user: schemas.UserCreate, db: Session = Depends(get_db)):\r\n    db_user = crud.get_user_by_email(db, email=user.email)\r\n    if db_user:\r\n        raise HTTPException(status_code=400, detail=\"Email already exists.\")\r\n    if user.password != user.password_repeat:\r\n        raise HTTPException(status_code=400, detail=\"Passwords have to be the same.\")\r\n    \r\n    user.password = get_password_hash(user.password)\r\n    return crud.create_user(db=db, user=user)\r\n\r\n@app.get(\"/api/users/{user_id}\", response_model=schemas.User)\r\ndef get_user_by_id(user_id: int, db: Session = Depends(get_db)):  \r\n    db_user = crud.get_user_by_id(db=db, user_id=user_id)\r\n    if db_user is None:\r\n        raise HTTPException(status_code=401, detail=\"User not found.\")\r\n    return db_user\r\n```\r\n\r\nschemas.py\r\n```\r\n# Account\r\nclass AccountBase(BaseModel):\r\n    expire_date: Optional[date] = None\r\n    active: bool\r\n    option: Optional[str] = None\r\n\r\nclass AccountCreate(AccountBase):\r\n    user_id: int\r\n\r\nclass Account(AccountBase):\r\n    id: int\r\n    pass\r\n\r\n    class Config:\r\n        orm_mode = True\r\n\r\n# USER\r\nclass UserBase(BaseModel):\r\n    name: str\r\n    email: EmailStr\r\n\r\nclass UserCreate(UserBase):\r\n    password: str\r\n    password_repeat: str\r\n\r\nclass User(UserBase):\r\n    id: int\r\n    uuid: str\r\n    is_active: bool\r\n    account: Account\r\n\r\n    class Config:\r\n        orm_mode = True\r\n```\r\nmodels.py\r\n```\r\nlass User(Base):\r\n    __tablename__ = \"user\"\r\n\r\n    id = Column(Integer, primary_key=True, index=True)\r\n    email = Column(String, unique=True)\r\n    name = Column(String)\r\n    password = Column(String)\r\n    uuid = Column(String)\r\n    is_active = Column(Boolean, default=False)\r\n\r\n    account = relationship(\"Account\", back_populates=\"user\")\r\n\r\nclass Account(Base):\r\n    __tablename__ = \"account\"\r\n\r\n    id = Column(Integer, primary_key=True, index=True)\r\n    user_id = Column(Integer, ForeignKey(\"user.id\"))\r\n    account_type = Column(String, default=\"Free\")\r\n    expire_date = Column(Date, default=None)\r\n    active = Column(Boolean, default=True)\r\n    option = Column(String, default=None)\r\n\r\n    user = relationship(\"User\", back_populates=\"account\")\r\n```\r\ncrud.py\r\n```\r\ndef get_user_by_id(db: Session, user_id: int):\r\n    return db.query(models.User).filter(models.User.id == user_id).first()\r\n\r\ndef get_user_by_email(db: Session, email: str):\r\n    return db.query(models.User).filter(models.User.email == email).first()\r\n\r\ndef create_user(db: Session, user: schemas.UserCreate):\r\n    user_uuid = uuid.uuid4().hex\r\n    db_user = models.User(email=user.email, name=user.name, password=user.password, uuid = user_uuid)\r\n    db.add(db_user)\r\n    db.commit()\r\n    db.refresh(db_user)\r\n    db_premium = models.Account(user_id=db_user.id)\r\n    db.add(db_premium)\r\n    db.commit()\r\n    db.refresh(db_premium)\r\n    return db_user\r\n```\r\n\r\nI am not sure why it is not working. Relations between tables looks ok.\r\nI tried to do missing variables as Oprional[] but it shows nulls then.\r\n\r\nKind regadrs\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2507/comments",
    "author": "psowa001",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2020-12-12T12:10:21Z",
        "body": "Have you tried logging the contents of the response before you return it?"
      },
      {
        "user": "psowa001",
        "created_at": "2020-12-12T14:07:34Z",
        "body": "> Have you tried logging the contents of the response before you return it?\r\n\r\n@Mause thank you for response. I am really new in this. Could you please advise me how to do this and which specific thing should I check?\r\n\r\nEdit:\r\nI am not sure why buy when I am putting Account as a list in schemas.py it is displaying it correctly.\r\n```\r\nclass User(UserBase):\r\n    id: int\r\n    uuid: str\r\n    is_active: bool\r\n    account: List[Account]\r\n\r\n    class Config:\r\n        orm_mode = True\r\n```\r\nAs it is not a list but single record, is there a way to display it as a dict?\r\n\r\n```\r\n{\r\n  \"name\": \"string\",\r\n  \"email\": \"user@example.com\",\r\n  \"id\": 1,\r\n  \"uuid\": \"920b80eec9384f9fa716568c5bba64a4\",\r\n  \"is_active\": false,\r\n  \"account\": [\r\n    {\r\n      \"account_type\": \"Free\",\r\n      \"expire_date\": null,\r\n      \"active\": true,\r\n      \"option\": null\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nEdit 2:\r\nI solved it by adding  uselist=False to relationship declaration in User class\r\n```\r\naccount = relationship(\"Account\", back_populates=\"user\", uselist=False)\r\n```"
      },
      {
        "user": "chethanlreddy",
        "created_at": "2022-08-11T16:34:10Z",
        "body": "Thank you"
      }
    ]
  },
  {
    "number": 2504,
    "title": "Custom json request body parsing and swagger/redoc generation",
    "created_at": "2020-12-11T11:56:25Z",
    "closed_at": "2023-02-28T00:28:48Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2504",
    "body": "Hi.\r\n\r\nI have an endpoint whose intended use is that of having an \"index\" query path parameter and a simple bool payload, that cannot be treated as a pydantic model, so I implemented it as follows:\r\n\r\n```python\r\n@app.post(\"/output/{index}\")\r\nasync def write_output(index: int, request: Request):\r\n    requestedState: bool = await request.json()\r\n\r\n    logger.debug(f'write_output({index},{requestedState})...')\r\n\r\n    # ....\r\n```\r\n\r\nIs there a way to let bool payload appear in swagger/redoc?\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2504/comments",
    "author": "maiorfi",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2020-12-11T12:03:46Z",
        "body": "Have you tried using a pydantic model and setting `__root__` to bool?"
      },
      {
        "user": "maiorfi",
        "created_at": "2020-12-11T12:49:57Z",
        "body": "Do you mean something like that?\r\n\r\n```python\r\nclass OutputPayload(BaseModel):\r\n    __root__: bool\r\n\r\n\r\n@app.post(\"/output/{index}\")\r\nasync def write_output(index: int, outputPayload: OutputPayload):\r\n    requestedState: bool = outputPayload.__root__\r\n\r\n    logger.debug(f'write_output({index},{requestedState})...')\r\n    # ...\r\n```"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-12-27T19:00:51Z",
        "body": "Thanks for the help @Mause ! :cake: \r\n\r\nI assume you solved it, thanks for closing the issue @maiorfi  :+1:"
      }
    ]
  },
  {
    "number": 2494,
    "title": "JSON encoding of nested Pydantic objects does not use custom encoders of nested objects",
    "created_at": "2020-12-09T03:36:45Z",
    "closed_at": "2023-02-28T17:15:12Z",
    "labels": [
      "question",
      "investigate",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2494",
    "body": "### Example\r\n\r\nMust install `qcelemental` first! Pardon that I'm not able to take the core issues and create a simpler example without this external package; however, this demonstrates the core problem well.\r\n\r\n```sh\r\npip install qcelemental\r\n```\r\n\r\n```Python\r\nfrom pydantic import BaseModel\r\nfrom fastapi.encoders import jsonable_encoder\r\nfrom qcelemental.models import Molecule\r\nfrom numpy import array, ndarray\r\n\r\n\r\nmolecule_data = {\r\n    \"schema_name\": \"qcschema_molecule\",\r\n    \"schema_version\": 2,\r\n    \"validated\": True,\r\n    \"symbols\": array([\"O\", \"H\", \"H\"], dtype=\"<U1\"),\r\n    \"geometry\": array(\r\n        [\r\n            [0.0, 0.0, 0.0],\r\n            [0.52421003, 1.68733646, 0.48074633],\r\n            [1.14668581, -0.45032174, -1.35474466],\r\n        ]\r\n    ),\r\n    \"name\": \"IUPAC oxidane\",\r\n    \"molecular_charge\": 0.0,\r\n    \"molecular_multiplicity\": 1,\r\n    \"fix_com\": False,\r\n    \"fix_orientation\": False,\r\n    \"provenance\": {\r\n        \"creator\": \"QCElemental\",\r\n        \"version\": \"v0.17.0\",\r\n        \"routine\": \"qcelemental.molparse.from_string\",\r\n    },\r\n}\r\n\r\n\r\nclass NestedMolecule(BaseModel):\r\n    molecule: Molecule\r\n\r\n\r\nclass NestedMoleculeRepeatedEncoders(NestedMolecule):\r\n    class Config:\r\n        json_encoders = {ndarray: lambda x: x.tolist()}\r\n\r\n\r\nmolecule = Molecule.parse_obj(molecule_data)\r\nnested_molecule_repeat_encoders = NestedMoleculeRepeatedEncoders(molecule=molecule)\r\nnested_molecule = NestedMolecule(molecule=molecule)\r\n\r\n# Works great! Fastapi picks up the custom encoders/serialization methods on Molecule and can encode the object and ultimately return a JSONResponse (if this were the response_model on a path)\r\njsonable_encoder(molecule)\r\n\r\n# Works! But why do I have to duplicate these encoders that already exist on the Molecule object??\r\njsonable_encoder(nested_molecule_repeat_encoders)\r\n\r\n# Fails to properly encode numpy.ndarray field at nested_molecule.molecule.geometry. A JSONResponse with response_model=NestedMolecule would fail.\r\njsonable_encoder(nested_molecule)\r\n```\r\n\r\n### Description\r\nFastapi appears to correctly utilize the custom json encoding/serialization methods found on `Molecule`. Great! However, if I nest a `Molecule` inside another Pydantic model, fastapi does not correctly pick up these serialization customizations. In order to use a `NestedMolecule` I have to add custom `json_encoders` to the `Config` class, as seen on `NestedMoleculeRepeatedEncoders`. But why do I have to do this? Seems fastapi should pick up the custom encoders on nested Pydantic objects just like it does on the original `Molecule` object. I believe this is a bug.\r\n\r\nOne way to help see what's going on here is to add `print(type(obj), obj)` on line 37 of `fastapi.encoders` to see how the `jsonable_encoder` function is correctly handing the first two cases and fails the third case.\r\n\r\n### Environment\r\n\r\n* OS: MacOS:\r\n* FastAPI Version 0.62.0:\r\n* Python version: 3.9.0",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2494/comments",
    "author": "coltonbh",
    "comments": [
      {
        "user": "cirezd",
        "created_at": "2022-11-22T20:39:20Z",
        "body": "I believe I have a similar issue when using a custom encoder for a nested pydantic model. I use `jsonable_encoder` instead, but it does not work with `class Config:` either. \r\n\r\nMy system: ubuntu 20.04, fastapi==0.87.0, Python 3.8.5\r\n\r\nMy code:\r\n\r\n```python\r\nfrom typing import Any, Dict, List\r\nfrom pydantic import BaseModel, Field, root_validator\r\nfrom fastapi.encoders import jsonable_encoder\r\n\r\nclass LocaleProperty(BaseModel):\r\n    id: str = Field(\r\n        description=\"ISO standard language-territory combination using underscore '_' seperator.\")\r\n    value: str = Field(alias=\"_value\")\r\n\r\n    @root_validator(pre=True)\r\n    def use_key_value_for_assignment(cls, values: Dict[str, Any]) -> Dict[str, Any]:\r\n        for key, value in values.items():\r\n            return {\"id\": key, \"_value\": value}\r\n\r\nclass Vertex(BaseModel):\r\n    properties: List[LocaleProperty]\r\n\r\ndef locale_encoder(property: LocaleProperty) -> Dict:\r\n    return {property.id: property.value}\r\n\r\ncustom_encoder = {\r\n    LocaleProperty: locale_encoder\r\n}\r\n\r\n# Works\r\nlocale_property = LocaleProperty(**{\"en_US\": \"Test\"})\r\nproperty_encoded = jsonable_encoder(\r\n    locale_property, custom_encoder=custom_encoder)\r\nprint(property_encoded)\r\n# Output:\r\n# {'en_US': 'Test'}\r\n\r\n# Does not work\r\nvertex = Vertex(**{\"properties\": [{\"en_US\": \"Test\"}]})\r\nproperties_encoded = jsonable_encoder(\r\n    vertex, custom_encoder=custom_encoder)\r\nprint(properties_encoded)\r\n# Output:\r\n# {'properties': [{'id': 'en_US', '_value': 'Test'}]}\r\n# Expected:\r\n# {'properties': [{'en_US': 'Test'}]}\r\n```\r\n"
      }
    ]
  },
  {
    "number": 2477,
    "title": "Body for RedirectResponse",
    "created_at": "2020-12-06T22:54:25Z",
    "closed_at": "2023-02-28T00:27:43Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2477",
    "body": "Good day.\r\n\r\nI found some conflict (as I see it) between RedirectResponse class and openapi schema.\r\n\r\n```Python\r\nclass RedirectResponse(Response):\r\n    def __init__(\r\n        self,\r\n        url: typing.Union[str, URL],\r\n        status_code: int = 307,\r\n        headers: dict = None,\r\n        background: BackgroundTask = None,\r\n    ) -> None:\r\n        super().__init__(\r\n            content=b\"\", status_code=status_code, headers=headers, background=background\r\n        )\r\n        self.headers[\"location\"] = quote_plus(str(url), safe=\":/%#?&=@[]!$&'()*+,;\")\r\n```\r\n\r\nWe can't define a content. But only 304 status code (of the redirect codes) really can't have a body. \r\n\r\nThis fact and `STATUS_CODES_WITH_NO_BODY = {..., 304}` makes a trouble with openapi schema validation. \r\n\r\nMay be, we should allow set a content with check for the 304 status_code (and nullify content if it is)?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2477/comments",
    "author": "mrkovalchuk",
    "comments": [
      {
        "user": "ycd",
        "created_at": "2020-12-07T21:13:09Z",
        "body": "I believe 204 is fine since it is named ` No Content`, also RFC states it clearly by saying it must not include a message-body.\r\n\r\n> The 204 response MUST NOT include a message-body, and thus is always terminated by the first empty line after the header fields.\r\n\r\n"
      },
      {
        "user": "mrkovalchuk",
        "created_at": "2020-12-07T22:06:19Z",
        "body": "> I believe 204 is fine since it is named ` No Content`, also RFC states it clearly by saying it must not include a message-body.\r\n> \r\n> > The 204 response MUST NOT include a message-body, and thus is always terminated by the first empty line after the header fields.\r\n\r\nIt's issue only about 3XX responses. About 307 especially.\r\n\r\nFor clearly, I delete other status codes mentioned in first message. Thanks."
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-09T20:46:24Z",
        "body": "Hmm, I'm not sure I understand what you need or what you are suggesting 🤔 \r\n\r\nCould you please create a minimal self-contained example that shows your use case? ☕ \r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2022-11-20T00:17:06Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 2458,
    "title": "POST response base64",
    "created_at": "2020-12-02T12:52:52Z",
    "closed_at": "2023-02-28T00:27:22Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2458",
    "body": "### Example\r\n```Python\r\nclass Base64(BaseModel):\r\n    base64_str: str\r\n    photo_name: str\r\n\r\n@app.post(\"/base64\")\r\nasync def post_base64Image(b64: Base64):\r\n    imgstr = b64.base64_str\r\n    imgdata = base64.b64decode(imgstr)\r\n    filename = '%s.png' % b64.photo_name \r\n    with open(filename, 'wb') as f:\r\n        f.write(imgdata)\r\n    photo_id = 0\r\n    paths = int(photo_id / 1000) * 1000\r\n    with open(r\"E:\\images1024x1024\\%05d\\%05d.png\" % (paths, photo_id), \"rb\") as img_file:\r\n        b64_output = base64.b64encode(img_file.read())\r\n    return {\"Image\" : b64_output.decode('utf-8')}\r\n\r\n    \r\n    \r\n@app.post(\"/response_model/\", response_model=Base64)\r\nasync def response_models(b64: Base64):\r\n    photo_id = 0\r\n    paths = int(photo_id / 1000) * 1000\r\n    with open(r\"E:\\images1024x1024\\%05d\\%05d.png\" % (paths, photo_id), \"rb\") as img_file:\r\n        b64_output = base64.b64encode(img_file.read())\r\n    b64.base64_str = b64_output.decode('utf-8')\r\n    return b64\r\n```\r\n\r\n### Description\r\n\r\n* If I use this two HTTP POST to send base64 image with size 64*64 is ok.\r\n* But when I want to send 1024*1024 it just doesn't work.\r\n* The client side is using swift to call the POST method.\r\n* How could I send 1024*1024 base64 to it?\r\n\r\n* Or is my POST funtion is not well defined?\r\n### Environment\r\n\r\n* macOS\r\n* FastAPI Version: 0.61.1\r\n* Python version: 3.8.6\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2458/comments",
    "author": "darrenleeleelee1",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2020-12-02T13:23:11Z",
        "body": "What error are you getting in your server console?"
      },
      {
        "user": "darrenleeleelee1",
        "created_at": "2020-12-02T15:47:38Z",
        "body": "Not show any error, but just show nothing."
      },
      {
        "user": "Kludex",
        "created_at": "2020-12-02T15:51:55Z",
        "body": "If you can provide us an example that doesn't depend on your local path, some image samples and explain how we can reproduce the same behavior, it will be very cool. :sunglasses: :+1: "
      }
    ]
  },
  {
    "number": 2444,
    "title": "how communicate with Qt by fastapi websocket?",
    "created_at": "2020-11-30T08:40:19Z",
    "closed_at": "2023-02-28T00:26:44Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2444",
    "body": "My endpoints(Iot, such as temperature sensor control, coding with Qt) want to send data to server,how can I communicate by fastapi websocket.I got a err 403.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2444/comments",
    "author": "lang101",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2020-11-30T08:41:51Z",
        "body": "It sounds like you aren't sending authentication in your request?"
      },
      {
        "user": "lang101",
        "created_at": "2020-11-30T08:57:35Z",
        "body": "Um, but I can run with gevent-websocket without any authentication.\r\nQt's websocket also no authentication."
      },
      {
        "user": "Mause",
        "created_at": "2020-11-30T09:03:12Z",
        "body": "Your error is 403 - forbidden.\n\nMaybe see what errors are in your server console?"
      },
      {
        "user": "WilliamDEdwards",
        "created_at": "2020-12-31T16:38:51Z",
        "body": "WebSockets 403 will be returned in case of HTTP 404. So your path may not exist."
      },
      {
        "user": "Tomas1337",
        "created_at": "2021-03-13T09:12:16Z",
        "body": "Been trying to do the same. @wolfishboy , Have you figured it out?\r\n"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-27T16:38:53Z",
        "body": "Thanks for the help here everyone! 👏  🙇 \r\n\r\nIf you solved your problem @lang101, then you can close this issue ✔️\r\n\r\nIf anyone else has similar problems, please create a new issue following the template and creating a self-contained example that shows your intention and the problem, and that I (or someone else) can copy-paste and run to check it out.\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2022-12-09T00:15:20Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 2403,
    "title": "How to store a received file from websocket in FastAPI",
    "created_at": "2020-11-24T16:03:46Z",
    "closed_at": "2023-02-28T00:26:08Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2403",
    "body": "Hi,\r\nI am trying to sending a message with a file through websockets and receiving it on the backend like this:\r\n\r\n**Javascript:**        \r\n```\r\n    function sendMessage(uploaded_file) {\r\n        data = {\r\n            \"message\": \"some message\",\r\n            \"sender\": \"some sender\"\r\n        };        \r\n        websocket.send(JSON.stringify(data));\r\n        websocket.send(uploaded_file);\r\n   }\r\n```\r\n**FastAPI**\r\n```\r\n    while True:\r\n         data = await websocket.receive_json()\r\n         message = data[\"message\"]\r\n         sender = data['sender']\r\n         file = await websocket.receive_bytes()\r\n```\r\nNow I want to read the file and store it somewhere but I am not able to do so.\r\n\r\n**Read File**\r\n```\r\n     output_file = open(file, \"rb\")\r\n     byte = output_file.read(1)\r\n     while byte:\r\n          print(byte)\r\n          byte = output_file.read(1)\r\n```\r\nThe above code gives the following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/my_env/lib/python3.8/site-packages/uvicorn/protocols/websockets/websockets_impl.py\", line 154, in run_asgi\r\n    result = await self.app(self.scope, self.asgi_receive, self.asgi_send)\r\n  File \"/my_env/lib/python3.8/site-packages/uvicorn/middleware/proxy_headers.py\", line 45, in __call__\r\n    return await self.app(scope, receive, send)\r\n  File \"/my_env/lib/python3.8/site-packages/fastapi/applications.py\", line 179, in __call__\r\n    await super().__call__(scope, receive, send)\r\n  File \"/my_env/lib/python3.8/site-packages/starlette/applications.py\", line 111, in __call__\r\n    await self.middleware_stack(scope, receive, send)\r\n  File \"/my_env/lib/python3.8/site-packages/starlette/middleware/errors.py\", line 146, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \"/my_env/lib/python3.8/site-packages/starlette/exceptions.py\", line 58, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \"/my_env/lib/python3.8/site-packages/starlette/routing.py\", line 566, in __call__\r\n    await route.handle(scope, receive, send)\r\n  File \"/my_env/lib/python3.8/site-packages/starlette/routing.py\", line 283, in handle\r\n    await self.app(scope, receive, send)\r\n  File \"/my_env/lib/python3.8/site-packages/starlette/routing.py\", line 57, in app\r\n    await func(session)\r\n  File \"/my_env/lib/python3.8/site-packages/fastapi/routing.py\", line 228, in app\r\n    await dependant.call(**values)\r\n  File \"./main.py\", line 213, in direct_chat\r\n    output_file = open(file, \"rb\")\r\nValueError: embedded null byte\r\n```\r\nI am not sure if that is the right way to receive a file through websockets please help.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2403/comments",
    "author": "Ahtii",
    "comments": [
      {
        "user": "Ahtii",
        "created_at": "2020-11-24T20:03:30Z",
        "body": "This seems to fix the problem:\r\n\r\n**javascript:**\r\n\r\n```\r\n    function sendMessage(uploaded_file) {\r\n        data = {\r\n            \"message\": \"some message\",\r\n            \"sender\": \"some sender\",\r\n            \"filename\": uploaded_file['filename']                  // sended filename\r\n        };        \r\n        websocket.send(JSON.stringify(data));\r\n        websocket.send(uploaded_file);\r\n   }\r\n\r\n```\r\n**FastAPI:**\r\n\r\n```\r\n       while True:\r\n             data = await websocket.receive_json()\r\n             receiver = data[\"receiver\"]\r\n             filename = data['filename']\r\n             file = await websocket.receive_bytes()\r\n\r\n             with open(filename, \"wb\") as f:\r\n                    f.write(file)\r\n```"
      },
      {
        "user": "includeamin",
        "created_at": "2020-11-24T20:08:21Z",
        "body": "please close the issue if your problem solved."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-12-27T19:48:25Z",
        "body": "Thanks for reporting back and closing the issue :+1:"
      }
    ]
  },
  {
    "number": 2371,
    "title": "Cuda initialization error when doing PyTorch inference with FastAPI",
    "created_at": "2020-11-18T15:19:54Z",
    "closed_at": "2023-02-28T17:14:20Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2371",
    "body": "Hi,\r\nI've been trying to use FastAPI to wrap a PyTorch model for inference.\r\nWhile this works perfectly for CPU inference, when I'm trying to run my model on a GPU I encounter an `Cuda error: initialization error.` when trying to move a tensor from CPU to GPU.\r\nI am able to load the model into the GPU during the `__init__` stage, so it looks like this problem is related to multiprocessing. However, standard solutions related to PyTorch such as setting its multiprocessing mode to `spawn` do not seem to work.\r\n\r\nAny idea how to approach this from the `FastAPI` end?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2371/comments",
    "author": "eladrich",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2020-11-19T01:04:39Z",
        "body": "Can you explain how your issue is related to fastapi?"
      },
      {
        "user": "SaeedArisha",
        "created_at": "2022-02-28T16:34:44Z",
        "body": "@eladrich Did you manage to find a solution?"
      },
      {
        "user": "shanmukh-gupta",
        "created_at": "2022-07-13T12:12:10Z",
        "body": "@SaeedArisha @eladrich Did you find a solution for this? I face the same error."
      }
    ]
  },
  {
    "number": 2368,
    "title": "Literal type in get request parameters",
    "created_at": "2020-11-17T17:21:14Z",
    "closed_at": "2023-02-28T17:14:17Z",
    "labels": [
      "question",
      "investigate",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2368",
    "body": "```Python\r\nfrom typing import Literal, Optional\r\n\r\nfrom fastapi import FastAPI\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get('/')\r\ndef get_test(\r\n    param_int: Optional[Literal[5]] = None,\r\n    param_bool: Optional[Literal[True]] = None,\r\n    param_str: Optional[Literal['a']] = None,\r\n):\r\n    print(param_int, param_bool, param_str)\r\n```\r\n\r\n### Description\r\n\r\nI expect that I have created params which can be set only to one value. Let's see on Pydantic:\r\n```Python\r\nclass A(BaseModel):\r\n    param_str: Optional[Literal['a']] = None\r\n    param_int: Optional[Literal[5]] = None\r\n    param_bool: Optional[Literal[True]] = None\r\n```\r\n`A(param_str='a')` -- expected ok\r\n`A(param_str='b')` -- expected fail\r\n`A(param_int=5)` -- expected ok\r\n`A(param_int=1)` -- expected fail\r\n`A(param_bool=True)` -- expected ok\r\n`A(param_bool=False)` -- expected fail\r\n\r\nAfter let's try to call endpoint\r\n```bash\r\nINFO:     127.0.0.1:53794 - \"GET /?param_str=a HTTP/1.1\" 200 OK\r\nINFO:     127.0.0.1:53794 - \"GET /?param_str=b HTTP/1.1\" 422 Unprocessable Entity\r\nINFO:     127.0.0.1:53796 - \"GET /?param_int=5 HTTP/1.1\" 422 Unprocessable Entity\r\nINFO:     127.0.0.1:53796 - \"GET /?param_int=1 HTTP/1.1\" 422 Unprocessable Entity\r\nINFO:     127.0.0.1:53798 - \"GET /?param_bool=1 HTTP/1.1\" 422 Unprocessable Entity\r\n```\r\n\r\nSo it works only for strings not for int or bool value, doesn't it? How can I use Literal for bool and int?\r\n\r\n### Environment\r\n\r\nUbuntu 18.04\r\nPython 3.8.0\r\nfastapi 0.60.1\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2368/comments",
    "author": "elsimqoz",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2020-11-18T01:49:03Z",
        "body": "If you use them as strings, it works - `Optional[Literal['True']]` or `Optional[Literal['5']]` "
      },
      {
        "user": "elsimqoz",
        "created_at": "2020-11-18T07:28:11Z",
        "body": "@Mause I got it, but what shall I do if I want to use the original types without conversion? Maybe it is a bug or a feature request?"
      },
      {
        "user": "wetgi",
        "created_at": "2020-11-18T14:01:02Z",
        "body": "It's a bug / feature request because pydantic can handle this in e.g. post-requests.\r\n\r\n```python\r\nfrom typing import Literal, Optional\r\nfrom fastapi import FastAPI\r\nfrom pydantic import BaseModel\r\n\r\napp = FastAPI()\r\n\r\n# A Pydantic model\r\nclass Item(BaseModel):\r\n    quantity: Literal[5, 10 , 15]\r\n\r\n@app.post('/')\r\ndef post_test(item: Item\r\n):\r\n    print(item)\r\n```\r\n\r\nHere you can just post 5, 10, 15 as int and not a string."
      }
    ]
  },
  {
    "number": 2366,
    "title": "jsonable_encoder on user object that contains a WKBElement ",
    "created_at": "2020-11-17T16:33:53Z",
    "closed_at": "2023-02-28T00:24:47Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2366",
    "body": "How do I get jsonable_encoder to work with a user object that contains a WKBElement (geography point) ?\r\n\r\nThis is a `print(vars(current_user))`:\r\n\r\n`{'_sa_instance_state': <sqlalchemy.orm.state.InstanceState object at 0x7f2e16dbf590>, 'user_name': 'test', 'location': <WKBElement at 0x7f2e16dbf6d0; 010100000000000000000000400000000000000840>}`\r\n\r\nWhen I do `jsonable_encoder(current_user)` I get: \r\n\r\n`ValueError: [ValueError('dictionary update sequence element #0 has length 1; 2 is required'), TypeError('vars() argument must have __dict__ attribute')]`",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2366/comments",
    "author": "OddBlueDog",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2020-11-17T23:08:06Z",
        "body": "In what format are you expecting the WKBElement to be serialised?"
      },
      {
        "user": "OddBlueDog",
        "created_at": "2020-11-17T23:42:04Z",
        "body": "> In what format are you expecting the WKBElement to be serialised?\r\n\r\nThanks I got it working OK now with the custom_encoder on jsonable_encoder, took me awhile to figure out how to use it. I don't actually need the value at this point so I'm just setting it to None now like ` jsonable_encoder(current_user, custom_encoder={WKBElement: lambda:  None} )`"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-12-27T20:12:43Z",
        "body": "Thanks for the help here @Mause ! :clap: :bow: \r\n\r\nThanks for reporting back and closing the issue @OddBlueDog  :+1:"
      },
      {
        "user": "jorenvs",
        "created_at": "2021-02-08T13:09:15Z",
        "body": "I know the issue has been fixed, but I just hit upon the same thing and it took me a while to end up here and figure out the WKBElement was the issue (I had a JSON column with a dict that I thought was causing this). \r\n\r\nMy question is mainly: is there some way the error can be made a bit more clear? As in, point out that the JSON serialisation is failing and on which field/value?\r\n\r\nEspecially for newcomers to FastAPI (read: me) it's not directly evident where the jsonable_encoder is being called (I thought it was in the JSON update step in SQLAlchemy). The stack trace wasn't much help either."
      }
    ]
  },
  {
    "number": 2348,
    "title": "Returning an alias of a Field in a response_model",
    "created_at": "2020-11-12T21:09:40Z",
    "closed_at": "2023-02-28T00:23:59Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2348",
    "body": "Hi,\r\ni try to return a response_model in which I change the alias to have a different name for the field (one with a dash) in the response .  Settings response_model=TodoBase to this schema:\r\n```python\r\nclass TodoBase(BaseModel):\r\n    due_date: Optional[datetime] = Form(None)\r\n\r\n    class Config:\r\n        orm_mode = True\r\n```\r\nresults in:\r\n```json\r\n{\r\n  \"due_date\": \"2020-11-11T20:15:21.858Z\"\r\n}\r\n```\r\nbut if try to change it to:\r\n```python\r\nclass TodoBase(BaseModel):\r\n    due_date: Optional[datetime] = Form(None, alias=\"due-date\")\r\n\r\n    class Config:\r\n        orm_mode = True\r\n```\r\nit results in:\r\n```json\r\n{\r\n  \"due_date\": null\r\n}\r\n\r\nWhat's wrong? Thanks in advance.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2348/comments",
    "author": "emilpaw",
    "comments": [
      {
        "user": "includeamin",
        "created_at": "2020-11-13T10:40:33Z",
        "body": "what is the body of your post request?\r\n`due_date` or `due-date`?"
      },
      {
        "user": "emilpaw",
        "created_at": "2020-11-13T20:51:58Z",
        "body": "I fixed my issue by adding `allow_population_by_field_name = True` to the Pydantic model config. Not entirely sure, but I think the problem was that I returned a database model and FastAPI (or Pydantic) could not find \"due-date\" in it.\r\n\r\nThat option was very hard to find, maybe it should be mentioned in the documentation. Also the possibility to add an alias to a Pydantic model should be mentioned. Even if it's rather a Pydantic topic, it's pretty useful and not really obvious you can use that.\r\n"
      },
      {
        "user": "includeamin",
        "created_at": "2020-11-14T08:34:37Z",
        "body": "@emilpaw please close the issue if it has been solved"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-12-27T20:23:38Z",
        "body": "Thanks for the help here @includeamin ! :clap: :bow: \r\n\r\nThanks for reporting back and closing the issue @emilpaw  :+1:"
      }
    ]
  },
  {
    "number": 2301,
    "title": "cannot override `app.dependency_override`",
    "created_at": "2020-11-05T10:51:23Z",
    "closed_at": "2023-02-28T00:41:44Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2301",
    "body": "I'm using `fastapi` to create a backend app connect to **MySQL 5.7 (on Google Cloud SQL)** with sqlalchemy.\r\n\r\n**When testing (with pytest)**, I want to switch the connected DB to **SQLite3.**\r\n\r\nHowever, when I execute `pytest`, the test fails **because DB has not been switched to SQLite3.**\r\nHow can I fix it?\r\n\r\n`conftest.py` as follows:\r\n\r\n```python\r\nimport pytest\r\nfrom sqlalchemy import create_engine\r\nfrom sqlalchemy.orm import sessionmaker\r\nfrom sqlalchemy_utils import database_exists, drop_database\r\nfrom src.app.dependencies.database import Base\r\n\r\nclass User(Base):\r\n     __tablename__ = \"User\"\r\n     id = Column(\"id\", Integer, primary_key=True, autoincrement=True)\r\n     name = Column(\"name\", String)\r\n\r\n@pytest.fixture(scope=\"function\")\r\ndef SessionLocal():\r\n    # settings of test database\r\n    TEST_SQLALCHEMY_DATABASE_URL = \"sqlite:///./test_temp.db\"\r\n    engine = create_engine(\r\n        TEST_SQLALCHEMY_DATABASE_URL, connect_args={\"check_same_thread\": False}\r\n    )\r\n\r\n    assert not database_exists(\r\n        TEST_SQLALCHEMY_DATABASE_URL\r\n    ), \"Test database already exists. Aborting tests.\"\r\n\r\n    Base.metadata.create_all(engine)\r\n    SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\r\n\r\n    yield SessionLocal\r\n\r\n    drop_database(TEST_SQLALCHEMY_DATABASE_URL)\r\n```\r\n\r\n`tests/test_user.py` :\r\n\r\n```python\r\ndef temp_db(f):\r\n    def func(SessionLocal, *args, **kwargs):\r\n\r\n        def override_get_db():\r\n            try:\r\n                db = SessionLocal()\r\n                yield db\r\n            finally:\r\n                db.close()\r\n\r\n        # cannot override app's dependency...\r\n        app.dependency_overrides[get_db] = override_get_db\r\n        # Run tests\r\n        f(*args, **kwargs)\r\n        \r\n        app.dependency_overrides[get_db] = get_db\r\n    return func\r\n\r\nclient = TestClient(app)\r\n\r\n\r\n@temp_db\r\ndef test_fetch_all_users():\r\n    response = client.get(\"/api/users\")\r\n    assert response.status_code == 200\r\n    assert len(response.json()[\"data\"]) == 0\r\n    # Expect 0 (on SQLite3), but actual 23 (on MySQL).\r\n```\r\n\r\nMy dependency and router:\r\n\r\n```python\r\ndef get_db():\r\n    db = SessionLocal()\r\n    try:\r\n        yield db\r\n    except Exception:\r\n        db.close()\r\n\r\n@router.get(\"/api/users\", response_model=FetchAllUsersResponse)\r\nasync def get_all_users(db: Session = Depends(get_db)):\r\n    all_users = db.query(db_User).all()\r\n\r\n    return FetchAllUsersResponse(\r\n        status=UserStatus.ok,\r\n        data=[\r\n            User(user_id=user.user_id, name=user.name)\r\n            for user in all_users\r\n        ],\r\n    )\r\n\r\napp.include_router(\r\n    router, responses={404: {\"description\": \"Not found\"}}\r\n)\r\n```\r\n\r\nTest result:\r\n\r\n```\r\ntests/test_user.py:21: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n    @temp_db\r\n    def test_fetch_all_users():\r\n        response = client.get(\"/api/users\")\r\n        assert response.status_code == 200\r\n>       assert len(response.json()[\"data\"]) == 0\r\nE       assert 23 == 0\r\nE         +23\r\nE         -0\r\n\r\ntests/test_user.py:35: AssertionError\r\n```",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2301/comments",
    "author": "koralle",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2020-11-06T06:24:47Z",
        "body": "I can't see any glaring issues in your code - when you run it in a debugger, does override_get_db get run?"
      },
      {
        "user": "koralle",
        "created_at": "2020-11-06T12:44:53Z",
        "body": "@Mause \r\n\r\n> I can't see any glaring issues in your code - when you run it in a debugger, does override_get_db get run?\r\n\r\n**No.** \r\nTo support this, I added `import pdb; pdb.set_trace()` in **`override_get_db()`**.\r\nWhen I executed `pytest`, **I could not start `pdb`.**\r\n\r\n```python\r\ndef override_get_db():\r\n+   import pdb; pdb.set_trace()\r\n    try:\r\n        db = SessionLocal()\r\n        yield db\r\n    finally:\r\n        db.close()\r\n```\r\n\r\nNext, I added the same statements in **original dependency, `get_db()`** instead of `override_get_db()`.\r\nWhen I executed `pytest`, **`pdb` was started.**\r\n\r\n```python\r\ndef get_db():\r\n+   import pdb; pdb.set_trace()\r\n    try:\r\n        db = SessionLocal()\r\n        yield db\r\n    finally:\r\n        db.close()\r\n```\r\n \r\n \r\nAnd, I confirmed that **the SQLite3 DB for testing was created as expected.**\r\nI can't understand why app dependency, `get_db()` override failes...\r\n\r\n```python\r\n# conftest.py\r\nimport pytest\r\nfrom sqlalchemy import create_engine, Column, Integer, String\r\nfrom sqlalchemy.orm import sessionmaker\r\nfrom sqlalchemy_utils import database_exists, drop_database\r\nfrom src.app.dependencies.database import Base\r\n\r\nclass User(Base):\r\n     __tablename__ = \"User\"\r\n     id = Column(\"id\", Integer, primary_key=True, autoincrement=True)\r\n     name = Column(\"name\", String)\r\n\r\n@pytest.fixture(scope=\"function\")\r\ndef SessionLocal():\r\n    # settings of test database\r\n    TEST_SQLALCHEMY_DATABASE_URL = \"sqlite:///./test_temp.db\"\r\n    engine = create_engine(\r\n        TEST_SQLALCHEMY_DATABASE_URL, connect_args={\"check_same_thread\": False}\r\n    )\r\n\r\n    assert not database_exists(\r\n        TEST_SQLALCHEMY_DATABASE_URL\r\n    ), \"Test database already exists. Aborting tests.\"\r\n\r\n    Base.metadata.create_all(engine)\r\n    SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\r\n\r\n+   db = SessionLocal()\r\n+   records = db.query(User).all()\r\n+   assert len(records) == 0 # PASSED. (I only created Table 'User'.)\r\n\r\n    yield SessionLocal\r\n\r\n    drop_database(TEST_SQLALCHEMY_DATABASE_URL)\r\n```"
      },
      {
        "user": "Mause",
        "created_at": "2020-11-06T13:33:40Z",
        "body": "Are you able to provide a small reproduction of the issue I can use to debug and help?"
      },
      {
        "user": "koralle",
        "created_at": "2020-11-15T11:41:20Z",
        "body": "@Mause \r\n\r\nSorry for the delay in contacting you.\r\nAfter reviewing the project structure from the beginning while creating a small reproduction, \r\nthe problem was solved.\r\nI still don't know what the root cause is, but I can now run the tests with a clean SQLite3 DB.\r\n\r\nThank you!!\r\n"
      },
      {
        "user": "Mause",
        "created_at": "2020-11-16T00:55:31Z",
        "body": "If your problem is solved, can you please close this issue?"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-10T14:50:35Z",
        "body": "Thanks for the help here @Mause ! 👏  🙇 \r\n\r\nThanks for reporting back and closing the issue @koralle  👍\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2294,
    "title": "How to access user credentials send through ajax call with OAuth2PasswordRequestForm",
    "created_at": "2020-11-04T09:34:00Z",
    "closed_at": "2023-02-28T00:41:23Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2294",
    "body": "Hi,\r\n\r\nI am creating a simple login form on the frontend and sending the username and password to my endpoint with ajax call like this:\r\n\r\n**Ajax call to endpoint:**\r\n```\r\n$.ajax({\r\n       type: 'POST',\r\n       url: '/api/token',\r\n       contentType: \"application/json\",\r\n       dataType: \"json\",\r\n       data: JSON.stringify( {\"username\": $(\"#username\").val(), \"password\": $(\"#password\").val()})\r\n});\r\n```\r\non the backend I want to receive the credentials and generate a token after successfully login the user like this:\r\n\r\n**My endpoint**\r\n\r\n```\r\n@app.post(\"/api/token\")\r\nasync def login(response: Response, credentials: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db)):\r\n    user = views.authenticate(db, credentials.username, credentials.password)\r\n    if not user:\r\n        raise HTTPException(status_code=400, detail=\"Incorrect username or password\")\r\n    access_token = views.gen_token(user.username)\r\n    response.set_cookie(key=\"access_token\", value=f\"Bearer {access_token}\", httponly=True)\r\n    return\r\n```\r\n\r\nwith the above code I get error:  `422 Unprocessable Entity` so I replaced  `OAuth2PasswordRequestForm` with my custom pydantic model:\r\n\r\n**Login validator:**\r\n\r\n```\r\nclass LoginValidator(BaseModel):\r\n    username: str\r\n    password: str\r\n```\r\n\r\nNow it works but then this line: `response.set_cookie(key=\"access_token\", value=f\"Bearer {access_token}\", httponly=True)` does not set the cookie and hence the user cannot be logged in. \r\n\r\n**Edit:**\r\n\r\nOkay I saw this in docs:\r\n\r\n> The spec also states that the username and password must be sent as form data (so, no JSON here).\r\n\r\nso I modified ajax call to this:\r\n\r\n```\r\n$.ajax({\r\n       type: 'POST',\r\n       url: '/api/token',\r\n       data:{\"username\": $(\"#username\").val(), \"password\": $(\"#password\").val()}\r\n});\r\n```\r\n\r\nOkay now I don't get error by the cookie is still not set.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2294/comments",
    "author": "Ahtii",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2020-11-04T09:56:50Z",
        "body": "Have you tried returning the response?"
      },
      {
        "user": "Ahtii",
        "created_at": "2020-11-04T10:04:48Z",
        "body": "you mean returning the `response` variable after setting the cookie ? yes I get a `keyError: None` also I tried test my endpoint with swagger UI and it works there I can see the cookie being set."
      },
      {
        "user": "Ahtii",
        "created_at": "2020-11-04T10:30:11Z",
        "body": "@Mause I get the following error when returning response:\r\n\r\n```\r\n--- Logging error ---\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.8/logging/__init__.py\", line 1081, in emit\r\n    msg = self.format(record)\r\n  File \"/usr/lib/python3.8/logging/__init__.py\", line 925, in format\r\n    return fmt.format(record)\r\n  File \"/usr/lib/python3.8/logging/__init__.py\", line 664, in format\r\n    record.message = record.getMessage()\r\n  File \"/usr/lib/python3.8/logging/__init__.py\", line 369, in getMessage\r\n    msg = msg % self.args\r\nTypeError: %d format: a number is required, not NoneType\r\nCall stack:\r\n  File \"<string>\", line 1, in <module>\r\n  File \"/usr/lib/python3.8/multiprocessing/spawn.py\", line 116, in spawn_main\r\n    exitcode = _main(fd, parent_sentinel)\r\n  File \"/usr/lib/python3.8/multiprocessing/spawn.py\", line 129, in _main\r\n    return self._bootstrap(parent_sentinel)\r\n  File \"/usr/lib/python3.8/multiprocessing/process.py\", line 315, in _bootstrap\r\n    self.run()\r\n  File \"/usr/lib/python3.8/multiprocessing/process.py\", line 108, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/uvicorn/subprocess.py\", line 61, in subprocess_started\r\n    target(sockets=sockets)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/uvicorn/main.py\", line 419, in run\r\n    loop.run_until_complete(self.serve(sockets=sockets))\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 391, in run_asgi\r\n    result = await app(self.scope, self.receive, self.send)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/uvicorn/middleware/proxy_headers.py\", line 45, in __call__\r\n    return await self.app(scope, receive, send)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/fastapi/applications.py\", line 179, in __call__\r\n    await super().__call__(scope, receive, send)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/starlette/applications.py\", line 111, in __call__\r\n    await self.middleware_stack(scope, receive, send)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/starlette/middleware/errors.py\", line 159, in __call__\r\n    await self.app(scope, receive, _send)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/starlette/exceptions.py\", line 71, in __call__\r\n    await self.app(scope, receive, sender)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/starlette/routing.py\", line 566, in __call__\r\n    await route.handle(scope, receive, send)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/starlette/routing.py\", line 227, in handle\r\n    await self.app(scope, receive, send)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/starlette/routing.py\", line 44, in app\r\n    await response(scope, receive, send)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/starlette/responses.py\", line 132, in __call__\r\n    await send(\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/starlette/exceptions.py\", line 68, in sender\r\n    await send(message)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/starlette/middleware/errors.py\", line 156, in _send\r\n    await send(message)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 453, in send\r\n    self.access_logger.info(\r\nMessage: '%s - \"%s %s HTTP/%s\" %d'\r\nArguments: ('127.0.0.1:37840', 'POST', '/api/token', '1.1', None)\r\nERROR:    Exception in ASGI application\r\nTraceback (most recent call last):\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 391, in run_asgi\r\n    result = await app(self.scope, self.receive, self.send)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/uvicorn/middleware/proxy_headers.py\", line 45, in __call__\r\n    return await self.app(scope, receive, send)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/fastapi/applications.py\", line 179, in __call__\r\n    await super().__call__(scope, receive, send)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/starlette/applications.py\", line 111, in __call__\r\n    await self.middleware_stack(scope, receive, send)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/starlette/middleware/errors.py\", line 181, in __call__\r\n    raise exc from None\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/starlette/middleware/errors.py\", line 159, in __call__\r\n    await self.app(scope, receive, _send)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/starlette/exceptions.py\", line 82, in __call__\r\n    raise exc from None\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/starlette/exceptions.py\", line 71, in __call__\r\n    await self.app(scope, receive, sender)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/starlette/routing.py\", line 566, in __call__\r\n    await route.handle(scope, receive, send)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/starlette/routing.py\", line 227, in handle\r\n    await self.app(scope, receive, send)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/starlette/routing.py\", line 44, in app\r\n    await response(scope, receive, send)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/starlette/responses.py\", line 132, in __call__\r\n    await send(\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/starlette/exceptions.py\", line 68, in sender\r\n    await send(message)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/starlette/middleware/errors.py\", line 156, in _send\r\n    await send(message)\r\n  File \"/home/ahtisham/ENVS/ENV_COLLAB/lib/python3.8/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 464, in send\r\n    content = [STATUS_LINE[status_code]]\r\nKeyError: None\r\n\r\n```"
      },
      {
        "user": "Mause",
        "created_at": "2020-11-04T10:42:40Z",
        "body": "Sounds like you need to set a status code on the response.\n\nBut if it's working in the swagger ui there might not be an issue with the API?"
      },
      {
        "user": "Ahtii",
        "created_at": "2020-11-04T11:07:12Z",
        "body": "@Mause  okay I fixed it by setting `response.status_code = 200` what is the difference between the two:\r\n\r\n```\r\nasync def login(response: Response, ...):\r\n     response.set_cookie(...)\r\n     return response\r\n```\r\n\r\nand this\r\n\r\n```\r\nasync def login(...):\r\n     response = Response()\r\n     response.set_cookie(...)\r\n     return response\r\n```\r\n\r\nwith the later code It works without setting the `status_code`.\r\n\r\nalso one thing I noticed In swagger UI after I login I can see the cookie being set in the browser but in my custom UI it doesn't show the cookie being set only until I move to some other endpoint."
      },
      {
        "user": "Mause",
        "created_at": "2020-11-06T12:04:29Z",
        "body": "What do you mean by \"showing the cookie being set\"?"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-09T19:24:47Z",
        "body": "Thanks for the help @Mause! 🍰 \r\n\r\n@Ahtii I imagine you solved your use case, I'm gonna close this issue. If you still have problems please create a new issue following all the template and filling a simple self contained example that reproduces your use case.\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2293,
    "title": "ValueError: [TypeError(\"'numpy.float32' object is not iterable\",), TypeError('vars() argument must have __dict__ attribute',)]",
    "created_at": "2020-11-04T08:26:16Z",
    "closed_at": "2023-02-28T17:13:49Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2293",
    "body": "There is \"'numpy.float32'   in the return value, How to deal with this",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2293/comments",
    "author": "yuanjie-ai",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2020-11-04T08:33:49Z",
        "body": "Return another type instead? Numpy types aren't supported by json"
      },
      {
        "user": "Lord-V15",
        "created_at": "2021-04-06T08:10:18Z",
        "body": "You should simply change the return type.\r\nFor example, if you were returning a np.ndarray type object, you can convert it using **tolist()**\r\nEXAMPLE : \r\n```\r\nimport numpy as np\r\n\r\narr = np.array([11, 21, 19])\r\nprint(f'NumPy Array: {arr}')\r\nprint(type(arr))\r\n\r\nlist1 = arr.tolist()\r\nprint(f'List: {list1}')\r\nprint(type(list1))\r\n```\r\nThis will remove all the numpy data types from the list. "
      },
      {
        "user": "ajascha",
        "created_at": "2022-02-25T16:08:12Z",
        "body": "@Lord-V15 already gave the correct solution but I didn't understand it the first few times reading through it so here's a longer explanation.\r\n\r\nThis will not work since the return type isn't supported:\r\n\r\n```\r\nimport numpy as np\r\n\r\n@app.get(\"/\")\r\nasync def root():\r\n    arr = np.array([11, 21, 19])\r\n    return {\"array\": arr}\r\n```\r\n\r\nThis will work as lists are supported:\r\n\r\n```\r\nimport numpy as np\r\n\r\n@app.get(\"/\")\r\nasync def root():\r\n    arr = np.array([11, 21, 19])\r\n    return {\"array\": arr.tolist()}\r\n```\r\n\r\nNote that this error will also occur if you are not using `numpy` explicitly but another library that is based on it, such as `pandas`. "
      }
    ]
  },
  {
    "number": 2292,
    "title": "Is There An Order To The Exception Handler?",
    "created_at": "2020-11-03T23:05:50Z",
    "closed_at": "2023-02-28T00:41:21Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2292",
    "body": "### Example\r\nReference Example:\r\n```Python\r\nfrom fastapi import FastAPI\r\n\r\n\r\nclass BaseException(Exception):\r\n    pass\r\n\r\nclass ChildException(BaseException):\r\n    pass\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.exception_handler(ChildException)\r\nasync def ChildExceptionHandler(request, exc):\r\n    return PlainTextResponse(\"Child exception occurred!\", status_code=500)\r\n\r\n@app.exception_handler(BaseException)\r\nasync def BaseExceptionHandler(request, exc):\r\n    return PlainTextResponse(\"Base exception occurred!\", status_code=500)\r\n\r\n\r\n@app.get(\"/\")\r\ndef read_root():\r\n    raise ChildException()\r\n```\r\n\r\nMy Use Case Example:\r\n```Python\r\nfrom fastapi import FastAPI\r\n\r\nclass CustomException(Exception):\r\n    pass\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.exception_handler(CustomException)\r\nasync def CustomExceptionHandler(request, exc):\r\n    return PlainTextResponse(\"Custom exception occurred!\", status_code=500)\r\n\r\n@app.exception_handler(Exception)\r\nasync def GenericExceptionHandler(request, exc):\r\n    return PlainTextResponse(\"Generic exception occurred!\", status_code=500)\r\n\r\n\r\n@app.get(\"/\")\r\ndef read_root():\r\n    raise CustomException()    # Should always return \"Custom exception occurred!\"\r\n```\r\n### Description\r\n\r\nWhile adding an exception handler, if I want to catch for both a child exception and a base exception, will the exception be caught based on what was added to the exception handler first? In my example above, would I always get the `\"Child exception occurred!\"` response whereas if I reversed the order where I added the `BaseExceptionHandler()` first would I always be getting `\"Base exception occurred!\"`?\r\n\r\nMy use case for this is I wanted to create custom exceptions and handle them to return custom responses but I also wanted to create a generic exception handler to catch any other exceptions from other libraries and log them as well.\r\n\r\nI think this should be the case as that would behave similarly to a `try: ... except: ...` block where it would be caught by the first relevant exception type but I wanted to confirm that this would be the case.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2292/comments",
    "author": "DarwinLYang",
    "comments": [
      {
        "user": "DarwinLYang",
        "created_at": "2020-11-04T19:44:26Z",
        "body": "So after extensive testing it seems that the exception handler is smart enough to automatically go up the hierarchy for the exception until it finds a handler that suits its needs."
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-09T19:13:57Z",
        "body": "Thanks for coming back to close the issue @DarwinLYang! ☕ \r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2288,
    "title": "Redirecting to endpoint with data",
    "created_at": "2020-11-03T08:08:20Z",
    "closed_at": "2023-02-28T00:41:10Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2288",
    "body": "Hi,\r\n\r\nI have two endpoint `/api/register` and `/api/sociallogin`.\r\n\r\n**register endpoint:**\r\n\r\n```\r\n@app.post(\"/api/register/\")\r\nasync def register(user: validators.RegisterValidator, db: Session = Depends(get_db)):\r\n    return views.register(db, user)\r\n```\r\n\r\n**social login endpoint:**\r\n\r\n```\r\n@app.post(\"/api/sociallogin\", include_in_schema=False)\r\ndef social_login(request: Request, data: validators.SocialLoginValidator):\r\n    data = views.social_login(request, data)\r\n    response = RedirectResponse(url=\"/api/register\", data)   # how to redirect to regsiter endpoint with user data ?\r\n    return response\r\n```\r\n\r\nI want to redirect to register endpoint from sociallogin endpoint with the user data how would I do it ?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2288/comments",
    "author": "Ahtii",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2020-11-03T08:16:17Z",
        "body": "Have you tried using query parameters?"
      },
      {
        "user": "Ahtii",
        "created_at": "2020-11-03T08:35:14Z",
        "body": "@Mause No can i use it without having to change the register function parameters ? I want that first parameter (`user`) to be replaced with the `data` of `social_login`"
      },
      {
        "user": "Mause",
        "created_at": "2020-11-03T08:39:17Z",
        "body": "You are passing new data, you have to change something, no? "
      },
      {
        "user": "Mause",
        "created_at": "2020-11-03T08:39:50Z",
        "body": "You could also store it in a cookie, or in a database - your requirements are very vague"
      },
      {
        "user": "Ahtii",
        "created_at": "2020-11-03T08:45:50Z",
        "body": "I am just trying to register/save the user after authenticating him/her from a social provider. I am reusing the same endpoint how is that vague ? can you please elaborate which part makes it vague ? "
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-09T19:02:19Z",
        "body": "Thanks for the help @Mause! 🍰 \r\n\r\nI imagine you solved your need, thanks for coming back to close the issue @Ahtii ☕ \r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2287,
    "title": " Provide complete samples, not code snippets?",
    "created_at": "2020-11-03T06:31:25Z",
    "closed_at": "2023-02-28T00:41:07Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2287",
    "body": "\r\n\r\nProvide complete samples, not code snippets",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2287/comments",
    "author": "zhiming429438709",
    "comments": [
      {
        "user": "Mause",
        "created_at": "2020-11-03T06:45:07Z",
        "body": "Please provide more details, this is not a question."
      },
      {
        "user": "ycd",
        "created_at": "2020-11-03T06:48:36Z",
        "body": "What do you mean by complete sample not snippet, what is the difference between them?"
      },
      {
        "user": "Kludex",
        "created_at": "2020-11-03T11:25:44Z",
        "body": "If you're talking about the snippets in the documentation, you can find the full examples in the `docs_src` in this repository."
      },
      {
        "user": "tiangolo",
        "created_at": "2022-10-21T11:18:17Z",
        "body": "Thanks for the help here @Mause, @ycd, @Kludex!\r\n\r\n@zhiming429438709 as the question is not complete or clear, I'm gonna close it. But if you still have questions, please create a new issue following the template.\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2283,
    "title": "Mutliple OpenAPI Spec Endpoints on One App",
    "created_at": "2020-11-02T09:01:49Z",
    "closed_at": "2023-02-28T00:40:53Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2283",
    "body": "I am working on an application that has quite a large number of endpoints. I have been using tags to group sets of API however the APIs themselves are quite different so I was wondering if there is a way of hosting multiple OpenAPI endoints. \r\n\r\nE.g. \r\n\r\narea1 -> /area1/swagger\r\narea2 -> /area2/swagger",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2283/comments",
    "author": "cryptoroo",
    "comments": [
      {
        "user": "ArcLightSlavik",
        "created_at": "2020-11-02T10:13:24Z",
        "body": "**--- Not an actual solution, just some opinion / findings into how I feel it should be possible ---**\r\n\r\nI think this would work very well with `APIRouter`.\r\nIf you try right now you get a `A response class is needed to generate OpenAPI` which comes from line 161 in fastapi.openapi/utils.py:\r\n\r\n```\r\n161:    assert route.response_class, \"A response class is needed to generate OpenAPI\"\r\n162:    route_response_media_type: Optional[str] = route.response_class.media_type\r\n```\r\nRemoving the `assert` and replacing route_response_media_type with `application/json` actually makes it runnable, and It's actually not that far from being correct?\r\n\r\nI've tried it with `test_additional_response_extra.py` test: \r\n\r\n```\r\nfrom fastapi import APIRouter, FastAPI\r\nfrom fastapi.testclient import TestClient\r\nfrom fastapi.openapi.utils import get_openapi\r\n\r\napp = FastAPI()\r\nrouter = APIRouter()\r\nsub_router = APIRouter()\r\n\r\n\r\ndef custom_openapi():\r\n    if app.openapi_schema:\r\n        return app.openapi_schema\r\n    custom_open_schema = get_openapi(\r\n        title='FastAPI',\r\n        version='0.1.0',\r\n        routes=router.routes,\r\n    )\r\n    app.openapi_schema = custom_open_schema\r\n    return app.openapi_schema\r\n\r\n\r\napp.openapi = custom_openapi\r\n\r\n\r\n@app.get(\"/\")\r\ndef read_another_item():\r\n    return {\"lol\": \"yo\"}\r\n\r\n\r\n@sub_router.get(\"/\")\r\ndef read_item():\r\n    return {\"id\": \"foo\"}\r\n\r\n\r\nrouter.include_router(sub_router, prefix=\"/items\")\r\n\r\napp.include_router(router)\r\n\r\n\r\nopenapi_schema = {\r\n    'openapi': '3.0.2',\r\n    'info': {'title': 'FastAPI', 'version': '0.1.0'},\r\n    'paths': {\r\n        '/items/': {\r\n            'get': {\r\n                'responses': {\r\n                    '200': {\r\n                        'description': 'Successful Response',\r\n                        'content': {'application/json': {'schema': {'type': 'string'}}}\r\n                    }\r\n                },\r\n                'summary': 'Read Item',\r\n                'operationId': 'read_item_items__get',\r\n            }\r\n        }\r\n    },\r\n}\r\n\r\nclient = TestClient(app)\r\n\r\n\r\ndef test_openapi_schema():\r\n    response = client.get(\"/openapi.json\")\r\n    assert response.status_code == 200, response.text\r\n    assert response.json() == openapi_schema\r\n\r\n\r\ndef test_path_operation():\r\n    response = client.get(\"/items/\")\r\n    assert response.status_code == 200, response.text\r\n    assert response.json() == {\"id\": \"foo\"}\r\n```\r\n\r\nThe only difference is the inclusion of `{'type': 'string'}` inside `schema`, this doesn't happen when running under `app.routes`.\r\n\r\nObviously the example isn't complex, but I don't see a reason not to have this."
      },
      {
        "user": "cryptoroo",
        "created_at": "2020-11-03T12:24:49Z",
        "body": "thanks for this. Will look later on in the week and let you know how i go"
      },
      {
        "user": "luebke-dev",
        "created_at": "2020-11-03T13:07:46Z",
        "body": "you can create two FastAPI apps and mount them in starlette\r\n```\r\nfrom fastapi import FastAPI\r\nfrom starlette.applications import Starlette\r\nfrom starlette.routing import Mount\r\n\r\napi1 = FastAPI(title=\"API1\")\r\napi2 = FastAPI(title=\"API2\")\r\n\r\n@api1.get(\"/test\")\r\ndef test_api1():\r\n    return \"API1\"\r\n\r\n@api2.get(\"/test\")\r\ndef test_api2():\r\n    return \"API2\"\r\n\r\napp = Starlette(routes=[\r\n    Mount(\"/api1\", api1),\r\n    Mount(\"/api2\", api2)\r\n])\r\n```"
      },
      {
        "user": "cryptoroo",
        "created_at": "2020-11-03T22:26:03Z",
        "body": "@ArcLightSlavik -- thanks for looking in to this 👍 \r\n@SebastianLuebke thanks for your solution. It worked really well 👍 "
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-09T19:07:02Z",
        "body": "Thanks for the help here @SebastianLuebke and @ArcLightSlavik! 🍰 \r\n\r\nAnd thanks for coming back to close the issue @cryptoroo ☕ \r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2281,
    "title": "value_error.jsondecode  Invalid control character at when posting multi line text in FastAPI",
    "created_at": "2020-11-01T11:54:37Z",
    "closed_at": "2023-02-28T00:40:49Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2281",
    "body": "hello\r\nthis is one of my endpoints which is for posting(creating) new document\r\n```\r\n@app.post(\"/documents\", response_model=Doc, status_code=status.HTTP_201_CREATED, tags=[\"Web Panel\"])\r\ndef create_doc(doc: DocDef , token: str = Depends(verified_admin), db: Session = Depends(get_db)):\r\n    pass\r\n    `print(\"hi\")`\r\n```\r\nmy schemas are:\r\n```\r\nclass DocDef(BaseModel):\r\n    name: str\r\n    doc: str\r\n\r\n\r\nclass Doc(DocDef):\r\n    id: int\r\n    \r\n    class Config:\r\n        orm_mode = True\r\n```\r\nbut when I want to test a multi line text document I receive an error \r\nrequest body :\r\n```\r\n{\r\n  \"name\": \"string\",\r\n  \"doc\": \" this is test.\r\nthis is test too.\"\r\n}\r\n```\r\nresponse body:\r\n```\r\n{\r\n  \"detail\": [\r\n    {\r\n      \"loc\": [\r\n        \"body\",\r\n        46\r\n      ],\r\n      \"msg\": \"Invalid control character at: line 3 column 25 (char 46)\",\r\n      \"type\": \"value_error.jsondecode\",\r\n      \"ctx\": {\r\n        \"msg\": \"Invalid control character at\",\r\n        \"doc\": \"{\\n  \\\"name\\\": \\\"string\\\",\\n  \\\"doc\\\": \\\" this is test.\\nthis is test too.\\\"\\n}\",\r\n        \"pos\": 46,\r\n        \"lineno\": 3,\r\n        \"colno\": 25\r\n      }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\n\r\nplease help how can I fix this \r\nregards\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2281/comments",
    "author": "MohashN",
    "comments": [
      {
        "user": "ycd",
        "created_at": "2020-11-01T14:03:39Z",
        "body": "Looks very similar to #1982, as @ArcLightSlavik said \r\n\r\n> In JSON a literal line break is not allowed inside a string, it needs to be replaced by \\n\r\n\r\nSo when you want to write a multiline text just go like this\r\n\r\n```python\r\n{\r\n  \"name\": \"string\",\r\n  \"doc\": \" this is test.\\nthis is test too.\"\r\n}\r\n"
      },
      {
        "user": "MohashN",
        "created_at": "2020-11-01T16:01:53Z",
        "body": "Thanks for reply\r\nSo if I would like to post raw text, Is this only solution?"
      },
      {
        "user": "ycd",
        "created_at": "2020-11-01T16:06:51Z",
        "body": "Yes, JSON doesn't allow breaking lines for readability. "
      },
      {
        "user": "MohashN",
        "created_at": "2020-11-01T16:30:02Z",
        "body": "Thanks again "
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-09T18:57:40Z",
        "body": "Thanks for the help here @ycd! 🍰 \r\n\r\nAnd thanks for coming back to close the issue @MohashN ☕ \r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T00:31:26Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 2266,
    "title": "Not able to create exe file of my application using fastapi.",
    "created_at": "2020-10-30T05:59:42Z",
    "closed_at": "2023-02-28T00:40:24Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2266",
    "body": "I not able to create exe file of my application using fastapi from pyinstaller. I am getting following error,\r\n(venv) shivakumar@elmpc-271:~/ELNet8/be$ pyinstaller --onefile main.py \r\n195 INFO: PyInstaller: 4.0\r\n196 INFO: Python: 3.8.5\r\n275 INFO: Platform: Linux-5.4.0-52-generic-x86_64-with-glibc2.29\r\n276 INFO: wrote /home/shivakumar/ELNet8/be/main.spec\r\n281 INFO: UPX is not available.\r\n284 INFO: Extending PYTHONPATH with paths\r\n['/home/shivakumar/ELNet8/be', '/home/shivakumar/ELNet8/be']\r\n441 INFO: checking Analysis\r\n482 INFO: Building because /home/shivakumar/ELNet8/be/main.py changed\r\n482 INFO: Initializing module dependency graph...\r\n508 INFO: Caching module graph hooks...\r\n542 INFO: Analyzing base_library.zip ...\r\n2663 INFO: Processing pre-find module path hook distutils from '/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/hooks/pre_find_module_path/hook-distutils.py'.\r\n2680 INFO: distutils: retargeting to non-venv dir '/usr/lib/python3.8'\r\n4668 INFO: Caching module dependency graph...\r\n4739 INFO: running Analysis Analysis-00.toc\r\n4799 INFO: Analyzing /home/shivakumar/ELNet8/be/main.py\r\nTraceback (most recent call last):\r\n  File \"/home/shivakumar/ELNet8/be/venv/bin/pyinstaller\", line 8, in <module>\r\n    sys.exit(run())\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/__main__.py\", line 114, in run\r\n    run_build(pyi_config, spec_file, **vars(args))\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/__main__.py\", line 65, in run_build\r\n    PyInstaller.building.build_main.main(pyi_config, spec_file, **kwargs)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/building/build_main.py\", line 720, in main\r\n    build(specfile, kw.get('distpath'), kw.get('workpath'), kw.get('clean_build'))\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/building/build_main.py\", line 667, in build\r\n    exec(code, spec_namespace)\r\n  File \"/home/shivakumar/ELNet8/be/main.spec\", line 6, in <module>\r\n    a = Analysis(['main.py'],\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/building/build_main.py\", line 242, in __init__\r\n    self.__postinit__()\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/building/datastruct.py\", line 160, in __postinit__\r\n    self.assemble()\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/building/build_main.py\", line 413, in assemble\r\n    priority_scripts.append(self.graph.run_script(script))\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/depend/analysis.py\", line 301, in run_script\r\n    self._top_script_node = super(PyiModuleGraph, self).run_script(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 1403, in run_script\r\n    self._scan_code(m, co, co_ast)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2638, in _scan_code\r\n    self._process_imports(module)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2837, in _process_imports\r\n    target_module = self._safe_import_hook(*import_info, **kwargs)[0]\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2291, in _safe_import_hook\r\n    target_modules = self.import_hook(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 1475, in import_hook\r\n    target_package, target_module_partname = self._find_head_package(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 1632, in _find_head_package\r\n    target_package = self._safe_import_module(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/depend/analysis.py\", line 439, in _safe_import_module\r\n    return super(PyiModuleGraph, self)._safe_import_module(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2049, in _safe_import_module\r\n    module = self._load_module(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2154, in _load_module\r\n    self._scan_code(m, co, co_ast)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2638, in _scan_code\r\n    self._process_imports(module)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2837, in _process_imports\r\n    target_module = self._safe_import_hook(*import_info, **kwargs)[0]\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2291, in _safe_import_hook\r\n    target_modules = self.import_hook(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 1475, in import_hook\r\n    target_package, target_module_partname = self._find_head_package(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 1632, in _find_head_package\r\n    target_package = self._safe_import_module(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/depend/analysis.py\", line 439, in _safe_import_module\r\n    return super(PyiModuleGraph, self)._safe_import_module(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2049, in _safe_import_module\r\n    module = self._load_module(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2154, in _load_module\r\n    self._scan_code(m, co, co_ast)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2638, in _scan_code\r\n    self._process_imports(module)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2837, in _process_imports\r\n    target_module = self._safe_import_hook(*import_info, **kwargs)[0]\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2499, in _safe_import_hook\r\n    self.import_hook(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 1492, in import_hook\r\n    for target_submodule in self._import_importable_package_submodules(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 1786, in _import_importable_package_submodules\r\n    submodule = self._safe_import_module(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/depend/analysis.py\", line 439, in _safe_import_module\r\n    return super(PyiModuleGraph, self)._safe_import_module(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2049, in _safe_import_module\r\n    module = self._load_module(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2154, in _load_module\r\n    self._scan_code(m, co, co_ast)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2638, in _scan_code\r\n    self._process_imports(module)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2837, in _process_imports\r\n    target_module = self._safe_import_hook(*import_info, **kwargs)[0]\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2499, in _safe_import_hook\r\n    self.import_hook(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 1492, in import_hook\r\n    for target_submodule in self._import_importable_package_submodules(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 1786, in _import_importable_package_submodules\r\n    submodule = self._safe_import_module(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/depend/analysis.py\", line 439, in _safe_import_module\r\n    return super(PyiModuleGraph, self)._safe_import_module(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2049, in _safe_import_module\r\n    module = self._load_module(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2154, in _load_module\r\n    self._scan_code(m, co, co_ast)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2638, in _scan_code\r\n    self._process_imports(module)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2837, in _process_imports\r\n    target_module = self._safe_import_hook(*import_info, **kwargs)[0]\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2291, in _safe_import_hook\r\n    target_modules = self.import_hook(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 1475, in import_hook\r\n    target_package, target_module_partname = self._find_head_package(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 1632, in _find_head_package\r\n    target_package = self._safe_import_module(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/depend/analysis.py\", line 439, in _safe_import_module\r\n    return super(PyiModuleGraph, self)._safe_import_module(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2049, in _safe_import_module\r\n    module = self._load_module(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2907, in _load_package\r\n    self._load_module(fqname, fp, buf, stuff)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2088, in _load_module\r\n    m = self._load_package(fqname, pathname, packagepath)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 2880, in _load_package\r\n    ns_pkgpath = _namespace_package_path(fqname, pkgpath or [], self.path)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/PyInstaller/lib/modulegraph/modulegraph.py\", line 164, in _namespace_package_path\r\n    working_set = pkg_resources.WorkingSet(path)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/pkg_resources/__init__.py\", line 551, in __init__\r\n    self.add_entry(entry)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/pkg_resources/__init__.py\", line 607, in add_entry\r\n    for dist in find_distributions(entry, True):\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/pkg_resources/__init__.py\", line 2060, in find_on_path\r\n    for dist in factory(fullpath):\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/pkg_resources/__init__.py\", line 2125, in distributions_from_metadata\r\n    yield Distribution.from_location(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/pkg_resources/__init__.py\", line 2585, in from_location\r\n    return cls(\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/pkg_resources/__init__.py\", line 2985, in _reload_version\r\n    md_version = self._get_version()\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/pkg_resources/__init__.py\", line 2767, in _get_version\r\n    version = _version_from_file(lines)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/pkg_resources/__init__.py\", line 2551, in _version_from_file\r\n    line = next(iter(version_lines), '')\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/pkg_resources/__init__.py\", line 2762, in _get_metadata\r\n    for line in self.get_metadata_lines(name):\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/pkg_resources/__init__.py\", line 1415, in get_metadata_lines\r\n    return yield_lines(self.get_metadata(name))\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/pkg_resources/__init__.py\", line 1405, in get_metadata\r\n    value = self._get(path)\r\n  File \"/home/shivakumar/ELNet8/be/venv/lib/python3.8/site-packages/pkg_resources/__init__.py\", line 1610, in _get\r\n    return stream.read()\r\nRecursionError: maximum recursion depth exceeded while calling a Python object\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2266/comments",
    "author": "ShivaKumar24051993",
    "comments": [
      {
        "user": "ArcLightSlavik",
        "created_at": "2020-10-30T06:47:37Z",
        "body": "Can you show your main.py?"
      },
      {
        "user": "ShivaKumar24051993",
        "created_at": "2020-10-30T06:50:55Z",
        "body": "import uvicorn\r\nfrom ELNet8BE.services.services import *\r\n\r\n\r\nif __name__ == '__main__':\r\n    uvicorn.run(app, host=\"127.0.0.1\", port=5000, log_level=\"info\")\r\n"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-09T18:30:16Z",
        "body": "Thanks for the help @ArcLightSlavik! 🍰 \r\n\r\nI imagine you solved your problem, thanks for coming back to close the issue @ShivaKumar24051993 \r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2262,
    "title": "Automatically adding query parameter to each route in OpenAPI specification",
    "created_at": "2020-10-29T11:20:10Z",
    "closed_at": "2023-02-28T00:40:14Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2262",
    "body": "### Example\r\n\r\nHere is a small example of my use case, there is a legacy reason why this situation has occurred. Basically we are moving something that used to be a query parameter in all of our routes in a service to being automatically supplied in the header by the reverse proxy in front of the service. All of our routes used to have defined the `team` Query parameter but now this will be no longer used as it will be supplied in the header, I need the middleware to temporarily accept the header and the query parameter as a value as not all services will be updated at once:\r\n\r\n```Python\r\nfrom typing import Optional\r\n\r\nfrom fastapi import FastAPI, APIRouter, Query, HTTPException\r\nfrom starlette.middleware.base import BaseHTTPMiddleware, RequestResponseEndpoint\r\nfrom starlette.requests import Request\r\nfrom starlette.types import ASGIApp\r\nfrom pydantic import BaseModel\r\nfrom uvicorn import run\r\n\r\nclass UserCreds(BaseModel):\r\n    team: Optional[str]\r\n\r\nclass MyAuthMiddleware(BaseHTTPMiddleware):\r\n    \"\"\"\r\n    Middleware to inject the attribute `creds` into the request state\r\n    \"\"\"\r\n\r\n    def __init__(self, app: ASGIApp):\r\n        super().__init__(app)\r\n\r\n    async def dispatch(self, request: Request, call_next: RequestResponseEndpoint):\r\n        query_param = request.query_params.get(\"team\")\r\n        header=request.headers.get(\"team\")\r\n        if query_param != header:\r\n            raise HTTPException(400, \"Query param and header don't align\")\r\n        request.state.creds = UserCreds(team=header)\r\n        response = await call_next(request)\r\n        return response\r\n\r\n\r\napp = FastAPI(title=\"Test App\")\r\napp.add_middleware(MyAuthMiddleware)\r\n\r\n\r\nrouter = APIRouter()\r\n\r\n@router.get(\"/items/\")\r\ndef get_items():\r\n    return \"Items\"\r\n\r\n# I'd like to not go through every route and keep this query parameter so it appears in OpenAPI docs\r\n# Because of the middleware the query parameter is always used\r\n@router.get(\"/things/\")\r\ndef get_things(team: Optional[str] = Query(None)):\r\n    return \"Things\"\r\n\r\napp.include_router(router)\r\n\r\nrun(app)\r\n```\r\n\r\n### Description\r\n\r\nEssentially what I am trying to do is make it so if a query parameter is used by the middleware then it should insert that query parameter into every route in the OpenAPI specification. I couldn't see anything in the docs that would achieve this. I know that even if I remove the query parameter in the route definition this code will still work but it would be nice if it appeared in the Swagger UI as well.\r\n\r\n### Environment\r\n\r\n* OS: Linux\r\n* FastAPI Version: 0.61.1\r\n* Python version: 3.8.5\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2262/comments",
    "author": "ccharlesgb",
    "comments": [
      {
        "user": "includeamin",
        "created_at": "2020-10-29T16:05:52Z",
        "body": "Hi, if I understand correctly you would like the `team` query to be applied to all routes on the `router` in the `Swagger UI`.\r\nwith dependencies on `include_router`, query appear on `Swagger UI`\r\n``` python\r\ndef get_team_query(team:str):\r\n   pass\r\n\r\n@router.get(\"/sample\" )\r\ndef sample_2(request: Request):\r\n    return request.query_params.get('team')\r\n\r\n@router.get(\"/item\" )\r\ndef items(request: Request):\r\n    return request.query_params.get('team')\r\n\r\n\r\n@router.get(\"/sample\")\r\ndef sample_1(request: Request):\r\n    return request.query_params.get('team')\r\n\r\napp.include_router(router,dependencies=[Depends(get_team_query)])\r\n\r\n```"
      },
      {
        "user": "ccharlesgb",
        "created_at": "2020-11-06T12:20:50Z",
        "body": "That will work for my use case yes! It would be interesting to be able to add OpenAPI parameters from middleware but that is maybe quite a niche feature."
      },
      {
        "user": "Mause",
        "created_at": "2020-12-19T04:06:04Z",
        "body": "If you problem is solved, can you please close this issue?"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-12-27T18:32:51Z",
        "body": "Thanks for the help here everyone! :clap: :bow: \r\n\r\nThanks for reporting back and closing the issue :+1:"
      }
    ]
  },
  {
    "number": 2250,
    "title": "Use `>=` instead of `==` for the black requierement in the dev-dependencies",
    "created_at": "2020-10-26T12:23:36Z",
    "closed_at": "2023-02-28T00:39:47Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2250",
    "body": "### What?\r\nThe title says it all. \r\n\r\n### Why?\r\nI'm using `fastapi[tests]` in my dev-dependencies, and would like to update to newer black versions as soon as they are released. Since fastapi uses `==` for black versions, that's not possible.\r\n\r\n### How?\r\nIt's very simple: #2249, I also included an update to the current 20.* version since it's been out for a while now, and ran it over `fastapi/`, `pending_tests/`, `scripts/`, and `tests/`.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2250/comments",
    "author": "a-recknagel",
    "comments": [
      {
        "user": "ArcLightSlavik",
        "created_at": "2020-10-27T03:52:02Z",
        "body": "`fastapi[test]` are meant for tests in the library itself. \r\nIf your making your own tests you need to use `fastapi[all]` which doesn't install black.\r\n"
      },
      {
        "user": "a-recknagel",
        "created_at": "2020-10-27T18:56:09Z",
        "body": "Ah, that solves it. Thanks for the info!"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-09T18:24:40Z",
        "body": "Thanks for the help @ArcLightSlavik! 🚀 \r\n\r\nAnd thanks for coming back to close the issue @a-recknagel 🍰 \r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T00:31:44Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 2223,
    "title": "How to declare Multiple type for request body?",
    "created_at": "2020-10-22T09:18:39Z",
    "closed_at": "2023-02-28T00:39:00Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2223",
    "body": "```\r\nclass A:\r\nclass B:\r\nclass C:\r\n\r\n@app.put(\"/test\")\r\nasync def test(item: OptionalA]):\r\n    return item\r\n```\r\n\r\nI want to allow class A,B,C for test path.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2223/comments",
    "author": "jet10000",
    "comments": [
      {
        "user": "ycd",
        "created_at": "2020-10-22T10:03:39Z",
        "body": "I did not understand the problem here, but as far as I understand from the title you want to do this.\r\n\r\n```python\r\nfrom fastapi import FastAPI, Body\r\nfrom typing import Union\r\nfrom pydantic import BaseModel\r\n\r\n\r\nclass User(BaseModel):\r\n    name: str\r\n\r\n\r\nclass Item(BaseModel):\r\n    size: int\r\n    price: float\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.post(\"/multi/\")\r\ndef process_things(body: Union[User, Item] = Body(..., example={\"Create your own schema.\": \"here\"})):\r\n    return body\r\n```\r\n\r\nThe reason that I used `Body(..., example=\"here\")` is #1083, this is not a bug in FastAPI but Swagger can not document Union models properly right now, so you should create your own example if needed.\r\n\r\n"
      },
      {
        "user": "jet10000",
        "created_at": "2020-10-22T10:59:35Z",
        "body": "Yes, Thanks"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-09T18:11:38Z",
        "body": "Thanks for the help @ycd! 🍰 \r\n\r\nAnd thanks @jet10000 for closing the issue\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2222,
    "title": "hope jsonable_encoder can parse numpy",
    "created_at": "2020-10-22T08:08:44Z",
    "closed_at": "2023-02-28T00:38:57Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2222",
    "body": "import numpy as np\r\nnumber = np.array([1, 2, 3, 4])\r\nnumber = jsonable_encoder(number)  # i hope jsonable_encoder can do, not  number.tolist()  or  int(np.int64(10)) \r\nresponse={'number':number}\r\nreturn response",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2222/comments",
    "author": "un-human",
    "comments": [
      {
        "user": "ycd",
        "created_at": "2020-10-22T11:47:23Z",
        "body": "I do not think we can implement this to FastAPI, Because our current encoder implementation does this.\r\n\r\n```python\r\nisinstance(obj, class)\r\n``` \r\n\r\nIf we are going to do that to `numpy.array`, which will look something like this.\r\n\r\n```python\r\nif isinstance(obj, np.array)\r\n```\r\n\r\nWe need to import the whole NumPy, which is very ineffective and unrelated imho,  because NumPy is quite a large library to adapt to a micro-framework like FastAPI, even if it was a small package i do not think this should be inside FastAPI.\r\n"
      },
      {
        "user": "un-human",
        "created_at": "2020-10-23T02:16:54Z",
        "body": "........................tks  ........................\r\n\r\nif  i get  a return result is big dict like:\r\nresult = {'a1':1,........, 'number':np.array([1, 2, 3, 4]), 'a50':50 }   # someone return \r\nand i need return to  fastapi Response\r\nif i Direct return this result  will be  error, so i hope   jsonable_encoder(result )  can do ,\r\nRather than always i do like:\r\nfor k in result:\r\n    if isinstance(result[k],np.array):\r\n          result[k] = result[k].tolist()\r\nthen\r\nreturn  result to fastapi  Response\r\n\r\n"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-09T18:14:35Z",
        "body": "Thanks for the help @ycd! 🚀 \r\n\r\nI imagine you solved your problem @stringk245, thanks for closing the issue!\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T00:32:01Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 2183,
    "title": "Function currying for Depends over class instances with __call__()",
    "created_at": "2020-10-16T07:03:26Z",
    "closed_at": "2023-02-28T00:38:00Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2183",
    "body": "### Description\r\n\r\nFunction currying is a rather common technique in functional programming. It can also be called local functions, or closures.\r\nA parent function takes an arbitrary number of arguments, and defines a function inside it using those arguments inside its processing. The generated function (closure), can then ask for different arguments to be executed.\r\nIn Python, it relies on the parent function having its own scope, and the nested function being able to access it.\r\n\r\nThis can be used to generate very flexible callable functions, to use as part of Depends().\r\nTo create flexible parametrized Depends callable, the documentation only provides examples of a full-blown class instances with requiring both `__init__` and  `__call__` implementations. While most people are probably used to init, `__call__(self)` for a class  is more likely to be a new concept.\r\nI feel like this distracts from more minimal implementations, that don't need OOP everything, especially when this is literally begging for functional style. \r\nSuch complex class + class instance implementation might be granted when it acts on a state it holds and need to mutate as part of its logic, but most cases should be fine with currying.\r\n\r\n### Example\r\n\r\n```\r\n# generic currying function definition\r\ndef currying_filter(key: str, value: str):\r\n    def filter(data: Dict[str: List[str]]):\r\n        data_values = data.get(key, None)\r\n        for item in data_values:\r\n            if item == value:\r\n                return item\r\n        raise HTTPException(status_code=400, detail=\"No needle found!\")\r\n    return filter\r\n\r\n# curried function\r\nneedle_in_data = currying_filter(key='hay', value='needle')\r\nother_filter = currying_filter(key='book_name', value='Combinatory Logic.')\r\n\r\n\r\n# which can then be used as such\r\nneedle_in_data(data)\r\n```\r\nFor a more real-life use case, the nested filter can declare a `Depends()` too, and be depended itself, so endpoints can easily implement various fine-grained checks without needing to implement a more complex class with `__init__` and `__call__` \r\n\r\n```\r\n# like above example but calls a depends. with anything that will return some data.\r\n    def filter(data: dict = Depends(data_source):\r\n        # etc\r\n\r\n# then a curried filter can be called in endpoints\r\n@router.post('hay')\r\nasync def work_with_needles(needle: str = Depends(needle_in_data):\r\n    # process as usual, with the guaratee that the needle has been filtered upstream.\r\n\r\n```\r\n### Other thoughts\r\nWhile of course, many people are not familiar with functional programming style, or even assume it is possible in Python,\r\nsuch techniques are already widely spread, and only uses already known common syntax for functions, with the only catch being that it is nested.\r\nIt can be introduced as another technique, likely simpler to implement, to generate callables to use as a Depends() callable.\r\n\r\nOne advantage of using classes instead of curried function is that, being class instances, they have a type associated with it, so one might think that it benefits type hinting. However, the return value of such callables does not have to be the type of the callable itself, so the expectation of typing can actually introduce more confusion. Furthermore, there is no typing inside the call for Depends itself, only for the returned value.\r\n\r\nI would like to put some documentation page explaining the technique, or at least some explanation why the technique isn't used, and instead documentation (and internal source code, from I see) makes extensive use of the `__call__()` style, even with no inner data.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2183/comments",
    "author": "hhamana",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2022-11-09T17:46:16Z",
        "body": "Hey there! Yep, that works too. I think you could write a blog post about it.\r\n\r\nI wouldn't want to add it to the docs and add extra complexity to the concepts explained as that's a technique to generate a function, and not something different from what is already supported. But it's probably worth an independent blog post explaining it.\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2022-11-23T00:15:50Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 2178,
    "title": "Parallel request getting merged ",
    "created_at": "2020-10-15T03:12:04Z",
    "closed_at": "2023-02-28T00:37:44Z",
    "labels": [
      "question",
      "answered",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2178",
    "body": "I  created a API using fastapi. the API accepts a audio file and  text , the audio and text are related to each other and also the text is used till the end of all operations in the API \r\n```\r\nasync def create_file(upload_file:UploadFile = File(...),email: str = Form(...),text:str=Form(...)):\r\n     some operations\r\n     subprocess.popen(cmd)\r\n    stdout, stderr = process.communicate()\r\n```\r\n\r\nnow when 2 users try to hit the API at the same time the request of 1st user is getting modified and the user 2 response is returned to both the users.\r\nHow can i solve this and also the API is on aws with 2 cores linux fedora  os\r\nI am using gunicorn to host it and to run it on two cores \r\n`gunicorn -w 2 --reload --bind 0.0.0.0:8080 --capture-output  --error-logfile error_log.txt  --access-logfile log.txt -k uvicorn.workers.UvicornWorker main:app\r\n`\r\n_and is it possible to run 2 requests  parallel y on two cores independently  ?_",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2178/comments",
    "author": "saireddy12",
    "comments": [
      {
        "user": "hhamana",
        "created_at": "2020-10-17T17:26:01Z",
        "body": "You are experiencing a race condition.\r\nTo avoid those easily, you should make sure the file name of the audio file you generate/save is unique, so they do not write to the same file. \r\nEven better, if you can avoid it, try to work on it in-memory (`from io import ByteIO`) , so you do not have the performance cost from writing to a physical disk.\r\n"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-09T17:52:52Z",
        "body": "Thanks for the help @hhamana! 🍰 \r\n\r\nIf that solves your problem @saireddy12, you can close the issue. ☕ \r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T00:32:22Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 2138,
    "title": "Can I only use one worker thread to process requests?",
    "created_at": "2020-10-06T17:49:15Z",
    "closed_at": "2023-02-28T00:36:38Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2138",
    "body": "Hi, for my use case I am wrapping up a Windows COM object to a HTTP service. The difficulty I am facing is that typically the COM API object can only be used in one thread and there are very complicated rules on how to use them in a multi-threading environment. It seems to me for every requests coming in fastapi typically choose to create new threads to process these requests (I am only using  the synced requests processor in my application --> think flask). I am just wondering for fastapi is there a way for me to limit this behavior and ask the app to create only one worker thread and stick to it?\r\n\r\nThansk!\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2138/comments",
    "author": "bobfang1992",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2022-11-09T17:04:36Z",
        "body": "I imagine you solved your problem, thanks for coming back to close the issue! ☕ \r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2133,
    "title": "Can't return dictionary as response when values are numpy arrays",
    "created_at": "2020-10-05T15:30:07Z",
    "closed_at": "2023-02-28T00:36:27Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2133",
    "body": "```Python\r\nfrom backend import Model\r\nfrom fastapi import FastAPI, File, Form, UploadFile\r\n\r\napp = FastAPI()\r\nmodel = Model()\r\n\r\n@app.get(\"/\")\r\ndef read_root():\r\n    return {\"Hello World\"}\r\n\r\n@app.post(\"/enroll\")\r\ndef enroll_user(uploadedfile: UploadFile = File(...), username: str = Form(...)):\r\n    model.enroll(uploadedfile.file, username)\r\n    return \"success\"\r\n\r\n@app.get(\"/db\")\r\ndef view_db():\r\n    return model._database\r\n```\r\n### Description\r\n- I receive an uploaded audio file and a username and pass them to `model.enroll` to generate an embedding for that file and store it in the dictionary `_database` as `{username: embedding}.\r\n- Embedding is of type numpy.ndarray and of shape (1, 512).\r\n- The problem arises when I try and hit the `/db` endpoint to view the `_database` variable, it works when the dictionary is still empty but when it is populated it throws back this error `ValueError: [ValueError('dictionary update sequence element #0 has length 512; 2 is required'), TypeError('vars() argument must have __dict__ attribute')]`.\r\n- The error seems to arise from `fastapi/encoders` line 139.\r\n- I tried populating the dictionary with all sorts of sequences and it worked just fine.\r\n- The expected return is {username: embedding}.\r\n\r\n### Environment\r\n- OS: Linux\r\n- FastAPI Version: 0.61.1\r\n- Python version: 3.8.2",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2133/comments",
    "author": "kareemamrr",
    "comments": [
      {
        "user": "falkben",
        "created_at": "2020-10-05T16:05:59Z",
        "body": "Can you show what `Model` does?\r\n\r\nMy guess is that the numpy array cannot be converted to a dict. Are you specifying the dtype for the array to be `dict`?"
      },
      {
        "user": "Kludex",
        "created_at": "2020-10-05T16:44:58Z",
        "body": "AFAIR, an encoder is needed here. "
      },
      {
        "user": "kareemamrr",
        "created_at": "2020-10-05T17:25:29Z",
        "body": "@falkben here is `Model`\r\n```Python\r\nclass Model:\r\n    def __init__(self):\r\n        self.threshold = 0.7\r\n        self._database = {}\r\n        self.users = []\r\n        self.model = DeepSpeakerModel()\r\n        self.model.m.load_weights(\"ResCNN_checkpoint_850.h5\", by_name=True)\r\n\r\n    def gen_mfcc(self, audio):\r\n        return sample_from_mfcc(read_mfcc(audio, SAMPLE_RATE), NUM_FRAMES)\r\n\r\n    def gen_embedding(self, mfcc):\r\n        return self.model.m.predict(np.expand_dims(mfcc, axis=0))\r\n\r\n    def get_score(self, embeds):\r\n        return batch_cosine_similarity(embeds[0], embeds[1])\r\n\r\n    def enroll(self, audio, name):\r\n        mfcc = self.gen_mfcc(audio)\r\n        embed = self.gen_embedding(mfcc)\r\n        self._database[name] = embed\r\n        self.users.append(name)\r\n\r\n    def verify(self, audio, name):\r\n        identity_embed = self._database[name]\r\n        mfcc = self.gen_mfcc(audio)\r\n        test_embed = self.gen_embedding(mfcc)\r\n        score = self.get_score([identity_embed, test_embed])\r\n        if score > self.threshold:\r\n            return 1\r\n        else:\r\n            return 0\r\n```\r\n`_database` is already a dictionary, why would the numpy array be converted to a dict by itself?"
      },
      {
        "user": "Mause",
        "created_at": "2020-10-05T23:32:26Z",
        "body": "It looks like fastapi is trying to fall back to converting the numpy array to a `dict` using `vars` as it doesn't know what to do with it. You are probably best off converting the array into a python list yourself before returning it.\r\n\r\n```python\r\n@app.get(\"/db\")\r\ndef view_db():\r\n    return {username: embedding.tolist() for username, embedding in model._database.items()}\r\n```"
      },
      {
        "user": "kareemamrr",
        "created_at": "2020-10-12T10:10:28Z",
        "body": "Noted. Thank you."
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-09T17:23:27Z",
        "body": "Thanks for the help everyone! ☕ \r\n\r\nAnd thanks for coming back to close the issue @kareemamrr 🍰 \r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2101,
    "title": "how to implement logout and refresh token",
    "created_at": "2020-09-26T14:17:46Z",
    "closed_at": "2023-02-28T00:35:17Z",
    "labels": [
      "question",
      "answered",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2101",
    "body": "I am new to backend development I searched a lot for how to Implement logout but didn't find the way \r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2101/comments",
    "author": "abdalla19977",
    "comments": [
      {
        "user": "Yeganloo",
        "created_at": "2020-09-27T10:51:28Z",
        "body": "When you use JWT, Logout have to be implement in front-end and fast-api has nothing to do with it.\r\nImplement your refresh token in an put API."
      },
      {
        "user": "abdalla19977",
        "created_at": "2020-09-27T19:33:36Z",
        "body": "so is it okay if u logged out u can still use ur token?"
      },
      {
        "user": "luebke-dev",
        "created_at": "2020-09-29T11:43:04Z",
        "body": "Yeah, with the suggested way from @Yeganloo the token would be still valid. if you want to make a real logout you have to create a token blacklist and check in your auth dependency if the token has been revoked."
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-09T16:26:35Z",
        "body": "Thanks for the help @Yeganloo and @SebastianLuebke ! 🍰 \r\n\r\nAnother option is, if you want to allow users to logout every session, part of your user data could include some \"seed\" (some random data), that is used to hash and verify the token. You would have to get the data for the user from the unverified token, then verify it with the user seed, and then continue if verification passes.\r\n\r\nThen to logout every session you could change that user's seed data, that would make any previously emitted token invalid.\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2022-11-23T00:16:10Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 2088,
    "title": "Merge Path + Query Parameters in BaseModel",
    "created_at": "2020-09-24T15:26:15Z",
    "closed_at": "2023-02-28T00:55:32Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2088",
    "body": "Hi all,\r\n\r\nI just started using fastapi and I'm struggling to understant how to use the BaseModel on both path + query parameters.\r\n\r\nmy endpoint:\r\n```\r\nrs = client.get(\"/data/a/b/c\")\r\n# possibly\r\nrs = client.get(\"/data/a/b/c?sort=true&page=1\")\r\n```\r\nOn the code below is there a way to make the item return all the optional values declared in the Model?\r\n```python\r\nclass Item(BaseModel):\r\n    sort: Optional[str] =  \"\"\r\n    page: Optional[int] = 1\r\n    per_page: Optional[int] = 20\r\n    search_term: Optional[str] = \"\"\r\n\r\n@app.get(\"/data/{l1}/{l2}/{l3}\")\r\ndef d_tree(\r\n           l1: str,\r\n           l2: str,\r\n           l3: str,\r\n           item: Optional[Item] = None):\r\n    print(l1, l2, l3) # l1 l2 l3 ok\r\n    print(item) # None\r\n```\r\n\r\nThis would throw:\r\n```python\r\n@app.get(\"/data/{l1}/{l2}/{l3}\")\r\ndef d_tree(*,\r\n           l1: str,\r\n           l2: str,\r\n           l3: str,\r\n           item: Item):\r\n#{'detail': [{'loc': ['body'], 'msg': 'field required', 'type': 'value_error.missing'}]}\r\n```\r\n\r\nI'm wondering if It's possible to get all my variables inside the Model like this:\r\n```python\r\nclass Item(BaseModel):\r\n    l1: str\r\n    l2: str\r\n    l3: str\r\n    sort: Optional[str] =  \"\"\r\n    page: Optional[int] = 1\r\n    per_page: Optional[int] = 20\r\n    search_term: Optional[str] = \"\"\r\n\r\n@app.get(\"/data/{l1}/{l2}/{l3}\")\r\ndef d_tree(item: Item):\r\n    toil.phead(item)\r\n\r\n    return []\r\n```\r\n\r\n### Result\r\n```\r\n{'detail': [{'loc': ['body'], 'msg': 'field required', 'type': 'value_error.missing'}]}\r\n```\r\n\r\n### Expect\r\n```\r\n{   \r\n    'l1': 'a',\r\n    'l2': 'b',\r\n    'l3': 'c',\r\n    'page': 1,\r\n    'per_page': 20,\r\n    'search_term': '',\r\n    'sort': ''\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2088/comments",
    "author": "CrashLaker",
    "comments": [
      {
        "user": "jrversteegh",
        "created_at": "2020-10-03T17:43:33Z",
        "body": "Possibly, but it doesn't look like a particularly good design. Query and path parameters typically serve a different purpose. Having both in one model at least violates the Single Responsibility principle."
      },
      {
        "user": "CrashLaker",
        "created_at": "2020-10-12T15:57:33Z",
        "body": "Hi @jrversteegh,\r\n\r\nthank you for your reply.\r\nI understood that indeed isn't a good design.\r\nThat said, is it possible to at least return the item object value here with all the default options set?\r\n```python\r\nclass Item(BaseModel):\r\n    sort: Optional[str] =  \"\"\r\n    page: Optional[int] = 1\r\n    per_page: Optional[int] = 20\r\n    search_term: Optional[str] = \"\"\r\n\r\n@app.get(\"/data/{l1}/{l2}/{l3}\")\r\ndef d_tree(\r\n           l1: str,\r\n           l2: str,\r\n           l3: str,\r\n           item: Optional[Item] = None):\r\n    print(l1, l2, l3) # l1 l2 l3 ok\r\n    print(item) # None  <---------------- here\r\n```\r\nI was expecting item to be:\r\n```python\r\nitem = {\r\n  sort: '',\r\n  page: 1,\r\n  per_page: 20,\r\n  search_term: '',\r\n}\r\n```"
      },
      {
        "user": "jrversteegh",
        "created_at": "2020-10-12T17:00:19Z",
        "body": "I think that doesn't work because Query parameters need to be scalars or a list of scalars. They can't (yet) be objects, but for a flat object like yours, you could do something like:\r\n\r\n```python\r\n@dataclass\r\nclass Item:\r\n    sort: str =  \"\"\r\n    page: int = 1\r\n    per_page: int = 20\r\n    search_term: str = \"\"\r\n\r\n@app.get(\"/data/{l1}/{l2}/{l3}\")\r\ndef d_tree(\r\n           l1: str,\r\n           l2: str,\r\n           l3: str,\r\n           item: Item = Depends()):\r\n    print(l1, l2, l3) # l1 l2 l3 ok\r\n    print(item) # Should work now\r\n```\r\nNote the `dataclass` decorator, which makes sure that `Item` has an initializer for all its fields."
      },
      {
        "user": "CrashLaker",
        "created_at": "2020-10-12T17:32:45Z",
        "body": "Hi @jrversteegh,\r\n\r\nthank you! it worked :)\r\nAlthough I'm trying to understand why sort ended up as \"True\" whereas search_term had the correct value empty string.\r\n```\r\nItem(sort='true', page=1, per_page=20, search_term='')\r\n```\r\n"
      },
      {
        "user": "jrversteegh",
        "created_at": "2020-10-12T17:52:36Z",
        "body": "@CrashLaker because you requested `/data/ham/eggs/spam?sort=true` ?"
      },
      {
        "user": "CrashLaker",
        "created_at": "2020-10-12T18:00:50Z",
        "body": "@jrversteegh  err...  yeah nvm\r\nthat was dumb.. i'm so sorry. all sorted out now thank you so much :)"
      },
      {
        "user": "jrversteegh",
        "created_at": "2020-10-12T18:13:33Z",
        "body": "np and you're welcome."
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-09T17:27:43Z",
        "body": "Thanks for the help here @jrversteegh! 🚀 \r\n\r\nAnd thanks @CrashLaker for coming back to close the issue.\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2087,
    "title": "How to get the Video duration from UploadFile object in request?",
    "created_at": "2020-09-24T06:57:29Z",
    "closed_at": "2023-02-28T00:55:30Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2087",
    "body": "The use is to limit the user from uploading video having a duration greater than 1 minute.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2087/comments",
    "author": "adityashanbhog",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2022-11-09T14:41:23Z",
        "body": "I imagine you solved your problem, so thanks for coming back to close the issue!\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 2084,
    "title": "Discern between default value and provided value for None as a query parameter",
    "created_at": "2020-09-22T17:36:03Z",
    "closed_at": "2023-02-28T17:12:12Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2084",
    "body": "Hello,\r\n\r\nI've got a use case that sometimes comes up. When filtering my DB querying for \"null\" from the client on a particular field is a valid thing to do. This of course translates to `None`. Problem is most of the time query parameters of optional for me. How might I determine which `None` I'm dealing with? I.e. did the client explicitly provide the parameter or was it missing and `None` was set as the default. \r\n\r\nFrom similar issues I'm thinking that maybe some kind of middleware to determine if I actually passed a value or not might be in order but wanted to see if I'm missing something elegant.\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2084/comments",
    "author": "Subaku",
    "comments": [
      {
        "user": "ilyasotkov",
        "created_at": "2022-01-18T19:24:44Z",
        "body": "@Subaku Did you find a solution/workaround for this?\r\n\r\nMy use case:\r\n\r\n- `x_enable` is `False` by default\r\n- `x_value` is `0` by default\r\n\r\nIf the user sets `x_value` to a value >0, `x_enable` can be assumed `True`, unless `x_enable` is *explicitly* set to `False`. So I need a way to know whether `x_enable` is `False` because it's the default or because it was supplied by the user."
      },
      {
        "user": "ilyasotkov",
        "created_at": "2022-01-19T12:05:36Z",
        "body": "I am able to solve this by getting the query param value from the raw request. Example:\r\n\r\n```py\r\nfrom fastapi import FastAPI, Request\r\nfrom pydantic.validators import BOOL_FALSE\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/\")\r\ndef read_root(request: Request, x_enable: bool = False):\r\n    if not x_enable:\r\n        if request.query_params.get(\"x_enable\", \"\").lower() in BOOL_FALSE:\r\n            # We know that x_enable was set to false by the user\r\n            ...\r\n        else:\r\n            # x_enable is False because it's the default\r\n            ...\r\n```"
      }
    ]
  },
  {
    "number": 2075,
    "title": "Django db connection inconsistent between tests and view",
    "created_at": "2020-09-18T22:54:15Z",
    "closed_at": "2023-02-28T17:12:01Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2075",
    "body": "Hello,\r\n\r\nI just found a workaround to my problem but wanted to see if anyone has had this issue and might have suggestions. I'm using Django purely for its ORM feature with my Postgres DB but FastAPI for everything else. Note I'm not doing anything async. \r\n\r\nTake a simple pytest using django-pytest:\r\n```python\r\nimport pytest\r\n\r\nfrom my_django_models import Asset\r\n\r\n@pytest.mark.django_db\r\nclass TestAssets:\r\n...\r\n\r\n    def test_response(self):\r\n        assets = AssetFactory.create_batch(2)\r\n        print(Asset.objects.all())\r\n        resp = self.client.get('/assets')\r\n```\r\n \r\nThe view:\r\n```python\r\nfrom fastapi import APIRouter\r\n\r\nfrom my_django_models import Asset\r\n\r\nrouter = APIRouter()\r\n\r\n@router.get('/assets')\r\ndef assets():\r\n    print(Asset.objects.all())\r\n    ...\r\n```\r\n\r\nThe output:\r\n```\r\n[<Asset: Asset object (1)>, <Asset: Asset object (2)>]\r\n<QuerySet []>\r\n```\r\n\r\nSo the view has access to the db but it's not actually getting my data for some reason as if it has a bad or incorrect connection.\r\nNow if I inherit from Django's `TransactionTestCase` class and continue using Starlette's TestClient it works... But I don't understand why. So for now that's what I'm doing but wanted to maybe get some clue into why this is the case.\r\n\r\nAs another note I have made sure I'm pointing at the right settings module and made sure `django.setup()` was called though I think django-pytest does this for me.\r\n\r\n\r\nAppreciate any info.\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2075/comments",
    "author": "Subaku",
    "comments": [
      {
        "user": "adambudziak",
        "created_at": "2021-06-14T15:11:39Z",
        "body": "I currently have the same problem. Interestingly, when I debug the app I can see that the connection is still fine when FastAPI validates POST request data, i.e. a query `ModelName.objects.all()` test inside\r\n* test definition ✅ \r\n* Pydantic model validator method ✅ \r\n* a view itself ❌  \r\n\r\nHowever, I performed a little experiment and created a dependency in my view, something like this: \r\n```python\r\ndef get_query():\r\n    return ModelName.objects.all()\r\n```\r\n\r\nand if I pass it as a dependency for the view, then it again does not work. ❌ \r\n\r\nAlso, I use `pytest` without any classes (i.e. plain `test_` functions)\r\n"
      },
      {
        "user": "adambudziak",
        "created_at": "2021-06-16T10:17:01Z",
        "body": "It seems that the problem can also be mitigated by using `pytest.mark.django_db(transaction=True)` instead of plain `pytest.mark.django_db`"
      },
      {
        "user": "penoux",
        "created_at": "2021-10-29T06:16:35Z",
        "body": "I have the same issue, while migrating all my Django views to FastAPI. The view is working OK at runtime, but I encounter database access issues between pytest and a FastAPI dependency.\r\n\r\n```python\r\ntest_func.py\r\n\r\n\"\"\"\r\npytest fixtures : \r\n  fastapp (FastAPI initialized app with routers)\r\n  test_client (FastAPI TestClient instance)\r\n  auth (User in DB + API credentials)\r\n\"\"\"\r\ndef test_func(fastapp, test_client, auth):\r\n    user = User.objects.get(username=auth.username)  # works\r\n    user.check_password(auth.password) # works\r\n    authenticate(username=auth.username, password=auth.password) # works\r\n\r\n    response = test_client.get('/', auth=auth) # fails (see comments below)\r\n    ...\r\n\r\n\r\nrouter.py\r\n\r\n@router.get(\"/\")\r\ndef get_foo(user: User = Depends(get_current_user):\r\n    ...\r\n\r\n\r\ndependencies.py\r\n\r\nbasic = HTTPBasic()\r\n\r\ndef get_current_user(credentials: HTTPBasicCredentials = Depends(basic)) -> User:\r\n    # fails (see comments below)\r\n    user = authenticate(username=credentials.username, password=credentials.password)\r\n    ...\r\n\r\n```\r\n\r\nTest cases :\r\n\r\n1. **sqlite in-memory database** : access to ORM (User) ok in the test, fails with `no such table: auth_user` in the FastAPI dependency\r\n2. **sqlite in-memory database + `@pytest.mark.django_db(transaction=True)` annotation on test** : access to ORM (User) ok in the test, fails with `no such table: auth_user` in the FastAPI dependency\r\n2. **sqlite file database** : access to ORM (User) ok in the test, fails with `database table is locked: auth_user` in the FastAPI dependency\r\n3. **sqlite file database + `@pytest.mark.django_db()` annotation on test** : access to ORM (User) ok in the test, fails with `database table is locked: auth_user` in the FastAPI dependency\r\n4. **sqlite file database + `@pytest.mark.django_db(transaction=True)` annotation on test** : access to ORM (User) ok in the test, also OK in the FastAPI dependency\r\n\r\nI expected the simplest case (sqlite in-memory database) to work, as it was the case with Django test client. Is there a threading issue there ?"
      },
      {
        "user": "bameda",
        "created_at": "2021-11-02T10:22:22Z",
        "body": "I have the same problem with postgresql. Tests only work using `transactional_db` fixture or `pytest.mark.django_db(transaction=True)` or extending the class `django.test.TransactionTestCase` with my test functions.\r\n\r\nIt seems that the db is empty in \"view\" functions even if you create items with the ORM before the call to `client.get` function. "
      }
    ]
  },
  {
    "number": 2074,
    "title": "Uvicorn workers timeout question",
    "created_at": "2020-09-18T21:43:15Z",
    "closed_at": "2023-02-28T17:11:58Z",
    "labels": [
      "question",
      "investigate",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2074",
    "body": "**Some background**\r\nI am not sure if the following details are required to reply to my question but providing them just for reference. I am developing a FastAPI POST endpoint which does the following:\r\n\r\nReceives an image file (multipart/form-data)\r\nConverts the file stream to a numpy array.\r\nProcesses the image using open CV and tensorflow\r\nThe API is deployed on Google App Engine Flex (1-4 cores, 1-4 workers), using gunicorn and uvicorn. When I am calling an endpoint the average response time is ~1 seconds. However, when I am load testing the API with 5 concurrent users the average response time goes to ~4-5 seconds per request and then some uvicorn workers start to timeout and get killed. As a result I receive 502 responses from the nginx server.\r\n\r\n**My question is the following:**\r\n\r\nSince the default timeout of uvicorn is 30 seconds, I don't undertand why the workers are being terminated before they require ~30 seconds to respond. I have read that the 30 seconds timeout is not per request. However I do not understand under which circumstances a worker is supposed to timeout. For instance, in case all workers manage to respond within 5-10 seconds, is it normal to see workers timeout while the timeout threshold is 30?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2074/comments",
    "author": "gsach",
    "comments": [
      {
        "user": "ArcLightSlavik",
        "created_at": "2020-09-19T13:53:23Z",
        "body": "> using gunicorn and uvicorn\r\n\r\nHow are you running gunicorn?\r\n\r\n> 1-4 cores, 1-4 workers\r\n\r\nThere is a set amount of workers you need to run depending on how many cores there is. (think it's cores * 2 + 1)"
      },
      {
        "user": "gsach",
        "created_at": "2020-09-19T15:37:27Z",
        "body": "I have tried several combinations, including some that are based on this rule. However, I noticed that the larger the number of workers is, the easier it is to reproduce the issue. I am mostly experimenting with 1 core and 2 workers."
      },
      {
        "user": "iudeen",
        "created_at": "2020-09-20T06:17:57Z",
        "body": "Do you have any resource that can be accessed by only one process?"
      },
      {
        "user": "gsach",
        "created_at": "2020-09-20T08:27:05Z",
        "body": "> Do you have any resource that can be accessed by only one process?\n\nI am not sure about that. What kind of resources can be accessed only by one process? \n\nEdit: For instance the tensorflow model is instantiated and cached once per worker. Could that affect the timeout issue?\n"
      }
    ]
  },
  {
    "number": 2072,
    "title": "Long time between request and endpoint code get executed for large List data",
    "created_at": "2020-09-18T09:44:43Z",
    "closed_at": "2023-02-28T18:43:22Z",
    "labels": [
      "question",
      "investigate",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2072",
    "body": "### Description\r\n\r\nI send image data from my client to FastApi with a request body. I noticed there is a very long time between the moment the request is sent and the moment the code in the end point starts to be executed. \r\n\r\nI don't need to validate input data, so I used \"Any\" in the base model, but the execution is slow anyway. I don't think it is related to Pydantic (cf. example). \r\n\r\nI joined a reproducible example, with a endpoint that only receives data but does nothing with it.\r\n\r\nDoes anyone have encountered this problem before? It might be related to the issue #1359, but my problem is on the request side and I didn't manage to extrapolate. \r\n\r\nIt might happen also that I am addressing my objective the wrong way, so other implementation suggestions are welcomed.\r\n\r\n```Python\r\nfrom typing import List, Any\r\nfrom fastapi import FastAPI\r\nfrom pydantic import BaseModel\r\nimport numpy as np\r\nimport datetime\r\nimport time\r\n\r\n\r\nclass PredictRequest(BaseModel):\r\n    #images: List[List[List[int]]]  # Even slower, overhead seems to be on the pydantic side in that case\r\n    images: Any\r\n\r\n\r\napp = FastAPI()\r\n\r\n@app.post(\"/DummyEndPoint\")\r\ndef predict(input: PredictRequest):\r\n    print(\"Time data available in endpoint: \", datetime.datetime.utcnow())\r\n    return\r\n\r\n\r\n\r\ndef run_pydantic_validation(data):\r\n    print(\"PYDANTIC:\")\r\n    ts = time.time()\r\n    validated_data = dict(PredictRequest(**data))\r\n    print(\"Pydantic validation time: \", time.time() - ts)\r\n\r\ndef run_endpoint(data):\r\n    from starlette.testclient import TestClient\r\n    from starlette.status import HTTP_200_OK\r\n\r\n    test_client = TestClient(app)\r\n\r\n    ts = time.time()\r\n    print(\"FASTAPI:\")\r\n    print(\"Time the data is sent: \", datetime.datetime.utcnow())\r\n    response = test_client.post(\"/DummyEndPoint\", json=data)\r\n    assert response.status_code == HTTP_200_OK\r\n    print(\"Time to run the dummy endpoint: \", time.time() - ts)\r\n\r\n\r\nimages = np.zeros((1000, 256, 256))  # Simulate 1000 images of size 256*256 (grayscale, so there is no color axis)\r\ndata = {'images': images.tolist()}\r\n\r\nrun_pydantic_validation(data=data)\r\nrun_endpoint(data=data)\r\n```\r\n\r\n\r\n### Environment\r\n\r\n* OS: Linux \r\n* FastAPI Version: 0.61.1\r\n* Python version: 3.7\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2072/comments",
    "author": "dfpasdel",
    "comments": [
      {
        "user": "ArcLightSlavik",
        "created_at": "2020-09-18T12:01:28Z",
        "body": "Are you sure the images you make from numpy are correct? Running `print(images.tolist())` seemingly prints a bunch of '0' without end. \r\n\r\nBesides that doing `images = [[[1000, 256, 256]]]` results in good time\r\n```\r\nTime the data is sent: 2020-09-18 11:56:53.287025\r\nTime data available in endpoint: 2020-09-18 11:56:53.309983\r\nTime to run the dummy endpoint: 0.023695945739746094\r\n```"
      },
      {
        "user": "dfpasdel",
        "created_at": "2020-09-18T12:44:38Z",
        "body": "Thanks for your reply. \r\nMy images from numpy are correct. I did not mentioned it clearly, but here images represents a batch of 1000 images, each being 256*256 pixels. So in the minimal example above it is a bunch of zeros, but in the real project, it is meaningful pixel values to be processed further."
      },
      {
        "user": "Adityagrao",
        "created_at": "2020-09-20T16:12:58Z",
        "body": "@ArcLightSlavik \r\nEven with setting `images = [[[1000, 256, 256]]]`  does not help, at least when I test it locally, I think the results are based on the system spec also, I am getting around 22 secs on my local machine and around 3secs on my VM"
      },
      {
        "user": "dfpasdel",
        "created_at": "2020-09-21T17:05:48Z",
        "body": "I made my example even more simpler, independent from Pydantic and encoding the image data as bytes. \r\n\r\n```Python \r\nfrom fastapi import FastAPI, File\r\nimport numpy as np\r\nimport datetime\r\nimport time\r\nimport base64\r\n\r\napp = FastAPI()\r\n\r\n@app.post(\"/DummyEndPoint\")\r\ndef predict(images: bytes = File(...)):\r\n    print(\"Time data available in endpoint: \", datetime.datetime.utcnow())\r\n    return\r\n\r\n\r\ndef run_endpoint(data):\r\n    from starlette.testclient import TestClient\r\n    from starlette.status import HTTP_200_OK\r\n\r\n    test_client = TestClient(app)\r\n\r\n    ts = time.time()\r\n    print(\"FASTAPI:\")\r\n    print(\"Time the data is sent: \", datetime.datetime.utcnow())\r\n    response = test_client.post(\"/DummyEndPoint\", files=data)\r\n    assert response.status_code == HTTP_200_OK\r\n    print(\"Time to run the dummy endpoint: \", time.time() - ts)\r\n\r\n\r\nimages = np.zeros((1000, 256, 256))  # Simulate 1000 images of size 256*256 (grayscale, so there is no color axis)\r\ndata = {'images': base64.b64encode(images)}\r\n\r\nrun_endpoint(data=data)\r\n```\r\n\r\nThe time to enter the endpoint went down on my machine from 13.5 to 2.7 sec. This time is now more reasonable with regard to the processing time in my projects endpoint. \r\n\r\nHowever I am not sure what improved here, if it is because I got rid of pydantic and/or because I converted the data to bytes (size of the data sent is almost similar, around 600MB)."
      },
      {
        "user": "mcmx",
        "created_at": "2020-09-21T23:46:25Z",
        "body": "I'm experiencing something similar, with the TestClient, connecting to a running instance using curl or insomnia is fast enough, but the tests are taking too much, I'm using python 3.8 under pipenv, no changes on the versions of fastapi nor python under the virtualenv, one thing that happened was a change in some policies and antivirus on my Mac, will do some more testing tomorrow."
      }
    ]
  },
  {
    "number": 2057,
    "title": "Dependency Overrides in startup event gives TypeError: 'Depends' object is not callable",
    "created_at": "2020-09-15T12:04:11Z",
    "closed_at": "2023-02-28T18:43:15Z",
    "labels": [
      "question",
      "investigate",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2057",
    "body": "How can dependencies in the startup event be overwritten for testing?\r\n\r\nBelow a minimal example. When executing the test, `Model` is a `Depends` object and not a `MagicMock`. When putting the depends in normal endpoints it works just fine.\r\n\r\napi.py\r\n```python \r\nfrom my_package.model import Model\r\nfrom fastapi import Depends, FastAPI\r\napp = FastAPI()\r\n\r\ndef model_provider():\r\n    return Model\r\n\r\nmodel = None\r\n\r\n@app.on_event(\"startup\")\r\ndef startup(Model = Depends(model_provider)):\r\n    global model\r\n    model = Model()\r\n\r\n@app.get(\"/prediction\")\r\ndef predict(x):\r\n    return model.predict(x)\r\n\r\n```\r\n\r\ntests/test_api.py\r\n````python\r\nfrom my_package import api\r\nfrom unittest.mock import MagicMock\r\nfrom fastapi.testclient import TestClient\r\n\r\ndef test_predict():\r\n    model_mock = MagicMock()\r\n    model_mock.predict = MagicMock(return_value=lambda x: x)\r\n    api.app.dependency_overrides[api.model_provider] = lambda: model_mock\r\n    with TestClient(api.app) as client:\r\n        prediction = client.get(\"/prediction?x=1\")\r\n        assert prediction.text == \"1\"\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2057/comments",
    "author": "timbmg",
    "comments": [
      {
        "user": "wichert",
        "created_at": "2020-10-30T05:14:30Z",
        "body": "The documents seems to hint that you can only use `Depends` for request functions. Perhaps this could be extended to app events as well?"
      },
      {
        "user": "oxfn",
        "created_at": "2021-04-03T10:07:20Z",
        "body": "+1 this would be great to use dependencies in event handlers. Now it is Starlette events which know nothing about FastAPI DI"
      },
      {
        "user": "Faylixe",
        "created_at": "2021-04-14T16:05:14Z",
        "body": "+1, the DI is a very important design feature of FastAPI that should be usable in event handler IMO.\r\n\r\nUnless already planned for future release, I would like to contribute to this, but this doesn't seems that easy to implement it in a clean way. By reading DI implementation currently used, I realize that it is deeply connected to request / response game, with no separation of concern allowing to just refactor `fastapi.dependencies.utils.solve_dependencies` function to handle an event only use case.\r\n\r\nA quick intuition is that it should have a more granular `Dependent` / `Depends` hierarchy like having a base `Dependent` definition without any `Body`, `Form`, `Request`, `Response`, etc ... support and adding those to a child `RequestDependent` before to finally break solver function to support either both use case or smartly trigger errors when unsupported request deps are required in an \"non request\" context.\r\n\r\nBut maybe there is a simpler way ?"
      },
      {
        "user": "adriangb",
        "created_at": "2021-04-27T00:40:53Z",
        "body": "@Faylixe I took a look, and I agree with your assessment. It looks doable without breaking changes, but yeah a _lot_ of refactoring would be needed."
      }
    ]
  },
  {
    "number": 2045,
    "title": "can i hide some url in docs? somes like  /graphql",
    "created_at": "2020-09-14T09:30:44Z",
    "closed_at": "2023-02-28T00:54:28Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2045",
    "body": "quest easy ,see title . thanks.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2045/comments",
    "author": "goodking-bq",
    "comments": [
      {
        "user": "SirTelemak",
        "created_at": "2020-09-14T10:23:47Z",
        "body": "Yeah, there is param for router `include_in_schema`\r\nExample:\r\n```python3\r\napp = FastAPI()\r\n@app.get('/', include_in_schema=False)\r\ndef foo():\r\n    return {'success': True}\r\n```"
      },
      {
        "user": "iudeen",
        "created_at": "2020-09-15T23:03:59Z",
        "body": "> Yeah, there is param for router `include_in_schema`\n> Example:\n> ```python3\n> app = FastAPI()\n> @app.get('/', include_in_schema=False)\n> def foo():\n>     return {'success': True}\n> ```\n\nThis is the perfect answer! How about we close this issue? "
      },
      {
        "user": "goodking-bq",
        "created_at": "2020-09-16T01:24:15Z",
        "body": "> > Yeah, there is param for router `include_in_schema`\r\n> > Example:\r\n> > ```python\r\n> > app = FastAPI()\r\n> > @app.get('/', include_in_schema=False)\r\n> > def foo():\r\n> >     return {'success': True}\r\n> > ```\r\n> \r\n> This is the perfect answer! How about we close this issue?\r\n\r\nyes .thanks.i see it just now."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-12-27T18:19:30Z",
        "body": "Thanks for the help here @SirTelemak ! :clap: :bow: \r\n\r\nThanks for reporting back and closing the issue :+1:"
      }
    ]
  },
  {
    "number": 2015,
    "title": "How can I change 'Bearer' prefix in OAuth2PasswordBearer",
    "created_at": "2020-09-05T13:21:40Z",
    "closed_at": "2023-02-28T00:53:45Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2015",
    "body": "I'm using OAuth2PasswordBearer scheme, the rest of my services has authorisation prefix 'JWT' instead of 'Bearer', how can I change it?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2015/comments",
    "author": "DireWereWolf",
    "comments": [
      {
        "user": "behzadmehrabi",
        "created_at": "2020-09-06T07:07:38Z",
        "body": "instead of using `OAuth2PasswordBearer` directly.\r\ncreate a custom class that inherit from it and override `__call__` method and change `bearer` to `jwt`.\r\n```\r\nclass OAuth2PasswordJWT(OAuth2PasswordBearer):\r\n    def __init__(\r\n        self,\r\n        tokenUrl: str,\r\n        scheme_name: Optional[str] = None,\r\n        scopes: Optional[dict] = None,\r\n        auto_error: bool = True,\r\n    ):\r\n        super().__init__(\r\n            tokenUrl=tokenUrl,\r\n            scopes=scopes,\r\n            scheme_name=scheme_name,\r\n            auto_error=auto_error,\r\n        )\r\n\r\n    async def __call__(self, request: Request) -> Optional[str]:\r\n        authorization: str = request.headers.get(\"Authorization\")\r\n        scheme, param = get_authorization_scheme_param(authorization)\r\n        if not authorization or scheme.lower() != \"jwt\":\r\n            if self.auto_error:\r\n                raise HTTPException(\r\n                    status_code=status.HTTP_401_UNAUTHORIZED,\r\n                    detail=\"Not authenticated\",\r\n                    headers={\"WWW-Authenticate\": \"JWT\"},\r\n                )\r\n            else:\r\n                return None\r\n        return param\r\n```"
      },
      {
        "user": "DireWereWolf",
        "created_at": "2020-09-08T08:03:17Z",
        "body": "Thanks a lot"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-12-27T17:25:13Z",
        "body": "Thanks for the help here @Bezmehrabi ! :clap: :bow: \r\n\r\nThanks for reporting back and closing the issue @DireWereWolf  :+1:\r\n\r\nHave in mind that \"Bearer\" is just the format for a token sent in the header, which is integrated with OAuth2, JWT as a prefix is probably not part of any standard and would probably not have as much compatibility as \"Bearer\". Also, \"Bearer\" doesn't imply anything about the token, so it would most commonly be JWT, and it could be something else as well."
      }
    ]
  },
  {
    "number": 2013,
    "title": "How  FastAPI maps paths to methods?",
    "created_at": "2020-09-04T16:52:40Z",
    "closed_at": "2023-02-28T00:53:44Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2013",
    "body": "I was going through the tutorial, the First Steps part.\r\nWhen I got to the point where we declare a GET path with `@app.get(\"/\")` I decided to look inside the `app.get` code. I expected to see several nested methods, as it usually happens when we create decorators. However, there is quite a simple code that (I believe) adds a GET record to the app's router.\r\nMoreover, I have not seen any manipulations with the method which is decorated by `@app.get(\"/\")`. \r\nSo, now I am wondering, where exactly does the decorated method get assigned to the related path?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2013/comments",
    "author": "vovean",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-12-26T19:50:19Z",
        "body": "I assume you solved it and found the anser, thanks for closing the issue :+1:"
      }
    ]
  },
  {
    "number": 2000,
    "title": "Token Representation",
    "created_at": "2020-09-02T05:27:39Z",
    "closed_at": "2023-02-28T00:53:24Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/2000",
    "body": "### Token Representation\r\n\r\n- [x] FastAPI could have a greater focus on tokens, so it would open the way for this tool to be used in companies, I am currently learning it, but I cannot apply it to my team due to the lack of a well formulated description about authentication",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/2000/comments",
    "author": "TheusBoot",
    "comments": [
      {
        "user": "Kludex",
        "created_at": "2020-09-02T07:05:09Z",
        "body": "Search for \"authentication\" on our documentation... \n"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-12-26T19:33:35Z",
        "body": "Thanks for the help @Kludex ! :rocket: \r\n\r\n@TheusBoot if you still have problems, please create a new issue and follow the template step by step. That way it's easier to help you with your specific problem. Given that, I'm gonna close this issue now."
      }
    ]
  },
  {
    "number": 1997,
    "title": "I can't interact with the downloaded file using the Facet API as with a TemporaryFile",
    "created_at": "2020-09-01T13:36:20Z",
    "closed_at": "2023-02-28T00:53:21Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1997",
    "body": "I am downloading a file using FastAPI as shown in the documentation. I want to work with it as a `TemporaryFile`. But with the help of `os.path.exists()` I see that this file no. How can I fix this?\r\n\r\nMy code:\r\n\r\n    @router.post(\r\n        path=\"/po/{id_po}/upload\",\r\n        response_model=schema.ContentUploadedResponse,\r\n    )\r\n    async def upload_file(\r\n            id_po: int,\r\n            uploaded_file: UploadFile = File(...)):\r\n        \"\"\"Загружает файл во временной хранилище\"\"\"\r\n        content = await uploaded_file.read()\r\n        uploaded_file.file.rollover()\r\n        print(uploaded_file.file.name)\r\n        print(os.path.abspath(str(uploaded_file.file.name)))\r\n        if content.__sizeof__() < 2097152:\r\n            # await download_user_file(paths=[os.path.abspath(str(uploaded_file.file.name))], user_id=id_po)\r\n            print(os.path.exists(os.path.abspath(str(uploaded_file.file.name))))\r\n            return schema.ContentUploadedResponse(filename=f'{id_po}__{uploaded_file.filename}')\r\n        else:\r\n            raise FileIsTooBig(message='File is bigger than 2 MB')",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1997/comments",
    "author": "FyZzyss",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-12-26T19:49:22Z",
        "body": "I assume you solved it, thanks for closing the issue :+1:"
      }
    ]
  },
  {
    "number": 1990,
    "title": "HOW TO  fastapi websocket  set up interface docker.APIClient exec_start  ",
    "created_at": "2020-08-31T11:37:15Z",
    "closed_at": "2023-02-28T00:53:17Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1990",
    "body": "I want to modify the flask_sockets  code written before through fastapi，but there is no idea\r\n\r\n\r\n\r\nfastapi websocket The case cannot be imitated\r\n\r\n\r\nimport docker\r\nimport threading\r\n\r\nclass ClientHandler(object):\r\n\r\n    def __init__(self, **kwargs):\r\n        self.dockerClient = docker.APIClient(**kwargs)\r\n\r\n    def creatTerminalExec(self, containerId):\r\n        execCommand = [\r\n            \"/bin/sh\",\r\n            \"-c\",\r\n            'TERM=xterm-256color; export TERM; [ -x /bin/bash ] && ([ -x /usr/bin/script ] && /usr/bin/script -q -c \"/bin/bash\" /dev/null || exec /bin/bash) || exec /bin/sh']\r\n        execOptions = {\r\n            \"tty\": True,\r\n            \"stdin\": True\r\n        }\r\n        execId = self.dockerClient.exec_create(containerId, execCommand, **execOptions)\r\n        print(execId)\r\n        return execId[\"Id\"]\r\n\r\n    def startTerminalExec(self, execId):\r\n        return self.dockerClient.exec_start(execId, socket=True, tty=True)\r\n\r\n\r\nclass DockerStreamThread(threading.Thread):\r\n    def __init__(self, ws, terminalStream):\r\n        super(DockerStreamThread, self).__init__()\r\n        self.ws = ws\r\n        self.terminalStream = terminalStream\r\n\r\n    def run(self):\r\n        while True:\r\n            try:\r\n                dockerStreamStdout = self.terminalStream.recv(2048)\r\n                if dockerStreamStdout is not None:\r\n                    self.ws.send(str(dockerStreamStdout, encoding='utf-8'))\r\n                else:\r\n                    print(\"docker daemon socket is close\")\r\n                    self.ws.close()\r\n            except Exception as e:\r\n                print(\"docker daemon socket err: %s\" % e)\r\n                self.ws.close()\r\n                break\r\n\r\n\r\n@sockets.route('/echo')\r\ndef echo_socket(ws):\r\n    print(ws)\r\n    dockerCli = ClientHandler(base_url=conf.DOCKER_HOST, timeout=600)\r\n    terminalExecId = dockerCli.creatTerminalExec(conf.CONTAINER_ID)\r\n    terminalStream = dockerCli.startTerminalExec(terminalExecId)._sock\r\n\r\n    terminalThread = DockerStreamThread(ws, terminalStream)\r\n    terminalThread.start()\r\n\r\n    while not ws.closed:\r\n        print('ok')\r\n        message = ws.receive()\r\n        if message is not None:\r\n            terminalStream.send(bytes(message, encoding='utf-8'))\r\n\r\nif __name__ == '__main__':\r\n    from gevent import pywsgi\r\n    from geventwebsocket.handler import WebSocketHandler\r\n\r\n    app.debug = True\r\n    server = pywsgi.WSGIServer(('192.168.100.1', 5000), app, handler_class=WebSocketHandler)\r\n    server.serve_forever()",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1990/comments",
    "author": "binbinjianjian",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-12-26T19:30:22Z",
        "body": "I assume you solved it, thanks for closing the issue :+1:"
      }
    ]
  },
  {
    "number": 1984,
    "title": "Why does the first one generate doc and the second one not",
    "created_at": "2020-08-28T09:14:13Z",
    "closed_at": "2023-02-28T00:52:59Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1984",
    "body": "\r\nThis demo generates a doc document\r\n\r\n\r\ninsert_router = APIRouter()\r\n@insert_router.post(\"/items/\")\r\nasync def create_item(item: Item):\r\n    item_dict = item.dict()\r\n    if item.tax:\r\n        price_with_tax = item.price + item.tax\r\n        item_dict.update({\"price_with_tax\": price_with_tax})\r\n    return item_dict\r\n\r\n\r\n\r\n\r\nThis demo doesn't generate docs\r\n\r\n@insert_router.route(path=\"/items/\",methods=[\"post\"])\r\nasync def create_item(item: Item):\r\n    item_dict = item.dict()\r\n    if item.tax:\r\n        price_with_tax = item.price + item.tax\r\n        item_dict.update({\"price_with_tax\": price_with_tax})\r\n    return item_dict\r\n\r\n\r\n\r\nIs this a bug?\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1984/comments",
    "author": "xiaxichen",
    "comments": [
      {
        "user": "ycd",
        "created_at": "2020-08-28T17:49:11Z",
        "body": "Hey @xiaxichen can you reformat your code?"
      },
      {
        "user": "SirTelemak",
        "created_at": "2020-08-29T08:52:04Z",
        "body": "`insert_router.route`  is Starlette's method that knows nothing about API. In your case you should use FastAPI method that also adds API doc `insert_router.api_route`"
      },
      {
        "user": "xiaxichen",
        "created_at": "2020-08-29T11:48:49Z",
        "body": "> `insert_router.route` is Starlette's method that knows nothing about API. In your case you should use FastAPI method that also adds API doc `insert_router.api_route`\r\n\r\n\r\nHowever, this routing registration can not be used to generate documents.\r\n@insert_router.route(path=\"/items/\",methods=[\"post\"])"
      },
      {
        "user": "xiaxichen",
        "created_at": "2020-08-29T11:53:30Z",
        "body": "> Hey @xiaxichen can you reformat your code?\r\n```\r\ninsert_router = APIRouter()\r\n@insert_router.post(\"/items/\")\r\nasync def create_item(item: Item):\r\n\titem_dict = item.dict()\r\n\tif item.tax:\r\n\t\tprice_with_tax = item.price + item.tax\r\n\t\titem_dict.update({\"price_with_tax\": price_with_tax})\r\n\treturn item_dict\r\n\r\nThis demo doesn't generate docs\r\n\r\n@insert_router.route(path=\"/items/\",methods=[\"post\"])\r\nasync def create_item(item: Item):\r\n\titem_dict = item.dict()\r\n\tif item.tax:\r\n\t\tprice_with_tax = item.price + item.tax\r\n\t\titem_dict.update({\"price_with_tax\": price_with_tax})\r\n\treturn item_dict\r\n```\r\nthere thanks"
      },
      {
        "user": "SirTelemak",
        "created_at": "2020-08-29T17:52:34Z",
        "body": "> > `insert_router.route` is Starlette's method that knows nothing about API. In your case you should use FastAPI method that also adds API doc `insert_router.api_route`\r\n> \r\n> However, this routing registration can not be used to generate documents.\r\n> @insert_router.route(path=\"/items/\",methods=[\"post\"])\r\n\r\nYes, it wouldn't generate docs since it's starlettes method. Use\r\n`@insert_router.api_route(path=\"/items/\",methods=[\"post\"])` instead"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-12-16T21:05:44Z",
        "body": "Thanks for the help here everyone! :clap: :bow: \r\n\r\nThanks for reporting back and closing the issue :+1:"
      }
    ]
  },
  {
    "number": 1971,
    "title": "Сelery task from another project run from a Fastapi project cannot delete a file using os.remove()",
    "created_at": "2020-08-25T16:16:28Z",
    "closed_at": "2023-02-28T00:52:51Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1971",
    "body": "When I try to delete a temporary file using the broker I gave the FastAPI task to, all the code is executed except `os.remove()`, `subprocess.Popen(['rm', source_path])` and so on. If I run a task from a project where the task is written, everything works well.\r\n\r\n**My endpoint code:**\r\n\r\n    @router.post(\r\n        path=\"/po/{id_po}/upload\",\r\n        response_model=schema.ContentUploadedResponse,\r\n    )\r\n    async def upload_file(\r\n            id_po: int,\r\n            # background_tasks: BackgroundTasks,\r\n            uploaded_file: UploadFile = File(...)):\r\n        \"\"\"pass\"\"\"\r\n        with open(f\"{uploaded_file.filename}\", \"wb\") as fp:\r\n            fp.write(await uploaded_file.read())\r\n        await samizdat_file_upload(uploaded_file=os.path.abspath(fp.name), id_po=id_po)     \r\n       #background_tasks.add_task(samizdat_file_upload, uploaded_file=os.path.abspath(fp.name), id_po=id_po)\r\n\r\n        return schema.ContentUploadedResponse()\r\n\r\n\r\n**My celery initialization code:**\r\n\r\n\r\n    APP = Celery('async_download_file')\r\n    APP.config_from_object(CONFIG['celery'])\r\n    \r\n    \r\n    async def samizdat_file_upload(uploaded_file: str, id_po: int):\r\n        \"\"\"Background task that upload file from samizdat\"\"\"\r\n        APP.send_task(name='async_download_file.download_file',\r\n                      args=([uploaded_file], id_po),\r\n                      queue=CONFIG['celery']['task_routes']['samizdat_celery_task']['queue'])\r\n\r\nP.S If I call a function that bores directly, and not through the endpoint, then everything works... This means that the endpoint is somehow distorting the task.\r\n\r\n```\r\nfrom lr.config import CONFIG\r\nfrom celery import Celery\r\n\r\nAPP = Celery('async_download_file')\r\nAPP.config_from_object(CONFIG['celery'])\r\n\r\n\r\ndef adapter(uploaded_file: str, id_po: int):\r\n    samizdat_file_upload(uploaded_file, id_po)\r\n\r\n\r\ndef samizdat_file_upload(uploaded_file: str, id_po: int):\r\n    \"\"\"Background task that upload file from samizdat\"\"\"\r\n    APP.send_task(name='async_download_file.download_file',\r\n                  args=([uploaded_file], id_po),\r\n                  queue=CONFIG['celery']['task_routes']['samizdat_file_upload']['queue'])\r\n\r\n\r\nif __name__ == '__main__':\r\n    adapter('/home/fyzzy/some_picture.jpg', 12)\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1971/comments",
    "author": "FyZzyss",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-12-16T20:43:15Z",
        "body": "I assume you solved it, thanks for closing the issue :+1:"
      }
    ]
  },
  {
    "number": 1970,
    "title": "  How to combine werobot with fastapi routing？？",
    "created_at": "2020-08-25T14:53:54Z",
    "closed_at": "2023-02-28T00:52:49Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1970",
    "body": "I want to use werobot and fastapi to develop WeChat official accounts, but I don’t know how to directly combine the two?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1970/comments",
    "author": "wxq0309",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-12-16T20:39:20Z",
        "body": "Sorry, I can't help you if you don't follow the issue template and provide more information.\r\n\r\nIf you still have problems please create a new issue and follow the template step by step.\r\n\r\nGiven that, I'm gonna close this one."
      }
    ]
  },
  {
    "number": 1929,
    "title": "Wrong route in FastAPi",
    "created_at": "2020-08-20T12:25:17Z",
    "closed_at": "2023-02-28T00:52:25Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1929",
    "body": "Hello I would like to know how to override the function that manages non-existing route, I can't find anything on the internet or I don't understand at all how to do it because I've tried everything I think.\r\n\r\nIf someone can help me to change the message \r\n{\r\n    \"detail\": \"Not Found\"\r\n}\r\n\r\nwhen you try to contact the server with a bad route or / and method\r\n\r\nThank you very much.\r\nBest regards,",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1929/comments",
    "author": "Misteur54",
    "comments": [
      {
        "user": "ycd",
        "created_at": "2020-08-20T13:49:03Z",
        "body": "Exactly, you can override the default HTTPException with Starlette's HTTPException\r\n\r\n```python\r\nfrom fastapi import FastAPI, Request\r\nfrom fastapi.responses import JSONResponse\r\nfrom starlette.exceptions import HTTPException as StarletteHTTPException\r\n\r\n\r\n@app.exception_handler(StarletteHTTPException)\r\nasync def http_exception_handler(request: Request, exc: StarletteHTTPException):\r\n    return JSONResponse({\"message\":\"endpoint not found\" })\r\n```\r\n\r\nNow when i send a request to undefined endpoint, i 'll see this\r\n\r\n```python\r\nINFO:     127.0.0.1:48818 - \"GET /not_defined_endpoint HTTP/1.1\" 200 OK\r\nOut:        \"message\":\"endpoint not found\"\r\n```\r\n\r\nIf you want to include the default details you can do this:\r\n\r\n```python\r\nfrom fastapi import FastAPI, Request\r\nfrom fastapi.responses import JSONResponse\r\nfrom starlette.exceptions import HTTPException as StarletteHTTPException\r\nfrom fastapi.encoders import jsonable_encoder\r\n\r\n@app.exception_handler(StarletteHTTPException)\r\nasync def http_exception_handler(request: Request, exc: StarletteHTTPException):\r\n    return JSONResponse({\"detail:\":jsonable_encoder(exc), \"message\":\"endpoint not found\" })\r\n```\r\nNow you can see the default exceptions are included too.\r\n```python\r\nINFO:     127.0.0.1:48844 - \"GET /not_defined_endpoint HTTP/1.1\" 200 OK\r\n,Out:       {\"detail:\":{\"status_code\":404,\"detail\":\"Not Found\"},\"message\":\"endpoint not found\"}\r\n```\r\n"
      },
      {
        "user": "Misteur54",
        "created_at": "2020-08-21T01:09:15Z",
        "body": "Hello, thank you very much\r\neverything works great, I took the example in the doc with UnicornException..."
      },
      {
        "user": "ycd",
        "created_at": "2020-08-21T01:27:12Z",
        "body": "You are welcome, glad it helped also thanks for closing the issue 🚀 "
      },
      {
        "user": "tiangolo",
        "created_at": "2020-12-16T18:05:44Z",
        "body": "Thanks for the help here @ycd ! :clap: :bow: \r\n\r\nThanks for reporting back and closing the issue @Misteur54  :+1:"
      }
    ]
  },
  {
    "number": 1925,
    "title": "How to send video files in response?",
    "created_at": "2020-08-19T19:43:29Z",
    "closed_at": "2023-02-28T00:52:16Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1925",
    "body": "My issue is that I want to take a video as an input perform object detection on it and return the resulting video in the response.\r\nI am using UploadFile for taking the input video file but I don't know how to send back a video as a response.\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1925/comments",
    "author": "robsteneha",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-12-16T17:54:34Z",
        "body": "I assume you solved it, thanks for closing the issue :+1:"
      },
      {
        "user": "theoll",
        "created_at": "2021-06-25T12:39:58Z",
        "body": "@robsteneha How did you handle it?"
      },
      {
        "user": "ayushitripathi23",
        "created_at": "2022-06-14T09:37:50Z",
        "body": "Hi @ tiangolo My issue is that I want to take a video as an input perform object detection on it and return the resulting video in the response.\r\nI am using UploadFile for taking the input video file but I don't know how to send back a video as a response"
      },
      {
        "user": "JarroVGIT",
        "created_at": "2022-06-14T15:32:40Z",
        "body": "This is a copy paste of the above issue. What have you tried, where are you stuck?\r\n"
      }
    ]
  },
  {
    "number": 1914,
    "title": "pytest with depends function throw errors -> AttributeError: 'Depends' object has no attribute",
    "created_at": "2020-08-18T07:37:00Z",
    "closed_at": "2023-02-28T00:51:59Z",
    "labels": [
      "question",
      "answered",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1914",
    "body": "### Description\r\n\r\nWhile using pytest with function that defined with `Depends()`, it throw errors. \r\n\r\n`AttributeError: 'Depends' object has no attribute 'get_topic_list'`\r\n\r\n### Example\r\n\r\n**Target class**\r\n```Python\r\nclass Service:\r\n    def __init__(self, topic_repo: TopicRepo = Depends()):\r\n        self.topic_repo = topic_repo\r\n\r\n    async def get_topic_list(\r\n        self,\r\n        page: int,\r\n        per: int,\r\n    ) -> Union[List[TopicSchema], List]:\r\n        return await self.topic_repo.get_topic_list(page=page, limit=per)\r\n```\r\n\r\n**Test**\r\n```Python\r\nfrom apps.topic.services import Service\r\nimport pytest\r\n\r\n\r\n@pytest.mark.asyncio\r\nasync def test_get_topic_list_service():\r\n    service = Service()\r\n    result = await service.get_topic_list(page=1, per=1)\r\n```\r\n\r\nI think dependency injection through `Depends()` does not support on pytest, or other approach.\r\n\r\nSo maybe I have to mocking Depends(), but I don't know exactly how can I do.\r\n\r\nAny best way for this case?\r\n\r\n### Environment\r\n\r\n* OS: macOS\r\n* FastAPI Version: 0.61.0\r\n* Python version: 3.8.2\r\n\r\n### Additional context\r\n\r\n<!-- Add any other context or screenshots about the question here. -->\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1914/comments",
    "author": "teamhide",
    "comments": [
      {
        "user": "ycd",
        "created_at": "2020-08-18T20:22:20Z",
        "body": "Are you using cbv from fastapi_utils?\r\n"
      },
      {
        "user": "Kludex",
        "created_at": "2020-08-18T20:33:40Z",
        "body": "You can't instantiate `Service()` directly. It's meant to be a dependency (it has a dependency on its constructor). If you want to check exactly what is happening:\r\n```python\r\nfrom apps.topic.services import Service\r\nimport pytest\r\n\r\n\r\n@pytest.mark.asyncio\r\nasync def test_get_topic_list_service():\r\n    service = Service()\r\n    print(service.topic_repo) # Here!\r\n    result = await service.get_topic_list(page=1, per=1)\r\n```\r\n\r\nWhat I recommend is that you mock the `Service()` attribute `topic_repo`. Something like:\r\n```\r\nmocker.patch(service, 'topic_repo', <value>) \r\n```"
      },
      {
        "user": "teamhide",
        "created_at": "2020-08-21T01:15:50Z",
        "body": "@ycd Nope.\r\n@Kludex with `pytest-mock` library?"
      },
      {
        "user": "Kludex",
        "created_at": "2020-08-21T07:10:38Z",
        "body": "@teamhide yes"
      },
      {
        "user": "irodrigues-ss",
        "created_at": "2020-11-22T23:44:39Z",
        "body": "I have the same problem, but in my case, is occurring when I use Depends i another function thats aren't from path operations."
      },
      {
        "user": "tiangolo",
        "created_at": "2022-10-19T19:59:40Z",
        "body": "If you have a class that is expected to be used as a dependency with subdependencies and you need to use it directly in other places in the code, you need to pass the keyword argument for the subdependencies manually.\r\n\r\nSo, you need to call it as normal Python code. In that case, FastAPI has nothing to do with it.\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2022-10-30T00:19:15Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 1906,
    "title": "error, \"[error] 33#33: *92500 connect() failed (111: Connection refused) while connecting to upstream, client: 216.58.212.244, server: ",
    "created_at": "2020-08-17T09:51:30Z",
    "closed_at": "2023-02-28T00:51:38Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1906",
    "body": "Trying to host an API on App Engine using FastAPI, was originally using Flask which was working but very slow. I'm now getting the following error: `error, \"[error] 33#33: *92500 connect() failed (111: Connection refused) while connecting to upstream, client: 216.58.212.244, server: `\r\n\r\nThis is the app.yaml file:\r\n\r\n```\r\nruntime: python\r\nenv: flex\r\n\r\nentrypoint: uvicorn --host 127.0.0.1 --port 8080 --timeout-keep-alive 500 main:app\r\nservice: default\r\n\r\ninstance_class: F4_1G\r\n\r\n# Instance Class: F4_1G\r\n# Memory Limit: 2048 MB\r\n# CPU Limit: 2.4 GHz\r\n# Supported Scaling Types: Automatic\r\n\r\nruntime_config:\r\n    python_version: 3\r\n\r\nhandlers:\r\n- url: /.*\r\n  script: auto\r\n\r\nnetwork:\r\n  forwarded_ports:\r\n   - 8080\r\n```\r\n\r\nThis is the main script, the majority of the code has had to be removed:\r\n\r\n```\r\nimport uvicorn\r\nfrom fastapi import FastAPI, Request\r\napp = FastAPI()\r\n\r\n@app.get('/')\r\nasync def nlp_email(return_method : str,\r\n                    user_email    : str,\r\n                    filename      : str)\r\n\r\n    return {'html': html}\r\n```\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1906/comments",
    "author": "JoshBello",
    "comments": [
      {
        "user": "ArcLightSlavik",
        "created_at": "2020-08-17T12:38:38Z",
        "body": "1) Uvicorn **strongly suggests** to use gunicorn via the UvicornWorker if your deploying to production, while you might still be testing it is good if you make this change right now since the behaviour can differ\r\n2) The order of arguments is slightly different\r\n```\r\nuvicorn main:app --port 8080 --timeout-keep-alive 500\r\ngunicorn -b :8088 --timeout 480 main:app\r\n```\r\n3) I would (personally) avoid setting the 'host' option, it had some weird results for me (after setting it you couldn't reach the api and stuff like that)"
      },
      {
        "user": "JoshBello",
        "created_at": "2020-08-18T08:40:16Z",
        "body": "Hi, @ArcLightSlavik thanks for your comment, when I try this I get:\r\n\r\n```\r\nError: no such option: -b\r\n```\r\n"
      },
      {
        "user": "ArcLightSlavik",
        "created_at": "2020-08-18T09:51:28Z",
        "body": "@JoshBello how are you running it?\r\nright now your running:\r\n`uvicorn --host 127.0.0.1 --port 8080 --timeout-keep-alive 500 main:app`\r\nat minimum it should be:\r\n`uvicorn main:app --host 127.0.0.1 --port 8080 --timeout-keep-alive 500`\r\noptimal would be:\r\n`gunicorn -b :8088 -k uvicorn.workers.UvicornWorker --timeout 500 main:app`"
      },
      {
        "user": "JoshBello",
        "created_at": "2020-08-18T09:56:22Z",
        "body": "@ArcLightSlavik Thanks for getting back to me.\r\n\r\nWhen I use FastAPI and Gunicorn I get this error:\r\n```\r\n__call__() missing 1 required positional argument: 'send' \r\n```"
      },
      {
        "user": "JoshBello",
        "created_at": "2020-08-18T09:57:41Z",
        "body": "Apparently it's due to Gunicorn not being ASGI"
      },
      {
        "user": "ArcLightSlavik",
        "created_at": "2020-08-18T10:10:07Z",
        "body": "Gunicorn by itself can't run FastAPI, for FastAPI to work on gunicorn you need to provide it with the **uvicorn** worker which is ASGI. You do this via: `-k uvicorn.workers.UvicornWorker`"
      },
      {
        "user": "JoshBello",
        "created_at": "2020-08-18T10:24:16Z",
        "body": "Hmm, when I use:\r\n\r\n```\r\ngunicorn -b :8088 -k uvicorn.workers.UvicornWorker --timeout 500 main:app\r\n```\r\n\r\nI get this error:\r\n```\r\n[error] 33#33: *218 connect() failed (111: Connection refused)\r\n```"
      },
      {
        "user": "ArcLightSlavik",
        "created_at": "2020-08-18T10:34:05Z",
        "body": "If it works locally then it's a configuration error somewhere in your deployment. From a quick google the error seems to be nginx related, possibly it's not listening to the correct port."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-12-16T21:17:52Z",
        "body": "Thanks for the help @ArcLightSlavik ! :bow: \r\n\r\nI assume you solved it, thanks for closing the issue :+1:"
      }
    ]
  },
  {
    "number": 1873,
    "title": "Question: use Fast API Dependency Injection separately from the API routes.",
    "created_at": "2020-08-10T14:17:53Z",
    "closed_at": "2023-02-28T18:41:05Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1873",
    "body": "I have a complicated business logic that dependent on other services (6+ services). \r\nI would like to test part of the business logic service without running FastAPI TestClient while i need to test only part of it, and not full API call.\r\n\r\nIs it possible to reuse build in Dependency Injection  in the Fast API in order to resolve dependent services? \r\n\r\nExample: \r\n```\r\nclass ComputationService:\r\n    def calc():\r\n        # some computations\r\n        return 0\r\n    def transform(i):\r\n        return i+1\r\n\r\nclass BLService:\r\n    __init__(service:ComputationService = Depends(ComputationService)):\r\n        self.service = service\r\n\r\n    def calc_and_transform(self):\r\n        result = self.service.calc()\r\n        transformed = self.service.transform(result)\r\n        return transformed\r\n\r\ndef unit_test():\r\n       blService = **RESOLVE**(BLService);\r\n       result = blService.calc_and_transform()\r\n       # expected is result 1 \r\n```\r\n\r\nAlso, is it designed for such use-cases or it's better to use another dependency injection library in parallel?\r\n\r\nThanks in advance.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1873/comments",
    "author": "ievgennaida",
    "comments": [
      {
        "user": "wozniakty",
        "created_at": "2020-08-19T18:53:17Z",
        "body": "I was actually just about to open a similar issue.  It would be pretty incredible if the devs could actually pull the dependency injection concept out of fastAPI and into a standalone library.  I'm genuinely not smart enough to figure out if that's actually possible, but if so it would be a godsend.\r\n\r\nAn additional reason for this:\r\n\r\nIdeally, in support of long-term best-practices, my service logic should be a library that can be wrapped by _any_ API framework (or maybe it just lives in a lambda?  Or a script?  Why should it be coupled to HTTP at all?)\r\n\r\nIt makes a ton of sense to say that I should essentially have a standalone library for \"doing something\" and then a FastAPI wrapper around the inputs and outputs of that library to HTTP-ify them.  But doing so today is nearly impossible because I find the `Depends` structure really valuable for dependency resolution, and I use it all the way down the stack for a variety of useful reasons."
      },
      {
        "user": "marianhlavac",
        "created_at": "2022-01-09T14:36:52Z",
        "body": "Have anyone else gave this a thought?\r\n\r\nThis seems as a serious limitation of FastAPI's dependency injection, in terms of scalability. Passing dependency reference from the route method to all other services kinda defeats the purpose of DI."
      },
      {
        "user": "arcx-l",
        "created_at": "2022-07-12T12:35:17Z",
        "body": "I think decoupling the FastAPI DI from the request pipeline would really help in a number of scenarios, however I am not sure if this is even a priority or concern for the guys at FastAPI\r\n\r\nI'm gonna post a dirty hack that helped me tap into the DI without having it come from a FastAPI request\r\n\r\n```python\r\nfrom contextlib import AsyncExitStack\r\nfrom typing import Any\r\nfrom typing import AsyncGenerator\r\nfrom typing import Callable\r\nfrom typing import Coroutine\r\nfrom typing import Optional\r\n\r\nfrom fastapi.dependencies.utils import get_dependant\r\nfrom fastapi.dependencies.utils import solve_dependencies\r\nfrom starlette.requests import Request\r\nfrom main import app\r\n\r\n\r\nasync def resolve(callable_dep: Callable) -> Any:\r\n    dependent = get_dependant(path=\"\", call=callable_dep)\r\n    values, _, _, _, _ = await solve_dependencies(\r\n        request=__mock_request(),\r\n        dependant=dependent,\r\n        dependency_overrides_provider=app\r\n    )\r\n    resolved = await __create_instance(callable_dep, **values)\r\n\r\n    if not resolved:\r\n        raise Exception(\"failed to create dependency\")\r\n\r\n    return resolved\r\n\r\n\r\ndef __mock_request() -> Request:\r\n    astack = AsyncExitStack()\r\n    app_instance = {\"app\": app, \"fastapi_astack\": astack}\r\n    scope = {\"type\": \"http\", \"method\": \"GET\", \"headers\": \"\", \"cookies\": \"\", \"query_string\": \"\"}\r\n    return Request({**app_instance, **scope})\r\n\r\n\r\nasync def __create_instance(callable_dep: Callable, **kwargs) -> Optional[Any]:\r\n    instance = callable_dep(**kwargs)\r\n    if isinstance(instance, AsyncGenerator):\r\n        resolved: Optional[Any] = next(iter([i async for i in instance]), None)\r\n    elif isinstance(instance, Coroutine):\r\n        resolved = await instance\r\n    else:\r\n        resolved = instance\r\n    return resolved\r\n\r\n```\r\n\r\nthis is not ideal but it works for anyone who wants to take this and actually do something with it while they figure out a better way to manage their deps"
      }
    ]
  },
  {
    "number": 1858,
    "title": "Optional custom",
    "created_at": "2020-08-09T12:59:13Z",
    "closed_at": "2023-02-28T00:50:12Z",
    "labels": [
      "question",
      "answered",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1858",
    "body": "    email: Optional[str] = Query(..., description=\"email\", min_length=10, max_length=50,regex=\"^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$\")\r\n\r\nresult\r\n\r\n    {\r\n        \"detail\": [\r\n            {\r\n                \"loc\": [\r\n                    \"query\",\r\n                    \"email\"\r\n                ],\r\n                \"msg\": \"string does not match regex \\\"^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\\\.[a-zA-Z0-9_-]+)+$\\\"\",\r\n                \"type\": \"value_error.str.regex\",\r\n                \"ctx\": {\r\n                    \"pattern\": \"^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\\\.[a-zA-Z0-9_-]+)+$\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n\r\n`\"msg\": \"string does not match regex \\\"^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\\\.[a-zA-Z0-9_-]+)+$\\\"\"`\r\nI think it's ugly\r\nHow to custom",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1858/comments",
    "author": "DYH89",
    "comments": [
      {
        "user": "Kludex",
        "created_at": "2020-08-09T21:49:56Z",
        "body": "You can use `EmailStr` from Pydantic:\n\n```\nfrom pydantic import EmailStr\n```"
      },
      {
        "user": "ycd",
        "created_at": "2020-08-19T12:15:08Z",
        "body": "Is the problem resolved @dyhawks? If it is, do you mind closing the issue then?"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-12-13T18:13:52Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-12-13T18:14:19Z",
        "body": "Thanks for the help here @Kludex and @ycd ! :clap: :bow: "
      }
    ]
  },
  {
    "number": 1852,
    "title": "There was a problem when I used JWT token state preservation。",
    "created_at": "2020-08-08T13:13:59Z",
    "closed_at": "2023-02-28T18:40:57Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1852",
    "body": "I'm using **version 0.58**\r\nThere may be an error in 'create'_ access_ Token 'function\r\n\r\nThere was a problem when I used JWT token state preservation。\r\n\r\nIn the example function of the official website, the user logs in to create a token：\r\n\r\n```\r\ndef create_access_token(data: dict, expires_delta: Optional[timedelta] = None):\r\n    to_encode = data.copy()\r\n    if expires_delta:\r\n        expire = datetime.utcnow() + expires_delta  # ------------------------------------------- this line\r\n    else:\r\n        expire = datetime.utcnow() + timedelta(minutes=15)  # ------------------------------------------- this line\r\n    to_encode.update({\"exp\": expire})\r\n    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)\r\n    return encoded_jwt\r\n```\r\n\r\n\r\nIn the validation function：\r\n\r\n```\r\nasync def get_current_user(token: str = Depends(oauth2_scheme)):\r\n    credentials_exception = HTTPException(\r\n        status_code=status.HTTP_401_UNAUTHORIZED,\r\n        detail=\"Could not validate credentials\",\r\n        headers={\"WWW-Authenticate\": \"Bearer\"},\r\n    )\r\n    try:\r\n        payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])   # No matter how to verify, it can be verified correctly,\r\n        username: str = payload.get(\"sub\")\r\n        if username is None:\r\n            raise credentials_exception\r\n        token_data = TokenData(username=username)\r\n    except JWTError:\r\n        raise credentials_exception\r\n    user = get_user(fake_users_db, username=token_data.username)\r\n    if user is None:\r\n        raise credentials_exception\r\n    return user\r\n```\r\n\r\nNo matter how to verify, it can be verified correctly, and the set failure time has no effect. But when I change the expiration time to：\r\n\r\n>  **expire = time.time() + 900  # 900 is seconds**\r\n\r\nit works!\r\n\r\nI don't know if it's a problem, if it's OK. Just ignore it.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1852/comments",
    "author": "zizle",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-12-09T20:41:57Z",
        "body": "@zizle were you having problems with it? Was it not working as expected?"
      },
      {
        "user": "zizle",
        "created_at": "2020-12-14T23:50:55Z",
        "body": "> @zizle were you having problems with it? Was it not working as expected?\r\n\r\nIn login logic, create a user token: expire = datetime.utcnow() + timedelta(minutes=15) It never expired.\r\nbut,this way: expire = time.time() + 900 # seconds=900 It correctly。\r\n\r\nI don't know if it's a problem, if it's OK. Just ignore it."
      }
    ]
  },
  {
    "number": 1841,
    "title": "Access to interactive documents(Swagger UI) request header, date format issues",
    "created_at": "2020-08-05T04:47:17Z",
    "closed_at": "2023-02-28T01:14:13Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1841",
    "body": "This is the result of  Request header to access the Swagger UI : \r\ndate: Wed05 Aug 2020 04:30:17 GMT\r\n\r\nIn fact, It may be like this：\r\ndate: Wed 05 Aug 2020 04:30:17 GMT\r\n\r\nIs there a space missing between 'Wed' and '05'",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1841/comments",
    "author": "IwasIverson",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-12-09T20:16:19Z",
        "body": "Sorry, I can't help you if you don't follow the issue template and provide more information.\r\n\r\nIf you still have problems please create a new issue and follow the template step by step.\r\n\r\nGiven that, I'm gonna close this one."
      }
    ]
  },
  {
    "number": 1829,
    "title": "can support socket.io?",
    "created_at": "2020-08-03T09:33:03Z",
    "closed_at": "2023-02-28T01:14:02Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1829",
    "body": "websocket in fastapi can't deal with namespace and room from socketio\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1829/comments",
    "author": "heyfavour",
    "comments": [
      {
        "user": "phy25",
        "created_at": "2020-08-04T00:27:53Z",
        "body": "Please follow the issue template to search in GitHub issues."
      }
    ]
  },
  {
    "number": 1819,
    "title": "Why I can't access my router?",
    "created_at": "2020-07-31T08:00:12Z",
    "closed_at": "2023-02-28T01:13:50Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1819",
    "body": "main.py\r\n```\r\napp = FastAPI()\r\n```\r\n\r\ncrud.py\r\n```\r\nfrom main import app\r\n\r\n@app.get(\"/posts\")\r\nasync def posts():\r\n    return {\"posts\": 'test'}\r\n```\r\n\r\n```\r\npython uvicorn main:app --reload\r\n```\r\n\r\nI cant' access '/posts'\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1819/comments",
    "author": "jet10000",
    "comments": [
      {
        "user": "Kludex",
        "created_at": "2020-07-31T08:48:39Z",
        "body": "You're trying to return `posts`, but `posts` is the name of the function...  "
      },
      {
        "user": "jet10000",
        "created_at": "2020-07-31T09:42:24Z",
        "body": "> You're trying to return `posts`, but `posts` is the name of the function...\r\n\r\nI updated, so, I can't access /posts"
      },
      {
        "user": "Kludex",
        "created_at": "2020-07-31T10:01:54Z",
        "body": "Your application is not able to \"see\" the `crud.py`. **Maybe** you can add the `crud.py` into your `__init__.py` and it will solve the problem, or...\r\nSuggestion:\r\n```\r\n# main.py\r\nfrom fastapi import FastAPI\r\n\r\nfrom .crud import router\r\n\r\napp = FastAPI()\r\napp.include_router(router)\r\n\r\n# crud.py\r\nfrom fastapi import APIRouter\r\n\r\nrouter = APIRouter()\r\n\r\n@router.get(\"/posts\")\r\nasync def posts():\r\n    return {\"posts\": 'test'}\r\n```"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-12-09T19:35:29Z",
        "body": "Thanks for the help here @Kludex ! :clap: :bow: \r\n\r\nThanks for reporting back and closing the issue :+1:"
      }
    ]
  },
  {
    "number": 1794,
    "title": "Reopen the issue #1037",
    "created_at": "2020-07-26T23:26:36Z",
    "closed_at": "2023-02-28T01:13:10Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1794",
    "body": "Having similar problem, where I want to just input the access_token to the authorization field in the header but the swagger UI does not use it while accessing the API.\r\nTagging the issue #1037 \r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1794/comments",
    "author": "prithvipatl",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-12-09T18:28:56Z",
        "body": "I'm sorry, I can't help you without more information. Please keep and follow the issue template. If you still have problems, please create a new issue following the issue template, step by step.\r\n\r\nGiven that, I'm gonna close this one."
      }
    ]
  },
  {
    "number": 1781,
    "title": "How to transform db column to different json field",
    "created_at": "2020-07-23T07:47:38Z",
    "closed_at": "2023-02-28T01:12:38Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1781",
    "body": "Im new to Fast API. I have followed the guide on sql databases and got it to work. Thank you for this awesome framework. \r\nJust a question on how do I present the json fields using different field name. This is because there is a requirement to hide the actual column name of the database.\r\ndb column: \r\nbuilding_id\r\n\r\nexpected json response\r\nbuildingId\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1781/comments",
    "author": "letsautom8",
    "comments": [
      {
        "user": "letsautom8",
        "created_at": "2020-07-23T08:02:09Z",
        "body": "Sorry. Im closing. This is is sqlalchemy question. For those who want to map their db field to a different name use:\r\n```\r\nclass User(Base):\r\n    __tablename__ = 'user'\r\n    id = Column('user_id', Integer, primary_key=True)\r\n    name = Column('user_name', String(50))\r\n```"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-12-08T17:33:56Z",
        "body": "Thanks for reporting back and closing the issue :+1:"
      }
    ]
  },
  {
    "number": 1777,
    "title": "How to define and use global exceptions？",
    "created_at": "2020-07-23T01:34:33Z",
    "closed_at": "2023-02-28T01:12:23Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1777",
    "body": "\r\n\r\n```Python\r\nimport uvicorn\r\nfrom fastapi import FastAPI\r\nfrom flask import Request\r\nfrom fastapi.responses import JSONResponse\r\nfrom Api.api import api_router\r\n\r\n\r\nclass UnicornException(Exception):\r\n    def __init__(self, name: str):\r\n        self.name = name\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.exception_handler(UnicornException)\r\nasync def unicorn_exception_handler(request: Request, exc: UnicornException):\r\n    return JSONResponse(\r\n        status_code=418,\r\n        content={\"message\": f\"Oops! {exc.name} did something. There goes a rainbow...\"},\r\n    )\r\n\r\n\r\napp.include_router(api_router, prefix=\"/api/v1\")\r\n\r\nif __name__ == \"__main__\":\r\n    uvicorn.run(\"Start:app\", host=\"0.0.0.0\", port=8080, log_level=\"info\")\r\n\r\n```\r\n```python3\r\nfrom fastapi import APIRouter\r\n\r\nfrom Api import webApi\r\n\r\napi_router = APIRouter()\r\napi_router.include_router(webApi.router, tags=[\"webApi\"])\r\n\r\n```\r\n```python3\r\nfrom fastapi import APIRouter\r\n\r\nfrom Start import UnicornException\r\nfrom WebInit import test\r\nfrom allmain.StartInit import stop_all_containers, get_ssh_public_key, request_yml_data\r\nfrom bean.YmalBean import Yml\r\n\r\nrouter = APIRouter()\r\n\r\n\r\n@router.get(\"/1\")\r\ndef read_root():\r\n    # StartInit.get_ssh_public_key()\r\n    raise UnicornException(name=\"asdasd\")\r\n```\r\n```bash\r\nTraceback (most recent call last):\r\n  File \"/home/k/PycharmProjects/auto/Start.py\", line 5, in <module>\r\n    from Api.api import api_router\r\n  File \"/home/k/PycharmProjects/auto/Api/api.py\", line 3, in <module>\r\n    from Api import webApi\r\n  File \"/home/k/PycharmProjects/auto/Api/webApi.py\", line 3, in <module>\r\n    from Start import UnicornException\r\n  File \"/home/k/PycharmProjects/auto/Start.py\", line 5, in <module>\r\n    from Api.api import api_router\r\nImportError: cannot import name 'api_router'\r\n\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1777/comments",
    "author": "lnsane",
    "comments": [
      {
        "user": "MacMacky",
        "created_at": "2020-07-23T09:00:39Z",
        "body": "You're having a __Circular Import__ problem. I suggest you do this.\r\n\r\n__Start.py__ - under root folder\r\n```py\r\nimport uvicorn\r\nfrom fastapi import FastAPI\r\nfrom flask import Request\r\nfrom fastapi.responses import JSONResponse\r\nfrom Api.api import api_router\r\nfrom exceptions import main # or from exceptions.main import UnicornException\r\n\r\napp = FastAPI()\r\n\r\n@app.exception_handler(main.UnicornException)\r\nasync def unicorn_exception_handler(request: Request, exc: main.UnicornException):\r\n    return JSONResponse(\r\n        status_code=418,\r\n        content={\r\n            \"message\": f\"Oops! {exc.name} did something. There goes a rainbow...\"},\r\n    )\r\n\r\n\r\napp.include_router(api_router, prefix=\"/api/v1\")\r\n\r\nif __name__ == \"__main__\":\r\n    uvicorn.run(\"Start:app\", host=\"0.0.0.0\", port=8080, log_level=\"info\")\r\n```\r\n\r\n__Api/api.py__\r\n```py\r\nfrom fastapi import APIRouter\r\n\r\nfrom Api import webApi\r\n\r\napi_router = APIRouter()\r\napi_router.include_router(webApi.router, tags=[\"webApi\"])\r\n```\r\n\r\n__Api/webApi.py__\r\n```py\r\nfrom fastapi import APIRouter\r\nfrom exceptions import main # or from exceptions.main import UnicornException\r\n\r\nrouter = APIRouter()\r\n\r\n@router.get(\"/1\")\r\ndef read_root():\r\n    raise main.UnicornException(name=\"Error\")\r\n```\r\n\r\n__exceptions/main.py__\r\n```py\r\n\r\nclass UnicornException(Exception):\r\n    def __init__(self, name: str):\r\n        self.name = name\r\n\r\n\r\nclass AnotherException(Exception):\r\n    def __init__(self, message: str, status: int):\r\n        self.message = message\r\n        self.status = status\r\n```\r\n\r\n"
      },
      {
        "user": "lnsane",
        "created_at": "2020-07-23T11:17:13Z",
        "body": "> You're having a **Circular Import** problem. I suggest you do this.\r\n> \r\n> **Start.py** - under root folder\r\n> \r\n> ```python\r\n> import uvicorn\r\n> from fastapi import FastAPI\r\n> from flask import Request\r\n> from fastapi.responses import JSONResponse\r\n> from Api.api import api_router\r\n> from exceptions import main # or from exceptions.main import UnicornException\r\n> \r\n> app = FastAPI()\r\n> \r\n> @app.exception_handler(main.UnicornException)\r\n> async def unicorn_exception_handler(request: Request, exc: main.UnicornException):\r\n>     return JSONResponse(\r\n>         status_code=418,\r\n>         content={\r\n>             \"message\": f\"Oops! {exc.name} did something. There goes a rainbow...\"},\r\n>     )\r\n> \r\n> \r\n> app.include_router(api_router, prefix=\"/api/v1\")\r\n> \r\n> if __name__ == \"__main__\":\r\n>     uvicorn.run(\"Start:app\", host=\"0.0.0.0\", port=8080, log_level=\"info\")\r\n> ```\r\n> \r\n> **Api/api.py**\r\n> \r\n> ```python\r\n> from fastapi import APIRouter\r\n> \r\n> from Api import webApi\r\n> \r\n> api_router = APIRouter()\r\n> api_router.include_router(webApi.router, tags=[\"webApi\"])\r\n> ```\r\n> \r\n> **Api/webApi.py**\r\n> \r\n> ```python\r\n> from fastapi import APIRouter\r\n> from exceptions import main # or from exceptions.main import UnicornException\r\n> \r\n> router = APIRouter()\r\n> \r\n> @router.get(\"/1\")\r\n> def read_root():\r\n>     raise main.UnicornException(name=\"Error\")\r\n> ```\r\n> \r\n> **exceptions/main.py**\r\n> \r\n> ```python\r\n> class UnicornException(Exception):\r\n>     def __init__(self, name: str):\r\n>         self.name = name\r\n> \r\n> \r\n> class AnotherException(Exception):\r\n>     def __init__(self, message: str, status: int):\r\n>         self.message = message\r\n>         self.status = status\r\n> ```\r\n\r\nis so good! thanks"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-12-08T17:38:49Z",
        "body": "Thanks for the help here @MacMacky ! :clap: :bow: \r\n\r\nThanks for reporting back and closing the issue @lnsane  :+1:"
      }
    ]
  },
  {
    "number": 1772,
    "title": "mutipart/form-data not working on TestClient",
    "created_at": "2020-07-22T17:57:09Z",
    "closed_at": "2023-02-28T01:12:15Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1772",
    "body": "```python\r\nfrom fastapi import APIRouter, File, Form, UploadFile\r\n\r\nrouter = APIRouter()\r\n\r\n@router.post(\"/upload\", response_model=MyResponseModel, summary=\"user csv upload api\")\r\nasync def upload(\r\n    user_id: int = Form(..., example=1),\r\n    csv_file: UploadFile = File(...),\r\n):\r\n    \"\"\"\r\n    some code...\r\n    \"\"\"\r\n```\r\n\r\nI checked on swagger(/docs). It was successful.\r\n\r\n\r\nbut, failed in test code\r\n\r\n```python\r\nfrom myapp import app\r\n\r\nclass UploadTest(unittest.TestCase):\r\n    client = TestClient(app)\r\n\r\n    def test_upload(self):\r\n        with csv.open(\"rb\") as f:\r\n            filebody = f.read()\r\n        res = self.client.post(\r\n            \"/api/upload\",\r\n            data={\r\n                \"user_id\": 1\r\n            },\r\n            files={\r\n                \"csv_file\": (\"filename.csv\", filebody),\r\n            },\r\n            headers={\"Content-Type\": \"multipart/form-data\"})\r\n        self.assertEqual(status.HTTP_200_OK, res.status_code)\r\n        MyResponseModel.parse_obj(res.json()[\"data\"])\r\n```\r\n\r\n```\r\nError getting request body: can't concat NoneType to bytes\r\n{'detail': 'There was an error parsing the body'}\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1772/comments",
    "author": "cln-m4rie",
    "comments": [
      {
        "user": "marodev",
        "created_at": "2020-07-23T09:13:24Z",
        "body": "It's not an issue related to FastAPI. \r\n\r\nRequests sets the content-type header automatically if you use files. \r\n\r\nThus, delete: `headers={\"Content-Type\": \"multipart/form-data\"}`\r\n\r\nOtherwise, you may have to deal with boundary (`Content-Type: multipart/form-data;boundary=\"boundary\"`) which is not what you want :)\r\n\r\n"
      },
      {
        "user": "cln-m4rie",
        "created_at": "2020-07-23T16:37:13Z",
        "body": "@marodev \r\n\r\n> delete: headers={\"Content-Type\": \"multipart/form-data\"}\r\n\r\nThank you!\r\n\r\nIt's successful :tada:"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-12-08T17:21:06Z",
        "body": "Thanks for the help here @marodev ! :clap: :bow: \r\n\r\nThanks for reporting back and closing the issue @cln-m4rie  :+1:"
      }
    ]
  },
  {
    "number": 1712,
    "title": "ResponseModel does not force model",
    "created_at": "2020-07-14T19:12:30Z",
    "closed_at": "2023-02-28T01:10:45Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1712",
    "body": "Is there a way to force the the response to be equal the response_model?\r\n\r\n```\r\nclass Item(BaseModel):\r\n    id: int\r\n    shortcut: str\r\n    name: str\r\n\r\n@app.get(\"/items/{item_id}\", response_model=Item)\r\nasync def get_all_items(item_id: int):\r\n    \"\"\"Return all assocations.\"\"\"\r\n    item = {\"name\": \"name\", \"size\": \"size\"}\r\n    return JSONResponse(status_code=status.HTTP_200_OK, content=item)\r\n```\r\n\r\nI would expect, that the response failed cause it is not aligned with the model. Any advice?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1712/comments",
    "author": "datenwort",
    "comments": [
      {
        "user": "Kludex",
        "created_at": "2020-07-14T20:25:17Z",
        "body": "You should not return a `JSONResponse` instance if you want FastAPI to handle your models. \r\nRemember that `get` is a decorator which already uses `JSONResponse` (to be honest is not a `JSONResponse` but is a parent or child class if I remember correctly). How we handle it in FastAPI:\r\n```\r\nclass Item(BaseModel):\r\n    id: int\r\n    shortcut: str\r\n    name: str\r\n\r\n@app.get(\"/items/{item_id}\", response_model=Item)\r\nasync def get_all_items(item_id: int):\r\n    \"\"\"Return all assocations.\"\"\"\r\n    item = {\"name\": \"name\", \"size\": \"size\"}\r\n    return item\r\n```\r\nBut this will raise an error. Can you see why? \r\n\r\n**SPOILER ALERT!!!**\r\nBecause you have the field `shortcut` and `id` are required ones!!! How do we solve it? There are several ways, I'll show you the simplest for me:\r\n```\r\nclass Item(BaseModel):\r\n    id: Optional[int]\r\n    shortcut: Optional[str]\r\n    name: str\r\n\r\n@app.get(\"/items/{item_id}\", response_model=Item)\r\nasync def get_all_items(item_id: int):\r\n    \"\"\"Return all assocations.\"\"\"\r\n    item = {\"name\": \"name\", \"size\": \"size\"}\r\n    return item\r\n```"
      },
      {
        "user": "datenwort",
        "created_at": "2020-07-14T20:35:32Z",
        "body": "As I mentioned, I was expecting the error. Thanks for clarify how to return it.\r\nWill add the status code with the response object instead."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-12-06T18:24:13Z",
        "body": "Thanks for the help here @Kludex ! :clap: :bow: \r\n\r\nThanks for reporting back and closing the issue @datenwort  :+1:"
      }
    ]
  },
  {
    "number": 1698,
    "title": "When Depends is not evaluated",
    "created_at": "2020-07-09T22:34:01Z",
    "closed_at": "2023-02-28T01:10:15Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1698",
    "body": "Hi folks.\r\n\r\nI think I'm missing something profound with Dependency injection concept in FastAPI.\r\n\r\nLet's take this example: I have a function that is called somewhere inside the call chain of processing request and it has dependency. This is NOT the top-level api function which is usually marked by decorator like this `@router.get('/some_path')`\r\n\r\n```\r\ndef some_callable_here():\r\n     ...\r\n     return some_value\r\n\r\nasync def do_something(some_var: str = Depends(some_callable_here)):\r\n     # do something\r\n```\r\nMy understanding of what happens here: if you don't pass value for `some_var` when calling `do_something`, this value gets injected using `Depends` by calling `some_callable_here`. \r\n\r\nMy question: what do you absolutely need for this `Depends` to be evaluated? What I get in my is that `some_var` has value `Depends(...)` inside `do_something` which means that `some_callable_here` has never been evaluated. This question seems very abstract, but I'm lost and I don't know how to approach this problem. Maybe I can get to the answer myself if you point me to the part of code where `Depends` gets evaluated.\r\n\r\nThank you!\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1698/comments",
    "author": "swsvc",
    "comments": [
      {
        "user": "swsvc",
        "created_at": "2020-07-10T08:25:39Z",
        "body": "Nevermind. In my case dependency injection won't work indeed. Hint for people who will struggle with the same problem: don't mix business logic with framework entities"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-12-06T17:59:53Z",
        "body": "Thanks for reporting back and closing the issue :+1:"
      }
    ]
  },
  {
    "number": 1695,
    "title": "How to flush cache with many processes?",
    "created_at": "2020-07-09T04:46:56Z",
    "closed_at": "2023-02-28T01:10:13Z",
    "labels": [
      "question",
      "answered",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1695",
    "body": "Hi folks\r\n\r\nI have a cache (dict key value) + redis cache with my fastapi app\r\n\r\nSince i’m doing process level cache (with small ttl vs redis ttl) i want know if is possible to make a flush cache process to flush the internal process cache of all process running my app\r\n\r\nI’m using gunicorn+uvicorn and a k8s cluster running many replicas\r\n\r\nThe idea is create the inter process flush, and at a second stage propagate the flush to all replicas (but this is the easy part of the problem)\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1695/comments",
    "author": "rspadim",
    "comments": [
      {
        "user": "rspadim",
        "created_at": "2020-07-11T03:04:29Z",
        "body": "(My first option is `HUP` gunicorn, but i don’t know if it’s “ok”)"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-12-06T18:05:02Z",
        "body": "Hey, I'm not sure I understand the question, I think maybe it's not related to FastAPI.\r\n\r\nBut if you still have problems, please create a new issue following the template."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2021-05-16T18:29:57Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 1694,
    "title": "How to run the return variable coroutine before starting the application?",
    "created_at": "2020-07-08T17:58:35Z",
    "closed_at": "2023-02-28T01:10:09Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1694",
    "body": "Hi, experts.\r\n\r\nI want to create a global connection pool to Redis when the application starts using **aioredis**. I cannot use the startup event because I need to create a global variable. I was trying to do something like that:\r\n\r\n### main.py\r\n```python\r\nfrom fastapi import FastAPI\r\nfrom connections import redis\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.on_event('shutdown')\r\nasync def shutdown_event():\r\n    redis.close()\r\n    await redis.wait_closed()\r\n\r\n\r\n@app.get('/')\r\nasync def redis_keys():\r\n    rkey_list = await redis.keys('*')\r\n\r\n    return rkey_list\r\n```\r\n\r\n### connections.py\r\n```python\r\nimport aioredis\r\nimport asyncio\r\n\r\n\r\nasync def get_redis_pool() -> aioredis.Redis:\r\n    redis = await aioredis.create_redis_pool(\"redis://localhost:6379/0?encoding=utf-8\")\r\n\r\n    return redis\r\n\r\n\r\nredis: aioredis.Redis = asyncio.run(get_redis_pool())\r\n```\r\n\r\nand got an error `RuntimeError: asyncio.run() cannot be called from a running event loop`.\r\n\r\nIs there any way I can run a coroutine when starting an application to create a global variable?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1694/comments",
    "author": "asviel",
    "comments": [
      {
        "user": "old-syniex",
        "created_at": "2020-07-09T06:36:04Z",
        "body": "Is there a reason you want to use global variable instead of putting the redis in the app.state?"
      },
      {
        "user": "asviel",
        "created_at": "2020-07-09T10:00:22Z",
        "body": "> Is there a reason you want to use global variable instead of putting the redis in the app.state?\r\n\r\nYes, there is. I need to use the connection pool not only in path operation functions. And when you import `app` into another module (to access `app.state.redis`), an error occurs when launching the application:\r\n`Error loading ASGI app. Could not import module \"main\".`.\r\n\r\n\r\n### main.py\r\n\r\n```python\r\nfrom fastapi import FastAPI\r\nfrom connections import get_redis_pool\r\nfrom red import get_all\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.on_event('startup')\r\nasync def starup_event():\r\n    app.state.redis = await get_redis_pool()\r\n\r\n\r\n@app.on_event('shutdown')\r\nasync def shutdown_event():\r\n    app.state.redis.close()\r\n    await app.state.redis.wait_closed()\r\n\r\n\r\n@app.get('/')\r\nasync def redis_keys():\r\n    return await get_all\r\n```\r\n\r\n### red.py\r\n\r\n```python\r\nfrom main import app\r\n\r\n\r\nasync def get_all():\r\n    return await app.state.redis.keys('*')\r\n```\r\n\r\n### connections.py\r\n\r\n```python\r\nimport aioredis\r\n\r\n\r\nasync def get_redis_pool() -> aioredis.Redis:\r\n    redis = await aioredis.create_redis_pool(\"redis://localhost:6379/0?encoding=utf-8\")\r\n\r\n    return redis\r\n```"
      },
      {
        "user": "MacMacky",
        "created_at": "2020-07-15T19:32:16Z",
        "body": "@asviel \r\nHi, You're having a circular import problem.  Your <code>red.py</code> depends on <code>main.py</code> and vice versa.\r\n\r\n### connections.py\r\n```py\r\nfrom aioredis import create_redis_pool, Redis\r\n\r\n\r\nasync def get_redis_pool() -> Redis:\r\n    redis = await create_redis_pool(\"redis://localhost:6379/0?encoding=utf-8\")\r\n\r\n    return redis\r\n```\r\n\r\n### main.py\r\n```py\r\nfrom fastapi import FastAPI\r\nfrom connections import get_redis_pool\r\nfrom uvicorn import run\r\n\r\napp = FastAPI()\r\n\r\n\r\nasync def get_all():\r\n    return await app.state.redis.keys('*')\r\n\r\n\r\n@app.on_event('startup')\r\nasync def starup_event():\r\n    app.state.redis = await get_redis_pool()\r\n\r\n\r\n@app.on_event('shutdown')\r\nasync def shutdown_event():\r\n    app.state.redis.close()\r\n    await app.state.redis.wait_closed()\r\n\r\n\r\n@app.get('/')\r\nasync def redis_keys():\r\n    return get_all()\r\n\r\n\r\nif __name__ == '__main__':\r\n    run(\"main:app\", port=3000, reload=True)\r\n```"
      },
      {
        "user": "asviel",
        "created_at": "2020-07-26T15:02:48Z",
        "body": "@MacMacky Yes, that's how I showed you why I can't use the solution suggested above."
      },
      {
        "user": "constantinblanariu",
        "created_at": "2020-12-15T13:47:12Z",
        "body": "@asviel you've probably solved this by now, but here is a working solution:\r\n\r\n### connections.py\r\n\r\n```python\r\nfrom typing import Optional\r\n\r\nfrom aioredis import Redis, create_redis_pool\r\n\r\n\r\nclass RedisCache:\r\n    \r\n    def __init__(self):\r\n        self.redis_cache: Optional[Redis] = None\r\n        \r\n    async def init_cache(self):\r\n        self.redis_cache = await create_redis_pool(\"redis://localhost:6379/0?encoding=utf-8\")\r\n\r\n    async def keys(self, pattern):\r\n        return await self.redis_cache.keys(pattern)\r\n\r\n    async def set(self, key, value):\r\n        return await self.redis_cache.set(key, value)\r\n    \r\n    async def get(self, key):\r\n        return await self.redis_cache.get(key)\r\n    \r\n    async def close(self):\r\n        self.redis_cache.close()\r\n        await self.redis_cache.wait_closed()\r\n\r\n\r\nredis_cache = RedisCache()\r\n```\r\n\r\n### main.py\r\n\r\n```python\r\nfrom fastapi import FastAPI\r\nfrom uvicorn import run\r\n\r\nfrom connections import redis_cache\r\n\r\napp = FastAPI()\r\n\r\n\r\nasync def get_all():\r\n    return await redis_cache.keys('*')\r\n\r\n\r\n@app.on_event('startup')\r\nasync def starup_event():\r\n    await redis_cache.init_cache()\r\n\r\n\r\n@app.on_event('shutdown')\r\nasync def shutdown_event():\r\n    redis_cache.close()\r\n    await redis_cache.wait_closed()\r\n\r\n\r\n@app.get('/')\r\nasync def redis_keys():\r\n    return await get_all()\r\n\r\n\r\nif __name__ == '__main__':\r\n    run(\"main:app\", port=3000, reload=True)\r\n```\r\n\r\nThis allows you to import redis_cache in other modules without any problems.\r\n"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-12-27T18:57:14Z",
        "body": "Thanks for the help here everyone! :clap: :bow: \r\n\r\nThanks for reporting back and closing the issue :+1:"
      },
      {
        "user": "yuchen001",
        "created_at": "2021-02-28T10:17:54Z",
        "body": "> Is there a reason you want to use global variable instead of putting the redis in the app.state?\r\n\r\nput on app.state wiil appear ImportError... My router is not main.py."
      },
      {
        "user": "SumathiGit",
        "created_at": "2021-08-24T10:27:07Z",
        "body": "> @asviel you've probably solved this by now, but here is a working solution:\r\n> \r\n> ### connections.py\r\n> ```python\r\n> from typing import Optional\r\n> \r\n> from aioredis import Redis, create_redis_pool\r\n> \r\n> \r\n> class RedisCache:\r\n>     \r\n>     def __init__(self):\r\n>         self.redis_cache: Optional[Redis] = None\r\n>         \r\n>     async def init_cache(self):\r\n>         self.redis_cache = await create_redis_pool(\"redis://localhost:6379/0?encoding=utf-8\")\r\n> \r\n>     async def keys(self, pattern):\r\n>         return await self.redis_cache.keys(pattern)\r\n> \r\n>     async def set(self, key, value):\r\n>         return await self.redis_cache.set(key, value)\r\n>     \r\n>     async def get(self, key):\r\n>         return await self.redis_cache.get(key)\r\n>     \r\n>     async def close(self):\r\n>         self.redis_cache.close()\r\n>         await self.redis_cache.wait_closed()\r\n> \r\n> \r\n> redis_cache = RedisCache()\r\n> ```\r\n> \r\n> ### main.py\r\n> ```python\r\n> from fastapi import FastAPI\r\n> from uvicorn import run\r\n> \r\n> from connections import redis_cache\r\n> \r\n> app = FastAPI()\r\n> \r\n> \r\n> async def get_all():\r\n>     return await redis_cache.keys('*')\r\n> \r\n> \r\n> @app.on_event('startup')\r\n> async def starup_event():\r\n>     await redis_cache.init_cache()\r\n> \r\n> \r\n> @app.on_event('shutdown')\r\n> async def shutdown_event():\r\n>     redis_cache.close()\r\n>     await redis_cache.wait_closed()\r\n> \r\n> \r\n> @app.get('/')\r\n> async def redis_keys():\r\n>     return await get_all()\r\n> \r\n> \r\n> if __name__ == '__main__':\r\n>     run(\"main:app\", port=3000, reload=True)\r\n> ```\r\n> \r\n> This allows you to import redis_cache in other modules without any problems.\r\n\r\nThis code helps me to understand what is going on between redis and Fastapi >>>> Thankyou for sharing this >>>> keep help others ..."
      }
    ]
  },
  {
    "number": 1688,
    "title": "stream music with websocket",
    "created_at": "2020-07-08T09:17:22Z",
    "closed_at": "2023-02-28T01:09:51Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1688",
    "body": "is it possible to stream music with tcp websocket?\r\n\r\ni want to chunk a music to 10 pieces and each time send them to client\r\nand if client  seek the music the server send from the second requested\r\ni need this for low latency\r\n\r\nthanks for your help",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1688/comments",
    "author": "hypy13",
    "comments": [
      {
        "user": "includeamin",
        "created_at": "2020-10-13T18:30:47Z",
        "body": "what is your use-case?\r\nis that live streaming or offline streaming?"
      },
      {
        "user": "hypy13",
        "created_at": "2020-10-14T07:54:23Z",
        "body": "@includeamin\r\nits online streaming \r\ni want to stream music to client by streaming like spotify\r\nafter searching a lot i found hls (HTTP LIVE STREAMING) and its good for now\r\n\r\nby the way hls is ok im going to close the issue"
      },
      {
        "user": "includeamin",
        "created_at": "2020-10-14T07:56:52Z",
        "body": "> @includeamin\r\n> i want to stream music to client by streaming like spotify\r\n> after searching a lot i found hls (HTTP LIVE STREAMING) and its good for now\r\n\r\nI wanted to say exactly the same things :)).  HLS, Dash .etc"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-09T17:34:21Z",
        "body": "Thanks for the help @includeamin ! ☕ \r\n\r\nAnd thanks @hypy13 for coming back to close the issue.\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      }
    ]
  },
  {
    "number": 1668,
    "title": "BackgroundTasks Integration Tests",
    "created_at": "2020-07-03T10:32:36Z",
    "closed_at": "2023-02-28T18:39:41Z",
    "labels": [
      "question",
      "investigate",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1668",
    "body": "I want to be able to create an **integration** test based on an endpoint that creates a background task.\r\nThe task function receives a session object and will be used to create/update rows in a database.\r\n\r\nWhat is the best practice for it?\r\nIs it possible to not depend on time.sleep ? I also don't want to directly use a db session in case we change our SQLAlchemy ORM to an async ORM in the future (I don't want this to affect the tests).\r\n\r\nThank you in advance! By the way, awesome community!\r\n\r\n### Example\r\n\r\n```Python\r\nfrom fastapi import FastAPI, Depends\r\n\r\napp = FastAPI()\r\n\r\ndef write(session, name):\r\n    // Add a row to the database.\r\n\r\n@app.get(\"/\")\r\ndef read_root(task: BackgroundTasks, session = Depends(get_session):\r\n    task.add_task(write, session, \"name\") // will be executed after return\r\n    return {\"success\": True}\r\n```\r\n\r\n### Environment\r\n\r\n* FastAPI Version 0.58.1:\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1668/comments",
    "author": "artiom-gesp",
    "comments": [
      {
        "user": "rspadim",
        "created_at": "2020-07-10T23:33:23Z",
        "body": "Mock the add task, and call the api using testclient from fastapi"
      }
    ]
  },
  {
    "number": 1657,
    "title": "Async Zeep with Fastapi",
    "created_at": "2020-06-30T16:23:23Z",
    "closed_at": "2023-02-28T08:51:04Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1657",
    "body": "Hi everyone,\r\nI try to use the Zeep as a soap client with Fastapi in asynchronous mode. \r\nBut the problem is that for Zeep transport need a event loop. \r\nWhen I get a command  loop = asyncio.get_running_loop(), \r\na error occurs: WSDL loading is not asynchronous yet. Instantiate the zeep client outside the asyncio event loop. \r\nHow to fix it ?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1657/comments",
    "author": "Harry2049",
    "comments": [
      {
        "user": "phy25",
        "created_at": "2020-06-30T16:37:03Z",
        "body": "Please follow the question template. Also it looks like it's more of a Zeep issue?"
      },
      {
        "user": "ihakh",
        "created_at": "2020-07-01T07:41:49Z",
        "body": "I think fastapi run none async fun outside a loop\r\nasync functions need to run inside a async one\r\nyou did not provide your code but I guess you need to call `loop = asyncio.get_running_loop()` inside a async function not a sync one "
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-12-06T16:43:26Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-12-06T16:47:59Z",
        "body": "Thanks for the help here everyone!\r\n\r\n@Harry2049 if you still have problems, and if they apply to FastAPI, please create a new issue following the template."
      }
    ]
  },
  {
    "number": 1647,
    "title": "I'm having problems to save(persist) a file in disc with UploadFile",
    "created_at": "2020-06-29T19:20:44Z",
    "closed_at": "2023-02-28T08:50:43Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1647",
    "body": "I need to save a file to disk, but so far I have only been able to clone the file, but without content on it (invalid).\r\nCan anyone help me?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1647/comments",
    "author": "gkramer01",
    "comments": [
      {
        "user": "phy25",
        "created_at": "2020-06-30T01:18:20Z",
        "body": "Please follow the template to ask the question. It at least asks you to provide the code you are using."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-11-26T07:52:05Z",
        "body": "Thanks for the help here @phy25! :+1: \r\n\r\nAnd thanks @gkramer01 for closing the issue. If you still have problems, you can create a new one following the template. :nerd_face: "
      }
    ]
  },
  {
    "number": 1615,
    "title": "Using `Depends` for injecting a dependency in SQLAlchemy ORM class method fails",
    "created_at": "2020-06-24T04:06:42Z",
    "closed_at": "2023-02-28T08:49:50Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1615",
    "body": "Application dependencies:\r\n```\r\n[tool.poetry.dependencies]\r\npython = \"^3.6\"\r\nfastapi = \"^0.55.1\"\r\nuvicorn = \"^0.11.5\"\r\nsqlalchemy = \"1.3.17\"\r\n```\r\nI'm interested in leveraging the **Dependency Injection** system via `Depends` within a declarative model such that I can directly implement class methods on the `Query` object (`sqlalchemy.orm.query.Query`). I have constructed the following ORM mapping and route:\r\n```Python\r\nfrom fastapi import APIRouter, Depends\r\nfrom sqlalchemy import Column, DateTime, Integer, String\r\nfrom sqlalchemy.ext.declarative import declarative_base\r\nfrom sqlalchemy.orm import Session, sessionmaker\r\nfrom app.etc.config import engine\r\n\r\n\r\nSessionLocal = sessionmaker(bind=engine())\r\nBase = declarative_base()\r\nrouter = APIRouter()\r\n\r\n\r\ndef query_session():\r\n    try:\r\n        db = SessionLocal()\r\n        yield db\r\n    finally:\r\n        db.close()\r\n\r\n\r\nclass Post(Base):\r\n    __tablename__ = 'posts'\r\n\r\n    id = Column(Integer, primary_key=True)\r\n    title = Column(String)\r\n    author = Column(String)\r\n    created_at = Column(DateTime)\r\n\r\n    @classmethod\r\n    def all(class_, db: Session = Depends(query_session)):\r\n        return db.query(class_).all()\r\n\r\n\r\n@router.get(\"/posts\")\r\nasync def get_posts():\r\n    return Post.all()\r\n```\r\nThe server returns the following exception:\r\n```\r\nINFO:     127.0.0.1:50934 - \"GET /posts HTTP/1.1\" 500 Internal Server Error\r\nERROR:    Exception in ASGI application\r\n.\r\n.\r\n.\r\nreturn db.query(class_).all()\r\nAttributeError: 'Depends' object has no attribute 'query'\r\n```\r\nI recognize this implementation is somewhat unorthodox but my intent is to group frequently used getters within the declarative ORM class. Common practices indicate to pass the session to the _path operation function_ parameters.\r\n```Python\r\n@router.get(\"/posts\")\r\nasync def get_posts(db: Session = Depends(query_session)):\r\n    return db.query(Post).all()\r\n```\r\nHowever, if my initial approach is feasible, I would appreciate some guidance. Thank you in advance for your response.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1615/comments",
    "author": "townegr",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-11-11T18:59:46Z",
        "body": "`Depends()` is a utility for FastAPI, not for SQLAlchemy classes.\r\n\r\nIf you want to put logic in the SQLAlchemy class you should still pass the session, so it would be something like:\r\n\r\n```Python\r\nclass Post(Base):\r\n    __tablename__ = 'posts'\r\n\r\n    id = Column(Integer, primary_key=True)\r\n    title = Column(String)\r\n    author = Column(String)\r\n    created_at = Column(DateTime)\r\n\r\n    @classmethod\r\n    def all(class_, db: Session):\r\n        return db.query(class_).all()\r\n```\r\n\r\nAnd you would call it with something like:\r\n\r\n```Python\r\n@router.get(\"/posts\")\r\ndef get_posts(db: Session = Depends(query_session)):\r\n    return Post.all(db)\r\n```\r\n\r\nNevertheless, I would suggest you keep the utilities and functions to handle data apart from the models."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2021-05-16T18:30:05Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 1613,
    "title": "How to organize code about DB",
    "created_at": "2020-06-23T13:12:45Z",
    "closed_at": "2023-02-28T08:49:47Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1613",
    "body": "```\r\n@router.get(\r\n  '/users',\r\n  response_model=List[UserInDB]\r\n)\r\nasync def get_users_from_db(\r\n  db: Session = Depends(get_db),\r\n  user: User = Depends(get_current_user)\r\n):\r\n\r\n  users = get_users(db)\r\n  return users\r\n\r\nasync def get_current_user(db: Session, token: str = Depends(oauth2_scheme)) -> User:\r\n  credentials_exception = HTTPException(\r\n    status_code=status.HTTP_401_UNAUTHORIZED,\r\n    detail='Could not validate credentials',\r\n    headers={'WWW-Authenticate': 'Bear'}\r\n  )\r\n  try:\r\n    payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])\r\n    username: str = payload.get('sub')\r\n    if username is None:\r\n      raise credentials_exception\r\n  except jwt.PyJWTError:\r\n    raise credentials_exception\r\n  user = get_user_by_username(db, username)\r\n  if user is None:\r\n    raise credentials_exception\r\n  return user\r\n\r\n```\r\nneed to connect the DB twice?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1613/comments",
    "author": "q98765543221",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-11-11T18:55:03Z",
        "body": "I'm sorry, I don't understand the question. Please use the new issue template, that way I (or someone else) can help you."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2021-05-16T18:30:07Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 1604,
    "title": "OAuth2PasswordRequestForm   always error: 'There was an error parsing the body'",
    "created_at": "2020-06-20T04:27:29Z",
    "closed_at": "2023-02-28T08:49:34Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1604",
    "body": "if i use OAuth2PasswordRequestForm,  then  response : \"detail\": \"There was an error parsing the body\"\r\n\r\nbut i use body  everything is ok!  why?\r\n\r\n`\r\n@router.post(\"/token\", response_model=schemas.Token)\r\nasync def login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends(), db:Session = Depends(get_db)):\r\n# async def login_for_access_token(*, username: str = Body(...), password: str = Body(...), db:Session = Depends(get_db)):\r\n    user = authenticate_user(db, form_data.username, form_data.password)\r\n    if not user:\r\n        raise HTTPException(\r\n            status_code=status.HTTP_401_UNAUTHORIZED,\r\n            detail=\"Incorrect username or password\",\r\n            headers={\"WWW-Authenticate\": \"Bearer\"},\r\n        )\r\n    access_token_expires = timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\r\n    access_token = create_access_token(\r\n        data={\"sub\": user.username}, expires_delta=access_token_expires\r\n    )\r\n    return {\"access_token\": access_token, \"token_type\": \"bearer\"}\r\n`\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1604/comments",
    "author": "cnly1987",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-07-03T10:10:32Z",
        "body": "I assume you solved it, thanks for closing the issue :+1:"
      },
      {
        "user": "marcelombc",
        "created_at": "2020-07-24T22:06:06Z",
        "body": "If you want to use the OAuth2PasswordRequestForm you need to install python-multipart package because OAuth2 uses \"form data\" for sending the username and password "
      },
      {
        "user": "tom-on-the-internet",
        "created_at": "2020-08-02T02:27:07Z",
        "body": "Just in case you are like me. After you install `python-multipart`, remember to rebuild your docker container. Ha ha."
      }
    ]
  },
  {
    "number": 1575,
    "title": "cannot process requests multiprocessing",
    "created_at": "2020-06-15T10:11:12Z",
    "closed_at": "2023-02-28T08:49:06Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1575",
    "body": "Hello:\r\n   I have trouble with the concurrent process requests in fastapi:\r\n#### My actions\r\nwhat i do in my api is sending a request to other api, processing the response, and returning the result after processed .\r\n\r\nI'm doing a test,in which i send 10 requests to my api by a threadpoolexecutor, it is expected to perfoming in concurrent way. But I find the app process the requests synchronized.\r\n\r\n#### Codes:\r\nstart command `uvicorn main:app --reload --workers 4`\r\n\r\nmain.app.py\r\n```\r\nasync def get_info(name: str):\r\n    response = {'keyword': name}\r\n    start = time.time()\r\n    print(f'start: {name}')    \r\n    return await search(strip(name))\r\n```\r\n\r\ntest.py\r\n```\r\nwith ThreadPoolExecutor(10) as executor:\r\n     future_to_url = {executor.submit(get, url):url for url in urls}\r\n     for future in as_completed(future_to_url):\r\n        url = future_to_url[future]\r\n        try:\r\n            data = future.result()\r\n            # time_cost = data.get(\"time_cost\", 'None')\r\n        except Exception as e:\r\n            logger.info(f'{e} url: {url}')\r\n        else:\r\n            # logging.info(f'result: {data}, url: {url}')\r\n            logger.info(f'success: {url}: {time_cost}')\r\n```\r\n\r\npython:3.7\r\n\r\nAppreciate a lot for any help.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1575/comments",
    "author": "evinstar",
    "comments": [
      {
        "user": "dbanty",
        "created_at": "2020-06-15T11:43:02Z",
        "body": "It would be ideal if you could provide a completely self-contained example that we can run and see the same results.\n\nYou say the requests are synchronized, I assume that means the first will complete before the second begins. This tells me that your endpoint is blocking the event loop. I assume that the `search` function you’re awaiting is what’s calling the other API. How are you calling that API? Are you using an async method like `httpx` and awaiting? Or using a blocking method like `requests`?"
      },
      {
        "user": "evinstar",
        "created_at": "2020-06-15T12:36:41Z",
        "body": "> \r\n> \r\n> It would be ideal if you could provide a completely self-contained example that we can run and see the same results.\r\n> \r\n> You say the requests are synchronized, I assume that means the first will complete before the second begins. This tells me that your endpoint is blocking the event loop. I assume that the `search` function you’re awaiting is what’s calling the other API. How are you calling that API? Are you using an async method like `httpx` and awaiting? Or using a blocking method like `requests`?\r\n\r\nThanks a lot, In my app, there is include some special data authorized. But your answer has inspired me a lot. As you say, I use the  blocking http lib that is requests in search function, that maybe the key problem I need to solve.\r\n\r\nThanks again for your help ^_^."
      },
      {
        "user": "evinstar",
        "created_at": "2020-06-16T06:03:05Z",
        "body": "solved"
      }
    ]
  },
  {
    "number": 1499,
    "title": "Generate swagger file without starting service",
    "created_at": "2020-06-01T06:15:09Z",
    "closed_at": "2023-02-28T08:46:38Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1499",
    "body": "### First check\r\n\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n\r\n### Description\r\n\r\nHow can I generate the swagger without starting the service?\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1499/comments",
    "author": "Hedgehogues",
    "comments": [
      {
        "user": "phy25",
        "created_at": "2020-06-01T06:16:42Z",
        "body": "Duplicate of #1490."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-06-07T09:57:19Z",
        "body": "Thanks for the help here @phy25 ! :clap: :bow: \r\n\r\nThanks for closing the issue @Hedgehogues  :+1:"
      }
    ]
  },
  {
    "number": 1490,
    "title": "Generate openapi schema without running server",
    "created_at": "2020-05-27T21:21:27Z",
    "closed_at": "2023-02-28T08:45:41Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1490",
    "body": "### Is your feature request related to a problem\r\n\r\nNot a bug, just a problem with my CI system.\r\n\r\nI want to be able to programmatically access the openapi schema and save it to a file without running the web server\r\n\r\n### The solution you would like\r\n\r\nIdeally, I'd like to write a script that would output the openapi schema without running the webserver.\r\n\r\n```\r\nfrom myapp.api import api\r\njson.dump(\r\n  get_schema_from_app(api),\r\n  open('openapi_schema.json', 'w')\r\n)\r\n```\r\n\r\n### Describe alternatives you've considered\r\n\r\nI've considered running the app in my CICD workflow and requesting the schema via http, but that seems like a lot of overhead, and I'd bet the functions to do what I want are already in the code and just need to be invoked in the right order. \r\n\r\n### Additional context\r\n\r\nNothing to add, other than I'm gonna open a PR and see if I can figure it out. ",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1490/comments",
    "author": "BenDavidAaron",
    "comments": [
      {
        "user": "phy25",
        "created_at": "2020-05-27T22:10:56Z",
        "body": "Duplicate of #1173."
      },
      {
        "user": "BenDavidAaron",
        "created_at": "2020-05-27T22:32:10Z",
        "body": "@phy25, thanks for the link, it was exactly what I needed. I'll close out."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-06-06T20:55:36Z",
        "body": "Thanks for the help here @phy25 ! :clap: :bow: \r\n\r\nThanks for reporting back and closing the issue @BenDavidAaron  :+1:"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T08:14:27Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 1488,
    "title": "The return result changed like this  \\\"faceFeatures\\\"",
    "created_at": "2020-05-27T07:08:58Z",
    "closed_at": "2023-02-28T08:45:36Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1488",
    "body": "I use postman post a image get json result. but it add ' \\\\'in the key  \\\\\"faceH\\\\\": \\\\\"136.88063\\\\\", \\\\\"faceW\\\\\": \\\\\"129.02844\\\\\", \\\\\"faceX\\\\\": \\\\\"1146.832\\\\\", \\\\\"faceY\\\\\": \\\\\"144.49599\\\\\"}, {\\\\\"faceFeatures\\\\\"\r\n\r\nhow can i drop it",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1488/comments",
    "author": "yunchangxiaoguan",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-06-06T20:40:43Z",
        "body": "I imagine you solved your problem, thanks for closing the issue :+1:"
      }
    ]
  },
  {
    "number": 1482,
    "title": "Testing with an badly formatted json",
    "created_at": "2020-05-26T15:05:19Z",
    "closed_at": "2023-02-28T08:45:05Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1482",
    "body": "### First check\r\n\r\n* [X] I used the GitHub search to find a similar issue and didn't find it.\r\n* [X] I searched the FastAPI documentation, with the integrated search.\r\n* [X] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n\r\n### Description\r\n\r\nI have an endpoint which accepts a list:\r\n```\r\n@api.post('/someurl')\r\nasync def test_something(content: List = None):\r\n    if not content:\r\n        info('empty')\r\n        return dict(msg='OK')\r\n```\r\n\r\nAnd i want to test that if i send a incorrect json that it would produce a certain string\r\n\r\n```\r\ndef test_bad_json():\r\n    response = requests.post('/v1/sparkpost', json=123)\r\n    assert some string message that error happened\r\n```\r\n\r\nBut i get a \r\n```\r\n422 Client Error: Unprocessable Entity for url \r\n```\r\n\r\nwhich is nice but is there any way to get into the method itself (say to the if check) or do i just have to wrap it in a try catch and leave it at that? ",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1482/comments",
    "author": "ArcLightSlavik",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-06-06T20:34:37Z",
        "body": "FastAPI is doing the validation for you with Pydantic. The if block will only be reached after validating that the body payload has a list or `null`."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-06-17T00:17:10Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 1479,
    "title": "422 Unprocessable Entity with Proper Input",
    "created_at": "2020-05-26T06:14:36Z",
    "closed_at": "2023-02-28T08:44:55Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1479",
    "body": "Thanks for this super cool Framework. Anyway, I am getting really frustrated on FastAPI bugs as we are getting these bugs in our production server!\r\n\r\nAn Api is getting called from android devices. Following is simple Plain Old Java Class to define the JSON Post Request Body:\r\n\r\n```\r\n    @SerializedName(\"longitude\")\r\n    double longitude;\r\n\r\n    @SerializedName(\"latitude\")\r\n    double latitude;\r\n\r\n    @SerializedName(\"radius\")\r\n    double radius;\r\n\r\n    @SerializedName(\"page_no\")\r\n    int page_no;\r\n\r\n    @SerializedName(\"search_query\")\r\n    String search_query;\r\n\r\n    @SerializedName(\"user_token\")\r\n    String user_token;\r\n```\r\n\r\nAnd my Pydantic Model is defined like this:\r\n\r\n```\r\nclass TextSearchQuery(BaseModel):\r\n\r\n    longitude: float\r\n\r\n    latitude: float\r\n\r\n    radius: float\r\n\r\n    page_no: int\r\n\r\n    search_query: str\r\n\r\n    user_token: str\r\n```\r\nWhat is Wrong? I don't really get this! Really frustrated with this bug again and again!\r\n\r\n`INFO:     37.111.237.7:0 - \"POST /api/v2/text_search HTTP/1.1\" 422 Unprocessable Entity`\r\n\r\n If i put **Type Any** for all then this works! but then the whole point of using pydantic model is meaningless!\r\n\r\n **Does FastAPI has some easy way to just get the JSON POST request body like flask?. Using Pydantic Model is giving us too much hassle and bugs. And causing problems for around 50K+ Users and it will be meaningless to just migrate our codebase to flask just for some couple of bugs!**  Anyway, Thanks again for this cool Project!",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1479/comments",
    "author": "aminPial",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-06-06T20:31:34Z",
        "body": "Well, it seems your clients are sending invalid data. Check the responses, they will contain where's the invalid data exactly.\r\n\r\nAnyway, I assume you solved your problem, so thanks for closing the issue."
      }
    ]
  },
  {
    "number": 1464,
    "title": "Default response_model on include_router",
    "created_at": "2020-05-23T18:37:03Z",
    "closed_at": "2023-02-28T18:37:12Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1464",
    "body": "### First check\r\n\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n\r\n### Description\r\n\r\nHow can I put a default `response_model` when including a router? For example, having this router:\r\n\r\n```python\r\n# routers/users.py\r\n\r\nrouter = APIRouter()\r\n\r\n@router.get('/{user_id}', response_model=User)\r\ndef get_user(user_id: int, db: Session = Depends(get_db)):\r\n    return crud.get_user(db=db, user_id=user_id)\r\n\r\n\r\n@router.put('/{user_id}', response_model=User)\r\ndef update_user(user_id: int, user: UserUpdate, db: Session = Depends(get_db)):\r\n    return crud.update_user(db=db, user_id=user_id, user=user)\r\n```\r\n\r\nI am using the same `response_model` in all routes, so I might rather put it when including the router:\r\n\r\n```python\r\n# main.py\r\n\r\napp.include_router(users.router, prefix='/users', default_response_model=User)\r\n```\r\n\r\nBut this gives an error: `TypeError: include_router() got an unexpected keyword argument 'default_response_model'` for both `default_response_model` and `response_model`.\r\n\r\nIs there any reason why this is not supported?\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1464/comments",
    "author": "zd4y",
    "comments": [
      {
        "user": "dbanty",
        "created_at": "2020-05-24T13:38:20Z",
        "body": "I believe you can put the response_model in the declaration of `APIRouter()` instead of where you register it.\n\n```python\nrouter = APIRouter(response_model=User)\n```\n\nNot at a computer to test that on, but hopefully it does the trick 😅"
      },
      {
        "user": "zd4y",
        "created_at": "2020-05-27T12:36:11Z",
        "body": "Same error: `TypeError: __init__() got an unexpected keyword argument 'response_model'`"
      },
      {
        "user": "dbanty",
        "created_at": "2020-05-27T13:15:30Z",
        "body": "Yeah that's my bad, I really thought this was already a feature 😨.  Seems like a good feature to implement for sure."
      },
      {
        "user": "mpaccione",
        "created_at": "2022-03-16T00:42:34Z",
        "body": "I have the same problem! All of my endpoints return JSON (except for a string for some dev only apis). Used the router to have logical seperation of concerns but it seems like I can't find very good documentation on this issue?"
      }
    ]
  },
  {
    "number": 1433,
    "title": "How to add custom headers when using app.mount (Specifically, cache-control headers)",
    "created_at": "2020-05-19T07:40:05Z",
    "closed_at": "2023-02-28T09:56:32Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1433",
    "body": "I am using app.mount similar to the following example:\r\n\r\napp.mount(\"/app\", StaticFiles(directory=\"html\", html=\"index.html\"), name=\"static\")\r\n\r\nHow would I go about adding custom response headers when mounting static files in this fashion? Specifically, I would like to add cache-control response headers for this mount.\r\n\r\nThank you.\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1433/comments",
    "author": "pushshift",
    "comments": [
      {
        "user": "dmig-alarstudios",
        "created_at": "2020-05-20T07:03:51Z",
        "body": "Look inside the `StaticFiles` and probably override it.\r\nBTW it's a **BAD** idea to serve static using framework! Configure your nginx."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-06-06T15:49:03Z",
        "body": "Thanks for the help here @dmig-alarstudios ! :clap: :bow: \r\n\r\nIf that solves the original problem, then you can close this issue @pushshift  :heavy_check_mark:"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-06-17T00:17:25Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      },
      {
        "user": "srjchauhan",
        "created_at": "2023-02-10T13:53:53Z",
        "body": "I have the same question, if i really want to server static file from app.mount and just change response header how can i do it \r\n"
      }
    ]
  },
  {
    "number": 1431,
    "title": "Can OAuth login via Json data instead of Form?",
    "created_at": "2020-05-19T03:58:47Z",
    "closed_at": "2023-02-28T09:56:27Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1431",
    "body": "### Description\r\nI want to use the jwt auth, and learn the tutorial about it. There are sth confused me:\r\n```python\r\n@router.post('/token')\r\nasync def login(form_data: OAuth2PasswordRequestForm = Depends()):\r\n    user = await authenticate_user(form_data.username, form_data.password)\r\n    if not user:\r\n        raise HTTPException(status_code=400, detail='incorrect username')\r\n    access_token_expires = timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\r\n    access_token = await create_access_token(data={'sub': user.username}, expires_delta=access_token_expires)\r\n    return {'access_token': access_token, 'token_type': 'bearer'}\r\n```\r\nIf login success, the token will be returned , and next time you send other request need auth like\r\n```python\r\noauth2_scheme = OAuth2PasswordBearer(tokenUrl='/token')\r\nasync def get_current_user(token: str=Depends(oauth2_scheme)):\r\n    pass\r\n```\r\n- How does it works the next request was added a header with Authorization: Bear automically? Where does the token returned stored?\r\n- When I replace the Form with json, the following requests after login are failing to be with Auth Header\r\n```python\r\nasync def login(user_data: schemas.UserLogin):\r\n    pass\r\n```\r\nI am sorry about my English and less experience about auth in Web, wish you could solve my confusion. Thanks in advance.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1431/comments",
    "author": "LouisYZK",
    "comments": [
      {
        "user": "dmig-alarstudios",
        "created_at": "2020-05-20T07:01:51Z",
        "body": "Look inside the `OAuth2PasswordRequestForm` -- form fields are described there. You can replace this class with your own, accepting `application/json` instead of `application/x-www-form-urlencoded`.\r\n"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-06-06T20:41:57Z",
        "body": "Thanks for the help here @dmig-alarstudios ! :clap: :bow: \r\n\r\nThanks for reporting back and closing the issue @LouisYZK  :+1:"
      },
      {
        "user": "bartwroblewski",
        "created_at": "2021-04-20T13:56:42Z",
        "body": "If one makes a custom class as per @dmig-alarstudios  suggestion, is it possible to also (auto-)update the OAuth Swagger form to use `application/json` instead of `www-form-urlencoded`?"
      },
      {
        "user": "dmig-alarstudios",
        "created_at": "2021-04-20T14:30:44Z",
        "body": "@bartwroblewski I couldn't find a solution for that ended up with a duplicate endpoint accepting `www-form-urlencoded`"
      },
      {
        "user": "yashp280793",
        "created_at": "2022-12-14T10:35:56Z",
        "body": "@dmig-alarstudios I have a requirement where frontend is posting content using content-type = \"application/json\". Due to OAuth2PasswordRequestForm,I am getting error as \"username field required\".\r\n\r\nIs there a way to add support of application/json or any middleware to convert incoming json to www-form-urlencoded?\r\nI am in situation that either frontend works (with custom class) or swagger works with OAuth2PasswordRequestForm."
      }
    ]
  },
  {
    "number": 1407,
    "title": "starlette 0.13.4 is incompatible",
    "created_at": "2020-05-13T22:45:23Z",
    "closed_at": "2023-02-28T09:55:45Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1407",
    "body": "### First check\r\n\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n\r\n### Description\r\n\r\nERROR: fastapi 0.54.1 has requirement starlette==0.13.2, but you'll have starlette 0.13.4 which is incompatible.\r\n\r\n### Additional context\r\n\r\nAdd any other context or screenshots about the feature request here.\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1407/comments",
    "author": "skywolf123",
    "comments": [
      {
        "user": "connebs",
        "created_at": "2020-05-16T16:48:40Z",
        "body": "What are you trying to install that also relies on Starlette?"
      },
      {
        "user": "bayarmanlai",
        "created_at": "2020-06-08T14:02:54Z",
        "body": "I have same issue, I'm trying to install ddtrace-asgi. Thank you"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-06-17T10:56:49Z",
        "body": "Thanks for the discussion here everyone, Starlette `0.13.4` is supported as of FastAPI version `0.57.0`. :tada: "
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-06-28T00:18:55Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 1391,
    "title": "Testing: overwrite Depends(OAuth2)",
    "created_at": "2020-05-08T10:09:34Z",
    "closed_at": "2023-02-28T09:55:10Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1391",
    "body": "### Description\r\n\r\nIs it possible to overwrite a Depends by an external authentication provider inside a test?\r\n\r\nI have this function and would like to overwrite the Depends to allow the test client to call the function without authentication.\r\n```python\r\n@app.post(\"/\")\r\nasync def get_data(api_key: str = Depends(OAuth2AuthorizationCodeBearer(token_url))):\r\n    return \"authenticated\"\r\n```\r\n\r\nDo you know how to use `dependency_overrides` to allow requests without authentication?\r\n```python\r\napp.dependency_overrides[OAuth2AuthorizationCodeBearer.__call__] = True\r\nclient = TestClient(app)\r\nr = client.post(\"/\")\r\n```\r\n\r\nI appreciate any hints :-)\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1391/comments",
    "author": "marius-benthin",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-06-06T12:01:39Z",
        "body": "You should probably do:\r\n\r\n```Python\r\noauth2_code_bearer = OAuth2AuthorizationCodeBearer(token_url)\r\n\r\n@app.post(\"/\")\r\nasync def get_data(api_key: str = Depends(oauth2_code_bearer)):\r\n    return \"authenticated\"\r\n```\r\n\r\nand then:\r\n\r\n```Python\r\ndef oauth2_code_bearer_override():\r\n    return \"somefaketoken\"\r\n\r\napp.dependency_overrides[oauth2_code_bearer] = oauth2_code_bearer_override\r\nclient = TestClient(app)\r\nr = client.post(\"/\")\r\n\r\n```"
      },
      {
        "user": "marius-benthin",
        "created_at": "2020-06-07T12:28:12Z",
        "body": "Thanks for your answer. :)"
      }
    ]
  },
  {
    "number": 1383,
    "title": "How can I create a decorator which adds type-hinted arguments to path functions?",
    "created_at": "2020-05-06T04:50:24Z",
    "closed_at": "2023-02-28T18:36:34Z",
    "labels": [
      "question",
      "investigate",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1383",
    "body": "### First check\r\n\r\n* [ X ] I used the GitHub search to find a similar issue and didn't find it.\r\n* [ X ] I searched the FastAPI documentation, with the integrated search.\r\n* [ X ] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n\r\n### Description\r\n\r\nI am trying to create a decorator which generates FastAPI paths, while still maintaining the ability for the decorated function's signature to dictate input data from FastAPI (query parameters, URL parts, etc). Here is a sample of what's not working for me -- a decorator with the goal of taking arbitrary view functions, and generating two GET handlers each: one that generates HTML (failing because it's unable to accept the fastapi.Request object, as the signature is overridden by f's signature), and one that generates TXT with simple key authentication (this one fails similarly due to the key parameter).\r\n\r\n```\r\ndef page(path):\r\n    def decr(f):\r\n        @app.get(path + '.html')\r\n        @functools.wraps(f)\r\n        def html(request: fastapi.Request, *args, **kwargs):\r\n            text = f(*args, **kwargs)\r\n            return templates.TemplateResponse(\"template.html\", {\"request\": request, \"body\": text})\r\n\r\n        @app.get(path + '.txt')\r\n        @functools.wraps(f)\r\n        def txt(key: str, *args, **kwargs):\r\n            if key != 'super-secret':\r\n                return 'Incorrect key'\r\n            else:\r\n                return f(*args, **kwargs)\r\n    return decr\r\n\r\n@page('/foo')\r\ndef foo(name: str):\r\n    return f'Hello {name}!'\r\n```\r\n\r\nI feel like I might be missing something simple here, as this is something I used to do in Flask, but I'm new to Python type-hinting so I don't know all the ins-and-outs of how type hints interact with decorators (yet). Any help is appreciated :) ",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1383/comments",
    "author": "tkeith",
    "comments": [
      {
        "user": "sschiessl-bcp",
        "created_at": "2020-09-18T06:11:45Z",
        "body": "Following"
      }
    ]
  },
  {
    "number": 1375,
    "title": "uri path variable question",
    "created_at": "2020-05-04T17:31:57Z",
    "closed_at": "2023-02-28T09:54:25Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1375",
    "body": "### First check\r\n\r\n* [ x ] I used the GitHub search to find a similar issue and didn't find it.\r\n* [ x ] I searched the FastAPI documentation, with the integrated search.\r\n* [ x ] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n\r\n### Description\r\n\r\n /cars and /cars/{uuid} use the same decorator/function\r\n\r\n\r\n### Additional context\r\n\r\nLooking to to see if there is a way to have /cars and /cars/{uuid} use the same decorator/function and not create duplicate code? Is there a way to register the URI with an optionial {uuid} in the path? I can't find anything in the docs on this, everything that I saw was about URI key/value pairs after the ? in the URI\r\n\r\n\r\nCurrent Way - That works\r\n-----------------------------------------\r\nclass Cars_Get(BaseModel):\r\n    uuid: UUID = Field(None, title=\"UUID\")\r\n    message: str\r\n\r\n@app.get(\"/cars\", response_model=List[Cars_Get])'\r\nasync def missedcall():\r\n\treturn [{\"uuid\": 'd50eae76-8e0e-11ea-bc55-0242ac130003', \"message\": \"all cars\"}]\r\n\r\n@app.get(\"/cars/{uuid}\", response_model=Cars_Get)\r\nasync def missedcall(uuid: UUID = None):\r\n\t    return {\"uuid\": uuid,\"message\": \"Single car\" }\r\n\r\n------------------------------------------------------------------------\r\nTried the following but get\r\n\r\nINFO:     *.*.*.74:43020 - \"GET /cars HTTP/1.1\" 404 Not Found\r\n\r\n\r\n@app.get(\"/cars/{uuid}\", response_model=Cars_Get)\r\nasync def missedcall(uuid: UUID = None):\r\n    if not uuid:\r\n\t    return [{\"uuid\": 'd50eae76-8e0e-11ea-bc55-0242ac130003', \"message\": \"all cars\"}]\r\n    else:\r\n\t    return {\"uuid\": uuid,\"message\": \"Single car\" }\r\n\r\n-----------------------------------------------------------------\r\nTried this way but I get a 307 Temporary Redirect, but it works. Not sure if it's really valid\r\n\r\n\r\nINFO:     73.22.78.74:42765 - \"GET /cars/ HTTP/1.1\" 307 Temporary Redirect\r\nINFO:     73.22.78.74:42765 - \"GET /cars HTTP/1.1\" 200 OK\r\n\r\nINFO:     73.22.78.74:42964 - \"GET /cars/d50eae76-8e0e-11ea-bc55-0242ac130003 HTTP/1.1\" 200 OK\r\n\r\nclass Cars_Get(BaseModel):\r\n    uuid: UUID = Field(None, title=\"UUID\")\r\n    message: str\r\n\r\n@app.get(\"/cars\", response_model=List[Cars_Get])\r\n@app.get(\"/cars/{uuid}\", response_model=Cars_Get)\r\nasync def missedcall(uuid: UUID = None):\r\n    if not uuid:\r\n\t    return [{\"uuid\": 'd50eae76-8e0e-11ea-bc55-0242ac130003', \"message\": \"all cars\"}]\r\n    else:\r\n\t    return {\"uuid\": uuid,\"message\": \"Single car\" }\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1375/comments",
    "author": "esundberg",
    "comments": [
      {
        "user": "retnikt",
        "created_at": "2020-05-04T17:41:27Z",
        "body": "The way you tried is perfectly valid. To avoid getting the redirect replace `/cars` with `/cars/`.\r\n\r\nPS: put ``` before and after your code to keep it formatted properly. E.g.:\r\n\r\n    This is normal text\r\n    \r\n    ```\r\n    this.is_some(code)\r\n    ```\r\n    \r\n    This is normal text again\r\n-----\r\nThis is normal text\r\n\r\n```\r\nthis.is_some(code)\r\n```\r\n\r\nThis is normal text again"
      },
      {
        "user": "esundberg",
        "created_at": "2020-05-10T02:54:52Z",
        "body": "Thanks for your help"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-06-06T12:08:26Z",
        "body": "Thanks for the help here @retnikt ! :clap: :bow: \r\n\r\nThanks for reporting back and closing the issue @esundberg  :+1:"
      }
    ]
  },
  {
    "number": 1373,
    "title": "How can I send additional user context to Sentry to identify the user?",
    "created_at": "2020-05-04T14:25:15Z",
    "closed_at": "2023-02-28T18:36:11Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1373",
    "body": "### First check\r\n\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n\r\n### Description\r\n\r\nHow can I send additional context to Sentry to identify the user who faced the error?\r\n\r\n### Additional context\r\n\r\nI already use JWT to identify the user, plus I have the lovely dependencies from FastAPI for pulling in additional information from the database such as the user name. I don't know where to leverage this though.\r\n\r\nSo far, I have\r\n```python\r\nif config.SENTRY_DSN:\r\n    sentry_sdk.init(config.SENTRY_DSN)\r\n    app = SentryAsgiMiddleware(app)\r\n```\r\n\r\nwhich does a fine job of capturing a lot of stuff automatically, but I want to add the user information in the payload. Sentry's website tells me the following is the way to go about:\r\n\r\n```python\r\nfrom sentry_sdk import configure_scope\r\n\r\nwith configure_scope() as scope:\r\n    scope.user = {\"email\": \"john.doe@example.com\"}\r\n```\r\nBut I have no idea where to put this- exceptions could happen from any endpoint from any routers. Some of these require the users to be logged in, while some don't. Adding a scope to every router seems like a wrong way to approach this problem. \r\n\r\nWhat is a good way to go about this? Any suggestions would be much appreciated. \r\n\r\nThanks in advance.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1373/comments",
    "author": "niazangels",
    "comments": [
      {
        "user": "mittalsuraj18",
        "created_at": "2020-05-12T13:10:25Z",
        "body": "@niazangels what you are saying is correct.\r\nyou just have to put the configure scope at the root of each api which you want to monitor\r\n\r\nsomething like this\r\n\r\n```\r\n@app.get(\"/test\")\r\ndef test(request:Request):\r\n    with configure_scope() as scope:\r\n          scope.user = request.user\r\n          ....\r\n          your remaining code\r\n          ....\r\n"
      },
      {
        "user": "jokull",
        "created_at": "2020-09-06T14:45:12Z",
        "body": "I have a `Depends` like this \r\n\r\n```python\r\ndef get_current_user(db: Session = Depends(get_db), token: str = Security(auth)):\r\n    try:\r\n        payload = jwt.decode(token, config(\"SECRET_KEY\"), algorithms=[ALGORITHM])\r\n    except PyJWTError:\r\n        raise HTTPException(\r\n            status_code=HTTP_403_FORBIDDEN, detail=\"Could not validate credentials\"\r\n        )\r\n    user = crud.user.get(db, id=payload[\"user_id\"])\r\n    if not user:\r\n        raise HTTPException(status_code=404, detail=\"User not found\")\r\n    with configure_scope() as scope:\r\n        scope.user = {\"id\": user.id, \"email\": user.email}\r\n        try:\r\n            yield user\r\n        except Exception as e:\r\n            capture_exception(e)\r\n            raise\r\n```\r\n\r\nused in routes like this\r\n\r\n```python\r\n@router.get(\"/me/_error\", response_model=User)\r\ndef get_user_error(\r\n    db: Session = Depends(get_db),\r\n    current_user: DBUser = Depends(get_current_active_user),\r\n):\r\n    1 / 0\r\n```"
      },
      {
        "user": "lesnik512",
        "created_at": "2021-06-03T18:20:21Z",
        "body": "With `configure_scope` it's not worked for me.\r\n\r\nBut with `set_user` it's worked:\r\n\r\n```python\r\nfrom sentry_sdk import set_user\r\n\r\nasync def set_sentry_user(\r\n    request: Request, credentials: Optional[HTTPAuthorizationCredentials] = security\r\n) -> None:\r\n    username = // get username from credentials somehow\r\n    client = request.client\r\n    set_user({\"username\": username, \"ip_address\": client.host if client else None})\r\n```"
      }
    ]
  },
  {
    "number": 1371,
    "title": "APIRouter testing with TestClient always return assertion error 404",
    "created_at": "2020-05-04T04:48:36Z",
    "closed_at": "2023-02-28T09:54:18Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1371",
    "body": "### Description\r\n\r\nI'm about to create restapi and add testing files for each route. I'm using `APIRouter` for all my path operations, but when i create a test file, i always get assertion error 404. If i change the path operation using `FastAPI`, the test passed. Did i miss something maybe like specific configuration for testing path operations from `APIRouter` instance?\r\n\r\nHere is the example of my project structure:\r\n\r\n```\r\napp/\r\n|__routes/\r\n|____basic.py\r\n|__tests/\r\n|____test_basic.py\r\n|__server.py\r\n|__main.py\r\n```\r\n\r\n`basi.py`\r\n```\r\nfrom fastapi import APIRouter\r\n\r\nrouter = APIRouter()\r\n\r\n@router.get('/')\r\ndef read_root():\r\n    return {\"Hello\": \"World\"}\r\n```\r\n`main.py`\r\n```\r\nfrom fastapi import FastAPI\r\n\r\napp: FastAPI = FastAPI()\r\n```\r\n\r\n`server.py`\r\n```\r\nfrom app.main import app\r\nfrom app.routes.basic import router as basic_router\r\n[...]\r\nROUTERS = (basic.router,)\r\n\r\napp.include_router(ROUTERS[0], tags=[\"Basic\"])\r\n[...]\r\n\r\nif __name__ == \"__main__\":\r\n    import uvicorn\r\n\r\n    uvicorn.run(\"app.main:app\", host=getenv('APP_HOST'),\r\n                port=int(getenv('APP_PORT')), reload=True, log_level=\"debug\")\r\n```\r\n\r\n`test_basic.py`\r\n```\r\nfrom fastapi.testclient import TestClient\r\nfrom app.main import app\r\n\r\nclient = TestClient(app)\r\n\r\ndef test_read_root():\r\n    response = client.get(\"/\")\r\n\r\n    assert response.status_code == 200\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1371/comments",
    "author": "mydevlocal",
    "comments": [
      {
        "user": "phy25",
        "created_at": "2020-05-04T05:03:37Z",
        "body": "Your `test_basic.py` needs `from app.server import app` or you won't get those router included."
      },
      {
        "user": "mydevlocal",
        "created_at": "2020-05-04T07:55:41Z",
        "body": "> Your `test_basic.py` needs `from app.server import app` or you won't get those router included.\r\n\r\nOMG, you're right. I set `from app.server import app` to my test files, and it works.\r\nThank you so much."
      },
      {
        "user": "phy25",
        "created_at": "2020-05-04T11:42:26Z",
        "body": "If this works for you you could close the issue. :)"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-06-06T08:04:31Z",
        "body": "Thanks for the help here @phy25 ! :clap: :bow: \r\n\r\nThanks for reporting back and closing the issue @mydevlocal :+1: "
      }
    ]
  },
  {
    "number": 1356,
    "title": "Pydantic Field example in Requset",
    "created_at": "2020-04-30T16:32:40Z",
    "closed_at": "2023-02-28T09:53:56Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1356",
    "body": "```\r\nclass CompanyAttributes(pydantic.BaseModel):\r\n    name: str = Field(..., example=\"company_name\")\r\n\r\nclass CreateCompanyJSONObject(base.CreateDataJSONObject):\r\n    data: CreateCompanyObject\r\n...\r\n@router.post(\r\n    \"/\",\r\n    response_model=companies_presenter.CompanyJSONObject,\r\n    status_code=status.HTTP_201_CREATED,\r\n)\r\nasync def create_company(\r\n        company_item: base.CreateDataJSONObject\r\n):\r\n...\r\n```\r\n\r\n` example=\"company_name\"`  should be in Request I suppose.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1356/comments",
    "author": "dglubokov",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-06-06T07:28:50Z",
        "body": "I imagine you solved your problem. Thanks for closing the issue :+1:"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T08:53:36Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 1337,
    "title": "Did you know Netflix uses FastAPI?",
    "created_at": "2020-04-28T10:43:20Z",
    "closed_at": "2023-02-28T09:53:24Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1337",
    "body": "Off-topic, but I recently discovered @Netflix's Dispatch, and poking around in the source I discovered that most of the app is written with FastAPI! I thought you might like to know so you could use it for promotion and potentially reach out for a testimonial to add to the README. (if you didn't already know they used it)",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1337/comments",
    "author": "retnikt",
    "comments": [
      {
        "user": "sm-Fifteen",
        "created_at": "2020-04-30T14:17:34Z",
        "body": "Guess we have **kevgliss** (#805) and **mvilanova** (not sure I actually want to ping them) to thank for that. It could be worth reaching out to them, yeah, seeing FastAPI being used in the wild is always cool (in a \"#1337 HaXorZ\" kind of way).\r\n\r\n@tiangolo, have you seen this?"
      },
      {
        "user": "michaeloliverx",
        "created_at": "2020-05-02T12:02:01Z",
        "body": "@tiangolo shared it on twitter a while ago. +1 could be added to the testimonials. "
      },
      {
        "user": "tiangolo",
        "created_at": "2020-06-06T07:42:44Z",
        "body": "Thanks! Yeah, I had seen the blog post but hadn't had the time to add it to the docs and external links.\r\n\r\nI recently did :smile: \r\n\r\n...also, cool issue number you got :sunglasses: "
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-06-17T00:17:48Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 1334,
    "title": "Error getting request body: Invalid control character at: line 2 column 22 (char 24)",
    "created_at": "2020-04-28T06:47:48Z",
    "closed_at": "2023-02-28T09:53:16Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1334",
    "body": "### Describe the bug\r\nwhen I use fastapi to offer restful api, something bad happens like this :\r\nError getting request body: Invalid control character at: line 2 column 22 (char 24)\r\n\r\n### Demo\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\n@app.get('/api')\r\nasync def run(text: str):\r\n        return text\r\n```\r\n\r\nwhen i passing some textas part of the JSON input,  I get this error:\r\nERROR: Error getting request body: Invalid control character at: line 2 column 22 (char 24).\r\n\r\nI think  it encounters unneeded characters in the JSON body, and is there a way to set strict = false like json.loads(request.data, strict=False)?\r\n### Environment\r\n\r\n- OS:  Linux\r\n- FastAPI Version:  0.49.0\r\n- python Version: 3.6.5\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1334/comments",
    "author": "BinNong",
    "comments": [
      {
        "user": "retnikt",
        "created_at": "2020-04-28T09:43:58Z",
        "body": "Please show the code you're using to send the JSON input, and the full stack-trace (\"Traceback (most recent call last): ...\") you're getting. This is not an issue with FastAPI, but rather with your JSON data by the looks of it."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-06-05T20:29:47Z",
        "body": "Thanks for the help here @retnikt ! :clap: :bow: \r\n\r\nIf that solves the original problem, then you can close this issue :heavy_check_mark: "
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-06-16T00:17:34Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      },
      {
        "user": "espoirMur",
        "created_at": "2021-07-15T12:19:17Z",
        "body": "So I am not sure if this should be closed: \r\n\r\n- I tried to print the traceback of the error and I got something like this: \r\n```\r\n1 validation error for Request\r\nbody -> 467\r\n  Invalid control character at: line 2 column 466 (char 467) (type=value_error.jsondecode; msg=Invalid control character at; doc={\r\n  \"text\": \"There are more than a few good reasons why Yellowstone is as popular as it is. Sure, you get the family drama of the Duttons and everything that unfolds on their Montana ranch. But, we think it runs a little bit deeper than that. Yellowstone embodies our need for a great story, beckoning back to the golden era of westerns, while also building on a cast of compelling characters. Paired with the beautiful scenery of Big Sky Country, what’s not to love?\r\n\r\nJust like you, we live and breathe Yellowstone. Writer/Creator Tyler Sheridan’s weekly masterpiece is enough to keep up with, but when you bring in cast changes, sneak peeks, trailers, fan theories, and glimpses into the production, you’re talking about a full-time commitment. And that’s exactly why we have a full-time set of writers bringing you everything Yellowstone day-in and day-out.\r\n\r\n\"\r\n}; pos=467; lineno=2; colno=466)\r\nTraceback (most recent call last):\r\n  File \"~/project_path/.venv/lib/python3.7/site-packages/fastapi/routing.py\", line 193, in app\r\n    json_body = await request.json()\r\n  File \"~/project_path/.venv/lib/python3.7/site-packages/starlette/requests.py\", line 228, in json\r\n    self._json = json.loads(body)\r\n  File \"~/.pyenv/versions/3.7.0/lib/python3.7/json/__init__.py\", line 348, in loads\r\n    return _default_decoder.decode(s)\r\n  File \"~/.pyenv/versions/3.7.0/lib/python3.7/json/decoder.py\", line 337, in decode\r\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n  File \"~/.pyenv/versions/3.7.0/lib/python3.7/json/decoder.py\", line 353, in raw_decode\r\n    obj, end = self.scan_once(s, idx)\r\njson.decoder.JSONDecodeError: Invalid control character at: line 2 column 466 (char 467)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"~/project_path/.venv/lib/python3.7/site-packages/starlette/exceptions.py\", line 71, in __call__\r\n    await self.app(scope, receive, sender)\r\n  File \"~/project_path/.venv/lib/python3.7/site-packages/starlette/routing.py\", line 580, in __call__\r\n    await route.handle(scope, receive, send)\r\n  File \"~/project_path/.venv/lib/python3.7/site-packages/starlette/routing.py\", line 241, in handle\r\n    await self.app(scope, receive, send)\r\n  File \"~/project_path/.venv/lib/python3.7/site-packages/starlette/routing.py\", line 52, in app\r\n    response = await func(request)\r\n  File \"~/project_path/.venv/lib/python3.7/site-packages/fastapi/routing.py\", line 199, in app\r\n    raise RequestValidationError([ErrorWrapper(e, (\"body\", e.pos))], body=e.doc)\r\nfastapi.exceptions.RequestValidationError: 1 validation error for Request\r\nbody -> 467\r\n  Invalid control character at: line 2 column 466 (char 467) (type=value_error.jsondecode; msg=Invalid control character at; doc={\r\n  \"text\": \"There are more than a few good reasons why Yellowstone is as popular as it is. Sure, you get the family drama of the Duttons and everything that unfolds on their Montana ranch. But, we think it runs a little bit deeper than that. Yellowstone embodies our need for a great story, beckoning back to the golden era of westerns, while also building on a cast of compelling characters. Paired with the beautiful scenery of Big Sky Country, what’s not to love?\r\n\r\nJust like you, we live and breathe Yellowstone. Writer/Creator Tyler Sheridan’s weekly masterpiece is enough to keep up with, but when you bring in cast changes, sneak peeks, trailers, fan theories, and glimpses into the production, you’re talking about a full-time commitment. And that’s exactly why we have a full-time set of writers bringing you everything Yellowstone day-in and day-out.\r\n\r\n\"\r\n```\r\n\r\nFrom that you can  see that the error is coming from this line : \r\n\r\n```\r\n  File \"~/project_path/.venv/lib/python3.7/site-packages/starlette/requests.py\", line 228, in json\r\n    self._json = json.loads(body)\r\n```\r\nIf I replace the function load with the following method it kinda solved the issue temporarily \r\n\r\n`self._json = json.loads(body,  strict=False)`\r\n\r\nI am going to try to override the method and see if how it goes . or something like monkey patching ... 🤔\r\nbut from my understanding, it is more an issue with startlette than a fast API issue? \r\nBut  I am sure there is something that can be done on the fast API side to avoid those king of issues and on starlette."
      },
      {
        "user": "espoirMur",
        "created_at": "2021-07-15T12:20:09Z",
        "body": "Can we remove the label close on this while we are looking for solution? @tiangolo "
      }
    ]
  },
  {
    "number": 1328,
    "title": "Depends auto wraps with contextmanager which creates duplicate code",
    "created_at": "2020-04-27T14:09:09Z",
    "closed_at": "2023-02-28T18:35:23Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1328",
    "body": "### First check\r\n\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n\r\n### Description\r\n\r\nI have a database pool with which I have to define two exact method except for the `@asynccontextmanager` decorator.\r\n```\r\nclass Pool:\r\n    async def get_con(self):\r\n        con = await self.pool.acquire()\r\n        try:\r\n            yield con\r\n        finally:\r\n            await self.pool.release(con)\r\n\r\n    @asynccontextmanager\r\n    async def __call__(self):\r\n        con = await self.pool.acquire()\r\n        try:\r\n            yield con\r\n        finally:\r\n            await self.pool.release(con)\r\n\r\npool = Pool()\r\n```\r\n\r\nOne is used in my internal code:\r\n```\r\nasync with pool() as con:\r\n    con.fetch()\r\n```\r\n\r\nAnd the other with the `Depends`:\r\n```\r\n@router.get(\"/item/{id}\")\r\nasync def get(id: UUID, db: Connection = Depends(pool.get_con)):\r\n```\r\n\r\n\r\nIn the documentation there is a line which states\r\n\r\n> But you don't have to use the decorators for FastAPI dependencies (and you shouldn't).\r\n\r\nIf you try:\r\n```\r\n@router.get(\"/item/{id}\")\r\nasync def get(id: UUID, db: Connection = Depends(pool)):\r\n```\r\n\r\nI actually get an `AttributeError`. I'm assuming `pool` is yieled instead of `pool.__call__`.\r\n```\r\nAttributeError: '_AsyncGeneratorContextManager' object has no attribute 'fetchrow'\r\n```\r\n\r\nWhich makes it pretty clear that I cannot use a contextmanager in a `Depends`, but this creates duplicate and non consistent code when getting a db connection.\r\n\r\nIs this the way it is? Can `Depends` work with both regular yields and contextmanagers directly?\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1328/comments",
    "author": "kdorsel",
    "comments": [
      {
        "user": "retnikt",
        "created_at": "2020-04-29T14:14:19Z",
        "body": "That whole bottom section in the documentation is quite confusing, because while FastAPI does use `@contextmanager`/`@asynccontextmanager` for dependencies, it is in a pretty complicated way. From the user's (your) point of view, dependencies have nothing to do with context managers. \r\n\r\nIn the docs\r\n> You don't have to use the decorators for FastAPI dependencies (and you shouldn't).\r\n\r\nshould really read:\r\n> You can't use the decorators for FastAPI dependencies.\r\n\r\nand in fact I would argue that whole section is unnecessary and only leads to confusion.\r\n\r\nIn your specific case, to eliminate the duplicate code you can do:\r\n```\r\nclass Pool:\r\n    async def get_con(self):\r\n        con = await self.pool.acquire()\r\n        try:\r\n            yield con\r\n        finally:\r\n            await self.pool.release(con)\r\n\r\n    __call__ = asynccontextmanager(get_con)\r\n```\r\nthen continue to use `Depends(pool.get_con)`.\r\n\r\nA separate issue is that the pattern of\r\n```\r\ndef foo():\r\n    with bar() as b:\r\n        yield b\r\n\r\n@app.get(\"/\")\r\nasync def endpoint(f: foo = Depends()):\r\n    ...\r\n```\r\nmeans you're opening context managers and wrapping them up in the context manager under the hood of the dependency system."
      },
      {
        "user": "kdorsel",
        "created_at": "2020-04-29T18:00:50Z",
        "body": "I would agree with you that the documentation is confusing, but this clears things up with a nice simple solution, thanks!"
      },
      {
        "user": "evindunn",
        "created_at": "2022-08-07T20:03:32Z",
        "body": "This helped me out, thanks all. Here's what mine looks like:\r\n\r\n```python\r\nasync def database_session():\r\n    \"\"\"\r\n    Returns a database Session for use with fastapi Depends()\r\n    \"\"\"\r\n    session = async_scoped_session(_db_session, scopefunc=current_task)\r\n    try:\r\n        yield session\r\n    finally:\r\n        await session.remove()\r\n```\r\n\r\n```python\r\n@app.on_event(\"startup\")\r\nasync def create_admin_user():\r\n    \"\"\"\r\n    Makes sure the app's admin user exists on startup\r\n    \"\"\"\r\n    DatabaseSession = asynccontextmanager(database_session)\r\n    async with DatabaseSession() as session:\r\n        do_db_stuff_with_db_session(session)\r\n```\r\n\r\n```python\r\n@router.get(\"/\")\r\nasync def get_user(user_id: str, session: AsyncSession = Depends(database_session)):\r\n    do_stuff_with_db_session(session)\r\n```"
      },
      {
        "user": "Kludex",
        "created_at": "2022-12-29T11:04:35Z",
        "body": "I don't know why this is not allowed... Maybe I'm missing something? But I guess either a PR allowing that or a PR improving the docs should be created 🤔"
      }
    ]
  },
  {
    "number": 1305,
    "title": "How can i upload a folder",
    "created_at": "2020-04-22T08:58:53Z",
    "closed_at": "2023-02-28T09:52:02Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1305",
    "body": "How can i upload a folder",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1305/comments",
    "author": "tanyaofei",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-04-25T18:44:13Z",
        "body": "I assume you solved your issue, so thanks for reporting back and closing the issue :+1: "
      }
    ]
  },
  {
    "number": 1292,
    "title": "Reusable Query parameters (and perhaps Path)",
    "created_at": "2020-04-20T09:57:45Z",
    "closed_at": "2023-02-28T18:35:10Z",
    "labels": [
      "question",
      "investigate",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1292",
    "body": "### Is your feature request related to a problem\r\n\r\nWell, maybe.\r\n\r\nIn one of my fastapi-based apps there's a lot of query parameters supported by multiple GET endpoints, basically for adding filters for each field on a pydantic model (with multiple operators per field). They are generated dynamically with some `inspect` magic.\r\n\r\nMy problem is that the OpenAPI spec becomes really heavy. 2MB+ easily. And with each added endpoint that reuses the same huge list of parameters it adds another few 100kb.\r\n\r\nI haven't verified it yet but I think this is what leads the app to take 5+ seconds to start.\r\n\r\n### The solution you would like\r\n\r\nI'm proposing that all parameters are defined under `components.parameters` in the OpenAPI spec and then referenced in `parameters` for each endpoint.\r\n\r\nOf course one would have to ensure that name collisions do not occur for query parameters with the same name under different endpoints.\r\n\r\nI think something like a registry concept would make sense here.\r\n\r\nCode example:\r\n\r\n```python\r\n\r\nfrom fastapi import FastAPI, Query, Parameters\r\nfrom . import db\r\n\r\napp = FastAPI()\r\nparameters = Parameters()\r\n\r\n@app.get(\"/items\")\r\nasync def get_items(\r\n    # The old way still works, this will be explicity defined under the endpoint's `parameters` object in the OpenAPI spec\r\n    name: str = Query(...),\r\n    # Using lru_cache this would return the same param, which would be defined under `components.parameters` in the OpenAPI spec\r\n    per_page: str = parameters.Query(..., description=\"Results per page\")\r\n):\r\n    return await db.get_items(name=name, limit=per_page)\r\n```\r\n\r\nOr a more explicit alternative:\r\n\r\n```python\r\n\r\nfrom fastapi import FastAPI, Parameters, Query\r\nfrom . import db\r\n\r\napp = FastAPI()\r\nparameters = Parameters()\r\nper_page_query = parameters.Query(str, ..., description=\"Results per page\")  # NOTE: Additional type argument\r\n\r\n@app.get(\"/items\")\r\nasync def get_items(\r\n    name: str = Query(...),\r\n    per_page: str = per_page_query\r\n):\r\n    return await db.get_items(name=name, limit=per_page)\r\n```\r\n\r\nThe concept should work nicely with path parameters as well:\r\n\r\n```python\r\nimport uuid\r\nfrom fastapi import FastAPI, Parameters, Query\r\nfrom . import db\r\n\r\napp = FastAPI()\r\nparameters = Parameters()\r\nitem_id_path = parameters.Path(uuid.UUID, ..., description=\"Item ID\")\r\n\r\n@app.get(\"/items/{item_id}\")\r\nasync def get_item(\r\n    item_id: uuid.UUID = item_id_path\r\n):\r\n    return await db.get_item(item_id)\r\n```\r\n\r\n### Describe alternatives you've considered\r\n\r\n1. Not adding the parameter definitions to the API and instead manually iterating over them via `starlette.Request.query_params`. Disadvantages: No for-free validation on query parameters, no automatic API documentation.\r\n2. Using a special query parameter syntax. E.g. `?filter=field:operator:value` instead of `?filter:operator=value`. Disadvantages: Additional typing for the API user, less clear API documentation.\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1292/comments",
    "author": "jacobsvante",
    "comments": [
      {
        "user": "thatguysimon",
        "created_at": "2022-10-30T16:11:01Z",
        "body": "Hi @jacobsvante,\r\nWhat did you end up doing to solve this?"
      },
      {
        "user": "soundstripe",
        "created_at": "2023-02-23T15:08:19Z",
        "body": "I use this pattern (note -- must be defined BEFORE/ABOVE where it is used in a path operation):\r\n\r\n```\r\n@lru_cache  # <--- optional, I just mark known \"static\" functions this way\r\ndef QueryIncludeMeta():\r\n    \"\"\"Helper to reuse query parameter documentation, example, etc\"\"\"\r\n    return Query(\r\n        default=False,\r\n        description=\"If true, object meta-information will be returned along with the object\",\r\n    )\r\n\r\n\r\n@app.get('/something')\r\ndef get_something(include_meta: bool = QueryIncludeMeta()):\r\n    return 'something'\r\n```\r\n\r\nit also works to just use a global but I don't like it as much as it doesn't \"look\" like a FastAPI tool.\r\n\r\n```\r\n# Helper to reuse query parameter documentation, example, etc\r\nQueryIncludeMeta = Query(\r\n      default=False,\r\n      description=\"If true, object meta-information will be returned along with the object\",\r\n )\r\n\r\n\r\n@app.get('/something')\r\ndef get_something(include_meta: bool = QueryIncludeMeta):\r\n    return 'something'\r\n```"
      }
    ]
  },
  {
    "number": 1278,
    "title": "Operations are slower during startup event",
    "created_at": "2020-04-16T13:22:09Z",
    "closed_at": "2023-02-28T09:51:22Z",
    "labels": [
      "question",
      "answered",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1278",
    "body": "Hi, first of all, kudos for your great work!\r\n\r\nI'm using FastApi to build a ML application, but I am having some problems with it. During the startup event, before the APIs start, I need to initialize a \"heavy\" class wich every time trains a very little ML model. When I initialize it outside the startup handler it takes about 10 minutes, on the contrary if initialized inside the startup handler it takes three times as long, almost 30 minutes.\r\n\r\nI am executing this operation inside the startup handler because I'm storing this ML model inside the app state, so that I can use it later inside the APIs endpoints.\r\n\r\nCould you tell me if the problem depends on an incorrect use of FastApi or of the logic in general that I am following, or if there is a way to speed up the operation by keeping it inside the event handler?\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1278/comments",
    "author": "helloimcarmine",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-06-04T19:05:31Z",
        "body": "So, if you use Gunicorn with Uvicorn, or if you use Uvicorn with workers, that would mean that it would train and load the ML model in each process that it spawns (e.g. 2 * the number of cores you have). So that would be quite bad, would be a lot of lost resources and each of the processes would end up having a different model.\r\n\r\nThe first thing I would suggest is to train the model outside, save it, and then just load it at startup time.\r\n\r\nBut if you definitely have to train the model right before starting the app, I would suggest you do it in a script outside of your app, e.g. a bash script, that trains your small model, saves it to disk, and then your app reads it.\r\n\r\nIf you have to do it in code, then it would do it in Python and then _after_ saving it would start Uvicorn with your app (or Gunicorn with Uvicorn, etc).\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-06-15T00:17:38Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 1269,
    "title": "Querying large tables",
    "created_at": "2020-04-15T09:14:52Z",
    "closed_at": "2023-02-28T09:51:05Z",
    "labels": [
      "question",
      "answered",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1269",
    "body": "### First check\r\n\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n\r\n### Description\r\n\r\nWhen using direct response of SQLAlchemy select of large tables (e.g. table with over 5000 records) it takes a lot of time, I found a SQLAlchemy's function `yield_per` could be a solution, though I didn't realise how to use it with path function. If wrap it with Pydantic response model it will take even more time. \r\nHow could I select all records and convert them into custom JSON without any time expenses?\r\n\r\nThe code I used:\r\n\r\n**Model**\r\n```\r\nclass TestModel(Base):\r\n    __tablename__ = \"test\"\r\n\r\n    id = Column(Integer, primary_key=True)\r\n    name = Column(String)\r\n```\r\n\r\n**Route**\r\n```\r\n@router.get('/test_large_table')\r\nasync def read_large_table(db: Session = Depends(get_db)):\r\n    q = db.query(models.TestModel).all()\r\n    return q\r\n```",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1269/comments",
    "author": "Andreigr0",
    "comments": [
      {
        "user": "Andreigr0",
        "created_at": "2020-04-30T10:47:19Z",
        "body": "Is there any solution?"
      },
      {
        "user": "nkhitrov",
        "created_at": "2020-05-05T20:00:48Z",
        "body": "Hi, @Andreigr0 !\n\nTo send a response you need all the data that you need to send. Speeding up sql queries is a completely different topic and does not apply to FastAPI. \n\nIn this case, there are 2 ways:\n1. to give data in pieces (stream response or websockets)\n2. to use the cache (redis)"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-06-06T11:35:20Z",
        "body": "Yep, what @Slyfoxy says :point_up: \r\n\r\nYou might need to stream the data using a `StreamResponse` or WebSockets, but that's another level of complexity.\r\n\r\nIf you want to disregard output data filtering/validation, you can return a response directly."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-06-17T00:17:59Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 1263,
    "title": "How can a TemplateResponse send and retrieve data?",
    "created_at": "2020-04-14T12:42:53Z",
    "closed_at": "2023-02-28T09:50:56Z",
    "labels": [
      "question",
      "answered",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1263",
    "body": "How can I make a TemplateResponse that sends and gets data?\r\n\r\nInitially, I want to have a html file that 1) allows users to input information, once this is done, 2) the information should be processed and the html file should be rendered with this information. \r\n\r\nIs it possible to do something like this:\r\n\r\n1) items = []\r\noutput = templates.TemplateResponse(\"input.html\", {\"request\": request, \"items\": items, \"result\": len(items)}\r\n2) items = processing(output), templates.TemplateResponse(\"input.html\", {\"request\": request, \"items\": items, \"result\": len(items)}\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1263/comments",
    "author": "tessavdheiden",
    "comments": [
      {
        "user": "jorgerpo",
        "created_at": "2020-04-16T15:47:18Z",
        "body": "In theory it should work\r\nHow did it go?"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-06-04T19:09:56Z",
        "body": "Yes, it could be done, but you would have to have custom logic in the template to show the form _or_ the result.\r\n\r\nWhat I would suggest is that you have 2 independent templates, one for the form and one to render the data. ...actually the form doesn't even have to be a template, it could be plain HTML.\r\n\r\nThen I would probably suggest having different URLs for the input data and for the results after submitting the result. But if you definitely need to have them in the same URL then you could still just have one `get` to show the HTML form and one `post` to show the rendered results.\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-06-15T00:17:45Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 1242,
    "title": "SQLAlchemy InvalidRequestError on relationships if one of the model is not yet imported",
    "created_at": "2020-04-11T19:37:38Z",
    "closed_at": "2023-02-28T09:50:30Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1242",
    "body": "Hello everyone..and I hope that everyone is doing great.\r\nI've been trying to solve this problem by myself for a couple of time, but I couldn't get any solution, so I will try to share with you and if any of you had this problem and solved or just know the solution would really help me.\r\n\r\nProblem details:\r\n- Program Crashes\r\n- Relationships are defined between models\r\n\r\nTemporary solution:\r\n- The error will get away only if I import models that are related to each other \r\n\r\n\r\nStructure of my application:\r\nI am doing migrations with alembic ofc.\r\nI am making models in seperate files, and then before running the migrations I import all of the database models in a common file, then I set the base.metadata to that file..(I will explain with the code)\r\n\r\nBefore I continue this is the error:\r\n```\r\nsqlalchemy.exc.InvalidRequestError: When initializing mapper mapped class User->user, expression 'Product' failed to locate a name (\"name 'Product' is not defined\"). If this is a class name, consider adding this relationship() to\r\nthe <class 'project.src.somepackagename.user'> class after both dependent classes have been defined.\r\n```\r\n\r\nMy application structure is below..\r\nDatabase configurations:\r\n```\r\nengine = create_engine(\r\n    settings.pg_dsn, ## pg details here\r\n)\r\n\r\n_ScopedSession = scoped_session(sessionmaker(autocommit=False, autoflush=False, bind=engine))\r\n\r\n\r\n@register(singleton=False)\r\nclass ScopedSession:\r\n\r\n    def __enter__(self) -> Session:\r\n        self.db = _ScopedSession()\r\n        return self.db\r\n\r\n    def __exit__(self, exc_type, exc_val, exc_tb):\r\n        self.db.close()\r\n\r\n\r\nclass CustomBase(object):\r\n    # Generate __tablename__ automatically\r\n    @declared_attr\r\n    def __tablename__(cls):\r\n        return re.sub(r'(?<!^)(?=[A-Z])', '_', cls.__name__).lower()\r\n\r\n\r\nBase = declarative_base(cls=CustomBase)\r\n```\r\n\r\nModels, for ex  `user.py`\r\n(The models below are only for demostration, but mine is in the same format)\r\n```\r\nfrom mymodule.db import Base\r\n\r\nclass User(Base):\r\n    __versioned__ = {}\r\n    id = Column(Integer, primary_key=True)\r\n   name = Column(String(30),nullable=False)\r\n\r\n   products = relationship(\"Product\",back_populates=\"user\")\r\n```\r\nHere we have other model `product.py`\r\n```\r\nfrom mymodule.db import Base\r\n\r\nclass Product(Base):\r\n    __versioned__ = {}\r\n    id = Column(Integer, primary_key=True)\r\n   product_name = Column(String(30),nullable=False)\r\n\r\n   user= relationship(\"User\",back_populates=\"products\")\r\n```\r\n\r\nNow I have a common place to put all of these which is `orm.py`\r\nIn orm file, I import all the models\r\n\r\n```\r\nfrom user import * # noqa\r\nfrom product import * # noqa\r\n\r\n..... here other models if necessary..\r\n```\r\n\r\nThen in alembic/env.py I have this configuraton\r\n\r\n```\r\nfrom something import orm, settings\r\n\r\n# this is the Alembic Config object, which provides\r\n# access to the values within the .ini file in use.\r\nconfig = context.config\r\n\r\n# Interpret the config file for Python logging.\r\n# This line sets up loggers basically.\r\nfileConfig(config.config_file_name)\r\n\r\n# add your model's MetaData object here\r\n# for 'autogenerate' support\r\n# from myapp import mymodel\r\n# target_metadata = mymodel.Base.metadata\r\ntarget_metadata = [\r\n    orm.Base.metadata] ###### this is where I define target_metadata\r\n\r\n# other values from the config, defined by the needs of env.py,\r\n# can be acquired:\r\n# my_important_option = config.get_main_option(\"my_important_option\")\r\n# ... etc.\r\n\r\nconfig.set_main_option(\"sqlalchemy.url\", settings.pg_dsn) # here I set the url of db\r\n\r\ndef run_migrations_offline():\r\n    \"\"\"Run migrations in 'offline' mode.\r\n    This configures the context with just a URL\r\n    and not an Engine, though an Engine is acceptable\r\n    here as well.  By skipping the Engine creation\r\n    we don't even need a DBAPI to be available.\r\n    Calls to context.execute() here emit the given string to the\r\n    script output.\r\n    \"\"\"\r\n    url = config.get_main_option(\"sqlalchemy.url\")\r\n    context.configure(\r\n        url=url,\r\n        target_metadata=target_metadata,\r\n        literal_binds=True,\r\n        dialect_opts={\"paramstyle\": \"named\"},\r\n    )\r\n\r\n    with context.begin_transaction():\r\n        context.run_migrations()\r\n\r\n\r\ndef run_migrations_online():\r\n    \"\"\"Run migrations in 'online' mode.\r\n    In this scenario we need to create an Engine\r\n    and associate a connection with the context.\r\n    \"\"\"\r\n    connectable = engine_from_config(\r\n        config.get_section(config.config_ini_section),\r\n        prefix=\"sqlalchemy.\",\r\n        poolclass=pool.NullPool,\r\n    )\r\n\r\n    with connectable.connect() as connection:\r\n        context.configure(\r\n            connection=connection, target_metadata=target_metadata\r\n        )\r\n\r\n        with context.begin_transaction():\r\n            context.run_migrations()\r\n\r\n\r\nif context.is_offline_mode():\r\n    run_migrations_offline()\r\nelse:\r\n    run_migrations_online()\r\n\r\n```\r\n\r\nAnd maybe from this example this will work even without importing but in general when I have more models, and I make migration and start the API, and when I want to make some functions that include those models I end up with:\r\n\r\n```\r\nsqlalchemy.exc.InvalidRequestError: When initializing mapper mapped class User->user, expression 'Product' failed to locate a name (\"name 'Product' is not defined\"). If this is a class name, consider adding this relationship() to\r\nthe <class 'project.src.somepackagename.user'> class after both dependent classes have been defined.\r\n```\r\n\r\nHow I fix this:\r\nI go to one of the models, lets say at `user.py` and add:\r\n\r\n```\r\nfrom mymodule.db import Base\r\n# I ADD THE LINE BELOW:\r\n########################\r\nfrom product import Product\r\n########################\r\nclass User(Base):\r\n    __versioned__ = {}\r\n    id = Column(Integer, primary_key=True)\r\n   name = Column(String(30),nullable=False)\r\n\r\n   products = relationship(\"Product\",back_populates=\"user\")\r\n```\r\nand even tho is not being used anywhere, this does the trick and works.\r\nBut I am talking for more models, and it's extremly hard to manage..\r\n\r\nSo guys, any help is appreciated here, because this is blocking me now to continue with other parts of the application.\r\nThank in advance to everyone!!\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1242/comments",
    "author": "vjanz",
    "comments": [
      {
        "user": "fullonic",
        "created_at": "2020-04-13T08:49:34Z",
        "body": "Hey @vjanz, this issue isn't related with FastAPI. Therefore, labeling it as a bug doesn't make sense. You can import all your models where you define your FastAPI instance, so your app will be aware of that. This should fix your sqlalchemy issue"
      },
      {
        "user": "vjanz",
        "created_at": "2020-04-29T12:39:18Z",
        "body": "Fixed, imported all the models declared in orm.py, in each module __init__ file like:\r\n`\r\nfrom orm import * #noqa\r\n`\r\nCheers!"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-06-05T20:50:17Z",
        "body": "Thanks for the help here @fullonic !\r\n\r\nThanks @vjanz for reporting back and closing the issue."
      }
    ]
  },
  {
    "number": 1236,
    "title": "Jsonable encoder stores state which affects encoding across the entire app",
    "created_at": "2020-04-10T12:30:34Z",
    "closed_at": "2023-02-28T10:21:25Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1236",
    "body": "Is there a way to json encode a pydantic model without mutating the underlying config for the object? It seems that if I call jsonable_encoder with a custom encoding it mutates the json encoder config for all models that inherit from API model. \r\n\r\n```\r\n\r\nclass APIModel(BaseModel):\r\n    class Config(BaseConfig):\r\n        orm_mode = False\r\n\r\n    def dump_obj(self, **jsonable_encoder_kwargs: Any) -> Dict[str, Any]:\r\n        return jsonable_encoder(self, **jsonable_encoder_kwargs)\r\n\r\nclass AccountCreate(APIModel):\r\n    name: str\r\n    type: AccountTypes\r\n    provider: Providers\r\n    balance: Optional[float]\r\n    iso_currency_code: Optional[str]\r\n    logo: str\r\n    provider_metadata: ProviderMetadata\r\n    account_metadata: AccountMetadata\r\n\r\n\r\nacc = jsonable_encoder(account, custom_encoder={datetime: lambda x: x})\r\nparsed_account = AccountCreate({**acc, \"id\": result.id}) # when this is dumped the new object will still use custom encoder defined in the previous step. \r\n```",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1236/comments",
    "author": "maitham",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-08-03T12:06:38Z",
        "body": "Hey @maitham , as your example has a bunch of code from other places that is not available, and part of it is only a description in the comment, it's not really possible to try it/run it and understand your use case to debug it.\r\n\r\nPlease provide a self-contained minimal example that shows the problem, that way I (or someone else) can see it and try to help you."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T10:07:13Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 1184,
    "title": "dependency_overrides as a contextmanager",
    "created_at": "2020-03-30T07:56:42Z",
    "closed_at": "2023-02-28T10:19:55Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1184",
    "body": "### Is your feature request related to a problem\r\n\r\nI wanted to test the need of auth in many endpoints, so I had to do this\r\n```python\r\napp.dependency_overrides.pop(auth.verify_token, None)\r\n\r\nresponse = client.get(\"/admins\")\r\nassert response.status_code == 401\r\n\r\napp.dependency_overrides[auth.verify_token] = lambda: True\r\n\r\n# [...]\r\n# operations who needs auth\r\n\r\napp.dependency_overrides.pop(auth.verify_token, None)\r\n```\r\n\r\nin order to test it. I think this is not readable and a good practice.\r\n\r\n**Obs**: I did `app.dependency_overrides.pop(auth.verify_token, None)` instead of `app.dependency_overrides = {}` because the second one deletes all my overrides and I just want to make sure `auth.verify_token` has not been overridden. I think this behavior could be changed to be `app.dependency_overrides = {auth.verify_token: None}`, because setting a function to be `None` doesn't makes much sense and could be used as a sign to use the actual function. \r\n\r\n### The solution you would like\r\n\r\nUsing the same example as before, it would be nice to write it like this\r\n```python\r\ndependencies_to_override = {auth.verify_token: None}\r\nwith app.dependency_overrides.from(dependencies_to_override):\r\n    response = client.get(\"/admins\")\r\n    assert response.status_code == 401\r\n\r\ndependencies_to_override = {auth.verify_token: lambda: True}\r\nwith app.dependency_overrides.from(dependencies_to_override):\r\n    # [...]\r\n    # operations who needs auth\r\n```\r\n\r\n### Describe alternatives you've considered\r\n\r\nUnfortunately I couldn't think of any other way.\r\n\r\n### Additional context\r\n\r\nI'm open to any feedback. Thank you.\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1184/comments",
    "author": "scratchmex",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-04-13T19:24:53Z",
        "body": "Thanks for the suggestion.\r\n\r\nWell, I think the readability difference between the two options is subjective.\r\n\r\nThe version with `with` definitely looks fancier, but I wouldn't think it's more explicit or clear what's happening.\r\n\r\nBut I'm pretty sure that you can write a Pytest fixture that lets you do something similar. Or even a plain context manager function that takes the app and your dependencies, and that you can re-use everywhere in your code.\r\n\r\nIt could look something like:\r\n\r\n```Python\r\ndependencies_to_override = {auth.verify_token: None}\r\nwith overrider(app, dependencies_to_override):\r\n    response = client.get(\"/admins\")\r\n    assert response.status_code == 401\r\n\r\ndependencies_to_override = {auth.verify_token: lambda: True}\r\nwith overrider(app, dependencies_to_override):\r\n    # [...]\r\n    # operations who needs auth\r\n```\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-04-24T00:01:54Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T10:07:39Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 1163,
    "title": "Asyncio wait() websocket unexpected disconnect",
    "created_at": "2020-03-25T04:54:34Z",
    "closed_at": "2023-02-28T10:18:53Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1163",
    "body": "### First check\r\n\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n\r\nI'm trying to listen for data on a websocket while simultaneously doing some work in another function, but if there is more data before the function exits I want to something else. I understand that this is a bit more of a Starlette problem, but I couldn't get any help there.\r\n```\r\ndata = await websocket.receive_json()\r\nwhile True:\r\n    try:\r\n        done, pending = await asyncio.wait({eval_worker(data, websocket), websocket.receive_json()}, return_when=asyncio.FIRST_COMPLETED)\r\n        # do stuff with done\r\n    except Exception:\r\n        return\r\n```\r\nIt results in this error: ```\r\nERROR:    Task exception was never retrieved\r\nfuture: <Task finished name='Task-9' coro=<WebSocket.receive_json() done, defined at /***/venv/lib/python3.8/site-packages/starlette/websockets.py:94> exception=WebSocketDisconnect(1000)>\r\nTraceback (most recent call last):\r\n  File \"/***/venv/lib/python3.8/site-packages/starlette/websockets.py\", line 98, in receive_json\r\n    self._raise_on_disconnect(message)\r\n  File \"/***/venv/lib/python3.8/site-packages/starlette/websockets.py\", line 80, in _raise_on_disconnect\r\n    raise WebSocketDisconnect(message[\"code\"])\r\nstarlette.websockets.WebSocketDisconnect: 1000```\r\n\r\nI passed the websocket object to the function so that it can send data while it is also listening. I understand that this could be problematic, but even when I don't pass the websocket to the function it results in the same disconnect error.\r\nAny insight?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1163/comments",
    "author": "kmani314",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-04-13T18:57:56Z",
        "body": "Wouldn't it make sense to have the exception handling in your `eval_worker` function?\r\n\r\nYou might also want to `await websocket.close(code=1000)` in your except block.\r\n\r\n<!-- issue-manager: answered -->\r\n"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-04-24T00:01:57Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 1155,
    "title": "dependencies inherited from typing.Generic",
    "created_at": "2020-03-23T14:31:14Z",
    "closed_at": "2023-02-28T10:18:41Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1155",
    "body": "How can I avoid 'args' and 'kwargs' as a required query parameters if I use typing.Generic?\r\n\r\n\r\nI have got next generic base class\r\n\r\n```python\r\nfrom typing import Generic, Type, TypeVar\r\n\r\nModelType = TypeVar(\"ModelType\", bound=BaseModel)\r\nCreateSchemaType = TypeVar(\"CreateSchemaType\", bound=BaseModel)\r\nUpdateSchemaType = TypeVar(\"UpdateSchemaType\", bound=BaseModel)\r\n\r\nclass CRUDBase(Generic[ModelType, CreateSchemaType, UpdateSchemaType]):\r\n\r\n    def __init__(self, db: Database, table: Table, model: Type[ModelType]):\r\n        self.db = db\r\n        self.model = model\r\n        self.table = table\r\n```\r\n\r\nAnd successor class which used as a dependency \r\n\r\n```python\r\n\r\nclass UserService(CRUDBase[User, UserCreate, UserUpdate]):\r\n    def __init__(self, db: Database = Depends(get_db)):\r\n        super().__init__(db, UserTable, User)\r\n```\r\n\r\nSince typing.Generic has overwritten `__new__` method, so FastAPI makes `args` and `kwargs` as a required query attributes.\r\n\r\nI have only one solution with a factory function, have you another solution?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1155/comments",
    "author": "snaffi",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-04-13T18:48:01Z",
        "body": "Nope, I don't have a different solution as FastAPI needs to be able to read the function signature.\r\n\r\nNevertheless, given that the generics part of `CRUDBase` is just to provide type checks and nothing more, you could remove that part and then it would work normally.\r\n\r\nOtherwise, you could create a `UserService` that creates an internal instance of `CRUDBase` and uses it internally instead of inheriting from it.\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-04-24T00:01:58Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      },
      {
        "user": "dardosordi",
        "created_at": "2021-06-03T21:37:25Z",
        "body": "Got it working somehow with this decorator.\r\n\r\n```python\r\ndef restore_signature(cls):\r\n    @functools.wraps(cls)\r\n    def wrap(*args, **kwargs):\r\n        return cls(*args, **kwargs)\r\n\r\n    sig = inspect.signature(cls.__init__)\r\n    parameters = list(sig.parameters.values())[1:]\r\n\r\n    wrap.__signature__ = sig.replace(parameters=parameters)\r\n    return wrap\r\n```"
      },
      {
        "user": "myheartsgoon",
        "created_at": "2021-08-07T03:10:58Z",
        "body": "> Got it working somehow with this decorator.\r\n> \r\n> ```python\r\n> def restore_signature(cls):\r\n>     @functools.wraps(cls)\r\n>     def wrap(*args, **kwargs):\r\n>         return cls(*args, **kwargs)\r\n> \r\n>     sig = inspect.signature(cls.__init__)\r\n>     parameters = list(sig.parameters.values())[1:]\r\n> \r\n>     wrap.__signature__ = sig.replace(parameters=parameters)\r\n>     return wrap\r\n> ```\r\n\r\n@dardosordi Could you please share detail how you get it working?"
      },
      {
        "user": "dardosordi",
        "created_at": "2021-08-09T21:57:29Z",
        "body": "> @dardosordi Could you please share detail how you get it working?\r\n\r\n```python\r\nclass BaseService(Generic[ModelType, CreateSchemaType, UpdateSchemaType]):\r\n    def __init__(self, model: Type[ModelType], db: Session):\r\n      \"\"\"Base class for generic service\"\"\"\r\n\r\n@generic_dependency\r\nclass UserService(BaseService[User, UserCreate, UserUpdate]):\r\n    def __init__(self, db: Session = Depends(get_db)):\r\n        super().__init__(User, db)\r\n\r\n@router.post(\"/signup\")\r\ndef signup(user_service: UserService = Depends()):\r\n \r\n```"
      }
    ]
  },
  {
    "number": 1154,
    "title": "get_running_loop/get_event_loop doesnt seem to run in fastapi..but runs in starlette",
    "created_at": "2020-03-22T17:28:51Z",
    "closed_at": "2023-02-28T10:18:38Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1154",
    "body": "This works in Starlette\r\n\r\n```\r\n#!/usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\nimport inspect\r\nimport os\r\nimport sys\r\n\r\nimport asyncio\r\n\r\nimport uvicorn\r\nfrom starlette.applications import Starlette\r\nfrom starlette.responses import JSONResponse\r\n\r\napp = Starlette(debug=True)\r\n\r\n\r\ndef main():\r\n    CONFIG = uvicorn.Config(\r\n        app,\r\n        host=\"0.0.0.0\",\r\n        port=8000,\r\n        lifespan=\"on\",\r\n        loop=\"uvloop\",\r\n        log_level=\"info\",\r\n        use_colors=True,\r\n        workers=1,\r\n    )\r\n    SERVER = uvicorn.Server(config=CONFIG)\r\n    LOOP = asyncio.new_event_loop()\r\n    asyncio.set_event_loop(LOOP)\r\n\r\n    try:\r\n        LOOP.run_until_complete(SERVER.serve())\r\n\r\n    except asyncio.CancelledError:\r\n        pass\r\n\r\n    # uvicorn.run(app, host='127.0.0.1', port=8080)\r\n\r\n\r\n@app.route('/')\r\nasync def image(request):\r\n    # ext = request.path_params['ext']\r\n    loop = asyncio.get_running_loop()\r\n    return JSONResponse({'hello': 'world'})\r\n\r\n\r\n\r\nif __name__ == '__main__':\r\n    main()\r\n\r\n```\r\n\r\nThis does not work in fastapi\r\n```\r\n\r\nfrom fastapi import FastAPI\r\nimport asyncio\r\nimport uvicorn\r\n\r\nimport logging\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/\")\r\ndef root():\r\n    loop = asyncio.get_running_loop()\r\n    return{\"hello\":\"world\"}\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    logging.basicConfig(level=2, format=\"%(levelname)-9s %(message)s\")\r\n    CONFIG = uvicorn.Config(\r\n        app,\r\n        host=\"0.0.0.0\",\r\n        port=8000,\r\n        lifespan=\"on\",\r\n        loop=\"asyncio\",\r\n        log_level=\"info\",\r\n        use_colors=True,\r\n        workers=1,\r\n    )\r\n    SERVER = uvicorn.Server(config=CONFIG)\r\n\r\n    LOOP = asyncio.new_event_loop()\r\n    asyncio.set_event_loop(LOOP)\r\n\r\n    try:\r\n        LOOP.run_until_complete(SERVER.serve())\r\n    except asyncio.CancelledError:\r\n        pass\r\n```\r\n\r\nI'm looking to access the global event loop .\r\nam i doing anything wrong ?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1154/comments",
    "author": "sandys",
    "comments": [
      {
        "user": "phy25",
        "created_at": "2020-03-22T20:13:09Z",
        "body": "You need `async` for your `root()` function in your FastAPI app, otherwise it's running in a threaded pool."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-13T18:45:06Z",
        "body": "Thanks for your help here @phy25 ! :rocket: :cake: \r\n\r\nIf that answers your question you can close this issue @sandys \r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "sandys",
        "created_at": "2020-04-14T17:59:16Z",
        "body": "closed with thanks"
      }
    ]
  },
  {
    "number": 1151,
    "title": "websocket TestClient startup event not working",
    "created_at": "2020-03-21T17:45:01Z",
    "closed_at": "2023-02-28T10:18:31Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1151",
    "body": "`with TestClient(app).websocket_connect('/ws/') as websocket:` - does not seem to trigger startup event, or it triggers the startup and then it triggers the shutdown event right away",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1151/comments",
    "author": "Catastropha",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-04-06T16:24:02Z",
        "body": "I assume you solved your issue, right? Thanks for closing it :man_shrugging: :+1: "
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T10:08:09Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 1142,
    "title": "on_loaded with app context",
    "created_at": "2020-03-20T08:28:30Z",
    "closed_at": "2023-02-28T10:18:16Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1142",
    "body": "### Is your feature request related to a problem\r\n\r\nIs your feature request related to a problem? yes\r\n\r\nI am building a plugin-system where both libs and routes can be plugins. Libs can be async, so I need them loaded using `on_startup`. But when I want the routes, I need access to the `app` object (which is not available at `on_startup`).\r\n\r\n### The solution you would like\r\n\r\nI need to run code after `on_startup` is completed, but that code needs access to the app as well.\r\n\r\nSomething like\r\n```\r\ndef myappstuff(app):\r\n  app.include_router(...)\r\n\r\nasync def initialize_drivers():\r\n  ...\r\n\r\nFastAPI(\r\n   ...\r\n   on_startup=[initialize_drivers],\r\n   on_loaded=[myappstuff]\r\n)\r\n```\r\n\r\n### Describe alternatives you've considered\r\n\r\n* Putting everything after the app is available, but then I loose the possibility to do async\r\n* A callback hook on driver initialization, but to where? I need `app`\r\n* Putting router in `on_startup`, but then I loose the `app`\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1142/comments",
    "author": "xeor",
    "comments": [
      {
        "user": "xeor",
        "created_at": "2020-03-20T22:08:13Z",
        "body": "I found a way doing this using something like this:\r\n\r\n```\r\ndef setup():\r\n    \"\"\"\r\n    This function is called after app is available (via on_startup)\r\n    \"\"\"\r\n    another.function(app)\r\n\r\napp = FastAPI(\r\n    ...\r\n    on_startup=[..., startup],\r\n)\r\n```"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-06T16:37:01Z",
        "body": "Thanks for reporting back and closing the issue @xeor :+1: "
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T10:08:13Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 1128,
    "title": "`db: Depends(get_db_session)` leads to TypeError (`issubclass() arg 1 must be a class`)",
    "created_at": "2020-03-17T20:52:33Z",
    "closed_at": "2023-02-28T10:17:33Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1128",
    "body": "Dear @tiangolo, \r\n\r\nthe following thing drives me nuts. I started to develop my first FastAPI based REST API and there is something which I cannot solve since some time. \r\n\r\nI implemented user authentication based on your tutorial and I get the following error:\r\n\r\n```\r\nProcess SpawnProcess-12:\r\nTraceback (most recent call last):\r\n  File \"/Users/michael/src/private/trvmp-api/venv/lib/python3.7/site-packages/pydantic/validators.py\", line 560, in find_validators\r\n    if issubclass(type_, val_type):\r\nTypeError: issubclass() arg 1 must be a class\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/multiprocessing/process.py\", line 297, in _bootstrap\r\n    self.run()\r\n  File \"/usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/multiprocessing/process.py\", line 99, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"/Users/michael/src/private/trvmp-api/venv/lib/python3.7/site-packages/uvicorn/subprocess.py\", line 61, in subprocess_started\r\n    target(sockets=sockets)\r\n  File \"/Users/michael/src/private/trvmp-api/venv/lib/python3.7/site-packages/uvicorn/main.py\", line 382, in run\r\n    loop.run_until_complete(self.serve(sockets=sockets))\r\n  File \"uvloop/loop.pyx\", line 1456, in uvloop.loop.Loop.run_until_complete\r\n  File \"/Users/michael/src/private/trvmp-api/venv/lib/python3.7/site-packages/uvicorn/main.py\", line 389, in serve\r\n    config.load()\r\n  File \"/Users/michael/src/private/trvmp-api/venv/lib/python3.7/site-packages/uvicorn/config.py\", line 288, in load\r\n    self.loaded_app = import_from_string(self.app)\r\n  File \"/Users/michael/src/private/trvmp-api/venv/lib/python3.7/site-packages/uvicorn/importer.py\", line 20, in import_from_string\r\n    module = importlib.import_module(module_str)\r\n  File \"/Users/michael/src/private/trvmp-api/venv/lib/python3.7/importlib/__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 728, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"./app/main_2.py\", line 155, in <module>\r\n    async def read_users_me(current_user: User = Depends(get_current_active_user)):\r\n  File \"/Users/michael/src/private/trvmp-api/venv/lib/python3.7/site-packages/fastapi/routing.py\", line 487, in decorator\r\n    callbacks=callbacks,\r\n  File \"/Users/michael/src/private/trvmp-api/venv/lib/python3.7/site-packages/fastapi/routing.py\", line 431, in add_api_route\r\n    callbacks=callbacks,\r\n  File \"/Users/michael/src/private/trvmp-api/venv/lib/python3.7/site-packages/fastapi/routing.py\", line 334, in __init__\r\n    self.dependant = get_dependant(path=self.path_format, call=self.endpoint)\r\n  File \"/Users/michael/src/private/trvmp-api/venv/lib/python3.7/site-packages/fastapi/dependencies/utils.py\", line 268, in get_dependant\r\n    param=param, path=path, security_scopes=security_scopes\r\n  File \"/Users/michael/src/private/trvmp-api/venv/lib/python3.7/site-packages/fastapi/dependencies/utils.py\", line 107, in get_param_sub_dependant\r\n    security_scopes=security_scopes,\r\n  File \"/Users/michael/src/private/trvmp-api/venv/lib/python3.7/site-packages/fastapi/dependencies/utils.py\", line 143, in get_sub_dependant\r\n    use_cache=depends.use_cache,\r\n  File \"/Users/michael/src/private/trvmp-api/venv/lib/python3.7/site-packages/fastapi/dependencies/utils.py\", line 268, in get_dependant\r\n    param=param, path=path, security_scopes=security_scopes\r\n  File \"/Users/michael/src/private/trvmp-api/venv/lib/python3.7/site-packages/fastapi/dependencies/utils.py\", line 107, in get_param_sub_dependant\r\n    security_scopes=security_scopes,\r\n  File \"/Users/michael/src/private/trvmp-api/venv/lib/python3.7/site-packages/fastapi/dependencies/utils.py\", line 143, in get_sub_dependant\r\n    use_cache=depends.use_cache,\r\n  File \"/Users/michael/src/private/trvmp-api/venv/lib/python3.7/site-packages/fastapi/dependencies/utils.py\", line 277, in get_dependant\r\n    param=param, default_field_info=params.Query, param_name=param_name\r\n  File \"/Users/michael/src/private/trvmp-api/venv/lib/python3.7/site-packages/fastapi/dependencies/utils.py\", line 374, in get_param_field\r\n    field_info=field_info,\r\n  File \"/Users/michael/src/private/trvmp-api/venv/lib/python3.7/site-packages/pydantic/fields.py\", line 249, in __init__\r\n    self.prepare()\r\n  File \"/Users/michael/src/private/trvmp-api/venv/lib/python3.7/site-packages/pydantic/fields.py\", line 335, in prepare\r\n    self.populate_validators()\r\n  File \"/Users/michael/src/private/trvmp-api/venv/lib/python3.7/site-packages/pydantic/fields.py\", line 468, in populate_validators\r\n    *(get_validators() if get_validators else list(find_validators(self.type_, self.model_config))),\r\n  File \"/Users/michael/src/private/trvmp-api/venv/lib/python3.7/site-packages/pydantic/validators.py\", line 569, in find_validators\r\n    raise RuntimeError(f'error checking inheritance of {type_!r} (type: {display_as_type(type_)})')\r\nRuntimeError: error checking inheritance of <fastapi.params.Depends object at 0x10ad3a2d0> (type: Depends)\r\n\r\n```\r\n\r\nThis happens only when `get_current_user` has the following signature.\r\n```\r\nasync def get_current_user(db: Depends(get_db_session), token: str = Depends(oauth2_scheme)):\r\n    ...\r\n```\r\n\r\nIf I do not inject `db` via `Depends()`, everything is fine. But for working with a real database I assume to inject the Session object into `get_current_user`. Am I wrong here? \r\n\r\nTo see the whole code, have a look below.\r\nIf you uncomment line 111 and comment 112 (definition of `get_current_user`), everything works fine.\r\n\r\n```\r\nfrom datetime import datetime, timedelta\r\n\r\nimport jwt\r\nfrom fastapi import Depends, FastAPI, HTTPException\r\nfrom fastapi.security import OAuth2PasswordBearer, OAuth2PasswordRequestForm\r\nfrom jwt import PyJWTError\r\nfrom passlib.context import CryptContext\r\nfrom pydantic import BaseModel\r\n\r\n# to get a string like this run:\r\n# openssl rand -hex 32\r\nfrom starlette.status import HTTP_401_UNAUTHORIZED\r\n\r\nimport os\r\n\r\nfrom sqlalchemy import create_engine\r\nfrom sqlalchemy.ext.declarative import declarative_base\r\nfrom sqlalchemy.orm import sessionmaker, Session\r\n\r\nDATABASE_URL = os.environ['DATABASE_URL']\r\nengine = create_engine(DATABASE_URL)\r\nSessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)\r\nBase = declarative_base()\r\n\r\n\r\ndef get_db_session() -> Session:\r\n    try:\r\n        db = SessionLocal()\r\n        yield db\r\n    finally:\r\n        db.close()\r\n\r\n\r\nSECRET_KEY = \"09d25e094faa6ca2556c818166b7a9563b93f7099f6f0f4caa6cf63b88e8d3e7\"\r\nALGORITHM = \"HS256\"\r\nACCESS_TOKEN_EXPIRE_MINUTES = 30\r\n\r\n\r\nfake_users_db = {\r\n    \"johndoe\": {\r\n        \"username\": \"johndoe\",\r\n        \"full_name\": \"John Doe\",\r\n        \"email\": \"johndoe@example.com\",\r\n        \"hashed_password\": \"$2b$12$EixZaYVK1fsbw1ZfbX3OXePaWxn96p36WQoeG6Lruj3vjPGga31lW\",\r\n        \"disabled\": False,\r\n    }\r\n}\r\n\r\n\r\nclass Token(BaseModel):\r\n    access_token: str\r\n    token_type: str\r\n\r\n\r\nclass TokenData(BaseModel):\r\n    username: str = None\r\n\r\n\r\nclass User(BaseModel):\r\n    username: str\r\n    email: str = None\r\n    full_name: str = None\r\n    disabled: bool = None\r\n\r\n\r\nclass UserInDB(User):\r\n    hashed_password: str\r\n\r\n\r\npwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")\r\n\r\noauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"/token\")\r\n\r\napp = FastAPI()\r\n\r\n\r\ndef verify_password(plain_password, hashed_password):\r\n    return pwd_context.verify(plain_password, hashed_password)\r\n\r\n\r\ndef get_password_hash(password):\r\n    return pwd_context.hash(password)\r\n\r\n\r\ndef get_user(db, username: str):\r\n    if username in db:\r\n        user_dict = db[username]\r\n        return UserInDB(**user_dict)\r\n\r\n\r\ndef authenticate_user(fake_db, username: str, password: str):\r\n    user = get_user(fake_db, username)\r\n    if not user:\r\n        return False\r\n    if not verify_password(password, user.hashed_password):\r\n        return False\r\n    return user\r\n\r\n\r\ndef create_access_token(*, data: dict, expires_delta: timedelta):\r\n    to_encode = data.copy()\r\n    if expires_delta:\r\n        expire = datetime.utcnow() + expires_delta\r\n    else:\r\n        expire = datetime.utcnow() + timedelta(minutes=15)\r\n    to_encode.update({\"exp\": expire})\r\n    encoded_jwt = jwt.encode(to_encode, SECRET_KEY, algorithm=ALGORITHM)\r\n    return encoded_jwt\r\n\r\n\r\n# async def get_current_user(token: str = Depends(oauth2_scheme)):\r\nasync def get_current_user(db: Depends(get_db_session), token: str = Depends(oauth2_scheme)):\r\n    credentials_exception = HTTPException(\r\n        status_code=HTTP_401_UNAUTHORIZED,\r\n        detail=\"Could not validate credentials\",\r\n        headers={\"WWW-Authenticate\": \"Bearer\"},\r\n    )\r\n    try:\r\n        payload = jwt.decode(token, SECRET_KEY, algorithms=[ALGORITHM])\r\n        username: str = payload.get(\"sub\")\r\n        if username is None:\r\n            raise credentials_exception\r\n        token_data = TokenData(username=username)\r\n    except PyJWTError:\r\n        raise credentials_exception\r\n    user = get_user(fake_users_db, username=token_data.username)\r\n    if user is None:\r\n        raise credentials_exception\r\n    return user\r\n\r\n\r\nasync def get_current_active_user(current_user: User = Depends(get_current_user)):\r\n    if current_user.disabled:\r\n        raise HTTPException(status_code=400, detail=\"Inactive user\")\r\n    return current_user\r\n\r\n\r\n@app.post(\"/token\", response_model=Token)\r\nasync def login_for_access_token(form_data: OAuth2PasswordRequestForm = Depends()):\r\n    user = authenticate_user(fake_users_db, form_data.username, form_data.password)\r\n    if not user:\r\n        raise HTTPException(\r\n            status_code=HTTP_401_UNAUTHORIZED,\r\n            detail=\"Incorrect username or password\",\r\n            headers={\"WWW-Authenticate\": \"Bearer\"},\r\n        )\r\n    access_token_expires = timedelta(minutes=ACCESS_TOKEN_EXPIRE_MINUTES)\r\n    access_token = create_access_token(\r\n        data={\"sub\": user.username}, expires_delta=access_token_expires\r\n    )\r\n    return {\"access_token\": access_token, \"token_type\": \"bearer\"}\r\n\r\n\r\n@app.get(\"/users/me/\", response_model=User)\r\nasync def read_users_me(current_user: User = Depends(get_current_active_user)):\r\n    return current_user\r\n\r\n\r\n@app.get(\"/users/me/items/\")\r\nasync def read_own_items(id: int, current_user: User = Depends(get_current_active_user)):\r\n    return [{\"item_id\": \"Foo\", \"owner\": current_user.username}]\r\n```",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1128/comments",
    "author": "mymindwentblvnk",
    "comments": [
      {
        "user": "mymindwentblvnk",
        "created_at": "2020-03-17T20:55:47Z",
        "body": "Oh my god. I hassle for some weeks with this error and now I see it at a glance:\r\n\r\nUsing the right syntax with changing\r\n`async def get_current_user(db: Depends(get_db_session), token: str = Depends(oauth2_scheme)):`\r\nto\r\n`async def get_current_user(db: Session = Depends(get_db_session), token: str = Depends(oauth2_scheme)):`\r\ndoes the trick of course. \r\n\r\nThanks for your patience. And thanks for FastAPI :) \r\n\r\n\r\n\r\n"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-06T16:49:45Z",
        "body": "Great! Thanks for reporting back and closing issue :+1: :rocket: "
      }
    ]
  },
  {
    "number": 1116,
    "title": "How can i  get orginal post data   like  flask ",
    "created_at": "2020-03-14T12:20:19Z",
    "closed_at": "2023-02-28T10:16:58Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1116",
    "body": "flask :\r\n      @app.route('/check', methods=['GET', 'POST'])\r\n     def check():\r\n              data = request.data",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1116/comments",
    "author": "CL545740896",
    "comments": [
      {
        "user": "CL545740896",
        "created_at": "2020-03-14T12:57:56Z",
        "body": "Maybe  I  want  to  get   GET  parmas  and POST data  together"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T10:08:34Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 1113,
    "title": "Error exception handling doesn't propagate as expected",
    "created_at": "2020-03-12T17:06:02Z",
    "closed_at": "2023-02-28T10:16:48Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1113",
    "body": "### Describe the bug\r\n\r\nWhen setting an exception handler for Exception, it doesn't pass it to the ExceptionMiddleware. In some scenarios, exceptions are caught by ExceptionMiddleware but doesn't get to the error_handler. \r\n\r\n### To Reproduce\r\n\r\n1. Create a file with:\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\nfrom fastapi.responses import ORJSONResponse\r\n\r\ndef exception_handler(*args, **kwargs):\r\n    print(args)\r\n    print(kwargs)\r\n\r\n\r\napp = FastAPI()\r\napp.add_exception_handler(Exception, exception_handler)\r\n\r\n@app.get(\"/\", response_class=ORJSONResponse)\r\ndef read_root():\r\n    return 999999999999999999999999999999\r\n```\r\n\r\n3. Open the browser and call the endpoint `/`.\r\n4. Exception orjson. SONEncodeError occurs\r\n5. Expected is exception_handler to be called\r\n\r\n### Expected behavior\r\n\r\nexception_handler should be called.\r\n\r\n\r\n### Environment\r\n\r\n0.52.0\r\nPython 3.8.0\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1113/comments",
    "author": "aviramha",
    "comments": [
      {
        "user": "aviramha",
        "created_at": "2020-03-12T17:24:45Z",
        "body": "Seems like tester bug, sorry"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-06T16:57:54Z",
        "body": "Thanks for reporting back and closing the issue :+1: "
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T10:08:45Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 1105,
    "title": "Using Depends() in other functions, outside the endpoint path operation!",
    "created_at": "2020-03-11T09:25:17Z",
    "closed_at": "2023-02-28T10:37:54Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1105",
    "body": "Hey community,\r\n\r\nI don't know if this feature is available, but I want to ask if I can use dependencies outside endpoint path decorators and functions..\r\n\r\nI have this repository, when inside some function on that, I need another repository function to perform the full task.\r\nWhat I want to do is to inject that as a dependency, and not to create an instance of it, since that is best way to do that here in python, because I come from background of Java and I always used to initialize  a instance of that Class.\r\n\r\nSo basically..I have a function to get an instance of SynonymCrud()\r\n```\r\ndef get_synonym_crud():\r\n    return synonym_crud\r\n```\r\n\r\nthe function in to create a word, in #word_crud.py\r\n```\r\ndef create_word(self, word: WordCreate, dictionary_id: int, synonym: List[SynonymCreate],synonym_crud:SynonymCrud = Depends(get_synonym_crud)):\r\nw_dict = word.dict()\r\nw_dict.update({\"word\": word.word.lower()})\r\ndb_word = Word(**w_dict, dictionary_id=dictionary_id)\r\nself.database.add(db_word)\r\nself.database.commit()\r\nself.database.refresh(db_word)\r\nsynonyms_to_create = synonym_crud.create_many_synonyms(synonym, db_word.id)\r\nreturn db_word\r\n```\r\nHere I tried to inject: synonym_crud:SynonymCrud = Depends(get_synonym_crud), \r\nbut when I try to execute this on the endpoint I get an error, that says:\r\n`\r\nAttributeError: 'Depends' object has no attribute 'create_many_synonyms',` even tho I got this function in the SynonymRepository.\r\n\r\nThis is not the only case, even when I try to inject anything else like database dependency outside the endpoint I get like: `AttributeError: 'Depends' object has no attribute 'query' `or something similar.\r\n\r\nendpoint..\r\n```\r\n@router.post(\"/tests/words/\", response_model=Word)\r\ndef create_word(request: Request, word: WordCreate, dictionary_id: int,\r\nsynonym: List[SynonymCreate],\r\nlogger: logging.Logger = Depends(get_logger_test),\r\nword_repo: WordCrud = Depends(get_word_crud),\r\ncurrent_user: User = Depends(get_curr_active_superuser)):\r\nword_to_create = word_repo.find_by_name(word.word)\r\nif word_to_create:\r\nraise HTTPException(status_code=400, detail=\"Word already exists\")\r\nword_created = word_repo.create_word(word, dictionary_id, synonym)\r\n\r\n    return word_created\r\n```\r\nHere the other dependency word_repo, works without any error, but when I try to inject anything outside the endpoint functions( like the example with synonym).\r\n\r\nIs this possible, or what am I doing wrong?\r\nThank you in advance\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1105/comments",
    "author": "vjanz",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-04-06T17:07:09Z",
        "body": "Hey @vjanz , if your code runs outside of FastAPI you're better using explicit objects.\r\n\r\nDependencies are, in the end, a way to get or process data based on a request. But if your code is not related to a request (not in a FastAPI app) then there's no advantage and it would just add complexity to your code.\r\n\r\nOn the other side, a dependency function is in the end, just a function. So, if you pass all the arguments with the correct values instead of letting it get the default value returned by `Depends()` you can just use it directly as a normal function.\r\n\r\nAnyway, I assume you solved your problem, so, thanks for closing the issue :+1: "
      },
      {
        "user": "rfleschenberg",
        "created_at": "2021-09-08T12:45:45Z",
        "body": "One situation where this would be useful is if you have code paths outside of router functions (the equivalent of Django management commands, basically) that you are calling from tests, and you want to share your `dependency_overrides` with them.\r\n\r\nI guess I can use monkey-patching / `unittest.mock` instead, but having `dependency_overrides` \"just work\" would be nice."
      },
      {
        "user": "m4bwav",
        "created_at": "2023-01-08T17:47:33Z",
        "body": "A good dependency injection system can have value outside of a web request."
      },
      {
        "user": "unkindypie",
        "created_at": "2023-01-12T18:21:23Z",
        "body": "> A good dependency injection system can have value outside of a web request.\r\n\r\nTotally agree. I have a dozen services built on top of FastAPI's DI system and I simply can't use them without manually setting up all of their dependencies if I would like to run a service from a CRON task which isn't a part of FastAPI app."
      },
      {
        "user": "couteau",
        "created_at": "2023-01-15T19:08:01Z",
        "body": "Agree that when you have lots of dependencies and sub dependencies, setting them up manually is not ideal. I came up with a quick and dirty solution to this that works for my use case (basically, using the same set of services for command line scripts as for api endpoints). Not sure if it will work for all use cases -- e.g., I'm not sure what would happen if any dependencies depended on query parameters, path parameters, headers, or cookies.\r\n\r\nIt looks like this:\r\n\r\n```\r\nimport argparse\r\nimport inspect\r\nfrom abc import abstractmethod\r\nfrom contextlib import AsyncExitStack\r\nfrom typing import Callable\r\n\r\nfrom fastapi import Request\r\nfrom fastapi.dependencies.models import Dependant\r\nfrom fastapi.dependencies.utils import (\r\n    get_dependant,\r\n    solve_dependencies\r\n)\r\nfrom pydantic import ValidationError\r\n\r\n\r\nclass Command:\r\n    def __init__(self, name: str | None = None, namespace=None):\r\n        self.name = name or self.__class__.__name__\r\n        self.parser = self.make_parser()\r\n        self.args = self.parser.parse_args(namespace=namespace)\r\n\r\n    # override to add command-line arguments\r\n    def make_parser(self) -> argparse.ArgumentParser:\r\n        return argparse.ArgumentParser(prog=self.name)\r\n\r\n    @abstractmethod\r\n    async def command(self):\r\n        pass\r\n\r\n    async def solve_command(self, request: Request, dependant: Dependant):\r\n        values, errors, _1, _2, _3 = await solve_dependencies(request=request, dependant=dependant)\r\n        if errors:\r\n            raise ValidationError(errors, None)\r\n        if inspect.iscoroutinefunction(dependant.call):\r\n            result = await dependant.call(**values)\r\n        else:\r\n            result = dependant.call(**values)\r\n\r\n        return result\r\n\r\n    async def run_command(self, command: Callable):\r\n        async with AsyncExitStack() as cm:\r\n            request = Request({\r\n                \"type\": \"http\",\r\n                \"headers\": [],\r\n                \"query_string\": \"\",\r\n                \"fastapi_astack\": cm\r\n            })\r\n\r\n            dependant = get_dependant(\r\n                path=f\"command:{self.name}\",\r\n                call=command\r\n            )\r\n\r\n            return await self.solve_command(request, dependant)\r\n\r\n    async def run(self):\r\n        return await self.run_command(self.command)\r\n```\r\nA subclass can override the `command` method and add/use any top-level dependencies. The dependencies will then be resolved and the `command` method executed when the script calls the `run` method. Or an arbitrary function with dependencies can be invoked using the `run_command` method.\r\n\r\nE.g.,\r\n```\r\nimport asyncio\r\nfrom fastapi import Depends\r\nfrom app.services import MyService\r\nfrom app.command import Command\r\n\r\nclass MyCommand(Command):\r\n    async def command(self, service: MyService = Depends()):\r\n        service.DoSomething()\r\n\r\ndef main():\r\n    command = MyCommand(\"my-command\")\r\n    asyncio.run(command.run())\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\nor\r\n```\r\nimport asyncio\r\nfrom fastapi import Depends\r\nfrom app.services import MyService\r\nfrom app.command import Command\r\n\r\nasync def command(service: MyService = Depends()):\r\n    service.DoSomething()\r\n\r\ndef main():\r\n    command = Command(\"my-command\")\r\n    asyncio.run(command.run_command(command))\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n"
      }
    ]
  },
  {
    "number": 1094,
    "title": "JWT how to customize Scheme_name?",
    "created_at": "2020-03-08T04:04:51Z",
    "closed_at": "2023-02-28T10:15:55Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1094",
    "body": "Hello, I recently used the Fastapi framework and wanted to use “ TOKEN + jwt_string” for JWT verification. I set scheme_name = TOKEN in OAuth2PasswordBearer, but I directly judged in the source code of OAuth2PasswordBearer whether scheme_name.lower () is equal to \" \"Bearer\", how can this be resolved?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1094/comments",
    "author": "wxq0309",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-04-06T17:01:58Z",
        "body": "I assume you solved your problem, thanks for closing the issue :+1: "
      }
    ]
  },
  {
    "number": 1086,
    "title": "use form feed in models docstrings to truncate description",
    "created_at": "2020-03-06T10:38:14Z",
    "closed_at": "2023-02-28T18:34:19Z",
    "labels": [
      "question",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1086",
    "body": "It would be nice if the model description text generation work the same way as the path documentation one, by truncating the docstrings  at form feed (\\f) character if present.\r\n\r\nCurrently (FastAPI 0.52.0), the full docstrings is included in the OpenAPI schema, which prevents from using it to properly document the class at Python level.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1086/comments",
    "author": "EricPobot",
    "comments": [
      {
        "user": "jearistiz",
        "created_at": "2020-10-03T14:29:31Z",
        "body": "I think this would be a great feature as well!"
      },
      {
        "user": "thatguysimon",
        "created_at": "2022-09-08T09:39:57Z",
        "body": "I believe this is actually a Pydantic issue.\r\n```python\r\nIn [19]: from pydantic import BaseModel\r\nIn [20]: class Banana(BaseModel):\r\n    ...:     \"\"\"\r\n    ...:     one\r\n    ...:     \\f\r\n    ...:     two\r\n    ...:     \"\"\"\r\n    ...: \r\n\r\nIn [21]: Banana.schema()\r\nOut[21]: \r\n{'title': 'Banana',\r\n 'description': 'one\\n\\x0c\\ntwo',\r\n 'type': 'object',\r\n 'properties': {}}\r\n```"
      }
    ]
  },
  {
    "number": 1081,
    "title": "How to define the routes using different method",
    "created_at": "2020-03-04T10:29:39Z",
    "closed_at": "2023-02-28T10:15:24Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1081",
    "body": "\r\n### Description\r\n\r\nHow can I define the route supporting 'get' and 'post' methos simutaneously? As like the codes in Flask: \"@app.route('/api/test', methods=['GET', 'POST'])\"\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1081/comments",
    "author": "BinNong",
    "comments": [
      {
        "user": "jorgerpo",
        "created_at": "2020-03-04T15:08:49Z",
        "body": "Can you show the function in your  flask code?\r\n\r\n"
      },
      {
        "user": "Toad2186",
        "created_at": "2020-03-05T00:29:52Z",
        "body": "You can do something like this:\r\n```\r\n@app.get('/route')\r\n@app.post('/route')\r\nasync def myhandler():\r\n    pass\r\n```\r\n\r\nBut each of the HTTP verbs have different semantics, so in the general case you probably should have different handlers..."
      },
      {
        "user": "jorgerpo",
        "created_at": "2020-03-05T02:10:02Z",
        "body": "exactly"
      },
      {
        "user": "BinNong",
        "created_at": "2020-03-05T06:11:22Z",
        "body": "thanks"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-06T17:12:41Z",
        "body": "Thanks for the help here eveyone! :bowing_man: \r\n\r\nThanks @BinNong for reporting back and closing the issue :+1: "
      }
    ]
  },
  {
    "number": 1075,
    "title": "return response directly in dependency",
    "created_at": "2020-03-03T09:54:47Z",
    "closed_at": "2023-02-28T10:15:15Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1075",
    "body": "### Is your feature request related to a problem\r\nYes. \r\nCurrently, fastapi support raise HttpExpection in dependency and return a response struct like this:\r\n{detail: \"error\"}.\r\n\r\nI want to be able to return a self-defined response, but I can't because now I can only return {\"detail\": xxxxx}\r\n\r\n### The solution you would like\r\n\r\nFor example, I want to \r\nreturn HttpException(status_code=200, data={\"haha\":\"Hello\", \"code\": 20000}),\r\nand the frontend recieve successful reponse struct like this:\r\n{\r\ndata:{\"haha\":\"Hello\", \"code\": 20000},\r\ncode: 200\r\n}\r\n\r\n\r\n\r\nThank you!\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1075/comments",
    "author": "Chandlercjy",
    "comments": [
      {
        "user": "Dustyposa",
        "created_at": "2020-03-04T02:00:08Z",
        "body": "Can you paste your code?\r\n```python\r\nasync def http404_error_handler(\r\n        _: Request,\r\n        exc: HTTPException\r\n) -> JSONResponse:\r\n    return JSONResponse(\r\n        {\"errors\": \"no route\", \"server_msg\": exc.detail}, status_code=HTTP_404_NOT_FOUND\r\n    )\r\n\r\n...\r\napplication.add_exception_handler(HTTP_404_NOT_FOUND, http404_error_handler)\r\n\r\n```\r\nthis code work fine for me."
      },
      {
        "user": "gautamsinghania95",
        "created_at": "2020-03-10T05:17:35Z",
        "body": "@Dustyposa I have done a similar fix in my code as well. However, from a correctness point of view, I feel that the solution as suggested by @Chandlercjy should be implemented."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-13T15:20:29Z",
        "body": "The `HTTPException` is for returning client errors, not generic responses. The way to do that would be as @Dustyposa says, to implement a custom exception and a custom error handler that returns your custom response.\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T10:09:19Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 1073,
    "title": "cannot import name 'Request' from 'fastapi' ",
    "created_at": "2020-03-03T04:12:06Z",
    "closed_at": "2023-02-28T10:15:12Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1073",
    "body": " File \".\\myapi.py\", line 4, in <module>\r\n    from fastapi import FastAPI, Request\r\nImportError: cannot import name 'Request' from 'fastapi' (c:\\users\\administrator\\appdata\\local\\programs\\python\\python37\\lib\\site-packages\\fastapi\\__init__.py)",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1073/comments",
    "author": "somenzz",
    "comments": [
      {
        "user": "somenzz",
        "created_at": "2020-03-03T04:23:03Z",
        "body": "The latest version  0.52.0 has no problem."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T10:09:23Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 1069,
    "title": "➜  ~ git:(master) ✗ pip install fastapi[all] zsh: no matches found: fastapi[all]",
    "created_at": "2020-03-02T05:37:04Z",
    "closed_at": "2023-02-28T10:14:49Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1069",
    "body": "➜  ~ git:(master) ✗ pip install fastapi[all]\r\nzsh: no matches found: fastapi[all]",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1069/comments",
    "author": "yuanjie-ai",
    "comments": [
      {
        "user": "pmav99",
        "created_at": "2020-03-02T08:52:33Z",
        "body": "The problem is that in zsh, contrary to bash `[` and `]` have special meaning. You need to use quotes: `pip install 'fastapi[all]'` or escape them `pip install fastapi\\[all\\]`\r\n\r\n"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-13T15:11:51Z",
        "body": "Thanks for the help @pmav99 ! :cake: \r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-04-25T00:01:43Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      },
      {
        "user": "pimenvibritania",
        "created_at": "2021-11-15T15:14:06Z",
        "body": "> pip install fastapi\\[all\\]\r\n\r\nwow thanks"
      }
    ]
  },
  {
    "number": 1044,
    "title": "Returning a pydantic model without using the aliases",
    "created_at": "2020-02-27T05:42:43Z",
    "closed_at": "2023-02-28T10:14:24Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1044",
    "body": "### First check\r\n\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n\r\n### Description\r\n\r\nHow can I disable the alias generator in Pydantic when returning a response model from an endpoint? I only want to use the alias generator when loading an object into the model.\r\n\r\nSpecifically, is it possible to return JSON in snake case, if I have an alias generator that I use on the schema to automatically load camel case?\r\n\r\n### Additional context\r\n\r\nEx. my schema is this.\r\n\r\n```\r\nclass SomeSchema(BaseModel):\r\n    some_name: str\r\n\r\n    class Config:\r\n        alias_generator = to_camel\r\n```\r\n\r\nI make an external API call that returns camel case, and through the alias generator, I can directly load the response into a model.\r\n\r\n```\r\nsome_api_response = {\"someName\": \"bob\"}\r\nsome_schema = SomeSchema.parse_obj(some_api_response)\r\n```\r\n\r\nNow, I want to make a GET request to my FastAPI application, and return `SomeSchema`, but in snake case.\r\n\r\nI found `response_model_by_alias` that can be passed to the `router.get(...)` decorator. I thought `response_model_by_alias=False` would disable use of the alias generator, but it seems to make no difference.\r\n\r\nThanks!\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1044/comments",
    "author": "iishyfishyy",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2022-10-14T21:37:43Z",
        "body": "You can probably create a `BaseSomeSchema` model that has all the fields, and another one that inherits from it and only adds the config for `alias_generator`, say `InputSomeSchema`, and use that one for input and `BaseSomeSchema` for `response_model`/output.\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2022-10-25T00:25:00Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 1042,
    "title": "Schema inferred from function's return signature.",
    "created_at": "2020-02-26T22:39:46Z",
    "closed_at": "2023-02-28T10:55:17Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1042",
    "body": "Hey @tiangolo! I've been wondering why FastAPI doesn't use the function's return `->` signature instead of the `response_model` argument? I think it would be a bit more natural to express the return schema like this:\r\n\r\n```python\r\n@router.post(\"/\")\r\ndef create_worker(\r\n    params: CreateWorker, auth_token: str = Depends(shared.get_authorization)\r\n) -> CreateWorkerResponse:\r\n    # code\r\n    return CreateWorkerResponse(...)\r\n```",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1042/comments",
    "author": "cgarciae",
    "comments": [
      {
        "user": "phy25",
        "created_at": "2020-02-26T23:04:34Z",
        "body": "Duplicate of #620."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-06T17:23:12Z",
        "body": "Thanks @cgarciae for reporting back and closing the issue :+1: "
      }
    ]
  },
  {
    "number": 1035,
    "title": "Optional Query parameter list",
    "created_at": "2020-02-25T16:05:16Z",
    "closed_at": "2023-02-28T10:54:50Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1035",
    "body": "### First check\r\n\r\n* [ x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [ x] I searched the FastAPI documentation, with the integrated search.\r\n* [ x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n\r\n### Description\r\n\r\nDocumentation is very clear that we can use lists e,g \r\n```\r\n@app.get(\"/\")\r\nasync def my_query(q: List[str] = Query([\"a\",\"b\",\"c\",\"d\"])):\r\n```\r\nHow can I:\r\nHave an ***optional*** list structure, from the documentation we include the key word `None` \r\ne.g:\r\n```\r\nvalues:str = None\r\n```\r\nMeaning we can have two scenarios:\r\n- `/q=a&q=b (q is present and item is in list) ` \r\n- `/ (q is not present)`\r\n\r\nTryied: `Query(None,[\"a\",\"b\",\"c\",\"d\"])`  but it didnt worked\r\n\r\n\r\n### Additional context\r\nUsing  `fastapi==0.49.0`\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1035/comments",
    "author": "jorgejesus",
    "comments": [
      {
        "user": "phy25",
        "created_at": "2020-02-25T17:04:46Z",
        "body": "Not sure if you want the default to be `None` why you want `[\"a\",\"b\",\"c\",\"d\"]` to be a default as well. You can try `typing.Optional[typing.List] = Query([\"a\",\"b\",\"c\",\"d\"])`."
      },
      {
        "user": "jorgejesus",
        "created_at": "2020-02-25T17:32:02Z",
        "body": "My apologies since we have the following note:\r\n\r\n> Have in mind that in this case, FastAPI won't check the contents of the list.\r\n\r\nTherefore there is no problem on missing the `q`  (and its content) on the query\r\n\r\n\r\n\r\n\r\n"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-06T17:25:44Z",
        "body": "Thanks for the help here @phy25 ! :bowing_man: \r\n\r\nThanks for reporting back and closing the issue @jorgejesus  :+1: "
      }
    ]
  },
  {
    "number": 1034,
    "title": "Parametrizing a class dependency on a sub-dependency",
    "created_at": "2020-02-25T13:25:35Z",
    "closed_at": "2023-02-28T10:54:43Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1034",
    "body": "### First check\r\n\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n\r\n### Description\r\n\r\nWhen dealing with sub-dependencies, the documentation introduces e.g.\r\n```\r\noauth2_scheme = OAuth2PasswordBearer(...)\r\n```\r\n```\r\nasync def get_current_user(token: str = Depends(oauth2_scheme)):\r\n    ...\r\n```\r\nChained dependencies / sub-dependencies can be achieved with free functions.\r\n\r\nThe documentation also introduces parametrized dependencies in the form of callable instances, e.g.\r\n```\r\nclass FixedContentQueryChecker:\r\n    def __init__(self, fixed_content: str):\r\n        self.fixed_content = fixed_content\r\n\r\n    def __call__(self, q: str = \"\"):\r\n        if q:\r\n            return self.fixed_content in q\r\n        return False\r\n\r\nchecker = FixedContentQueryChecker(\"bar\")\r\n\r\n@app.get(\"/query-checker/\")\r\nasync def read_query_check(fixed_content_included: bool = Depends(checker)):\r\n    return {\"fixed_content_in_query\": fixed_content_included}\r\n```\r\n\r\nNow is there a way I can write a `CurrentUserFetcher` class, parametrized on an `OAuth2` instance?\r\n\r\nThis would take the following form:\r\n```\r\noauth2_scheme = OAuth2PasswordBearer(...)\r\n\r\nget_current_user = CurrentUserFetcher(oauth2_scheme)\r\n\r\n@app.get(\"/foo/\")\r\nasync def get_foo(current_user: User = Depends(get_current_user)):\r\n  ...\r\n```\r\n\r\nThank you",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1034/comments",
    "author": "gpakosz",
    "comments": [
      {
        "user": "alvarogf97",
        "created_at": "2020-02-26T07:50:11Z",
        "body": "Do you want to authenticate an user in your system by using a dependency called `get_current_user` or creates a class dependency?"
      },
      {
        "user": "gpakosz",
        "created_at": "2020-02-26T20:55:41Z",
        "body": "I want `get_current_user` to be a callable instance of a class dependency. So that I can parametrize the `get_current_user` on sub-dependency."
      },
      {
        "user": "alvarogf97",
        "created_at": "2020-02-26T21:24:05Z",
        "body": "Maybe something like this?\r\n\r\n```python\r\nimport datetime\r\nimport jwt\r\nimport pydantic\r\nfrom fastapi import HTTPException\r\nfrom fastapi import Depends\r\nfrom fastapi.security import OAuth2PasswordBearer\r\nfrom fastapi.security import OAuth2PasswordRequestForm\r\nfrom starlette import status\r\n\r\n\r\nTOKEN_AUDIENCE = 'urn:users'\r\nTOKEN_URL = '/auth/login/'\r\nTOKEN_LIFETIME_SECONDS = 1000\r\nTOKEN_ALGORITHM = 'HS256'\r\nTOKEN_SECRET = 'yoursupersecret'\r\n\r\n\r\nauthorization = OAuth2PasswordBearer(TOKEN_URL, auto_error=False)\r\n\r\n\r\nclass User():\r\n  \"\"\"User data class.\"\"\"\r\n\r\n  id: int\r\n  is_verified: bool\r\n  create_date: datetime.datetime\r\n  password: str\r\n  name: str\r\n  email: pydantic.EmailStr\r\n  birth_date: datetime.date\r\n\r\n\r\nasync def get_current_user(\r\n    token: str = Depends(authorization)\r\n) -> User:\r\n  \"\"\"Get current user from the request metadata.\r\n\r\n  Args:\r\n    token (str): authorization token.\r\n\r\n  Raises:\r\n    HTTPException: whether there is no authenticated user.\r\n\r\n  Returns:\r\n    models.user.schemas.User: the user who performs the request.\r\n  \"\"\"\r\n  if not token:\r\n    _unauthorized()\r\n  try:\r\n    data = await decode_token(token, TOKEN_AUDIENCE)\r\n    user_id = data.get('user_id')\r\n    if not user_id:\r\n      _unauthorized()\r\n    # Get your user here from database\r\n    return await User.get(user_id)\r\n  except jwt.PyJWTError:\r\n    _unauthorized()\r\n\r\n\r\nasync def generate_token(\r\n    user: User,\r\n    audience: str = TOKEN_AUDIENCE,\r\n    lifetime: int = TOKEN_LIFETIME_SECONDS\r\n) -> str:\r\n  \"\"\"Generates authentication token for the given user.\r\n\r\n  Args:\r\n    user (models.user.schemas.User): the user the token will be generated for.\r\n    audience (str, optional): token audience. Defaults to st.TOKEN_AUDIENCE.\r\n    lifetime (int, optional): token seconds lifetime. Defaults to\r\n      st.TOKEN_LIFETIME_SECONDS\r\n\r\n  Returns:\r\n    str: the user authentication token.\r\n  \"\"\"\r\n  expire = (\r\n      datetime.datetime.utcnow() +\r\n      datetime.timedelta(seconds=int(lifetime)))\r\n  data = {\r\n      'user_id': user.id,\r\n      'aud': audience,\r\n      'exp': expire\r\n  }\r\n  return jwt.encode(\r\n      data, TOKEN_SECRET, algorithm=TOKEN_ALGORITHM).decode('utf-8')\r\n\r\n\r\nasync def decode_token(token: str, audience: str = TOKEN_AUDIENCE):\r\n  \"\"\"Decode token.\r\n\r\n  Args:\r\n    token (str): the token which will be decoded.\r\n    audience (str, optional): token audience. Defaults to st.TOKEN_AUDIENCE.\r\n\r\n  Raises:\r\n    jwt.PyJWTError: whether the given token is expired or malformed.\r\n\r\n  Returns:\r\n    dict: token decoded data.\r\n  \"\"\"\r\n  return jwt.decode(\r\n      token, TOKEN_SECRET,\r\n      audience=audience, algorithms=[TOKEN_ALGORITHM])\r\n\r\n\r\ndef verify_and_update_password(\r\n    plain_password: str, hashed_password: str\r\n) -> Tuple[bool, str]:\r\n  \"\"\"Verify the given password by matching it with the hashed one.\r\n\r\n  Args:\r\n    plain_password (str): plain password.\r\n    hashed_password (str): hashed password.\r\n\r\n  Returns:\r\n    Tuple[bool, str]: a tuple which contains if the password has been verified\r\n    and the new password hash.\r\n  \"\"\"\r\n  return pwd_context.verify_and_update(plain_password, hashed_password)\r\n\r\n\r\nasync def authenticate(\r\n    credentials: OAuth2PasswordRequestForm\r\n) -> User:\r\n  \"\"\"Authenticates a user with the given credentials.\r\n\r\n  Args:\r\n    credentials (OAuth2PasswordRequestForm): user credentials.\r\n\r\n  Returns:\r\n    schemas.User: the user who match with the given credentials.\r\n  \"\"\"\r\n  user = await User.get_by_email(credentials.username)\r\n\r\n  verified, updated_password_hash = verify_and_update_password(\r\n      credentials.password, user.password)\r\n\r\n  if not verified:\r\n    raise Exception('User not verified')\r\n\r\n  # Update password hash to a more robust one if needed\r\n  if updated_password_hash is not None:\r\n    user.hashed_password = updated_password_hash\r\n    await User.update(user)\r\n\r\n  return user\r\n\r\n\r\ndef _unauthorized(headers=None):\r\n  \"\"\"Raise HTTPException with 401 status code.\r\n\r\n  Args:\r\n    headers: (dict, optional): additional headers to the response. Defaults to\r\n      None.\r\n\r\n  Raises:\r\n    HTTPException: elevate handler unauthorized exception.\r\n  \"\"\"\r\n  detail = 'Not authenticated'\r\n  raise HTTPException(status_code=status.HTTP_401_UNAUTHORIZED, detail=detail)\r\n```\r\n\r\nTake care with User **get get_by_email update**, the are operations examples and are not implemented in the example code."
      },
      {
        "user": "gpakosz",
        "created_at": "2020-02-28T07:41:35Z",
        "body": "@alvarogf97 I'm asking about sub-dependencies when writing dependencies as classes. If you read my question carefully, you'll realize the excerpt you pasted uses sub-dependencies when writing dependencies as free functions.\r\n\r\nI know you tried to help but all in all you're just adding noise my question 😐"
      },
      {
        "user": "gpakosz",
        "created_at": "2020-03-17T20:17:36Z",
        "body": "@tiangolo Any idea please?"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-13T14:44:30Z",
        "body": "Sure, you can do that, just pass the subdependencies in the `__call__()`.\r\n\r\nE.g. copying your fragments, something like:\r\n\r\n```Python\r\n\r\noauth2_scheme = OAuth2PasswordBearer(...)\r\n\r\nclass ParameterizedGetUser:\r\n    def __init__(self, some_config: str):\r\n        self.some_config = some_config\r\n\r\n    def __call__(self, token: str = Depends(oauth2_scheme)):\r\n        if self.some_config == \"something\":\r\n            return token\r\n        return False\r\n\r\n\r\n@app.get(\"/items/\")\r\nasync def read_items(user: User = Depends(ParameterizedGetUser(some_config=\"Foo\"))):\r\n    return {\"message\": \"Hello World\"}\r\n```\r\n\r\n:warning: I'm just copying your snippets and combining them, you'll have to adapt it and check it with your code.\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "gpakosz",
        "created_at": "2020-04-13T14:57:23Z",
        "body": "But can the `oauth2_scheme` instance be passed to `ParameterizedGetUser`'s constructor?"
      },
      {
        "user": "transfluxus",
        "created_at": "2020-04-24T10:20:55Z",
        "body": "I have the same issue for endpoints where I have a sub-dependency that depend on an authorization dependency swagger doesnt seem to get that it need authorization (the lock icon is not shown) and swagger doesn send the token (Bearer in my case).\r\n... edit: in fact, if I have both dependencies it doesn't work. Only when the auth dependency is present it works (even tho, when I have both the lock symbol is shown, but the token not sent)"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-06-05T19:50:17Z",
        "body": "> But can the oauth2_scheme instance be passed to ParameterizedGetUser's constructor?\r\n\r\n@gpakosz I'm not sure I understand what do you mean with that :thinking: \r\n\r\n@transfluxus please create a minimal self-contained example showing the problem, that way it's easier to help."
      },
      {
        "user": "transfluxus",
        "created_at": "2020-06-14T17:21:27Z",
        "body": "@tiangolo damn in my minimal self-contained example its working... :smiley: "
      },
      {
        "user": "tiangolo",
        "created_at": "2020-06-14T17:34:14Z",
        "body": "@transfluxus Hehe that happens...\r\n\r\nComparing your self-contained example with your complete app will probably help you to find the bug/problem. It could be somewhere in your app's code, or even maybe in FastAPI itself. :shrug: "
      },
      {
        "user": "gpakosz",
        "created_at": "2020-06-14T20:20:19Z",
        "body": "@tiangolo I would like write\r\n\r\n```\r\noauth2_scheme_variant1 = ...\r\n\r\noauth2_scheme_variant2 = ...\r\n\r\n@app.get(\"/foo/\")\r\nasync def get_foo(user: User = Depends(ParameterizedGetUser(oauth2_scheme_variant1)):\r\n    return {\"message\": \"foo\"}\r\n\r\n@app.get(\"/bar/\")\r\nasync def get_bar(user: User = Depends(ParameterizedGetUser(oauth2_scheme_variant2))):\r\n    return {\"message\": \"bar\"}\r\n```\r\n\r\nSo as to write the `ParameterizedGetUser` once, and inject a sub-dependency via the constructor."
      },
      {
        "user": "gpakosz",
        "created_at": "2020-06-17T07:30:25Z",
        "body": "@tiangolo in your suggestion:\r\n```\r\ndef __call__(self, token: str = Depends(oauth2_scheme)):\r\n```\r\n\r\nYou're hardcoding the dependency in the `def __call__` definition.\r\nIn other words, I'm asking whether there's a way to make the dependency a member variable of the class that defines the `__call__` function"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-06-17T18:53:31Z",
        "body": "Hmm, you can probably do something like: \r\n\r\n```Python\r\nfrom typing import Callable\r\nfrom fastapi import FastAPI, Depends\r\nfrom fastapi.security import OAuth2PasswordBearer\r\n\r\noauth2_scheme = OAuth2PasswordBearer(...)\r\n\r\napp = FastAPI()\r\n\r\n\r\ndef get_dependency(auth: Callable, some_config: str):\r\n    def dependency(value: str = Depends(auth)):\r\n        print(some_config)\r\n        return value\r\n\r\n    return dependency\r\n\r\n\r\n@app.get(\"/foo/\")\r\nasync def get_foo(\r\n    current_user: dict = Depends(get_dependency(oauth2_scheme, some_config=\"bar\"))\r\n):\r\n    return \"Hello World\"\r\n```"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-06-28T00:19:26Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      },
      {
        "user": "alexted",
        "created_at": "2022-08-08T09:47:37Z",
        "body": "It seems that there is no such possibility. \r\nI had the same problem - I want to parameterize the class-dependency with sub-dependencies via it's `__init__` instead of passing everything to `__call__` in runtime, and I haven't found a good solution for that."
      }
    ]
  },
  {
    "number": 1012,
    "title": "Openapi example breaks when using multiple dependencies with the same body",
    "created_at": "2020-02-20T20:32:00Z",
    "closed_at": "2023-02-28T10:54:08Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1012",
    "body": "If multiple dependencies use the same body parameter, the openapi example gets broken.\r\n\r\n### Steps to Reproduce\r\n1. Create a file with:\r\n```python\r\nfrom enum import Enum\r\n\r\nfrom fastapi import Depends, FastAPI\r\nfrom pydantic import BaseModel\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\nclass Title(str, Enum):\r\n    mr = 'Mr.'\r\n    ms = 'Ms.'\r\n    mrs = 'Mrs.'\r\n\r\n\r\nclass GreetRequest(BaseModel):\r\n    name: str\r\n    title: Title\r\n\r\n\r\ndef get_title(body: GreetRequest):\r\n    return body.title\r\n\r\n\r\ndef get_name(body: GreetRequest):\r\n    return body.name\r\n\r\n\r\n@app.post('/greet')\r\ndef greet(name: str = Depends(get_name), title: Title = Depends(get_title)):\r\n    return f\"greetings {title} {name}!\"\r\n\r\n\r\n# For debugging purposes the script can be run directly\r\nif __name__ == \"__main__\":\r\n    import uvicorn\r\n    uvicorn.run(app, host=\"0.0.0.0\", port=8000)\r\n```\r\n2. Run the file\r\n3. Open the browser, go to `localhost:8000/docs`\r\n4. The request body example is: \r\n```json\r\n{\r\n  \"body\": {\r\n    \"name\": \"string\",\r\n    \"title\": \"Mr.\"\r\n  }\r\n}\r\n```\r\n5. Try out your endpoint\r\n6. It fails with a `422` Unprocessable Entity\r\n\r\n### Expected behavior\r\n\r\nThe request body example should be:\r\n```json\r\n{\r\n  \"name\": \"string\",\r\n  \"title\": \"Mr.\"\r\n}\r\n```\r\n### Environment\r\n\r\n- OS: Linux / Windows\r\n- FastAPI Version: 0.48.0\r\n- Python Version: 3.7.5\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1012/comments",
    "author": "pypae",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-04-13T14:07:43Z",
        "body": "I think this was recently fixed, please try with the latest version `0.54.1`.\r\n\r\nI just tried with your example and it seems to be working as expected.\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-04-24T00:02:17Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T10:39:27Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 1006,
    "title": "Is it possible to get the actual endpoint callable when using a custom APIRoute class on a router.",
    "created_at": "2020-02-20T00:45:26Z",
    "closed_at": "2023-02-28T10:53:38Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1006",
    "body": "### First check\r\n\r\n* [ x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [ x] I searched the FastAPI documentation, with the integrated search.\r\n* [ x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n\r\n### Description\r\n\r\nIs it possible to get the actual endpoint callable when using a custom APIRoute class on a router. \r\n\r\n### Additional context\r\n\r\nSpecifically I would like to define something like the following:\r\n\r\n```python\r\nimport time\r\nfrom typing import Callable\r\n\r\nfrom fastapi import APIRouter, FastAPI\r\nfrom fastapi.routing import APIRoute\r\nfrom starlette.requests import Request\r\nfrom starlette.responses import Response\r\n\r\nclass CustomDecorator:\r\n    # ... standard class decorator implementation ...\r\n\r\n\r\nclass AnnotatedRoute(APIRoute):\r\n    def get_route_handler(self) -> Callable:\r\n        original_route_handler = super().get_route_handler()\r\n\r\n        async def custom_route_handler(request: Request) -> Response:\r\n            # ... get / examine the final handler signature here for CustomDecorator and do something with it ...\r\n            response: Response = await original_route_handler(request)\r\n\r\n        return custom_route_handler\r\n\r\n\r\napp = FastAPI()\r\nrouter = APIRouter(route_class=AnnotatedRoute)\r\n\r\n@router.get(\"/timed\")\r\n@CustomDecorator(...)\r\nasync def timed():\r\n    return {\"message\": \"Data\"}\r\n```\r\n\r\nI would like to use this for authorization / RBAC decoration of routes.  I've looked at the Starlet Middleware for Authentication and its not sufficient for my goals.  This was pretty trivial to do in flask so Im looking to be able to do something similar. \r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1006/comments",
    "author": "jimcarreer",
    "comments": [
      {
        "user": "jimcarreer",
        "created_at": "2020-02-20T00:57:08Z",
        "body": "Oh I'm an idiot, sorry I realized not 10 minutes after writing this that my custom APIRoute implementation will have the property \"endpoint\" which is the original callable associated with the route. Sorry for the needless chatter, that's what I get for coding drunk."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-06T17:45:13Z",
        "body": "Thanks for reporting back and closing the issue :+1: "
      }
    ]
  },
  {
    "number": 1003,
    "title": "How can I change openapi.json?",
    "created_at": "2020-02-19T17:19:21Z",
    "closed_at": "2023-02-28T10:53:29Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/1003",
    "body": "I try to add an optional field to an output schema and I get openapi.json with this field without a nullable flag.\r\n```\r\nclass OutSchema(BaseModel):\r\n    ....\r\n    removed_at: Optional[datetime.datetime]\r\n```\r\n```\r\n\"removed_at\": {\r\n            \"title\": \"Removed At\",\r\n            \"type\": \"string\",\r\n            \"format\": \"date-time\"\r\n}\r\n```\r\nHow can I add the flag to openapi.json?\r\nIt's important for me because I use openapi.json to generate C# clients.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/1003/comments",
    "author": "vadim-su",
    "comments": [
      {
        "user": "phy25",
        "created_at": "2020-02-19T17:58:49Z",
        "body": "See #833."
      },
      {
        "user": "vadim-su",
        "created_at": "2020-02-20T13:43:02Z",
        "body": "Thanks!"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-06T17:42:14Z",
        "body": "Thanks for the help @phy25 ! :cake: :bowing_man: \r\n\r\nThanks @deterok for reporting back and closing the issue :+1: "
      }
    ]
  },
  {
    "number": 996,
    "title": "Middleware for JWT cookie for Single Page Apps",
    "created_at": "2020-02-18T17:16:59Z",
    "closed_at": "2023-02-28T10:53:13Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/996",
    "body": "### First check\r\n\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n\r\n### Description\r\n\r\nThere are some semi-related issues on this already i.e. #796 #480, but they each take a different approach.\r\n\r\nI'm trying to setup a custom middleware to support storing JWTs across two cookies (double submit cookie). Can't seem to find any documentation on how to implement something similar to Starlette Session middleware so I've used the decorator from fastapi. I've added the middleware below. \r\n\r\nThe idea is that instead of overriding the `OAuth2PasswordBearer` (as in the two linked issues) we normalise the request with the middleware. So reconstructing the JWT from the cookies and adding a new `Authorization` header to the request. Unfortunately that appears to require us to recreate the request object.\r\n\r\nDoes this look like a sane approach? The code is working but it feels a bit dirty manipulating the request like that.\r\n\r\n```python\r\n@app.middleware(\"http\")\r\nasync def process_spa_cookie(request: Request, call_next):\r\n    # TODO: this could probably be better written as a full starlette middleware, but there doesn't appear to be any\r\n    #  docs on how to create one; task for another time\r\n    cookie_auth = False\r\n    # The auth cookie is split to ensure JS doesn't have full access (http_only), so we have to recreate it\r\n    cookie_session: str = request.cookies.get(\"auth_session\")\r\n    cookie_token: str = request.cookies.get(\"auth_token\")\r\n\r\n    # We only want to execute this logic if there is a cookie present\r\n    if cookie_token and cookie_session:\r\n        # Flag so that we know to update the cookies after successful request\r\n        cookie_auth = True\r\n\r\n        # Checking for this header is imperative to defend against CSRF. Only JS can modify request headers, and only\r\n        # within the same origin\r\n        x_requested_with: str = request.headers.get(\"X-Requested-With\")\r\n\r\n        if not x_requested_with or x_requested_with not in ['XMLHttpRequest', 'paw-client']:\r\n            return JSONResponse({\"detail\": \"Missing 'X-Requested-With' header; rejected\"}, status_code=status_codes.HTTP_400_BAD_REQUEST)\r\n\r\n        # Check to see if there is an authorization header in addition to cookies. Reject the request if so. Simplifies\r\n        # debugging if we know it is one or the other.\r\n        header_authorization: str = request.headers.get(\"Authorization\")\r\n        if header_authorization:\r\n            return JSONResponse({\"detail\": \"Multiple auth methods detected; rejected\"}, status_code=status_codes.HTTP_400_BAD_REQUEST)\r\n\r\n        auth_token = f\"{cookie_token}.{cookie_session}\"\r\n        cookie_authorization: str = f\"Bearer {auth_token}\"\r\n\r\n        # To modify the request authorization header we need to recreate the request after modifying the scope\r\n        request_scope = request.scope\r\n        # NOTE: important that the header key be lowercase, otherwise the security code will not parse it correctly\r\n        # NOTE: header encoding appears to use latin-1 encoding instead of utf-8; can catch you out\r\n        request_scope['headers'].append((\"authorization\".encode(\"latin-1\"), cookie_authorization.encode(\"latin-1\")))\r\n        request = Request(request_scope, send=request._send, receive=request.receive)\r\n\r\n    # Continue normal execution\r\n    response = await call_next(request)\r\n\r\n    # If this request was authorized via cookie, and it was successful, update the cookie to push back the expires time\r\n    if cookie_auth and response.status_code in SUCCESSFULL_RESPONSE_CODES:\r\n        # Check to see if endpoints have set the auth cookies (login or logout)\r\n        auth_cookies_configured = any(\"auth_token\" in s for s in response.headers.getlist('set-cookie'))\r\n\r\n        if not auth_cookies_configured:\r\n            # No auth cookie is present in the response, and it was a successful response, so we should update the\r\n            # cookie to extend the expires time\r\n            updated_token = await refresh_token_for_cookie(current_token=auth_token)\r\n            await generate_auth_cookies(response=response, token=updated_token)\r\n\r\n    return response\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/996/comments",
    "author": "lhmatt",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2022-10-24T11:03:55Z",
        "body": "The best way to implement it would probably be with dependencies and not with a middleware. The dependency could be set for the whole app or a whole router too. And that dependency would expect/extract the cookie using `Cookie` in the definition.\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2022-11-04T00:17:41Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 995,
    "title": "Docs: add a complete example of docs (swagger) customization",
    "created_at": "2020-02-18T16:51:31Z",
    "closed_at": "2023-02-28T19:07:49Z",
    "labels": [
      "feature",
      "question",
      "investigate",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/995",
    "body": "Maintainers and contributors: thank you very much! 🚀 \r\n\r\n### Is your feature request related to a problem\r\n\r\nCurrently, the documentation on how to customize the interactive Swagger interface is spread over many different pages, making it difficult to grasp what is possible and how it should be done (`response_model`, `response_class`, dicts, routes/decorators arguments, `Body` arguments, `FastAPI` arguments, Pydantic models and schemas, docstrings, docstrings markers, etc.).\r\n\r\nThe auto-generated interactive documentation page is real plus when using FastAPI, so at some point one wants to make it complete with descriptions and examples. Instead of skimming through multiple pages searching for this documentation-related information, it would be absolutely great to have a first-class \"Documenting your API\" page with a complete example!\r\n\r\nI think it would help separating the work for new projects in two clear phases: implementation/experimentation, and refining/completion of the API interface. Once one is comfortable with how documenting is done, both phases can be merged again when adding new functionality.\r\n\r\n### The solution you would like\r\n\r\nAdd a page containing a full example of documentation/customization with query, body, cookie parameters examples and descriptions, responses codes, descriptions, examples and content types, tags, main title, main description, main version, etc.\r\n\r\n### Describe alternatives you've considered\r\n\r\nMaybe a good starting point would be to have a page with links pointing to the interesting sections 🙂 \r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/995/comments",
    "author": "pawamoy",
    "comments": [
      {
        "user": "dmontagu",
        "created_at": "2020-02-18T21:35:38Z",
        "body": "I personally would be in favor of adding a \"table of contents\"-style page for OpenAPI-related functionality (and perhaps also other groups of functionality that are spread across different pages)."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-13T11:21:38Z",
        "body": "Yeah, I guess that could be okay, although as all FastAPI is built around OpenAPI, it would probably end up having links to almost all the sections in the docs, so, not sure... Then the next issue would be making sure to have it in sync with the docs when they update...\r\n\r\nBut anyway, would you like to write a PR @pawamoy ?\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "pawamoy",
        "created_at": "2020-04-13T11:26:50Z",
        "body": "@tiangolo, sure, I'm always willing to resolve the issues I open, though I'm not sure when I'll be able to work on this :slightly_smiling_face: "
      },
      {
        "user": "mircohacker",
        "created_at": "2020-04-17T10:36:00Z",
        "body": "I am looking for exactly this page 🙂 can you provide a quick peek on how to attach descriptions to parameters and model fields. Docstrings at the method level are only set as description of the whole method. Individual documentation of method parameters is not possible this way. If I have this information I could also at least start the docs page."
      }
    ]
  },
  {
    "number": 991,
    "title": "Is it possible to get the current active user in middleware?",
    "created_at": "2020-02-17T13:44:44Z",
    "closed_at": "2023-02-28T10:53:08Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/991",
    "body": "I need to register information about the user and the body of the response, in Django it is easy to implement it in the middleware.\r\nIs it possible to get the current active user in middleware?\r\n```python\r\ndata = {\r\n    \"flow_id\": request.flow_id,\r\n    \"request\": {\r\n        \"method\": request.method,\r\n        \"uri\": request.get_raw_uri(),\r\n        \"login\": str(getattr(request.user, 'login', \"\")) or None,\r\n        \"data\": json.dumps(rest_request.data, ensure_ascii=False) if rest_request.data else None,\r\n        \"headers\": self._join_headers(request.headers._store.values())\r\n    },\r\n    \"response\": {\r\n        \"status\": rest_response.status_code,\r\n        \"reason\": rest_response.reason_phrase,\r\n        \"data\": json.dumps(\r\n            rest_response.data, ensure_ascii=False) if rest_response.data is not None else None,\r\n        \"headers\": self._join_headers(response._headers.values())\r\n    },\r\n    \"elapsed\": elapsed\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/991/comments",
    "author": "hyperleex",
    "comments": [
      {
        "user": "hyperleex",
        "created_at": "2020-02-17T14:20:55Z",
        "body": "Or Is it possible to get the current active user in custom APIRouter?\r\nand if i set` route_class=TimedRoute` to parent router, it is not work on child router `games.router`\r\n``` python\r\napi_router = APIRouter(route_class=TimedRoute)\r\n\r\napi_router.include_router(\r\n    games.router,\r\n    prefix=\"/games\",\r\n)\r\n```"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-06T17:44:02Z",
        "body": "I assume you solved your problem, so thanks for reporting back and closing the issue :+1: "
      },
      {
        "user": "ariminia",
        "created_at": "2022-01-10T18:32:42Z",
        "body": "Hey, Could you please share the solution you found? I need to implement a custom router that logs user and api url to obtain metrics on api usage per user."
      },
      {
        "user": "ariminia",
        "created_at": "2022-02-14T09:44:28Z",
        "body": "hi @hyperleex, Can you please share the solution here."
      }
    ]
  },
  {
    "number": 988,
    "title": "Validation Error when using `response_model` and Dynamic Key type",
    "created_at": "2020-02-16T23:36:06Z",
    "closed_at": "2023-02-28T10:52:42Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/988",
    "body": "### Describe the bug\r\n\r\nHi guys, seem that when using a Dynamic Key type of model with  `response_model` will raise `ValidationError` on the server side and returns `500` `Internal Server Error` to the client.\r\n\r\nI have the following example code, I believe I am using it correctly?\r\n\r\ncould this be relater to #911 ?\r\n\r\nI also realize I can substitute `response_model=PetsByName` with `response_model=Dict[str, str]`, but with the later I am not able to include an `example` in `schema_extra`, is there other way to do so? many thanks!\r\n\r\n### To Reproduce\r\n\r\nSteps to reproduce the behavior with a minimum self-contained file.\r\n\r\nReplace each part with your own scenario:\r\n\r\n1. Create a file with:\r\n\r\n `main.py` \r\n```\r\nfrom pydantic import BaseModel\r\nfrom fastapi import FastAPI\r\nfrom typing import Dict\r\n\r\napp = FastAPI()\r\n\r\nclass PetsByName(BaseModel):\r\n    __root__: Dict[str, str]\r\n\r\n    class Config:\r\n        schema_extra = {\r\n                'example': {'Otis': 'dog', 'Milo': 'cat'}\r\n            }\r\n\r\n@app.get(\"/animal/\", response_model=PetsByName)\r\nasync def animal():\r\n    return {'Otis': 'dog', 'Milo': 'cat'}\r\n```\r\n\r\n2. Using curl to test the endpoint:\r\n```\r\n$ curl -L localhost:8000/animal\r\nInternal Server Error\r\n```\r\n\r\n3. It returns a JSON with `Internal Server Error`.\r\n\r\n4. But I expected it to return `{'Otis': 'dog', 'Milo': 'cat'}`.\r\n\r\n5. Terminal output of the server:\r\n```\r\n...\r\n  File \"/home/merc/.virtualenvs/py38/lib/python3.8/site-packages/starlette/routing.py\", line 41, in app\r\n    response = await func(request)\r\n  File \"/home/merc/.virtualenvs/py38/lib/python3.8/site-packages/fastapi/routing.py\", line 140, in app\r\n    response_data = await serialize_response(\r\n  File \"/home/merc/.virtualenvs/py38/lib/python3.8/site-packages/fastapi/routing.py\", line 78, in serialize_response\r\n    raise ValidationError(errors, field.type_)\r\npydantic.error_wrappers.ValidationError: 1 validation error for PetsByName\r\nresponse -> __root__\r\n  field required (type=value_error.missing)\r\n```\r\n\r\n### Expected behavior\r\n\r\nAdd a clear and concise description of what you expected to happen.\r\n\r\n### Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n### Environment\r\n\r\n- OS: Ubuntu 19.04\r\n- FastAPI Version: 0.48.0\r\n- Python version: 3.8.1\r\n\r\n### Additional context\r\n\r\nSwaggerUI renders the `PetsByName` model along with the example correctly, no issue there.\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/988/comments",
    "author": "merc",
    "comments": [
      {
        "user": "merc",
        "created_at": "2020-02-16T23:49:46Z",
        "body": "After reading #911 it definitely is related to that. Will close this one and move myself over to #911 for discussion.  Many thanks!"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-06T17:50:44Z",
        "body": "Thanks for reporting back and closing the issue. Let's continue on the other one. :+1: "
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T10:40:04Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 960,
    "title": "Question: Fast api (with websockets) and UDP",
    "created_at": "2020-02-08T21:04:23Z",
    "closed_at": "2023-02-28T10:51:45Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/960",
    "body": "Hi,\r\n\r\nWe want to create an application that receives a message from IOT devices via UDP. \r\nWhen a message is received this should be stored in a database and a websocket broadcast should be sent to some clients.\r\n\r\nIs it possible to receive messages via UDP on a FastApi route and then send a message using websockets? I'm using the Postgresql fullstack example right now. \r\n\r\nkind regards,",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/960/comments",
    "author": "kllr",
    "comments": [
      {
        "user": "nsidnev",
        "created_at": "2020-02-13T19:30:13Z",
        "body": "@kllr \r\nHi! Neither `Starlette` nor `FastAPI` allow direct processing of UDP messages.\r\n\r\nBut at the same time you can open `asyncio` UDP socket and process the traffic in it.\r\n\r\nHere is an example that you can use to start:\r\n```python3\r\nimport asyncio\r\nfrom typing import Dict, Tuple\r\n\r\nfrom fastapi import FastAPI\r\nfrom starlette.endpoints import WebSocket, WebSocketEndpoint\r\n\r\nUDP_PORT = 8001\r\n\r\napp = FastAPI()\r\nws_clients: Dict[str, WebSocket] = {}\r\n\r\nasync def send_info_to_client(ws_client: WebSocket, data: bytes) -> None:\r\n    await ws_client.send_json({\"recevied\": str(data), \"from\": ws_client.client.host})\r\n\r\n\r\nclass MyUDPProtocol(asyncio.DatagramProtocol):\r\n    def connection_made(self, transport: asyncio.DatagramTransport) -> None:\r\n        self.transport = transport\r\n\r\n    def datagram_received(self, data: bytes, addr: Tuple[str, int]) -> None:\r\n        ws_client = ws_clients[addr[0]]\r\n        asyncio.create_task(send_info_to_client(ws_client, data))\r\n\r\n\r\n@app.websocket_route(\"/ws-route\")\r\nclass MyWSEndpoint(WebSocketEndpoint):\r\n    async def on_connect(self, websocket: WebSocket) -> None:\r\n        await websocket.accept()\r\n        ws_clients[websocket.client.host] = websocket\r\n\r\n    async def on_disconnect(self, websocket: WebSocket, close_code: int) -> None:\r\n        ws_clients.pop(websocket.client.host)\r\n\r\n\r\n@app.on_event(\"startup\")\r\nasync def on_startup() -> None:\r\n    loop = asyncio.get_running_loop()\r\n    transport, protocol = await loop.create_datagram_endpoint(\r\n        lambda: MyUDPProtocol(), local_addr=(\"0.0.0.0\", UDP_PORT)\r\n    )\r\n    app.state.udp_transport = transport\r\n    app.state.udp_protocol = protocol\r\n\r\n\r\n@app.on_event(\"shutdown\")\r\nasync def on_shutdown() -> None:\r\n    app.state.udp_transport.close()\r\n```"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-02-14T00:01:33Z",
        "body": "Thanks for the detailed example @nsidnev !\r\n\r\n@kllr you could also think about separating both parts, receiving UDP in a separate process, probably based on @nsidnev 's example, then store whatever intermediate values have to be sent in Redis, and, in a FastAPI app, read from that Redis and set via WebSockets.\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "kllr",
        "created_at": "2020-02-14T20:52:09Z",
        "body": "@nsidnev, Thanks for the great example! \r\nI'll go and try to use it and seperate the udp process like @tiangolo suggested.\r\nMy setup is using redis as a broker, so that sounds like it will work. \r\n\r\nThanks guys and have a good weekend. I'll close the question.\r\nCheers!"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T10:40:22Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 952,
    "title": "List of JSON as Input without using BaseModel",
    "created_at": "2020-02-06T18:46:56Z",
    "closed_at": "2023-02-28T10:51:15Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/952",
    "body": "### First check\r\n\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n\r\n### Description\r\n\r\nHow can I have a generic JSON as an input\r\n\r\n```\r\n\"params\": {\r\n    \"varA\": {\r\n      \"x\": \"2\",\r\n      \"version\": 4\r\n    },\r\n    \"y\":  [{\r\n              \"p\": 228.0,\r\n              \"q\": \"abcd\"\r\n            }]\r\n}\r\n```\r\nIf I define `y: List[Json]` I get:\r\n\r\n\"msg\": \"JSON object must be str, bytes or bytearray\",\r\n`HTTP/1.1\" 422 Unprocessable Entity`\r\n\r\nor `y: List[str]` or `y: str` \r\n`HTTP/1.1\" 400 Bad Request`\r\n\r\nIs it possible to have a generic JSON List as an input instead of having to define a hard-coded Pydantic BaseModel?\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/952/comments",
    "author": "alivcor",
    "comments": [
      {
        "user": "phy25",
        "created_at": "2020-02-06T19:25:09Z",
        "body": "`y: List[dict]` or `y: List[typing.Any]`?"
      },
      {
        "user": "alivcor",
        "created_at": "2020-02-06T19:33:35Z",
        "body": "@phy25 - Thanks  "
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-07T16:38:51Z",
        "body": "Thanks for the help here @phy25 ! :cake: :bowing_man: \r\n\r\nAnd thanks @alivcor for reporting back and closing the issue :+1: "
      }
    ]
  },
  {
    "number": 936,
    "title": "TypeError: __call__() missing 1 required positional argument: 'send'",
    "created_at": "2020-01-31T15:43:16Z",
    "closed_at": "2023-02-28T10:50:47Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/936",
    "body": "### Describe the bug\r\n\r\nGetting the following error:\r\n```error\r\nERROR:waitress:Exception while serving /\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/dist-packages/waitress/channel.py\", line 356, in service\r\n    task.service()\r\n  File \"/usr/local/lib/python3.7/dist-packages/waitress/task.py\", line 172, in service\r\n    self.execute()\r\n  File \"/usr/local/lib/python3.7/dist-packages/waitress/task.py\", line 440, in execute\r\n    app_iter = self.channel.server.application(environ, start_response)\r\nTypeError: __call__() missing 1 required positional argument: 'send'\r\n```\r\n\r\n### To Reproduce\r\n\r\n```Python\r\nimport waitress\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\n@app.get(\"/move/{direction_char}\")\r\ndef read_root(direction_char: str):\r\n    return {\"DirectionChar\": direction_char}\r\n\r\nwaitress.serve(app)\r\n```\r\n### Expected behavior\r\n\r\nExpected a JSON response along the lines of {\"DirectionChar\": \"A\"}\r\n\r\n### Environment\r\n\r\n- OS: Debian 10\r\n- FastAPI Version: 0.47.1\r\n\r\n- Python version: 3.7.3",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/936/comments",
    "author": "Technerder",
    "comments": [
      {
        "user": "phy25",
        "created_at": "2020-01-31T16:54:04Z",
        "body": "fastapi only supports ASGI, not WSGI."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-02-13T21:44:00Z",
        "body": "Thanks @phy25 !\r\n\r\nYep, @Technerder you would normally use Uvicorn, Daphne, Hypercorn. Or something like Gunicorn running Uvicorn.\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "Technerder",
        "created_at": "2020-02-13T23:35:00Z",
        "body": "That makes sense, thanks!"
      }
    ]
  },
  {
    "number": 926,
    "title": "AssertionError with multiple path params and form depends",
    "created_at": "2020-01-28T13:06:30Z",
    "closed_at": "2023-02-28T10:50:32Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/926",
    "body": "### First check\r\n\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n\r\n### Description\r\n\r\nConsidering the following class and route definition:\r\n```python\r\nclass DocumentUpdateForm():\r\n    def __init__(\r\n            self,\r\n            date: datetime.date = fastapi.Form(...),\r\n            file_object: Optional[fastapi.UploadFile] = fastapi.File(None),\r\n            name: str = fastapi.Form(...),\r\n            description: str = fastapi.Form(...),\r\n            category: str = fastapi.Form(...),\r\n    ) -> None:\r\n        self.date = date\r\n        self.file_object = file_object\r\n        self.name = name\r\n        self.description = description\r\n        self.category = category\r\n```\r\n```python\r\n@router.put('/{date}/{uuid}')\r\ndef update_document(\r\n    date: datetime.date,\r\n    uuid: str,\r\n    form_in: schema.DocumentUpdateForm = fastapi.Depends(),\r\n) -> None:\r\n    return\r\n```\r\n\r\nThe result is AssertionError.\r\n```python\r\nserver_development | Traceback (most recent call last):\r\nserver_development |   File \"/usr/local/lib/python3.8/multiprocessing/process.py\", line 315, in _bootstrap\r\nserver_development |     self.run()\r\nserver_development |   File \"/usr/local/lib/python3.8/multiprocessing/process.py\", line 108, in run\r\nserver_development |     self._target(*self._args, **self._kwargs)\r\nserver_development |   File \"/usr/local/lib/python3.8/site-packages/uvicorn/subprocess.py\", line 73, in subprocess_started\r\nserver_development |     target(sockets=sockets)\r\nserver_development |   File \"/usr/local/lib/python3.8/site-packages/uvicorn/main.py\", line 341, in run\r\nserver_development |     loop.run_until_complete(self.serve(sockets=sockets))\r\nserver_development |   File \"uvloop/loop.pyx\", line 1456, in uvloop.loop.Loop.run_until_complete\r\nserver_development |   File \"/usr/local/lib/python3.8/site-packages/uvicorn/main.py\", line 348, in serve\r\nserver_development |     config.load()\r\nserver_development |   File \"/usr/local/lib/python3.8/site-packages/uvicorn/config.py\", line 274, in load\r\nserver_development |     self.loaded_app = import_from_string(self.app)\r\nserver_development |   File \"/usr/local/lib/python3.8/site-packages/uvicorn/importer.py\", line 20, in import_from_string\r\nserver_development |     module = importlib.import_module(module_str)\r\nserver_development |   File \"/usr/local/lib/python3.8/importlib/__init__.py\", line 127, in import_module\r\nserver_development |     return _bootstrap._gcd_import(name[level:], package, level)\r\nserver_development |   File \"<frozen importlib._bootstrap>\", line 1014, in _gcd_import\r\nserver_development |   File \"<frozen importlib._bootstrap>\", line 991, in _find_and_load\r\nserver_development |   File \"<frozen importlib._bootstrap>\", line 975, in _find_and_load_unlocked\r\nserver_development |   File \"<frozen importlib._bootstrap>\", line 671, in _load_unlocked\r\nserver_development |   File \"<frozen importlib._bootstrap_external>\", line 783, in exec_module\r\nserver_development |   File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\nserver_development |   File \"./app/main.py\", line 7, in <module>\r\nserver_development |     from app.endpoints import country, data, document, login, user\r\nserver_development |   File \"./app/endpoints/document.py\", line 104, in <module>\r\nserver_development |     def update_document(\r\nserver_development |   File \"/usr/local/lib/python3.8/site-packages/fastapi/routing.py\", line 464, in decorator\r\nserver_development |     self.add_api_route(\r\nserver_development |   File \"/usr/local/lib/python3.8/site-packages/fastapi/routing.py\", line 407, in add_api_route\r\nserver_development |     route = route_class(\r\nserver_development |   File \"/usr/local/lib/python3.8/site-packages/fastapi/routing.py\", line 334, in __init__\r\nserver_development |     self.dependant = get_dependant(path=self.path_format, call=self.endpoint)\r\nserver_development |   File \"/usr/local/lib/python3.8/site-packages/fastapi/dependencies/utils.py\", line 267, in get_dependant\r\nserver_development |     sub_dependant = get_param_sub_dependant(\r\nserver_development |   File \"/usr/local/lib/python3.8/site-packages/fastapi/dependencies/utils.py\", line 102, in get_param_sub_dependant\r\nserver_development |     return get_sub_dependant(\r\nserver_development |   File \"/usr/local/lib/python3.8/site-packages/fastapi/dependencies/utils.py\", line 138, in get_sub_dependant\r\nserver_development |     sub_dependant = get_dependant(\r\nserver_development |   File \"/usr/local/lib/python3.8/site-packages/fastapi/dependencies/utils.py\", line 280, in get_dependant\r\nserver_development |     assert is_scalar_field(\r\nserver_development | AssertionError: Path params must be of one of the supported types\r\n```\r\nAny ideas what is wrong? What am I missing?\r\n\r\nIf I remove `form_in` it works.\r\nSimilarly if I remove one of the path params (and leave `form_in` in) it also works.\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/926/comments",
    "author": "pozsa",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-02-13T21:36:07Z",
        "body": "You are declaring the same name `date` in 2 places, a path parameter and a form.\r\n\r\nConsider them all as parameters of the same function, even if they are in a dependency, so one of them ends up overwriting the other.\r\n\r\nYou can change the form `date` to be named `date_form`, and then use an `alias` to make the form field still be `date`:\r\n\r\n```Python\r\nfrom typing import Union, Optional\r\nimport datetime\r\nfrom fastapi import FastAPI\r\nimport fastapi\r\n\r\napp = FastAPI()\r\n\r\nclass DocumentUpdateForm():\r\n    def __init__(\r\n            self,\r\n            date_form: datetime.date = fastapi.Form(..., alias=\"date\"),\r\n            file_object: Optional[fastapi.UploadFile] = fastapi.File(None),\r\n            name: str = fastapi.Form(...),\r\n            description: str = fastapi.Form(...),\r\n            category: str = fastapi.Form(...),\r\n    ) -> None:\r\n        self.date = date\r\n        self.file_object = file_object\r\n        self.name = name\r\n        self.description = description\r\n        self.category = category\r\n\r\n\r\n@app.put('/{date}/{uuid}')\r\ndef update_document(\r\n    date: datetime.date,\r\n    uuid: str,\r\n    form_in: DocumentUpdateForm = fastapi.Depends(),\r\n) -> None:\r\n    return\r\n\r\n```\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-02-24T00:02:13Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 925,
    "title": "How can I access files outside the app folder?",
    "created_at": "2020-01-28T10:25:24Z",
    "closed_at": "2023-02-28T10:50:30Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/925",
    "body": "I have a folder with a large number of images. Based on API requests, I need to send a few of them to the browser for display. However, the total number of files is too many and there isn't enough space on my main drive to hold them.\r\nHow can I access other folders in my Linux filesystem from FastAPI to load files?\r\nThanks\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/925/comments",
    "author": "mnitin73",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-02-13T21:31:05Z",
        "body": "You can use standard Python, as you would with a plain Python script.\r\n\r\nFor example with `pathlib`. And you would probably use an absolute path, not relative, to make sure you get it right.\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-02-24T00:02:14Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 922,
    "title": "nginx headers ignored on error status codes - is this intended?",
    "created_at": "2020-01-27T03:03:50Z",
    "closed_at": "2023-02-28T10:50:17Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/922",
    "body": "### First check\r\n\r\n* [X] I used the GitHub search to find a similar issue and didn't find it.\r\n* [X] I searched the FastAPI documentation, with the integrated search.\r\n* [X] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n\r\n### Description\r\n\r\nSo, I've set up reverse proxy through nginx and added headers in there, I also configured that CORS middleware too and the problem is, when my `verify_token` middleware triggers and if it's response status_code is 400 or 401 or any other 4XX error - the client doesn't receive CORS headers at all. \r\n\r\n\r\n```python\r\n\r\nresponse = JSONResponse(content={\"message\":\"Unauthorized\", status_code=401)\r\nreturn await response(scope, receive, send)\r\n# This would send no cors headers\r\n\r\n\r\nresponse = JSONResponse(content={\"message\":\"Unauthorized\")\r\nreturn await response(scope, receive, send)\r\n# This will work totally fine, but how then should I override the status code and still send all the headers?\r\n```\r\n\r\n\r\nIs it possible to be a bug of FastAPI or is it something wrong with the configuration?\r\nI searched about it and I honestly couldn't find any information on that problem... What's interesting is that Postman still shows the CORS header but JavaScript says there are none (in case if I send the error status code). ",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/922/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-02-13T21:27:44Z",
        "body": "Hmm, I'm not sure I understand clearly what you want to achieve. Could you create a small self-contained app that shows the behavior?\r\n\r\nAlso, I would suggest you start your tests with plain Uvicorn, without Nginx. That way you will be able to see if the error is generated on the FastAPI side or on the side of Nginx configs.\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "ghost",
        "created_at": "2020-02-15T16:13:27Z",
        "body": "Actually, turns out it was an issue with uvicorn. For some reason it just doesn't send any headers when you change status codes to any http error. Also tried with gunicorn and runs with no problems at all. 🤔 "
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-06T17:51:52Z",
        "body": "Thanks for reporting back and closing the issue :+1: "
      }
    ]
  },
  {
    "number": 919,
    "title": "Refactor internal function",
    "created_at": "2020-01-25T17:55:50Z",
    "closed_at": "2023-02-28T10:50:11Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/919",
    "body": "### Is your feature request related to a problem\r\n\r\nNope.\r\n\r\n### The solution you would like\r\n\r\nWe've got the function `solve_dependencies` at `fastapi.dependencies.utils` and it's called from `fastapi.routing`. And.. this function is really unclear and very very very big. It's very hard to understand and it's named bad. \r\n\r\nI think we should consider to create some __micro__ functions which will do some parts of it. Also, name `solve_dependencies` doesn't mean that endpoint will be called in that but it does call.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/919/comments",
    "author": "prostomarkeloff",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-04-13T10:00:13Z",
        "body": "Hmm, I'm not sure what to do with this... :shrug: \r\n\r\nYes, I agree that all the logic for handling dependencies with all the edge cases is quite complex. But the problem itself and all the edge cases make it complex, so I'm not very sure how much can it be improved.\r\n\r\nAbout the name, well, there are 2 main problems in software:\r\n\r\n* Cache invalidation.\r\n* **Naming things**.\r\n* One-off errors.\r\n\r\n:joy: \r\n\r\nI'm not sure what would be a better name, as it also gets a bit subjective.\r\n\r\nAbout several small functions, if they actually have some clear job that can be reused, that could help. But if they are only called by the main big function, I don't think that would improve a lot, it would just move code to some other point in the file, so, understanding that logic now wouldn't be only complex, but also non-straightforward, as it would not let reading the whole code in one pass but would require going back and forth between the small utility functions.\r\n\r\nNevertheless, I agree it would be great if this could be simpler, e.g. I love Starlette's internal code base, it's super clear and simple.\r\n\r\nBut I definitely wouldn't sacrifice user-facing (developer-facing) features or simplicity to reduce complexity in FastAPI's internals.\r\n\r\nGiven that, do you have ideas/proposals of how it can be improved?\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-04-24T00:02:26Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 909,
    "title": "query parameters with dashes instead of underscores",
    "created_at": "2020-01-22T22:08:31Z",
    "closed_at": "2023-02-28T10:49:39Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/909",
    "body": "Simple question that I can't seem to find an answer to. The standard for python variables is to use underscores but when it comes to url part or query parameters it's often you'll see dashes instead. This is what I use everywhere else. In PyCharm I'm getting an error declaring my view parameters as such: \"Illegal target for variable annotation\". \r\n\r\nRealize this isn't FastAPI's fault but wasn't sure where to ask tbh. Any way to use dashes?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/909/comments",
    "author": "Subaku",
    "comments": [
      {
        "user": "dmontagu",
        "created_at": "2020-01-22T23:11:21Z",
        "body": "You can handle query parameters like this:\r\n\r\n```python\r\nfrom fastapi import FastAPI, Query\r\nfrom starlette.testclient import TestClient\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/\")\r\ndef get_value(query_param: str = Query(..., alias=\"query-param\")) -> str:\r\n    return query_param\r\n\r\n\r\nassert TestClient(app).get(\"/?query-param=1\").json() == \"1\"\r\n```\r\n\r\nI'm looking at path parameters but it looks like the same trick won't work."
      },
      {
        "user": "dmontagu",
        "created_at": "2020-01-22T23:17:46Z",
        "body": "If you look at `starlette.routing.PARAM_REGEX`, it looks like hyphens are explicitly disallowed in path parameters:\r\n\r\n```python\r\n# Match parameters in URL paths, eg. '{param}', and '{param:int}'\r\nPARAM_REGEX = re.compile(\"{([a-zA-Z_][a-zA-Z0-9_]*)(:[a-zA-Z_][a-zA-Z0-9_]*)?}\")\r\n```\r\nIn particular, they must only consist of alphanumeric characters or `_`.\r\n\r\nI suspect if this restriction was weakened to allow hyphens the same trick as for query parameters above would work to add hyphens to path parameters.\r\n\r\nIf you care about this, I would recommend creating an issue in the starlette repo.\r\n\r\n<!-- issue manager: answered -->"
      },
      {
        "user": "Subaku",
        "created_at": "2020-01-23T17:37:06Z",
        "body": "I appreciate your help! That's certainly interesting. I'll go poke that repo and see what's up :)\r\n\r\nThanks again."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-07T17:06:19Z",
        "body": "Thanks for the help here @dmontagu ! :cake: :bowing_man: \r\n\r\nThanks @Subaku for reporting back and closing the issue :+1: "
      },
      {
        "user": "HansBrende",
        "created_at": "2021-09-28T11:33:15Z",
        "body": "@Subaku @tiangolo @dmontagu I found a little hack to get dashed query parameters for all one's routes without having to specify a hundred different aliases:\r\n\r\n```python\r\ndef DashingQuery(default: Any, *, convert_underscores=True, **kwargs) -> Any:\r\n    query = Query(default, **kwargs)\r\n    query.convert_underscores = convert_underscores\r\n    return query\r\n```\r\n\r\nNow we can do:\r\n```python\r\n@app.get(\"/\")\r\ndef get_value(query_param: str = DashingQuery(...)) -> str:\r\n    return query_param\r\n```\r\n\r\nCouldn't this be supported out of the box with just a 1 or 2-line tweak since the functionality is already present for `Header`?\r\n\r\nHere's a 1-liner in `fastapi.params.Query.__init__` that would do the trick:\r\n```python\r\nself.convert_underscores = extra.pop('convert_underscores', False)\r\n```"
      }
    ]
  },
  {
    "number": 886,
    "title": "no asynchronous file-write operations possible, when opening subprocess",
    "created_at": "2020-01-18T13:17:07Z",
    "closed_at": "2023-02-28T10:48:58Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/886",
    "body": "### Describe the bug\r\nAs soon as a subprocess is started, it should write asyncron outputs directly into a file. This means that the progress of a subprocess is also visible while it is being processed. \r\n\r\nBut as soon as such a functionality is processed with fastapi uvicorn, the output is not written until the process is finished.\r\n\r\nIs there a way to fix this?\r\n\r\nWrite here a clear and concise description of what the bug is.\r\n\r\n### To Reproduce\r\n\r\nSteps to reproduce the behavior with a minimum self-contained file.\r\n\r\nReplace each part with your own scenario:\r\n\r\n1. Create a file with:\r\n\r\n```import subprocess\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\n@app.get(\"/\")\r\ndef read_root():\r\n    with open(\"ouput.log\", 'a+') as f:\r\n        subprocess.Popen(\"python scrap_test.py\",\r\n                             stdout=f,\r\n                             universal_newlines=True)\r\n```\r\n\r\n2. Next create a scrap_test.py file in the same folder:\r\n```\r\nfrom time import sleep\r\n\r\nfor i in range(360):\r\n    sleep(1)\r\n    print(i)\r\n\r\n```\r\n\r\n3. Open the browser and call the endpoint `/`.\r\n4. Not the created output.log file should be continuously written to, but the content is only written to the file once.\r\n\r\n### Expected behavior\r\n\r\nThe output.log should continuously grow, but it isn't growing.\r\n\r\n### Environment\r\n\r\n- OS: Windows\r\n- FastAPI Version: 0.45.0\r\n\r\n```bash\r\npython -c \"import fastapi; print(fastapi.__version__)\"\r\n```\r\n\r\n- Python version: 3.7.3:\r\n\r\n```bash\r\npython --version\r\n```\r\n\r\n### Additional context\r\nStarting the same subprocess functionality only with python does the correct thing.\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/886/comments",
    "author": "Peda1996",
    "comments": [
      {
        "user": "dmontagu",
        "created_at": "2020-01-21T10:23:13Z",
        "body": "I am not sure if it is related, but a number of issues have been reported related to the use of subprocesses. I suspect the issue is related to something lower level than fastapi, but I'm not sure whether that's starlette, uvicorn, or something else.\r\n\r\n-----\r\n\r\nFor the time being, if getting this to work reliably is critical, I would strongly recommend using a dedicated worker service via something like `celery` or `arq` over trying to get subprocess calls to work inside an endpoint.\r\n\r\nIf you do figure it out, please post an update here!"
      },
      {
        "user": "Peda1996",
        "created_at": "2020-01-28T19:29:06Z",
        "body": "Is it also possible to execute command line commands with these dedicated workers?"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-02-13T20:11:23Z",
        "body": "I agree that if it's something critical or heavy, using something like Celery or ARQ would probably be a better option.\r\n\r\nWithout a complete example it's difficult to see what else could be going on. But maybe you could try forcing flushes from time to time, as writing to streams (files or stdout) is done with buffers.\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-02-25T00:01:43Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 883,
    "title": "Holding on to a websocket",
    "created_at": "2020-01-17T20:34:29Z",
    "closed_at": "2023-02-28T11:13:25Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/883",
    "body": "### First check\r\n\r\n* [V] I used the GitHub search to find a similar issue and didn't find it.\r\n* [V] I searched the FastAPI documentation, with the integrated search.\r\n* [V] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n\r\n### Description\r\nI have an MQTT client receiving messages from an external server. \r\nI want to forward each received message to my client using a websocket.\r\nTo do that, I want my client to first connect to a FastAPI websocket and every time a message comes in from the MQTT server, I want to `sent_text` on the websocket.\r\n\r\nI tried something like the following, but couldn't get it to work. What am I missing?\r\n\r\n```python\r\nclient_websocket = None \r\n\r\n@app.websocket(\"/ws\")\r\nasync def websocket_endpoint(websocket: WebSocket):\r\n    await websocket.accept()\r\n    global client_websocket\r\n    client_websocket = websocket\r\n\r\nasync def on_mqtt_message(msg):\r\n    await client_websocket.sent_text(msg)\r\n```\r\n\r\nThis raises the following error: `RuntimeError: Unexpected ASGI message 'websocket.send', after sending 'websocket.close'.`\r\n\r\nFrom the error I understand that the websocket is closed once `websocket_endpoint` exits. Is there a way to keep the websocket open, and emit messages to it from other contexts?\r\n\r\nThe websocket examples in the doc all use `while True` to read data from the websocket and then respond, but in my case I have an extrenal system trigerring events which should create websocket messages.\r\n\r\nI'd appreciate some help in understanding how to properly work with websockets in FastAPI (which is absolutely awesome, BTW).\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/883/comments",
    "author": "MatanRubin",
    "comments": [
      {
        "user": "Dustyposa",
        "created_at": "2020-01-18T03:51:08Z",
        "body": "You expected multiple client use the one `socket`?"
      },
      {
        "user": "michaelyaakoby",
        "created_at": "2020-01-18T16:10:43Z",
        "body": "You can probably use an async queue so your MQTT client will push messages to the queue and the WS server will get from the queue and send them to the WS client.\r\n```python\r\nfrom asyncio import Queue\r\n\r\nqueue: Queue = None\r\n\r\n@app.websocket(\"/ws\")\r\nasync def websocket_endpoint(websocket: WebSocket):\r\n    await websocket.accept()\r\n    global queue\r\n    queue = Queue()\r\n    while True:\r\n        msg = await queue.get()\r\n        await websocket.send_text({\"message\": msg})\r\n\r\n\r\nasync def on_mqtt_message(msg):\r\n    if queue:\r\n      await queue.put(msg)\r\n```\r\nNote that the queue must be using the same event-loop as the WS, one way of doing it is to initialize the queue in the same function where you accept the WS.\r\nAlso, assuming you want the WS client to receive all the MQTT messages, you should use a queue per WS."
      },
      {
        "user": "MatanRubin",
        "created_at": "2020-01-19T08:01:47Z",
        "body": "Thanks @michaelyaakoby , that did the trick!"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-07T17:31:51Z",
        "body": "Thanks for the help here everyone! :cake: :bowing_man: \r\n\r\nAnd thanks @MatanRubin for reporting back and closing the issue :+1: "
      }
    ]
  },
  {
    "number": 874,
    "title": "Can I directly call another route from a route?",
    "created_at": "2020-01-16T13:38:38Z",
    "closed_at": "2023-02-28T11:13:08Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/874",
    "body": "### First check\r\n\r\n* [ x ] I used the GitHub search to find a similar issue and didn't find it.\r\n* [ x ] I searched the FastAPI documentation, with the integrated search.\r\n* [ x ] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n\r\n### Description\r\n\r\nIs it possible to call another route by using all usual FastAPI functionality?\r\n\r\nExample:\r\n```\r\n@router.get(\"/something\")\r\nasync def get_something(\r\n    something_id: int = Query(\r\n        1,\r\n        description=\"Some description\"\r\n    ),\r\n    full: bool = Query(\r\n        False,\r\n        description=\"Some description\"\r\n    )\r\n):\r\n    # ... do some database queries or whatever\r\n    return {\"something_id\": something_id, \"full\": full}\r\n\r\n@router.get(\"/two_somethings\")\r\nasync def get_two_somethings(\r\n    something_id_1: int = Query(\r\n        1,\r\n        description=\"Some description\"\r\n    ),\r\n    something_id_2: int = Query(\r\n        2,\r\n        description=\"Some description\"\r\n    ),\r\n):\r\n    one = await get_something(something_id_1)\r\n    two = await get_something(something_id_2)\r\n    return {\"one\": one, \"two\": two}\r\n```\r\n\r\nIf I query `/something?something_id=1234`, the boolean `full` is properly filled. If I call `/two_somethings?something_id_1=1234$something_id_2=2345`, the `full` argument in the function `get_something` is not resolved and has its unprocessed default value of a Query object.\r\n\r\nIf requesting above `/two_somethings`, the print would say\r\n\r\n    {'something_id': 1, 'full': Query(default=False, description='Some description', extra={})}\r\n\r\nThis is a constructed problem, but I stumbled upon it and wondered. A solution is certainly to create a separate non-route function that does the business logic of `get_something` and call that one in `get_two_somethings`, but then I lose the nice input and output checking of the individual `get_something` calls. Is there a solution?\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/874/comments",
    "author": "sschiessl-bcp",
    "comments": [
      {
        "user": "dmontagu",
        "created_at": "2020-01-21T01:58:51Z",
        "body": "You can call the route functions directly, but if you do so, you lose the dependency injection. In particular, if the functions have default values of a type like `Query(...)` or `Depends(dependency_func)`, you *have* to provide values, as the \"defaults\" are not actually valid, and are not substituted based on the request unless called by FastAPI.\r\n\r\nAs you noted, the easiest way to accomplish this might be to separate the shared business logic into a reusable function.\r\n\r\n-----\r\n\r\nThere are other patterns you could use, such as a class-based dependency, that *might* enable you to refactor the code in a way you find more reusable, but it would probably require a larger refactor than would be ideal. But right now I'm not sure there is currently a good way to accomplish the pattern you would like to use here directly.\r\n\r\n(It's not an unreasonable request, but I'm not sure how much complexity would need to be added to the dependency injection logic to make it possible. My guess is it would be more than it's probably worth, sadly.)"
      },
      {
        "user": "sschiessl-bcp",
        "created_at": "2020-01-21T07:27:37Z",
        "body": "Ok thank you for clarification, that is what I suspected."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-07T17:22:05Z",
        "body": "Thanks for the help here @dmontagu ! :cake: :bowing_man: \r\n\r\nThanks @sschiessl-bcp for reporting back and closing the issue :+1: "
      }
    ]
  },
  {
    "number": 871,
    "title": "how to improve hashlib speed with async",
    "created_at": "2020-01-15T20:51:35Z",
    "closed_at": "2023-02-28T11:13:02Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/871",
    "body": "How can I improve my hashlib performance using async await if I need to iterate and process 100,000 CSV files and hashlib for each one\r\n\r\nWould i expect much improved performance against standard method, especially if these csv files are remotely in shared network drives?\r\n\r\nWin 10/Linux environments\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/871/comments",
    "author": "scheung38",
    "comments": [
      {
        "user": "dmontagu",
        "created_at": "2020-01-15T23:46:18Z",
        "body": "You can use starlette's `run_in_threadpool` function to run any expensive functions that release the GIL. It's not clear exactly what you are doing but if the problem is just that hashing so many large files is taking a long time, using `run_in_threadpool` might speed it up -- file IO will release the GIL, and I think the hashing functions might as well (not sure), so you should be able to achieve similar performance to what you'd get through multiprocess-based parallelism.\r\n\r\nBut it will depend a lot on what you are doing. If what you are asking about isn't specific to FastAPI this question may be better asked somewhere else like stack overflow."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-02-13T19:50:03Z",
        "body": "Thanks @dmontagu ! :bowing_man: \r\n\r\nYeah, what @dmontagu said. If it's taking a long time, you might want to do it in a background task. Possibly in an external system like ARQ or Celery.\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-02-25T00:01:46Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 855,
    "title": "Forward reference for recursive models.",
    "created_at": "2020-01-13T22:50:02Z",
    "closed_at": "2023-02-28T11:12:08Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/855",
    "body": "### First check\r\n\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n\r\n### Description\r\n\r\nHello,\r\nI have a recursive model of the following form using a forward reference:\r\n```\r\nclass FilterGroup(BaseModel):\r\n    filters: List[Union[Filter, 'FilterGroup']]\r\n    operation: Literal['and_', 'or_']\r\n```\r\n\r\nUnderstandably the schema generation fails for it. Is there a workaround to use this as input in fastapi?\r\n\r\nThank you very much.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/855/comments",
    "author": "goraj",
    "comments": [
      {
        "user": "goraj",
        "created_at": "2020-01-15T20:37:56Z",
        "body": "You can use the following workaround (Thanks @ludwig404): \r\n```\r\nfrom __future__ import annotations\r\nfrom typing import List, Union\r\nfrom pydantic import BaseModel\r\n\r\nclass Filter(BaseModel):\r\n    kind: str\r\n\r\n# Ducktyping to support recursive model for FilterGroup.\r\nclass FilterGroupDuck(BaseModel):\r\n    filters: List[Union[Filter, FilterGroup]]\r\n    operation: Literal['and_', 'or_']\r\n\r\nclass FilterGroup(BaseModel):\r\n    filters: List[Union[Filter, FilterGroupDuck]]\r\n    operation: Literal['and_', 'or_']\r\n\r\nFilterGroupDuck.update_forward_refs()\r\nFilterGroup.update_forward_refs()\r\n```"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-07T17:37:33Z",
        "body": "Thanks for reporting back and closing the issue :+1: "
      },
      {
        "user": "connebs",
        "created_at": "2021-05-03T21:44:54Z",
        "body": "I don't actually think you need to do the whole duck-typing thing, using a string reference and then updating the refs should be all you need, e.g.\r\n\r\n```py\r\nfrom typing import List, Union\r\nfrom pydantic import BaseModel\r\n\r\nclass Filter(BaseModel):\r\n    kind: str\r\n\r\nclass FilterGroup(BaseModel):\r\n    filters: List[Union[Filter, \"FilterGroup\"]]\r\n    operation: Literal['and_', 'or_']\r\n\r\nFilterGroup.update_forward_refs()\r\n```"
      },
      {
        "user": "kfuerst",
        "created_at": "2022-10-04T13:10:26Z",
        "body": "Adopting the answer from acnebs to reference FilterGroup as class:\r\n\r\nfrom typing import List, Union, ForwardRef\r\nfrom pydantic import BaseModel\r\n\r\nclass Filter(BaseModel):\r\n    kind: str\r\n\r\nFilterGroup = ForwardRef('FilterGroup')\r\n\r\nclass FilterGroup(BaseModel):\r\n    filters: List[Union[Filter, FilterGroup]]\r\n    operation: Literal['and_', 'or_']\r\n\r\nFilterGroup.update_forward_refs()"
      }
    ]
  },
  {
    "number": 851,
    "title": "Exception when use requires",
    "created_at": "2020-01-13T12:30:22Z",
    "closed_at": "2023-02-28T11:11:54Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/851",
    "body": "### exception when use requires\r\n\r\nstarlette/authentication.py  line 60\r\n\r\n        elif asyncio.iscoroutinefunction(func):\r\n            # Handle async request/response functions.\r\n            @functools.wraps(func)\r\n            async def async_wrapper(\r\n                *args: typing.Any, **kwargs: typing.Any\r\n            ) -> Response:\r\n                request = kwargs.get(\"request\", args[idx])   #  this place Exception when the idx=0 but args = ()\r\n                assert isinstance(request, Request)\r\n\r\n### The Exception context\r\n\r\n[ERROR 2020-01-13 20:20:33,617 httptools_impl.py 388] Exception in ASGI application\r\nTraceback (most recent call last):\r\n  File \"/data/server/pyenv/py3.7.4/lib/python3.7/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 385, in run_asgi\r\n    result = await app(self.scope, self.receive, self.send)\r\n  File \"/data/server/pyenv/py3.7.4/lib/python3.7/site-packages/uvicorn/middleware/proxy_headers.py\", line 45, in __call__\r\n    return await self.app(scope, receive, send)\r\n  File \"/data/server/pyenv/py3.7.4/lib/python3.7/site-packages/fastapi/applications.py\", line 140, in __call__\r\n    await super().__call__(scope, receive, send)\r\n  File \"/data/server/pyenv/py3.7.4/lib/python3.7/site-packages/starlette/applications.py\", line 134, in __call__\r\n    await self.error_middleware(scope, receive, send)\r\n  File \"/data/server/pyenv/py3.7.4/lib/python3.7/site-packages/starlette/middleware/errors.py\", line 178, in __call__\r\n    raise exc from None\r\n  File \"/data/server/pyenv/py3.7.4/lib/python3.7/site-packages/starlette/middleware/errors.py\", line 156, in __call__\r\n    await self.app(scope, receive, _send)\r\n  File \"/data/server/pyenv/py3.7.4/lib/python3.7/site-packages/starlette/middleware/authentication.py\", line 48, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \"/data/server/pyenv/py3.7.4/lib/python3.7/site-packages/starlette/middleware/base.py\", line 25, in __call__\r\n    response = await self.dispatch_func(request, self.call_next)\r\n  File \"/data/server/pyenv/py3.7.4/lib/python3.7/site-packages/starlette_exporter/middleware.py\", line 40, in dispatch\r\n    raise e\r\n  File \"/data/server/pyenv/py3.7.4/lib/python3.7/site-packages/starlette_exporter/middleware.py\", line 37, in dispatch\r\n    response = await call_next(request)\r\n  File \"/data/server/pyenv/py3.7.4/lib/python3.7/site-packages/starlette/middleware/base.py\", line 45, in call_next\r\n    task.result()\r\n  File \"/data/server/pyenv/py3.7.4/lib/python3.7/site-packages/starlette/middleware/base.py\", line 38, in coro\r\n    await self.app(scope, receive, send)\r\n  File \"/data/server/pyenv/py3.7.4/lib/python3.7/site-packages/starlette/exceptions.py\", line 73, in __call__\r\n    raise exc from None\r\n  File \"/data/server/pyenv/py3.7.4/lib/python3.7/site-packages/starlette/exceptions.py\", line 62, in __call__\r\n    await self.app(scope, receive, sender)\r\n  File \"/data/server/pyenv/py3.7.4/lib/python3.7/site-packages/starlette/routing.py\", line 590, in __call__\r\n    await route(scope, receive, send)\r\n  File \"/data/server/pyenv/py3.7.4/lib/python3.7/site-packages/starlette/routing.py\", line 208, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \"/data/server/pyenv/py3.7.4/lib/python3.7/site-packages/starlette/routing.py\", line 41, in app\r\n    response = await func(request)\r\n  File \"/data/server/pyenv/py3.7.4/lib/python3.7/site-packages/fastapi/routing.py\", line 127, in app\r\n    raw_response = await dependant.call(**values)\r\n  File \"/data/server/pyenv/py3.7.4/lib/python3.7/site-packages/starlette/authentication.py\", line 62, in async_wrapper\r\n    request = kwargs.get(\"request\", args[idx])\r\nIndexError: tuple index out of range\r\n\r\n### To produce\r\n\r\nfrom fastapi import APIRouter, Query, Depends, Header, HTTPException\r\nfrom starlette.authentication import requires\r\nfrom starlette.requests import Request\r\n\r\nfrom zyservice.user.auth import AuthAPI, LoginResponse\r\nfrom zycommon.helper.auth import get_current_user, JWTUser\r\n\r\nrouter = APIRouter()\r\n\r\n\r\n@router.post(\"/login\", response_model=LoginResponse)\r\nasync def login(\r\n    *,\r\n    username: str = Query(..., max_length=100, description=\"user name\"),\r\n    password: str = Query(\r\n        ..., min_length=8, max_length=100, description=\"user password\"\r\n    ),\r\n):\r\n    \"\"\" login\r\n    \"\"\"\r\n    return await AuthAPI().login(username, password)\r\n\r\n\r\n@router.get(\"/info\")\r\n@requires(\"authenticated\")\r\nasync def user_info(*, request: Request, user: JWTUser = Depends(get_current_user)):\r\n    \"\"\" get user info\r\n    \"\"\"\r\n    return {\"username\": user.username}\r\n\r\n\r\n\r\n\r\n### Environment\r\n\r\n- OS: [e.g. Linux ]\r\n- FastAPI Version [0.46.0, 0.45.0]\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/851/comments",
    "author": "xidianwlc",
    "comments": [
      {
        "user": "dmontagu",
        "created_at": "2020-01-16T00:26:35Z",
        "body": "Could you describe what you are trying to achieve?\r\n\r\n------\r\n\r\nThis seems more likely to be a starlette issue than a fastapi issue; it's probably worth posting there instead.\r\n\r\n-------\r\n\r\nThe formatting of your post makes it very hard to follow what's going on -- could you enter the code like this:\r\n\r\n\\`\\`\\`\r\ncode goes here\r\n\\`\\`\\`\r\n\r\nThat should ensure it gets formatted to look like this:\r\n```\r\ncode goes here\r\n```\r\nwhich is much easier to read."
      },
      {
        "user": "xidianwlc",
        "created_at": "2020-01-20T08:30:13Z",
        "body": "This is starlette's bug, I will post it there.\r\n"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-07T17:29:36Z",
        "body": "Thanks for the help here @dmontagu ! :cake: :bowing_man: \r\n\r\nAnd thanks @xidianwlc  for reporting back and closing the issue :+1: "
      }
    ]
  },
  {
    "number": 849,
    "title": "Is it ready for PRODUCTION Use?",
    "created_at": "2020-01-12T20:42:05Z",
    "closed_at": "2023-02-28T11:11:51Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/849",
    "body": "Hi All,\r\n\r\nI am new to FastAPI. \r\nSo, far I have been using flask and we are quite satisfied with it.\r\nBut, the async capability while maintaining simplicity, made me start learning fastapi.\r\nNow, I would like to use it for a real world project.\r\nanyone using it it PRODUCTION environment, with high degree of concurrent users?\r\nPlease advise.\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/849/comments",
    "author": "Palas-Anvaya",
    "comments": [
      {
        "user": "stefanondisponibile",
        "created_at": "2020-01-21T11:53:15Z",
        "body": "I am using this in production to serve ML models. FastAPI has a lot of beautiful features to simplify and enhance your project. It can't yet be as \"old\" and therefore \"mature\" as other libraries or frameworks, but it will. So yeah, you should consider adopting it in production."
      },
      {
        "user": "nkhitrov",
        "created_at": "2020-01-21T21:02:29Z",
        "body": "In my company, we use fastapi to write integration systems. I can’t give performance data, but it feels faster than django. As an example, I can say that when teamlead was cleaning tasks in jira, our fastapi server processed 10k webhooks without any problems."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-02-13T19:30:57Z",
        "body": "Thanks for the answers @stefanondisponibile and @Slyfoxy ! :rocket:\r\n\r\n@Palas-Anvaya you can see the main page, there are several mentions of some orgs using it in some way. Including Microsoft and Uber.\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-02-24T00:02:20Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 845,
    "title": "Is there a better way to navigate the docs?",
    "created_at": "2020-01-10T21:01:49Z",
    "closed_at": "2023-02-28T11:11:40Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/845",
    "body": "Hello and thank you for the awesome framework!\r\n\r\nI'm trying to get started by converting my small Flask API to using FastAPI and seem to be struggling to answer some simple questions. I seem to be butting up against how the docs are laid out as most of the time I'm used to somewhere there being a more class based view of a framework with \"here's the properties and methods they have and what they do\" thing.  The Tutorial - User Guide section is great but a littler verbose when I'm just trying to find one small thing. Am I looking in the wrong spot?\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/845/comments",
    "author": "Subaku",
    "comments": [
      {
        "user": "dmontagu",
        "created_at": "2020-01-10T22:16:04Z",
        "body": "If what you are looking for is something more akin to traditional API docs, I don't think such a thing currently exists.\r\n\r\nI'd be curious about what @tiangolo thinks of the idea.\r\n\r\nIn general, if you ignore the decorator indirection and repeatedly defined decorators for each method (i.e., `app.get`, `app.post`, etc.), FastAPI is surprisingly concise, so it might make sense to just clone the repo and use the source code as your reference.\r\n\r\n(And to be clear, there is a good reason for all the extra lines of mostly-repeated decorator code -- it is necessary to get both type-safety and a convenient API)."
      },
      {
        "user": "Subaku",
        "created_at": "2020-01-10T23:39:50Z",
        "body": "Having a more traditional API docs would be lovely :) For now I'll need to do a combination of what you suggested and doing searches on the repo to find what I need.\r\n\r\nThanks."
      },
      {
        "user": "joe-eklund",
        "created_at": "2020-01-13T19:07:00Z",
        "body": "I asked this question almost a month ago and got no reply. See #804"
      },
      {
        "user": "Subaku",
        "created_at": "2020-01-14T16:43:14Z",
        "body": "Ah I somehow missed your ticket. I would have added a comment to that otherwise.\r\n\r\nThis does seem to be a glaring issue for all parties concerned. The friction it creates just to try and \"quickly\" find what something does or what parameters mean what is rather important. Wondering how high on everyone's priority list this is to fix."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-02-13T19:19:29Z",
        "body": "Yep, the same answer as in #804. Yes, we want them, but first I have to clean up some of the parameters, define a docstring style, and add docstrings everywhere. :sweat_smile: "
      },
      {
        "user": "Subaku",
        "created_at": "2020-02-14T18:22:56Z",
        "body": "In that case I'll close this ticket and just keep an eye on #804 :) Thanks for the reply!"
      }
    ]
  },
  {
    "number": 844,
    "title": "Startup Race Condition",
    "created_at": "2020-01-10T00:42:17Z",
    "closed_at": "2023-02-28T11:11:36Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/844",
    "body": "### First check\r\n\r\n* [X] I used the GitHub search to find a similar issue and didn't find it.\r\n* [X] I searched the FastAPI documentation, with the integrated search.\r\n* [X] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n\r\n### Description\r\nIs this the best practice? It seems to be causing some sort of race condition that causes a timeout on the loop when connecting to the database. Code below:\r\n```\r\n\r\nimport logging\r\nimport os\r\nimport sys\r\n\r\nfrom fastapi import FastAPI\r\n\r\nfrom app.dependencies import set_authenticator, set_database, get_database\r\nfrom app.middlewares import (\r\n    NewRelicMiddleware,\r\n    OpenCensusMiddleware,\r\n    SentryMiddleware,\r\n)\r\nfrom app.repositories import Cache, PostgresRepository\r\nfrom app.routers import salesforce_router\r\nfrom app.salesforce import Authenticator\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.on_event(\"startup\")\r\nasync def startup():\r\n    try:\r\n        db = await PostgresRepository.create()\r\n        set_database(db)\r\n\r\n        authenticator = Authenticator(\r\n            cache=Cache(),\r\n            instance=os.environ.get(\"AUTH_INSTANCE\"),\r\n            version=46.0,\r\n        )\r\n        set_authenticator(authenticator=authenticator)\r\n    except Exception as e:\r\n        print(f\"Error initializing database: {e}\")\r\n        sys.exit(1)\r\n\r\n\r\n@app.on_event(\"shutdown\")\r\nasync def shutdown():\r\n    logging.info(\"Closing database connections\")\r\n    db = get_database()\r\n    await db.close()\r\n\r\n\r\napp.add_middleware(SentryMiddleware)\r\napp.add_middleware(NewRelicMiddleware)\r\napp.add_middleware(OpenCensusMiddleware)\r\n\r\napp.include_router(auth_router)\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/844/comments",
    "author": "victoraugustolls",
    "comments": [
      {
        "user": "dmontagu",
        "created_at": "2020-01-10T00:48:26Z",
        "body": "I don't see anything obviously wrong here, but it's not totally clear to me what part of the code you are asking about? It's also not clear to me what you mean by \"the loop\". Is there a traceback / error message of some sort?\r\n\r\nAre you sure you are successfully able to connect to your database?"
      },
      {
        "user": "victoraugustolls",
        "created_at": "2020-01-10T00:50:34Z",
        "body": "Yes I am! When running locally everything runs fine. When I deploy to an Azure Webapp, I start so receive errors but they seem like a loop errors. Will collect the trace and put them here!"
      },
      {
        "user": "victoraugustolls",
        "created_at": "2020-01-10T05:16:42Z",
        "body": "Find out to be a bad configuration on Azure firewall, but as the connection couldn’t be accomplished, the cpu started to go crazy and some weird traces that looked like race conditions started to appear. Thanks for the help!"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-07T17:39:12Z",
        "body": "Thanks for the help here @dmontagu! :cake: :bowing_man: \r\n\r\nAnd thanks @victoraugustolls for reporting back and closing the issue :+1: "
      }
    ]
  },
  {
    "number": 808,
    "title": "How to generate a pydantic model from a sqlalchemy model?",
    "created_at": "2019-12-20T00:42:42Z",
    "closed_at": "2023-02-28T11:09:41Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/808",
    "body": "### Description\r\n\r\nGiven a SQLAlchemy declarative model\r\n```py\r\nBase = declarative_base()\r\n\r\nclass EntityORM(Base):\r\n    __tablename__ = \"entities\"\r\n\r\n    id = Column(Integer, primary_key=True)\r\n    name = Column(String, nullable=False)\r\n    version = Column(Integer, nullable=False)\r\n```\r\nand a pydantic model:\r\n```py\r\nclass Entity(BaseModel):\r\n    id: int\r\n    name: str\r\n    version: int\r\n```\r\n\r\nHow do I go from one to the other, like:\r\n\r\n```py\r\ne1 = EntityORM(name=\"foo\", version=42)\r\ne2 = Entity(e1) # exception: TypeError: __init__() takes 1 positional argument but 2 were given\r\n```\r\n\r\nSomehow FastAPI is doing it with response_model, how can I do that myself? I'd like to always reason about Pydantic models in my code rather than intersperse ORM objects.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/808/comments",
    "author": "f0ff886f",
    "comments": [
      {
        "user": "dmontagu",
        "created_at": "2019-12-20T01:34:31Z",
        "body": "You have to add `orm_mode` to the config:\r\n```python\r\nclass Entity(BaseModel):\r\n    id: int\r\n    name: str\r\n    version: int\r\n\r\n    class Config:\r\n        orm_mode = True\r\n```\r\n\r\nthen you can do\r\n\r\n```python\r\nentity_orm = EntityORM(...)\r\nentity = Entity.from_orm(entity_orm)\r\n```\r\nThis is *essentially* what FastAPI does, by way of the `validate_model` function from pydantic (if I recall correctly...)."
      },
      {
        "user": "f0ff886f",
        "created_at": "2019-12-20T08:51:54Z",
        "body": "Awesome, thank you! I did have the `orm_mode = True` configuration (forgot to type it in) but was definitely *not* using `from_orm`, which is the key. Thanks again!"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-10T10:57:15Z",
        "body": "Thanks for the help here @dmontagu ! :clap: :bow: \r\n\r\nThanks for reporting back and closing the issue @f0ff886f  :+1: "
      }
    ]
  },
  {
    "number": 798,
    "title": "Retrieve static files from branching endpoints",
    "created_at": "2019-12-18T05:16:01Z",
    "closed_at": "2023-02-28T11:09:17Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/798",
    "body": "How can I retrieve static content with branching endpoints? I have a small project with all my templates and static files in a /dist folder. I can create a inner branch /admin/omni and correctly loaded templates, but associated static files are being pulled from /admin/dist instead of /dist. How do I prevent this behavior?\r\n\r\napp.py\r\n```\r\napp = FastAPI()\r\n\r\napp.mount('/dist', StaticFiles(directory='dist'), name='dist')\r\ntemplates = Jinja2Templates(directory='dist')\r\n\r\n@app.get(\"/\")\r\nasync def homepage(request: Request):\r\nreturn templates.TemplateResponse('homepage.html', {\"request\": request})\r\n\r\n@app.get(\"/omni\")\r\nasync def omni(request: Request):\r\nreturn templates.TemplateResponse('app.html', {\"request\": request})\r\n\r\n@app.get(\"/admin\")\r\nasync def admin(request: Request):\r\nreturn templates.TemplateResponse('admin.html', {\"request\": request})\r\n\r\n@app.get(\"/admin/omni\")\r\nasync def admin_omni(request: Request):\r\nreturn templates.TemplateResponse('app_admin.html', {\"request\": request})\r\n\r\n```\r\n\r\napp_admin.html\r\n```\r\n<html>\r\n<head>\r\n<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"dist/favicon.68117958.ico\">\r\n<link rel=\"stylesheet\" href=\"dist/app_admin.3cf53168.css\">\r\n</head>\r\n<body>\r\n<div id=\"app_admin\"></div>\r\n<script src=\"dist/app_admin.6744ee61.js\"></script>\r\n</body>\r\n</html>\r\n```\r\n\r\nconsole\r\n```\r\nINFO:     172.22.176.1:65209 - \"GET /admin/omni HTTP/1.1\" 200 OK\r\nINFO:     172.22.176.1:65209 - \"GET /admin/dist/app_admin.3cf53168.css HTTP/1.1\" 404 Not Found\r\nINFO:     172.22.176.1:65208 - \"GET /admin/dist/app_admin.6744ee61.js HTTP/1.1\" 404 Not Found\r\n```",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/798/comments",
    "author": "capt-obvious",
    "comments": [
      {
        "user": "dmontagu",
        "created_at": "2019-12-18T21:39:29Z",
        "body": "Does changing `href=\"dist/...` to `href=\"/dist/...` and similarly for `src` in your html template work?\r\n\r\nI think this is just related to how browsers resolve resource references, so if you need it to be relative, you might just need to structure your static files directory appropriately."
      },
      {
        "user": "capt-obvious",
        "created_at": "2019-12-18T22:23:18Z",
        "body": "@dmontagu that did the trick, I will have to look at my configuration for parcel to correct the build process. Thank you so much, I'm new to using python and fastapi "
      },
      {
        "user": "dmontagu",
        "created_at": "2019-12-19T01:25:09Z",
        "body": "No problem!\r\n\r\nSince it sounds like your question is answered, I'm going to close the issue, but please feel free to reopen it if it turns out your problem isn't quite solved, and please keep submitting questions / bug reports / etc. as you have them!"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-02-26T18:48:59Z",
        "body": "Thanks @dmontagu ! :bowing_man: :cake: "
      }
    ]
  },
  {
    "number": 787,
    "title": "Base64 as part of Path",
    "created_at": "2019-12-12T13:40:14Z",
    "closed_at": "2023-02-28T11:08:37Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/787",
    "body": "### First check\r\n\r\n* [x] I used the GitHub search to find a similar issue and didn't find it.\r\n* [x] I searched the FastAPI documentation, with the integrated search.\r\n* [x] I already searched in Google \"How to X in FastAPI\" and didn't find any information.\r\n\r\n### Description\r\n\r\nHow can I validate JSON encoded to base64 string as a part of Path and get normal OpenAPI validation error as JSON response?\r\n\r\n### Additional context\r\n\r\nFor example: I have request like\r\n```\r\nPOST /image/eyJvcCI6Im1hZ2ljNHgiLCJmb3JtYXQiOiJKUEVHIn0= HTTP/1.1\r\nHost: 127.0.0.1:8000\r\nUser-Agent: HTTPie/1.0.2\r\nAccept-Encoding: gzip, deflate\r\nAccept: application/json, */*\r\nConnection: keep-alive\r\nContent-Type: image/jpeg\r\nContent-Length: 46570\r\n\r\n<BINARY IMAGE DATA>\r\n```\r\n\r\nand want that my JSON in Base64 string be validated.\r\n\r\nIs it possible?\r\n\r\nThank you.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/787/comments",
    "author": "BooBSD",
    "comments": [
      {
        "user": "trim21",
        "created_at": "2020-01-03T23:13:18Z",
        "body": "maybe you need to write a depend to validate it by yourself."
      },
      {
        "user": "dmontagu",
        "created_at": "2020-01-04T10:32:08Z",
        "body": "Since this will be a path parameter, I think you'll want to do the validation manually in a custom function.\r\n\r\nThere has been some discussion in the pydantic repo about creating a Base64 data type, and by searching there you might find some convenient logic to use to perform the validation, but I don't think there is anything built in you'll be able to use out of the box right now. (But at the end of the day it also shouldn't be that complex to check anyway.)\r\n\r\nIf I were in your position, I would probably just let the path parameter be injected as an un-validated `str`, and in the first line of the endpoint function, check that it is valid base64, and if not, manually raise an appropriate `HTTPException`. If you perform the same check in many endpoints, I would just factor the logic out into a function.\r\n\r\nYou could do this in a `Depends` as @Trim21 suggested by manually inspecting the path from the `Request`, but since FastAPI nicely injects the path argument into the endpoint signature, my suspicion is it will just be easiest to let FastAPI inject the unvalidated parameter and validate it yourself in the endpoint."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-02-12T21:01:16Z",
        "body": "Yep, what @dmontagu said :point_up: \r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-02-23T00:02:01Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 764,
    "title": "Raise a 500 internal server error when validate a pydantic.HttpUrl with wrong schema",
    "created_at": "2019-12-03T03:45:59Z",
    "closed_at": "2023-02-28T11:06:27Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/764",
    "body": "### Describe the bug\r\n\r\ngot a 500 status with \"TypeError: Object of type set is not JSON serializable\" if I feed a invalid httpurl as Body\r\n### To Reproduce\r\n\r\nSteps to reproduce the behavior with a minimum self-contained file.\r\n\r\n\r\n1. Create a file with:\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\nfrom pydantic import BaseModel, HttpUrl\r\n\r\n\r\nclass Image(BaseModel):\r\n    url: HttpUrl\r\n    name: str\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.put(\"/items/image\")\r\nasync def update_image(image: Image):\r\n    return image\r\n```\r\n\r\n3. Open the browser and call the endpoint  PUT `/items/image` with body value: `{\"url\":\"htp://www.google.com\",\"name\":\"something\"}`. here the schema of URL is invalid \r\n4. It returns a 500 Internal Server Error.\r\n5. But I expected it to return 422 with a hint of wrong URL format.\r\n\r\n### Expected behavior\r\n\r\nthe type validation should know the wrong URL and give a clear indication \r\n### Screenshots\r\n\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n### Environment\r\n\r\n- OS: [macOS]\r\n- Python Version  3.7.5 \r\n- FastAPI Version  0.44.0\r\n- pydantic Version 1.2\r\n- starlette Version 0.12.9\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/764/comments",
    "author": "thomassun",
    "comments": [
      {
        "user": "dmontagu",
        "created_at": "2019-12-03T05:56:45Z",
        "body": "Can you run the server with `debug=True` (in the `FastAPI()` call) and share the traceback?"
      },
      {
        "user": "thomassun",
        "created_at": "2019-12-03T08:11:30Z",
        "body": "http put localhost:8000/items/image url=\"htp://www.google.com\" name=\"df\"\r\n---- output with traceback -----\r\nHTTP/1.1 500 Internal Server Error\r\ncontent-length: 1612\r\ncontent-type: text/plain; charset=utf-8\r\ndate: Tue, 03 Dec 2019 08:10:26 GMT\r\nserver: uvicorn\r\n\r\nFile \"/Users/guoqingsun/PycharmProjects/fastapi/venv/lib/python3.7/site-packages/starlette/middleware/errors.py\", line 156, in __call__\r\n    await self.app(scope, receive, _send)\r\n  File \"/Users/guoqingsun/PycharmProjects/fastapi/venv/lib/python3.7/site-packages/starlette/exceptions.py\", line 81, in __call__\r\n    response = await handler(request, exc)\r\n  File \"/Users/guoqingsun/PycharmProjects/fastapi/venv/lib/python3.7/site-packages/fastapi/exception_handlers.py\", line 22, in request_validation_exception_handler\r\n    status_code=HTTP_422_UNPROCESSABLE_ENTITY, content={\"detail\": exc.errors()}\r\n  File \"/Users/guoqingsun/PycharmProjects/fastapi/venv/lib/python3.7/site-packages/starlette/responses.py\", line 42, in __init__\r\n    self.body = self.render(content)\r\n  File \"/Users/guoqingsun/PycharmProjects/fastapi/venv/lib/python3.7/site-packages/starlette/responses.py\", line 151, in render\r\n    separators=(\",\", \":\"),\r\n  File \"/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/__init__.py\", line 238, in dumps\r\n    **kw).encode(obj)\r\n  File \"/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py\", line 199, in encode\r\n    chunks = self.iterencode(o, _one_shot=True)\r\n  File \"/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py\", line 257, in iterencode\r\n    return _iterencode(o, 0)\r\n  File \"/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/lib/python3.7/json/encoder.py\", line 179, in default\r\n    raise TypeError(f'Object of type {o.__class__.__name__} '"
      },
      {
        "user": "thomassun",
        "created_at": "2019-12-03T08:15:14Z",
        "body": "btw, I got it fixed by changing line 172 in pydanic/errors.py, wrapped allowed_schemes with a list:\r\nbefore:         super().__init__(allowed_schemes=allowed_schemes)\r\nafter:            super().__init__(allowed_schemes=list(allowed_schemes))\r\n\r\nbut this may not the right place to fix it as pydanic/errors.py is not responsible to grantee the error is in JSON format "
      },
      {
        "user": "dmontagu",
        "created_at": "2019-12-03T09:37:36Z",
        "body": "Ah okay, this is actually fixed on master in FastAPI; the change affects this line:\r\n```\r\nFile \"/Users/guoqingsun/PycharmProjects/fastapi/venv/lib/python3.7/site-packages/fastapi/exception_handlers.py\", line 22, in request_validation_exception_handler\r\nstatus_code=HTTP_422_UNPROCESSABLE_ENTITY, content={\"detail\": exc.errors()}\r\n```\r\n`exc.errors()` is now wrapped in a call to `jsonable_encoder`.\r\n\r\nThe next release of FastAPI should fix this for you (and you'll be able to drop the modification to pydantic).\r\n\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "thomassun",
        "created_at": "2019-12-03T09:39:23Z",
        "body": "Sounds great, thanks"
      },
      {
        "user": "tazimmerman",
        "created_at": "2019-12-04T19:19:36Z",
        "body": "I'm not sure if this is related, but when I return a list of models, some of which have validation errors, I am getting 500 instead of a 422.\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/tazimmerman/git/project/env/lib/python3.7/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 376, in run_asgi\r\n    result = await app(self.scope, self.receive, self.send)\r\n  File \"/home/tazimmerman/git/project/env/lib/python3.7/site-packages/fastapi/applications.py\", line 140, in __call__\r\n    await super().__call__(scope, receive, send)\r\n  File \"/home/tazimmerman/git/project/env/lib/python3.7/site-packages/starlette/applications.py\", line 134, in __call__\r\n    await self.error_middleware(scope, receive, send)\r\n  File \"/home/tazimmerman/git/project/env/lib/python3.7/site-packages/starlette/middleware/errors.py\", line 178, in __call__\r\n    raise exc from None\r\n  File \"/home/tazimmerman/git/project/env/lib/python3.7/site-packages/starlette/middleware/errors.py\", line 156, in __call__\r\n    await self.app(scope, receive, _send)\r\n  File \"/home/tazimmerman/git/project/env/lib/python3.7/site-packages/starlette/exceptions.py\", line 73, in __call__\r\n    raise exc from None\r\n  File \"/home/tazimmerman/git/project/env/lib/python3.7/site-packages/starlette/exceptions.py\", line 62, in __call__\r\n    await self.app(scope, receive, sender)\r\n  File \"/home/tazimmerman/git/project/env/lib/python3.7/site-packages/starlette/routing.py\", line 590, in __call__\r\n    await route(scope, receive, send)\r\n  File \"/home/tazimmerman/git/project/env/lib/python3.7/site-packages/starlette/routing.py\", line 208, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \"/home/tazimmerman/git/project/env/lib/python3.7/site-packages/starlette/routing.py\", line 41, in app\r\n    response = await func(request)\r\n  File \"/home/tazimmerman/git/project/env/lib/python3.7/site-packages/fastapi/routing.py\", line 140, in app\r\n    exclude_unset=response_model_exclude_unset,\r\n  File \"/home/tazimmerman/git/project/env/lib/python3.7/site-packages/fastapi/routing.py\", line 72, in serialize_response\r\n    raise ValidationError(errors, field.type_)\r\npydantic.error_wrappers.ValidationError: 54 validation errors for AssetModel\r\n[ ... normal pydantic messages follow ... ]\r\n```\r\n\r\nIf this doesn't sound related, I'll open a separate issue and put together a reproducible example. I can also try downgrading FastAPI & Pydantic to see if the recent upgrade to 0,.440 and 1.2 (respectively) made a difference.\r\n\r\n**Environment**\r\n\r\n    OS: [Linux]\r\n    Python Version 3.7.3\r\n    FastAPI Version 0.44.0\r\n    pydantic Version 1.2\r\n    starlette Version 0.12.9\r\n"
      },
      {
        "user": "dmontagu",
        "created_at": "2019-12-05T07:11:36Z",
        "body": "@tazimmerman I think this is a separate issue -- it would be great if you could produce a small reproducible example in a new issue. (But make sure 0.44.1 doesn't just fix it.)\r\n\r\n@thomassun hopefully 0.44.1 fixes your problem; let us know if you still have an issue after upgrading.\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "tazimmerman",
        "created_at": "2019-12-05T19:27:30Z",
        "body": "I upgraded to 0.44.1 but that didn't fix it. Thanks to the incredibly easy to use API :) I was able to put together a simple example to reproduce the error. I'll open it as a separate issue."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-02-12T20:44:58Z",
        "body": "Thanks for the discussion here!\r\n\r\n@thomassun was your problem solved?\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-02-23T00:02:07Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 763,
    "title": "routing.py::serialize_response does not respect \"by_alias\" before validation",
    "created_at": "2019-12-02T23:18:28Z",
    "closed_at": "2023-02-28T11:06:23Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/763",
    "body": "### Describe the bug\r\n\r\nIn the `serialize_response` function of routing.py, field validation is performed on a dict from the model that does not respect the \"by_alias\" parameter. This results in a failure to properly validate required fields that have an alias defined in the Config.\r\n\r\n### To Reproduce\r\n1. Create a file with:\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\nfrom pydantic import BaseModel\r\n\r\n\r\nclass Blowup(BaseModel):\r\n    snake_case_fail: bool\r\n\r\n    class Config:\r\n        fields = {\"snake_case_fail\": \"snakeCaseFail\"}\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/mock/\", response_model=Blowup)\r\nasync def test_failure() -> Blowup:\r\n    # Mock\r\n    mock_response = Blowup(snakeCaseFail=True)\r\n    return mock_response\r\n\r\n```\r\n\r\n3. Open the browser and call the endpoint `/`.\r\n4. Will fail with \r\n\r\nE               pydantic.error_wrappers.ValidationError: 1 validation errors for Blowup\r\nE               response -> snakeCaseFail\r\nE                 field required (type=value_error.missing)\r\n\r\n5. Modifying routing.py::serialize_response()::49 from\r\n    response = response.dict(skip_defaults=skip_defaults)\r\nto be:\r\n    response = response.dict(skip_defaults=skip_defaults, by_alias=by_alias)\r\n\r\nresults in successful validation and proper execution\r\n\r\n### Expected behavior\r\n\r\nExpect the proper conversion via the alias to prevent validation error\r\n\r\n### Environment\r\n\r\n- OS: macOS\r\n- FastAPI Version 0.38.1\r\n\r\n- Python version, 3.7.4\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/763/comments",
    "author": "GNewc",
    "comments": [
      {
        "user": "GNewc",
        "created_at": "2019-12-02T23:25:13Z",
        "body": "Workaround for now is to just return a starlette JSONResponse via\r\n\r\n```\r\nfrom starlette.responses import JSONResponse\r\n\r\n\r\n@app.get(\"/mock/\")\r\nasync def test_failure() -> JSONResponse:\r\n    # Mock\r\n    mock_response = Blowup(snakeCaseFail=True)\r\n    return JSONResponse(content=mock_response.dict(skip_defaults=True, by_alias=True))\r\n\r\n```"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-02-12T20:43:46Z",
        "body": "I think you need `allow_population_by_field_name = True`.\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\nfrom pydantic import BaseModel\r\n\r\n\r\nclass Blowup(BaseModel):\r\n    snake_case_fail: bool\r\n\r\n    class Config:\r\n        fields = {\"snake_case_fail\": \"snakeCaseFail\"}\r\n        allow_population_by_field_name = True\r\n\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/mock/\", response_model=Blowup)\r\nasync def test_failure() -> Blowup:\r\n    # Mock\r\n    mock_response = Blowup(snakeCaseFail=True)\r\n    return mock_response\r\n```\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-02-23T00:02:08Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 741,
    "title": "Multiple different auth headers?",
    "created_at": "2019-11-27T12:10:52Z",
    "closed_at": "2023-02-28T11:05:56Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/741",
    "body": "**Description**\r\n\r\nIs it possible to set multiple different, optional auth headers using the security functionality?\r\n\r\n**Additional context**\r\nThis bit of code:\r\n```\r\nX_APIKEY=APIKeyHeader(name=\"X-APIKey\", auto_error=False)\r\nX_USER_APIKEY = APIKeyHeader(name=\"X-User-APIKey\", auto_error=False)\r\n\r\n@router.get(\"/ping\")\r\ndef ping(\r\n    request: Request,\r\n    x_api_key: str =  Depends(X_API_KEY),\r\n    x_user_apikey: str = Depends(X_USER_APIKEY),\r\n):\r\n```\r\n\r\nEssentially just overwrites the previous security header. Is there a good way to do this?",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/741/comments",
    "author": "LasseGravesen",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-02-12T19:04:21Z",
        "body": "Yes @LasseGravesen , it's just not well documented yet. But just what you did, more or less.\r\n\r\nYou would put that in a dependency. And in the dependency you would check if one or the other auth method provided the credentials. And if none of them did, raise an `HTTPException`.\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-02-23T00:02:12Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      },
      {
        "user": "ericman93",
        "created_at": "2021-06-02T17:32:24Z",
        "body": "I was trying to have it in a dependency, it worked great but in the docs when clicking on Authorize I see only 1 header (instead of the possible 3)"
      },
      {
        "user": "Simon089",
        "created_at": "2021-09-13T12:42:26Z",
        "body": "> I was trying to have it in a dependency, it worked great but in the docs when clicking on Authorize I see only 1 header (instead of the possible 3)\r\n\r\nIf you provide a (different) `scheme_name` to `APIKeyHeader` both will show up in the authorize section. \r\n\r\nThe first two lines from the initial question above could therefore be:\r\n```\r\nX_APIKEY=APIKeyHeader(name=\"X-APIKey\", auto_error=False, scheme_name=\"API Key\")\r\nX_USER_APIKEY = APIKeyHeader(name=\"X-User-APIKey\", auto_error=False, scheme_name=\"User API Key\")\r\n```"
      }
    ]
  },
  {
    "number": 740,
    "title": "how to use a custom io take in fastapi",
    "created_at": "2019-11-27T09:45:06Z",
    "closed_at": "2023-02-28T11:05:51Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/740",
    "body": "**Description**\r\n\r\nHow can I [...]?\r\n\r\nhow to use a custom io take in fastapi?\r\nI can't get the event_loop out......\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/740/comments",
    "author": "zexionghong",
    "comments": [
      {
        "user": "prostomarkeloff",
        "created_at": "2019-11-27T11:47:10Z",
        "body": "What do you want?"
      },
      {
        "user": "zexionghong",
        "created_at": "2019-11-27T13:44:11Z",
        "body": "`import time\r\nfrom fastapi import FastAPI\r\nimport asyncio\r\n\r\napp = FastAPI()\r\n\r\ndef io():\r\n    time.sleep(1)\r\n    return None\r\n\r\n\r\n@app.get('/')\r\nasync def index():\r\n    # i want to use io() by async  ,but i cant\r\n    io()\r\n    return {‘xx’:''xx}\r\n`\r\n``"
      },
      {
        "user": "zexionghong",
        "created_at": "2019-11-27T13:44:40Z",
        "body": "like this"
      },
      {
        "user": "prostomarkeloff",
        "created_at": "2019-11-27T14:29:18Z",
        "body": "You can. Just define your route-function as synchronous and fastapi will run it in threadpool.\r\n\r\n```py\r\nimport time\r\nfrom fastapi import FastAPI\r\nimport asyncio\r\n\r\napp = FastAPI()\r\n\r\ndef io():\r\ntime.sleep(1)\r\nreturn None\r\n\r\n@app.get('/')\r\ndef index():\r\nio()\r\nreturn {‘xx’:''xx}\r\n```"
      },
      {
        "user": "zexionghong",
        "created_at": "2019-11-27T14:50:03Z",
        "body": "for examples?thanks。。"
      },
      {
        "user": "zexionghong",
        "created_at": "2019-11-27T15:01:43Z",
        "body": "Do not use async to define the view function with its own blocking task？"
      },
      {
        "user": "zexionghong",
        "created_at": "2019-11-27T15:13:50Z",
        "body": "意思是有自己的阻塞任务的视图函数就不要使用async 定义函数么"
      },
      {
        "user": "prostomarkeloff",
        "created_at": "2019-11-27T15:52:04Z",
        "body": "> Do not use async to define the view function with its own blocking task？\r\n\r\nYes. You should mark your functions by just `def` if you want to do inside blocking operations."
      },
      {
        "user": "zexionghong",
        "created_at": "2019-11-27T15:55:05Z",
        "body": "and i can write a ThreadPoolExecutor to run io()?"
      },
      {
        "user": "prostomarkeloff",
        "created_at": "2019-11-27T15:59:15Z",
        "body": "> and i can write a ThreadPoolExecutor to run io()?\r\n\r\nNo, you just should write blocking code like this:\r\n\r\n```py\r\n# some definitions, etc.\r\n\r\n@app.get(\"/\")\r\ndef index():\r\n    result = blocking_io()\r\n    return {\"result\": result}\r\n\r\n```\r\n\r\nFastAPI will run your code in `ThreadPoolExecutor` by self."
      },
      {
        "user": "zexionghong",
        "created_at": "2019-11-27T23:25:51Z",
        "body": "Thanks\r\n"
      },
      {
        "user": "sm-Fifteen",
        "created_at": "2019-11-29T14:20:04Z",
        "body": "You can also make your own custom async I/O functions, but those would have to either rely on async libraries (like httpx, aiohttp, aiofiles, asyncpg, etc.) or use Python asyncio's own \"leaf futures\" (the primitive IO functions those libraries are built upon) like `asyncio.sleep()`, `asyncio.open_connection()`, and so on. You'll probably want to use libraries, though, the asyncio primitives can be difficult to work with.\r\n\r\n```py\r\nfrom fastapi import FastAPI\r\nimport asyncio\r\n\r\napp = FastAPI()\r\n\r\nasync def io():\r\n    await asyncio.sleep(1) # Don't forget to await your async I/O functions!\r\n    return 'xx'\r\n\r\n@app.get('/')\r\nasync def index():\r\n    result = await io() # You have to await any function marked as `async def`\r\n    return {'xx':result}\r\n```\r\n\r\nUsing one or the other shouldn't cause much difference for you, though,"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-02-12T19:02:51Z",
        "body": "Thanks for the help @prostomarkeloff and @sm-Fifteen :bowing_man: :cake: \r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-02-23T00:02:13Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 738,
    "title": "dependency_overrides in production possible?",
    "created_at": "2019-11-26T19:53:45Z",
    "closed_at": "2023-02-28T11:05:42Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/738",
    "body": "**Description**\r\n\r\nIs this a pattern you can use for production?\r\n\r\n```python\r\n\r\ndef storage():\r\n    return ...\r\n\r\ndef s3storage():\r\n   return ...\r\n\r\napp = FastAPI()\r\n@app.get(\"/files/{name})\r\ndef get_item(name, storage = Depends(storage)):\r\n    return storage.read(name)\r\n\r\nif should_use_s3:\r\n    app.dependency_override[storage] = s3storage\r\n```\r\n\r\n**Context**:\r\nLet's say you'd like your app to support multiple providers for file storage, data bases, ...\r\nThe documentation talks about `dependency_override` mostly in the unit testing context.\r\n\r\nBy the way: Thank you for the great library!",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/738/comments",
    "author": "phbender",
    "comments": [
      {
        "user": "dmontagu",
        "created_at": "2019-11-26T20:04:19Z",
        "body": "I would personally recommend avoiding the use of `dependency_overrides` for this kind of production-time configuration (e.g., given issue #737 which you also opened 😄, and seems like a clear bug to me), and instead bake the logic directly into app setup and/or the dependency functions themselves.\r\n\r\nI view the primary benefit of `dependency_overrides` as giving you a way to inject mocks during testing; if you are going to have multiple possible configurations in production I think those should be built into the app in a first class way. Just my 2c though!"
      },
      {
        "user": "phbender",
        "created_at": "2019-11-29T16:58:55Z",
        "body": "Thank you for your answer!\r\n\r\nSo is this what it could look like:\r\n\r\n```python\r\ndef db():\r\n    if system == \"A\":\r\n        return Postgres()\r\n    else:\r\n        return SQLite()\r\n\r\n@app.get(\"/foo\")\r\ndef get_foo(db=Depends(db)):\r\n    return db.find_foos()\r\n```\r\n\r\n(something like tihs)\r\n\r\nWould really appreciate a minimal example of such a run time switch! Maybe I don't see the ocean between the waves."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-07T16:58:46Z",
        "body": "Thanks for the help here @dmontagu ! :cake: :bowing_man: \r\n\r\nThanks @phbender for reporting back and closing the issue :+1: "
      }
    ]
  },
  {
    "number": 736,
    "title": "Is there a cache for files opened within API request[QUESTION]",
    "created_at": "2019-11-26T16:20:02Z",
    "closed_at": "2023-02-28T11:05:39Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/736",
    "body": "**Description**\r\n\r\nI am running an API that opens a netcdf4(hdf5) file after a request was submitted. To avoid memory problems during multiple queries I want to cache the opened file. So that the file is loaded only once in the memory. \r\nThe used netcdf4 file changes every 4 hours. \r\n\r\nIs that possible and If yes could you give me some examples?\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/736/comments",
    "author": "meteoDaniel",
    "comments": [
      {
        "user": "dmontagu",
        "created_at": "2019-11-26T20:00:49Z",
        "body": "Yes, it is possible, but there is nothing built into fastapi that will do this; you'll need to be responsible for implementing the caching yourself.\r\n\r\nThe right way to do this depends a lot on context you haven't shared -- where is the file coming from? What are you doing with it? How big is it? Does it matter if multiple worker processes are each caching it separately?\r\n\r\nProbably the easiest approach to keep the file contents in memory would be to use a `functools.lru_cache` (with a low `maxsize` to prevent storing a long history). You can find lots of blog articles, examples, etc. about how to use `lru_cache`.\r\n\r\nIf `lru_cache` doesn't work for you, the right answer probably depends heavily on the answers to the questions above, potentially along with context about your backend deployment environment, etc."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-10T14:29:04Z",
        "body": "Thanks for the help here @dmontagu ! :clap: :bow: \r\n\r\nThanks for reporting back and closing the issue @meteoDaniel  :+1: "
      }
    ]
  },
  {
    "number": 724,
    "title": "Raising the error if input model has extra parameters?",
    "created_at": "2019-11-21T05:37:22Z",
    "closed_at": "2023-02-28T11:36:19Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/724",
    "body": "Hello\r\n\r\nHow can I raise the error if input pydantic's model has extra parameters?\r\nRight now all extra keys are just ignored.\r\n\r\n**Example:**\r\n```\r\nfrom fastapi import FastAPI\r\nfrom pydantic import BaseModel\r\n\r\napp = FastAPI()\r\n\r\nclass UpdateModel(BaseModel):\r\n    name: str\r\n\r\n@app.post(\"/items/\")\r\nasync def update(item: UpdateModel):\r\n    # do smth\r\n```\r\nIf I send `{\"name\": \"FOO\", \"id\": \"BAR\"}` the ID key will be ignored. \r\nIs it any common way to make method to raise error in that case?\r\n\r\n---\r\nThanks for your work.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/724/comments",
    "author": "rappongy",
    "comments": [
      {
        "user": "dmontagu",
        "created_at": "2019-11-21T05:55:11Z",
        "body": "I believe the following should cause this to raise errors:\r\n```\r\nclass UpdateModel(BaseModel):\r\n    name: str\r\n    class Config:\r\n        extra = \"forbid\"\r\n```\r\n\r\nThis should be documented in the pydantic docs."
      },
      {
        "user": "rappongy",
        "created_at": "2019-11-21T10:56:47Z",
        "body": "Thank you! Missed this in docs."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-10T14:52:36Z",
        "body": "Thanks for the help here @dmontagu ! :clap: :bow: \r\n\r\nThanks for reporting back and closing the issue @rappongy  :+1: "
      }
    ]
  },
  {
    "number": 714,
    "title": "jsonable_encoder does not use custom_encoder if Config.json_encoders is not defined.",
    "created_at": "2019-11-19T09:37:12Z",
    "closed_at": "2023-02-28T11:35:27Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/714",
    "body": "**Describe the bug**\r\n\r\nWith factory_boy and faker, I wanted to define a Factory, here is the code...\r\n \r\n```python\r\nfrom datetime import datetime\r\n\r\nimport factory\r\nimport faker.utils.datetime_safe\r\nfrom fastapi.encoders import jsonable_encoder\r\nfrom pydantic import BaseModel\r\n\r\n\r\nclass MyModel(BaseModel):\r\n    dt_field: datetime\r\n\r\n\r\nclass MyModelFactory(factory.Factory):\r\n    dt_field = factory.Faker(\"date_time\")  # should return a datetime\r\n\r\n    class Meta:\r\n        model = MyModel\r\n\r\n\r\ninst = MyModelFactory.build()\r\n\r\nassert isinstance(inst, MyModel)\r\nassert isinstance(inst.dt_field, faker.utils.datetime_safe.datetime)\r\nassert isinstance(inst.dt_field, datetime)\r\n\r\ninst_encoded = jsonable_encoder(inst)\r\nassert isinstance(inst_encoded[\"dt_field\"], dict)\r\nassert inst_encoded[\"dt_field\"] != inst.dt_field.isoformat()\r\n\r\ninst_encoded = jsonable_encoder(\r\n    inst, custom_encoder={faker.utils.datetime_safe.datetime: lambda o: o.isoformat()}\r\n)\r\nassert isinstance(inst_encoded[\"dt_field\"], str)\r\nassert inst_encoded[\"dt_field\"] == inst.dt_field.isoformat()\r\n```\r\n\r\n**To Reproduce**\r\nUse my script\r\n\r\n**Expected behavior**\r\n`custom_encoder` is not used...\r\n\r\n**Environment:**\r\n - OS: Linux\r\n - FastAPI Version [e.g. 0.3.0], get it with:\r\n\r\n```Python\r\nimport fastapi\r\nprint(fastapi.__version__)\r\n```\r\nFastAPI: 0.42.0\r\n\r\n- Python version, get it with:\r\n\r\n```bash\r\npython --version\r\n```\r\n\r\nPython: 3.8.0\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/714/comments",
    "author": "matrixise",
    "comments": [
      {
        "user": "chbndrhnns",
        "created_at": "2020-01-27T12:06:35Z",
        "body": "Can we assume this issue is fixed with the merged changed in 0.47.1?"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-02-12T18:19:33Z",
        "body": "Thanks for the report @matrixise , I think this should be fixed in the latest FastAPI versions.\r\n\r\nCould you confirm if it works for you and if so, close the issue?\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "matrixise",
        "created_at": "2020-02-13T20:29:00Z",
        "body": "I will test on tomorrow and will keep you in touch.\r\n"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-12T17:59:45Z",
        "body": "Did you confirm if it works? May we close this issue?\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-04-23T00:02:04Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T11:22:19Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 712,
    "title": "Query(regex) does not work for date types",
    "created_at": "2019-11-15T15:40:35Z",
    "closed_at": "2023-02-28T11:35:23Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/712",
    "body": "**Describe the bug**\r\nI would like to be able to make some data filter by GET parameter which is date\r\n\r\n/api/foo?from_date=2019-01-01\r\n\r\nAnd I want specifically it to be in YYYY-MM-DD format\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. \r\nI made the following parameter with query and regex:\r\n`def filter_order(from_date: date = Query(..., regex=r'\\d{4}-\\d{2}-\\d{2}')`\r\n\r\n\r\n**Expected behavior**\r\nwhen i query `/api/foo?from_date=1` I expect a validation error\r\n\r\ninstead my date is valid and equal to date(1970, 1, 1)\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/712/comments",
    "author": "vitalik",
    "comments": [
      {
        "user": "dmontagu",
        "created_at": "2019-11-15T19:46:54Z",
        "body": "I *think* this is an issue with pydantic's parsing of the `date` type. (The `regex` only affects documentation, if I recall correctly.)\r\n\r\nProbably worth creating an issue there, or maybe just searching for one (I feel like I've seen this discussed before...).\r\n\r\nAs a workaround, you could create a custom date type that actually performs the regex check (rather than just documenting it). I believe the way to create a type with custom validators is documented in the pydantic docs (should be as easy as subclassing `date` and adding a `__get_validators__` classmethod, or at least very similar to that)."
      },
      {
        "user": "vitalik",
        "created_at": "2019-11-15T21:49:36Z",
        "body": "well I checked - for **str** type regex works as well on server side (not only documentation)\r\n\r\nI would work on a patch but cannot figure out where is exactly types are \"casted\" from request.GET.."
      },
      {
        "user": "dmontagu",
        "created_at": "2019-11-15T23:20:51Z",
        "body": "It's handled entirely by pydantic -- the annotation is basically converted directly to a pydantic model field annotation."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-02-12T18:07:16Z",
        "body": "@vitalik if you use a `date` or `datetime` type, then Pydantic uses it to handle data parsing. And anything you pass to `Query()` is used only for documentation.\r\n\r\nIf you use `str`, then the `regex` in  `Query(..., regex=\"\")` is used for documentation AND regex.\r\n\r\nIf you want to have something constrained to some types of dates only, you could declare the parameter as `str` with the regex. And then if you want to have a date from it, you could put that in a dependency.\r\n\r\nE.g.\r\n\r\n```Python\r\nfrom datetime import datetime, date\r\n\r\nfrom fastapi import FastAPI, Query, Depends\r\n\r\napp = FastAPI()\r\n\r\n\r\ndef strict_date(\r\n    from_date: str = Query(..., regex=r\"\\d{4}-\\d{2}-\\d{2}\", format=\"date\")\r\n) -> date:\r\n    dt = datetime.strptime(from_date, \"%Y-%m-%d\")\r\n    return dt.date()\r\n\r\n\r\n@app.get(\"/\")\r\ndef filter_order(from_date: date = Depends(strict_date)):\r\n    return from_date.isoformat()\r\n```\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-02-25T00:01:51Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T11:22:24Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 702,
    "title": "How to get the server version number",
    "created_at": "2019-11-11T10:38:14Z",
    "closed_at": "2023-02-28T11:34:50Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/702",
    "body": "**Description**\r\n\r\nHow can I get the server version number, apart from downloading the whole openapi.json file from `api/v1/openapi.json`?  I would not like to download the whole API schema just for the version number only.\r\n\r\nI could create my own endpoint for that, but am I missing a more obvious way of doing it?\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/702/comments",
    "author": "stratosgear",
    "comments": [
      {
        "user": "chbndrhnns",
        "created_at": "2019-11-18T19:43:04Z",
        "body": "Would this do it for you?\r\n\r\n```py\r\nfrom fastapi import __version__ as fastapi_version\r\n\r\n@app.get('/version')\r\ndef version(request: Request):\r\n    \"\"\"Retrieve version information\"\"\"\r\n\r\n    return {'version': fastapi_version}\r\n```"
      },
      {
        "user": "stratosgear",
        "created_at": "2019-11-18T20:03:18Z",
        "body": "Not realy... :)\r\n\r\nThis would expose the fastapi project version.  I am interested in the API version that fastapi is serving!\r\n\r\nMy implementation is similar though:\r\n\r\n```\r\nfrom myproject import __version__\r\n\r\nrouter = APIRouter()\r\n\r\n@router.get(\"/version\", response_class=JSONResponse)\r\ndef version():\r\n    v = {\"version\": __version__}\r\n    return JSONResponse(status_code=200, content=v)\r\n```\r\n\r\nAnd I just update the `__version__` var in the root `__init__.py` file.\r\n\r\nI also have a:\r\n\r\n```\r\napp = FastAPI(\r\n    title=config.PROJECT_NAME,\r\n    description=\"Some description\",\r\n    openapi_url=\"/api/v1/openapi.json\",\r\n    version=__version__,\r\n)\r\n```\r\n\r\nin my `main.py` file.\r\n"
      },
      {
        "user": "chbndrhnns",
        "created_at": "2019-11-18T20:10:15Z",
        "body": "I am doing something similar for my app version and I am not aware of an easier solution."
      },
      {
        "user": "dmontagu",
        "created_at": "2019-11-18T21:45:30Z",
        "body": "Yeah, your best bet would probably be to return `request.app.version` in an endpoint. There is no built-in way to surface this information externally short of accessing the openapi spec."
      },
      {
        "user": "stratosgear",
        "created_at": "2019-11-19T12:32:15Z",
        "body": "`request.app.version` is MUCH better than my `from myproject import __version__`, I might steal that...!"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-02-12T17:28:50Z",
        "body": "Thanks everyone for the help! :cake: \r\n\r\nI think that solves your question, right @stratosgear ? Do you want to close the issue?\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "stratosgear",
        "created_at": "2020-02-12T17:33:50Z",
        "body": "Yes, I'm fine with this..."
      },
      {
        "user": "yogeshdecodes",
        "created_at": "2022-11-03T09:45:27Z",
        "body": "one liner\r\n```\r\npip freeze | grep fastapi"
      }
    ]
  },
  {
    "number": 699,
    "title": "A very long response",
    "created_at": "2019-11-10T11:46:13Z",
    "closed_at": "2023-02-28T11:34:46Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/699",
    "body": "I have a service. After start, my service has response in a second. Some minutes later, my service has response in 10 ms. Why this case appear?\r\n\r\nNotice. This is property of service by fastapi, as I measure time of execution of my handler into my code. This is 10 ms.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/699/comments",
    "author": "Hedgehogues",
    "comments": [
      {
        "user": "sm-Fifteen",
        "created_at": "2019-11-11T18:11:08Z",
        "body": "It's hard to tell without any code example, but slowdowns with that level of variation usually come from databases or other external network operations. I've had request go from 2 minutes to 15 seconds just by running it a few more times, probably because the database I'm connected to keeps recently accessed data in cache, making query execution and row fetching time much faster when accessing the same data repeatedly.\r\n\r\nThat would be my guess, anyway. Is there anymore information you can provide on your service? A simplified code snippet, maybe?"
      },
      {
        "user": "dmontagu",
        "created_at": "2019-11-11T19:07:50Z",
        "body": "Yeah, without more code it would be very hard to assess, but as far as I'm aware there is no systemic issue with slow response times shortly after app launch."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-12T17:50:51Z",
        "body": "Thanks for the help here @sm-Fifteen and @dmontagu ! :cake: :bow: \r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-04-23T00:02:06Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 697,
    "title": "Raw query bytes?",
    "created_at": "2019-11-08T19:37:14Z",
    "closed_at": "2023-02-28T11:34:44Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/697",
    "body": "**Description**\r\nI am having a query as `?value=XX%D6YY`.\r\nNow the `request.scope['query_string']` has `b'XX\\xd6YY'`\r\nbut query dependency `value: bytes = Query(None)` has  `b'XX\\xef\\xbf\\xbdYY'`\r\n\r\nHow can I avoid default decoding/recoding if the type is bytes?\r\nThe `%D6` is decode and re-encoded into `\\xef\\xbf\\xbd`?\r\n\r\nIs it possible to avoid decoding for bytes?\r\nOr how can I implement the `RawQuery` or `BytesQuery`?\r\n\r\n**Additional context**\r\nCurrently I am using a `Depends()` for each query in request.scope['query_string'], which is kind of 🤷‍♂ ",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/697/comments",
    "author": "mayli",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2020-04-12T17:49:56Z",
        "body": "As you are doing quite some low-level handling to override the defaults, that would probably be the best way to do it, in a reusable dependency.\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-04-23T00:02:08Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 663,
    "title": "Endpoint Must be available over WSS.",
    "created_at": "2019-10-28T18:10:50Z",
    "closed_at": "2023-02-28T11:33:00Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/663",
    "body": "...",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/663/comments",
    "author": "ballon3",
    "comments": [
      {
        "user": "euri10",
        "created_at": "2019-10-29T05:37:26Z",
        "body": "The formatting doesn't make it easy but it seems you have ws:// on your script "
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-10T17:18:03Z",
        "body": "Thanks for the help here @euri10 ! :clap: :bow: \r\n\r\nThanks for coming back and closing the issue @ballon3  :+1: "
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T11:23:13Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 661,
    "title": "Ability to set response headers / cookies after yield",
    "created_at": "2019-10-28T04:34:13Z",
    "closed_at": "2023-02-28T11:32:52Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/661",
    "body": "It feels inconsistent that we can change headers / cookies in dependencies before `yield`, but can't do this afterwords. E.g. in the following example only `before=yield` cookie will be set:\r\n```python\r\ndef set_cookie(response: Response):\r\n    response.set_cookie(\"before\", \"yield\")\r\n    yield\r\n    response.set_cookie(\"after\", \"yield\")\r\n\r\n@app.get(\"/\")\r\ndef index(_=Depends(set_cookie)):\r\n    return {}\r\n```\r\n\r\nThe possibility of setting them \"after request\" would eliminate a need for middlewares in cases when their order is not important.\r\n\r\nAlternatively we can at least throw an exception to make the behavior explicit.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/661/comments",
    "author": "imbolc",
    "comments": [
      {
        "user": "sm-Fifteen",
        "created_at": "2019-10-28T16:06:22Z",
        "body": "How would that work? Context manager dependencies are only closed once the response has been fully rendered, I believe, at which point it's already far too late to add headers. Is there any reason why you wouldn't be able to set both headers before yielding?"
      },
      {
        "user": "imbolc",
        "created_at": "2019-10-28T16:35:33Z",
        "body": "> Is there any reason why you wouldn't be able to set both headers before yielding?\r\n\r\nI found it when I tried to automatically save cookie-based session."
      },
      {
        "user": "tiangolo",
        "created_at": "2019-10-31T14:55:20Z",
        "body": "As @sm-Fifteen says, the section after `yield` in dependencies is executed after the response has been sent. In fact, after the background tasks have been executed. This is intentional, that's the main point of dependencies with yield, to be able to run code after the response is sent.\r\n\r\nIf you want to set cookies no matter what else happens in the path operation function, you can do it in the normal dependency or in the part before yield.\r\n\r\nThose headers are combined with any other headers you set in your dependencies or path operation and then are returned together.\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "imbolc",
        "created_at": "2019-10-31T15:06:01Z",
        "body": "Right, and if feels solid until you have `Response` as a dependency. Anyway if this stuff about background tasks is intentional it will involve even more inconsistency to do any exception for dependencies with `Response`. Thanks, for your answers, guys :)"
      },
      {
        "user": "michitaro",
        "created_at": "2020-09-14T19:27:43Z",
        "body": ">I found it when I tried to automatically save cookie-based session.\r\n\r\nI'm guessing @imbolc were talking about codes something like this.\r\nIt looks quite useful.\r\n\r\n```python\r\napp = FastAPI()\r\n\r\ndef get_session_store(\r\n    response: Response,\r\n    FASTAPI_SESSION: Optional[str] = Cookie(None),\r\n):\r\n    store = {}\r\n    if FASTAPI_SESSION is not None:\r\n        store = json.loads(FASTAPI_SESSION)\r\n    yield store\r\n    response.set_cookie(key='FASTAPI_SESSION', value=json.dumps(store))\r\n\r\n\r\n@app.get\r\ndef index(store: dict = Depends(get_session_store)):\r\n    store['n'] = 42 # store will be automatically saved in cookie\r\n\r\n@app.get\r\ndef clear(store: dict = Depends(get_session_store)):\r\n    store.clear() # will work\r\n    store = {'n': 42} # will not work\r\n```\r\n\r\nIs it possible to do something like this?\r\n\r\nAnyway, Thank you very much for the nice framework!"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T11:23:13Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 638,
    "title": "How to get rid of extraneous properties or set additionalProperties to FALSE ?",
    "created_at": "2019-10-22T04:56:46Z",
    "closed_at": "2023-02-28T11:31:19Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/638",
    "body": "I have the following model\r\n\r\n```\r\nclass AccountModel(BaseModel):\r\n  name: str\r\n```\r\nDuring validation, if the name is not there it raises an error, but in data, if I am sending \r\n```\r\n{\"name\": \"Balpreee\", \"age\": 23 }\r\n```\r\nI want just name in data, and not age. \r\n\r\nPlease help, thanks in advance!",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/638/comments",
    "author": "knowBalpreet",
    "comments": [
      {
        "user": "knowBalpreet",
        "created_at": "2019-10-22T07:56:42Z",
        "body": "It handles it implicitly, i was wrong to do `await request.json()` "
      },
      {
        "user": "prostomarkeloff",
        "created_at": "2019-10-22T07:56:46Z",
        "body": "Age variable don't misses to the AccountModel after validation."
      },
      {
        "user": "tiangolo",
        "created_at": "2019-10-30T19:21:12Z",
        "body": "Yep, it should work just like that. I think you found it, right?\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2019-11-27T20:50:48Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 614,
    "title": "Support Rails-y HTML forms",
    "created_at": "2019-10-11T20:08:09Z",
    "closed_at": "2023-02-28T11:29:59Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/614",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nI'm trying to point some existing forms to a FastAPI backend. They contain properties of a model like `<input type=\"text\" name=\"user[first_name]\">`. I would like to use a Pydantic model that describes the entire User object, instead of putting each form param as its own argument to the handler, or reading and parsing the entire raw request body.\r\n\r\n**Describe the solution you'd like**\r\n```\r\nclass User(BaseModel):\r\n    first_name: str\r\n    ... more properties ...\r\n\r\n@app.post('/users/')\r\nasync def create_user(user: User = Form(...)):\r\n    do_something(user)\r\n```\r\n\r\n**Describe alternatives you've considered**\r\nBeing able to grab the entire posted form body as a Dict would work too, I think\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/614/comments",
    "author": "maxfurman",
    "comments": [
      {
        "user": "dmontagu",
        "created_at": "2019-10-11T21:30:25Z",
        "body": "For what it's worth, you can do something similar to using a pydantic model now (as opposed to listing things out in the endpoint signature), you just can't do it using a pydantic model specifically.\r\n\r\n\r\n```python\r\nfrom fastapi import FastAPI, Depends\r\nfrom starlette.testclient import TestClient\r\n\r\nclass UserForm:\r\n    def __init__(self, first_name: str, other: str):\r\n        self.first_name = first_name\r\n        self.other = other\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\"/\")\r\ndef create_user(user_form: UserForm = Depends()):\r\n    return [user_form.first_name, user_form.other]\r\n\r\n\r\nclient = TestClient(app)\r\nprint(client.get(\"/\").json())\r\n# {\r\n#     \"detail\": [\r\n#         {\r\n#             \"loc\": [\"query\", \"first_name\"],\r\n#             \"msg\": \"field required\",\r\n#             \"type\": \"value_error.missing\",\r\n#         },\r\n#         {\r\n#             \"loc\": [\"query\", \"other\"],\r\n#             \"msg\": \"field required\",\r\n#             \"type\": \"value_error.missing\",\r\n#         },\r\n#     ]\r\n# }\r\nprint(client.get(\"/\", params={\"first_name\": \"hello\", \"other\": \"world\"}).json())\r\n# ['hello', 'world']\r\n```\r\n\r\nIf the only thing you don't like is that you have to write out an init signature, at least in python3.7 you can use `dataclasses` too:\r\n```python\r\nfrom dataclasses import dataclass\r\n\r\n@dataclass\r\nclass UserForm:\r\n    first_name: str\r\n    other: str\r\n```\r\n(if you swap out `UserForm` in the longer example above with this definition, the results are exactly the same)\r\n\r\n**Note that you'll still get pydantic-based validation of the values since fastapi is already doing that when it obtains the dependencies for use in the dependency signatures.**\r\n\r\n-----\r\n\r\nIf you specifically want the ability to use pydantic models for this purpose, that might be a reasonable feature request; as far as I am aware that is not currently possible. (Although I believe @tiangolo has pushed back against this in other issues in the past.)\r\n\r\nBut I figured there's a chance the above approach addresses your workflow."
      },
      {
        "user": "dmontagu",
        "created_at": "2019-10-11T21:32:57Z",
        "body": "Also, I realize you wanted to use `Form` rather than query parameters; that works just as well:\r\n\r\n```python\r\nclass UserForm:\r\n    def __init__(self, first_name: str = Form(...), other: str = Form(...)):\r\n        self.first_name = first_name\r\n        self.other = other\r\n\r\n# OR\r\n\r\n@dataclass\r\nclass UserForm:\r\n    first_name: str = Form(...)\r\n    other: str = Form(...)\r\n\r\n...\r\n\r\nprint(client.get(\"/\", data={\"first_name\": \"hello\", \"other\": \"world\"}).json())\r\n```\r\n\r\nYou'll get the same output as above"
      },
      {
        "user": "maxfurman",
        "created_at": "2019-10-12T01:57:56Z",
        "body": "Thanks! That's much better than grabbing each attribute as an argument. Is there a way to untangle nested form inputs? For example, to turn `user[first_name]=Rick&user[last_name]=Sanchez` formdata into `{'user': {'first_name': 'Rick', 'last_name': 'Sanchez'}}`, and then coerce that into a User instance?"
      },
      {
        "user": "dmontagu",
        "created_at": "2019-10-12T02:38:33Z",
        "body": "You’d probably want to look into the python multipart form dependency to see how it parses the data. I’m not sure how it works; it wouldn’t surprise me if this were possible, but it also wouldn’t surprise me if it weren’t. (You might also want/need to look at how the starlette Request class handles form data.)\r\n\r\n----\r\n\r\nIn general, I would recommend using json instead of form data once dictionaries come into play — I’ve just noticed a lot of inconsistency in how form data like this is serialized/parsed, and it seems disproportionately likely that you could run into a painful client and/or server issue down the line due to the atypical form data usage (despite what any RFCs may or may not say).\r\n\r\nJust my 2c though. If you’ve been using this style of form data for a while without issue then it’s probably fine, if you can figure out how to get it parsed 😅."
      },
      {
        "user": "maxfurman",
        "created_at": "2019-10-15T14:26:39Z",
        "body": "I haven't had any luck finding a Python library or builtin to parse HTML FormData formatted[like][this] - which I find strange since that pattern is pretty common In The Wild™. Maybe I'm missing something. I'm trying to replace some of my backend routes without rewriting any of the frontend forms, but that may not be possible."
      },
      {
        "user": "tiangolo",
        "created_at": "2019-10-30T13:03:00Z",
        "body": "Yep, as @dmontagu says. I imagine that's probably a Rails convention or similar? I haven't seen it.\r\n\r\nIt's not part of any standard, and if I remember correctly is not even possible to declare it in OpenAPI. The problem is that, as it's not in any standard, there could be lots of similar custom encodings.\r\n\r\nThat would require a custom parser for those forms, but is not something that something that I have seen before, so I don't know of any package that could do it 😔\r\n\r\nIf you find one, or implement it yourself, the way to tie it together would be right as @dmontagu says. Just that you would parse those custom form names/keys (`str`) to extract their nested data. A similar format I can think of is TOML, so maybe you can use parts of it. But it's not completely the same.\r\n\r\n<!-- issue-manager: answered -->\r\n\r\n"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2019-11-27T20:50:53Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T11:24:38Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 599,
    "title": "returning subquery data",
    "created_at": "2019-10-07T13:32:30Z",
    "closed_at": "2023-02-28T11:28:59Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/599",
    "body": "**Description**\r\n\r\nI have two tables, Users and Items with a 1:many relationship.  How can I create an endpoint that returns a list of users where each user includes the COUNT of items rather than the entire list? \r\n\r\n**Additional context**\r\nI think I understand how this would be done with a SQL query including a subquery/inner join but I'm trying to understand the right approach in the ORM/Pydantic/Sqlalchemy world.\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/599/comments",
    "author": "sliptonic",
    "comments": [
      {
        "user": "n1ckdm",
        "created_at": "2019-10-08T11:41:06Z",
        "body": "I think this is what you are asking... Caveat: This might not be the best approach!\r\n\r\n```\r\n# SQL Alchemy model:\r\nclass Parent(Base):\r\n    __tablename__ = 'parent'\r\n\r\n    id = Column(Integer, primary_key=True, index=True)\r\n    children = relationship(\"Child\", backref=\"parent\")\r\n\r\n    # Computed properties\r\n    child_count: int = 0\r\n```\r\n```\r\n# Pydantic\r\nclass Parent(BaseModel):\r\n    id: int\r\n    children: List[Child]\r\n    child_count: int\r\n\r\n    class Config:\r\n        orm_mode = True\r\n```\r\n```\r\n@app.get(\"parents/{parent_id}\", response_model=Parent)\r\ndef read_parent(\r\n    *,\r\n    db: Session = Depends(get_db),\r\n    parent_id: int\r\n):\r\n    parent = db.query(Parent).filter(Parent.id == parent_id).first()\r\n    parent.child_count = len(parent.children)\r\n    return parent\r\n```\r\n"
      },
      {
        "user": "sliptonic",
        "created_at": "2019-10-08T17:09:47Z",
        "body": "Not quite.  \r\nI don't want to return the list of children at all, ONLY the length of the list.  The full list of children can become unwieldy so, for performance, I only want to return it if specifically requested on another endpoint.\r\n\r\n"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-02-10T20:53:16Z",
        "body": "@sliptonic you could simply get the data you need to return and put it in a dictionary. You don't have to return a SQLAlchemy model, you can return a `dict` with the exact contents you want in the response.\r\n\r\nIf you return the data directly you don't even need to declare a Pydantic model.\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-02-22T00:02:02Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 590,
    "title": "Local unit test passed in Win 10 but Jenkins failed?",
    "created_at": "2019-10-04T15:47:49Z",
    "closed_at": "2023-02-28T12:00:23Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/590",
    "body": "**Description**\r\n \r\nmain.py:\r\n```\r\napp = FastAPI()\r\n\r\n@app.get(\"/api/1.0.0/localEntities\")\r\nasync def get_thing():\r\n  return <from some sqlalchemy query>\r\n```\r\n\r\n\r\ntest.py:\r\n```\r\nfrom starlette.testclient import TestClient\r\nfrom my_api.main import app\r\n\r\nclient = TestClient(app)\r\n\r\ndef test_get_local_entities():\r\n  response = client.get(\"/api/1.0.0/localEntities\")\r\n  assert response.status_code == 200\r\n  assert response.json() == [ etc ]\r\n```\r\n\r\nThis passes pytest locally but in Jenkins CI/CD\r\n\r\ndef test_get_legal_entities():\r\n>   response = client.get(\"/api/1.0.0/localEntities\")\r\n\r\nvenv/lib/python3.6/site-packages/sqlalchemy/engine/__init__: in create_engine\r\n  return strategy.create(*args, **kwargs)\r\nvenv/lib/python3.6/site-packages/sqlalchemy/engine/strategies.py: in create\r\n  entrypoint = u.__get_entrypoint()\r\n\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\r\n\r\n \r\n\r\nself = <[TypeError(\"unsupported operand type(s) for +: 'NoneType' and 'str'\") raised in repr()] URL object at 0x7f937ed8c358>\r\n\r\n    def _get_entrypoint(self):\r\n\r\n        \"\"\"Return the \"entry point\" dialect class.\r\n\r\n        This is normally the dialect itself except in the case when the\r\n\r\n        returned class implements the get_dialect_cls() method.\r\n\r\n        \"\"\"\r\n\r\n>       if \"+\" not in self.drivername:\r\n\r\nE       TypeError: argument of type 'NoneType' is not iterable\r\n\r\nvenv/lib/python3.6/site-packages/sqlalchemy/engine/url.py:168: TypeError",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/590/comments",
    "author": "scheung38",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2019-10-27T20:22:33Z",
        "body": "It seems you have an error in your SQLAlchemy code, in the parts that you're not sharing.\r\n\r\nPlease provide a self-contained example showing the error, otherwise we don't have a way to guess what might be wrong.\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2019-11-27T20:51:01Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 586,
    "title": "Win 10 Dockerized version of app not working with TypeError; argument of 'NoneType' is not iterable",
    "created_at": "2019-10-03T16:44:43Z",
    "closed_at": "2023-02-28T12:00:15Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/586",
    "body": "Dockerized app was working with Mac fastapi=0.38.1 so not sure what changed now with Win 10 0.39.0:\r\n\r\nfastapi: 0.39.0\r\n\r\nDockerfile:\r\n\r\n```\r\nFROM tiangolo/uvicorn-gunicorn-fastapi:python3.7\r\n\r\nWORKDIR /app\r\n\r\nENV HOME /root \r\n\r\nCOPY requirements.pip ./\r\n\r\nENV PYTHONPATH /app\r\n\r\nCOPY pip.conf /root/.pip/pip.conf\r\n\r\nRUN pip install -r requirements.pip\r\n\r\nEXPOSE 5000\r\n\r\nCOPY .  /app\r\n```\r\n```\r\ndocker build -t my-api .\r\n\r\ndocker run --rm -it -p 5000:5000/tcp -e PORT=\"5000\" WORKERS_PER_CORE=\"3\" APP_MODULE\r\n=\"custom_fold.main:APP\" my-api:latest\r\n```\r\n\r\nBut upon requesting endpoints:\r\n\r\nFILE \"/usr/local/lib/python3.7/site_packages/sqlalchemy/engine_url.py, line 168\" in _get_entrypoint\r\n  if \"+\" not in self.drivername:\r\nTypeError; argument of 'NoneType' is not iterable\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/586/comments",
    "author": "scheung38",
    "comments": [
      {
        "user": "dmontagu",
        "created_at": "2019-10-03T17:24:44Z",
        "body": "Your sqlalchemy database uri is not being read properly from however you are trying to load it. Looks like maybe an environment variable isn't set."
      },
      {
        "user": "scheung38",
        "created_at": "2019-10-03T17:43:11Z",
        "body": "@dmontagu \r\n\r\nI think this is race condition in sqlalchemy, as I hardcoded these\r\n\r\n```\r\nfrom dotenv import load_dotenv\r\n\r\n\r\nload_dotenv()\r\n\r\nclass GlobalDb:\r\n\r\n    def init_engine(self):\r\n      if not self.engine:\r\n        url = self.create_url(\r\n          \"postgresql\",    # os.getenv(\"DB_DRIVER\") \r\n           \"5432\",            # os.getenv(\"DB_PORT\")\r\n\r\n```\r\n\r\nit is solved, but any idea how to delay such that os.getenv(\"DB_DRIVER\") before sqlalchemy is executed?\r\n\r\nThis didn't happen before, or maybe race condition states that it is indeterminate? \r\n\r\nos.environment[\"DB_DRIVER\"] would be faster? .. [also same]\r\n\r\nSOLVED: load_env() inside init_engine()\r\n\r\nBut like to know how to bake\r\n\r\ndocker run -e WORKERS_PER_CORE=\"5\" -e PORT=\"5000\" \r\n\r\ninto DOCKERFILE\r\n\r\nso that \r\n\r\ndocker run -p 5000:5000 my-api-container\r\n\r\n\r\n\r\n\r\n"
      },
      {
        "user": "tiangolo",
        "created_at": "2019-10-27T20:11:36Z",
        "body": "You can check the project generators, they have how to handle that baked in, with retries and everything.\r\n\r\nYou can also copy the parts that you need from them.\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2019-11-27T20:51:05Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 577,
    "title": "How can I persist the SpooledTemporaryFile?",
    "created_at": "2019-09-30T17:07:31Z",
    "closed_at": "2023-02-28T11:59:33Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/577",
    "body": "Hi everyone, thanks for this amazing project. I'm testing out the features of FastAPI and I'm stuck uploading files at the moment. Now my question is:\r\n\r\nHow can I persist the SpooledTemporaryFile?\r\n\r\nIs it possible to move the contents of SpooledTemporaryFile to a specific file path and persist the file when it's done uploading?\r\n\r\nThanks a lot and best regards\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/577/comments",
    "author": "xiaodiannao",
    "comments": [
      {
        "user": "dmontagu",
        "created_at": "2019-09-30T18:59:21Z",
        "body": "@xiaodiannao I haven't tested this snippet, but I use code similar to this in one of my projects and you may find it to be a useful starting point:\r\n```python\r\nimport shutil\r\n\r\nfrom fastapi import FastAPI, UploadFile, File\r\n\r\napp = FastAPI()\r\n@app.post(\"/upload\")\r\ndef upload(upload_file: UploadFile = File(...)):\r\n    with open(\"/path/to/destination.jpg\", \"wb\") as f_destination:\r\n        shutil.copyfileobj(upload_file.file, f_destination)\r\n```"
      },
      {
        "user": "xiaodiannao",
        "created_at": "2019-10-01T09:11:17Z",
        "body": "Works like a charm @dmontagu thanks a lot!"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-10T19:36:22Z",
        "body": "Thanks for the help here @dmontagu ! :clap: :bow: \r\n\r\nThanks for reporting back and closing the issue @xiaodiannao  :+1: "
      }
    ]
  },
  {
    "number": 576,
    "title": "Docker examples with Postgresql and Celery but without Front End?",
    "created_at": "2019-09-30T14:52:55Z",
    "closed_at": "2023-02-28T11:59:30Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/576",
    "body": "**Description**\r\n\r\nAre there code examples to show dockerized fastapi with celery but without the heavy additional Vue.js or Angular.js Front end to complicate things\r\n\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/576/comments",
    "author": "scheung38",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2019-10-27T18:17:53Z",
        "body": "Did you check the project generators?\r\n\r\nThey have everything in separated containers / Docker services.\r\n\r\nThey don't install VueJS in the backend service. You can basically remove the frontend folder, and that's it.\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2019-11-27T20:51:10Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 567,
    "title": "response for \"Try it out\" in docs",
    "created_at": "2019-09-25T08:16:38Z",
    "closed_at": "2023-02-28T11:59:09Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/567",
    "body": "**Description**\r\nHi,\r\n\r\nI'm creating an API where authenticated users can trigger a processing chain. The chain requires an input which is provided by the user in the request body.\r\n\r\nI'm wondering if there's a way to check if a request has been made through the doc interface via the \"Try it out\" feature. This way I could return a pre-defined response instead of triggering the chain (which will most likely end in an exception).\r\n\r\nI could check the body for the default arguments I've defined and detect it this way. However, that seems a bit hacky, so I hope there's some functionality within FastAPI I could use for that purpose.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/567/comments",
    "author": "valpesendorfer",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2019-10-27T17:47:20Z",
        "body": "That would require some kind of central storage for the status of that call, like a database, a file, etc. So, it's not something provided by FastAPI.\r\n\r\nBut you can easily implement it yourself. I imagine once you start a processing chain you would get an ID for the process, or some way to determine if that has already been triggered.\r\n\r\nThen save that (let's say it's an ID) in some storage (database, Redis, JSON file), and then, in your path operation, check if that already exists and return that value if it exists, otherwise start the chain, save the ID to the store and return that.\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "valpesendorfer",
        "created_at": "2019-10-28T11:28:38Z",
        "body": "Thanks for your answer @tiangolo.\r\n\r\nThat's currently what I've already implemented:\r\n\r\nIf a registered user calls the specified endpoint with a defined request body, a processing job is created that is identified by a UUID and registered in a database.\r\n\r\nMy issue is, that a registered user can log into the docs panel and could trigger the processing with the example request body that is provided for the documentation, which is not desirable.\r\nSo Ideally, creating a request through the doc interface also supplies a \"fake\" documentation response without actually creating a job.\r\n\r\nAn easy way would be to just check if the request body is identical to the one used in the docs ... but this isn't very robust. \r\n"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-02-10T20:04:13Z",
        "body": "If what you want to do is document the response, you can add response examples.\r\n\r\n```Python\r\nfrom fastapi import FastAPI\r\n\r\napp = FastAPI()\r\n\r\n\r\n@app.get(\r\n    \"/\",\r\n    responses={\r\n        \"200\": {\r\n            \"content\": {\r\n                \"application/json\": {\r\n                    \"examples\": {\r\n                        \"response 1\": {\r\n                            \"summary\": \"Some description\",\r\n                            \"value\": {\"some key\": \"some value\"},\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    },\r\n)\r\ndef read():\r\n    return {\"some key\": \"a different value\"}\r\n```\r\n\r\nOtherwise, I'm not sure how would you want to handle it. Why wouldn't it be desirable for the user to trigger the processing with the example request in the docs? What's wrong with that?\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "valpesendorfer",
        "created_at": "2020-02-12T08:30:24Z",
        "body": "The response documentation is just for display in the documentation, right? It's not going to be actually returned when the user triggers the button.\r\n\r\nMaybe bit more context helps:\r\n\r\nThe endpoint is a POST route, which allows designated users (external data providers) to trigger a processing chain. This however, requires one or more valid metadata documents on the user's side. These are supposed to be supplied by specifying a list of URLs, which are read by the processing chain.\r\n\r\nTo document how the POST call needs to look like, I've created documentation with some \"fake\" URLs ... so if an authorized user triggers the processing chain with the example in the doc panel, the chain will fail. \r\n\r\nNow writing these lines I'm thinking of some alternative ways to re-design this workflow, that might circumvent this \"issue\". But would be still interesting, to have the option to e.g. return a fake response for these fake requests."
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-12T16:08:46Z",
        "body": "I'm not sure I'm understanding your use case correctly...\r\n\r\n> These are supposed to be supplied by specifying a list of URLs, which are read by the processing chain.\r\n\r\nSo, the user sends a POST with a JSON body containing URLs?\r\n\r\nAre those URLs part of the same FastAPI app?\r\n\r\nThe idea of the docs UI is that it allows interacting with the actual API, so that the users can use the real thing through it, the same way they would do it via a frontend, mobile app, etc. So returning mocked responses in the docs would defeat that purpose.\r\n\r\nMaybe a simple workaround for your use case could be to have a query parameter `production` that is by default `False`, and only when set to `True` the API would actually perform the costly action.\r\n\r\nBut that would also mean that your actual client code would have to set that query parameter to `True` everywhere...\r\n\r\nBut that might work for your use case.\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-04-23T00:02:13Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 552,
    "title": "Easy way to enable/disable endpoint",
    "created_at": "2019-09-20T08:40:06Z",
    "closed_at": "2023-02-28T11:58:13Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/552",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nThis is not a problem but rather something that occurs quite commonly. Sometimes you just want to expose a certain endpoint based on configuration settings or environment. Currently there is `include_in_schema` flag that hides the endpoint in OpenAPI schema but the actual endpoint is still present and responsive. There should be a way to disable endpoint entirely from being exposed.\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\nI think there should be a `disabled` or `enabled` flag on `APIRoute.api_route` method to easily enable the endpoint and not exposing it at all. \r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/552/comments",
    "author": "LKay",
    "comments": [
      {
        "user": "dmontagu",
        "created_at": "2019-09-20T09:29:19Z",
        "body": "I do this at the router level, and conditionally call `include_router` depending on the value of a config variable.\r\n\r\nIt looks like this:\r\n\r\n```python\r\nrouter = APIRouter()\r\nadmin_router = APIRouter()\r\n\r\n... # add some endpoints here\r\n\r\ndef get_router() -> APIRouter:\r\n    combined_router = deepcopy(router)\r\n    if get_api_settings().include_admin_routes:\r\n        combined_router.include_router(admin_router, dependencies=require_superuser())\r\n    return combined_router\r\n```"
      },
      {
        "user": "LKay",
        "created_at": "2019-09-20T10:13:49Z",
        "body": "This works for the whole router but disabling single endpoint inside a router is different case. Let’s say I have a router with 4 endpoints but I want to disable only one of them based on a flag."
      },
      {
        "user": "euri10",
        "created_at": "2019-09-20T11:16:15Z",
        "body": "kind of a hack\r\n```\r\nimport os\r\nfrom functools import lru_cache\r\nfrom typing import Optional\r\n\r\nimport uvicorn\r\nfrom fastapi import FastAPI\r\nfrom pydantic import BaseSettings\r\n\r\n\r\nclass AppSettings(BaseSettings):\r\n    excluded_endpoint_def_list: Optional[str]\r\n\r\n    class Config:\r\n        env_prefix = \"\"\r\n\r\n\r\n@lru_cache()\r\ndef get_app_settings() -> AppSettings:\r\n    return AppSettings()\r\n\r\n\r\ndef get_app() -> FastAPI:\r\n    app_settings = get_app_settings()\r\n\r\n    app = FastAPI()\r\n    @app.get(\"/included\")\r\n    async def included_list():\r\n        return {\"included\": True}\r\n\r\n\r\n    @app.get(\"/excluded\")\r\n    async def excluded_list():\r\n        return {\"excluded\": True}\r\n\r\n    if app_settings.excluded_endpoint_def_list is not None:\r\n        excluded_endpoint_list = app_settings.excluded_endpoint_def_list.split(\",\")\r\n        routes_to_exclude = [r for r in app.routes if r.name in excluded_endpoint_list]\r\n        for route_to_exclude in routes_to_exclude:\r\n            app.routes.remove(route_to_exclude)\r\n\r\n    return app\r\n\r\n\r\nif __name__ == '__main__':\r\n    os.environ['EXCLUDED_ENDPOINT_DEF_LIST'] = 'excluded_list'\r\n    uvicorn.run(get_app())\r\n```"
      },
      {
        "user": "dmontagu",
        "created_at": "2019-09-20T17:52:59Z",
        "body": "@LKay If you want to exclude based on a boolean flag, is there a reason you couldn't just put the route definition inside a conditional block, conditioning on the condition you'd pass as `enabled` or `disabled` anyway? It seems to me even if the flag you are requesting was added, the following would be equivalent:\r\n\r\n```python\r\nif not exclude_condition:\r\n    @app.get(\"/excluded\")\r\n    async def excluded_list():\r\n        return {\"excluded\": True}\r\n```\r\n```python\r\n@app.get(\"/excluded\", disabled=exclude_condition)\r\nasync def excluded_list():\r\n    return {\"excluded\": True}\r\n```\r\n\r\nThe benefit to the first approach would be that it wouldn't require a new keyword argument on all of the route decorators (and there are already so many!).\r\n\r\nIs there something this approach wouldn't handle?"
      },
      {
        "user": "LKay",
        "created_at": "2019-09-21T01:08:08Z",
        "body": "I see my case is yet slightly different. I have one function with logic implemented and it’s decorated by more than one route decorator.\r\n\r\nThis is to handle case such as `/users/:id/notes` and `/notes` having the same notes fetching logic but `id` parameter from path if present overrides the user id from authorization token. I would like to be able to disable certain decorators based on some condition.\r\n\r\nThis is not an actual code but I think it illustrates the case.\r\n\r\n"
      },
      {
        "user": "dmontagu",
        "created_at": "2019-09-21T03:42:33Z",
        "body": "You could still implement that by just putting the decorator statement (`f = app.route(...)(f)`) inside a conditional.\r\n\r\nI know it would be nicer to keep the decorator above the function, but this seems like a pretty uncommon edge case — my suspicion is that if this were added, it would get very little use.\r\n\r\nI could be convinced otherwise if other people want the feature though."
      },
      {
        "user": "dmontagu",
        "created_at": "2019-09-21T03:45:34Z",
        "body": "Also, for what it’s worth, it might be worth using a query parameter instead of a path parameter for your example. That would eliminate the issue entirely (not to mention simplify the api spec) — you’d be able to handle the condition within the endpoint."
      },
      {
        "user": "LKay",
        "created_at": "2019-11-27T02:30:39Z",
        "body": "Handled using wrapping `if` statements around routes. "
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-10T14:24:39Z",
        "body": "Thanks for the help here everyone! :clap: :bow: \r\n\r\nThanks for reporting back and closing the issue @LKay  :+1: "
      },
      {
        "user": "xbc922",
        "created_at": "2022-05-30T10:14:12Z",
        "body": "@euri10 \r\n\r\napp.routes.remove\r\n\r\nthis function is not exists ?"
      },
      {
        "user": "GLGDLY",
        "created_at": "2022-10-18T14:18:53Z",
        "body": "I also have this question, what I found that I can do is only directly remove the target routes from app.router.routes list"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T11:40:16Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 524,
    "title": "itsdangerous Coding Compatibility[BUG]",
    "created_at": "2019-09-12T08:06:02Z",
    "closed_at": "2023-02-28T11:56:45Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/524",
    "body": "**Describe the bug**\r\nUnder the same key, debuging mode decodes normally and production mode decodes incorrectly\r\n\r\n**To Reproduce**\r\n\r\n-------------one----------\r\n```Python\r\nfrom itsdangerous import JSONWebSignatureSerializer\r\nimport uvicorn\r\nfrom fastapi import FastAPI\r\napp = FastAPI()\r\n@app.get(\"/\")\r\ndef read_root():\r\n    s = JSONWebSignatureSerializer(secret_key='123')\r\n    a = s.dumps({'uid': 1, 'type': 101, 'scope': 'StudentScope'})\r\n    return {\"Hello\": a }\r\nif __name__ == \"__main__\":\r\n    uvicorn.run(app, host=\"127.0.0.1\", port=8000)\r\n```\r\nresult:\r\n{\"Hello\":\"eyJhbGciOiJIUzUxMiJ9.eyJ1aWQiOjEsInR5cGUiOjEwMSwic2NvcGUiOiJTdHVkZW50U2NvcGUifQ.SGxpm7vl1qY4RFrvEGD5IlUrmQS6YQ8prkJdrW0TWgwuzkRskKkhmFa0h_oDLt70YbCAsYK0pZ7oLXJ4PzK5SQ\"}\r\n-------------one----------\r\n\r\n-------------two----------\r\n```Python\r\nfrom itsdangerous import JSONWebSignatureSerializer\r\nfrom fastapi import FastAPI\r\napp = FastAPI()\r\n@app.get(\"/\")\r\ndef read_root():\r\n    s = JSONWebSignatureSerializer(secret_key='123')\r\n    a = s.dumps({'uid': 1, 'type': 101, 'scope': 'StudentScope'})\r\n    return {\"Hello\": a }\r\n```\r\nsell:\r\nuvicorn main:app --reload\r\nresult:\r\n{\"Hello\":\"eyJhbGciOiJIUzI1NiJ9.eyJ1aWQiOjEsInR5cGUiOjEwMSwic2NvcGUiOiJTdHVkZW50U2NvcGUifQ.Zch1Snt8meKjZzvACTF6dbqKsYqlYBcYCUH_fjJJlMw\"}\r\n-------------two----------\r\n**Expected behavior**\r\nthe one is true\r\n\r\n\r\n\r\n**Environment:**\r\n - OS: [e.g. Linux / Windows]\r\n - FastAPI =0.30.0\r\n-python: 3.6.5\r\n\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/524/comments",
    "author": "903165495",
    "comments": [
      {
        "user": "903165495",
        "created_at": "2019-09-12T09:38:04Z",
        "body": "I've settled it.`JSONWebSignatureSerializer(secret_key='123, algorithm_name='HS256'')`"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-10T19:49:24Z",
        "body": "Thanks for reporting back and closing the issue :+1: "
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2023-02-28T11:40:33Z",
        "body": "Assuming the original need was handled, this will be automatically closed now. But feel free to add more comments or create new issues or PRs."
      }
    ]
  },
  {
    "number": 516,
    "title": "Model 'Literal' type with multiple elements showing  up in Swagger page",
    "created_at": "2019-09-08T17:09:23Z",
    "closed_at": "2023-02-28T11:55:58Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/516",
    "body": "**Description**\r\n\r\nHow can I get a model element with the 'Literal' type to show in the Swagger UI?\r\n\r\nAs in, \r\n\r\n```\r\nclass myModel(BaseModel):\r\n    type: Literal['test']\r\n    test: Literal['test2', 'test3', 'test4']\r\n    count: int\r\n```\r\n\r\nThis Model shows upon in the swagger page as:\r\n```\r\n        {\r\n          \"type\": \"string\",\r\n          \"count\": 0\r\n        },\r\n```\r\nAs in, the 'test' field does not get put into the swagger page\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/516/comments",
    "author": "ashears",
    "comments": [
      {
        "user": "ashears",
        "created_at": "2019-09-08T17:29:20Z",
        "body": "Follow up question:\r\nWould it be possible for the Literal type to actually show the allowed element(s) in the SwaggerUI?"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-10T19:41:19Z",
        "body": "I assume you solved your problem, so thanks for coming back and closing the issue :+1: "
      }
    ]
  },
  {
    "number": 515,
    "title": "How to capture the whole body of POST, in a single JSON var",
    "created_at": "2019-09-07T10:44:25Z",
    "closed_at": "2023-02-28T11:55:54Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/515",
    "body": "**Description**\r\n\r\nHow can I capture the whole body of a POST operation (posted as application/json) as a single JSON var, without necessarily knowing the incoming schema?\r\n\r\n**Additional context**\r\n\r\nTried as:\r\n\r\n```\r\nfrom pydantic import BaseModel, Json\r\n\r\nclass DynamicSchema(BaseModel):\r\n    item: Json\r\n\r\n@router.post(\"/someurl\")\r\nasync def someMethod(\r\n    item: DynamicSchema\r\n):\r\n```\r\nbut I get a reply of:\r\n\r\n```\r\n{\r\n    \"detail\": [\r\n        {\r\n            \"loc\": [\r\n                \"body\",\r\n                \"item\",\r\n                \"item\"\r\n            ],\r\n            \"msg\": \"field required\",\r\n            \"type\": \"value_error.missing\"\r\n        }\r\n    ]\r\n}\r\n```\r\nfor a submission of:\r\n\r\n```\r\n{\r\n    \"qwerty\": \"me\",\r\n    \"more\": \"other\",\r\n    \"another\": {\r\n        \"dict\": \"q1\"\r\n    }\r\n}\r\n```\r\n\r\nI've tried a ton of other different variations by I still get a validation error.\r\n\r\nI though Body(..., embed=True) might help but I got nowhere with that either.\r\n\r\nPS: The docs are not clear either on how to do something as simple as that (they are **fantastic** though for anything else I've looked).",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/515/comments",
    "author": "stratosgear",
    "comments": [
      {
        "user": "euri10",
        "created_at": "2019-09-07T13:11:49Z",
        "body": "you can try\r\n`body: Any = Body(...)`\r\nor `body: dict`"
      },
      {
        "user": "stratosgear",
        "created_at": "2019-09-08T19:28:20Z",
        "body": "Yeah, this works...\r\n\r\nI am 99.9% sure I tried this out, and it \"didn't\" work!\r\n\r\nAnd I just found out that starting the apiserver with:\r\n\r\n```\r\nuvicorn apiserver.server:app --reload\r\n```\r\n\r\ndoes **not** always properly reload the server.  Changes to the signature of the POST methodm through VSCode, does not automatically reload the server to the new code changes, keeping the old behavior.  So I am sure I tried many different combos **without** manually reloading to the new code changes (trusting the server will pick them up)\r\n\r\nI guess, I'll have to open a separate issue for this when I can create a minimum viable example.\r\n\r\nThanks!"
      },
      {
        "user": "euri10",
        "created_at": "2019-09-08T19:46:19Z",
        "body": "That would be a uvicorn issue then. \n\nI'm not using vscode so it may be irrelevant but the reloader keeps track of st_mtime so if a file changes but is not saved last modification time won't change and therefore won't reload.\n\nPycharm I think is saving changes automatically. "
      },
      {
        "user": "tiangolo",
        "created_at": "2020-04-10T19:57:32Z",
        "body": "Thanks for the help here @euri10 ! :clap: :bow: \r\n\r\nThanks for reporting back and closing the issue @stratosgear  :+1: "
      },
      {
        "user": "janheindejong",
        "created_at": "2020-04-15T16:57:48Z",
        "body": "Writing this for future reference: the solution to the initial question by @euri10 works. Code would be: \r\n\r\n```python \r\n@router.post(\"/someurl\")\r\nasync def someMethod(body: dict):\r\n    return body\r\n```\r\n\r\n"
      },
      {
        "user": "camspilly",
        "created_at": "2020-07-03T04:35:41Z",
        "body": "Is it possible at all to pass both body and an extracted body parameter to an endpoint? "
      }
    ]
  },
  {
    "number": 487,
    "title": "Correct way to document RedirectResponse in openapi?",
    "created_at": "2019-08-30T14:40:31Z",
    "closed_at": "2023-02-28T11:54:25Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/487",
    "body": "**Description**\r\n\r\nHow can I make openapi work correctly if i my handler return a RedirectResponse?\r\n\r\nI try simply do this but i got ValidationError\r\n\r\n```python\r\nfrom fastapi.applications import FastAPI\r\nfrom starlette.responses import RedirectResponse, Response\r\napp = FastAPI(docs_url=\"/\")\r\n\r\n\r\n@app.get('/redirect', status_code=307, response_class=Response)\r\nasync def redirect():\r\n    return RedirectResponse('/')\r\n# OR\r\n@router.get('/redirect', response_class=RedirectResponse)\r\nasync def redirect():\r\n    return RedirectResponse('/')\r\n\r\nif __name__ == '__main__':\r\n    import uvicorn\r\n    uvicorn.run(app, port=8001, reload=True)\r\n```\r\n\r\n```\r\npydantic.error_wrappers.ValidationError: 4 validation errors\r\npaths -> /redirect -> get -> responses -> default\r\n  field required (type=value_error.missing)\r\ncontent -> __key__\r\n  none is not an allowed value (type=type_error.none.not_allowed)\r\nresponses -> 307 -> content\r\n  value is not none (type=type_error.none.allowed)\r\npaths -> /redirect -> get\r\n  value is not none (type=type_error.none.allowed)\r\n```",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/487/comments",
    "author": "trim21",
    "comments": [
      {
        "user": "trim21",
        "created_at": "2019-08-30T14:44:40Z",
        "body": "But this works:\r\n```python\r\nfrom fastapi.applications import FastAPI\r\nfrom fastapi import APIRouter\r\nfrom starlette.responses import RedirectResponse, Response, HTMLResponse\r\napp = FastAPI(docs_url=\"/\")\r\nrouter = APIRouter()\r\n\r\n\r\n@router.get('/redirect', response_class=HTMLResponse, status_code=307)\r\nasync def redirect():\r\n    return RedirectResponse('/')\r\n\r\n\r\napp.include_router(router)\r\n\r\nif __name__ == '__main__':\r\n    import uvicorn\r\n    uvicorn.run(app, port=8001, reload=True)\r\n```"
      },
      {
        "user": "tiangolo",
        "created_at": "2020-02-10T17:16:47Z",
        "body": "I wasn't able to reproduce the issue, maybe it was related to a previous version.\r\n\r\nThis seems to work:\r\n\r\n```Python\r\nfrom fastapi.applications import FastAPI\r\nfrom starlette.responses import RedirectResponse, Response\r\napp = FastAPI(docs_url=\"/\")\r\n\r\n\r\n@app.get('/redirect', status_code=307, response_class=Response)\r\nasync def redirect():\r\n    return RedirectResponse('/')\r\n```\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "trim21",
        "created_at": "2020-02-10T17:26:34Z",
        "body": "Yes, I'll close it."
      }
    ]
  },
  {
    "number": 482,
    "title": "Union of a models cause duplicated validation errors",
    "created_at": "2019-08-29T10:29:09Z",
    "closed_at": "2023-02-28T11:54:12Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/482",
    "body": "**Describe the bug**\r\nWhen input data is defined as `Union` type and both models have the same field (or inherit the same base class) response contains duplicated validation errors for the same field.\r\n\r\n**To Reproduce**\r\n\r\nLet's create models and route:\r\n\r\n```python\r\nclass Base(BaseModel):\r\n    name: str\r\n\r\nclass ModelA(Base):\r\n    foo: Optional[str] = None\r\n\r\nclass ModelB(Base):\r\n    bar: Optional[str] = None\r\n\r\nInput = Union[ModelA, ModelB]\r\n\r\n@api.post(\"/foo\")\r\nasync def foo_post(data: Input = Body(...)):\r\n    pass\r\n```\r\n\r\nWhen request is made with empty json payload `{}`, response contains two errors for field `name` (mesage is `field required`).\r\n\r\n**Expected behavior**\r\nIn such case only one error of the same type should be returned without duplicates.\r\n\r\n**Environment:**\r\n - OS: macOS\r\n - FastAPI: 0.35\r\n - Python: 3.7.4",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/482/comments",
    "author": "LKay",
    "comments": [
      {
        "user": "NixBiks",
        "created_at": "2019-09-19T07:32:00Z",
        "body": "I have a similar issue when I want to allow for either one file or list of files as model\r\n\r\n     file: Union[List[UploadFile], UploadFile] = File(...)\r\n\r\nThen when I go to `/docs/` I get this\r\n\r\n    Fetch error\r\n    Internal Error /openapi.json"
      },
      {
        "user": "dmontagu",
        "created_at": "2019-09-19T07:46:35Z",
        "body": "The original issue is because it is showing you the problems parsing it into each possible choice of the Union. I think there has been some discussion of this over in pydantic; it might be worth discussing there.\r\n\r\nEither way, I would recommend upgrading to the latest supported versions of fastapi (0.38.1) and pydantic (0.32.2) in case it has any effect."
      },
      {
        "user": "dmontagu",
        "created_at": "2019-09-19T08:17:36Z",
        "body": "@mr-bjerre Your issue is different; this is not currently supported in FastAPI -- you have to pick one or the other. It is currently a limitation due to the way the openapi schema is generated.\r\n\r\nI can't imagine a scenario where you'd want to use `Union[List[UploadFile], UploadFile]` over just `List[UploadFile]` though -- am I missing something?\r\n\r\nI think it should be theoretically possible to generate a valid openapi spec representing this (even if FastAPI can't now), but if I understand correctly the actual bytes being sent to the server are the same if you were to send a request for a single `UploadFile` vs. a one-element list. So I'm not sure it would ever make sense to represent the field as a `Union`. Did you have a usage pattern in mind?"
      },
      {
        "user": "NixBiks",
        "created_at": "2019-09-19T09:04:16Z",
        "body": "No I agree the use case is shit.\r\n\r\nThe reason is that I suspected our data provider to sometimes deliver a single file upload and sometimes multiple files. So I was afraid that we’d have to support that on the same endpoint. \r\n\r\nBut it seems that that isn’t the case, luckily. So my part can be closed. Thanks for your answers. "
      },
      {
        "user": "tiangolo",
        "created_at": "2020-02-10T17:10:13Z",
        "body": "Yep, all as @dmontagu says. It's validating with the different types you declared, and both have a `name`. You are inheriting models, but the JSON Schemas are independent, and both have a `name`.\r\n\r\nThanks @mr-bjerre for reporting back!\r\n\r\n<!-- issue-manager: answered -->"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2020-02-22T00:02:09Z",
        "body": "Assuming the original issue was solved, it will be automatically closed now. But feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 441,
    "title": "Optional bool in query string always True when parameter not present",
    "created_at": "2019-08-16T03:48:04Z",
    "closed_at": "2023-02-28T12:27:35Z",
    "labels": [
      "question",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/441",
    "body": "**Describe the bug**\r\n\r\nWhen query parameter of type `Optional[bool]` is declared using `Query` class parameter value is not correctly mapped and instead of `None` it maps to instance of `Schema` which when type casted to `bool` returns True.\r\n\r\n**To Reproduce**\r\n\r\nSample code:\r\n\r\n```python\r\nclass QueryParams(BaseModel):\r\n\tfoo: Optional[bool] = None\r\n\r\nasync def query_params(foo: Optional[bool] = Query(None, description=\"Some parameter\")):\r\n\treturn QueryParams(foo=foo)\r\n\r\n@api.get(\"/foo\")\r\nasync def get(data: QueryParams = Depends(query_params)):\r\n\t# When '/foo' is called (without any parameters) the 'foo' parameter \r\n  # inside 'data' has value of 'True' instead of 'None'.\r\n\treturn None\r\n```\r\n\r\nIt however works fine if declared as just:\r\n\r\n```python\r\nasync def query_params(foo: Optional[bool] = None):\r\n\treturn QueryParams(foo=foo)\r\n```\r\n\r\n**Expected behavior**\r\nValue should be assigned only if parameter is present in query string, `None` otherwise.\r\n\r\n**Environment:**\r\n - OS: macOS\r\n - FastAPI Version: 0.35\r\n - Python version: 3.7.3\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/441/comments",
    "author": "LKay",
    "comments": [
      {
        "user": "dmontagu",
        "created_at": "2019-08-16T04:11:49Z",
        "body": "@LKay \r\nI can't reproduce this; the following test passes for me on the current version:\r\n```python\r\nfrom typing import Optional\r\n\r\nfrom pydantic import BaseModel\r\nfrom starlette.testclient import TestClient\r\n\r\nfrom fastapi import FastAPI, Depends, Query\r\n\r\napp = FastAPI()\r\n\r\n\r\nclass QueryParams(BaseModel):\r\n    foo: Optional[bool] = None\r\n\r\n\r\nasync def query_params(foo: Optional[bool] = Query(None, description=\"Some parameter\")):\r\n    return QueryParams(foo=foo)\r\n\r\n\r\n@app.get(\"/foo\")\r\nasync def get(data: QueryParams = Depends(query_params)):\r\n    # When '/foo' is called (without any parameters) the 'foo' parameter\r\n    # inside 'data' has value of 'True' instead of 'None'.\r\n    return data.foo\r\n\r\n\r\ndef test_optional_bool():\r\n    assert TestClient(app).get(\"/foo\").content == b\"null\"\r\n```\r\nDid I miss something?"
      },
      {
        "user": "LKay",
        "created_at": "2019-08-16T04:16:15Z",
        "body": "Oh, sorry I missed one more part. It happens when there is another wrapping function for parameters ie. for admin and non-admin parameters, such as:\r\n\r\n```python\r\n\r\nclass QueryParams(BaseModel):\r\n    foo: Optional[bool] = None\r\n    bar: Optional[bool] = None # ie. only admin param\r\n\r\nasync def query_params_admin(foo: Optional[bool] = Query(None, description=\"Some parameter\"), bar: Optional[bool] = Query(None, description=\"Some parameter\")):\r\n    return QueryParams(foo=foo, bar=bar)\r\n\r\nasync def query_params(foo: Optional[bool] = Query(None, description=\"Some parameter\")):\r\n    return await query_params_admin(foo)\r\n\r\n```"
      },
      {
        "user": "dmontagu",
        "created_at": "2019-08-16T04:34:51Z",
        "body": "The problem in your example is that you are calling `query_params_admin` directly -- FastAPI can only perform dependency injection if the function is called as a result of `Depends`. (Note: this is not a bug in fastapi.)\r\n\r\nIf you make a self-contained example like the one I posted above that isn't working the way you'd expect, I can show you options for how to refactor it into something that works."
      },
      {
        "user": "LKay",
        "created_at": "2019-08-19T04:16:48Z",
        "body": "I got it. I refactored my code so I now have two function, both returning instance of my parameters models class."
      },
      {
        "user": "tiangolo",
        "created_at": "2019-09-05T16:06:04Z",
        "body": "Thanks for the help @dmontagu ! :bowing_man: :rocket: \r\n\r\nThanks for reporting back and closing the issue @LKay :tada: "
      }
    ]
  },
  {
    "number": 425,
    "title": "Startup event dependencies",
    "created_at": "2019-08-07T12:46:22Z",
    "closed_at": "2023-02-28T12:26:49Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/425",
    "body": "First of all, great work on FastAPI! I've been really impressed so far.\r\n\r\nI need to start a long-running, periodic task on the startup event of my application. This long-running task requires the global app configuration. In my path handlers, I am using FastAPI's dependency injection to access the config, making it very easy to mock the dependency in tests. However, as of now I see no way to use dependency injection to get the config in the startup event. For now I can handle this by modifying the environ through starlette.environ, but it would be nice if I could mock the config in there the same way as I am doing the rest of the time. Is there a way to do this, or am I going about this in completely the wrong way? ",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/425/comments",
    "author": "lockshaw",
    "comments": [
      {
        "user": "dmontagu",
        "created_at": "2019-08-07T21:01:20Z",
        "body": "@lockshaw I would use a pattern where the config is loaded by function call, and isn't loaded until the call. So then you can access it in your startup event without it being set prior to the test run. (Maybe I'm misunderstanding your architecture though.)\r\n\r\nSomething like:\r\n\r\n```python\r\nclass AppSettings(BaseSettings):\r\n    setting1: str\r\n    setting2: str\r\n\r\n@lru_cache()\r\ndef get_app_settings():\r\n    return AppSettings()\r\n\r\n# -------\r\n\r\n@app.on_event(\"startup\")\r\ndef trigger_repeat_using_settings():\r\n    settings = get_app_settings()\r\n    trigger_repetitions(settings)\r\n```\r\nLet me know if that doesn't make sense, or if there is a problem this doesn't address."
      },
      {
        "user": "lockshaw",
        "created_at": "2019-08-07T22:35:37Z",
        "body": "@dmontagu That's my plan, and it's good to have some confirmation that there's nothing I'm missing. My main question was simply if there was a nice way I could just keep using dependency injection as I do in the rest of the tests, but I guess not. Thanks!"
      },
      {
        "user": "dmontagu",
        "created_at": "2019-08-07T23:19:00Z",
        "body": "@lockshaw the `app.on_event` function is inherited directly from starlette, so I don't think it can do anything nice with dependencies. But yes, I think this is the standard approach."
      },
      {
        "user": "tiangolo",
        "created_at": "2019-09-01T13:27:57Z",
        "body": "Thanks for the help @dmontagu ! :cake: :tada: \r\n\r\nThanks @lockshaw for reporting back and closing the issue :heavy_check_mark: "
      },
      {
        "user": "adriangb",
        "created_at": "2021-04-26T22:55:33Z",
        "body": "It would be very nice indeed to be able to use dependency injection in startup events!\r\n\r\nFor example, say you have a database connection.\r\nI think this would look like:\r\n\r\n```python\r\nclass AppSettings(BaseSettings):\r\n    dbhost: str\r\n\r\nclass DataBase:\r\n    def __init__(self, settings: AppSettings = Depends()):\r\n        self._connection = Connection(url=settings.dbhost)\r\n\r\n@app.on_event(\"startup\")\r\ndef startup(db: DataBase = Depends()):\r\n    app.state.db = db\r\n```\r\n\r\nNow, in your tests, I think you could just do:\r\n\r\n```python\r\napp.dependency_overrides[DataBase] = FakeDataBase\r\n```\r\n\r\nAnd there's no need to futz around with singletons or `lru_cache` because the startup event only ever happens once."
      },
      {
        "user": "ghost",
        "created_at": "2021-10-15T15:50:06Z",
        "body": "Can you make it possible to use Dependencies in events?"
      },
      {
        "user": "meseta",
        "created_at": "2021-10-29T18:35:05Z",
        "body": "It would be nice to have a way built into FastAPI. I have the same dependency override use case as @adriangb, to change timeouts and URLs for integration tests.\r\n\r\nIn the mean time, I'm using this slightly unclean workaround, which only works when the dependency doesn't take additional arguments/dependencies of its own\r\n```py\r\n@app.on_event(\"startup\")\r\nasync def startup_event():\r\n    settings = app.dependency_overrides.get(get_settings, get_settings)()\r\n```\r\n\r\nThis way, when I use `app.dependency_overrides[get_settings] = fake_get_settings` in a test. This is inspired by FastAPI's own dependency resolution which at some point calls `dependency_overrides.get(original_call, original_call)` in the `solve_dependencies()` method.\r\n\r\nI had a poke around to see if I could write my own method that makes use of `solve_dependencies()`, and it appears possible, but some extra work is needed to get it to correctly resolve nested dependencies. Here's a PoC, that works for simple dependencies like above, but would require modifications to deal with nested ones.\r\n\r\nNOTE: DO NOT USE, proof of concept only. (to deter copy/pasting, I have deleted some syntax) maybe someone could take it further\r\n\r\n```py\r\nfrom fastapi.dependencies.models import Dependant\r\nfrom fastapi.dependencies.utils import solve_dependencies\r\n\r\nasync def call_single_dependency(app: FastAPI, get_dependency: Callable) -> Any:\r\n    fake_scope = {\r\n        \"asgi\": {\"version\": \"3.0\", \"spec_version\": \"2.0\"},\r\n        \"type\": \"http\",\r\n        \"query_string\": \"\",\r\n        \"http_version\": \"1.1\",\r\n        \"method\": \"GET\"\r\n        \"path\": \"\",\r\n        \"root_path\": \"\"\r\n        \"client\": None,\r\n        \"server\": None\r\n        \"headers\": [],\r\n        \"extensions\": {},\r\n    }\r\n    fake_request = Request(scope=fake_scope)\r\n    values, *_ = await solve_dependencies(request=fake_request, dependant=Dependant(dependencies=[Dependant(path=\"\", name=\"result\", call=get_dependency)]), dependency_overrides_provider=app)\r\n    return values[\"result\"]\r\n```"
      },
      {
        "user": "ntakouris",
        "created_at": "2022-02-25T11:04:56Z",
        "body": "bump"
      },
      {
        "user": "tandav",
        "created_at": "2022-05-31T19:11:33Z",
        "body": "My app has startup event which uses db session.  \r\nI created I simple context manager wrapper. A bit ugly but it works.\r\n\r\n```py\r\ndef get_db():\r\n    db = SessionLocal()\r\n    yield db\r\n    db.close()\r\n\r\n@app.on_event(\"startup\")\r\ndef my_startup_event(db = Depends(get_db)):\r\n    with get_db() as db:\r\n        # ERROR:    Application startup failed. Exiting. \r\n        db.add(something)\r\n        db.commit() \r\n```\r\n\r\n\r\n```py\r\n\r\nimport contextlib\r\nget_db_wrapper = contextlib.contextmanager(get_db)\r\n\r\n@app.on_event(\"startup\")\r\ndef my_startup_event():\r\n    with get_db_wrapper() as db:\r\n        # works\r\n        db.add(something)\r\n        db.commit() \r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"
      },
      {
        "user": "xiki808",
        "created_at": "2022-08-19T09:06:35Z",
        "body": "@tandav thanks worked for me that way"
      }
    ]
  },
  {
    "number": 418,
    "title": "modify request in middleware and pass to path handlers",
    "created_at": "2019-08-02T03:46:11Z",
    "closed_at": "2023-02-28T12:26:25Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/418",
    "body": "**Description**\r\n\r\nIs there a way that can modify request in middleware and pass to the path handler?\r\n\r\nI need to get some value from header, and want to pass to path handlers so that I don't need to get the value in every path handlers.\r\n\r\nI've tried to add the value to header. But request.header cannot be modified....\r\n\r\nCan anyone give me some advices?\r\n\r\nThank you\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/418/comments",
    "author": "ysde",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2019-09-01T13:30:26Z",
        "body": "I assume you solved your issue, thanks for coming back to close it."
      }
    ]
  },
  {
    "number": 352,
    "title": "Trying to create an endpoint with a 'generic' parameter",
    "created_at": "2019-06-28T23:12:22Z",
    "closed_at": "2023-02-28T12:22:13Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/352",
    "body": "**Description**\r\n\r\nI'm trying to build an API using FastAPI that needs to integrate with another (undocumented) system which I do not have control over. For this reason, I need to be able to create an endpoint that I can use as an integration point without knowing what POST body data will be sent to my API. Is this possible using FastAPI? Am I able to create a sort of 'generic' parameter for an endpoint function which will capture any POST body data into a dictionary?\r\n\r\nThanks in advance. \r\n\r\nTo clarify:\r\nThis is simply so that I can reverse engineer the system I don't have control over. Once I see what data is being sent, I can rewrite the endpoints to be more explicit.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/352/comments",
    "author": "ShawnClake",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2019-06-29T06:19:12Z",
        "body": "Yep, if you know it's a dict, declare as `dict`.\r\n\r\nIf it might be a `list`, then use `Any`.\r\n\r\n---\r\n\r\nI received an email notification with the same answer by @dmontagu, but I don't see it here... 🤷‍♂️"
      },
      {
        "user": "dmontagu",
        "created_at": "2019-06-29T06:31:07Z",
        "body": "@tiangolo I deleted because I wasn’t sure if it would work if you want a dict with arbitrary keys at the *top* level, and I couldn’t test it out right now (didn’t want to leave unhelpful advice if I was wrong). I figured if you annotate with `x: dict`, for example, it would need to have the key `x` (and the *value* for that key would be the arbitrary dict), but reviewing the docs it seems like annotating a body parameter as dict should just work and get the whole body. Sorry for any confusion!"
      },
      {
        "user": "ShawnClake",
        "created_at": "2019-07-03T19:58:15Z",
        "body": "Thank you for the quick answers! I appreciate it."
      },
      {
        "user": "tiangolo",
        "created_at": "2019-08-31T02:10:22Z",
        "body": "Thanks for the help @dmontagu ! :taco: :cake: \r\n\r\nAnd thanks @ShawnClake for reporting back and closing the issue :tada: "
      }
    ]
  },
  {
    "number": 328,
    "title": "pydantic model validation",
    "created_at": "2019-06-22T09:26:06Z",
    "closed_at": "2023-02-28T12:21:42Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/328",
    "body": "Hello! I would like to validate a field on Pydantic, this is not hard. My problem is the next. This field is a `UniqueConstrain` in the database and i have to ask Database with SqlAlchemy if exists, and FastApi has not a system to pass `context` or something like that to share with BaseModel my database session to check it.\r\n\r\nHow can I validate my unique constrain into Pydantic?\r\n\r\nAt this time, the solution that i found it, it is to check on the view, but i think it should not do it there, it does?\r\n\r\nThank you!",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/328/comments",
    "author": "bergran",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2019-06-28T19:14:33Z",
        "body": "You're doing it right. It should be done inside the path operation, or even dependency if you want. That wouldn't belong to part of the validations done by Pydantic.\r\n\r\nThose validations are for the data shape and types. The relationships between whatever comes in those shapes and types with your actual database belongs to the next layer, your application code.\r\n\r\nI imagine this answers your question, so I'll close this issue. But feel free to add more comments."
      }
    ]
  },
  {
    "number": 307,
    "title": "eta on pydantic update to 0.28",
    "created_at": "2019-06-12T00:15:29Z",
    "closed_at": "2023-02-28T12:20:24Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/307",
    "body": "really need your latest PR \r\nit shoud solve recurring issues with sqlalchemy to pydantic mapping\r\nthank you !",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/307/comments",
    "author": "pourquoi",
    "comments": [
      {
        "user": "jorgerpo",
        "created_at": "2019-06-12T23:16:36Z",
        "body": "Don't take it as an official response but I could be any momment this week"
      },
      {
        "user": "haizaar",
        "created_at": "2019-06-20T06:09:23Z",
        "body": "May be to 0.29 which is already out? - I'm waiting for Generics in Pydantic."
      }
    ]
  },
  {
    "number": 302,
    "title": "How to response Queryset from Couchbase with response_model",
    "created_at": "2019-06-11T09:19:45Z",
    "closed_at": "2023-02-28T12:20:15Z",
    "labels": [
      "question",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/302",
    "body": "Only single object used in the document.",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/302/comments",
    "author": "jet10000",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2019-06-20T18:54:39Z",
        "body": "You can probably use `response_model=List[SomeModel]` or something similar.\r\n\r\n<!-- issue-manager: answered -->"
      }
    ]
  },
  {
    "number": 298,
    "title": "can't use test client in pytest with add_exception_handler or add_middleware",
    "created_at": "2019-06-08T05:34:40Z",
    "closed_at": "2023-02-28T12:20:02Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/298",
    "body": "**Describe the bug**\r\nCan't use test client in pytest with add_exception_handler or add_middleware called before. After called add_exception_handler or add_middleware, test_client.get or test.client.put etc always returns 200.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\nfrom fastapi import FastAPI\r\nfrom starlette.middleware.cors import CORSMiddleware\r\nfrom starlette.status import HTTP_422_UNPROCESSABLE_ENTITY\r\n\r\napp = FastAPI(title=PROJECT_NAME)\r\n\r\nuser = {\r\n    \"user\": {\r\n        \"email\": \"user@example.com\",\r\n        \"password\": \"string\",\r\n        \"username\": \"string\"\r\n    }\r\n}\r\n\r\n\r\nfrom starlette.testclient import TestClient\r\nclient = TestClient(app)\r\n\r\n\r\n@app.get(\"/text\")\r\ndef get_text():\r\n    return \"Hello World\"\r\n\r\n\r\ndef test_update_current_user():\r\n    app.add_middleware(\r\n         CORSMiddleware,\r\n         allow_origins=ALLOWED_HOSTS,\r\n         allow_credentials=True,\r\n         allow_methods=[\"*\"],\r\n         allow_headers=[\"*\"],\r\n    )\r\n    app.add_exception_handler(HTTPException, http_error_handler)\r\n    app.add_exception_handler(HTTP_422_UNPROCESSABLE_ENTITY, \r\n    http_422_error_handler)\r\n    response = client.get(\"/user1\")  # which should failed and return 404\r\n    assert response.status_code == 200\r\n```\r\n\r\n**Environment:**\r\n - OS: macOS\r\n - FastAPI Version: '0.29.0'\r\n\r\n- Python version\r\n3.7\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/298/comments",
    "author": "markqiu",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2019-07-15T15:44:21Z",
        "body": "I imagine you were able to solve your problem, thanks for closing the issue. Feel free to add more comments or create new issues."
      }
    ]
  },
  {
    "number": 286,
    "title": "422 using a dict body with 0.27.0",
    "created_at": "2019-06-03T14:34:29Z",
    "closed_at": "2023-02-28T12:19:24Z",
    "labels": [
      "question",
      "answered",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/286",
    "body": "The following endpoint was running fine with 0.26.0 and  Python 3.6.5:\r\n\r\n@app.patch(\"/ps/user\")\r\nasync def patch_user(user_dict: dict, add: List[str] = Query(None)) -> dict:\r\n   ...\r\n\r\nbut with upgrading to 0.27.0 I got the following 422 error:\r\n\r\n```\r\n{\r\n    \"detail\": [\r\n        {\r\n            \"loc\": [\r\n                \"query\",\r\n                \"user_dict\"\r\n            ],\r\n            \"msg\": \"field required\",\r\n            \"type\": \"value_error.missing\"\r\n        }\r\n    ]\r\n}\r\n```\r\nI can't find and according change in the last commits so I assume this is a bug?\r\n\r\nThanks,\r\nDaniel",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/286/comments",
    "author": "CanD42",
    "comments": [
      {
        "user": "tiangolo",
        "created_at": "2019-06-03T18:09:58Z",
        "body": "Thanks! Yep. You caught a bug :bug: \r\n\r\nIt should be fixed by #287 . There are also several new tests to check that this behavior doesn't change in the future.\r\n\r\nIt's available in version `0.27.2` (just released). :tada: :rocket: \r\n\r\n"
      },
      {
        "user": "CanD42",
        "created_at": "2019-06-04T09:20:12Z",
        "body": "wow, that was fast. It's working now with 0.27.2 👍\r\nThanks "
      },
      {
        "user": "tiangolo",
        "created_at": "2019-07-15T15:33:22Z",
        "body": "Thanks for reporting back and closing the issue! :rocket: :cake: "
      },
      {
        "user": "DannyVarod",
        "created_at": "2020-11-10T19:37:51Z",
        "body": "@tiangolo, could this issue be back in version 0.61.1?\r\n\r\nI'm trying to define an end point like the follow (tried the following and other variations) and all return 422:\r\n(removing the param1 didn't help either)\r\n\r\n@app.post('/op1/{param1}')\r\nasync def op1(param1: int, my_dict: Dict[Any, Any]):\r\n    pass\r\n\r\n@app.post('/op1/{param1}')\r\nasync def op1(param1: int, my_dict: Dict[Any, Any] = Body(...)):\r\n    pass\r\n\r\n@app.post('/op1/{param1}')\r\nasync def op1(param1: int, my_dict: Dict[Any, Any] = Body(default=dict(), embed=False)):\r\n    pass\r\n\r\nThe only workaround I found was defining my_dict as str and parsing the json myself.\r\n"
      },
      {
        "user": "Kludex",
        "created_at": "2020-11-10T20:19:02Z",
        "body": "I can't reproduce your issue @DannyVarod \r\n\r\nRun as `pytest <filename>`:\r\n```python\r\nfrom typing import Dict, Any\r\n\r\nimport pytest\r\nfrom fastapi import FastAPI, Body\r\nfrom fastapi.testclient import TestClient\r\n\r\n\r\napp = FastAPI()\r\n\r\n@app.post('/op1/{param1}')\r\nasync def op1(param1: int, my_dict: Dict[Any, Any]):\r\n    return my_dict\r\n\r\n@app.post('/op2/{param1}')\r\nasync def op2(param1: int, my_dict: Dict[Any, Any] = Body(...)):\r\n   return my_dict\r\n\r\n@app.post('/op3/{param1}')\r\nasync def op3(param1: int, my_dict: Dict[Any, Any] = Body(default=dict(), embed=False)):\r\n    return my_dict\r\n\r\nclient = TestClient(app)\r\n\r\n@pytest.mark.parametrize(\"endpoint\", [\"op1\", \"op2\", \"op3\"])\r\ndef test_everything(endpoint: str):\r\n    param1 = 1\r\n    my_dict = {\"potato\": \"potato\"}\r\n\r\n    res = client.post(f\"/{endpoint}/{param1}\", json=my_dict)\r\n    assert res.json() == my_dict\r\n```"
      },
      {
        "user": "DannyVarod",
        "created_at": "2020-11-11T08:51:28Z",
        "body": "@Kludex, how comes you used `json=my_dict` and not `data=my_dict` or `json=json.dumps(my_dict)`?"
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-09T19:45:20Z",
        "body": "@DannyVarod the test client is based on Requests, the `json` parameter take pure Python data types and converts them to serialized JSON. The `data` parameter is for form data. `json=json.dumps(my_dict)` would pass a single string to `json`, then Requests would send that as a JSON string type, not as a JSON object.\r\n\r\n> Sorry for the long delay! 🙈  I wanted to personally address each issue/PR and they piled up through time, but now I'm checking each one in order."
      },
      {
        "user": "DannyVarod",
        "created_at": "2022-11-10T12:39:35Z",
        "body": "@tiangolo I have since figured this out. The names are misleading though,m because JSON is a form of serializing data into a string - not an object. I would expect data to be for original data and json for **serialized** data (into JSON), incase someone wants to use a custom serializer."
      },
      {
        "user": "tiangolo",
        "created_at": "2022-11-10T21:40:12Z",
        "body": "Yep, it's an old design decision by Requests 🤷😅"
      }
    ]
  },
  {
    "number": 207,
    "title": "Status code 422",
    "created_at": "2019-05-08T10:08:50Z",
    "closed_at": "2023-02-28T15:02:25Z",
    "labels": [
      "question",
      "reviewed",
      "question-migrate"
    ],
    "url": "https://github.com/fastapi/fastapi/issues/207",
    "body": "Trying to run example code\r\n**********************************************************************************\r\nfrom fastapi import FastAPI\r\nfrom pydantic import BaseModel\r\nclass Item(BaseModel):\r\n    name: str\r\n    description: str = None\r\n    price: float\r\n    tax: float = None\r\napp = FastAPI()\r\n@app.post(\"/items/\")\r\nasync def create_item(item: Item):\r\n    return item\r\n***********************************************************************\r\nWith a request body as\r\n{\r\n    \"name\": \"Foo\",\r\n    \"description\": \"An optional description\",\r\n    \"price\": 45.2,\r\n    \"tax\": 3.5\r\n}\r\n**************************************************************************\r\nNow,\r\nRequesting through interactive API documentation (provided by Swagger UI)\r\ngives the correct response,\r\nwhile if I request the same though POSTMAN returns me status code 422 with the following:\r\n{\r\n    \"detail\": [\r\n        {\r\n            \"loc\": [\r\n                \"body\",\r\n                \"item\"\r\n            ],\r\n            \"msg\": \"field required\",\r\n            \"type\": \"value_error.missing\"\r\n        }\r\n    ]\r\n}\r\n\r\nPlease if someone could explain it.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/fastapi/fastapi/issues/207/comments",
    "author": "catch-n-release",
    "comments": [
      {
        "user": "wshayes",
        "created_at": "2019-05-08T10:48:58Z",
        "body": "Sending it as Content-Type  application/json  in Postman?  Log/print the item so you can see what's showing up and check the headers.  Everything looks fine and since it's working from Swagger UI ..."
      },
      {
        "user": "tiangolo",
        "created_at": "2019-05-10T20:04:40Z",
        "body": "Thanks @wshayes for your help! :cake: \r\n\r\nThanks @SuyashSrivastavaDel for closing the issue."
      }
    ]
  }
]