[
  {
    "number": 3592,
    "title": "vnpy_xtp运行报错！",
    "created_at": "2024-12-14T18:27:07Z",
    "closed_at": "2024-12-15T11:35:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3592",
    "body": "## 环境\r\n\r\n* 操作系统: macOS\r\n* Python版本: python3.11\r\n\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n已经正常安装vnpy vnpy_xtp vnpy_ctastrategy vnpy_ctabacktester vnpy_datamanager  rqdatac ta-lib numpy==1.26.4\r\n\r\n执行vnpy_xtp仓库的实例代码报错\r\n```python\r\nfrom vnpy.event import EventEngine\r\nfrom vnpy.trader.engine import MainEngine\r\nfrom vnpy.trader.ui import MainWindow, create_qapp\r\n\r\nfrom vnpy_xtp import XtpGateway\r\n\r\n\r\ndef main():\r\n    \"\"\"主入口函数\"\"\"\r\n    qapp = create_qapp()\r\n\r\n    event_engine = EventEngine()\r\n    main_engine = MainEngine(event_engine)\r\n    main_engine.add_gateway(XtpGateway)\r\n    \r\n    main_window = MainWindow(main_engine, event_engine)\r\n    main_window.showMaximized()\r\n\r\n    qapp.exec()\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n\r\n## 实际程序行为\r\n\r\n运行报错：\r\n```bash\r\nTraceback (most recent call last):\r\n  File \"/Users/eshao/PycharmProjects/my-vnpy/demo_vnpy.py\", line 5, in <module>\r\n    from vnpy_xtp import XtpGateway\r\n  File \"/Users/eshao/PycharmProjects/my-vnpy/.venv/lib/python3.11/site-packages/vnpy_xtp/__init__.py\", line 25, in <module>\r\n    from .gateway import XtpGateway\r\n  File \"/Users/eshao/PycharmProjects/my-vnpy/.venv/lib/python3.11/site-packages/vnpy_xtp/gateway/__init__.py\", line 1, in <module>\r\n    from .xtp_gateway import XtpGateway\r\n  File \"/Users/eshao/PycharmProjects/my-vnpy/.venv/lib/python3.11/site-packages/vnpy_xtp/gateway/xtp_gateway.py\", line 29, in <module>\r\n    from ..api import MdApi, TdApi\r\n  File \"/Users/eshao/PycharmProjects/my-vnpy/.venv/lib/python3.11/site-packages/vnpy_xtp/api/__init__.py\", line 1, in <module>\r\n    from .vnxtpmd import MdApi\r\nModuleNotFoundError: No module named 'vnpy_xtp.api.vnxtpmd'\r\n```\r\n\r\n\r\n\r\n## 重现步骤\r\n\r\n按照上述提供代码运行可重现\r\n\r\n## 问题\r\n是否vnpy_xtp不支持macOS?\r\n如果不支持，什么时候可以支持，谢谢！\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3592/comments",
    "author": "eshao731",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2024-12-15T11:35:07Z",
        "body": "因为股票量化交易所需的托管环境内，只有Windows/Linux的服务器，所以我们没有支持Mac。"
      }
    ]
  },
  {
    "number": 3590,
    "title": "社区注册后如何修改昵称",
    "created_at": "2024-12-03T09:42:46Z",
    "closed_at": "2024-12-04T01:36:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3590",
    "body": "\r\n\r\n社区注册后如何修改昵称\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3590/comments",
    "author": "qqzz0xx",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2024-12-04T01:36:43Z",
        "body": "由于论坛程序限制，目前不支持修改，注册时会自动使用当时的微信昵称作为论坛用户名和昵称"
      }
    ]
  },
  {
    "number": 3589,
    "title": "能否跳过登录界面,直接使用veighna_station",
    "created_at": "2024-12-02T05:52:34Z",
    "closed_at": "2024-12-02T13:25:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3589",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 11\r\n* Python版本: 如VeighNa Studio-2.9.0\r\n* VeighNa版本: 如v2.9.0发行版或者dev branch 20211224（下载日期）\r\n\r\n## Issue类型\r\nQuestion\r\n能否跳过veighna_station的登录操作，直接进入界面呢？\r\n登录veighna_station这块功能，是否也是开源的呢？\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3589/comments",
    "author": "jnxyatmjx",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2024-12-02T13:25:50Z",
        "body": "可以，参考本仓库中的examples目录，VeighNa Station本来就是为了方便新手用户开发的，所有功能都可以直接通过脚本运行。"
      }
    ]
  },
  {
    "number": 3573,
    "title": "[QUESTION] Is this project's .exe file supported by proton or wine for running inside linux environment ?",
    "created_at": "2024-10-09T15:53:03Z",
    "closed_at": "2024-10-10T02:36:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3573",
    "body": "On Main Website i am seeing two links which are both .exe so thought to ask if the exe is compatible with wine or proton so that we can use it in linux directly ",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3573/comments",
    "author": "Greatz08",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2024-10-10T02:36:51Z",
        "body": "VeighNa supports Linux system, there is no need to use proton or wine.\r\n\r\nAt the moment, we provide official support for Ubuntu 22.04 LTS.\r\n\r\n"
      }
    ]
  },
  {
    "number": 3535,
    "title": "关于翻墙",
    "created_at": "2024-05-09T07:56:26Z",
    "closed_at": "2024-05-15T01:59:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3535",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 11\r\n* Python版本: python 3.9\r\n* VeighNa版本: v3.4\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为## 环境\r\n\r\n* 操作系统: 如Windows 11\r\n* Python版本: 3.9\r\n* VeighNa版本: 3.4\r\n## Issue类型\r\n三选一：Question\r\n\r\n使用sokces协议的v2ry不能翻墙。\r\n自己测试网络，可以通过网址访问api。\r\n但是使用vnpy不能访问\r\n这是v2ry报的错误信息：2024/05/09 15:04:20 tcp:127.0.0.1:64762 rejected  proxy/socks: unknown Socks version: 67\r\n这是pyrchram报的错误信息：aiohttp.client_exceptions.ServerDisconnectedError: Server disconnected\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3535/comments",
    "author": "Thinkbro",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2024-05-15T01:59:40Z",
        "body": "没有支持v2y的代理"
      }
    ]
  },
  {
    "number": 3525,
    "title": "回测打印order.reference显示空白",
    "created_at": "2024-04-04T08:43:03Z",
    "closed_at": "2024-07-03T02:09:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3525",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 11\r\n* Python版本: 如VeighNa Studio-3.9.0\r\n* VeighNa版本: v3.9.0发行版\r\n\r\n## Issue类型\r\n三选一：bug\r\n\r\n## 实际程序行为\r\n\r\n**回测打印order.reference显示空白，之前版本回测时，测试打印能够正确获取到order.reference的策略名称**\r\n`rb888\r\nOrderData(gateway_name='BACKTESTING', extra=None, symbol='rb888', exchange=<Exchange.SHFE: 'SHFE'>, orderid='40', type=<OrderType.LIMIT: '限价'>, direction=<Direction.LONG: '多'>, offset=<Offset.CLOSE: '平'>, price=3644.0, volume=1, traded=1, status=<Status.ALLTRADED: '全部成交'>, datetime=datetime.datetime(2023, 5, 9, 14, 45, tzinfo=zoneinfo.ZoneInfo(key='Asia/Shanghai')), reference='')\r\n`\r\n\r\n\r\n## 预期程序行为\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3525/comments",
    "author": "rjl02468",
    "comments": [
      {
        "user": "noranhe",
        "created_at": "2024-07-02T05:58:39Z",
        "body": "回测本来就没有reference"
      }
    ]
  },
  {
    "number": 3505,
    "title": "在class EventEngine中的_run_timer方法可能存在bug",
    "created_at": "2024-03-02T07:22:01Z",
    "closed_at": "2024-03-03T03:18:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3505",
    "body": "在vnpy/event/engine.py 里 78-85行的_run_timer方法的实现如下所示：\r\n```\r\ndef _run_timer(self) -> None:\r\n        \"\"\"\r\n        Sleep by interval second(s) and then generate a timer event.\r\n        \"\"\"\r\n        while self._active:\r\n            sleep(self._interval)\r\n            event: Event = Event(EVENT_TIMER)\r\n            self.put(event)\r\n```\r\n其中最后一行self.put(event)我认为应改为 self._queue.put(event)。\r\n但是目前没有在实际使用中遇到因此产生的bug。\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3505/comments",
    "author": "LIUUUUUZ",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2024-03-03T01:52:27Z",
        "body": "请问认为应该修改的原因是？"
      },
      {
        "user": "LIUUUUUZ",
        "created_at": "2024-03-03T03:18:27Z",
        "body": "> 请问认为应该修改的原因是？\r\n\r\n哦，抱歉，self有put这一方法，是我看错了"
      }
    ]
  },
  {
    "number": 3503,
    "title": "3.9.0 运行run.py报错",
    "created_at": "2024-02-28T12:02:07Z",
    "closed_at": "2024-02-29T01:51:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3503",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 20.04\r\n* Python版本: python3.8.\r\n* VeighNa版本: v3.9.0\r\n\r\n## Issue类型\r\n运行run.py时报错，升级了vnpy_ctastrategy也没用\r\nTraceback (most recent call last):\r\n  File \"run.py\", line 5, in <module>\r\n    from vnpy.trader.ui import MainWindow, create_qapp\r\n  File \"/usr/local/lib/python3.8/dist-packages/vnpy/trader/ui/__init__.py\", line 1, in <module>\r\n    from .qt import QtCore, QtWidgets, QtGui, Qt, create_qapp\r\n  File \"/usr/local/lib/python3.8/dist-packages/vnpy/trader/ui/qt.py\", line 10, in <module>\r\n    from PySide6 import QtGui, QtWidgets, QtCore\r\nImportError: cannot import name 'QtGui' from 'PySide6' (/usr/local/lib/python3.8/dist-packages/PySide6/__init__.py)\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3503/comments",
    "author": "vingin007",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2024-02-29T01:51:09Z",
        "body": "这个报错是PySide6的问题，尝试卸载重装试试吧：\r\n\r\n`sudo pip3 install PySide6==6.3.0`"
      },
      {
        "user": "vingin007",
        "created_at": "2024-02-29T05:05:05Z",
        "body": "> =\r\n\r\n重装了依然还是一样的报错。"
      },
      {
        "user": "vnpy",
        "created_at": "2024-02-29T09:25:50Z",
        "body": "那建议升级到Python 3.10试下了"
      },
      {
        "user": "zgm0407",
        "created_at": "2024-03-01T07:37:03Z",
        "body": "x显示驱动的问题。sudo apt update && apt install -y libxkbcommon-x11-dev  libxcb-icccm4 libxcb-image0 libxcb-keysyms1 \\\r\n    libxcb-shm0-dev libxcb-xfixes0-dev libxcb-shape0-dev libxcb-render-util0-dev"
      }
    ]
  },
  {
    "number": 3486,
    "title": "回测优化时每一种策略参数下的每日盈亏",
    "created_at": "2023-11-25T09:48:44Z",
    "closed_at": "2023-12-07T01:44:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3486",
    "body": "## 环境\r\n\r\n* 操作系统: Debian Linux 11 Variant\r\n* Python版本: Python 3.10\r\n* VeighNa版本: 3.8.0\r\n* \r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n\r\n回测优化是否可以支持每一种策略参数配置下的每日盈亏和每日收益率, 而不只是最优参数配置的报告和每日盈亏和每日收益率 (貌似每日收益率目前是没有支持的)?\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3486/comments",
    "author": "qiuxiaomu",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2023-12-07T01:44:49Z",
        "body": "在Jupyter交互式环境中运行优化任务时，可以自由选择任意calculate_statistics函数中返回的统计值作为目标函数。\r\n\r\nCtaBacktester主要面向初级用户，因此图形界面尽可能设计得简单些，没有提供所有的选项。"
      }
    ]
  },
  {
    "number": 3483,
    "title": "ScriptTrader模块支持数据回测吗",
    "created_at": "2023-11-06T01:12:12Z",
    "closed_at": "2023-11-06T23:50:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3483",
    "body": null,
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3483/comments",
    "author": "chenrenjing",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2023-11-06T23:50:20Z",
        "body": "不支持，ScriptTrader只有实盘运行的功能"
      }
    ]
  },
  {
    "number": 3445,
    "title": "仿真交易模块一键清仓后，行情订阅未清空",
    "created_at": "2023-07-07T16:18:39Z",
    "closed_at": "2023-07-08T07:29:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3445",
    "body": "仿真交易在下单成交后，再一键清仓后，持仓已经显示为0，但是重启vnpy之后，会自动订阅先前已清空的股票。\r\n关闭vnpy，再把把本地本地配置文件（portfolio_manager_data.json）修改为{}之后，问题消失。看起来像是读写配置文件的问题？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3445/comments",
    "author": "yanxiu0614",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2023-07-08T07:29:13Z",
        "body": "PaperAccount、PortfolioManager这些每个是独立的模块，互相之间的缓存数据独立。\r\n\r\n自动订阅之前的股票，是源于PortfolioManager对于已有持仓合约的盈亏计算需求。"
      },
      {
        "user": "yanxiu0614",
        "created_at": "2023-07-09T01:40:38Z",
        "body": "> PaperAccount、PortfolioManager这些每个是独立的模块，互相之间的缓存数据独立。\n> \n> \n> \n> 自动订阅之前的股票，是源于PortfolioManager对于已有持仓合约的盈亏计算需求。\n\n但是持仓已经全部清空了，持仓量为零了。"
      }
    ]
  },
  {
    "number": 3436,
    "title": "请问项目的Dockerfile在哪个目录下？",
    "created_at": "2023-06-15T08:45:22Z",
    "closed_at": "2023-06-15T13:00:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3436",
    "body": "如题",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3436/comments",
    "author": "rwayan",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2023-06-15T13:00:03Z",
        "body": "VeighNa Docker是作为完整镜像产品发布，没有提供Dockerfile了"
      }
    ]
  },
  {
    "number": 3419,
    "title": "bug：没有启动程序的文件并且ModuleNotFoundError: ",
    "created_at": "2023-04-23T03:52:45Z",
    "closed_at": "2023-04-23T07:37:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3419",
    "body": "## 环境\r\n\r\n* 操作系统: Mac\r\n* Python版本: 3.10\r\n* VeighNa版本: github3.6仓库\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n一：可以有studio的启动文件\r\n二：没有import报错问题\r\n\r\n## 实际程序行为\r\n一：没有启动文件\r\n二：ModuleNotFoundError: \r\n\r\n>>> from vnpy.event import EventEngine\r\n>>> from vnpy.trader.engine import MainEngine\r\n>>> from vnpy.trader.ui import MainWindow, create_qapp\r\n>>> \r\n>>> from vnpy_ctp import CtpGateway\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nModuleNotFoundError: No module named 'vnpy_ctp'\r\n>>> from vnpy_ctastrategy import CtaStrategyApp\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nModuleNotFoundError: No module named 'vnpy_ctastrategy'\r\n>>> from vnpy_ctabacktester import CtaBacktesterApp\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nModuleNotFoundError: No module named 'vnpy_ctabacktester'\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n新建一个虚拟环境conda create -n vnpy python=3.10.9,按照readme进行安装，无法启动",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3419/comments",
    "author": "ForgetThatNight",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2023-04-23T05:48:48Z",
        "body": "功能模块需要独立安装：\r\n\r\n`pip install vnpy_ctabacktester`"
      },
      {
        "user": "ForgetThatNight",
        "created_at": "2023-04-23T06:54:05Z",
        "body": "全安装了还是一堆问题，bug太多了，先将就用聚宽吧，要不就是pyqt 要不就是少其他的，等过段时间看看还有大佬贡献代码没\r\nFaile to import cython option pricing model, please rebuild with cython in cmd.\r\nqt.core.plugin.loader: In /Users/luocheng/anaconda3/plugins/platforms/libqcocoa.dylib:\r\n  Plugin uses incompatible Qt library (5.15.0) [release]\r\nqt.core.plugin.loader: In /Users/luocheng/anaconda3/plugins/platforms/libqminimal.dylib:\r\n  Plugin uses incompatible Qt library (5.15.0) [release]\r\nqt.core.plugin.loader: In /Users/luocheng/anaconda3/plugins/platforms/libqoffscreen.dylib:\r\n  Plugin uses incompatible Qt library (5.15.0) [release]\r\nqt.core.plugin.loader: In /Users/luocheng/anaconda3/plugins/platforms/libqwebgl.dylib:\r\n  Plugin uses incompatible Qt library (5.15.0) [release]\r\nqt.qpa.plugin: Could not find the Qt platform plugin \"cocoa\" in \"\"\r\nThis application failed to start because no Qt platform plugin could be initialized. Reinstalling the application may fix this problem.\r\n\r\nzsh: abort      python /Users/luocheng/Documents/vnpy-master/examples/veighna_trader/run.py\r\n"
      },
      {
        "user": "vnpy",
        "created_at": "2023-04-23T07:37:25Z",
        "body": "不要用Anaconda，可以试试用Python官方的3.10发行版来装，基本奇怪的问题就不会出现了。"
      }
    ]
  },
  {
    "number": 3393,
    "title": "怎么实现定价买入，定价卖出自动操作",
    "created_at": "2023-02-15T02:39:38Z",
    "closed_at": "2023-02-16T05:29:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3393",
    "body": "你好，请问怎么实现定价买入，定价卖出自动操作？\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3393/comments",
    "author": "MrDannyWu",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2023-02-15T07:14:17Z",
        "body": "请具体描述下这两个操作【定价买入，定价卖出】，和直接挂限价委托有什么区别之处吗？"
      }
    ]
  },
  {
    "number": 3372,
    "title": "请问策略编写时，回调函数 on_bar 传入的 BarData 对象如何增加新的一列或多列数据？",
    "created_at": "2022-12-04T15:15:41Z",
    "closed_at": "2022-12-04T23:53:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3372",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 20.04\r\n* Python版本: Python-3.9.0 及以上\r\n* VeighNa版本: v3.4.0 发行版\r\n\r\n## Issue类型\r\nQuestion\r\n\r\n## 预期程序行为\r\n请问策略编写时，回调函数 on_bar 传入的 BarData 对象如何增加新的一列或多列数据（这些数据可能是当天换手率，量比，资金流向等三方已提供的数据，每条数据 label 都有对应的时间与数值）？\r\n\r\n如果无法通过已有功能实现，是否只需要修改 BarData 与数据库加载时对应迭代对象，为他们增加一列或几列字段？\r\n\r\n## 实际程序行为\r\n仅能获取当日 BarData 已定义基础信息（open_price、close_price、volume等）\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3372/comments",
    "author": "pfeak",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2022-12-04T23:53:10Z",
        "body": "1. PortfolioStrategy模块的on_bars函数，就是多列传入的\r\n2. 扩展字段可以通过BarData.extra字段来实现加载\r\n3. 数据库中该extra字段可用json格式存储，载入后转换为字典，需要自行对数据库驱动进行扩展开发"
      }
    ]
  },
  {
    "number": 3352,
    "title": "有Docker镜像吗？",
    "created_at": "2022-10-04T12:51:49Z",
    "closed_at": "2022-10-05T05:15:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3352",
    "body": "有docker镜像吗？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3352/comments",
    "author": "Angel0726",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2022-10-05T05:14:56Z",
        "body": "目前没有了，也不推荐通过Docker来运行"
      }
    ]
  },
  {
    "number": 3343,
    "title": "数据库选型",
    "created_at": "2022-09-21T11:05:39Z",
    "closed_at": "2022-09-21T13:14:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3343",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 11或者Ubuntu 20.04\r\n* Python版本: 如VeighNa Studio-2.9.0\r\n* VeighNa版本: 如v2.9.0发行版或者dev branch 20211224（下载日期）\r\n\r\n## Issue类型\r\nQuestion\r\n问一下postgreSQL也可以使用NoSQL（支持json、jsonb）格式，此外还有丰富的插件例如时间序列插件等。为什么使用MongDB不使用postgerSQL呢\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3343/comments",
    "author": "Angel0726",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2022-09-21T13:14:29Z",
        "body": "目前已经提供了对PostgreSQL的支持，如果追求性能可以使用其TimeScaleDB插件的方案"
      },
      {
        "user": "Angel0726",
        "created_at": "2023-02-01T08:57:48Z",
        "body": "我知道提供了postgreSQL。我只是想问一下数据库选型问题"
      }
    ]
  },
  {
    "number": 3341,
    "title": "mac 上测试过能装吗，各种问题。真是。。",
    "created_at": "2022-09-20T12:25:31Z",
    "closed_at": "2022-09-21T00:03:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3341",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 11或者Ubuntu 20.04\r\n* Python版本: 如VeighNa Studio-2.9.0\r\n* VeighNa版本: 如v2.9.0发行版或者dev branch 20211224（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3341/comments",
    "author": "jasonheyh",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2022-09-21T00:03:34Z",
        "body": "目前M1/M2芯片的MAC上只能使用VeighNa的投研相关功能，交易接口可以运行纯Python的IB"
      }
    ]
  },
  {
    "number": 3327,
    "title": "database文件中缺少TickOverview类",
    "created_at": "2022-08-13T16:29:00Z",
    "closed_at": "2022-08-14T03:37:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3327",
    "body": "各个数据库组件都有TickOverview类的引用\r\n但是database文件中缺少这个类的定义",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3327/comments",
    "author": "raycool",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2022-08-14T03:37:28Z",
        "body": "即将发布的3.3.0版本会包括"
      }
    ]
  },
  {
    "number": 3294,
    "title": "3.0版有没有okex的接口？",
    "created_at": "2022-05-03T02:13:05Z",
    "closed_at": "2022-05-04T01:29:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3294",
    "body": null,
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3294/comments",
    "author": "zhuanqizhirou",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2022-05-04T01:29:06Z",
        "body": "已经移除很久了"
      }
    ]
  },
  {
    "number": 3143,
    "title": "富途期权有开发计划吗",
    "created_at": "2021-09-23T08:48:54Z",
    "closed_at": "2021-10-21T08:37:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3143",
    "body": "## Issue类型\r\nQuestion\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3143/comments",
    "author": "TomasYu",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-09-24T00:18:18Z",
        "body": "目前没，是希望支持富途的美股期权吗？"
      }
    ]
  },
  {
    "number": 3132,
    "title": "日本股市",
    "created_at": "2021-09-02T14:11:25Z",
    "closed_at": "2021-09-04T12:24:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3132",
    "body": "你好，太喜欢这个软件了。不知道能不能增加对日本股市的支持呢？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3132/comments",
    "author": "axot",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-09-03T00:17:55Z",
        "body": "你好，目前可以通过Interactive Brokers交易日本市场，如果有其他经纪商或者系统的需求可以告诉我们，我们来看下是否有办法对接"
      },
      {
        "user": "axot",
        "created_at": "2021-09-04T12:24:02Z",
        "body": "Thanks for your advice!"
      }
    ]
  },
  {
    "number": 3097,
    "title": "看到了顶点的API，但是没有找见顶点的gateway（股票）",
    "created_at": "2021-08-10T12:03:04Z",
    "closed_at": "2021-08-15T03:15:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3097",
    "body": "只找见了顶点的期权gateway\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3097/comments",
    "author": "Wendroff",
    "comments": [
      {
        "user": "noranhe",
        "created_at": "2021-08-12T01:37:10Z",
        "body": "这个api只能做期权的"
      },
      {
        "user": "vnpy",
        "created_at": "2021-08-15T03:15:57Z",
        "body": "顶点API的版本较多，同时各家部署方案也不完全一致，因此没有提供标准接口a"
      }
    ]
  },
  {
    "number": 3093,
    "title": "Mac 可以使用ctp吗？",
    "created_at": "2021-08-10T03:20:16Z",
    "closed_at": "2021-08-10T03:46:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3093",
    "body": "## 环境\r\n\r\nmacbook\r\n\r\n## Issue类型\r\nQuestion\r\n\r\n请问mac 可以使用ctp吗？　我使用命令行安装后，运行 examples/vn_trader/run.py 出现找不到　ModuleNotFoundError: No module named 'vnpy.api.ctp.vnctpmd'\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3093/comments",
    "author": "hiyoung123",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-08-10T03:46:43Z",
        "body": "无法使用，请从run.py中移除CTP相关加载（以及其他一些国内柜台API的加载）"
      }
    ]
  },
  {
    "number": 3092,
    "title": "Macbook如何按照vnstudio",
    "created_at": "2021-08-09T14:26:54Z",
    "closed_at": "2021-08-10T00:40:14Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3092",
    "body": "## 环境\r\n\r\n* 操作系统: mac \r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.0.5发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n请问 macbook 如何安装vnstudio？\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3092/comments",
    "author": "hiyoung123",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-08-10T00:40:11Z",
        "body": "VNStudio目前只有Windows版本，Mac上可以直接命令行安装即可"
      }
    ]
  },
  {
    "number": 3082,
    "title": "pip安装的一些列模块都无法使用",
    "created_at": "2021-07-31T17:23:25Z",
    "closed_at": "2021-08-01T02:19:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3082",
    "body": "ImportError: cannot import name 'CtpGateway' from 'vnpy_ctp' (/usr/local/lib/python3.8/site-packages/vnpy_ctp/init.py)\r\nmac系统",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3082/comments",
    "author": "FreAirLy",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-08-01T02:19:05Z",
        "body": "1. vnpy_ctp只支持Python 3.7 64位的Windows/Linux\r\n2. CTP官方就不支持Mac"
      },
      {
        "user": "FreAirLy",
        "created_at": "2021-08-02T09:52:32Z",
        "body": "> * vnpy_ctp只支持Python 3.7 64位的Windows/Linux\r\n> * CTP官方就不支持Mac\r\n\r\nfrom vnpy.gateway.ctp import CtpGateway\r\n这个模块怎么替换呢"
      },
      {
        "user": "vnpy",
        "created_at": "2021-08-02T13:10:14Z",
        "body": "直接在run.py中移除掉这个模块的加载就行"
      }
    ]
  },
  {
    "number": 3077,
    "title": "vnstudio 为啥要登录？回测不是离线的吗？除了下载历史数据还有什么需要联网的？",
    "created_at": "2021-07-22T02:50:55Z",
    "closed_at": "2021-07-22T11:47:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3077",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.0.5发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3077/comments",
    "author": "GF-Huang",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-07-22T11:47:02Z",
        "body": "1. 用于获取最新的版本信息，获取自动更新\r\n2. 登录社区论坛，查看最新的论坛帖子\r\n\r\nvn.py本身可以直接用脚本启动，并不一定要通过VN Station。"
      }
    ]
  },
  {
    "number": 3012,
    "title": "framework's strength and sys requirement",
    "created_at": "2021-05-29T07:48:59Z",
    "closed_at": "2021-06-20T03:17:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3012",
    "body": "Hello, I just want to know about this framework's system requirement and its scalability along with how many users does this support, and how many transactions per second are supported?\r\n\r\nThanks in advace",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3012/comments",
    "author": "AliSeraji",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-06-20T03:17:05Z",
        "body": "Hello, we only provide Chinese version at the moment, so maybe not that suitable if you do not trade in China."
      }
    ]
  },
  {
    "number": 3007,
    "title": "脚步策略，增加成交回调事件插槽，方便处理逻辑",
    "created_at": "2021-05-26T06:40:32Z",
    "closed_at": "2021-06-20T03:18:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3007",
    "body": "## 环境\r\n\r\n操作系统: Windows 10，ubuntu 18\r\nPython版本:  3.7\r\nvn.py版本: 2.3.0\r\n\r\n## Issue类型\r\nEnhancement\r\n\r\n## 预期程序行为\r\n希望在脚本策略中，增加类似on_order，on_trade等成交有关的回调，方便逻辑处理，谢谢。\r\n\r\n## 实际程序行为\r\n脚步策略中，暂时没有相关api。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3007/comments",
    "author": "wangzhilongh",
    "comments": [
      {
        "user": "noranhe",
        "created_at": "2021-05-26T09:59:13Z",
        "body": "可以参考脚本策略的模板中调用get_tick等函数的方法，基于自己需求调用get_orders、get_trades等函数轮询获取"
      },
      {
        "user": "wangzhilongh",
        "created_at": "2021-05-26T10:56:34Z",
        "body": "如果轮询的话，频繁调用（例如1秒1次）get_orders、get_trades，会有接口调用频率的限制吗（比如，交易所会有调用限制吗）？"
      },
      {
        "user": "vnpy",
        "created_at": "2021-06-20T03:18:16Z",
        "body": "1. 脚本策略定位于同步轮询的程序设计，因此不会提供回调函数接口（事件驱动用）\r\n2. get_orders/get_trades函数都只是在访问vn.py本地内存中的数据，背后的数据来源于交易接口推送，因此没有查询频率的问题"
      }
    ]
  },
  {
    "number": 2962,
    "title": "mongo数据库报错in _raise_connection_failure_raise_connection_failure(self.address, error)",
    "created_at": "2021-04-26T00:36:21Z",
    "closed_at": "2021-05-01T05:18:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2962",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* vn.py版本: 如v2.0.5发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 实际程序行为\r\n\r\n\r\n群主，您好\r\nmongodb数据库报错，错误信息如下：\r\n\r\n\\site-packages\\pymongo\\collection.py\", line 947, in replace_one collation=collation, hint=hint, session=session),\r\n\r\n\\site-packages\\pymongo\\collection.py\", line 870, in _update_retryable _update, session)\r\n\r\n\\site-packages\\pymongo\\mongo_client.py\", line 1498, in _retryable_write return self._retry_with_session(retryable, func, s, None)\r\n\r\n\\site-packages\\pymongo\\mongo_client.py\", line 1384, in _retry_with_session return self._retry_internal(retryable, func, session, bulk)\r\n\r\n\\site-packages\\pymongo\\mongo_client.py\", line 1416, in _retry_internal return func(session, sock_info, retryable)\r\n\r\n\\site-packages\\pymongo\\collection.py\", line 866, in _update retryable_write=retryable_write)\r\n\r\n\\site-packages\\pymongo\\collection.py\", line 836, in _update retryable_write=retryable_write).copy()\r\n\r\n\\site-packages\\pymongo\\pool.py\", line 699, in command self._raise_connection_failure(error)\r\n\r\n\\site-packages\\pymongo\\pool.py\", line 891, in _raise_connection_failure_raise_connection_failure(self.address, error)\r\n\r\n\\site-packages\\pymongo\\pool.py\", line 271, in _raise_connection_failure msg = '%s:%d: %s' % (host, port, error)\r\n\r\n\\encodings\\utf_8.py\", line 16, in decode return codecs.utf_8_decode(input, errors, True)\r\nUnicodeDecodeError: 'utf8' codec can't decode byte 0xd6 in position 12: invalid continuation byte\r\n\r\n----------------------\r\n\r\n是正常使用过程中，一直在正常处理的时候（正常开平仓、1分钟前还正常，突然报错的。）出错的，请问这种错误的原因大概是啥原因导致的？恳请百忙中指导下，谢谢！\r\n\r\n版本是 3.4.9，查了下网上的报错信息都是低版本才会报这种功能错误的。\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2962/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "noranhe",
        "created_at": "2021-04-29T02:49:35Z",
        "body": "实盘的时候一般只会在load_bar、下载数据和录制行情的时候才用到数据库。请问报错时正在用数据库做什么操作呢？\r\n看报错像是编码错误，应该是处理的数据编码格式不是utf8导致的，请问是否是用数据库保存了中文信息？"
      },
      {
        "user": "stone3536",
        "created_at": "2021-04-29T06:13:00Z",
        "body": "@noranhe \r\n是保存订单的唯一id，防止id重复的。\r\n没有保存中文信息的，只是英文字符和数字，就2个字段的。\r\norderUUID 和对应的数字\r\n\r\n一直都用的好好的，只是突然报错的了。并且是都正在开平仓的，然后某一个订单成交后保存这个orderUUID的时候就报错了。\r\n重启程序，立刻又交易，都正常的。\r\n\r\n\r\n报错信息上显示的是数据库连接丢失的：\r\n\\site-packages\\pymongo\\pool.py\", line 699, in command self._raise_connection_failure(error)\r\n\r\n\\site-packages\\pymongo\\pool.py\", line 891, in _raise_connection_failure_raise_connection_failure(self.address, error)\r\n\r\n\r\n"
      },
      {
        "user": "vnpy",
        "created_at": "2021-05-01T05:18:28Z",
        "body": "这个不是vn.py的问题，请自行排查pymongo调用的代码吧"
      }
    ]
  },
  {
    "number": 2932,
    "title": "是否可以在Gatway增加重建orderbook的 抽象方法，增加OrderBook类型。",
    "created_at": "2021-04-02T09:40:33Z",
    "closed_at": "2021-05-01T05:10:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2932",
    "body": "\r\n## Issue类型\r\n三选一：Enhancement\r\n\r\n\r\n就是个讨论。在考虑做基于orderbook的策略。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2932/comments",
    "author": "Wei-Jianan",
    "comments": [
      {
        "user": "Wei-Jianan",
        "created_at": "2021-04-02T10:00:18Z",
        "body": "ordrebook太过庞大，不比五档行情，不适合作为dataclass，反复构建，并放入event进入队列中通讯。可能得单独做一个app。我在考虑，是做一个orderbook_trading还是做一个其他的可以让order复用的方案。\r\n前者的话，OrderBook类型的设计更新比较自然，但毕竟还是需要gateway的支持。后者，这个Orderbook的设计就比较复杂了，得考虑各种app的兼容，不能随意构造，只能是全局唯一。"
      },
      {
        "user": "vnpy",
        "created_at": "2021-05-01T05:10:21Z",
        "body": "OrderBook这块不同接口的数据流区别太大无法标准化，所以在vn.py中不适合作为标准模块，请根据自己的需求开发吧"
      }
    ]
  },
  {
    "number": 2878,
    "title": "求教关于vnpy中CTP接口封装源码的问题",
    "created_at": "2021-03-04T17:09:15Z",
    "closed_at": "2021-03-05T00:09:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2878",
    "body": "最近在研究vnpy对CTP接口封装的源码，脑子里冒出一个问题，为什么在C++源码中，设置一个task_thread的线程？\r\n\r\n例子：\r\n以MdApi举例，现在MdApi回调函数触发时，会先将回调函数中的传来的参数包装进一个task，然后把这个task存入task_queue，随后由task_thread循环获取时间，转存为dict，再调用由python中继承的回调函数\r\n\r\n为什么不直接在MdApi回调函数触发时，直接将传来的参数转存为dict，然后直接调用由python中继承的回调函数？\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2878/comments",
    "author": "kia69028",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-03-05T00:09:51Z",
        "body": "挺好的问题，因为：\r\n1. CTP类接口，用来缓存回调函数推送数据的缓冲区很小\r\n2. 回调函数是单线程驱动的，如果阻塞回调函数，就可能导致缓冲区溢出\r\n3. 往Python里创建数据和推送（任意PyObject），都需要先拿到解释器的全局锁GIL\r\n4. 而锁定GIL要花的时间，是不确定的，尤其当Python中某个线程目前在跑死时\r\n5. 这样就可能导致在小概率情境下，整个Python程序在C级别异常崩溃（没有任何异常捕捉）\r\n6. 所以要做个额外的缓存队列，以及额外的线程来推数据到Python中"
      },
      {
        "user": "kia69028",
        "created_at": "2021-03-05T05:11:41Z",
        "body": "非常感谢"
      }
    ]
  },
  {
    "number": 2875,
    "title": "回测后绘制图表默认1m问题",
    "created_at": "2021-03-04T06:33:02Z",
    "closed_at": "2021-03-22T09:36:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2875",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 10\r\n* Python版本: 3\r\n* vn.py版本: 2.19\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n希望在回测后绘制图表，可以自定义K线图周期，而不是默认1m。\r\n或者在源码哪里可以修改？\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2875/comments",
    "author": "amangqq",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-03-22T09:36:30Z",
        "body": "可以通过BarGenerator来将1分钟K线合成更高级别的K线，然后显示在图表中即可，目前我们官方团队暂无进一步增强K线图表的计划"
      }
    ]
  },
  {
    "number": 2869,
    "title": "CTP Api 请求间隔控制",
    "created_at": "2021-03-02T19:34:16Z",
    "closed_at": "2021-03-02T23:48:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2869",
    "body": "## 环境\r\n\r\n* 操作系统: windows 10\r\n* Python版本: 3.7.9\r\n* vn.py版本: v2.1.9.1\r\n\r\n## Issue类型\r\nEnhancement\r\n\r\n## 预期程序行为\r\n连续 CTP Api 请求正常响应\r\n\r\n## 实际程序行为\r\n当没有控制请求间隔的时候, CTP Api 请求连续发出(两个或以上), 只有第一个请求响应\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n- 连接 CTP\r\n- 顺序调用 CTP TdApi 查询合约手续费和保证金比例\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2869/comments",
    "author": "tinkernels",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-03-02T23:48:54Z",
        "body": "CTP有查询流控，每秒所有类型请求都只能发起一个，具体请查看上期技术的CTP技术文档"
      }
    ]
  },
  {
    "number": 2821,
    "title": "mac 能支持ctp接口吗？",
    "created_at": "2021-01-25T08:20:19Z",
    "closed_at": "2021-01-26T01:12:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2821",
    "body": "mac 能支持ctp接口吗？\r\n\r\n```\r\nModuleNotFoundError: No module named 'vnpy.api.ctp.vnctpmd'\r\n```",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2821/comments",
    "author": "universewill",
    "comments": [
      {
        "user": "noranhe",
        "created_at": "2021-01-25T08:28:16Z",
        "body": "国内市场用到的绝大部分量化交易接口（如CTP、飞马、飞创、恒生等），其开发商只提供了Windows和Linux的API开发包。没有Mac版本（无法直接使用）的同时，也没有提供API源代码（无法自行编译），因此这类接口在Mac系统上无法使用（强行加载会报错找不到C++的DLL文件）。但纯Python接口和REST/WebSocket接口，由于不存在对于C++链接库的依赖，所以在Mac上均可以直接运行。"
      },
      {
        "user": "universewill",
        "created_at": "2021-01-25T09:20:39Z",
        "body": "> 国内市场用到的绝大部分量化交易接口（如CTP、飞马、飞创、恒生等），其开发商只提供了Windows和Linux的API开发包。没有Mac版本（无法直接使用）的同时，也没有提供API源代码（无法自行编译），因此这类接口在Mac系统上无法使用（强行加载会报错找不到C++的DLL文件）。但纯Python接口和REST/WebSocket接口，由于不存在对于C++链接库的依赖，所以在Mac上均可以直接运行。\r\n\r\n纯python接口或者REST/WebSocket接口，是指CTP、飞马、飞创、恒生等提供的接口吗？"
      },
      {
        "user": "vnpy",
        "created_at": "2021-01-26T01:12:29Z",
        "body": "> > 国内市场用到的绝大部分量化交易接口（如CTP、飞马、飞创、恒生等），其开发商只提供了Windows和Linux的API开发包。没有Mac版本（无法直接使用）的同时，也没有提供API源代码（无法自行编译），因此这类接口在Mac系统上无法使用（强行加载会报错找不到C++的DLL文件）。但纯Python接口和REST/WebSocket接口，由于不存在对于C++链接库的依赖，所以在Mac上均可以直接运行。\r\n> \r\n> 纯python接口或者REST/WebSocket接口，是指CTP、飞马、飞创、恒生等提供的接口吗？\r\n\r\n国内市场的几乎没有纯Python版本。有的包括：数字火币、IB、富途、老虎等等"
      },
      {
        "user": "xJayLee",
        "created_at": "2022-01-01T13:58:17Z",
        "body": "MAC上面，可以只把VNPY当做一个量化客户端，自动订单的可以通过Web"
      }
    ]
  },
  {
    "number": 2743,
    "title": "不理解为何PortfolioStrategy没有 on_trade 和 on_order",
    "created_at": "2020-11-29T03:29:53Z",
    "closed_at": "2020-12-08T08:14:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2743",
    "body": "## 环境\r\n* Windows 10\r\n* VNStation 2.5.4\r\n\r\n## Issue类型\r\nQuestion\r\n\r\n## 预期程序行为\r\nPortfolioStrategy 支持 on_trade 和 on_order\r\n\r\n文档里原文是说：\r\n\r\n> 在于组合策略中需要对多合约同时下单交易，在回测时无法判断某一段K线内部每个合约委托成交的先后时间顺序，因此无法提供on_order和on_trade获取委托成交推送，而只能在每次on_bars回调时通过get_pos和get_order来进行相关的状态查询。\r\n\r\n可是我们为什么要判断某一段K线内部每个合约委托成交的先后时间顺序呢？首先我觉得回测是基于模拟实盘考虑的，那么在实盘中，合约成交的先后时间顺序就是不一定的，也就是说有可能A先成交 B再成交，也有可能 B先成交，A再成交，这些都是合理的实盘情况，所以回测引擎完全可以忽略成交顺序问题。\r\n\r\n希望 PortfolioStrategy 支持 on_trade 和 on_order 的最主要原因是希望保持策略代码的一致性，在 CtaStrategy 里所有数据基本上都是基于回调来处理的，如果在 PortfolioStrategy 里需要轮询操作的话就感觉很不和谐。\r\n\r\n希望开发组考虑一下这个问题，因为对于成熟的交易者来说，肯定大概率会通过分散品种来降低风险，所以 PortfolioStrategy 的应用情景应该不比 CtaStrategy 差",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2743/comments",
    "author": "lookis",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-12-08T08:14:33Z",
        "body": "举个例子吧，假设提供了on_trade和on_order函数：\r\n1. 策略同时交易A、B两个合约\r\n2. 在A、B上都挂出了限价委托，任何一个合约成交后撤销另一个合约的委托\r\n3. 回测时因为只有K线数据（非连续的切片），对齐时间戳后在同一轮中进行撮合，假设A、B的委托对于这一刻的K线都能立即成交\r\n4. 如果先推送A的on_trade则会撤销B的委托，反之则撤销A的委托，撤销顺序取决于【回测中的撮合顺序】\r\n5. 但在实盘交易中，因为交易时TICK BY TICK连续的，所以A、B的成交是可以确定的，撤销顺序取决于【实际世界哪个合约的价格先满足成交条件】\r\n6. 所以这里提供on_trade/on_order则会导致回测和实盘的不一致性，因此不能提供，这也是Zipline这类框架扩展到实盘交易中的一个痛点\r\n7. 如果想满足一致性要求，就要有带有【本地时间戳】的TICK数据，目前只有宏汇、国泰安等几家提供，也可以自行录制，这块不属于PortfolioStrategy模块的应用场景，另外有对应的DeltaOne做市模块（可能因为大量挂撤单导致被交易所封账户，因此只放在了【vn.py机构用户群】里）\r\n"
      },
      {
        "user": "lookis",
        "created_at": "2020-12-08T16:08:35Z",
        "body": "> 举个例子吧，假设提供了on_trade和on_order函数：\r\n> \r\n> 1. 策略同时交易A、B两个合约\r\n> 2. 在A、B上都挂出了限价委托，任何一个合约成交后撤销另一个合约的委托\r\n> 3. 回测时因为只有K线数据（非连续的切片），对齐时间戳后在同一轮中进行撮合，假设A、B的委托对于这一刻的K线都能立即成交\r\n> 4. 如果先推送A的on_trade则会撤销B的委托，反之则撤销A的委托，撤销顺序取决于【回测中的撮合顺序】\r\n> 5. 但在实盘交易中，因为交易时TICK BY TICK连续的，所以A、B的成交是可以确定的，撤销顺序取决于【实际世界哪个合约的价格先满足成交条件】\r\n> 6. 所以这里提供on_trade/on_order则会导致回测和实盘的不一致性，因此不能提供，这也是Zipline这类框架扩展到实盘交易中的一个痛点\r\n> 7. 如果想满足一致性要求，就要有带有【本地时间戳】的TICK数据，目前只有宏汇、国泰安等几家提供，也可以自行录制，这块不属于PortfolioStrategy模块的应用场景，另外有对应的DeltaOne做市模块（可能因为大量挂撤单导致被交易所封账户，因此只放在了【vn.py机构用户群】里）\r\n\r\n我觉得考虑到回测尽可能地模拟出实际世界的场景确实是个很好的出发点，我的观点主要在于实际世界场景的不确定性也应该是一种情况，因为我们需要承认的一点就是我们确实没有办法在这个场景里去完全逼近实际世界\r\n\r\n在您举的例子中的第5点也不是完全确定的，比方说我的合约是基于不同交易所，比方说一个在 DCE 一个在 SHFE，就确实有可能在同一个 tick 里两个合约都成交了，然后撤消失败，所以至少在一个 tick 的时间内，我们可以把两个合约看作是“对齐时间戳后的同一轮”\r\n\r\n我并不是说在抬杠，而是说既然用户是在回测，就应该去考虑的更周全以应对这种不确定性的情况。\r\n\r\n当然我也看过vnpy的源码，能理解这样处理的困难。现在的 vnpy 每根bar推进都是一个原子过程，如果要在推进的过程中再调用策略代码，就会把原来的一次撮合弄成复杂的递归逻辑，无论是 on_trade 或者 on_order 都会让整个框架进入特别麻烦的情况。"
      },
      {
        "user": "vnpy",
        "created_at": "2020-12-08T23:57:45Z",
        "body": "可以自己扩展下看看，原理和CTA策略类似，也很简单了"
      },
      {
        "user": "lookis",
        "created_at": "2020-12-09T00:27:37Z",
        "body": "> 可以自己扩展下看看，原理和CTA策略类似，也很简单了\r\n\r\n嗯嗯，现在是这样做的，开源就是这点好处，可以自己折腾，在这里主要是想交流一下 XD"
      }
    ]
  },
  {
    "number": 2734,
    "title": "由于是金融软件 有没有考虑把float全部换成Decimal",
    "created_at": "2020-11-13T13:32:20Z",
    "closed_at": "2020-11-15T12:51:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2734",
    "body": "## 环境\r\n\r\n* 操作系统: Linux and Windows\r\n* Python版本: Python 3.7\r\n* vn.py版本: v2.1.7\r\n\r\n## Issue类型\r\n三选一：Enhancement and Question\r\n\r\n\r\n## 预期程序行为\r\n太多地方出现精度丢失\r\n\r\n## 实际程序行为\r\n不应该出现精度丢失 \r\n\r\n不过想看看为什么不用Decimal是因为 速度还是内存还是什么考量?\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2734/comments",
    "author": "pg-adm1n",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-11-15T12:51:17Z",
        "body": "主要是速度，Decimal的计算比float慢很多，对量化平台来说不合适"
      },
      {
        "user": "mundaneone",
        "created_at": "2023-04-11T06:22:59Z",
        "body": "ibapi在升级之后已经采用了Decimal类型来表示价格了。已经和vnpy的很多模块出现了不兼容的情况\r\n\r\n> 主要是速度，Decimal的计算比float慢很多，对量化平台来说不合适\r\n\r\n"
      },
      {
        "user": "vnpy",
        "created_at": "2023-04-11T10:56:52Z",
        "body": "收到，我们来研究下新版的ibapi"
      }
    ]
  },
  {
    "number": 2711,
    "title": "alpaca国内可以注册吗",
    "created_at": "2020-10-26T08:33:23Z",
    "closed_at": "2020-10-27T00:32:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2711",
    "body": "之前对alpaca这个券商有过一些调研，这是一家零佣金的美国券商， 而且对于自动化的交易支持得非常到位，但是很可惜国内用户没有办法注册。\r\n想问一下社区的朋友有没有使用这家券商的，是否有私有的注册途径，非常非常感谢",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2711/comments",
    "author": "weiguang-zz",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-10-27T00:32:07Z",
        "body": "似乎没有，需要有美国护照或者社保账号吧，这个经纪商并不适合美国以外的客户"
      },
      {
        "user": "weiguang-zz",
        "created_at": "2020-10-28T15:19:38Z",
        "body": "使用程序化交易美股和港股的券商，大家有什么可以推荐的吗？"
      },
      {
        "user": "vnpy",
        "created_at": "2020-10-29T00:25:03Z",
        "body": "IB、富途用户比较多吧"
      }
    ]
  },
  {
    "number": 2677,
    "title": "cta_strategy remove_strategy 没有 remove_strategy_data",
    "created_at": "2020-09-22T13:56:46Z",
    "closed_at": "2020-09-23T03:27:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2677",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 18.04\r\n* Python版本: python3.7\r\n* vn.py版本: 2.1.6\r\n\r\n## Issue类型\r\nBug\r\n\r\n## 预期程序行为\r\nremove_strategy 时 remove_strategy_data\r\n\r\n## 实际程序行为\r\nremove_strategy 时 没有 remove_strategy_data\r\n\r\n是有什么考量吗?\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2677/comments",
    "author": "pg-adm1n",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-09-23T03:27:49Z",
        "body": "如果修改策略代码后，想要不重启程序立即生效，可以重载策略，移除老的策略后重建一个同名新的，会自动加载之前的缓存状态"
      }
    ]
  },
  {
    "number": 2667,
    "title": "建议vnpy团队在回测报告中加入胜率和盈亏比，看见vnpy论坛有很多忠实粉丝都在说有这个需求",
    "created_at": "2020-09-13T04:26:29Z",
    "closed_at": "2020-09-14T06:19:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2667",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本:3.7.1\r\n* vn.py版本: v2.1.5\r\n\r\nEnhancement\r\n1：建议vnpy团队在回测报告中加入胜率和盈亏比，逛了一下论坛，看见论坛中有很多忠实粉丝都在说有这个需求！\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2667/comments",
    "author": "rjl02468",
    "comments": [
      {
        "user": "yhmickey",
        "created_at": "2020-09-14T00:49:09Z",
        "body": "这个在vnpy\\examples\\cta_backtesting\\trade_by_trade.ipynb里"
      },
      {
        "user": "vnpy",
        "created_at": "2020-09-14T06:19:08Z",
        "body": "楼上正解"
      }
    ]
  },
  {
    "number": 2657,
    "title": "回测引擎不能多次set_parameters",
    "created_at": "2020-09-06T07:35:22Z",
    "closed_at": "2020-09-07T00:24:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2657",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 20.04\r\n* Python版本: 3.8.2\r\n* vn.py版本: v2.1.5\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n\r\n回测引擎对象每次set_parameters，应该清空上次回测的数据。\r\n\r\n## 实际程序行为\r\n\r\n回测引擎对象每次set_parameters，没有清空上次回测的数据。所有新创建挂单数据都是和之前回测的挂单数据叠加的。\r\n\r\n## 重现步骤\r\n\r\n保持一个回测引擎对象不销毁，重复set_parameters，load_data，run_backtesting。就会从第二次回测开始，之前的数据都保持。\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2657/comments",
    "author": "breadbread1984",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-09-07T00:24:11Z",
        "body": "1. 调用clear_data函数清空下之前回测的缓存数据即可\r\n2. 一般不建议重复使用，直接重新创建个对象更方便"
      }
    ]
  },
  {
    "number": 2638,
    "title": "回测时间间隔为daily的问题",
    "created_at": "2020-08-21T00:53:17Z",
    "closed_at": "2020-08-21T00:58:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2638",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 10\r\n* Python版本: VNStudio-2.5.1\r\n* vn.py版本: v2.1.5\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n\r\n请问如果backtesting选择interval为daily。那么cta策略的on_bar收到的是否是日k线？\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2638/comments",
    "author": "breadbread1984",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-08-21T00:58:06Z",
        "body": "是的"
      }
    ]
  },
  {
    "number": 2633,
    "title": "CTA回测报错",
    "created_at": "2020-08-14T06:54:43Z",
    "closed_at": "2020-08-15T14:32:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2633",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: 3.7\r\n* vn.py版本:2.1.2\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n正常回测\r\n\r\n## 实际程序行为\r\n回测报错，在调用back_testing()函数的时候，backtesting.py文件中 self.callback(data),  self.callback是None，我检索了backtesting.py 发现只有调用self.load_tick 或者self.load_bar 才会的self.callback赋值， 但是回测的demo中没有发现有调用这两个函数，那么self.callback是怎么被赋值的\r\n\r\n## 重现步骤\r\nbacktesting.py中run_backtesting()函数中 self.callback(data)报错，TypeError: 'NoneType' object is not callable\r\n            try:\r\n                self.callback(data)\r\n            except Exception:\r\n                self.output(\"触发异常，回测终止\")\r\n                self.output(traceback.format_exc())\r\n                return\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2633/comments",
    "author": "TIANRENK",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-08-15T14:32:32Z",
        "body": "所有自带策略中，在on_init函数下都有调用load_bar函数来做初始化。\r\n\r\n没有调用的TestStrategy是用来执行功能测试的，不支持回测。"
      }
    ]
  },
  {
    "number": 2622,
    "title": "关于IB无法使用RPC直接拉取历史数据初始化的咨询 ",
    "created_at": "2020-08-07T13:00:42Z",
    "closed_at": "2020-08-08T09:54:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2622",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: 如VNStudio-2.1.4\r\n* vn.py版本: v2.1.4\r\n\r\n## Issue类型\r\nEnhancement\r\n\r\n## 预期程序行为\r\n## **1:盈透IB使用RPC服务器可以正常从ib gateway拉取历史数据完成CTA策略的初始化**\r\n\r\n## 实际程序行为\r\n**1:老师您好，咨询一下，如果直接使用vntrader连接ib gateway的话，可以正常从ib gateway拉取历史数据初始化，一般5个策略初始化时间为3分钟左右，但是如果使用RPC服务器进行CTA策略的初始化，5个策略就会在1秒内直接初始化完成，这种差距太大了，是否是RPC无法从API拉取历史数据进行初始化呢？ 只能是实时行情的数据推送？望Enhancement这个功能，万分感激！**\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2622/comments",
    "author": "rjl02468",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-08-08T09:54:54Z",
        "body": "RPC接口，没有支持历史数据查询功能，因为大部分接口是不支持历史数据查询的，所以无法通过RPC来支持"
      }
    ]
  },
  {
    "number": 2616,
    "title": "2.14版是移除了对OandaGateway的支持吗？",
    "created_at": "2020-08-04T01:29:47Z",
    "closed_at": "2020-08-04T01:42:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2616",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.0.5发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n目前正在使用Oanda做模拟测试，正准备上实盘，却突然发现OandaGateway在新版被删掉了，想知道被删原因，以及后续是否会继续支持？\r\n是因为官方api不稳定吗？还是因为有MT5替代了？（但据我所知Oanda还不支持MT5...）\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2616/comments",
    "author": "UtorYeung",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-08-04T01:42:03Z",
        "body": "对的，已经移除了，一方面国内连接OANDA接口很麻烦，另一方面有了MT5了，我们没有精力维护太多用户很少的接口"
      }
    ]
  },
  {
    "number": 2606,
    "title": "PortfolioStrategy无on_trade和on_order",
    "created_at": "2020-07-30T02:08:51Z",
    "closed_at": "2020-07-31T01:40:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2606",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: 3.7\r\n* vn.py版本: 2.1.2\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\nPortfolioStrategy有on_trade和on_order。如果有on_trade，可以在开仓成功后第一时间进行平仓挂单，如果没有该如何进行？\r\n\r\n## 实际程序行为\r\n没有on_trade,on_orders\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2606/comments",
    "author": "TIANRENK",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-07-31T01:40:36Z",
        "body": "PortfolioStrategy针对的多标的组合策略，最低也就是分钟线级别运行的，所以不需要on_trade/on_order回调函数，同时在回测中也无法保证时间前后的一致性，所以不会提供。"
      }
    ]
  },
  {
    "number": 2605,
    "title": "vnpy1.9.2版本，安装在windows Server的哪个版本上比较稳定",
    "created_at": "2020-07-28T06:36:13Z",
    "closed_at": "2020-07-29T00:44:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2605",
    "body": "## 环境\r\n\r\n* 操作系统: windows Server xxx\r\n* vn.py版本: 如v1.9.2\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n\r\n群主，您好\r\n\r\n请问定制的服务器或者说云服务器，对于V1.9.2版本的，windows Server用哪个版本的最稳定？\r\n比较推荐那几个操作系统的版本？\r\n\r\n因为是windows Server 2012~20xx 的版本，硬件系统配置有要求吗？比较合适的配置是哪类的？\r\n\r\n可能的机器配置：2cpu，16g内存，固态硬盘128g，主板？、网卡？\r\n这样的配置，是否在  window server   的服务器上跑起来不卡？ 大概交易20个标的的。\r\n\r\n谢谢！\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2605/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-07-29T00:44:58Z",
        "body": "1.9.2之前一直用Server 2012开发的，这个配置正常运行应该没啥问题了，注意不要买【突发性能实例】即可"
      }
    ]
  },
  {
    "number": 2587,
    "title": "CTA回测结束事件的处理机制不合理",
    "created_at": "2020-07-18T12:15:23Z",
    "closed_at": "2020-08-02T14:42:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2587",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: Anaconda 2020.02 Python版本是3.7.6\r\n* vn.py版本: v2.1.4\r\n\r\n## Issue类型\r\nEnhancement\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n现在的实现方法如下：\r\nBacktesterManager是回测窗体类，在vnpy\\app\\cta_backtester\\ui目录下的widget.py中定义。在窗体类中首先定义一个PyQt5信号：\r\n    signal_backtesting_finished = QtCore.pyqtSignal(Event)\r\n在窗体类的register_event方法中：\r\n        self.signal_backtesting_finished.connect(\r\n            self.process_backtesting_finished_event)\r\n指明process_backtesting_finished_event为该信号的槽函数。后续代码：\r\n        self.event_engine.register(\r\n            EVENT_BACKTESTER_BACKTESTING_FINISHED, \r\n            self.signal_backtesting_finished.emit)\r\n将发出signal_backtesting_finished信号的函数注册为EVENT_BACKTESTER_BACKTESTING_FINISHED事件的处理函数。\r\n感觉上述代码有些绕。\r\n可以只用一句代码完成上述功能：\r\n        self.event_engine.register(\r\n            EVENT_BACKTESTER_BACKTESTING_FINISHED, \r\n            self.process_backtesting_finished_event)\r\n经过简单测试，这样改代码没有问题。如果我理解的是对的，这样的代码又少又直观。但我不敢确定，也许vn.py的开发者另有深意吧。\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2587/comments",
    "author": "agelongwin",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-08-02T14:42:06Z",
        "body": "Qt编程中的一个重要知识点：不能在Qt事件循环以外的线程中，直接调用对Qt图形组件进行修改操作，否则可能因为冲突导致程序崩溃。\r\n\r\n如果要这么做，必须通过Signal/Slot机制来实现这种跨线程的通知调用。"
      }
    ]
  },
  {
    "number": 2583,
    "title": "能解释一下，为什么放弃了docker的vnpy吗？因为效率太低吗？",
    "created_at": "2020-07-16T15:35:01Z",
    "closed_at": "2020-08-01T15:51:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2583",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.0.5发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2583/comments",
    "author": "Angel0726",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-08-01T15:51:59Z",
        "body": "1. docker性能比不上系统级运行，对量化交易来说很关键\r\n2. docker带来的部署便捷特性，对交易来说意义不大"
      }
    ]
  },
  {
    "number": 2575,
    "title": "队列是否使用“优先级队列”功能更好？",
    "created_at": "2020-07-14T08:03:14Z",
    "closed_at": "2020-07-15T02:17:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2575",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: 如VNStudio-2.0.6\r\n\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n群主，您好\r\n\r\n对线程、队列这部分不太了解的，想咨询下，vnpy2.x的新版本中，队列是否实现了“优先级队列”功能？相当于是行情、交易使用高优先级队列，对于日志、数据保存等使用低优先级的方式？这样是不是可以提高交易的性能？\r\n\r\n比如同时50个标的要保存k线数据和交易的情况下，这样是否可以提升整体的性能？\r\n\r\n\r\n谢谢！\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2575/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-07-15T02:17:46Z",
        "body": "PriorityQueue性能比较差，可以自己测试看下。"
      }
    ]
  },
  {
    "number": 2570,
    "title": "如何安装？",
    "created_at": "2020-07-09T15:38:15Z",
    "closed_at": "2020-07-10T14:28:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2570",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.0.5发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2570/comments",
    "author": "jivaklong",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-07-10T14:28:29Z",
        "body": "请查看【vnpy-community】微信公众号的入门教程。"
      }
    ]
  },
  {
    "number": 2566,
    "title": "有vnpy的docker吗？",
    "created_at": "2020-07-06T14:16:36Z",
    "closed_at": "2020-07-07T12:24:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2566",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.0.5发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2566/comments",
    "author": "Angel0726",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-07-07T12:24:55Z",
        "body": "之前做过，但测试结果是vn.py作为交易程序，并不适合在docker中使用，所以新版本不提供了"
      }
    ]
  },
  {
    "number": 2521,
    "title": "查询实时持仓情况",
    "created_at": "2020-05-29T14:46:30Z",
    "closed_at": "2020-05-29T22:28:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2521",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: 3.7\r\n* vn.py版本: 如v2.1.2\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n查询最新持仓函数\r\n\r\n## 实际程序行为\r\nget_all_positions函数结果是几秒更新，那么通过哪个函数可以查询当前实时的成交情况，和最新的持仓呢\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2521/comments",
    "author": "TIANRENK",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-05-29T22:28:33Z",
        "body": "可以自行基于EVENT_POSITION和EVENT_TRADE推送的数据来合成计算，引擎层没有提供现成的查询函数"
      }
    ]
  },
  {
    "number": 2520,
    "title": "CTP,cancel_all()无效",
    "created_at": "2020-05-29T14:29:34Z",
    "closed_at": "2020-05-29T22:26:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2520",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: 3.7\r\n* vn.py版本: 如v2.1.2\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\nself.cancel_all() 取消所有报单\r\n\r\n## 实际程序行为\r\nself.cancel_all()之后，get_all_active_orders()中还是有挂单\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2520/comments",
    "author": "TIANRENK",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-05-29T22:26:07Z",
        "body": "cancel_all函数的功能，是立即发出撤单委托，要等到撤单确认信息返回后，才会从缓存的活动委托列表中移除该委托，此时get_all_active_orders才会为空"
      },
      {
        "user": "TIANRENK",
        "created_at": "2020-06-01T13:09:26Z",
        "body": "> cancel_all函数的功能，是立即发出撤单委托，要等到撤单确认信息返回后，才会从缓存的活动委托列表中移除该委托，此时get_all_active_orders才会为空\r\n\r\n在当前on_tick中，我发出撤单委托之后，无论过多久get_all_active_orders都没有更新，必须等到下个on_tick才会更新， 这个问题有办法解决吗"
      }
    ]
  },
  {
    "number": 2519,
    "title": "position持仓查询比orders订单查询更慢",
    "created_at": "2020-05-29T12:56:44Z",
    "closed_at": "2020-05-29T14:12:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2519",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: 3.7\r\n* vn.py版本: 如v2.1.2发行\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\nCTP中，当限价单成交后，get_all_active_orders返回结果中的未成交订单消失，get_positions返回结果过了很久都没有更新成交后的持仓\r\n\r\n## 实际程序行为\r\n当挂单成交后，get_all_active_orders中的order消失，get_positions中增加成交后的持仓信息。\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2519/comments",
    "author": "TIANRENK",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-05-29T14:12:49Z",
        "body": "委托信息是基于推送立即跟新的，持仓信息是基于轮询每隔几秒才更新的。\r\n\r\n要知道准确的最新持仓情况，要通过持仓和成交两个数据流来维护。"
      },
      {
        "user": "TIANRENK",
        "created_at": "2020-05-29T14:44:13Z",
        "body": "> 委托信息是基于推送立即跟新的，持仓信息是基于轮询每隔几秒才更新的。\r\n> \r\n> 要知道准确的最新持仓情况，要通过持仓和成交两个数据流来维护。\r\n\r\n那么通过哪个函数可以查询当前最新的成交情况，和最新的持仓呢"
      },
      {
        "user": "vnpy",
        "created_at": "2020-05-29T22:27:32Z",
        "body": "成交要通过监听EVENT_TRADE事件来获取，没有查询全部成交的函数"
      }
    ]
  },
  {
    "number": 2480,
    "title": "官方是否有完善文档的计划？",
    "created_at": "2020-05-01T09:17:12Z",
    "closed_at": "2020-05-01T09:45:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2480",
    "body": "## 当前问题\r\n目前官网更偏向引导使用打包好的图形化 vnstation，但是相关文档不太全。\r\n像官方文档中有提到一个「CSV载入模块」这部分文档看上去是非图形化版本的，这样混着读，阅读上去实在是不太方便。\r\n\r\n## 建议\r\n增加按照使用场景的文档（step1、step2 这种），目前大部分都是按照模块编写文档。按照使用场景编写，首先能够降低入门门槛，其次能够让用户更好的理解各个模块怎么串联。\r\n\r\n如果官方没有时间编写，是否考虑招募志愿者共创？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2480/comments",
    "author": "scqsu",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-05-01T09:45:30Z",
        "body": "目前的文档落后3-4个版本了，我们后续会更新上来。"
      }
    ]
  },
  {
    "number": 2464,
    "title": "价差交易收不到ontrade推送",
    "created_at": "2020-04-29T02:53:59Z",
    "closed_at": "2020-04-29T07:42:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2464",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.1.1\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n获得TradeData\r\n\r\n## 实际程序行为\r\nNone\r\n\r\n## 重现步骤\r\n运行BasicSpreadStrategy， 成交后onTrade没有收到推送，交易正常。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2464/comments",
    "author": "jieyujing",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-04-29T07:42:15Z",
        "body": "价差策略启动算法来做交易的话，策略不会收到on_trade推送，只会收到on_algo的状态推送"
      }
    ]
  },
  {
    "number": 2455,
    "title": "threading改为multiprocessing",
    "created_at": "2020-04-27T02:36:20Z",
    "closed_at": "2020-04-27T06:40:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2455",
    "body": "vnpy的线程是from threading import Thread，但threading绕不开GIL，是python的一种伪多线程。能不能都调整为from multiprocessing import Process？这样才能发挥多核CPU的计算性能。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2455/comments",
    "author": "ianyunxiong",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-04-27T06:40:43Z",
        "body": "多进程情况下，每个进程之间的数据是隔离的，要互相访问需要通过跨进程通讯，带来的额外通讯开销通常远大于提升的计算性能，所以没有意义"
      }
    ]
  },
  {
    "number": 2445,
    "title": "请教log信息窗口的QtWidgets.QTextEdit字体大小调整问题",
    "created_at": "2020-04-21T06:51:41Z",
    "closed_at": "2020-04-23T04:47:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2445",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* vn.py版本: 如v1.9.2发行版\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n\r\n群主，您好\r\n\r\n请教个问题，\r\n对于vnpy的log信息，用到的是QtWidgets.QTextEdit的，为什么我修改字体大小改不了呢？想修改成10号字体，但是使用\r\n，# 定义字体\r\nBASIC_FONT10 = None\r\ntry:\r\n    family = globalSetting['fontFamily']\r\n    size = globalSetting['fontSize']\r\n    BASIC_FONT10 = QtGui.QFont(family, size)\r\nexcept:\r\n    BASIC_FONT10 = QtGui.QFont(u'微软雅黑', 10)\r\n\r\n，# 修改字体\r\nself.setFont(BASIC_FONT10)\r\n\r\n是改不了的，然后使用QtGui.QFont(u'微软雅黑', 10)的方式直接改，仍旧修改不了的，但是在运行中的窗口中按住ctrl控件用鼠标滚轮滚就可以变小字体的。\r\n我担心10是视觉看不出来的，把数字调整成 5 ，仍旧不行的呢。\r\n\r\n不想通过VT_setting.json来修改的，因为VT_setting.json中改成10号太小的了，用QtWidgets.QTextEdit做的看板，希望看板的字体单独小一点儿的，不跟随VT_setting.json设置来，但是怎么改都改不了的呢。\r\n\r\n恳请指导下，谢谢！\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2445/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-04-22T02:04:58Z",
        "body": "请检查下修改的是否是site-packages安装目录里的文件"
      },
      {
        "user": "stone3536",
        "created_at": "2020-04-22T09:57:05Z",
        "body": "群主，您好\r\n\r\nVT_setting.json  修改，没有问题的。\r\n我说的是代码单独改QtWidgets.QTextEdit的（class StLogMonitor(QtWidgets.QTextEdit):）字体的，为啥不行（StLogMonitor 和新作的QtWidgets.QTextEdit都不能单独修改的字体大小的）？是因为整个vnpy都设置了基于VT_setting.json的设置字体的了吗？ 是有特殊的设置位置吗？\r\n\r\n"
      },
      {
        "user": "vnpy",
        "created_at": "2020-04-23T01:37:05Z",
        "body": "不会，肯定都是可以单独修改的，我猜测你改错代码位置了，你不妨直接改个显示的文字，看看能不能生效"
      },
      {
        "user": "stone3536",
        "created_at": "2020-04-23T04:47:45Z",
        "body": "是的，您说的没错，\r\n我搜索了关键字，找到了在另外的位置有\r\nsetFont(BASIC_FONT)，而且是在测试修改的位置后边的，\r\n导致前边的修改不起作用的了。\r\n感谢！"
      }
    ]
  },
  {
    "number": 2443,
    "title": "cta_stratergy/engine 撤单时所使用的订单是vtorder，事件更新，但是撤单时，撤单事件早于更新事件就存在问题",
    "created_at": "2020-04-21T01:33:18Z",
    "closed_at": "2020-04-21T02:09:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2443",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 10\r\n* Python版本: python3.7\r\n* vn.py版本: V2.12\r\n\r\n## Issue类型\r\nBug\r\n\r\n## 预期程序行为\r\n数字货币，报单更新VT事件更新慢于撤单事件\r\n预期cta策略撤单\r\n## 实际程序行为\r\n\r\n撤单时，提示订单不存在\r\n## 重现步骤\r\n\r\n修改为：\r\n在gateway层定义一个对象，存储订单。但是有缺点\r\n\r\n``` python \r\n  def cancel_server_order(self, strategy: CtaTemplate, vt_orderid: str):\r\n        \"\"\"\r\n        Cancel existing order by vt_orderid.\r\n        \"\"\"\r\n        order=None\r\n        for gateways_key in self.main_engine.gateways:\r\n            gateways_instance=self.main_engine.gateways.get(gateways_key)\r\n            order=gateways_instance.orders.get(vt_orderid.split('.')[1])\r\n            if  order:\r\n                break\r\n\r\n\r\n        if not order:\r\n            self.write_log(f\"撤单失败，找不到委托{vt_orderid}\", strategy)\r\n            return\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2443/comments",
    "author": "yzcpleo",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-04-21T02:09:46Z",
        "body": "这里需要委托细粒度管理，记录自己曾经发出过的撤单请求，而不应该重复去撤。"
      }
    ]
  },
  {
    "number": 2440,
    "title": "simnow无法平仓",
    "created_at": "2020-04-20T03:00:25Z",
    "closed_at": "2020-04-21T02:12:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2440",
    "body": "## 环境\r\n\r\n* 操作系统: win10\r\n* Python版本: VNStudio-2.0.6\r\n* vn.py版本: 如v2.1.2\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n用simnow模拟账户，rb合约平仓\r\n\r\n## 实际程序行为\r\n无法平仓，错误代码51,50，平今仓位不足，平昨仓位不足。\r\n\r\n## 重现步骤\r\nvn station 无法进行平仓\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2440/comments",
    "author": "TIANRENK",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-04-21T02:12:22Z",
        "body": "检查下是否已有其他委托导致了仓位被冻结"
      },
      {
        "user": "cjj208",
        "created_at": "2022-12-14T07:37:49Z",
        "body": "这个问题好像还没解决"
      }
    ]
  },
  {
    "number": 2425,
    "title": "关于今昨仓位更新相关计算逻辑的不一致的疑问",
    "created_at": "2020-04-10T08:17:02Z",
    "closed_at": "2020-04-11T13:02:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2425",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 10\r\n* Python版本: anaconda python3.7 \r\n* vn.py版本: 版本2.1.1\r\n* simnow交易\r\n\r\ntrader指位于`C:\\vnstudio\\Lib\\site-packages\\vnpy\\trader`中的一系列文件，包括事件驱动引擎，converter等\r\n\r\n所涉及代码地址：`trader/converter.py`里的`class PositionHolding`中的`update_trade`，`calculate_frozen`和`convert_order_request_shfe`方法\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n区分上交所和其他交易所的平今平昨指令，并保持一致的逻辑。我理解中交易所逻辑都应该是先开先平，任何情况下都先平历史仓，然后对上交所的情况，根据委托指令不同，进行特别处理。\r\n\r\n## 实际程序行为\r\n\r\n不知道会对交易结果的预期造成怎样的影响，但看上去有些奇怪。\r\n\r\n- update_trade(self, trade: TradeData)。根据代码：\r\n\r\n  ```\r\n                  if trade.exchange in [Exchange.SHFE, Exchange.INE]:\r\n                      self.short_yd -= trade.volume\r\n                  else:\r\n                      self.short_td -= trade.volume\r\n  \r\n                      if self.short_td < 0:\r\n                          self.short_yd += self.short_td\r\n                          self.short_td = 0\r\n  ```\r\n\r\n  我的理解是，如果交易所是SHFE/INE, then change yesterday position, if not, change today position first(until today's position runs out)。感觉逻辑和交易所规定不同。（请看参考部分）\r\n\r\n- `calculate_frozen`: 针对平仓操作计算（交易未完成部分）冻结量\r\n\r\n  问题：没有区分不同交易所close指令的不同效果，和update_trade()的计算逻辑不一致\r\n\r\n- convert_order_request_shfe：对发往上期所的下单申请的预先处理\r\n\r\n  我理解中这段代码的逻辑是：开仓任意下单，对平仓部分，先计算当前的可操作仓位数（持有仓数-冻结仓数），包括总可操作仓数和今日可操作仓数。超出总可操作仓数，订单无效；在今日可操作仓数内，先平今仓；超出今日可操作仓数但在总操作仓数内，先平今后平昨。\r\n\r\n  问题：逻辑和update_trade不太一致\r\n\r\n## 参考\r\n\r\n我理解中交易所的逻辑：\r\n\r\n1、上海期货交易所平今指令\r\n① 同时持有历史持仓和当日新仓，投资者既可以先平新仓(也即平今仓)，也可以先平历史仓(也即老仓)。\r\n② 同为今仓或老仓时，遵从先开先平原则。\r\n\r\n2、大商所、郑商所、中金所、上海能源交易中心，此4家交易所均无平今指令\r\n① 同时持有历史持仓和当日新仓，平仓时只能默认优先平历史持仓;\r\n② 同为今仓或老仓时，遵从先开先平原则。\r\n\r\n没有做过期货实盘交易，有一点迷惑。\r\n感谢大家的耐心解释。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2425/comments",
    "author": "noname2024-tech",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-04-11T13:02:23Z",
        "body": "除了上期所外，其他三家优先平今，算是期货交易的基础知识了。"
      }
    ]
  },
  {
    "number": 2411,
    "title": "能否获取上期所的五档行情",
    "created_at": "2020-04-07T01:41:16Z",
    "closed_at": "2020-04-07T03:04:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2411",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.0.5发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2411/comments",
    "author": "TIANRENK",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-04-07T03:04:01Z",
        "body": "vn.py已经支持了CTP的5档行情，只要对接的期货公司CTP行情服务器支持就能直接显示和使用"
      }
    ]
  },
  {
    "number": 2407,
    "title": "option update tick的时候是否该计算greeks",
    "created_at": "2020-04-03T05:28:17Z",
    "closed_at": "2020-04-13T14:43:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2407",
    "body": "这是class optiondata里的一段， updatetrade只需要更新pos greeks但是update tick的时候应该是都要计算，因为option的greek 组合的greek都会受impv的影响\r\n\r\ndef update_tick(self, tick: TickData) -> None:\r\n    \"\"\"\"\"\"\r\n    super().update_tick(tick)\r\n    self.calculate_option_impv()\r\n\r\ndef update_trade(self, trade: TradeData) -> None:\r\n    \"\"\"\"\"\"\r\n    super().update_trade(trade)\r\n    self.calculate_pos_greeks()\r\n\r\ndef update_underlying_tick(self, underlying_adjustment: float) -> None:\r\n    \"\"\"\"\"\"\r\n    self.underlying_adjustment = underlying_adjustment\r\n\r\n    self.calculate_option_impv()\r\n    self.calculate_theo_greeks()\r\n    self.calculate_pos_greeks()\r\n\r\n因为我自己构造几个tick然后手工触发update tick发现不同的顺序传入tick，最后算出来组合的结果不同：\r\n\r\n    p.update_tick(tick_data)\r\n    p.update_tick(tick_data_p)\r\n    p.update_tick(tick_data_c)\r\n\r\n所以我觉得optiondata updatetick的时候，需要计算impv greek posgreek 同时chain updatetick的时候也需要计算posgreeks",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2407/comments",
    "author": "leochan007",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-04-13T14:43:16Z",
        "body": "这里需要考虑的是效率和精确性之间的平衡了，理论上自然是每次更新都计算最好。\r\n\r\n但实践中，期货标的的更新频率足够高，使得期权的greeks实时计算已经够了，没必要重复计算。"
      }
    ]
  },
  {
    "number": 2360,
    "title": "EmailEngine中send_mail里的receiver没写对",
    "created_at": "2020-02-22T03:29:34Z",
    "closed_at": "2020-03-10T13:22:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2360",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.1.0\r\n## Issue类型\r\n三选一：Bug\r\n\r\nmsg[\"to\"] = SETTINGS[\"email.receiver\"]\r\n应该改为：\r\nmsg[\"to\"] = receiver\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2360/comments",
    "author": "smartgang",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-03-10T13:22:53Z",
        "body": "已修复，非常感谢"
      }
    ]
  },
  {
    "number": 2303,
    "title": "有支持macbook的客户端吗？",
    "created_at": "2020-01-17T02:40:09Z",
    "closed_at": "2020-01-18T03:24:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2303",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.0.5发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2303/comments",
    "author": "QCCS",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-01-18T03:24:22Z",
        "body": "目前没有，请使用一键安装脚本install_osx.sh来安装即可"
      }
    ]
  },
  {
    "number": 2302,
    "title": "webtrader还有后续开发计划吗？",
    "created_at": "2020-01-16T16:38:32Z",
    "closed_at": "2020-01-27T02:13:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2302",
    "body": "2.0后webtrader就没有了，是以后也不会有开发计划，还是说只是暂时优先级不高？如果开发有难度，具体是哪个模块带来了困难？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2302/comments",
    "author": "CavalloneChen",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-01-17T01:11:27Z",
        "body": "优先级不高，一个我们发现web界面的用户整体不多，第二个我们团队也没有前端开发人员，之前1.0版本的网页前端是找的外包"
      }
    ]
  },
  {
    "number": 2282,
    "title": "cannot import name 'black_76_cython' from 'vnpy.app.option_master.pricing' ",
    "created_at": "2020-01-13T02:26:28Z",
    "closed_at": "2020-01-14T02:27:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2282",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 16.04\r\n* Python版本: 如python 3.7.2\r\n* vn.py版本: 如v2.0.9发行版\r\n## Issue类型\r\n三选一：Question\r\n进入~/vnpy-2.0.9/examples/vn_trader页面启动vnpy时报以下错误\r\nTraceback (most recent call last):\r\n  File \"run.py\", line 47, in <module>\r\n    from vnpy.app.option_master import OptionMasterApp\r\n  File \"/root/anaconda3/lib/python3.7/site-packages/vnpy/app/option_master/__init__.py\", line 3, in <module>\r\n    from .engine import OptionEngine, APP_NAME\r\n  File \"/root/anaconda3/lib/python3.7/site-packages/vnpy/app/option_master/engine.py\", line 25, in <module>\r\n    from .pricing import (\r\nImportError: cannot import name 'black_76_cython' from 'vnpy.app.option_master.pricing' (/root/anaconda3/lib/python3.7/site-packages/vnpy/app/option_master/pricing/__init__.py)\r\n\r\n请问如何解决该问题。。。\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2282/comments",
    "author": "moxiaoying",
    "comments": [
      {
        "user": "moxiaoying",
        "created_at": "2020-01-13T06:16:54Z",
        "body": "/app/option_master/pricing# ls\r\nbinomial_tree_cython.pyd  black_76.py               __init__.py\r\nbinomial_tree.py          black_scholes_cython.pyd  __pycache__\r\nblack_76_cython.pyd       black_scholes.py\r\n\r\n在这个目录下是存在该文件的\r\n"
      },
      {
        "user": "vnpy",
        "created_at": "2020-01-14T02:27:23Z",
        "body": "pyd文件是windows上的，linux上无法使用\r\n\r\ncython定价模型的自动编译还没弄完，所以2.0.9先移除掉了"
      }
    ]
  },
  {
    "number": 2276,
    "title": " error: command 'gcc' failed with exit status 1",
    "created_at": "2020-01-09T07:44:34Z",
    "closed_at": "2020-01-10T02:28:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2276",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 16.04\r\n* Python版本: 3.7.4\r\n* vn.py版本: 如v2.0.9\r\n\r\n## Issue类型\r\n三选一：Question\r\n gcc -pthread -B /root/anaconda3/compiler_compat -Wl,--sysroot=/ -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -DBRIGAND_NO_BOOST_SUPPORT=1 -Ivnpy/api/oes/vnoes/include -Ivnpy/api/oes/vnoes/include/oes -I/root/anaconda3/include/python3.7m -c vnpy/api/oes/vnoes/generated_files/module.cpp -o build/temp.linux-x86_64-3.7/vnpy/api/oes/vnoes/generated_files/module.o -std=c++17 -O3 -Wno-delete-incomplete -Wno-sign-compare\r\n    cc1plus: warning: command line option ‘-Wstrict-prototypes’ is valid for C/ObjC but not for C++\r\n    In file included from vnpy/api/oes/vnoes/include/c2py/c2py.hpp:6:0,\r\n                     from vnpy/api/oes/vnoes/generated_files/module.cpp:8:\r\n    vnpy/api/oes/vnoes/include/c2py/property_helper.hpp:5:23: fatal error: string_view: No such file or directory\r\n    compilation terminated.\r\n    error: command 'gcc' failed with exit status 1\r\n    ----------------------------------------\r\nERROR: Command errored out with exit status 1: /root/anaconda3/bin/python -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/tmp/pip-req-build-ovk5oll5/setup.py'\"'\"'; __file__='\"'\"'/tmp/pip-req-build-ovk5oll5/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /tmp/pip-record-owo8kgji/install-record.txt --single-version-externally-managed --compile Check the logs for full command output.\r\n\r\n安装到最后一步时报错，请问该怎样解决此类问题\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2276/comments",
    "author": "moxiaoying",
    "comments": [
      {
        "user": "Gwill",
        "created_at": "2020-01-09T09:08:15Z",
        "body": "应该是因为 gcc 版本太低了"
      },
      {
        "user": "vnpy",
        "created_at": "2020-01-10T02:28:22Z",
        "body": "楼上正解，请使用Ubuntu 18.04以上版本"
      },
      {
        "user": "dyzhou666",
        "created_at": "2020-01-19T13:59:30Z",
        "body": "我也遇到了同样的问题，系统Ubuntu 16.04，gcc升级到6.5还是不可行"
      }
    ]
  },
  {
    "number": 2260,
    "title": "cta 策略模块增加对账户余额查询的支持",
    "created_at": "2019-12-30T02:54:37Z",
    "closed_at": "2020-01-27T02:13:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2260",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: 如VNStudio-2.0.9\r\n* vn.py版本: 如v2.0.9发行版\r\n\r\n## Issue类型\r\n三选一：Enhancement\r\n\r\n## 预期程序行为\r\n在cta策略模块中，想要某些策略能够实时查询账户余额，从而配合策略动态计算仓位，例如用到凯利公式的策略\r\n\r\n## 实际程序行为\r\nvn.py好像不支持在cta策略中查询账户余额信息\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2260/comments",
    "author": "topscien",
    "comments": [
      {
        "user": "lixiang-repo",
        "created_at": "2020-01-03T09:22:18Z",
        "body": "可以这样self.cta_engine.main_engine.get_accout(vt_accountid).available"
      },
      {
        "user": "aaurix",
        "created_at": "2022-09-01T06:13:58Z",
        "body": "> vt_accountid\r\nvt_accountid 在策略中怎么获取啊\r\n"
      }
    ]
  },
  {
    "number": 2254,
    "title": "加密价差模块下的engine文件报错",
    "created_at": "2019-12-24T07:28:10Z",
    "closed_at": "2019-12-24T16:05:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2254",
    "body": "## 环境\r\n* 操作系统: 如Windows 10\r\n* vn.py版本: 如v2.0.8\r\n\r\n## Issue类型\r\n三选一：Enhancement/Question\r\n群主，您好\r\n加密价差模块下的engine文件报错，对msg做encode仍旧报错。\r\n未做任何处理的报错信息如下：\r\n\r\n\r\n## 预期程序行为\r\n\r\n\r\nE:\\36_VNPY【2.0版本】下载\\vnpy-2.0.8\\vnpy-2.0.8\\vnpy\\app\\spread_trading>zzz.bat\r\n\r\nE:\\36_VNPY【2.0版本】下载\\vnpy-2.0.8\\vnpy-2.0.8\\vnpy\\app\\spread_trading>cythoniz\r\ne -i engine.py\r\nCompiling E:\\36_VNPY【2.0版本】下载\\vnpy-2.0.8\\vnpy-2.0.8\\vnpy\\app\\spread_tradin\r\ng\\engine.py because it changed.\r\n[1/1] Cythonizing E:\\36_VNPY【2.0版本】下载\\vnpy-2.0.8\\vnpy-2.0.8\\vnpy\\app\\sprea\r\nd_trading\\engine.py\r\nE:\\00_VNPY_2.x\\Anaconda3\\lib\\site-packages\\Cython\\Compiler\\Main.py:369: FutureWa\r\nrning: Cython directive 'language_level' not set, using 2 for now (Py2). This wi\r\nll change in a later release! File: E:\\36_VNPY【2.0版本】下载\\vnpy-2.0.8\\vnpy-2.\r\n0.8\\vnpy\\app\\spread_trading\\engine.py\r\n  tree = Parsing.p_module(s, pxd, full_module_name)\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n            self.symbol_algo_map[leg.vt_symbol].append(algo)\r\n\r\n        # Put event to update GUI\r\n        self.put_algo_event(algo)\r\n\r\n        return algoid\r\n              ^\r\n------------------------------------------------------------\r\n\r\nengine.py:477:15: Cannot convert Unicode string to 'str' implicitly. This is not\r\n portable and requires explicit encoding.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n        event = Event(EVENT_SPREAD_ALGO, algo)\r\n        self.event_engine.put(event)\r\n\r\n    def write_algo_log(self, algo: SpreadAlgoTemplate, msg: str) -> None:\r\n        \"\"\"\"\"\"\r\n        msg = f\"{algo.algoid}：{msg}\"\r\n             ^\r\n------------------------------------------------------------\r\n\r\nengine.py:498:14: Cannot convert Unicode string to 'str' implicitly. This is not\r\n portable and requires explicit encoding.\r\n\r\nError compiling Cython file:\r\n------------------------------------------------------------\r\n...\r\n        event = Event(EVENT_SPREAD_STRATEGY, data)\r\n        self.event_engine.put(event)\r\n\r\n    def write_strategy_log(self, strategy: SpreadStrategyTemplate, msg: str):\r\n        \"\"\"\"\"\"\r\n        msg = f\"{strategy.strategy_name}：{msg}\"\r\n             ^\r\n------------------------------------------------------------\r\n\r\nengine.py:1020:14: Cannot convert Unicode string to 'str' implicitly. This is no\r\nt portable and requires explicit encoding.\r\nTraceback (most recent call last):\r\n  File \"E:\\00_VNPY_2.x\\Anaconda3\\Scripts\\cythonize-script.py\", line 10, in <modu\r\nle>\r\n    sys.exit(main())\r\n  File \"E:\\00_VNPY_2.x\\Anaconda3\\lib\\site-packages\\Cython\\Build\\Cythonize.py\", l\r\nine 223, in main\r\n    cython_compile(path, options)\r\n  File \"E:\\00_VNPY_2.x\\Anaconda3\\lib\\site-packages\\Cython\\Build\\Cythonize.py\", l\r\nine 106, in cython_compile\r\n    **options.options)\r\n  File \"E:\\00_VNPY_2.x\\Anaconda3\\lib\\site-packages\\Cython\\Build\\Dependencies.py\"\r\n, line 1096, in cythonize\r\n    cythonize_one(*args)\r\n  File \"E:\\00_VNPY_2.x\\Anaconda3\\lib\\site-packages\\Cython\\Build\\Dependencies.py\"\r\n, line 1219, in cythonize_one\r\n    raise CompileError(None, pyx_file)\r\nCython.Compiler.Errors.CompileError: E:\\36_VNPY【2.0版本】下载\\vnpy-2.0.8\\vnpy-2\r\n.0.8\\vnpy\\app\\spread_trading\\engine.py\r\n\r\nE:\\36_VNPY【2.0版本】下载\\vnpy-2.0.8\\vnpy-2.0.8\\vnpy\\app\\spread_trading>\r\n\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2254/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-12-24T16:05:22Z",
        "body": "VNStation内置的cython加密工具，只是用来加密策略代码文件的，由于标准化了主动函数、回调函数，所以cython可以直接兼容。对于其他代码，尤其是引擎层涉及大量复杂控制逻辑的，如果要用cython加密需要自行调整代码细节，来实现兼容。"
      }
    ]
  },
  {
    "number": 2238,
    "title": "建议以后改为异步协程模式",
    "created_at": "2019-12-10T08:29:58Z",
    "closed_at": "2019-12-15T13:48:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2238",
    "body": "VNPY明显就是多任务的系统了。\r\n最近发现使用asyncio这东西，一般就不会出现卡住的现象。\r\n现在的vnpy是很容易出现堵塞现象的。建议以后改为asyncio模式。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2238/comments",
    "author": "viponedream",
    "comments": [
      {
        "user": "Alexdachen",
        "created_at": "2019-12-12T07:42:39Z",
        "body": "同样建议。目前这个多线程任务队列模式，在跑多个策略和多个合约的时候就明显不够用了。"
      },
      {
        "user": "Gwill",
        "created_at": "2019-12-13T03:03:45Z",
        "body": "vnpy 是多线程架构，在整体架构上不会存在所谓的阻塞（事件流）。你遇到了什么具体的阻塞现象要具体拿出来具体分析具体解决。不要什么就是无脑上 asyncio ，这种风气在 python 界很不好。 \r\n\r\n"
      }
    ]
  },
  {
    "number": 2229,
    "title": "改为异步，协程模式会不会性能更好？",
    "created_at": "2019-12-03T05:21:14Z",
    "closed_at": "2019-12-04T00:49:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2229",
    "body": "起码有一个优点就是不会容易卡住。\r\n系统复杂了，一个地方block就导致整个系统卡一下，可能很要命。\r\n改为协程应该就没有这个隐患。它会把cpu让出来。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2229/comments",
    "author": "viponedream",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-12-04T00:49:57Z",
        "body": "不会的，协程只能解决IO密集型任务，而量化实盘交易是典型的计算密集型任务，协程完全没用，而且因为不能保证事件调度的顺序，还会出现难以排查的隐形BUG"
      },
      {
        "user": "hadrianl",
        "created_at": "2019-12-04T01:25:30Z",
        "body": "做成异步能优化线程之间调度的损耗，不过，这项目已经到这步了，改异步很难了。而且从开发的角度上来说，这对策略开发人员来说不太友好的"
      }
    ]
  },
  {
    "number": 2225,
    "title": "关闭界面卡住很久",
    "created_at": "2019-12-01T13:12:28Z",
    "closed_at": "2019-12-21T15:28:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2225",
    "body": "## 环境\r\n\r\n* 操作系统: Mac OS\r\n* Python版本: 3.7\r\n* vn.py版本: dev branch 20191109\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n立刻关闭界面\r\n\r\n## 实际程序行为\r\n等了好几分钟，才关闭界面\r\n\r\n## 重现步骤\r\n1. 打开vnpy的gui\r\n2. 连接huobi\r\n3. 订阅一个行情\r\n4. 点击系统--》退出\r\n\r\n经过调试，是关闭gateway的时候，在调用websocket的close的函数，卡住很久，请问这个是ws的正常行为么？有没有办法立刻关闭ws的连接？\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2225/comments",
    "author": "oldoldjiang",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-12-02T00:39:39Z",
        "body": "之前没测试过HuobiGateway在Mac上的效果，Windows上应该是可以正常关闭退出的，我们查下吧"
      },
      {
        "user": "yhmickey",
        "created_at": "2019-12-10T01:47:08Z",
        "body": "windows上有时候也会卡很久，不太清楚原因"
      },
      {
        "user": "vnpy",
        "created_at": "2019-12-21T15:28:36Z",
        "body": "WIN10测试下来无法重现，如果后续发现稳定重现的方法请告知"
      }
    ]
  },
  {
    "number": 2224,
    "title": "LogEngine是不是用自己的queue比较好？",
    "created_at": "2019-11-30T15:22:38Z",
    "closed_at": "2019-12-02T00:41:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2224",
    "body": "\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n## 实际程序行为\r\n## 重现步骤\r\n 无\r\n\r\n## 问题\r\n你好~\r\nLogEngine 与 EmailEngine，同样是职能比较单一的engine，前者使用系统的event_engine以及其中的queue，后者有自己的queue。这有什么特殊用意么？\r\n\r\n### 我的理解\r\n系统的event_engine，事件是异步加入的，但是handler处理是在（_run  _process）for循环中FIFO依次处理的。IO 比较费时，多少会影响到其后的event的处理。所以 log 不占用系统的queue比较好吧。\r\n### 我的看法\r\n系统的queue还是专注于核心的交易event比较好，log与email、data recorder有一点算外围。\r\n我的想法：event直接加入到log自身的queue，然后LogEngine 给系统queue发一个log的event，供UI等模块使用。\r\n\r\n没有做压测，高频经验也没有。只是自己的个人看法。【抱拳】请大神指正。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2224/comments",
    "author": "gang-yu",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-12-02T00:41:39Z",
        "body": "这个猜测是对的，所以全局配置里直接加上了是否要开启Log的功能，一般推荐在系统或者策略测试阶段开着日志（尤其是文件日志），真到稳定实盘后可以关闭减少性能开销，因此在LogEngine的设计上就不多此一举了。"
      }
    ]
  },
  {
    "number": 2203,
    "title": "价差套利疑似存在的bug",
    "created_at": "2019-11-18T07:54:13Z",
    "closed_at": "2019-11-18T14:52:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2203",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 10 64位\r\n* Python版本: 如VNStudio-2.0.8\r\n* vn.py版本: 如v2.0.8\r\n\r\n## Issue类型\r\nBug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n从回测结果来看，点设置1，乘数设置10，手续费设置万一，从经验来看，滑点和手续费差距应该不大，而且从成交笔数到总的滑点，有100倍的提高。从交易来看，现有的symbol仍然是IF-spread\r\n\r\nTradeData(gateway_name='BACKTESTING', symbol='IF-Spread', exchange=<Exchange.LOCAL: 'LOCAL'>, orderid='1', tradeid='1', direction=<Direction.SHORT: '空'>, offset=<Offset.NONE: ''>, price=4.4, volume=10, time='09:31:00')\r\nTradeData(gateway_name='BACKTESTING', symbol='IF-Spread', exchange=<Exchange.LOCAL: 'LOCAL'>, orderid='2', tradeid='2', direction=<Direction.LONG: '多'>, offset=<Offset.NONE: ''>, price=2.0, volume=10, time='09:36:00')\r\n\r\n2019-11-18 15:27:00.333035\t首个交易日：\t2014-04-08\r\n2019-11-18 15:27:00.333035\t最后交易日：\t2019-11-08\r\n2019-11-18 15:27:00.334033\t总交易日：\t1423\r\n2019-11-18 15:27:00.334033\t盈利交易日：\t52\r\n2019-11-18 15:27:00.334033\t亏损交易日：\t349\r\n2019-11-18 15:27:00.334033\t起始资金：\t1,000,000.00\r\n2019-11-18 15:27:00.334033\t结束资金：\t273,082.51\r\n2019-11-18 15:27:00.334033\t总收益率：\t-72.69%\r\n2019-11-18 15:27:00.334033\t年化收益：\t-12.26%\r\n2019-11-18 15:27:00.334033\t最大回撤: \t-726,917.49\r\n2019-11-18 15:27:00.334033\t百分比最大回撤: -72.69%\r\n2019-11-18 15:27:00.334033\t最长回撤天数: \t2040\r\n2019-11-18 15:27:00.334033\t总盈亏：\t-726,917.49\r\n2019-11-18 15:27:00.334033\t总手续费：\t8,017.49\r\n2019-11-18 15:27:00.334033\t总滑点：\t914,100.00\r\n2019-11-18 15:27:00.334033\t总成交金额：\t80,174,900.00\r\n2019-11-18 15:27:00.334033\t总成交笔数：\t9141\r\n2019-11-18 15:27:00.334033\t日均盈亏：\t-510.83\r\n2019-11-18 15:27:00.334033\t日均手续费：\t5.63\r\n2019-11-18 15:27:00.334033\t日均滑点：\t642.38\r\n2019-11-18 15:27:00.334033\t日均成交金额：\t56,342.16\r\n2019-11-18 15:27:00.334033\t日均成交笔数：\t6.423752635277583\r\n2019-11-18 15:27:00.334033\t日均收益率：\t-0.09%\r\n2019-11-18 15:27:00.334033\t收益标准差：\t0.33%\r\n2019-11-18 15:27:00.334033\tSharpe Ratio：\t-4.28\r\n2019-11-18 15:27:00.334033\t收益回撤比：\t-1.00\r\n\r\n\r\n\r\n## 重现步骤\r\n运行代码如下：\r\n#%%\r\nfrom vnpy.app.spread_trading.backtesting import BacktestingEngine\r\nfrom vnpy.app.spread_trading.strategies.statistical_arbitrage_strategy import (\r\n    StatisticalArbitrageStrategy\r\n)\r\nfrom vnpy.app.spread_trading.base import LegData, SpreadData\r\nfrom datetime import datetime\r\nspread = SpreadData(\r\n    name=\"AU-Spread\",\r\n    legs=[LegData(\"RB9999.SHFE\"), LegData(\"HC9999.SHFE\")],\r\n    price_multipliers={\"RB9999.SHFE\": 1, \"HC9999.SHFE\": -1},\r\n    trading_multipliers={\"RB9999.SHFE\": 1, \"HC9999.SHFE\": -1},\r\n    active_symbol=\"RB9999.SHFE\",\r\n    inverse_contracts={\"RB9999.SHFE\": False, \"HC9999.SHFE\": False},\r\n    min_volume=1\r\n)\r\n#%%\r\nengine = BacktestingEngine()\r\nengine.set_parameters(\r\n    spread=spread,\r\n    interval=\"1m\",\r\n    start=datetime(2010, 6, 10),\r\n    end=datetime(2019, 11, 10),\r\n    rate=0.0001,\r\n    slippage=1,\r\n    size=10,\r\n    pricetick=1,\r\n    capital=1_000_000,\r\n)\r\nengine.add_strategy(StatisticalArbitrageStrategy, {})\r\n#%%\r\nengine.load_data()\r\nengine.run_backtesting()\r\ndf = engine.calculate_result()\r\nengine.calculate_statistics()\r\nengine.show_chart()\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2203/comments",
    "author": "tianjixuetu",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-11-18T14:52:39Z",
        "body": "乘数是底层每条腿合约的实际乘数，股指期货应该是300"
      }
    ]
  },
  {
    "number": 2174,
    "title": "cta策略，在onTick中写sleep(1)会有效吗？",
    "created_at": "2019-11-01T11:37:49Z",
    "closed_at": "2019-11-02T02:03:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2174",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: 2.7\r\n* vn.py版本: 1.9.2\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n希望以此方式给予cancelOrder()充足的响应时间\r\n\r\n## 实际程序行为\r\n是否可行？对事件驱动的底层逻辑搞不懂啊\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2174/comments",
    "author": "kumapy",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-11-02T02:03:16Z",
        "body": "请不要这么写，会阻塞事件驱动引擎的运行，导致后续事件处理都要等待1秒"
      }
    ]
  },
  {
    "number": 2170,
    "title": "在已用anaconda2安装了vnpy1.9.2-LTS的情况下，如何同时兼容安装vnpy2.0.7？",
    "created_at": "2019-10-31T06:45:45Z",
    "closed_at": "2019-11-01T02:56:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2170",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 10\r\n* Python版本: anaconda2-5.2.0 & VNStudio-2.0.7\r\n* vn.py版本: vnpy1.9.2-LTS & vnpy2.0.7\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\nvnpy1.9.2-LTS & vnpy2.0.7均正常运行\r\n\r\n## 实际程序行为\r\n运行出错，pip出错等\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2170/comments",
    "author": "UtorYeung",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-11-01T02:56:51Z",
        "body": "2.0.7必须使用Python 3.7以上版本，Anaconda2无法安装"
      }
    ]
  },
  {
    "number": 2167,
    "title": "是否考虑神经网络算法等其他复杂算法在vnpy中实现",
    "created_at": "2019-10-31T00:54:39Z",
    "closed_at": "2019-11-01T02:55:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2167",
    "body": "群主，您好\r\n\r\n请问是否考虑神经网络算法等其他复杂算法在vnpy中实现？ 感觉这个是将来非常有竞争力的并且是趋势的。\r\n\r\n感谢！\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2167/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-11-01T02:55:29Z",
        "body": "暂时没有计划了，vn.py中自带策略的作用是作为开发示例，而不是直接给大家提供赚钱的工具"
      }
    ]
  },
  {
    "number": 2148,
    "title": "CTP多进程高频下单后，onTrade响应混乱问题",
    "created_at": "2019-10-20T13:47:16Z",
    "closed_at": "2019-10-21T05:54:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2148",
    "body": "环境\r\n操作系统: Windows 2012\r\nPython版本: 2.7\r\nvn.py版本: 1.9.2\r\nIssue类型\r\n三选一：Question\r\n\r\n预期程序行为\r\n举例来说，c2001成交的onTrade应该由合约为c2001的CTP策略来响应，不应该出现在其他合约（如：m2005等）的CTP策略的onTrade事件中。\r\n\r\n实际程序行为\r\nc2001成交事件出现在了m2005的CTP策略的onTrade事件中\r\n\r\n重现步骤\r\n重现比较困难，我先描述下我是怎么做得吧。\r\n我用多个命令行窗口分别开启了多个vnpy程序，每个窗口运行一个CTP策略：比如窗口1运行c2001的CTP策略，窗口2运行m2005的CTP策略，这些策略都是相对高频的按tick进行频繁交易。这时偶尔就会出现c2001的成交发到窗口2中的onTrade事件中进行响应，不知道大家有没有遇到这个问题？谢谢各位",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2148/comments",
    "author": "lipan0722",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-10-21T05:54:50Z",
        "body": "CTP的每个连接，本来就是会收到所有该账户的成交和委托推送，用户需要自行做过滤处理，请先翻阅官方文档后再做开发"
      }
    ]
  },
  {
    "number": 2142,
    "title": "请教，vnpy1.9.2LTS中套利合约允许同一个symbol出现在多个套利计划中么？",
    "created_at": "2019-10-17T11:16:55Z",
    "closed_at": "2019-10-18T05:53:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2142",
    "body": "最开始映像里是不允许的，一个合约只能在套利计划中出现一次，现在不知道是否允许？谢谢",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2142/comments",
    "author": "yuanjh6",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-10-18T05:53:19Z",
        "body": "不允许的，2.0.7重新设计的SpreadTrading模块可以"
      },
      {
        "user": "yuanjh6",
        "created_at": "2020-01-06T16:10:56Z",
        "body": "刚看到,谢谢啦"
      }
    ]
  },
  {
    "number": 2139,
    "title": "实盘onTick()出现重复发单",
    "created_at": "2019-10-16T12:20:26Z",
    "closed_at": "2019-10-16T12:32:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2139",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: 2.7\r\n* vn.py版本: 1.9.2 LTS\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n交易全在onTick中进行，按照 tick.datetime.second % 7 == 0 前提（非高频）进行交易\r\n预想当tick秒数整除7时，程序才执行\r\n\r\n## 实际程序行为\r\n10/15夜盘 出现连续两个tick，秒数+1，却都执行了发单（开仓委托两次、平仓委托2次）\r\n\r\n更为诧异的是，后单未能按预期，先撤回前次委托再发单\r\n导致连开2手螺纹——实盘目前在测试，内置了只允许持仓1手，\r\n发现持仓2手后，立即采取了平仓操作，但又是连续2个tick发单\r\n\r\n问题：\r\n1、为何连续2个tick，条件 tick.datetime.second % 7 == 0均满足？\r\n2、为何满足上述条件后，未能先撤回前次委托再发单？\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n采用ctaTrading交易，窗口实盘信息如下：\r\n----------------------------------------------------------------------------------------------------\r\n2019-10-15 22:50:57,842  INFO: CTA_STRATEGY     策略rbJY同步数据保存成功，当前持仓0\r\n2019-10-15 22:51:57,808  INFO: CTA_STRATEGY     策略rbJY同步数据保存成功，当前持仓0\r\n2019-10-15 22:52:46,815  INFO: CTA_STRATEGY     策略rbJY发送委托，rb2001，买开，1@3351.0\r\n2019-10-15 22:52:47,312  INFO: CTA_STRATEGY     策略rbJY发送委托，rb2001，买开，1@3352.0\r\n2019-10-15 22:52:47,348  INFO: CTA_STRATEGY     策略rbJY同步数据保存成功，当前持仓1\r\n错误代码：26，错误信息：CTP:报单已全成交或已撤销，不能再撤\r\n2019-10-15 22:52:47,367  INFO: CTA_STRATEGY     策略rbJY同步数据保存成功，当前持仓1\r\n2019-10-15 22:52:47,368  INFO: CTA_STRATEGY     策略rbJY同步数据保存成功，当前持仓2\r\n2019-10-15 22:52:47,368  INFO: CTA_STRATEGY     策略rbJY同步数据保存成功，当前持仓2\r\n2019-10-15 22:52:53,844  INFO: CTA_STRATEGY     策略rbJY发送委托，rb2001，卖平，1@3352.0\r\n2019-10-15 22:52:54,315  INFO: CTA_STRATEGY     策略rbJY发送委托，rb2001，卖平，1@3351.0\r\n2019-10-15 22:52:54,367  INFO: CTA_STRATEGY     策略rbJY同步数据保存成功，当前持仓1\r\n2019-10-15 22:52:54,368  INFO: CTA_STRATEGY     策略rbJY同步数据保存成功，当前持仓1\r\n2019-10-15 22:52:57,805  INFO: CTA_STRATEGY     策略rbJY同步数据保存成功，当前持仓1\r\n----------------------------------------------------------------------------------------------------\r\n策略逻辑如下:\r\n----------------------------------------------------------------------------------------------------\r\n    def onTick(self, tick):#        \"\"\"收到行情TICK推送（必须由用户继承实现）\"\"\"\r\n        self.bg.updateTick(tick)        # 更新1分钟k线\r\n        if tick.datetime.second % 7 == 0:\r\n            self.cancelAll()                  # 全撤之前发出的委托\r\n            .......                                   # 策略逻辑\r\n----------------------------------------------------------------------------------------------------\r\n    def onBar(self, bar):#        \"\"\"收到Bar推送（必须由用户继承实现）\"\"\"\r\n        self.bg.updateBar(bar)          # 更新k线\r\n        ........                                       # 刷新变量/参数\r\n        self.saveSyncData()               # 同步数据到数据库\r\n        self.putEvent()                       # 发出状态更新事件\r\n----------------------------------------------------------------------------------------------------",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2139/comments",
    "author": "kumapy",
    "comments": [
      {
        "user": "kumapy",
        "created_at": "2019-10-16T12:26:51Z",
        "body": "-----------------------------------------------------------------------------------------------------\r\n    def onTrade(self, trade):\r\n          .........\r\n          self.saveSyncData()               # 同步数据到数据库\r\n          self.putEvent()                       # 发出状态更新事件\r\n-----------------------------------------------------------------------------------------------------"
      },
      {
        "user": "vnpy",
        "created_at": "2019-10-16T12:32:26Z",
        "body": "1. 国内期货市场每秒2个tick，所以用second % 7来判断是不安全的\r\n2. 委托收到推送，以及撤单发出请求，都需要时间，所以tick级别的细粒度策略请自行实现委托状态机的细粒度管理，不能依赖cancelAll"
      }
    ]
  },
  {
    "number": 2135,
    "title": "spread trading",
    "created_at": "2019-10-12T04:29:25Z",
    "closed_at": "2019-10-21T08:42:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2135",
    "body": "```\r\n## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.0.5发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Question\r\n\r\n## 预期程序行为\r\n价差模块计算手数是否有问题呀。？\r\n如三个品种A/吨，B/吨，C/吨\r\n假设A是主动腿，并且价格乘数是1，其余两个乘数是负的\r\n如果价格乘数是1，price_multiplier2，price_multiplier3，\r\n合约规模（交易乘数）trading_multiplier1，trading_multiplier2，trading_multiplier3\r\n\r\n那么做多1手spread，应该是做多A1手，\r\n多空B   trading_multiplier1*price_multiplier2/trading_multiplier2手\r\n\r\n价格序列满足平稳协整spread = A - price_multiplier2*B-C*price_multiplier3\r\n报价单位是A元/吨，B元/吨，C元/吨\r\n合约规模是trading_multiplier1/手，trading_multiplier2/手，trading_multiplier3/手\r\n因为价格序列满足平稳关系，而且有每个价格序列有个乘数，而且每个合约规模不一样。\r\n\r\n所以应该根据现在想做的手数和合约规模反向推出价格序列是平稳的价格乘数对应关系\r\n\r\n\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2135/comments",
    "author": "lixiang-repo",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-10-21T08:42:09Z",
        "body": "价格乘数，用于基于每个合约的价格来计算价差。\r\n交易乘数，用于考虑合约乘数后，实际构成符合实际交易需求的价差。\r\n\r\n这两个乘数功能不同，同时在需要的时候是设置为不同数值的。"
      }
    ]
  },
  {
    "number": 2127,
    "title": "sqlite表结构设计不合理",
    "created_at": "2019-10-05T05:45:36Z",
    "closed_at": "2019-10-05T14:35:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2127",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.0.5发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Enhancement\r\n\r\n## 预期程序行为\r\n按symbol分表。\r\n\r\n## 实际程序行为\r\n所有数据都在dbbardata和dbtickdata里面，在数据量增长后会存在读写的性能问题，而且不便于数据的维护。\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2127/comments",
    "author": "ujfjhz",
    "comments": [
      {
        "user": "ujfjhz",
        "created_at": "2019-10-05T05:46:36Z",
        "body": "sqlite是非常强大的数据库，不能因为它简单就小看了它，库表结构设计好了比其他数据库都强。"
      },
      {
        "user": "vnpy",
        "created_at": "2019-10-05T14:35:32Z",
        "body": "担心性能方面的请使用MySQL、MongoDB等数据库，SQLite只是为了方便使用的默认数据库。\r\n"
      }
    ]
  },
  {
    "number": 2120,
    "title": "为什么CTP tick数据中的lastVolume都为0？",
    "created_at": "2019-09-27T06:26:53Z",
    "closed_at": "2019-09-29T01:32:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2120",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: 2.7\r\n* vn.py版本: 1.9.2\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n期望在CTP策略的onTick中获取到当前的成交量lastVolume\r\n\r\n## 实际程序行为\r\ntick 中的lastVolume都为0\r\n\r\n## 重现步骤\r\n\r\n在onTick中printtick数据\r\n\r\n为什么CTP tick数据中的lastVolume都为0？simnow的问题还是需要自己计算？谢谢",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2120/comments",
    "author": "lipan0722",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-09-29T01:32:49Z",
        "body": "因为CTP没有这个字段，大部分交易系统都没有，而是只有volume字段，即全天成交量。\r\n\r\nlast_volume目前主要就是IB家有"
      },
      {
        "user": "lipan0722",
        "created_at": "2019-09-29T03:30:41Z",
        "body": "非常感谢，那就只有使用两个tick之间的volume差异来用了。"
      }
    ]
  },
  {
    "number": 2107,
    "title": "English docs",
    "created_at": "2019-09-23T14:39:43Z",
    "closed_at": "2019-09-24T07:30:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2107",
    "body": "Hi! Thanks for a great project!\r\nDo you plan to translate the documentation into English?",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2107/comments",
    "author": "andrefilimono",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-09-24T02:11:57Z",
        "body": "hi, glad to hear that. We are planning to provide English documents by the first quarter of 2020 now."
      },
      {
        "user": "andrefilimono",
        "created_at": "2019-09-24T07:27:47Z",
        "body": "Thanks for the info. I look forward to it!"
      }
    ]
  },
  {
    "number": 2084,
    "title": "30分钟的分钟线，对有10：15到10：29休息的品种，在10：30的时候生成不了",
    "created_at": "2019-09-11T08:41:19Z",
    "closed_at": "2019-09-12T03:49:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2084",
    "body": "## 环境\r\n\r\nLTS版本和2.0\r\n\r\n## Issue类型\r\nBug\r\n\r\n## 预期程序行为\r\n可以生成10:30的30分钟线\r\n\r\n\r\n## 实际程序行为\r\n无法生成\r\n\r\n## 重现步骤\r\n\r\nLTS版本和2.0的判断逻辑都是\r\n\r\n`if not (bar.datetime.minute + 1) % self.window:`\r\n\r\n从15分到30分休息的时候，就没有29分了，那么在10：29的时候就不生成10:00-10:29的30分钟bar了。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2084/comments",
    "author": "maxsonic",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-09-12T03:49:33Z",
        "body": "自己在on_tick函数中，判断tick时间戳，如果跨越了10:30分，就调用策略内BarGenerator对象的generate函数来强制合成"
      }
    ]
  },
  {
    "number": 2070,
    "title": "策略文件加载失败",
    "created_at": "2019-09-05T14:47:28Z",
    "closed_at": "2019-09-06T00:55:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2070",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: 如Anaconda 18.12 Python 3.7 64位\r\n* vn.py版本: 如v2.0发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\nQuestion\r\n\r\n## 预期程序行为\r\n编写一个策略文件，能从策略下拉中看到这个策略\r\n代码复制的vn.py教程中DemoStrategy\r\n\r\n`from vnpy.app.cta_strategy import CtaTemplate\r\n\r\nclass DemoStrategy(CtaTemplate):\r\n    \"\"\"演示用的简单双均线\"\"\"\r\n​\r\n    # 策略作者\r\n    author = \"Smart Trader\"\r\n​\r\n    # 定义参数\r\n    fast_window = 10\r\n    slow_window = 20\r\n​\r\n    # 定义变量\r\n    fast_ma0 = 0.0\r\n    fast_ma1 = 0.0\r\n    slow_ma0 = 0.0\r\n    slow_ma1 = 0.0\r\n​\r\n    # 添加参数和变量名到对应的列表\r\n    parameters = [\"fast_window\", \"slow_window\"]\r\n    variables = [\"fast_ma0\", \"fast_ma1\", \"slow_ma0\", \"slow_ma1\"]\r\n​\r\n    def __init__(self, cta_engine, strategy_name, vt_symbol, setting):\r\n        \"\"\"\"\"\"\r\n        super().__init__(cta_engine, strategy_name, vt_symbol, setting)\r\n​\r\n        # K线合成器：从Tick合成分钟K线用\r\n        self.bg = BarGenerator(self.on_bar)\r\n​\r\n        # 时间序列容器：计算技术指标用\r\n        #self.am = ArrayManager()\r\n        pass\r\n​\r\n    def on_init(self):\r\n        \"\"\"\r\n        当策略被初始化时调用该函数。\r\n        \"\"\"\r\n        # 输出个日志信息，下同\r\n        self.write_log(\"策略初始化\")\r\n​\r\n        # 加载10天的历史数据用于初始化回放\r\n        self.load_bar(10)\r\n​\r\n    def on_start(self):\r\n        \"\"\"\r\n        当策略被启动时调用该函数。\r\n        \"\"\"\r\n        self.write_log(\"策略启动\")\r\n​\r\n        # 通知图形界面更新（策略最新状态）\r\n        # 不调用该函数则界面不会变化\r\n        self.put_event()\r\n​\r\n    def on_stop(self):\r\n        \"\"\"\r\n        当策略被停止时调用该函数。\r\n        \"\"\"\r\n        self.write_log(\"策略停止\")\r\n​\r\n        self.put_event()\r\n​\r\n    def on_tick(self, tick: TickData):\r\n        \"\"\"\r\n        通过该函数收到Tick推送。\r\n        \"\"\"\r\n        self.bg.update_tick(tick)\r\n​\r\n    def on_bar(self, bar: BarData):\r\n        \"\"\"\r\n        通过该函数收到新的1分钟K线推送。\r\n        \"\"\"\r\n        am = self.am\r\n​\r\n        # 更新K线到时间序列容器中\r\n        am.update_bar(bar)\r\n​\r\n        # 若缓存的K线数量尚不够计算技术指标，则直接返回\r\n        if not am.inited:\r\n            return\r\n​\r\n        # 计算快速均线\r\n        fast_ma = am.sma(self.fast_window, array=True)\r\n        self.fast_ma0 = fast_ma[-1]     # T时刻数值\r\n        self.fast_ma1 = fast_ma[-2]     # T-1时刻数值\r\n​\r\n        # 计算慢速均线\r\n        slow_ma = am.sma(self.slow_window, array=True)\r\n        self.slow_ma0 = slow_ma[-1]\r\n        self.slow_ma1 = slow_ma[-2]\r\n​\r\n        # 判断是否金叉\r\n        cross_over = (self.fast_ma0 > self.slow_ma0 and\r\n                      self.fast_ma1 < self.slow_ma1)\r\n​\r\n        # 判断是否死叉\r\n        cross_below = (self.fast_ma0 < self.slow_ma0 and\r\n                       self.fast_ma1 > self.slow_ma1)\r\n​\r\n        # 如果发生了金叉\r\n        if cross_over:\r\n            # 为了保证成交，在K线收盘价上加5发出限价单\r\n            price = bar.close_price + 5\r\n​\r\n            # 当前无仓位，则直接开多\r\n            if self.pos == 0:\r\n                self.buy(price, 1)\r\n            # 当前持有空头仓位，则先平空，再开多\r\n            elif self.pos < 0:\r\n                self.cover(price, 1)\r\n                self.buy(price, 1)\r\n​\r\n        # 如果发生了死叉\r\n        elif cross_below:\r\n            price = bar.close_price - 5\r\n​\r\n            # 当前无仓位，则直接开空\r\n            if self.pos == 0:\r\n                self.short(price, 1)\r\n            # 当前持有空头仓位，则先平多，再开空\r\n            elif self.pos > 0:\r\n                self.sell(price, 1)\r\n                self.short(price, 1)\r\n​\r\n        self.put_event()\r\n​\r\n    def on_order(self, order: OrderData):\r\n        \"\"\"\r\n        通过该函数收到委托状态更新推送。\r\n        \"\"\"\r\n        pass\r\n​\r\n    def on_trade(self, trade: TradeData):\r\n        \"\"\"\r\n        通过该函数收到成交推送。\r\n        \"\"\"\r\n        # 成交后策略逻辑仓位发生变化，需要通知界面更新。\r\n        self.put_event()\r\n​\r\n    def on_stop_order(self, stop_order: StopOrder):\r\n        \"\"\"\r\n        通过该函数收到本地停止单推送。\r\n        \"\"\"\r\n        pass`\r\n\r\n## 实际程序行为\r\n策略文件strategies.demo_strategy加载失败，触发异常：\r\nTraceback (most recent call last):\r\n  File \"D:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_strategy\\engine.py\", line 760, in load_strategy_class_from_module\r\n    module = importlib.import_module(module_name)\r\n  File \"D:\\vnstudio\\lib\\importlib\\__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 724, in exec_module\r\n  File \"<frozen importlib._bootstrap_external>\", line 860, in get_code\r\n  File \"<frozen importlib._bootstrap_external>\", line 791, in source_to_code\r\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\r\n  File \"D:\\vnpy_models\\strategies\\demo_strategy.py\", line 11\r\n    ​\r\n    ^\r\nSyntaxError: invalid character in identifier\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2070/comments",
    "author": "caimmy",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-09-06T00:55:58Z",
        "body": "不要直接复制微信文章里的代码，请手敲（否则起不到学习效果），否则会有Python代码的对齐问题，导致报错"
      }
    ]
  },
  {
    "number": 2049,
    "title": "No module named \"vnpy.api.mini.vnminimd\"",
    "created_at": "2019-08-28T07:09:45Z",
    "closed_at": "2019-08-29T01:10:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2049",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 18.04\r\n* Anaconda版本: 如Anaconda 18.12 Python 3.7 64位\r\n* vn.py版本: 如v2.0.6发行版\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\npython run.py 不能正常运行\r\n\r\n## 实际程序行为\r\nModuleNotFoundError: No module named \"vnpy.api.mini.vnminimd\"\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2049/comments",
    "author": "ShawnWuzh",
    "comments": [
      {
        "user": "ShawnWuzh",
        "created_at": "2019-08-28T07:37:31Z",
        "body": "我貌似发现原因了，是因为Ubuntu不支持mini api吗？我把run.py的api换成ctp之后就可以用了。不知道是不是因为这个原因"
      },
      {
        "user": "vnpy",
        "created_at": "2019-08-29T01:10:38Z",
        "body": "是的，ubuntu不支持CTP mini"
      }
    ]
  },
  {
    "number": 2033,
    "title": "vnpy是否提供50ETF期权的模拟交易接口？",
    "created_at": "2019-08-21T08:49:13Z",
    "closed_at": "2019-08-22T02:13:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2033",
    "body": "",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2033/comments",
    "author": "EddyEmiya",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-08-22T02:12:59Z",
        "body": "目前DEV分支已有了，SoptGateway可以用于连接CTP的股票期权仿真环境，账号可以通过南华或者中信期货申请"
      }
    ]
  },
  {
    "number": 2012,
    "title": "RQData初始化错误",
    "created_at": "2019-08-08T09:43:02Z",
    "closed_at": "2019-08-09T02:22:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2012",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: 如Anaconda 4.3.1 Python 3.6 64位\r\n* vn.py版本: vnstudio-2.0.6\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\nCTA回测中的“下载数据”功能能够正常使用\r\n\r\n## 实际程序行为\r\n系统提示“数据下载失败，无法获取IF88.CFFEX的历史数据”，在对照 回测模块文档 时发现是：RQData初始化未成功。\r\n注：在测试源码时，发现是...vnpy\\trader\\rqdata.py中的rqdata_all_instruments问题，问题提示：RuntimeError: rqdatac is not initialized。\r\n请问该问题怎么解决？？？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2012/comments",
    "author": "DavieJobs",
    "comments": [
      {
        "user": "LimingFang",
        "created_at": "2019-08-08T10:30:41Z",
        "body": "你的rqdata账号没有设置好"
      },
      {
        "user": "DavieJobs",
        "created_at": "2019-08-08T12:46:42Z",
        "body": "这里用的rqdata账户是收费版的或者要申请试用的账户吗？"
      },
      {
        "user": "LimingFang",
        "created_at": "2019-08-08T14:58:19Z",
        "body": "你没有rqdata使用权怎么可能通过rqdata获取数据，rqdata有一个月的试用期，结束后需要自行购买，数据质量还是很可以的。"
      },
      {
        "user": "DavieJobs",
        "created_at": "2019-08-09T01:56:11Z",
        "body": "好的，明白了  感谢~~（不过文档里似乎没有提到rqdata功能要申请试用&收费，一直以为是程序哪安装错了...）"
      },
      {
        "user": "vnpy",
        "created_at": "2019-08-09T02:22:46Z",
        "body": "具体使用和申请方法，请看公众号vnpy-community的快速入门教程"
      }
    ]
  },
  {
    "number": 2008,
    "title": "vnpy的bar.datetime取值问题",
    "created_at": "2019-08-07T11:07:29Z",
    "closed_at": "2019-09-17T15:22:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2008",
    "body": "## 环境\r\n\r\n* 操作系统: windows 2012 server\r\n* Anaconda版本: python3.7\r\n* vn.py版本: 2.0.6 (dev)\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n\r\n## 阐述\r\n\r\n\r\nvnpy和rqdata交叉的有如下几部分：\r\n1、CTA策略模拟交易盘前初始化:由于策略初始化使用load_bar(n)是使用n个完整的交易日的数据，因此datetime字段是区间起始还是区间末尾都无所谓。\r\n2、策略回测时：\r\n- 回测前的初始化：和模拟交易一样，无影响\r\n- 真正开始交易时：\r\n交易时段用的数据可能是外部csv导入到数据库的数据，也可能是rqdata直接下载到数据库中的数据\r\n  - 前者：csv_loader模块在导入数据时，注释中没有明确规定9:00-9:05的bar的datetime应该是9：05还是9：00，假设vnpy内部统一使用区间前面端点，那么我9：00-9：05的bar.datetime=9:00，那么在策略层可能会有点问题（见后面的话）；；如果我csv文件9:00-9:05的bar.datetime=9:05，那么会与rqdata下载的数据冲突，因为rqdata会在分钟级数据存入数据库时减去一个adjustment，使得datetime为9:00，这两部分数据可能会产生冲突，不一致。\r\n  - 后者：前面提到，如果统一使用时间区间的前面端点作为bar.datetime，由事件驱动框架保证了不可能出现未来的信息，我感觉有可能模糊的地方在于：（以15分钟bar举例）我需要每天在2：00收到最新的bar后（也就是包含了1：45-2：00的信息），利用bar.close去平今。按道理我应该使用2：00-2：15的bar进行撮合，但是实际上当我收到datetime是2：00的bar时，它是2：00-2：15的，因此我相当于在2：15发出我的信号，我对这个有一点点疑问。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2008/comments",
    "author": "LimingFang",
    "comments": [
      {
        "user": "LimingFang",
        "created_at": "2019-08-10T10:44:44Z",
        "body": "补充提问，就是在BarGenerator里，比如15分钟的bar，10：45-11：00的bar数据的datetime字段会是10：45，也就是上面提到的取datetime区间的开头"
      },
      {
        "user": "vnpy",
        "created_at": "2019-09-17T15:22:53Z",
        "body": "Bar的时间戳，本质只是个标识，本身不会影响策略收到数据的顺序，以及T时刻下单，T+1时刻才会撮合的逻辑，不可能导致未来函数。\r\n\r\n导入数据时需要确保历史数据的时间戳规则和vn.py一致，否则的话需要做额外的平移调整。"
      }
    ]
  },
  {
    "number": 2007,
    "title": "历史数据加载了，但是还是显示“成交记录为空，无法计算”",
    "created_at": "2019-08-07T10:08:04Z",
    "closed_at": "2019-08-07T10:24:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2007",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: vnstudio v2.0.6\r\n* vn.py版本: vnstudio v2.0.6\r\n\r\n## Issue类型\r\nQuestion\r\n\r\n## 预期程序行为\r\n回测成功\r\n\r\n## 实际程序行为\r\n回测不成功，显示“成交记录为空，无法计算”\r\n\r\n## 重现步骤\r\n1. 完整代码如下：\r\n```python\r\nfrom vnpy.app.cta_strategy.backtesting import BacktestingEngine, OptimizationSetting\r\nfrom vnpy.app.cta_strategy.strategies.atr_rsi_strategy import (\r\n    AtrRsiStrategy,\r\n)\r\nfrom vnpy.app.cta_strategy.strategies.double_ma_strategy import (\r\n    DoubleMaStrategy,\r\n)\r\n\r\nfrom datetime import datetime\r\n\r\n#%%\r\nengine = BacktestingEngine()\r\nengine.set_parameters(\r\n    vt_symbol=\"XBTUSD.BITMEX\", #本地代码\r\n    interval=\"1m\", # K线周期\r\n    start=datetime(2019, 8, 1), #开始日期\r\n    end=datetime(2019, 8, 30), #结束日期\r\n    rate=0.3/1000000, #手续费率\r\n    slippage=0, #交易滑点\r\n    size=10, #合约乘数\r\n    pricetick=0.5, #价格跳动\r\n    capital=1_000_000, #回测资金\r\n)\r\n# AtrRsiStrategy\r\n# engine.add_strategy(AtrRsiStrategy, {})\r\n# BollChannelStrategy\r\n# DoubleMaStrategy\r\nengine.add_strategy(DoubleMaStrategy, {\r\n    \"fast_window\":20,\r\n    \"slow_window\":80\r\n})\r\n# DualThrustStrategy\r\n# KingKeltnerStrategy\r\n# MultiTimeframeStrategy\r\n# TestStrategy\r\n# TurtleSignalStrategy\r\n\r\n#%%\r\nengine.load_data()\r\nengine.run_backtesting()\r\ndf = engine.calculate_result()\r\nengine.calculate_statistics()\r\nengine.show_chart()\r\n\r\nsetting = OptimizationSetting()\r\nsetting.set_target(\"sharpe_ratio\")\r\nsetting.add_parameter(\"atr_length\", 3, 39, 1)\r\nsetting.add_parameter(\"atr_ma_length\", 10, 30, 1)\r\n\r\n# engine.run_ga_optimization(setting)\r\n\r\n```\r\n2. 直接运行代码\r\n```shell\r\npython backtesting.py\r\n```\r\n3. 最终输出结果：\r\n```shell\r\n2019-08-07 17:59:17.406999      开始加载历史数据\r\n2019-08-07 17:59:18.126817      加载进度：########## [100%]\r\n2019-08-07 17:59:18.126817      历史数据加载完成，数据量：8641\r\n2019-08-07 17:59:18.246799      策略初始化完成\r\n2019-08-07 17:59:18.246799      开始回放历史数据\r\n2019-08-07 17:59:18.256820      历史数据回放结束\r\n2019-08-07 17:59:18.256820      开始计算逐日盯市盈亏\r\n2019-08-07 17:59:18.256820      成交记录为空，无法计算\r\n2019-08-07 17:59:18.256820      开始计算策略统计指标\r\n2019-08-07 17:59:18.256820      ------------------------------\r\n2019-08-07 17:59:18.256820      首个交易日：\r\n2019-08-07 17:59:18.266823      最后交易日：\r\n2019-08-07 17:59:18.266823      总交易日：      0\r\n2019-08-07 17:59:18.276828      盈利交易日：    0\r\n2019-08-07 17:59:18.276828      亏损交易日：    0\r\n2019-08-07 17:59:18.276828      起始资金：      1,000,000.00\r\n2019-08-07 17:59:18.276828      结束资金：      0.00\r\n2019-08-07 17:59:18.276828      总收益率：      0.00%\r\n2019-08-07 17:59:18.276828      年化收益：      0.00%\r\n2019-08-07 17:59:18.276828      最大回撤:       0.00\r\n2019-08-07 17:59:18.276828      百分比最大回撤: 0.00%\r\n2019-08-07 17:59:18.276828      总盈亏：        0.00\r\n2019-08-07 17:59:18.276828      总手续费：      0.00\r\n2019-08-07 17:59:18.276828      总滑点：        0.00\r\n2019-08-07 17:59:18.276828      总成交金额：    0.00\r\n2019-08-07 17:59:18.286829      总成交笔数：    0\r\n2019-08-07 17:59:18.286829      日均盈亏：      0.00\r\n2019-08-07 17:59:18.296839      日均手续费：    0.00\r\n2019-08-07 17:59:18.296839      日均滑点：      0.00\r\n2019-08-07 17:59:18.296839      日均成交金额：  0.00\r\n2019-08-07 17:59:18.296839      日均成交笔数：  0\r\n2019-08-07 17:59:18.296839      日均收益率：    0.00%\r\n2019-08-07 17:59:18.296839      收益标准差：    0.00%\r\n2019-08-07 17:59:18.296839      Sharpe Ratio：  0.00\r\n2019-08-07 17:59:18.296839      收益回撤比：    0.00\r\n```\r\n程序应该是正确执行了，但没有成交记录，请问是不是哪个参数设置错误？\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2007/comments",
    "author": "watano",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-08-07T10:24:02Z",
        "body": "数据量不够，不足以让策略完成初始化计算，请准备更多的数据用于回测"
      },
      {
        "user": "watano",
        "created_at": "2019-08-08T05:47:59Z",
        "body": "好的，我再试试，谢谢"
      },
      {
        "user": "watano",
        "created_at": "2019-08-08T09:01:12Z",
        "body": "我用了一个月的数据，确实可以了，谢谢!"
      }
    ]
  },
  {
    "number": 1992,
    "title": "连接网关",
    "created_at": "2019-08-03T07:33:39Z",
    "closed_at": "2019-08-04T01:49:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1992",
    "body": "在engine的连接网关是 使用 str\r\nconnect(self, setting: dict, gateway_name: str)\r\n\r\n但是在其它一些地方gateway用的是 class Exchange(Enum)\r\n\r\n建议连接网关时兼容两种写法\r\ngateway='BITMEX'\r\n或者 gateway=Exchange.BITMEX\r\n就是gateway_name可以接受两种类型吧。\r\n\r\n应该是在get_gateway加上这个吧\r\n    def get_gateway(self, gateway_name: str):        \r\n        if isinstance(gateway_name, Exchange):\r\n            gateway_name = gateway_name.value\r\n\r\n\r\n也不对。一个是接口，一个是交易所。\r\nBITMEX 的接口和交易所是一样的，\r\n但如ib则不一样，不知道要怎么处理合理。\r\n==========\r\n应该要重新设计一个类。把交易所跟接口对应起来。\r\n比如说传递 Exchange.BITMEX这个交易所，它就知道要走 BITMEX接口。\r\n传递 SMART就知道要走 IB接口。\r\n\r\n================\r\n这样就好了。\r\nExchange作为一个类。里面只有两个字段。 \r\ngateway : str\r\nexchange\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1992/comments",
    "author": "viponedream",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-08-04T01:49:29Z",
        "body": "gateway_name一定是字符串，只有exchange字段才会用Exchange类型的enum，两者不要混淆啊"
      }
    ]
  },
  {
    "number": 1988,
    "title": "bitmex 为啥要延迟一下再请求",
    "created_at": "2019-08-02T07:46:13Z",
    "closed_at": "2019-08-02T10:39:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1988",
    "body": "bitmex的网关，这个地方，为什么要+1\r\n2次请求之前应该没有时间限制。\r\n\r\nself.rate_limit_sleep = int(headers.get(\"Retry-After\", 0)) + 1 ",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1988/comments",
    "author": "xueshufeng",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-08-02T10:39:43Z",
        "body": "这里，请求太快会被加黑名单。而额外增加1秒，对交易没影响，还能有效降低被加黑名单的风险。"
      }
    ]
  },
  {
    "number": 1973,
    "title": "femas 持仓模块盈亏是零",
    "created_at": "2019-07-29T03:34:06Z",
    "closed_at": "2019-07-29T04:07:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1973",
    "body": "femas持仓模块盈亏是零,femas持仓查询结果，没有pnl相关字段，有没有什么办法，本地计算后，更新盈亏\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1973/comments",
    "author": "fengglfengdi",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-07-29T04:07:55Z",
        "body": "pnl = (tick.last_price - position.price) * position.volume * contract.size\r\n\r\n分别获取tick、position、contract的对象后就能算出来了"
      }
    ]
  },
  {
    "number": 1964,
    "title": "order exception",
    "created_at": "2019-07-25T05:35:48Z",
    "closed_at": "2019-07-27T00:53:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1964",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: 如Anaconda 18.12 Python 3.7.4 64位\r\n* vn.py版本: 如v2.0.3发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\nException in thread Thread-1:\r\nTraceback (most recent call last):\r\n  File \"C:\\Python37\\lib\\threading.py\", line 926, in _bootstrap_inner\r\n    self.run()\r\n  File \"C:\\Python37\\lib\\threading.py\", line 870, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"D:\\vnpy_2.0.3_20190614_1\\vnpy\\event\\event_engine.py\", line 59, in _run\r\n    self._process(event)\r\n  File \"D:\\vnpy_2.0.3_20190614_1\\vnpy\\event\\event_engine.py\", line 72, in _process\r\n    [handler(event) for handler in self._handlers[event.type]]\r\n  File \"D:\\vnpy_2.0.3_20190614_1\\vnpy\\event\\event_engine.py\", line 72, in <listcomp>\r\n    [handler(event) for handler in self._handlers[event.type]]\r\n  File \"D:\\vnpy_2.0.3_20190614_1\\vnpy\\app\\cta_strategy\\cta_trading_engine.py\", line 166, in process_order_event\r\n    self.offset_converter.update_order(order_data)\r\n  File \"D:\\vnpy_2.0.3_20190614_1\\vnpy\\app\\cta_strategy\\converter.py\", line 45, in update_order\r\n    position_holding.update_order(order_data)\r\n  File \"D:\\vnpy_2.0.3_20190614_1\\vnpy\\app\\cta_strategy\\converter.py\", line 138, in update_order\r\n    self.calculate_frozen()\r\n  File \"D:\\vnpy_2.0.3_20190614_1\\vnpy\\app\\cta_strategy\\converter.py\", line 200, in calculate_frozen\r\n    frozen = order_data.volume - order_data.traded\r\nTypeError: unsupported operand type(s) for -: 'NoneType' and 'int'\r\n\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1964/comments",
    "author": "sunzhouhong",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-07-26T02:26:04Z",
        "body": "使用的什么交易接口？"
      },
      {
        "user": "sunzhouhong",
        "created_at": "2019-07-26T08:59:15Z",
        "body": "huobi"
      },
      {
        "user": "vnpy",
        "created_at": "2019-07-27T00:53:31Z",
        "body": "请升级到最新的2.0.6试试吧"
      }
    ]
  },
  {
    "number": 1937,
    "title": "海龟策略模板的的加仓逻辑是否是有问题？",
    "created_at": "2019-07-19T14:15:24Z",
    "closed_at": "2019-09-17T15:12:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1937",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Anaconda版本: 如Anaconda 18.12 Python 3.7 64位\r\n* vn.py版本: 如v2.0.5 发行版或者（2019-7-16）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n    首先程序开始没有仓位的时候走以下方法：\r\n```\r\n        if not self.pos:\r\n            self.atr_value = self.am.atr(self.atr_window)\r\n\r\n            self.long_entry = 0\r\n            self.short_entry = 0\r\n            self.long_stop = 0\r\n            self.short_stop = 0\r\n\r\n            self.send_buy_orders(self.entry_up)\r\n            self.send_short_orders(self.entry_down)\r\n```\r\n 但是成交之后\r\n\r\n```\r\n    def on_trade(self, trade: TradeData):\r\n        \"\"\"\r\n        Callback of new trade data update.\r\n        \"\"\"\r\n        if trade.direction == Direction.LONG:\r\n            self.long_entry = trade.price\r\n            self.long_stop = self.long_entry - 2 * self.atr_value\r\n        else:\r\n            self.short_entry = trade.price\r\n            self.short_stop = self.short_entry + 2 * self.atr_value\r\n```\r\n\r\nself.long_entry 的价格为当前成交的价格.\r\n然后如果向上突破当前价格+0.5ATR后开始加仓\r\n```\r\n        elif self.pos > 0:\r\n            self.send_buy_orders(self.long_entry)\r\n\r\n            sell_price = max(self.long_stop, self.exit_down)\r\n            self.sell(sell_price, abs(self.pos), True)\r\n```\r\n此时的t = self.pos / self.fixed_size 已经是<2: \r\n 所以调用了\r\n```\r\nself.buy(price + self.atr_value * 0.5, self.fixed_size, True)\r\n\r\n```\r\n到这里没有问题，但是如果是第二次加仓后， \r\nself.long_entry = 第一次加的价格，也就是刚刚开仓的价格entry_up价格 + 0.5个atr了，\r\n\r\n所以程序中的，第二加仓，加上一个ATR, 那么第二次加仓的价格是entry_up价格+1.5个ATR了。因为程序用没有记录entry_up的价格作为加仓的基准,而是以成交的价格作为加仓的基准，而成交的价格是最近一次的成交价格。\r\n```\r\nself.buy(price + self.atr_value, self.fixed_size, True)\r\n\r\n```\r\n\r\n麻烦指正下。谢谢。\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1937/comments",
    "author": "51bitquant",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-09-17T15:12:15Z",
        "body": "确实这里的逻辑有所错误，应该使用entry_up和entry_down作为后续加仓的基准价格，同时entry_up和entry_down只有在策略没有持仓时，才进行计算更新，一旦有持仓后则在平仓前保持该基准价格不变。"
      }
    ]
  },
  {
    "number": 1930,
    "title": "IB，如何获得“市场深度”的行情数据？",
    "created_at": "2019-07-17T07:32:43Z",
    "closed_at": "2019-07-19T08:53:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1930",
    "body": "群主，您好\r\n\r\nvnpy是1.9.2的版本，IB，如何获得“市场深度”的行情数据？\r\n\r\n在vnpy的 vnib.pi文件里边有函数def reqMktDepth(self, arg0, arg1, arg2, arg3, arg4):的，但是不知道该如何使用，我试着在ibGateway.py文件调用reqMktData的位置也类似调用，但是debug在dr模块中没有看到深度行情数据的，不知道是不是ib的接口没做？\r\n\r\n恳请您百忙中增加这部分功能，谢谢！\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1930/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-07-18T01:50:17Z",
        "body": "1. 需要先购买付费行情的授权\r\n2. 修改接口中的部分逻辑，支持多档"
      },
      {
        "user": "stone3536",
        "created_at": "2019-07-19T08:47:39Z",
        "body": "\r\n基本上是可以解决的了\r\n\r\n在订阅位置调用\r\nself.api.reqMktDepth(self.tickerId, contract, 5, TagValueList())\r\n\r\n在回调位置通过函数\r\ndef updateMktDepth(self, id_, position, operation, side, price, size):\r\n就可以获得深度行情数据的了。\r\n这里就得参照 tickPrice 把数据拼到 5 档上边的了。这个位置处理还是有点儿繁琐的，不仅要考虑怎么更好的加到tick上边，tickPrice的价格好像和深度的1档有时候有点儿差异的，ib技术同事目前现在也确认不了。\r\n\r\n\r\n感谢群主的指点，谢谢！"
      },
      {
        "user": "stone3536",
        "created_at": "2019-07-19T08:53:00Z",
        "body": "可以的话建议在vnpy的2.0.6以上版本支持深度行情数据，放到通用5档上边就好了。"
      },
      {
        "user": "stone3536",
        "created_at": "2019-07-19T09:26:30Z",
        "body": "补充下，\r\nIB回复了，回复内容如下：\r\n我们和欧洲的API部门确认了一下，正像电话中所说的一样reqMktDepth返回的1层数据是没有经过处理（非snapshot），所以和reqMktData的数据并不一致。 \r\n"
      }
    ]
  },
  {
    "number": 1905,
    "title": "vnpy2.0.5下的各种setting.json文件模板",
    "created_at": "2019-07-07T14:54:28Z",
    "closed_at": "2019-07-19T13:28:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1905",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Anaconda版本: 如Anaconda 18.12 Python 3.7 64位\r\n* vn.py版本: 如v2.0.5发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n能否提供一个各个app下的setting.json文件的模板。 另外就是程序入口自己初始参数example能否多点demo呢/\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1905/comments",
    "author": "51bitquant",
    "comments": [
      {
        "user": "51bitquant",
        "created_at": "2019-07-08T03:50:25Z",
        "body": "另外最好提供下各个模块的使用的demo, 这样对于新手入门会更好。谢谢。"
      },
      {
        "user": "vnpy",
        "created_at": "2019-07-19T13:28:04Z",
        "body": "直接通过图形界面加载运行一次后，就会在用户目录下的.vntrader中生成（xx_setting.json），比如：\r\n\r\nC:\\users\\administrator\\.vntrader\\cta_strategy_setting.json\r\n\r\n然后参考其中的数据修改。"
      }
    ]
  },
  {
    "number": 1866,
    "title": "关于临时目录 log文件",
    "created_at": "2019-06-26T14:15:20Z",
    "closed_at": "2019-06-30T09:13:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1866",
    "body": "目前的目录是这样的。\r\nvnpy/api\r\nvnpy/trader\r\n我觉得可以再建一个 vnpy/var专门存放各种临时文件\r\n如vnpy/var/log\r\nvnpy/var/temp 等等\r\n这样整个vnpy的文件在哪里一找就明白。\r\n并且这个 var目录可以随意删除。需要的时候它自己建立。\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1866/comments",
    "author": "viponedream",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-06-30T09:13:23Z",
        "body": "临时文件目前默认位于用户目录下的.vntrader目录中。\r\n\r\n以我的Windows为例：\r\n> C:\\users\\administrator\\.vntrader\r\n\r\n对于Mac和Linux系统，也会使用默认的用户目录。\r\n\r\n同时用户也可以手动在某一文件夹创建.vntrader目录，在此目录下启动VN Trader时就会将该目录作为运行时目录。"
      }
    ]
  },
  {
    "number": 1845,
    "title": "为什么自己封装出来vnctpmd.pyd和官方自带的pyd大小不一样呢",
    "created_at": "2019-06-18T06:00:45Z",
    "closed_at": "2019-06-18T15:33:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1845",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Anaconda版本: 如Anaconda 18.12 Python 3.7 64位\r\n* vn.py版本: 如v2.0发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n以前直接拿官方的用的，最近尝试自己按照教程封装API，结果发现自己封出来的小一些，6.3.15也不敢拿实盘账号随便测试啊\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1845/comments",
    "author": "buermen",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-06-18T15:33:57Z",
        "body": "可能是编译器问题、pybind11库版本问题、等等。。。确定功能一致就行"
      },
      {
        "user": "uspizza",
        "created_at": "2019-10-12T14:19:04Z",
        "body": "@buermen\r\n我也想从vnpy里面自己学着封装ctp的接口，\r\n由于本人刚刚开始学python，有一些不太清楚的地方\r\n想问一下，大神，能否加个qq，向您咨询。。谢谢，我的QQ是11315349，不胜感激"
      }
    ]
  },
  {
    "number": 1837,
    "title": "同时订阅两百多个标的QT界面很卡，能把TickMonitor改为分页显示吗？",
    "created_at": "2019-06-15T13:44:55Z",
    "closed_at": "2019-07-02T15:08:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1837",
    "body": "能把TickMonitor改为分页显示吗？比如每一页只显示100条记录（每一页显示的记录数量可以由用户设置），超过100条记录则进行多页显示。用户可以通过点击“首页”、“上一页”、“下一页”、末页、“跳转”按钮加载想要显示的记录。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1837/comments",
    "author": "xldistance",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-06-16T06:34:07Z",
        "body": "1. 可以啊，自己基于TickMonitor扩展下20分钟的事情\r\n2. 区区200个标的不应该卡，你是不是开了自动调整列宽？"
      },
      {
        "user": "xldistance",
        "created_at": "2019-06-16T06:59:07Z",
        "body": "ui相关代码都没改的"
      },
      {
        "user": "vnpy",
        "created_at": "2019-06-17T02:41:28Z",
        "body": "是2.0版本的吗？还是之前1.9.2的"
      },
      {
        "user": "xldistance",
        "created_at": "2019-06-18T00:18:37Z",
        "body": "是2.0.3版本的，订阅两百以内的标的不卡......"
      },
      {
        "user": "vnpy",
        "created_at": "2019-07-02T15:08:34Z",
        "body": "尝试同时订阅CTP的全部合约，没有卡顿现象，请检查是不是做了什么其他操作吧，比如对某些列进行了排序、自动调整列宽等"
      }
    ]
  },
  {
    "number": 1827,
    "title": "关于精细化bar回测的一个建议",
    "created_at": "2019-06-13T07:30:15Z",
    "closed_at": "2019-06-14T01:38:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1827",
    "body": "## 环境\r\n略\r\n\r\n## Issue类型\r\nEnhancement\r\n\r\n## 存在问题\r\n1.原版回测引擎，使用bar回测时，买入不低于bar的最低价，卖出不高于bar的最高价即判定撮合成功。\r\n2.因此回测时会有很多笔撮合都正好在bar的最低/最高价上，但实际上因为不是对手价，实盘时是无法成交的。\r\n\r\n## 改进建议\r\n以上情况下，改用tick回测又比较耗时划不来，建议使用折中的方法，在BAR数据上区分出O/H/L/C的bid和ask，并更改bar回测的算法，买入只在aks，卖出只在bid，从而提高BAR回测的准确性。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1827/comments",
    "author": "unlimitnight0",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-06-14T01:38:36Z",
        "body": "这个思路确实不错，但实际情况是除非你自己有TICK数据，去合成这种特殊的K线，否则数据服务商提供的数据是没有这些字段的"
      },
      {
        "user": "unlimitnight0",
        "created_at": "2019-06-14T01:51:30Z",
        "body": "是的，用于回测的数据源必须用tick，其实对于不是特别长的策略来说，普通的BAR数据很鸡肋，回测根本不准，对于波动小不活跃的品种就更不准了。\r\n"
      }
    ]
  },
  {
    "number": 1799,
    "title": "VN Trader 打开后无法链接，log也没有反应，重复链接会报 ‘’python 已停止‘’ ",
    "created_at": "2019-06-06T02:44:12Z",
    "closed_at": "2019-06-07T06:22:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1799",
    "body": "打开vn trader后没有任何反应。链接CTP输入SimNow的模拟账户后依旧无反应。第二次输入账号链接就报错 说是 python 已停止。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1799/comments",
    "author": "zoulei18337120325",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-06-07T06:22:56Z",
        "body": "2.0.3版本目前不支持SimNOW"
      },
      {
        "user": "yuanjh6",
        "created_at": "2019-07-08T13:43:14Z",
        "body": "请问有添加sinmon支持计划么？一般来说实盘前都是需要跑测试的，vnpy还有其他测试方案么？还是说只有用19的版本才能进行测试，2.0不提供测试方案"
      }
    ]
  },
  {
    "number": 1797,
    "title": "csv载入模块载入的数据库 名称一直都是db_bar_data",
    "created_at": "2019-06-05T14:38:03Z",
    "closed_at": "2019-06-06T01:17:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1797",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: 如Anaconda 18.12 Python 3.7 64位\r\n* vn.py版本: 如v2.0.3\r\n\r\n## Issue类型\r\n三选一：Question\r\n我分别载入了rb， if 等好几给表格，但是vnpy数据下一直只有一个documnet ，名字是db_bar_data.\r\n我记得1.8版本的数据库载入后的document的命名都是相应的symbol名字.\r\n数据库用的是mongodb\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1797/comments",
    "author": "jxhuliqun138",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-06-06T01:17:15Z",
        "body": "2.0的数据库范式已经修改，改为使用ORM模式，每种数据类型一个表，不再是每个合约一个表了"
      }
    ]
  },
  {
    "number": 1794,
    "title": "请问vnpy2.0.3能否用python3.6 64位",
    "created_at": "2019-06-05T08:37:32Z",
    "closed_at": "2019-06-05T10:18:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1794",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: 如Anaconda 18.12 Python 3.7 64位\r\n* vn.py版本: 如v2.0.3\r\n\r\n## Issue类型\r\n三选一：Question\r\nrequirements.txt 中的依赖有： dataclasses; python_version<=\"3.6\" \r\n是否说vnpy2.0.3 能使用python3.6  64位版本、？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1794/comments",
    "author": "jxhuliqun138",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-06-05T10:18:56Z",
        "body": "可以使用，请自行安装dataclasses模块"
      }
    ]
  },
  {
    "number": 1792,
    "title": "可以简要介绍以下，各个分支的作用和目的吗？",
    "created_at": "2019-06-05T07:26:23Z",
    "closed_at": "2019-06-05T10:20:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1792",
    "body": "主要是不明白\r\n\r\nchart\r\n\r\ntora\r\n\r\ndev\r\n\r\n这三个分支",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1792/comments",
    "author": "aQuaYi",
    "comments": [
      {
        "user": "cooooo",
        "created_at": "2019-06-05T09:28:25Z",
        "body": "dev是主开发分支，chart,tora是开发用临时分支"
      },
      {
        "user": "vnpy",
        "created_at": "2019-06-05T10:20:25Z",
        "body": "* master：发布分支\r\n* dev：主开发分支\r\n* 1.9.2-LTS：v1.9.2的长期支持分支\r\n* 其他：对应功能的细分开发分支"
      },
      {
        "user": "aQuaYi",
        "created_at": "2019-06-06T00:39:33Z",
        "body": "谢谢"
      }
    ]
  },
  {
    "number": 1787,
    "title": "requirements要求3.6，但是python版本要求3.7",
    "created_at": "2019-06-04T07:16:27Z",
    "closed_at": "2019-06-05T02:55:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1787",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Anaconda版本: 如Anaconda 18.12 Python 3.7 64位\r\n* vn.py版本: 如v2.0发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1787/comments",
    "author": "839588378",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-06-05T02:55:11Z",
        "body": "3.6安装dataclasses库后也能运行，但vn.py官方更推荐3.7"
      }
    ]
  },
  {
    "number": 1769,
    "title": "能否在项目主页上添加\"代码覆盖率徽章（badge）\"？",
    "created_at": "2019-05-31T06:40:23Z",
    "closed_at": "2019-06-02T04:49:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1769",
    "body": "我想参与到 vnpy 的开发中来。\r\n现阶段的由于编程能力和 Python 的熟悉程度有限，准备从编写测试文件下手。\r\n发现主页还没有\"代码覆盖率徽章（badge）\"。\r\n请问能否添加一下\"代码覆盖率徽章（badge）\"呢？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1769/comments",
    "author": "aQuaYi",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-06-02T04:49:00Z",
        "body": "暂无计划，作为实盘交易系统，vn.py的大量测试无法直接通过单元测试这种简单的方法覆盖"
      }
    ]
  },
  {
    "number": 1755,
    "title": "穿透式监管api docker化问题",
    "created_at": "2019-05-29T02:18:33Z",
    "closed_at": "2019-05-29T02:50:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1755",
    "body": "## 环境\r\n\r\n* 操作系统: linux docker\r\n* Anaconda版本: 任意\r\n* vn.py版本: 任意穿透式监管版本\r\n\r\n## Issue类型\r\nQuestion\r\n\r\n因为穿透式监管需要获取系统信息（具体哪些信息未知），在docker下无法获取到相关信息导致一直报Decrypt handshake data failed，猜测是因为docker无法获取到系统信息的缘故，实体机测试无异常。\r\n以下问题不知是否有人帮忙解答下，相关问题是否有人得到有效解决：\r\n\r\n1. 穿透式监管具体会获取哪些系统信息？\r\n2. 是否有人在docker、阿里云、虚拟机等虚拟环境成功使用ctp穿透式监管版本。（当前我使用的是虚拟机测试通过，虚拟机能成功获取bios等信息）\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1755/comments",
    "author": "lzd324",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-05-29T02:50:51Z",
        "body": "1. CPU序列号、硬盘序列号、内外网IP、MAC、主分区情况\r\n2. 阿里云可以测试跑通，docker不清楚了，原则上是需要使用实体机器进行测试和记录"
      }
    ]
  },
  {
    "number": 1730,
    "title": "回测数据下载不了",
    "created_at": "2019-05-21T11:03:06Z",
    "closed_at": "2019-05-22T02:57:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1730",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Anaconda版本: 如Anaconda 18.12 Python 3.7 64位\r\n* vn.py版本: 如v2.0发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n18:56:50\t初始化CTA回测引擎\r\n18:56:50\t策略文件加载完成\r\n18:57:01\t----------------------------------------\r\n18:57:01\tIF88.CFFEX-1m开始下载历史数据\r\n18:57:01\t数据下载失败，无法获取IF88.CFFEX的历史数据\r\n18:57:08\t----------------------------------------\r\n18:57:08\tIF88.CFFEX-1m开始下载历史数据\r\n18:57:08\t数据下载失败，无法获取IF88.CFFEX的历史数据\r\n18:57:33\t----------------------------------------\r\n18:57:33\tBTC-USDT-1m开始下载历史数据\r\n18:59:30\t已有任务在运行中，请等待完成\r\n18:59:30\t已有任务在运行中，请等待完成\r\n19:01:31\t已有任务在运行中，请等待完成\r\n\r\n下载数据一直卡在这里，无法继续进行下去，我用流量监控没有流量下行，是否能提供进度显示？还是我操作方法有误？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1730/comments",
    "author": "adzcsx2",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-05-22T02:57:04Z",
        "body": "BTC-USDT的合约代码有误，没有交易所后缀，所以下载卡住了"
      }
    ]
  },
  {
    "number": 1661,
    "title": "vnpy2 什么时候集成zipline?",
    "created_at": "2019-05-05T14:53:06Z",
    "closed_at": "2019-05-07T10:27:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1661",
    "body": "RT",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1661/comments",
    "author": "czonghui",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-05-06T00:45:45Z",
        "body": "研究了一个多月的时间，目前选型上偏向RQAlpha，设计和适配性都更好，但尚未最终确定"
      },
      {
        "user": "KobeZhao",
        "created_at": "2019-05-06T01:49:38Z",
        "body": "quantOS怎么样呢"
      },
      {
        "user": "zfsamzfsam",
        "created_at": "2019-05-06T07:48:48Z",
        "body": "对接BackTrader"
      },
      {
        "user": "vnpy",
        "created_at": "2019-05-07T10:26:26Z",
        "body": "> quantOS怎么样呢\r\n\r\n没人维护了"
      },
      {
        "user": "vnpy",
        "created_at": "2019-05-07T10:27:01Z",
        "body": "> 对接BackTrader\r\n\r\n看了下BackTrader的策略模块设计和CTA引擎是重复的类型，对接没有意义"
      }
    ]
  },
  {
    "number": 1645,
    "title": "今后vnpy要对接股市，那么数据库如何处理复权数据问题，是否应支持自定义添加字段？",
    "created_at": "2019-04-28T07:28:50Z",
    "closed_at": "2019-07-02T14:52:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1645",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: Anaconda 18.12 Python 3.7 64位\r\n* vn.py版本: 2.02\r\n\r\n## Issue类型\r\nEnhancement\r\n\r\n## 疑问\r\n1、根据app.csvloader，vnpy的数据类型构成是\"Datetime\",\"Open\",\"High\",\"Low\",\"Close\",\"Volume\"。对于股票来说，信号的计算一般使用前复权数据，但若股票发生股票除权，其先的除权数据都应得到全部的更新，是否应该给予一定的数据库自动更新处理机制。\r\n2、是否应添加\"adjopen\",\"adjlow\"等字段？\r\n另外，vnpy的数据导入是否应借鉴一下backtrader，在数据导入重除了要求的输入之外可以自定义一些其他的数据字段，如宏观数据等？\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1645/comments",
    "author": "TraderWithPython",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-07-02T14:52:01Z",
        "body": "vn.py核心定位还是交易系统，策略这块重点也是在实盘交易方面，除权除息类的业务逻辑深入来看十分负责，需要专业数据团队或者数据服务商来解决，并不适合在vn.py中处理"
      }
    ]
  },
  {
    "number": 1640,
    "title": "MongoDB 写入数据库出错，名称不应该使用vt_symbol的点连接方式",
    "created_at": "2019-04-26T11:28:51Z",
    "closed_at": "2019-05-01T14:53:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1640",
    "body": "# 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Anaconda版本: 如Anaconda 18.12 Python 3.7 64位\r\n* vn.py版本: 如v2.0发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\nBug\r\n## 预期程序行为\r\ndatabase的名称是用vt_symbol 造成不能入库失败\r\n\r\n## 实际程序行为\r\n无法将数据写入MongoDB数据库\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\npymongo.errors.InvalidName: database names cannot contain the character '.'\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1640/comments",
    "author": "ikale",
    "comments": [
      {
        "user": "xldistance",
        "created_at": "2019-04-26T12:55:26Z",
        "body": "我也觉得用_连接symbol和exchange比较好，rb1910_SHFE这样子"
      },
      {
        "user": "vnpy",
        "created_at": "2019-04-26T13:41:21Z",
        "body": "什么版本的vn.py？现在2.0.2的数据库范式不是用vt_symbol做数据库名的"
      },
      {
        "user": "ikale",
        "created_at": "2019-04-27T04:24:38Z",
        "body": "2.0.2数据库名在哪定义和创建的？"
      },
      {
        "user": "xldistance",
        "created_at": "2019-04-27T04:38:58Z",
        "body": "> 什么版本的vn.py？现在2.0.2的数据库范式不是用vt_symbol做数据库名的\r\n\r\nvtsymbol也不应该用.连接symbol和exchange。。。。。。"
      },
      {
        "user": "vnpy",
        "created_at": "2019-04-28T01:10:40Z",
        "body": "> 2.0.2数据库名在哪定义和创建的？\r\n\r\nvnpy/trader/database目录下"
      }
    ]
  },
  {
    "number": 1579,
    "title": "关于 cta_strategy backtesting 中回测结果计算的相关问题",
    "created_at": "2019-04-11T05:26:32Z",
    "closed_at": "2019-04-11T06:25:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1579",
    "body": "我看 vnpy2 中的  cta_strategy backtesting 回测结果计算中，去掉了 vnpy1 中的 tradingResults 的部分，这块是怎么考虑的？\r\n\r\n我理解 vnpy1 中 tradingResults 就是做交易配对，把开、平交易配对为交易结果，方便做一些指标核算，比如交易胜率等。是这样吗？\r\n\r\n不过如果下单时把单子拆的比较小，用 vnpy1 里的配对方法就会让 tradingResults 变的比较凌乱，我理解没错吧？\r\n\r\n@vnpy ",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1579/comments",
    "author": "Gwill",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-04-11T06:25:32Z",
        "body": "1. 去掉的主要原因是发现大家用的不多，另外确实按日统计的模式更容易理解一些，为了简化代码就去了\r\n2. 如果每次下单交易数量不是固定的，存在频繁的加减仓操作，是会导致记录比较乱一些，但不会影响程序的统计（毕竟程序就擅长这个）"
      },
      {
        "user": "Gwill",
        "created_at": "2019-04-11T08:06:12Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 1577,
    "title": "提问，实盘中有用vnpy做日内稳定盈利的吗？",
    "created_at": "2019-04-10T12:39:54Z",
    "closed_at": "2019-04-11T00:46:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1577",
    "body": "比如做螺纹钢，甲醇日内交易，当日平仓，对市场竞争难度毫无概念，谢谢指教\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1577/comments",
    "author": "ssh352",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-04-11T00:46:22Z",
        "body": "交易能否赚钱，一个看策略，一个看运维以及管理经验，这些都不是软件能解决的问题，另外想聊策略的话题可以去官方交流QQ群讨论：262656087"
      }
    ]
  },
  {
    "number": 1571,
    "title": "实盘VnTrader登录，持仓出现了1条异常信息",
    "created_at": "2019-04-09T13:24:19Z",
    "closed_at": "2019-04-10T01:56:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1571",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 7\r\n* Anaconda版本: 如Anaconda 2 (32bit) Python 2.7 64位\r\n* vn.py版本: v1.9.0\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n正确显示持仓信息\r\n\r\n## 实际程序行为\r\n出现了1条异常信息，如图\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1571/comments",
    "author": "kumapy",
    "comments": [
      {
        "user": "kumapy",
        "created_at": "2019-04-09T13:38:02Z",
        "body": "贴不上来图片，我语言描述一下\r\n\r\n在VnTrader持仓信息窗口，显示了1条奇异信息（下划线为了文本对齐制表）：\r\n合约代码_______________名称__________________方向___持仓__昨持仓__冻结量__价格__持仓盈亏___接口\r\nSP m1909&m1909____SP m1909&m1909__L______1______1_________ _________ ______0.0__________CTP\r\n\r\n是否与我同时持有m1909的1手多单和1手空单有关？"
      },
      {
        "user": "kumapy",
        "created_at": "2019-04-09T13:41:38Z",
        "body": "补充：\r\n后台窗口未出现任何异常信息或提示\r\n退出再次登录，上述信息仍持续显示"
      },
      {
        "user": "vnpy",
        "created_at": "2019-04-10T01:56:56Z",
        "body": "这个信息来源于CTP柜台，是大商所的价差合约，应该是因为你同时持有两条腿造成的，如果平仓其中某一条腿应该会自动消失掉。"
      }
    ]
  },
  {
    "number": 1565,
    "title": "您好，请问v1.9.2 LTS版本会更新满足穿透式监管的api吗，我看到2.0.1已经更新了",
    "created_at": "2019-04-08T01:30:43Z",
    "closed_at": "2019-04-09T02:44:16Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1565",
    "body": "\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1565/comments",
    "author": "buermen",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-04-08T03:04:28Z",
        "body": "后续我们也会提供一次更新的，请放心吧，v1.9.2的支持会到今年年底"
      },
      {
        "user": "buermen",
        "created_at": "2019-04-08T06:36:21Z",
        "body": "> 后续我们也会提供一次更新的，请放心吧，v1.9.2的支持会到今年年底\r\n\r\n好的好的，感谢"
      }
    ]
  },
  {
    "number": 1543,
    "title": "drEngine tick.time判断",
    "created_at": "2019-04-02T07:30:18Z",
    "closed_at": "2019-05-15T10:23:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1543",
    "body": "drEngine.py中if not tick.datetime这段需要try吧，和mainengine中一样，有时候收到的格式不对导致出错",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1543/comments",
    "author": "walkingsnail",
    "comments": [
      {
        "user": "somewheve",
        "created_at": "2019-04-09T08:41:01Z",
        "body": "自己改下就行了呗。我也遇到过。自己改下就好了"
      }
    ]
  },
  {
    "number": 1519,
    "title": "CTA回测模块能不能增加账户资金的实时计算",
    "created_at": "2019-03-25T06:24:55Z",
    "closed_at": "2019-03-26T01:58:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1519",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Anaconda版本: 如Anaconda 18.12 Python 3.7 64位\r\n* vn.py版本: 如v2.0发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Enhancement\r\n\r\n## 预期程序行为\r\n在用CTA策略回测的时候，有使用到账户资金变化的需求。目前回测系统是在回测完之后，对订单进行总结，计算盈亏，能不能在每个bar的时候，都能获取当前的资金量。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1519/comments",
    "author": "aijy",
    "comments": [
      {
        "user": "aijy",
        "created_at": "2019-03-25T06:26:29Z",
        "body": "我用的回测系统是2.0.1版本的"
      },
      {
        "user": "vnpy",
        "created_at": "2019-03-26T01:58:42Z",
        "body": "目前无计划，策略应该负责的是去正确捕捉交易机会执行交易，而资金相关的配置则应在实盘交易时每天由交易员来负责管理。"
      }
    ]
  },
  {
    "number": 1504,
    "title": "请问vnpy是否有股票数据源的推送模块?",
    "created_at": "2019-03-20T00:46:22Z",
    "closed_at": "2019-03-20T03:47:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1504",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: 如Anaconda 18.12 Python 2.7\r\n* vn.py版本: 如v1.8\r\n\r\n## Issue类型\r\n三选一：Question\r\n华宝pi，它独立出来一个包，但是它的软件 策略代码框架很不规范， 同时软件不稳定仿真都不通过。\r\n我指的vnpy框架里面是否有对接股票数据源， 如何tushare、新浪数据又或者其他券商的全推送？\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1504/comments",
    "author": "jxhuliqun138",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-03-20T03:47:41Z",
        "body": "1. 证券数据和期货不同，实时行情不经过交易所授权就进行分发，是违法违规行为，交易所有权追究责任\r\n2. 用户自己可以通过tushare访问新浪数据实时行情，但内嵌于vn.py或者华宝PI中就属于上面定义的“违法违规”了"
      }
    ]
  },
  {
    "number": 1503,
    "title": "安装2.0的问题",
    "created_at": "2019-03-19T23:44:18Z",
    "closed_at": "2019-03-20T03:48:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1503",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Anaconda版本: 如Anaconda 18.12 Python 3.6 64位\r\n* vn.py版本: 如v2.0发行版或者dev branch 20190320（下载日期）\r\n\r\n前面几步安装好后,\r\n进入之前解压文件夹下   并没有发显   examples/VnTrader 目录\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1503/comments",
    "author": "eyelivermore",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-03-20T03:48:47Z",
        "body": "2.0不再提供examples目录，可以自己写启动脚本run.py或者通过VNStation来启动"
      }
    ]
  },
  {
    "number": 1495,
    "title": "请教大佬，为什么会收到时间为11：30的tick",
    "created_at": "2019-03-18T05:14:42Z",
    "closed_at": "2019-03-19T01:37:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1495",
    "body": "我中午12点连接ctp，收到了上午的最后一根tick，但是时间为什么是11：30呢，vnpy的bar的开始时间是9：00，那么最后一根tick的时间不应该是11：29吗，求大佬解惑，还有收到的一些bar的datetime的时间是像这样2019-03-18 09:02:04.500000，秒后面还带有.500000，这是因为我的网络延迟的原因吗\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1495/comments",
    "author": "buermen",
    "comments": [
      {
        "user": "xldistance",
        "created_at": "2019-03-18T05:52:20Z",
        "body": "11:30的BAR是交易所推的，.500是毫秒，上期所的有，郑商所没有，大商所不是固定的毫秒"
      },
      {
        "user": "vnpy",
        "created_at": "2019-03-19T01:37:01Z",
        "body": "交易所普遍在交易时段结束后，会推送至少1个tick，用于标识交易结束状态"
      }
    ]
  },
  {
    "number": 1444,
    "title": "请问vnpy 哪个版本开始支持 华宝pi的",
    "created_at": "2019-03-05T09:18:40Z",
    "closed_at": "2019-03-06T01:23:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1444",
    "body": "## 环境\r\n操作系统: Windows 10\r\nAnaconda版本: 如Anaconda 18.12 Python 3.7 64位\r\nvn.py版本: v1.8\r\n\r\n## Issue类型\r\n三选一：Question\r\n请问vnpy 哪个版本开始支持 华宝pi的， 1.8版本支持吗？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1444/comments",
    "author": "jxhuliqun138",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-03-06T01:23:37Z",
        "body": "华宝PI是华宝证券专有的vn.py定制版本，用户可以开发策略但不能访问底层API，具体请联系vn.py框架交流群里华宝的人了解。"
      }
    ]
  },
  {
    "number": 1434,
    "title": "请问华宝证券的话是否有资金门槛要求？",
    "created_at": "2019-03-04T07:34:06Z",
    "closed_at": "2019-03-05T02:27:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1434",
    "body": "## 环境\r\n\r\n操作系统: Windows 10\r\nAnaconda版本: 如Anaconda 18.12 Python 3.7 64位\r\nvn.py版本: v1.8\r\n\r\n## Issue类型\r\n三选一：Question\r\n请问vnpy对接的华宝证券，是否有资金门槛要求。为什么我刚电话华宝官方，他们说不支持vnpy程序化交易?\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1434/comments",
    "author": "jxhuliqun138",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-03-05T02:27:57Z",
        "body": "没有资金要求，华宝PI为特殊客户端，华宝客服电话是不知道的，请在vn.py交流群里找华宝的人咨询"
      }
    ]
  },
  {
    "number": 1430,
    "title": "请问vnpy支持普通散户作股票吗",
    "created_at": "2019-03-04T03:15:24Z",
    "closed_at": "2019-03-04T03:52:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1430",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Anaconda版本: 如Anaconda 18.12 Python 3.7 64位\r\n* vn.py版本: 如v1.8\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n资金小， 无法用里面支持的券商api的方式， 请问vnpy支持普通散户作股票吗\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1430/comments",
    "author": "jxhuliqun138",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-03-04T03:52:03Z",
        "body": "对于小资金的散户推荐使用华宝PI"
      },
      {
        "user": "jxhuliqun138",
        "created_at": "2019-03-04T06:11:09Z",
        "body": "你好，我刚致电了华宝的客服，他们表示没有支持vnpy啊。 确定代码里已经支持了吗？ 华宝api没有资金要求限制 是吧，多少钱都能交易？"
      },
      {
        "user": "vnpy",
        "created_at": "2019-03-05T02:26:56Z",
        "body": "华宝PI是华宝证券定制的量化交易平台，基于vn.py开发，没有资金要求开户就能用"
      }
    ]
  },
  {
    "number": 1428,
    "title": "求教CTA框架使用Algo算法进行执行的思路",
    "created_at": "2019-03-04T01:36:25Z",
    "closed_at": "2019-03-04T03:49:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1428",
    "body": "是使用algo的rpc模块吗？还是自己在CTA Strategy的OnTick等函数里进行算法的实现？\r\n谢谢\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1428/comments",
    "author": "yhmickey",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-03-04T03:49:31Z",
        "body": "建议自行在onTick函数中实现，这样能管理所有的细节。"
      }
    ]
  },
  {
    "number": 1419,
    "title": "这么快的2。0就出来了。好像那个datarecorder录制数据的还没有？ ",
    "created_at": "2019-02-28T18:30:39Z",
    "closed_at": "2019-05-07T04:09:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1419",
    "body": "这么快的2。0就出来了。好像那个datarecorder录制数据的还没有？ \r\n发现一个问题。\r\n现在的peewee好像没办法在运行过程中根据情况建立一个表，它是写死了表名的，假如我们要一个symbol一个表名，不知道怎么写了。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1419/comments",
    "author": "viponedream",
    "comments": [
      {
        "user": "viponedream",
        "created_at": "2019-02-28T20:32:30Z",
        "body": "好像可以这样写，这样一个品种就建立一张表\r\n\r\ntable = 'SPY1'\r\ntable = get_table(table)\r\n\r\ndef get_table(table):\r\n    \"\"\"动态生成类，建立数据表\"\"\"\r\n    _table = type(table, (DbBarData,), {})\r\n    if not _table.table_exists():\r\n        _table.create_table()\r\n    return _table\r\n\r\n"
      },
      {
        "user": "vnpy",
        "created_at": "2019-03-01T02:57:47Z",
        "body": "1. DataRecorder会加上的，估计在后面一些\r\n2. 基于ORM的模式，就是所有数据放一张表里了，基于vt_symbol, interval, datetime来确定时间K线的唯一性"
      },
      {
        "user": "viponedream",
        "created_at": "2019-03-01T09:39:44Z",
        "body": "这样一张表会太大，不方便吧。\r\n不如 bar.5m.cu或者 bar.5m.cu1901，不要了可以直接删除。也方便得多。mode.interval.vtsymbol这个形式可能会更好。\r\n全部放进一张表，想着就不方便啊。\r\n"
      },
      {
        "user": "vnpy",
        "created_at": "2019-03-04T03:46:19Z",
        "body": "这个是目前ORM的设计模式了，某一种类型的数据都归为一张表，如果后续发现不方便再改了"
      },
      {
        "user": "gzskybridge",
        "created_at": "2019-03-21T00:41:06Z",
        "body": "急需 DataRecorder 的源码，但我没有以前的版本了，请问可以给一个链接吗？"
      },
      {
        "user": "xldistance",
        "created_at": "2019-04-02T01:15:29Z",
        "body": "> 急需 DataRecorder 的源码，但我没有以前的版本了，请问可以给一个链接吗？\r\n\r\n1.9.2LTS里面有"
      },
      {
        "user": "vnpy",
        "created_at": "2019-05-07T04:09:15Z",
        "body": "已完成DataRecorder移植"
      }
    ]
  },
  {
    "number": 1417,
    "title": "请教:2.0中数字货币功能还未添加?",
    "created_at": "2019-02-28T08:48:04Z",
    "closed_at": "2019-03-07T07:01:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1417",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Anaconda版本: 如Anaconda 18.12 Python 3.7 64位\r\n* vn.py版本: 如v2.0发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\nQuestion\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1417/comments",
    "author": "LSeiei",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-03-01T02:58:30Z",
        "body": "接口将会逐步添加，移植工作量比较大"
      }
    ]
  },
  {
    "number": 1416,
    "title": "请教关于ontrade处理逻辑",
    "created_at": "2019-02-28T06:49:27Z",
    "closed_at": "2019-03-01T06:13:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1416",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 16.04\r\n* Anaconda版本: Python 2.7 64位\r\n* vn.py版本: 如v1.9发行版\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n请教下onTrade的推送逻辑是怎样的？比如有个委托下单量为10手，分为3个order成交：4，3，3\r\n我的理解是OnTrade只会推送一次，表明委托成功，成交十手。请教这个理解正确吗？\r\n还是会推送三次，成交量分别为4,3,3?\r\n以下是我在CTA_STRATEGY Log中的成交记录，同一时间返回了两条同步数据记录，貌似onTrade被调用了两次，这个行为符合预期吗？我尝试在模拟盘下单，每次都是所有报单都成交，无法模拟实际交易。\r\n\r\n2019-02-25 14:53:00,496  INFO: CTA_STRATEGY\t策略p05发送委托，p1905，空，2@4664.0\r\n2019-02-25 14:53:01,487  INFO: CTA_STRATEGY\t策略p05_同步数据保存成功，当前持仓-1\r\n2019-02-25 14:53:01,487  INFO: CTA_STRATEGY\t策略p05同步数据保存成功，当前持仓-2\r\n希望各位老手多多帮忙，多谢！\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1416/comments",
    "author": "handsomehu",
    "comments": [
      {
        "user": "keel1982",
        "created_at": "2019-02-28T08:34:06Z",
        "body": "当然是三笔推送"
      },
      {
        "user": "vnpy",
        "created_at": "2019-03-01T02:59:13Z",
        "body": "成交推送和委托更新都会分为三笔"
      },
      {
        "user": "handsomehu",
        "created_at": "2019-03-01T06:13:44Z",
        "body": "多谢两位厘清逻辑。\r\nTrading well!"
      }
    ]
  },
  {
    "number": 1407,
    "title": "When will the Version 2.0 be published?",
    "created_at": "2019-02-25T08:51:52Z",
    "closed_at": "2019-03-07T07:00:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1407",
    "body": "When will the Version 2.0 be published and any guidelines for the installation for the Version 2.0?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1407/comments",
    "author": "51bitquant",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-02-26T01:07:23Z",
        "body": "2.0 will be released this week"
      },
      {
        "user": "51bitquant",
        "created_at": "2019-02-26T01:19:45Z",
        "body": "Hope VNPY can give some instruction for the  installation guideline for  the macOS"
      },
      {
        "user": "vnpy",
        "created_at": "2019-03-07T07:00:13Z",
        "body": "done"
      }
    ]
  },
  {
    "number": 1404,
    "title": "vnpy 2.0大约什么时候提供release版本和对应文档呢？",
    "created_at": "2019-02-21T06:33:54Z",
    "closed_at": "2019-02-22T03:32:30Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1404",
    "body": "",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1404/comments",
    "author": "Paleozoic",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-02-22T03:32:30Z",
        "body": "目前已经收尾vnpy和vnstation的2.0开发，正在做VNConda的，不出意外程序应该下周发布，然后开始文档的编写。"
      }
    ]
  },
  {
    "number": 1393,
    "title": "策略参数疑问",
    "created_at": "2019-02-19T10:04:32Z",
    "closed_at": "2019-02-20T01:19:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1393",
    "body": "有些问题请教作者：\r\n\r\n1、策略参数和变量为什么要写在策略类里，而不是init里呢？这样做的目的是什么呢？\r\n\r\n2、这样如果在配置策略时，当不同的合约配置了同一个策略类，是否会发生不同对象之间参数共享的问题？\r\n\r\n但是，vnpy2.0好像在界面添加和修改策略参数时，即使是基于同一个策略类，参数互不影响。 有点糊涂。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1393/comments",
    "author": "yhmickey",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-02-20T01:19:03Z",
        "body": "1. 写在策略类里面，GUI组件在弹出参数配置框的时候（此时策略对象尚未初始化创建出来），知道应该提供哪些配置字段\r\n2. 不会，每个合约上运行的策略是一个独立的对象\r\n\r\n建议看看Python的对象和类概念的基础。"
      }
    ]
  },
  {
    "number": 1390,
    "title": "examples/ServerClient",
    "created_at": "2019-02-19T07:46:38Z",
    "closed_at": "2019-02-23T01:33:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1390",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n作者您好，有一个问题想问一下您，在用examples/ServerClient这个例子时，客户端和服务端各自依赖的环境有什么不同吗\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1390/comments",
    "author": "yjxxin",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-02-23T01:33:44Z",
        "body": "例子中所依赖的环境是没有区别的，理想状态下可以Server放在服务器上无需安装启动GUI界面，Client放在本地电脑"
      }
    ]
  },
  {
    "number": 1324,
    "title": "新人求问：日线数据或者小时数据如何做回测",
    "created_at": "2019-01-07T13:27:30Z",
    "closed_at": "2019-01-08T04:32:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1324",
    "body": "因为看到案例都是1min数据导入，如果用1hour数据，或者1day数据做回测，要注意什么呢\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1324/comments",
    "author": "yhmickey",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-01-08T04:32:17Z",
        "body": "增加其他周期的数据库命名，然后把数据插入到对应的数据库里就行"
      }
    ]
  },
  {
    "number": 1316,
    "title": "接口问题",
    "created_at": "2019-01-02T07:42:08Z",
    "closed_at": "2019-01-03T01:39:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1316",
    "body": "vnpy支持股票接口嘛\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1316/comments",
    "author": "Wc30",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-01-03T01:39:07Z",
        "body": "目前支持XTP，2019年会加上所有国内接口的支持"
      },
      {
        "user": "Wc30",
        "created_at": "2019-01-03T01:40:10Z",
        "body": "好的，多谢"
      }
    ]
  },
  {
    "number": 1306,
    "title": "请问日线合成是自己更改BarGenerator对吗",
    "created_at": "2018-12-27T03:32:55Z",
    "closed_at": "2018-12-27T06:49:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1306",
    "body": "## 环境\r\n\r\n* Windows 7\r\n*Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.9发行版\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n请问日线的合成是要自己修改BarGenerator函数是吗，目前vnpy没有提供日线合成的算法是吗\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1306/comments",
    "author": "KilimanjaroFreeman",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-12-27T06:49:50Z",
        "body": "是的，日线要么通过RQData之类的数据服务直接下载，要么就自己合成吧"
      }
    ]
  },
  {
    "number": 1305,
    "title": "关于：南华期货ctp tick LastPrice 时常为0 #1301",
    "created_at": "2018-12-26T07:11:59Z",
    "closed_at": "2018-12-27T00:30:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1305",
    "body": "继续#1301 \r\n\r\n联系了南华，LastPrice 时常为0的数据来自于他们的新版CTP服务器（他们称之为”CTP行情“服务器，以区别于（旧版的）”Front“服务器）。针对我的问题，他们提议两个选择：\r\n1）连接到他们的”Front“服务器，但他们的”Front“服务器会在不久的将来也切换为”CTP行情“；\r\n2）改用新版的CTP，建议是2018.1版本。\r\n\r\n针对建议1），连接”Front“服务器确实没有出现LastPrice 时常为0的情况。\r\n\r\n针对建议2），我下载了CTP2018.1版，但发现和vnpy的包装存在很大差异，个人升级看来不很轻松。\r\n\r\n但升级看来是必须的，据说明年中旬，ZF要求所有期货商上一款更新的CTP版本，目前它已在测试阶段。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1305/comments",
    "author": "XilinJia",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-12-27T00:30:52Z",
        "body": "1. 新版本全面上线时，vn.py会及时更新\r\n2. 如果现在着急用，可以尝试自己封装升级"
      }
    ]
  },
  {
    "number": 1303,
    "title": "价差的设置",
    "created_at": "2018-12-25T11:02:49Z",
    "closed_at": "2018-12-26T00:46:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1303",
    "body": "里面的 ratio, multiplier是什么意思呢？\r\n如果有多条被动腿的，该怎么设置啊？\r\n\r\n\r\n[\r\n    {\r\n    \"name\": \"TA.901-905-909\",\r\n\r\n    \"activeLeg\":\r\n        {\r\n            \"vtSymbol\": \"TA901\",\r\n            \"ratio\": 1,\r\n            \"multiplier\": 1.0,\r\n            \"payup\": 2\r\n        },\r\n\r\n    \"passiveLegs\": [\r\n        {\r\n            \"vtSymbol\": \"TA905\",\r\n            \"ratio\": -1,\r\n            \"multiplier\": -1.0,\r\n            \"payup\": 2\r\n        },\r\n        {\r\n            \"vtSymbol\": \"TA909\",\r\n            \"ratio\": -1,\r\n            \"multiplier\": -1.0,\r\n            \"payup\": 2\r\n        }\r\n    ]\r\n}\r\n\r\n\r\n]",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1303/comments",
    "author": "viponedream",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-12-26T00:46:48Z",
        "body": "multiplier是计算价差的价格时候，用的乘数，没有考虑合约大小。\r\n\r\nratio是真实下单的时候，用的乘数，需要考虑合约大小。"
      }
    ]
  },
  {
    "number": 1295,
    "title": "ImportError: dynamic module does not define module export function (PyInit_vnctpmd)",
    "created_at": "2018-12-15T12:11:14Z",
    "closed_at": "2018-12-16T03:30:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1295",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 18.04\r\n* Anaconda版本: 如Anaconda 4.5.11, Python 3.5\r\n* vn.py版本: 1.9\r\n## Issue类型\r\nBug:\r\n我在安装完VNPY后运行 example/VnTrader中的run.py\r\n\r\n报错如下：\r\n\r\nTraceback (most recent call last):\r\n  File \"run.py\", line 28, in <module>\r\n    from vnpy.trader.gateway import (ctpGateway, ibGateway)\r\n  File \"/home/yanmin/anaconda3/lib/python3.5/site-packages/vnpy-1.9.0-py3.5.egg/vnpy/trader/gateway/ctpGateway/__init__.py\", line 5, in <module>\r\n    from .ctpGateway import CtpGateway\r\n  File \"/home/yanmin/anaconda3/lib/python3.5/site-packages/vnpy-1.9.0-py3.5.egg/vnpy/trader/gateway/ctpGateway/ctpGateway.py\", line 16, in <module>\r\n    from vnpy.api.ctp import MdApi, TdApi, defineDict\r\n  File \"/home/yanmin/anaconda3/lib/python3.5/site-packages/vnpy-1.9.0-py3.5.egg/vnpy/api/ctp/__init__.py\", line 4, in <module>\r\n    from .vnctpmd import MdApi\r\nImportError: dynamic module does not define module export function (PyInit_vnctpmd)\r\n\r\n有什么办法解决么？谢谢指点\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1295/comments",
    "author": "shuyuping",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-12-16T03:30:38Z",
        "body": "目前C++类的接口尚未支持python 3，将在1月底上线。"
      }
    ]
  },
  {
    "number": 1289,
    "title": "关于VNPY.STENGINE的vtSymbol不能重复的改写问题 & ORDER/TRADE/POS的更新问题",
    "created_at": "2018-12-13T14:17:58Z",
    "closed_at": "2018-12-14T02:37:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1289",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n1.\r\n个人理解的vtSymbol之所以在stEngine里不能重复的原因，\r\n是因为StDataEngine.legDict, StDataEngine.vtSymbolSpreadDict, SniperAlgo.legDict需要根据tick.symbol来更新spread和leg的price,order,trade,pos\r\n不知道这么理解对不对？\r\n\r\n2.\r\n问题：\r\n如果第1点理解正确的话，那么有个问题：\r\nprocessOrderEvent是直接根据order.symbol来更新leg,spread的order\r\nprocessTradeEvent是直接根据trade.symbol来更新leg,spread的order\r\n也就是说STENGINE没有保存orderID，不是根据orderID来判断是哪个策略的ORDER/TRADE？\r\n\r\n那如果同时运行了CTAENGINE和STENGINE，CTAENGINE里运行了IF1812，STENGINE的LEG里也有IF1812。\r\n那么此时CTAENGINE的IF1812下单了的话，在STENGINE.LEG里不是也会把LEG的ORDRE/TRADE给错误更新了吗？？\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1289/comments",
    "author": "UtorYeung",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-12-14T02:37:59Z",
        "body": "没错，目前上层模块中的几个策略模块，是不能同时在一个账户上运行的：CtaStrategy/SpreadTrading/OptionMaster/AlgoTrading/TradeCopy\r\n\r\n因为本来也不应该一个账户同时跑这几个完全不同类型的应用"
      }
    ]
  },
  {
    "number": 1288,
    "title": "share/cmake/Modules/FindBoost.cmake:2100 (message):",
    "created_at": "2018-12-12T11:00:14Z",
    "closed_at": "2018-12-13T04:34:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1288",
    "body": "## 环境\r\n\r\n* 操作系统: MacOS 10.14.2 \r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 64位\r\n* vn.py版本: 1.9.1 20181212（下载日期）\r\n\r\n## Issue类型\r\n三选一：Question\r\n当运行bash build.sh文件时，出现以下报错信息：\r\nCMake Error at /usr/local/Cellar/cmake/3.13.1/share/cmake/Modules/FindBoost.cmake:2100 (message):\r\n  Unable to find the requested Boost libraries.\r\n\r\n  Boost version: 1.68.0\r\n\r\n  Boost include path: /usr/local/include\r\n\r\n  Could not find the following Boost libraries:\r\n\r\n          boost_python\r\n\r\n  Some (but not all) of the required Boost libraries were found.  You may\r\n  need to install these additional Boost libraries.  Alternatively, set\r\n  BOOST_LIBRARYDIR to the directory containing Boost libraries or BOOST_ROOT\r\n  to the location of Boost.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:83 (find_package)\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/Users/dongt/vnpy/vnpy/api/ctp/build/CMakeFiles/CMakeOutput.log\".\r\nmaxdongtaodeMBP:ctp dongt$ pwd\r\n\r\n请问该如何解决\r\n\r\n该问题会导致后续无法安装CTP等工具。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1288/comments",
    "author": "moxiaoying",
    "comments": [
      {
        "user": "cooooo",
        "created_at": "2018-12-12T14:37:18Z",
        "body": "CTP不支持mac"
      },
      {
        "user": "vnpy",
        "created_at": "2018-12-13T04:34:36Z",
        "body": "楼上正解"
      }
    ]
  },
  {
    "number": 1284,
    "title": "回测的那个海龟可以用在实盘或模拟中吗？",
    "created_at": "2018-12-08T19:07:25Z",
    "closed_at": "2018-12-24T12:40:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1284",
    "body": "感觉用在VNPY的模拟或实盘不容易啊。对目前的ctaengine什么都不兼容。\r\n但是，假如一个策略，没法用于实盘，为了回测而回测，又有什么意义呢",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1284/comments",
    "author": "viponedream",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-12-10T02:10:55Z",
        "body": "好问题：\r\n1. 海龟策略本来就是一套CTA策略的开发理念框架，以及一个基于这套框架的策略研究开发样例。海龟的交易信号生成基于日线，第二天盘中触发后由交易员打电话去执行（上古时代），所以原版的海龟本来就没有自动化交易实盘的成分在里面（毕竟靠手动也能执行的不错）\r\n2. 海龟的实盘执行，和回测一样无法通过常规的通用模块来实现，目前计划在v2.0后推出海龟专用的“海龟算法交易”模块，用于实现其实盘自动化交易的功能"
      }
    ]
  },
  {
    "number": 1236,
    "title": "errors calling mainEngine.dbUpdate",
    "created_at": "2018-11-14T15:29:21Z",
    "closed_at": "2018-11-17T01:55:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1236",
    "body": "The two statement:\r\n```\r\n        flt = {'datetime': bar.datetime}\r\n        self.mainEngine.dbUpdate(DAILY_DB_NAME, vtSymbol, bar, flt, True)\r\n```\r\ngot these errors.  bar is valid as it works insertData with it.  What is wrong?\r\n\r\n```\r\n    self.mainEngine.dbUpdate(DAILY_DB_NAME, vtSymbol, bar, flt, True)\r\n  File \"/home/user/Software/vnpy-1.9.0/vnpy/trader/vtEngine.py\", line 252, in dbUpdate\r\n    collection.replace_one(flt, d, upsert)\r\n  File \"/home/user/anaconda2/lib/python2.7/site-packages/pymongo/collection.py\", line 917, in replace_one\r\n    common.validate_ok_for_replace(replacement)\r\n  File \"/home/user/anaconda2/lib/python2.7/site-packages/pymongo/common.py\", line 478, in validate_ok_for_replace\r\n    validate_is_mapping(\"replacement\", replacement)\r\n  File \"/home/user/anaconda2/lib/python2.7/site-packages/pymongo/common.py\", line 444, in validate_is_mapping\r\n    \"collections.Mapping\" % (option,))\r\nTypeError: replacement must be an instance of dict, bson.son.SON, or other type that inherits from collections.Mapping\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1236/comments",
    "author": "XilinJia",
    "comments": [
      {
        "user": "XilinJia",
        "created_at": "2018-11-14T23:49:16Z",
        "body": "```\r\n        flt = {'date': bar.date}\r\n        self.mainEngine.dbDelete(DAILY_DB_NAME, vtSymbol, flt)\r\n        self.insertData(DAILY_DB_NAME, vtSymbol, bar)\r\n```\r\nCalling dnDelete and insertData works, but dbUpdate doesn't work."
      },
      {
        "user": "XilinJia",
        "created_at": "2018-11-15T01:59:37Z",
        "body": "So from mongodb documentation, it says that both insert_one and replace_one require a BSON document. bar is of vtBarData which is not in BSON format.  I don't understand how insert_one actually works."
      },
      {
        "user": "vnpy",
        "created_at": "2018-11-17T01:55:35Z",
        "body": "Please read the code.\r\n\r\nThe insertData function of DrEngine will only insert the data.__dict__ dict into MongoDB, not data object itself."
      }
    ]
  },
  {
    "number": 1215,
    "title": "错误信息时间显示错误",
    "created_at": "2018-11-06T05:15:48Z",
    "closed_at": "2018-11-13T15:35:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1215",
    "body": "运行VnTrader后，如果出现交易错误，在重新启动VnTrader后，出现错误的时间会显示为VnTrader重启的时间。\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1215/comments",
    "author": "XilinJia",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-11-07T02:52:26Z",
        "body": "这是因为CTP的报错信息中，是没有带时间戳的，目前看没有很好的处理办法"
      }
    ]
  },
  {
    "number": 1204,
    "title": "请问如何往vnpy里面添加一个api接口？",
    "created_at": "2018-10-31T05:47:39Z",
    "closed_at": "2018-11-01T02:11:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1204",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.8\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n我这边想添加一个股票交易的 某证券api接口， 请问有相应的demo或者文档可以参考一下吗？  或则你们这边可以帮忙添加支持一下吗？ 可以考虑有偿。\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1204/comments",
    "author": "jxhuliqun138",
    "comments": [
      {
        "user": "hexstarry",
        "created_at": "2018-10-31T12:51:36Z",
        "body": "正好在做这个事情，而且已经完成了一部分，现在可以在vntrader中显示账户，持仓，下单，成交，可撤，每秒推送一次这些信息。\r\n\r\n你需要做的是添加一个券商gateway ，可以直接复制一个ctpgateway，然后function name不用改，直接这里功能实现，然后在主程序里add gateway 就可以了。"
      },
      {
        "user": "jxhuliqun138",
        "created_at": "2018-11-01T01:33:23Z",
        "body": "我们目前想加入 络町 平台的券商接口， 所以还需要在vnpy/api 目录下加入自己的 dll库之类的， 但是我们团队没有很擅长C++的人， 请问你们能否帮忙添加一下 "
      },
      {
        "user": "vnpy",
        "created_at": "2018-11-01T02:11:28Z",
        "body": "如果是用户量比较多的柜台或者交易系统，可以发相关资料到vn.py@foxmail.com，官方团队会加到开发计划里。\r\n\r\n如果是比较小众的平台，就请自行联系社区里的开发者付费开发吧。"
      },
      {
        "user": "hexstarry",
        "created_at": "2018-11-01T13:02:50Z",
        "body": ">           我们目前想加入 络町 平台的券商接口， 所以还需要在vnpy/api 目录下加入自己的 dll库之类的， 但是我们团队没有很擅长C++的人， 请问你们能否帮忙添加一下\r\n\r\n\r\n这个其实不难的，就是python使用ctypes调用dll就可以了，现在券商接口大家大都这么写的，我现在用的通达信的dll.\r\n"
      }
    ]
  },
  {
    "number": 1200,
    "title": "请问vnpy和第三的量化软件mc、tb、文华财经哪个会更快",
    "created_at": "2018-10-30T03:27:39Z",
    "closed_at": "2018-10-30T04:57:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1200",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.8\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n请问vnpy和第三的量化软件mc、tb、文华财经哪个会更快\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1200/comments",
    "author": "jxhuliqun138",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-10-30T04:57:38Z",
        "body": "1. 从驱动架构看：vn.py采用事件驱动，收到tick后系统自身的处理逻辑很少，用户写的策略可以立即反应（执行交易、或者去自行合成K线）\r\n2. 从软件功能看：vn.py没有自带K线显示（高CPU开销）和数据采集入库功能（高IO开销），只有交易相关的业务\r\n3. 从编程语言看：MC/TB/文华都是使用自身的脚本，vn.py基于Python，两者可能差别不大，如果会用Cython将核心逻辑转化到C级别，则vn.py优势巨大了\r\n\r\n但是以上功能也都有相应的代价：没有K线、需要运维数据服务、需要使用配置文件等等。\r\n\r\n以上言论只是作者的个人观点，仅供参考。"
      },
      {
        "user": "jxhuliqun138",
        "created_at": "2018-10-30T05:36:45Z",
        "body": "Cython将核心逻辑转化到C级别   指的仅仅是转化 strategy里面的策略吗， 还是说还有其他地方需要转化的？"
      },
      {
        "user": "vnpy",
        "created_at": "2018-10-31T03:32:29Z",
        "body": "转换热点逻辑部分的代码，一般转换策略里的就足够"
      }
    ]
  },
  {
    "number": 1198,
    "title": "请问vnpy如何对代码和策略进行加密?",
    "created_at": "2018-10-29T11:57:28Z",
    "closed_at": "2018-10-30T05:00:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1198",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n*Anaconda 4.0.0 \r\n* vn.py版本v1.8\r\n## Issue类型\r\n三选一：Question\r\n请问如何把vnpy代码加密，或者说把策略加密，不被反编译",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1198/comments",
    "author": "jxhuliqun138",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-10-30T05:00:38Z",
        "body": "简单的方案可以尝试用nuitka或者cython，将核心的类或者函数编译成二进制的pyd文件，基本就很难破解或者反编译了。\r\n\r\n更进一步就是用C++重写核心逻辑，用boost.python封装，虽然麻烦点但是还能带来性能极大的提升。"
      }
    ]
  },
  {
    "number": 1184,
    "title": "Linux 运行python run.py 报错 cannot connect to X server",
    "created_at": "2018-10-19T09:22:02Z",
    "closed_at": "2018-10-20T05:45:40Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1184",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1184/comments",
    "author": "wkpzwy",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-10-20T05:45:40Z",
        "body": "请先检查你是否启动了LINUX的图形界面"
      }
    ]
  },
  {
    "number": 1172,
    "title": "如何实现对手价交易？",
    "created_at": "2018-10-17T00:42:54Z",
    "closed_at": "2018-10-17T07:40:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1172",
    "body": "## 环境\r\n\r\n* 操作系统:Ubuntu 16.04 on docker\r\n* Anaconda版本: Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 1.9.0\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\nvnpy是否支持对手价发单？ 如果不支持的话该如何自己实现？\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1172/comments",
    "author": "patrick-bercow",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-10-17T07:40:22Z",
        "body": "在CtaTemplate的onTick回调函数里，收到tick推送后记录当前的bidPrice1, askPrice1，后面发单以此价格发就行"
      },
      {
        "user": "patrick-bercow",
        "created_at": "2018-10-17T07:42:39Z",
        "body": "非常感谢！"
      }
    ]
  },
  {
    "number": 1168,
    "title": "多交易账户登录怎么做？",
    "created_at": "2018-10-15T09:32:22Z",
    "closed_at": "2018-10-16T06:44:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1168",
    "body": "想要实现多交易账户同时登录，能不能提供一个思路，主界面要不要进行更改，比如可以从账户A切换到账户B",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1168/comments",
    "author": "yjxxin",
    "comments": [
      {
        "user": "patrick-bercow",
        "created_at": "2018-10-16T05:37:28Z",
        "body": "CtaTrading 应该没有这个问题 ， 程序化可以启动多个实例。   界面没有研究过"
      },
      {
        "user": "vnpy",
        "created_at": "2018-10-16T06:44:42Z",
        "body": "在VnTrader目录下复制几个ctpGateway，然后gatewayName命名为CTP1/CTP2/CTP3，在run.py中一起加载就行了"
      },
      {
        "user": "yjxxin",
        "created_at": "2018-10-16T08:25:01Z",
        "body": "那多个CTP账户是不是也放在多个json文件里面？委托或者持仓界面是不是要加个账户列以区分多个账户？"
      },
      {
        "user": "vnpy",
        "created_at": "2018-10-17T07:42:01Z",
        "body": "1. 对的，放在多个json里\r\n2. 不用，接口名CTP1、CTP2等就标识了每个账户了"
      },
      {
        "user": "yjxxin",
        "created_at": "2018-10-25T11:59:46Z",
        "body": "1. CtpGateway类实际上已提供了非常好的接口封装，简单说，一个该类的实例即为一个账户，所以这里面的改动并不多（其他交易接口由于没有用到所以没有试，但相信大同小异）\r\n    a) 修改构造函数接口，增加一个参数以区分要实例化的接口是行情账户接口还是交易账户接口，若是前者，只需创建mdAPI，否则mdAPI和tdAPI都需要创建（原因很简单，我们的多账户系统只需要针对交易部分，而行情部分完全是统一的，当然如果要统一对待也可以，多点开销而已）\r\n\r\n2. 相应的，定义一个数据结构（如list）来存储账户，如行情账户1个和交易账户若干，每个账户的信息，如地址、账号、密码、brokerID等，可进一步定义第二层数据结构（如dict）来存放。定义好以后可将其存于文件（如有安全性顾虑可考虑以加密方式存储而在登录时动态解密等设计）；\r\n\r\n3. 在mainEngine的initGateway方法中读取上述定义的数据结构（或从文件中读取），遍历并通过addGateway方法依次实例化ctp gateway，最终存储于该类的一个字典中（如self.gatewayDict）\r\n\r\n4. 连接行情服务器时可以直接调用mainEngine中的connect方法，但mainEngine中需要定义另一个方法来实现仅连接交易服务器的功能。当然事实上也可以通过修改connect方法的接口来达到同样的目的。此外，关于account、position的轮询方式我根据自己的需求做了一些微调，这不是重点就不叙述了。\r\n您好，我想问一下，如果我以上面这种方法做多账户登录可不可以，还是要做一些其他方面的修改，谢谢！"
      }
    ]
  },
  {
    "number": 1148,
    "title": "ctaEngine.py里面定义的self.stopOrderDict[stopOrderID]除了保存stopoder之外看不出有什么实际用途吧",
    "created_at": "2018-10-03T17:09:30Z",
    "closed_at": "2018-10-04T14:49:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1148",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1148/comments",
    "author": "silent494529371",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-10-04T14:49:10Z",
        "body": "主要就是保存StopOrder用于回测完成后的数据分析"
      }
    ]
  },
  {
    "number": 1145,
    "title": "想请问下1：回测double_ma均线策略时候，5,10日均线值等变量序列保存在哪里:2；日志系统的输出文件位置在哪里，就是temp吗",
    "created_at": "2018-09-30T16:02:53Z",
    "closed_at": "2018-10-04T14:48:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1145",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1145/comments",
    "author": "wkpzwy",
    "comments": [
      {
        "user": "xldistance",
        "created_at": "2018-10-02T00:49:51Z",
        "body": "\\vnpy\\trader\\temp"
      },
      {
        "user": "wkpzwy",
        "created_at": "2018-10-02T05:28:11Z",
        "body": "谢谢。。那均线变量序列怎么保存呢\r\n"
      },
      {
        "user": "xldistance",
        "created_at": "2018-10-04T02:31:46Z",
        "body": "要保存干嘛，策略直接调用不就可以了"
      },
      {
        "user": "vnpy",
        "created_at": "2018-10-04T14:48:00Z",
        "body": "均线变量的序列是没有保存的，每次调用ArrayManager.ma方法时会重新计算，如果需要访问每次计算的序列数据，可以采用\r\n\r\nay = am.ma(20, array=True)\r\n\r\n来获得"
      }
    ]
  },
  {
    "number": 1137,
    "title": "为什么日志系统设计成为单件且只有一个输出文件？",
    "created_at": "2018-09-27T06:33:04Z",
    "closed_at": "2018-09-29T11:42:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1137",
    "body": "日志系统目前设计为单件且只有一个输出文件\r\n如果想独立记录交易日志、持仓日志、发出指令、策略日志怎么办\r\n现在都记录在一个文件里\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1137/comments",
    "author": "leodo",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-09-29T11:42:31Z",
        "body": "可以根据需求创建多个LogEngine（位于vnpy/trader/vtEngine.py中），然后使用不同的LogEngine来记录日志就行"
      }
    ]
  },
  {
    "number": 1136,
    "title": "tradeDic记录策略变量序列报错",
    "created_at": "2018-09-25T15:23:20Z",
    "closed_at": "2018-09-26T09:16:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1136",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\nTraceback (most recent call last):\r\n  File \"dual_thrust.py\", line 47, in <module>\r\n    print 'TradeID: %s, Time: %s, Direction:%s, Price: %s, Volume: %s, LongEntry: %s' \r\n% (d['tradeID'],d['dt'],d['direction'],d['price'],d['volume'],d['longEntry'])\r\nKeyError: 'longEntry'",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1136/comments",
    "author": "wkpzwy",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-09-26T09:16:35Z",
        "body": "tradeDict中保存的是VtTradeData对象，具体的可用字段可以在vtObject.py中查看，没有longEntry字段"
      }
    ]
  },
  {
    "number": 1134,
    "title": "自己创建策略notebook运行报错",
    "created_at": "2018-09-25T15:09:53Z",
    "closed_at": "2018-09-26T09:17:24Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1134",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\nImportError                               Traceback (most recent call last)\r\n<ipython-input-2-10a3f1b18e69> in <module>()\r\n      2 from __future__ import division\r\n      3 from vnpy.trader.app.ctaStrategy.ctaBacktesting import BacktestingEngine\r\n----> 4 from vnpy.trader.app.ctaStrategy.strategy.strategyStock import StockStrategy\r\n      5 if __name__ == '__main__':\r\n      6 \r\n\r\nImportError: No module named strategyStock",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1134/comments",
    "author": "wkpzwy",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-09-26T09:17:24Z",
        "body": "请将strategyStock放到你的运行时目录下，然后直接\r\n\r\nfrom strategyStock import StockStrategy"
      }
    ]
  },
  {
    "number": 1132,
    "title": "ImportError: twsapi.so: cannot open shared object file: No such file or directory",
    "created_at": "2018-09-24T08:15:15Z",
    "closed_at": "2018-09-25T01:19:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1132",
    "body": "## 环境\r\n\r\n* 操作系统:  Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n \r\n\r\n## Issue类型\r\nparallels@ubuntu:~/vnpy-1.9.0/examples/VnTrader$ python run.py\r\nTraceback (most recent call last):\r\n  File \"run.py\", line 28, in <module>\r\n    from vnpy.trader.gateway import (ctpGateway, ibGateway)\r\n  File \"/home/parallels/anaconda2/lib/python2.7/site-packages/vnpy-1.9.0-py2.7.egg/vnpy/trader/gateway/ibGateway/__init__.py\", line 5, in <module>\r\n    from .ibGateway import IbGateway\r\n  File \"/home/parallels/anaconda2/lib/python2.7/site-packages/vnpy-1.9.0-py2.7.egg/vnpy/trader/gateway/ibGateway/ibGateway.py\", line 21, in <module>\r\n    from vnpy.api.ib import *\r\n  File \"/home/parallels/anaconda2/lib/python2.7/site-packages/vnpy-1.9.0-py2.7.egg/vnpy/api/ib/__init__.py\", line 4, in <module>\r\n    from .vnib import *\r\nImportError: twsapi.so: cannot open shared object file: No such file or directory",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1132/comments",
    "author": "799964990",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-09-25T01:19:23Z",
        "body": "在LINUX下使用，需要重新编译vnpy.api.ib接口才行，在解压目录下运行build.sh应该就可以自动编译"
      },
      {
        "user": "799964990",
        "created_at": "2018-09-25T09:04:11Z",
        "body": "> 在LINUX下使用，需要重新编译vnpy.api.ib接口才行，在解压目录下运行build.sh应该就可以自动编译\r\n\r\n运行了build.sh,还是报同样的错"
      }
    ]
  },
  {
    "number": 1131,
    "title": "linux deepin系统下订阅CTP行情不成功",
    "created_at": "2018-09-24T07:16:58Z",
    "closed_at": "2018-09-25T01:15:20Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1131",
    "body": "## 环境\r\n\r\n* 操作系统: deepin15.5\r\n* Anaconda版本: Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 1.8\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n\r\n## 实际程序行为\r\nCTP行情订阅成功，但是没有返回行情数据\r\n\r\n\r\n## 重现步骤\r\nctpGateway.py:\r\n    def subscribe(self, subscribeReq):\r\n        \"\"\"订阅合约\"\"\"\r\n        if self.loginStatus:\r\n            a=self.subscribeMarketData(str(subscribeReq.symbol))\r\n            print(str(subscribeReq.symbol),a)\r\n        self.subscribedSymbols.add(subscribeReq)\r\n\r\n增加了订阅返回输出：log为：\r\n2018-09-24 15:05:36,285  INFO: CTP\t行情服务器登录完成\r\n('j1901', 0)\r\n('j1901', 0)\r\n('j1901', 0)\r\n\r\n但是GUI没有显示行情\r\nerror id=\"NONE\" value=\"0\" prompt=\"CTP:正确\"\r\n\r\n后续不知道怎么查回调有没有触发\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1131/comments",
    "author": "dofish",
    "comments": [
      {
        "user": "dofish",
        "created_at": "2018-09-24T07:33:29Z",
        "body": " def onRtnDepthMarketData(self, data):\r\n        \"\"\"行情推送\"\"\"\r\n        # 过滤尚未获取合约交易所时的行情推送\r\n        symbol = data['InstrumentID']\r\n        print(symbol,\"data in\")\r\n        if symbol not in symbolExchangeDict:\r\n            print(\"data lose\")\r\n            return\r\n\r\nlog显示有数据进来\r\n('j1901', 'data in')\r\ndata lose\r\n('j1901', 'data in')\r\ndata lose\r\n('j1901', 'data in')\r\ndata lose\r\n\r\n # 过滤尚未获取合约交易所时的行情推送\r\n这句是什么意思？？"
      },
      {
        "user": "cooooo",
        "created_at": "2018-09-24T14:10:07Z",
        "body": "非交易时间无行情推送"
      },
      {
        "user": "dofish",
        "created_at": "2018-09-25T03:20:48Z",
        "body": "> 非交易时间无行情推送\r\n\r\n确实是交易服务器没有登录，所以没有获取公共流数据。但是为什么vntrader，每次重启后都不能保存原来订阅的行情？每次启动都要重新订阅？"
      },
      {
        "user": "vnpy",
        "created_at": "2018-09-26T09:22:04Z",
        "body": "需要的话可以根据自己的需要把数据保存到MongoDB中持久化"
      },
      {
        "user": "dofish",
        "created_at": "2018-10-07T01:25:20Z",
        "body": "> 需要的话可以根据自己的需要把数据保存到MongoDB中持久化\r\n\r\nvt中SHZD的接口过期了，我按ctp的写法码了SHZD的接口更新，经初步测试可用。有需要我就上传上来也算贡献一点。"
      },
      {
        "user": "vnpy",
        "created_at": "2018-10-08T06:24:06Z",
        "body": "好的啊，欢迎"
      },
      {
        "user": "dofish",
        "created_at": "2018-10-08T11:38:55Z",
        "body": "> 好的啊，欢迎\r\n\r\n好的，我先初步整理下，你告诉我发哪里，我打包发上来。"
      }
    ]
  },
  {
    "number": 1130,
    "title": "自己编写了一个策略名称为StockStrategy.py,,但是回测报错StockstrategyImportError: No module named strategyStock",
    "created_at": "2018-09-23T13:35:55Z",
    "closed_at": "2018-09-25T01:20:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1130",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1130/comments",
    "author": "wkpzwy",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-09-25T01:20:49Z",
        "body": "请放在你的运行时目录下，然后回测直接在该目录启动jupyter notebook，并在笔记本里运行\r\n\r\nfrom strategyStock import StockStrategy\r\n\r\n来启动\r\n\r\n"
      }
    ]
  },
  {
    "number": 1127,
    "title": "请问价差交易里，策略交易实现有计划吗",
    "created_at": "2018-09-21T06:14:51Z",
    "closed_at": "2018-09-25T01:06:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1127",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n请问对于策略套利功能，比如统计套利策略，在vnpy里用rpc实现，或者在现有的价差模块里实现，哪个更方便一些，现在有实现计划吗\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1127/comments",
    "author": "mailtostanley",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-09-25T01:06:38Z",
        "body": "统计套利类的策略，涉及到比价复杂的策略逻辑原理，建议可以自己在外部通过脚本来运行策略，然后通过算法交易组件AlgoTrading的RPC功能来调用vn.py的交易服务"
      },
      {
        "user": "mailtostanley",
        "created_at": "2019-02-13T15:10:40Z",
        "body": "vnpy官方可以实现一个简单的价差套利参考一下吗，比如布林线套利？"
      }
    ]
  },
  {
    "number": 1126,
    "title": "CTA引擎初始化界面延迟更新",
    "created_at": "2018-09-21T03:20:11Z",
    "closed_at": "2018-09-25T01:04:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1126",
    "body": "## 环境\r\n\r\n* 操作系统: ALL\r\n* Anaconda版本: ALL\r\n* vn.py版本: 最新版本\r\n\r\n## Issue类型\r\n三选一：Enhancement\r\n\r\n## 预期程序行为\r\nCTA引擎初始化结束时，CTA-UI界面 inited 立即更新为 True。\r\n\r\n## 实际程序行为\r\n延迟一分钟更新。\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n应该增加立即更新界面的操作：\r\n`  \r\n    def initStrategy(self, name):\r\n        \"\"\"初始化策略\"\"\"\r\n        if name in self.strategyDict:\r\n            strategy = self.strategyDict[name]\r\n            \r\n            if not strategy.inited:\r\n                self.callStrategyFunc(strategy, strategy.onInit)\r\n                strategy.inited = True\r\n                self.putStrategyEvent(name)      <----缺少立即刷新（刷新动作在策略中，漏掉了inited=True的刷新)\r\n                \r\n                self.loadSyncData(strategy)                             # 初始化完成后加载同步数据\r\n                self.subscribeMarketData(strategy)                      # 加载同步数据后再订阅行情\r\n            else:\r\n                self.writeCtaLog(u'请勿重复初始化策略实例：%s' %name)\r\n        else:\r\n            self.writeCtaLog(u'策略实例不存在：%s' %name)        \r\n`\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1126/comments",
    "author": "ShellMount",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-09-25T01:04:59Z",
        "body": "时间消耗在了策略初始化数据的加载和策略初始化计算的过程上"
      },
      {
        "user": "ShellMount",
        "created_at": "2018-09-25T01:35:49Z",
        "body": "并不是。\r\n需要立即： self.putStrategyEvent(name)\r\n\r\n数据加载及初始化结束时，还是需要等一分钟，由onBar中的刷新来执行（onInit中的self.put并未生效，因为执行它的时候 self.inited = Flase），才会在GUI界面刷新策略相关的数据。"
      },
      {
        "user": "vnpy",
        "created_at": "2018-09-26T09:23:00Z",
        "body": "策略的onInit函数中最后是需要调用putEvent函数的"
      },
      {
        "user": "ShellMount",
        "created_at": "2018-09-26T09:27:40Z",
        "body": "CTAENGINE中，先执行 onInit,\r\n再执行的 strategy.inited = True\r\n所以 onInit 中的 putEvent 不会生效。所以初始化结束时CTA-UI界面的 inited = Flase.\r\n直到下一分钟 onBar 中 的 putEvent 被执行时，才会变化。\r\n\r\n解决的办法是：\r\n在引擎中 执行完初始化，设置 strategy.inited = True 后，\r\n立即 执行一个刷新 事件： self.putStrategyEvent(name)"
      },
      {
        "user": "vnpy",
        "created_at": "2018-09-27T01:18:31Z",
        "body": "看来确实值得调整下CtaTemplate模板的工作机制了"
      }
    ]
  },
  {
    "number": 1125,
    "title": "想请问下回测和模拟交易时候，策略变量序列怎么保存下来方便检查信号正确与否；还有vntrader需要每天开盘前自动重启吗",
    "created_at": "2018-09-21T02:36:34Z",
    "closed_at": "2018-09-25T00:54:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1125",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1125/comments",
    "author": "wkpzwy",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-09-25T00:53:39Z",
        "body": "1. 回测完成后，可以访问Backtesting.tradeDict来获取所有的逐笔成交信息，以及Backtesting.orderDict来获取所有的逐笔委托信息，在Jupyter Notebook中通过几行代码可以很方便的输出为CSV或者shelve数据，用于后续查询\r\n2. 每天的交易时段结束后建议关闭程序（期货的话是下午收盘，夜盘可以不管），后续重启"
      }
    ]
  },
  {
    "number": 1124,
    "title": "ImportError: No module named vnctpmd",
    "created_at": "2018-09-20T13:06:04Z",
    "closed_at": "2018-09-21T01:57:50Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1124",
    "body": "## 环境\r\n\r\n* 操作系统: macos\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7.13 |Anaconda 4.0.0 (x86_64)\r\n* vn.py版本: Version: 1.9.0\r\n python run.py\r\nTraceback (most recent call last):\r\nFile \"run.py\", line 28, in \r\nfrom vnpy.trader.gateway import (ctpGateway, ibGateway)\r\nFile \"/Users/fanren/.pyenv/versions/anaconda2-4.0.0/lib/python2.7/site-packages/vnpy/trader/gateway/ctpGateway/init.py\", line 5, in \r\nfrom .ctpGateway import CtpGateway\r\nFile \"/Users/fanren/.pyenv/versions/anaconda2-4.0.0/lib/python2.7/site-packages/vnpy/trader/gateway/ctpGateway/ctpGateway.py\", line 16, in \r\nfrom vnpy.api.ctp import MdApi, TdApi, defineDict\r\nFile \"/Users/fanren/.pyenv/versions/anaconda2-4.0.0/lib/python2.7/site-packages/vnpy/api/ctp/init.py\", line 4, in \r\nfrom .vnctpmd import MdApi\r\nImportError: No module named vnctpmd\r\n\r\n\r\n进入vnpy/api/ctp目录，运行bash build.sh，build目录 下 找不到vnctpmd.so和vnctptd.so\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1124/comments",
    "author": "799964990",
    "comments": [
      {
        "user": "cooooo",
        "created_at": "2018-09-20T14:10:39Z",
        "body": "运行bash build.sh报错了吗？"
      },
      {
        "user": "799964990",
        "created_at": "2018-09-20T14:15:57Z",
        "body": "> 运行bash build.sh报错了吗？\r\n\r\nsudo bash build.sh\r\nPassword:\r\n~/LH/chinahadoop/vnpy-master/vnpy/api/ctp/build ~/LH/chinahadoop/vnpy-master/vnpy/api/ctp\r\n-- The C compiler identification is AppleClang 9.0.0.9000039\r\n-- The CXX compiler identification is AppleClang 9.0.0.9000039\r\n-- Check for working C compiler: /Library/Developer/CommandLineTools/usr/bin/cc\r\n-- Check for working C compiler: /Library/Developer/CommandLineTools/usr/bin/cc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Check for working CXX compiler: /Library/Developer/CommandLineTools/usr/bin/c++\r\n-- Check for working CXX compiler: /Library/Developer/CommandLineTools/usr/bin/c++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\nUnder unix: 8\r\nCMake Warning at /usr/local/Cellar/cmake/3.12.1/share/cmake/Modules/FindBoost.cmake:577 (message):\r\n  Imported targets and dependency information not available for Boost version\r\n  (all versions older than 1.33)\r\nCall Stack (most recent call first):\r\n  /usr/local/Cellar/cmake/3.12.1/share/cmake/Modules/FindBoost.cmake:959 (_Boost_COMPONENT_DEPENDENCIES)\r\n  /usr/local/Cellar/cmake/3.12.1/share/cmake/Modules/FindBoost.cmake:1618 (_Boost_MISSING_DEPENDENCIES)\r\n  CMakeLists.txt:83 (find_package)\r\n\r\n\r\nCMake Warning at /usr/local/Cellar/cmake/3.12.1/share/cmake/Modules/FindBoost.cmake:577 (message):\r\n  Imported targets and dependency information not available for Boost version\r\n  (all versions older than 1.33)\r\nCall Stack (most recent call first):\r\n  /usr/local/Cellar/cmake/3.12.1/share/cmake/Modules/FindBoost.cmake:959 (_Boost_COMPONENT_DEPENDENCIES)\r\n  /usr/local/Cellar/cmake/3.12.1/share/cmake/Modules/FindBoost.cmake:1618 (_Boost_MISSING_DEPENDENCIES)\r\n  CMakeLists.txt:83 (find_package)\r\n\r\n\r\nCMake Warning at /usr/local/Cellar/cmake/3.12.1/share/cmake/Modules/FindBoost.cmake:577 (message):\r\n  Imported targets and dependency information not available for Boost version\r\n  (all versions older than 1.33)\r\nCall Stack (most recent call first):\r\n  /usr/local/Cellar/cmake/3.12.1/share/cmake/Modules/FindBoost.cmake:959 (_Boost_COMPONENT_DEPENDENCIES)\r\n  /usr/local/Cellar/cmake/3.12.1/share/cmake/Modules/FindBoost.cmake:1618 (_Boost_MISSING_DEPENDENCIES)\r\n  CMakeLists.txt:83 (find_package)\r\n\r\n\r\nCMake Warning at /usr/local/Cellar/cmake/3.12.1/share/cmake/Modules/FindBoost.cmake:577 (message):\r\n  Imported targets and dependency information not available for Boost version\r\n  (all versions older than 1.33)\r\nCall Stack (most recent call first):\r\n  /usr/local/Cellar/cmake/3.12.1/share/cmake/Modules/FindBoost.cmake:959 (_Boost_COMPONENT_DEPENDENCIES)\r\n  /usr/local/Cellar/cmake/3.12.1/share/cmake/Modules/FindBoost.cmake:1618 (_Boost_MISSING_DEPENDENCIES)\r\n  CMakeLists.txt:83 (find_package)\r\n\r\n\r\nCMake Warning at /usr/local/Cellar/cmake/3.12.1/share/cmake/Modules/FindBoost.cmake:577 (message):\r\n  Imported targets and dependency information not available for Boost version\r\n  (all versions older than 1.33)\r\nCall Stack (most recent call first):\r\n  /usr/local/Cellar/cmake/3.12.1/share/cmake/Modules/FindBoost.cmake:959 (_Boost_COMPONENT_DEPENDENCIES)\r\n  /usr/local/Cellar/cmake/3.12.1/share/cmake/Modules/FindBoost.cmake:1618 (_Boost_MISSING_DEPENDENCIES)\r\n  CMakeLists.txt:83 (find_package)\r\n\r\n\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Looking for pthread_create\r\n-- Looking for pthread_create - found\r\n-- Found Threads: TRUE\r\nCMake Error at /usr/local/Cellar/cmake/3.12.1/share/cmake/Modules/FindBoost.cmake:2044 (message):\r\n  Unable to find the requested Boost libraries.\r\n\r\n  Unable to find the Boost header files.  Please set BOOST_ROOT to the root\r\n  directory containing Boost or BOOST_INCLUDEDIR to the directory containing\r\n  Boost's headers.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:83 (find_package)\r\n\r\n\r\nCMake Error: The following variables are used in this project, but they are set to NOTFOUND.\r\nPlease set them or make sure they are set and tested correctly in the CMake files:\r\nCTPAPI_MD_LIBRARY\r\n    linked by target \"vnctpmd\" in directory /Users/fanren/LH/chinahadoop/vnpy-master/vnpy/api/ctp\r\nCTPAPI_TD_LIBRARY\r\n    linked by target \"vnctptd\" in directory /Users/fanren/LH/chinahadoop/vnpy-master/vnpy/api/ctp\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/Users/fanren/LH/chinahadoop/vnpy-master/vnpy/api/ctp/build/CMakeFiles/CMakeOutput.log\".\r\n☁  ctp"
      },
      {
        "user": "cooooo",
        "created_at": "2018-09-20T14:35:30Z",
        "body": "安装Boost "
      },
      {
        "user": "799964990",
        "created_at": "2018-09-20T14:55:20Z",
        "body": "brew install boost 按装之后 \r\n又运行\r\nsudo bash build.sh\r\nPassword:\r\n~/LH/chinahadoop/vnpy-master/vnpy/api/ctp/build ~/LH/chinahadoop/vnpy-master/vnpy/api/ctp\r\n-- The C compiler identification is AppleClang 9.0.0.9000039\r\n-- The CXX compiler identification is AppleClang 9.0.0.9000039\r\n-- Check for working C compiler: /Library/Developer/CommandLineTools/usr/bin/cc\r\n-- Check for working C compiler: /Library/Developer/CommandLineTools/usr/bin/cc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\n-- Check for working CXX compiler: /Library/Developer/CommandLineTools/usr/bin/c++\r\n-- Check for working CXX compiler: /Library/Developer/CommandLineTools/usr/bin/c++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Detecting CXX compile features\r\n-- Detecting CXX compile features - done\r\nUnder unix: 8\r\n-- Looking for pthread.h\r\n-- Looking for pthread.h - found\r\n-- Looking for pthread_create\r\n-- Looking for pthread_create - found\r\n-- Found Threads: TRUE\r\nCMake Error at /usr/local/Cellar/cmake/3.12.1/share/cmake/Modules/FindBoost.cmake:2044 (message):\r\n  Unable to find the requested Boost libraries.\r\n\r\n  Boost version: 1.67.0\r\n\r\n  Boost include path: /usr/local/include\r\n\r\n  Could not find the following Boost libraries:\r\n\r\n          boost_python\r\n\r\n  Some (but not all) of the required Boost libraries were found.  You may\r\n  need to install these additional Boost libraries.  Alternatively, set\r\n  BOOST_LIBRARYDIR to the directory containing Boost libraries or BOOST_ROOT\r\n  to the location of Boost.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:83 (find_package)\r\n\r\n\r\nCMake Error: The following variables are used in this project, but they are set to NOTFOUND.\r\nPlease set them or make sure they are set and tested correctly in the CMake files:\r\nCTPAPI_MD_LIBRARY\r\n    linked by target \"vnctpmd\" in directory /Users/fanren/LH/chinahadoop/vnpy-master/vnpy/api/ctp\r\nCTPAPI_TD_LIBRARY\r\n    linked by target \"vnctptd\" in directory /Users/fanren/LH/chinahadoop/vnpy-master/vnpy/api/ctp\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/Users/fanren/LH/chinahadoop/vnpy-master/vnpy/api/ctp/build/CMakeFiles/CMakeOutput.log\"."
      },
      {
        "user": "vnpy",
        "created_at": "2018-09-21T01:57:50Z",
        "body": "CTP的API不支持MACOS"
      },
      {
        "user": "yuanjh6",
        "created_at": "2019-10-08T09:51:06Z",
        "body": "mini的2个gateway好像也的注释到，和ctp互斥，否则也会报错ImportError: No module named vnctpmd"
      }
    ]
  },
  {
    "number": 1118,
    "title": "策略发单后，死机，退出，重开。还能不能收到 ontrade?",
    "created_at": "2018-09-17T20:24:15Z",
    "closed_at": "2018-10-05T02:51:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1118",
    "body": "假如发单后死机了，在死机的过程，这个单子成交了。\r\n等下我们再开策略，还能不能收到 ontrade? 或者重新启动策略之后才成交。\r\n\r\n或者说，只要是我们策略的单子，下单，成交，不管死机，明天，一直都是能够跟踪到的状态。\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1118/comments",
    "author": "viponedream",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-09-19T03:01:04Z",
        "body": "收不到，目前策略和委托之间的映射关系，只保存在CTA引擎内存中的，关闭后这个映射关系就没有了。\r\n\r\n但是底层模块（MainEngine, DataEngine）可以会受到这笔推送。如果需要的话，可以自己扩展一个查询机制"
      },
      {
        "user": "viponedream",
        "created_at": "2018-09-19T07:35:01Z",
        "body": "象这种数据，重要变量等能不能实时存进数据库？载入策略再重新读入？"
      },
      {
        "user": "vnpy",
        "created_at": "2018-09-21T01:51:22Z",
        "body": "对于CTA策略来说，一般没有这种需求，CTA策略的特点意味着只要有历史数据和仓位记录，应该就能还原出退出前策略的运行状态。\r\n\r\n如果确实是某些复杂类型的策略，可以自己在策略中调用数据库连接或者shelve等持久化工具来实现数据的持久化，但这更多属于个性化需求，无法在针对公共性需求的框架里提供了。"
      },
      {
        "user": "lipan0722",
        "created_at": "2018-09-28T03:42:05Z",
        "body": "我也遇到了这个问题，主要是在夜盘下的单在日盘成交的情况。我的思路是当根据vtOrderID匹配不到策略的时候，我就会当前的orderStrategyDict中另外匹配一个策略，根据我的策略特点应该是可以匹配到唯一的一个策略。各位也可以尝试一下。"
      }
    ]
  },
  {
    "number": 1117,
    "title": "模拟时候初始化天数是10天，是否至少需要10天才有开仓信号，还有回测每笔开平仓记录保存在哪里啊",
    "created_at": "2018-09-17T14:33:53Z",
    "closed_at": "2018-09-19T02:58:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1117",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1117/comments",
    "author": "wkpzwy",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-09-19T02:58:00Z",
        "body": "1. 初始化天数可以调整，但你必须有大于初始化天数的数据量，才能够正常回测\r\n2. 每笔的交易记录在回测引擎的tradeDict中"
      }
    ]
  },
  {
    "number": 1116,
    "title": "回测vnpy例子Dustrategy出现错误，已经在ctasetting里面好策略名称了",
    "created_at": "2018-09-16T06:59:30Z",
    "closed_at": "2018-09-17T01:23:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1116",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n   from vnpy.trader.app.ctaStrategy.strategy.strategyDualThrust import DuStrategy\r\n\r\n   ImportError: cannot import name DuStrategy\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1116/comments",
    "author": "wkpzwy",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-09-17T01:23:58Z",
        "body": "策略名字叫做DualThrustStrategy"
      },
      {
        "user": "wkpzwy",
        "created_at": "2018-09-17T14:30:30Z",
        "body": "谢谢群主。。。"
      },
      {
        "user": "wkpzwy",
        "created_at": "2018-09-17T14:30:37Z",
        "body": "谢谢群主。。。"
      }
    ]
  },
  {
    "number": 1107,
    "title": "载入历史K线的天数 loadbar  days",
    "created_at": "2018-09-12T01:03:56Z",
    "closed_at": "2018-09-14T09:09:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1107",
    "body": "目前是单纯减去多少天的，如我历史数据为10天，放假好几天的话，就可能没剩多少天了。\r\n感觉可以用读到的日期的数量来判断，数量不够再往前，一天凑齐 10天为止，而不是单纯减去10。\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1107/comments",
    "author": "viponedream",
    "comments": [
      {
        "user": "cooooo",
        "created_at": "2018-09-12T07:50:55Z",
        "body": "setStartDate有一个initDays参数，可以试着设定"
      },
      {
        "user": "vnpy",
        "created_at": "2018-09-14T09:09:08Z",
        "body": "更简单的方法是加载20天以上的数据就肯定够了，反正多点数据也只是初始化时多花几秒而已"
      }
    ]
  },
  {
    "number": 1094,
    "title": "两个一般问题/疑问",
    "created_at": "2018-09-05T12:34:02Z",
    "closed_at": "2018-09-06T05:41:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1094",
    "body": "由于不知是ubuntu升级还是anaconda升级的原因，我在conda install numpy=1.11.0后vnpy恢复正常。\r\n我搜索了代码，在代码里没有明确找到安装语句。除了指定特定版本外，在安装过程中vnpy是怎么找安装依赖的呢？自己没有多少编程经验，不知道怎么google相关内容，希望有人指点一二。另外是不是加那个qq群好点？我的一点点经验是对这类群不报多少希望，有什么问题在github上说出来不是更好，方便更多人搜索。或者说把讨论问题写个简要wiki?  比如说在wiki上专门列出各个大版本所有依赖的version？\r\n\r\n另外一个更为严重，每次vnpy版本更新和原有版本冲突。自己的代码和更新的代码会有混乱之处，比如我看到dev的环境换成了anaconda 5.1.0，自己真是担心自己能力有限遇到麻烦问题;再比如专注一些功能（比如期货），在有新版本的情况下自己怎么只更新自己的模块？我的理解是程序可以尽量解偶和，但是我觉得这是个（漫长的）过程，大家有什么好的经验呢？\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1094/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-09-06T05:41:54Z",
        "body": "1. python所有的库依赖是通过包管理工具pip或者conda来自动实现的，一般用不着专门指定版本，v1.9来说直接使用Anaconda 5.2.0，安装几个三方库就行\r\n2. 现在的CTA策略模块更新，基本都保持了较好的向后兼容性，2.0后的版本会通过核心和组件拆分的模式，轻量化实现比较好的解耦"
      }
    ]
  },
  {
    "number": 1091,
    "title": "今天版本的master使用dockerfile构建web版本镜像时，会在安装vi时出错，改为vim可顺利通过",
    "created_at": "2018-09-04T15:23:05Z",
    "closed_at": "2018-09-05T01:21:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1091",
    "body": "Step 6/14 : RUN apt-get install git bzip2 vi nano -y\r\n ---> Running in 27c4ee20e400\r\nReading package lists...\r\nBuilding dependency tree...\r\nReading state information...\r\nE: Unable to locate package vi",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1091/comments",
    "author": "xiyanxiyan10",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-09-05T01:21:49Z",
        "body": "这个报错是说找不到vi编辑器，按理说应该不可能出现的，请检查下你的网络环境是否连不上UBUNTU的更新服务器"
      }
    ]
  },
  {
    "number": 1081,
    "title": "server-client调用算法交易闪退",
    "created_at": "2018-08-31T05:15:32Z",
    "closed_at": "2018-08-31T05:18:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1081",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows Server2008\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: v1.9.0\r\n\r\n## Issue类型\r\nQuestion\r\n\r\n## 预期程序行为\r\nServer-Client模式通过rpc模式启动算法交易服务，出现闪退，设置断点是画界面过程出现问题\r\n\r\n## 实际程序行为\r\n出现算法交易界面\r\n\r\n## 重现步骤\r\n在server.py文件加入\r\nme.addApp(algoTrading)\r\n通过client调用算法交易服务，出现算法交易界面闪退\r\n\r\n是否无法通过rpc模式调用算法交易服务？\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1081/comments",
    "author": "longmumin",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-08-31T05:18:05Z",
        "body": "目前无法实现，希望支持Server-Client模式的话，要对AlgoTrading的引擎和界面通讯做个解耦，这种情况不如直接使用AlgoEngine的RPC服务功能给外部程序做算法交易了"
      }
    ]
  },
  {
    "number": 1072,
    "title": "Mac build problem",
    "created_at": "2018-08-28T07:48:23Z",
    "closed_at": "2018-08-28T09:30:01Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1072",
    "body": "## 环境\r\n\r\n* 操作系统: macOS High Sierra\r\n* Anaconda版本: Python3.7\r\n* vn.py版本: HEAD\r\n\r\n尝试在Mac上编译，遇到一些问题，一些编译路径的问题我自己都搞定了，目前遇到硬坎是 ``vnpy/api/ctp/ctpapi/x64_linux/libthosttraderapi.so`` 没有mac版本。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1072/comments",
    "author": "yihuang",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-08-28T09:30:01Z",
        "body": "1. MAC上无法使用CTP等接口 \r\n2. 目前对Python 3的移植还在进行中，非开发者建议还是用2"
      }
    ]
  },
  {
    "number": 1070,
    "title": "vnpy 1.9.0安装后VnTrader启动报错",
    "created_at": "2018-08-27T16:49:44Z",
    "closed_at": "2018-08-28T09:32:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1070",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7 64位\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 1.9.0（下载日期2018.08.26）\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\nVnTrader正常启动\r\n\r\n## 实际程序行为\r\nVnTrader启动报错\r\n\r\n## 重现步骤\r\n双击VnTrader.bat一闪关闭，于是在cmd窗口下运行VnTrader.bat，信息拷贝如下：\r\nC:\\vnpy>cd C:\\Anaconda2\\Lib\\site-packages\\vnpy-1.9.0-py2.7.egg\\vnpy\\examples\\VnTrader\r\n\r\nC:\\Anaconda2\\Lib\\site-packages\\vnpy-1.9.0-py2.7.egg\\vnpy\\examples\\VnTrader>VnTrader.bat\r\n\r\nC:\\Anaconda2\\Lib\\site-packages\\vnpy-1.9.0-py2.7.egg\\vnpy\\examples\\VnTrader>python run.py\r\nC:\\Anaconda2\\lib\\site-packages\\vnpy\\api\\ib\\__init__.py:3: RuntimeWarning: to-Python converter for class std::vector<class ibapi::shared_ptr<class OrderCondition>,class std::allocator<class ibapi::shared_ptr<class OrderCondition> > > already registered; second conversion method ignored.\r\n  from vnib import *\r\nTraceback (most recent call last):\r\n  File \"run.py\", line 37, in <module>\r\n    from vnpy.trader.app import (riskManager, ctaStrategy,\r\nImportError: cannot import name algoTrading\r\n\r\nC:\\Anaconda2\\Lib\\site-packages\\vnpy-1.9.0-py2.7.egg\\vnpy\\examples\\VnTrader>\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1070/comments",
    "author": "kumapy",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-08-28T09:32:52Z",
        "body": "这里报错是因为algoTrading载入失败，请在C:\\vnpy\\examples\\VnTrader目录下运行python run.py试试"
      },
      {
        "user": "DingTobest",
        "created_at": "2018-12-11T09:33:42Z",
        "body": "这个问题我今天遇到了，发现是由于保留了1.8的包导致引入错误，删除Anaconda2\\Lib\\site-packages下多余的vnpy的包解决了这个问题"
      }
    ]
  },
  {
    "number": 1061,
    "title": "请问是否有模拟盘模块",
    "created_at": "2018-08-23T13:45:39Z",
    "closed_at": "2018-08-28T09:53:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1061",
    "body": "我知道仿真交易也能起到类似模拟盘的作用。但仿真盘测的是角度与模拟盘毕竟不一样，我看文档没有发现模拟盘相关说明，目前若想做模拟盘的话请问有何变通手段？未来是否有计划开发一下模拟盘模块？\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1061/comments",
    "author": "kevinhuangwl",
    "comments": [
      {
        "user": "xldistance",
        "created_at": "2018-08-24T02:23:59Z",
        "body": "目前还是用simnow比较方便"
      },
      {
        "user": "vnpy",
        "created_at": "2018-08-28T09:53:04Z",
        "body": "目前暂无计划，建议使用simnow"
      }
    ]
  },
  {
    "number": 1060,
    "title": "天勤数据无法下载",
    "created_at": "2018-08-22T08:56:49Z",
    "closed_at": "2018-08-28T09:56:24Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1060",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.8\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n我安装了天勤数据终端，然后 进入了 终端的rb1901的日K线图界面， 然后执行了 python downloadData.py，然后 cmd终端就一直停在 “开始下载合约数据”。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1060/comments",
    "author": "jxhuliqun138",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-08-28T09:56:24Z",
        "body": "天勤接口之前主要由天勤那边在帮忙维护，请联系他们看看吧"
      }
    ]
  },
  {
    "number": 1059,
    "title": "CTP夜盘不会自动登陆",
    "created_at": "2018-08-22T05:05:48Z",
    "closed_at": "2018-08-28T09:51:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1059",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 10\r\n* Anaconda版本: Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: dev branch 20180806\r\n\r\n## Issue类型\r\nQuestion\r\n\r\n## 预期程序行为\r\n程序不关，夜盘自动登陆\r\n\r\n## 实际程序行为\r\n夜盘可以连接交易与行情服务器，但连接成功后没有登陆交易(login)\r\n结果是可以程序可以收到行情，但是无法下单\r\n\r\n## 重现步骤\r\n收盘后交易行情服务器都断开，然后不断重复连接断开与连接成功的过程，直至18：22分左右，行情服务器登陆成功，但交易服务器连接成功后并不自动登陆，部分日志如下：\r\n2018-08-21 18:22:40,026  INFO: CTP\t交易服务器连接断开\r\n2018-08-21 18:22:40,035  INFO: CTP\t行情服务器连接断开\r\n2018-08-21 18:22:40,042  INFO: CTP\t交易服务器连接成功\r\n2018-08-21 18:22:40,053  INFO: CTP\t行情服务器连接成功\r\n2018-08-21 18:22:43,677  INFO: CTP\t行情服务器登录完成\r\n2018-08-21 18:22:49,674  INFO: CTP\t交易服务器连接断开\r\n2018-08-21 18:22:49,681  INFO: CTP\t交易服务器连接成功\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1059/comments",
    "author": "iPoring",
    "comments": [
      {
        "user": "cooooo",
        "created_at": "2018-08-25T10:09:06Z",
        "body": "可以试一下CtaTrading"
      },
      {
        "user": "iPoring",
        "created_at": "2018-08-25T11:19:52Z",
        "body": "好的，我回头试试，谢谢"
      },
      {
        "user": "vnpy",
        "created_at": "2018-08-28T09:51:25Z",
        "body": "CTP接口请在每日交易时段结束后关闭（即下午收盘后）"
      }
    ]
  },
  {
    "number": 1050,
    "title": "vnpy1.9版本不是支持海龟吗？",
    "created_at": "2018-08-18T10:56:51Z",
    "closed_at": "2018-11-13T00:01:38Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1050",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n\r\n请问一下海龟什么时候能够支持呢\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1050/comments",
    "author": "zha0yangchen",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-08-28T10:01:16Z",
        "body": "v1.9.1保证支持，这次绝对不拖了，我保证~~！"
      },
      {
        "user": "xldistance",
        "created_at": "2018-09-20T01:59:01Z",
        "body": "急什么，我从去年年中等到现在(*^▽^*)"
      },
      {
        "user": "vnpy",
        "created_at": "2018-11-13T00:01:38Z",
        "body": "已完成"
      }
    ]
  },
  {
    "number": 1045,
    "title": "strategy.vtSymbol",
    "created_at": "2018-08-16T04:54:27Z",
    "closed_at": "2018-08-28T10:04:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1045",
    "body": "ctaEngine.py 在设置tickStrategyDict的时候用到strategy.vtSymbol. \r\n然而vtSymbol既没有出现在ctaTemplate, 也没有出现在strategy[...].py里(准确来说, 只出现在了paramList里). 请问vtSymbol在runBackting和runCtaTrading是怎么把这个参数传给strategy的?",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1045/comments",
    "author": "daisy-zzzzzzzzzz",
    "comments": [
      {
        "user": "ghost",
        "created_at": "2018-08-19T17:44:40Z",
        "body": "在vtObject里，你可以在pycharm里右键goto找到"
      },
      {
        "user": "vnpy",
        "created_at": "2018-08-28T10:04:29Z",
        "body": "通过paramList配置后，策略初始化加载参数配置的时候回自动绑定该属性，这里使用的主要是Python语言的动态属性绑定功能"
      }
    ]
  },
  {
    "number": 1044,
    "title": "huobi,bian,okex行情服务器连接失败",
    "created_at": "2018-08-15T14:21:42Z",
    "closed_at": "2018-08-28T09:48:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1044",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\nwin10\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1044/comments",
    "author": "yfjelley",
    "comments": [
      {
        "user": "xldistance",
        "created_at": "2018-08-16T13:43:12Z",
        "body": "要科学上网的，懂了吗（手动斜眼）"
      },
      {
        "user": "yfjelley",
        "created_at": "2018-08-26T03:36:09Z",
        "body": "当然是科学上网了， 不然网站都不开？"
      },
      {
        "user": "vnpy",
        "created_at": "2018-08-28T09:48:53Z",
        "body": "数字货币相关接口，请使用VPN翻墙（SS不行），或者海外的云服务器"
      }
    ]
  },
  {
    "number": 1039,
    "title": "富途证券API3.0对接好了吗?",
    "created_at": "2018-08-13T02:05:43Z",
    "closed_at": "2018-08-13T05:04:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1039",
    "body": "富途证券API现在是3.0了请问VNPY有对接好了吗?\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1039/comments",
    "author": "eyelivermore",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-08-13T05:04:58Z",
        "body": "新版本已经完成对接"
      },
      {
        "user": "eyelivermore",
        "created_at": "2018-08-13T08:07:52Z",
        "body": "好像没有找到1.9版本的下载 请问 什么时候可以下载"
      }
    ]
  },
  {
    "number": 1028,
    "title": "价差交易模块 Order Postion 过滤问题",
    "created_at": "2018-08-08T02:27:42Z",
    "closed_at": "2018-08-08T16:12:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1028",
    "body": "\r\n> 问题： 如果价差交易模块与策略模块同时运行，策略模块的定单、仓位将会引志价差模块逻辑问题\r\n>原因：价差模没有对定阅的EVENT_TRADE EVENT_ORDER信息流进行过滤\r\n\r\n```javascript\r\n    #----------------------------------------------------------------------\r\n    def processTradeEvent(self, event):\r\n        \"\"\"处理成交事件\"\"\"\r\n        trade = event.dict_['data']\r\n        \r\n        algo = self.vtSymbolAlgoDict.get(trade.vtSymbol, None)\r\n        if algo:\r\n            algo.updateTrade(trade)\r\n    \r\n    #----------------------------------------------------------------------\r\n    def processOrderEvent(self, event):\r\n        \"\"\"处理委托事件\"\"\"\r\n        order = event.dict_['data']\r\n        algo = self.vtSymbolAlgoDict.get(order.vtSymbol, None)\r\n        \r\n        if algo:\r\n            algo.updateOrder(order)\r\n```",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1028/comments",
    "author": "bigdig",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-08-08T16:12:28Z",
        "body": "价差交易和CTA策略不应该同时运行在一个账户上，这是两种不同的策略类型"
      }
    ]
  },
  {
    "number": 1017,
    "title": "FCOIN 是不是限制下单啊，我5秒下一次单，下了20次左右就下不了了。",
    "created_at": "2018-08-03T11:48:49Z",
    "closed_at": "2018-08-04T13:50:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1017",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1017/comments",
    "author": "sage-peng",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-08-04T13:50:27Z",
        "body": "FCOIN的流控非常严，官网号称10秒100次，实际可能10秒只有2-3次，而且频繁超过会被禁IP"
      },
      {
        "user": "sage-peng",
        "created_at": "2018-08-05T10:18:26Z",
        "body": "那这个问题可以关闭了"
      }
    ]
  },
  {
    "number": 1016,
    "title": "多合约的技术难度",
    "created_at": "2018-08-01T20:05:03Z",
    "closed_at": "2018-08-04T14:27:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1016",
    "body": "vnpy的ctaEngine提供多策略的实盘交易，ctaBacktestingEngine提供单策略多合约的功能(multiprocessing实现）\r\n实盘如果要实现多合约，目前只能通过对接JAQS. 看了zhihu对于不开发多合约的解释与对vnpy的定位，大概理解为什么开发方选择JAQS。不过这里想问的是，从技术的角度来说，除了写一个multiprocessing / Threading wrapper，并修改相应逻辑（比如让dataEngine的dictionary能处理多合约），还有什么技术上的障碍？\r\n一个相关的问题是，Threading concurrency有GIL的问题，如果用multiprocessing实现真正的parallelization, 对性能有什么影响？multiprocessing的语法接近Threading, 换到这个框架的改动其实不会很大\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1016/comments",
    "author": "daisy-zzzzzzzzzz",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-08-04T14:27:42Z",
        "body": "1. 没有任何技术上的障碍，毕竟都是Python，只是出于项目定位没有在VnTrader的CTA策略模块中做单策略多合约的支持。\r\n2. 多进程和多线程最大的区别，就是需要做额外的数据通讯工作，多线程可以直接访问同一进程内的数据，而多进程则需要通过RPC模块来回传输数据，整个系统的架构会变复杂得多，不是专业用户不建议折腾。"
      }
    ]
  },
  {
    "number": 1014,
    "title": "实盘数据之间的延迟优化问题。",
    "created_at": "2018-08-01T14:15:40Z",
    "closed_at": "2018-08-04T14:29:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1014",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows10\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: v1.8\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n实盘log:\r\n2018-08-01 21:59:58,437  INFO: CTA_STRATEGY\tThreeRb1810:on15bar 22:00:00 4178.27, 4169.30, \r\n2018-08-01 21:59:58,437  INFO: CTA_STRATEGY\t策略ThreeRb1810同步数据保存成功，当前持仓0\r\n2018-08-01 21:59:58,438  INFO: CTA_STRATEGY\tFourRb1810:on15bar 22:00:00 4167.35, 4170.33, True\r\n2018-08-01 21:59:58,438  INFO: CTA_STRATEGY\t策略FourRb1810同步数据保存成功，当前持仓0\r\n############################\r\n2018-08-01 21:59:58,509  INFO: CTA_STRATEGY\tThreeM1809:on15bar 22:00:00 3145.37, 3159.23, \r\n2018-08-01 21:59:58,509  INFO: CTA_STRATEGY\t策略ThreeM1809同步数据保存成功，当前持仓0\r\n2018-08-01 21:59:58,509  INFO: CTA_STRATEGY\tFourM1809:on15bar 22:00:00 3160.44, 3160.53, False\r\n2018-08-01 21:59:58,510  INFO: CTA_STRATEGY\t策略FourM1809同步数据保存成功，当前持仓-3\r\n#########################\r\n2018-08-01 21:59:59,701  INFO: CTA_STRATEGY\tFourMA809:on15bar 22:00:00 2945.31, 2956.41, False\r\n2018-08-01 21:59:59,701  INFO: CTA_STRATEGY\t策略FourMA809同步数据保存成功，当前持仓0\r\n####################\r\n2018-08-01 22:00:00,164  INFO: CTA_STRATEGY\tThreeZC809:on15bar 22:00:00 583.33, 584.92, 584.84, \r\n2018-08-01 22:00:00,164  INFO: CTA_STRATEGY\t策略ThreeZC809同步数据保存成功，当前持仓0\r\n2018-08-01 22:00:00,165  INFO: CTA_STRATEGY\tFourZC809:on15bar 22:00:00 583.20, 585.25, False\r\n2018-08-01 22:00:00,165  INFO: CTA_STRATEGY\t策略FourZC809同步数据保存成功，当前持仓0\r\n####################\r\n2018-08-01 22:00:01,676  INFO: CTA_STRATEGY\tThreeSR809:on15bar 22:00:00 4931.09, 4927.14, \r\n2018-08-01 22:00:01,677  INFO: CTA_STRATEGY\t策略ThreeSR809同步数据保存成功，当前持仓1\r\n2018-08-01 22:00:01,677  INFO: CTA_STRATEGY\tFourSR809:on15bar 22:00:00 4931.80, 4925.41, False\r\n2018-08-01 22:00:01,677  INFO: CTA_STRATEGY\t策略FourSR809同步数据保存成功，当前持仓1\r\n以上是22：00 分钟的数据，每个虚线处的延迟都高达130~500m， 请问虚线处数据之间的延迟是什么造成的，该如何优化",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1014/comments",
    "author": "jxhuliqun138",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-08-04T14:29:36Z",
        "body": "你可以尝试打印Tick到达的本地时间戳，这个情况应该纯粹就是因为本地接收到Tick时的时间间隔导致的，如果一定担心延时的话可以考虑用托管服务器。"
      }
    ]
  },
  {
    "number": 1011,
    "title": "请问作者运行策略时，DrEngine是自动被调用么。是在哪里被调用的啊。 ",
    "created_at": "2018-07-31T10:51:48Z",
    "closed_at": "2018-08-03T09:15:13Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1011",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7\r\n* Anaconda版本: Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1011/comments",
    "author": "sage-peng",
    "comments": [
      {
        "user": "KobeZhao",
        "created_at": "2018-08-02T02:04:05Z",
        "body": "请前往文件夹examples/DataRecording/runDataRecording"
      }
    ]
  },
  {
    "number": 993,
    "title": "请问vnpy最多可以运行多少个策略",
    "created_at": "2018-07-23T12:57:45Z",
    "closed_at": "2018-07-24T01:27:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/993",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.81\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n我的电脑是华硕笔记本的 i7 ，\r\n请问vnpy最多可以运行多少个策略？\r\n 是一个bat窗口运行所有的策略更好，还是分开个多窗口分别运行更快？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/993/comments",
    "author": "jxhuliqun138",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-07-24T01:27:09Z",
        "body": "最多运行多少个策略，取决于：\r\n1. 你的策略对交易响应延时的要求\r\n2. 你的策略中逻辑运算的复杂程度（耗时水平）\r\n所以很难有一个标准的结论。\r\n\r\n对于分钟级日内CTA类型的策略，我个人之前的经验是单进程不要超过20个策略，不过这是我们根据需求测量后的结果，仅供参考吧。\r\n\r\n分多个进程窗口启动，可以对应利用更多的CPU核心，理论会快些。\r\n\r\n"
      }
    ]
  },
  {
    "number": 987,
    "title": "float型数据比较判断出错",
    "created_at": "2018-07-20T05:40:00Z",
    "closed_at": "2018-07-21T12:04:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/987",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: Anaconda 4.0.0 \r\n* vn.py版本: 如v1.8\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\nprint fastMa0 < hourMa10,  slowMa0 < hourMa10, fastMa0 == hourMa10\r\nlog: fMa0=618.000000, sMa0=617.821053, ma60=618.000000,   True True False\r\n请问一下 为什么fastMa0 < hourMa10 会为ture， 而fastMa0 == hourMa10 会为false\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/987/comments",
    "author": "jxhuliqun138",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-07-21T12:04:53Z",
        "body": "浮点数比较可能存在精度问题，建议round到较少的小数位后再做"
      }
    ]
  },
  {
    "number": 982,
    "title": "将ricequant平台上的海龟交易法多品种回测代码移植过来的想法",
    "created_at": "2018-07-16T14:57:46Z",
    "closed_at": "2018-08-04T14:30:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/982",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 10\r\n* Anaconda版本: Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 1.8.1\r\n\r\n## Issue类型\r\nQuestion\r\n\r\n## 预期程序行为\r\n将个人ricequant平台上的多品种海龟代码移植到ricequant\r\n\r\n## 实际程序行为\r\n\r\n个人目前在ricequant在线平台用他们的API已经能够基本还原了海龟交易法多品种回测\r\n基本思路是先构建一个DataFrame格式的框架，然后将基础数据更新到dataframe中并循环判断开平仓等条件。\r\n\r\n估计用pandas交易速度会有些慢\r\n\r\n群主之前有说过要做海龟策略的编写，不知道我这想法跟群主的思路是否一致，可以的话我先尝试着修改到vnpy平台上。\r\n\r\n对vnpy的数据存储原理还是不太熟悉，估计做出来会bug百出~\r\n\r\n如果群主已经要做出来vnpy平台的海龟策略，请关闭该issue，等待群主的更新~~\r\n\r\n## 重现步骤\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/982/comments",
    "author": "nikitazhhy",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-08-04T14:30:18Z",
        "body": "欢迎尝试，海龟的策略会在v1.9内完成。"
      }
    ]
  },
  {
    "number": 951,
    "title": "数字火币 Gate  接口  延迟太严重？",
    "created_at": "2018-06-27T08:17:16Z",
    "closed_at": "2018-07-17T09:30:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/951",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\nGate 只加载了 Gate 相关的 组件， 策略引擎， 风控 引擎， 把一切有潜在 影响性能的组件 都没有加载。\r\nGate 接口正常发单，撤销发单的一些基本操作 应该很快。\r\n\r\n## 实际程序行为\r\n\r\n延迟非常严重。 不知道 是我的gate 接口用的不对吗？ 还是本很 Gate 交易所的 API做了限制？\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/951/comments",
    "author": "VincentYanJk",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-07-17T09:30:56Z",
        "body": "数字货币交易所大多采用REST和Websocket API，且部分由于性能差做了严重的限流。\r\n\r\n除了OKEX、BINANCE、BITMEX、BITFINEX、COINBASE外，其他的API的委托回报延时一般在3-10秒的水平，感觉慢是正常现象。"
      }
    ]
  },
  {
    "number": 949,
    "title": "请问vnpy对于股票期权交易的支持",
    "created_at": "2018-06-26T03:22:06Z",
    "closed_at": "2018-06-27T02:12:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/949",
    "body": "### **readme中写了支持中信证券期权和金仕达期权接口，不知实际是否支持，谢谢！**\r\n\r\n## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/949/comments",
    "author": "yujun1214",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-06-27T02:12:31Z",
        "body": "实际支持，分别是cshshlp和ksotp"
      }
    ]
  },
  {
    "number": 935,
    "title": "关于事件引擎依赖Qt的疑问",
    "created_at": "2018-06-19T18:12:49Z",
    "closed_at": "2018-06-20T02:42:17Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/935",
    "body": "## Issue类型\r\nQuestion\r\n\r\n注意到事件引擎里的timer用的是qt的QTimer。事件引擎直接和GUI库建立依赖感觉有些奇怪。这里是否可以用其他定时器替代以解除对Qt的依赖？比如python自己的threading.timer。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/935/comments",
    "author": "vermicelli",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-06-20T02:42:17Z",
        "body": "可以，eventEngine.py中的EventEngine2就是使用Threading的实现"
      },
      {
        "user": "vermicelli",
        "created_at": "2018-06-20T11:15:25Z",
        "body": "好的，谢谢。不好意思没注意看。\r\n我想用一下WebTrader，以为是独立的一个基于前端技术的GUI就没装qt，后来发现还有挺多地方依赖qt的。\r\n不知未来是否考虑把qt剥离出来，让vnpy可以单独对接基于web的UI？"
      },
      {
        "user": "vnpy",
        "created_at": "2018-06-27T02:03:26Z",
        "body": "2.0后会对整体框架再做一次解耦"
      }
    ]
  },
  {
    "number": 931,
    "title": "能提供下策略内使用算法单下单的示例吗？",
    "created_at": "2018-06-19T06:00:34Z",
    "closed_at": "2018-06-23T13:20:44Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/931",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: 如Anaconda 5.2.0 Python 3.6 64位\r\n* vn.py版本: v1.8\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n现在的算法单好像是手动，使用不方便，群主能提供下策略内使用算法单下单的示例吗\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/931/comments",
    "author": "xldistance",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-06-20T02:39:47Z",
        "body": "目前CTA模块和AlgoTrading模块，应用领域是相反的：\r\n* CTA模块偏向中高频的单标的交易策略，需要自己控制很多挂撤单细节\r\n* AlgoTrading模块偏向为低频策略或者手动交易提供高效的下单解决方案\r\n\r\n所以暂时没有在CTA中支持AlgoTrading的计划"
      }
    ]
  },
  {
    "number": 838,
    "title": "请问现在vnpy有没有套利交易的回测引擎",
    "created_at": "2018-04-27T16:03:07Z",
    "closed_at": "2018-05-04T04:50:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/838",
    "body": "如题",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/838/comments",
    "author": "bzg246",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-05-04T04:50:42Z",
        "body": "没有，套利交易中涉及到复杂的订单状态机管理，无法提供标准化的方案。"
      }
    ]
  },
  {
    "number": 817,
    "title": "runOptimization运行到resultList时报错ZeroDivisionError，不显示优化结果",
    "created_at": "2018-04-12T15:06:07Z",
    "closed_at": "2018-05-07T02:07:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/817",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: 如Anaconda 4.0.2 Python 2.7 32位\r\n* vn.py版本: v1.7.2\r\n\r\n## Issue类型：Bug\r\n\r\n##错误描述：\r\n跑优化，优化第一组参数时，会报警：\r\nvnpy-1.7.2-py2.7.egg\\vnpy\\trader\\app\\ctaStrategy\\ctaBacktesting.py:975: RuntimeWarning: invalid value encountered in log\r\n  df['return'] = (np.log(df['balance']) - np.log(df['balance'].shift(1))).fillna(0)\r\n\r\n优化结束后未出resultList，报错：\r\nTraceback (most recent call last):\r\n  File \"C:/wu/vnpy-1.7.2/examples/CtaBacktesting/runOptimization.py\", line 56, in <module>\r\n    engine.runParallelOptimization(CamarillaStrategy, setting)\r\n  File \"C:\\wu\\Anaconda2\\lib\\site-packages\\vnpy-1.7.2-py2.7.egg\\vnpy\\trader\\app\\ctaStrategy\\ctaBacktesting.py\", line 919, in runParallelOptimization\r\n    resultList = [res.get() for res in l]\r\n  File \"C:\\wu\\Anaconda2\\lib\\multiprocessing\\pool.py\", line 567, in get\r\n    raise self._value\r\nZeroDivisionError: float division by zero\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/817/comments",
    "author": "unlimitnight0",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-04-13T01:00:18Z",
        "body": "ZeroDivisionError: float division by zero    这个报错是说有除法运算的分母是0，请检查策略代码看看吧"
      }
    ]
  },
  {
    "number": 814,
    "title": "富途证券怎么配置那里有教程啊",
    "created_at": "2018-04-11T12:50:38Z",
    "closed_at": "2018-05-07T14:46:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/814",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10 64\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.8发行版\r\n\r\n富途证券怎么配置有文档吗?一连接就 未响应\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/814/comments",
    "author": "eyelivermore",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-04-12T02:42:59Z",
        "body": "1. 加入富途API群\r\n2. 下载API版的富途牛牛\r\n3. 启动牛牛\r\n4. vn.py里连接"
      }
    ]
  },
  {
    "number": 806,
    "title": "IB对接的问题",
    "created_at": "2018-04-02T07:45:19Z",
    "closed_at": "2018-05-07T14:51:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/806",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 16.04 amd64\r\n* Anaconda版本: Anaconda 4.0.0 Python 2.7 **64位**\r\n* vn.py版本: v1.8发行版）\r\n* 开发IDE Pycharm2018.1社区版\r\n* IB Gateway Version 970.1b版\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 问题现象\r\n 在ubuntu下面建立的开发环境。具体环境如上所属。\r\n目的是利用vnpy来和IB平台对接，进行策略研究。\r\n#### （1）运行vn.Trader成功，并且连接IB成功。可以显示持仓头寸。\r\n#### （2）运行dataRecord时出席问题。详述如下：\r\n- 自行修改runDataRecording.py 中早盘晚盘时间，让程序可以跑起来。（服务器在国外，美国时区）\r\n- 修改DR_setting.json，如下：\r\n```\r\n{\r\n    \"working\": true,\r\n    \"tick\":\r\n    [\r\n        [\"777\", \"IB\", \"SMART\", \"HKD\", \"STK\"]\r\n    ],\r\n    \"bar\":\r\n    [\r\n        [\"777\", \"IB\", \"SMART\", \"HKD\", \"STK\"]\r\n    ]\r\n}\r\n\r\n```\r\n#### （3）通过IDE的调试模式，发现在执行完ibGateway.py->connect()->self.api.eConnect()语句没有问题，执行下一句self.api.reqCurrentTime()时报错。错误信息为：\r\n```\r\n错误代码：321，错误信息：Error validating request:-'bE' : cause - Please enter a valid security type\r\n错误代码：321，错误信息：Error validating request:-'bK' : cause - Please enter a valid security type\r\n```\r\n\r\n##  自行调查的情况\r\n#### （1）通过阅读源代码，感觉reqCurrentTime()执行后，IB的API封装部分会异步调用IBWrapper中的currentTime()来返回服务器段时间结果。在currentTime()中会借用这个时机将subscribeReq发给IB。因此我打算在currentTime()设置调试断点检查subscribeReq的值。但是，实际上调试断点没有被触发，貌似IBWrapper的currentTime()没有被调用。\r\n\r\n#### （2）在IB Gateway一侧采集到LOG，如下：\r\n```\r\n3:57:54:235 -> ---\u000e54-1-DU5xxxxx-\r\n03:57:54:235 <- 9-8-1-0----0---SMART--HKD-777--0---\r\n03:57:54:235 -> ---V4-2-1-321-Error validating request:-'bE' : cause - Please enter a valid security type-\r\n03:57:54:236 <- 1-11-2-0----0---SMART--HKD-777--0--0--\r\n03:57:54:237 -> ---V4-2-2-321-Error validating request:-'bK' : cause - Please enter a valid security type-\r\n```\r\n第二行里面发个IB的数据包里面确实没有资产类型，但是在DR_setting.json中设置了资产类型为“STK\"，对应subscribeReq.productClass。好像这个数据没有传过去给IB G/W。\r\n\r\n## 希望得到帮助的事项\r\n### 请问（1）subscribeReq是在什么时候发送给IB的？（2）这个时间点上面，有几个工作线程？线程之间的工作时序时怎样的？\r\n\r\n\r\n# 补充：IB报错的问题刚才自行解决了。是DR_setting.json中的配置没有写对，要按照constant.py中的定义来写。但是，上面两个疑问还是希望可以得到解答。谢谢！",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/806/comments",
    "author": "zhu4ling3",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-05-07T14:51:49Z",
        "body": "1. 接口API的回调函数是在C++中触发的，无法在Python中加断点\r\n2. 工作线程在C++中有三个：请求发送、回报读取、Python推送"
      }
    ]
  },
  {
    "number": 786,
    "title": "PositionDetail中calculatePrice关于持仓均价问题 Question",
    "created_at": "2018-03-18T10:34:34Z",
    "closed_at": "2018-05-07T14:46:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/786",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n    def calculatePrice(self, trade):\r\n        \"\"\"计算持仓均价（基于成交数据）\"\"\"\r\n        # 只有开仓会影响持仓均价\r\n        if trade.offset == OFFSET_OPEN:\r\n\r\n为什么只有开仓影响持仓均价，平仓的时候，部分平仓，其均价为什么不会受影响。\r\n另外，全部平仓完，其均价是否也应该为0. \r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/786/comments",
    "author": "lajor2010",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-03-19T01:42:14Z",
        "body": "1. 这里计算的成本，是历史开仓价格的加权平均数，所以只考虑开仓，如果考虑平仓你就必须维护FIFO的成交历史记录，而CTP并不提供这个数据查询\r\n2. 全部平完后，价格应当为0（即没有持仓了）"
      }
    ]
  },
  {
    "number": 757,
    "title": "实盘模拟中，夜盘未成交挂单无法在日盘被策略自动撤销",
    "created_at": "2018-02-27T09:55:22Z",
    "closed_at": "2018-03-01T07:32:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/757",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 7\r\n* Anaconda版本: Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7.3dev\r\n\r\n## Issue类型\r\nBug\r\n\r\n## 程序行为\r\n在SIMNOW的实盘模拟中，夜盘的未成交挂单在交易时间内没撤销，第二天日盘策略内的cancel all 不能撤掉这个挂单，必须通过UI界面的全撤按钮才能撤销。\r\n基本是如果关闭UI前有挂单未成交并且为撤单，再次运行UI时策略无法取消掉之前的挂单，必须手动取消，或者下一个交易日才会取消。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/757/comments",
    "author": "huxunya",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-02-28T01:45:19Z",
        "body": "策略的cancelAll只能撤销由该策略发出的委托，UI上的全撤是撤销整个系统内所有的活动委托\r\n\r\n检查你是否夜盘收盘后关闭了系统，日盘开盘前才启动的，这样必然策略就不知道之前的委托了\r\n"
      },
      {
        "user": "huxunya",
        "created_at": "2018-02-28T04:17:39Z",
        "body": "对的，因为收盘后到下次开盘需要重新启动系统，所以是否可以设置日盘开启后撤销之前的系统挂单？或者可以限制最后几分钟不挂单？"
      },
      {
        "user": "vnpy",
        "created_at": "2018-03-01T03:24:32Z",
        "body": "第一个方法，可以写个小的定制化模块，每次日盘启动后自动全撤所有系统内委托。\r\n第二个方法，可以直接在策略里写，比如夜盘倒数3分钟不允许交易，并全撤委托"
      },
      {
        "user": "huxunya",
        "created_at": "2018-03-01T05:21:13Z",
        "body": "好的，谢谢"
      }
    ]
  },
  {
    "number": 756,
    "title": "安装完成后运行run.py报错，1.7版本和1.8版本都是",
    "created_at": "2018-02-27T03:10:04Z",
    "closed_at": "2018-02-28T02:01:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/756",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 16.04\r\n* vn.py版本: v1.7 && v1.8\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\nTraceback (most recent call last):\r\n  File \"run.py\", line 19, in <module>\r\n    from vnpy.trader.gateway import (ctpGateway, oandaGateway, ibGateway, \r\n  File \"/home/future_test/anaconda2/lib/python2.7/site-packages/vnpy-1.7.0-py2.7.egg/vnpy/trader/gateway/oandaGateway/__init__.py\", line 4, in <module>\r\n    from oandaGateway import OandaGateway\r\n  File \"/home/future_test/anaconda2/lib/python2.7/site-packages/vnpy-1.7.0-py2.7.egg/vnpy/trader/gateway/oandaGateway/oandaGateway.py\", line 27, in <module>\r\n    from vnpy.api.oanda import OandaApi\r\n  File \"/home/future_test/anaconda2/lib/python2.7/site-packages/vnpy-1.7.0-py2.7.egg/vnpy/api/oanda/__init__.py\", line 3, in <module>\r\n    from vnoanda import OandaApi\r\n  File \"/home/future_test/anaconda2/lib/python2.7/site-packages/vnpy-1.7.0-py2.7.egg/vnpy/api/oanda/vnoanda.py\", line 4, in <module>\r\n    import requests\r\n  File \"/home/future_test/anaconda2/lib/python2.7/site-packages/requests/__init__.py\", line 52, in <module>\r\n    from .packages.urllib3.contrib import pyopenssl\r\n  File \"/home/future_test/anaconda2/lib/python2.7/site-packages/requests/packages/urllib3/contrib/pyopenssl.py\", line 47, in <module>\r\n    import OpenSSL.SSL\r\n  File \"/home/future_test/anaconda2/lib/python2.7/site-packages/OpenSSL/__init__.py\", line 8, in <module>\r\n    from OpenSSL import rand, crypto, SSL\r\n  File \"/home/future_test/anaconda2/lib/python2.7/site-packages/OpenSSL/crypto.py\", line 13, in <module>\r\n    from cryptography.hazmat.primitives.asymmetric import dsa, rsa\r\n  File \"/home/future_test/anaconda2/lib/python2.7/site-packages/cryptography/hazmat/primitives/asymmetric/rsa.py\", line 14, in <module>\r\n    from cryptography.hazmat.backends.interfaces import RSABackend\r\n  File \"/home/future_test/anaconda2/lib/python2.7/site-packages/cryptography/hazmat/backends/__init__.py\", line 7, in <module>\r\n    import pkg_resources\r\nzlib.error: Error -2 while decompressing data: inconsistent stream state\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/756/comments",
    "author": "JohnHush",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-02-28T01:43:26Z",
        "body": "出错的是这个库：cryptography\r\n然后错误信息为：zlib.error: Error -2 while decompressing data: inconsistent stream state\r\n\r\nvn.py中导致这段出错的代码是你加载了OANDA的接口，如果不用的话从run.py中移除就好\r\n如果一定要用就得自己查找错误信息的原因了，建议可以直接弄个新的Ubuntu 16.04重装Anaconda 4.0.0"
      },
      {
        "user": "JohnHush",
        "created_at": "2018-02-28T02:01:22Z",
        "body": "好的，多谢了！！"
      }
    ]
  },
  {
    "number": 755,
    "title": "Ubuntu17.10 ImportError: No module named qtpy.QtCore 错误",
    "created_at": "2018-02-27T02:30:37Z",
    "closed_at": "2018-03-12T01:40:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/755",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 17.10, 64位\r\n* Anaconda版本: conda 4.3.29， python 2.7.14， 都64位\r\n* vn.py版本: v1.8\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 重现步骤\r\n根据wiki上的ubuntu安装步骤进行安装，我是先用conda创建了一个虚拟环境，在环境中安装相应的依赖，结果最后一步运行的时候，出现错误：\r\n```\r\n(vn) ➜  VnTrader python run.py \r\nTraceback (most recent call last):\r\n  File \"run.py\", line 13, in <module>\r\n    from vnpy.event import EventEngine\r\n  File \"/home/l0o0/.miniconda2/envs/vn/lib/python2.7/site-packages/vnpy/event/__init__.py\", line 3, in <module>\r\n    from .eventEngine import EventEngine, EventEngine2, Event, EVENT_TIMER\r\n  File \"/home/l0o0/.miniconda2/envs/vn/lib/python2.7/site-packages/vnpy/event/eventEngine.py\", line 10, in <module>\r\n    from qtpy.QtCore import QTimer\r\nImportError: No module named qtpy.QtCore\r\n```\r\n我分别使用conda安装过PyQt4和PyQt5，不过都会出现这样的问题。\r\n不知道是什么原因 \r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/755/comments",
    "author": "l0o0",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-02-28T01:40:26Z",
        "body": "之前尝试conda虚拟环境的时候遇到过相同的问题，当时未能解决。\r\n\r\n这里的报错是说缺失qtpy这个库，这是个PyQt4和5的兼容库，用conda安装下后再试试。"
      },
      {
        "user": "l0o0",
        "created_at": "2018-02-28T02:21:37Z",
        "body": "@vnpy 安装了之后，后面又出现了lib库文件的问题，应该是conda安装的和系统自带的库文件对不上。我开个虚拟机试试"
      },
      {
        "user": "Tilyp",
        "created_at": "2018-03-09T01:57:58Z",
        "body": "sudo apt-get install python-qt4      就可以解决"
      },
      {
        "user": "KimChow",
        "created_at": "2018-03-10T08:21:16Z",
        "body": "我在安装的时候，也遇过类似的问题。\r\n\r\n最终是按着教程上面，使用指定的Anaconda2-4.0.0的版本解决的。建议认真地看教程来搞咯。\r\n\r\n一些新版本的确存在说不清楚的问题。"
      },
      {
        "user": "raidsan",
        "created_at": "2018-07-02T06:16:20Z",
        "body": "应该是 PyQt4 吧？ 哪里来的 qtpy ?  快被搞糊涂了，  QtWidgets 是 PyQt5的， 不是说  pyqtgraph 要求 PyQt4吗....\r\n   qtpy 就应该改成 PyQt5"
      },
      {
        "user": "raidsan",
        "created_at": "2018-07-02T06:33:48Z",
        "body": "好多错，没有维护了？  QtCore.signal 应该改成 QtCore.pyqtSignal"
      },
      {
        "user": "jcjview",
        "created_at": "2018-07-12T06:52:13Z",
        "body": "after apt-get install python-qt4,\r\nstill need pip install qtpy in conda env"
      },
      {
        "user": "justinchou",
        "created_at": "2019-02-14T02:20:57Z",
        "body": "MacOS 出现这个问题我的解决方法是\r\n```\r\nbrew install qtpy\r\npip install QtPy\r\n```"
      }
    ]
  },
  {
    "number": 746,
    "title": "如何添加okex接口？",
    "created_at": "2018-02-22T11:55:22Z",
    "closed_at": "2018-05-07T14:46:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/746",
    "body": "在run.py内添加me.addGateway(okexGateway)后执行显示错误cannot import name okexGateway\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/746/comments",
    "author": "MooreY",
    "comments": [
      {
        "user": "xldistance",
        "created_at": "2018-02-25T00:46:48Z",
        "body": "你要先import okexGateway接口啊"
      },
      {
        "user": "vnpy",
        "created_at": "2018-02-26T01:10:02Z",
        "body": "okexGateway移动到了beta文件夹下，要使用的话请将api和gateway分别复制到你的site-packages下的vnpy目录中对应的位置后，就能加载使用了"
      }
    ]
  },
  {
    "number": 739,
    "title": "CTA策略模块策略开发 的wiki中关于类变量的说明",
    "created_at": "2018-02-18T06:26:38Z",
    "closed_at": "2018-05-07T14:46:19Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/739",
    "body": "## 环境\r\nmac && python3.5\r\n\r\n\r\n\r\n    # 这里定义的变量是类成员，方便引擎在创建策略对象前了解一些信息\r\n    barList = []    # 若基于TestStrategy类创建多个策略对象，他们的barList都会指向同一个列表，导致出错\r\n    lastPrice = 0   # 数字(int、float)在Python中属于不可变对象，因此每个策略的lastPrice互不影响\r\n\r\n    #----------------------------------------------------------------------\r\n    def __init__(self, ctaEngine, setting):\r\n      super(TestStrategy, self).__init__(ctaEngine, setting)\r\n\r\n      # 这里定义的变量是对象创建后自身独有的成员\r\n\r\n      self.barList = []   # 在这里对barList重新初始化，指向一个新建的独立列表`\r\n\r\n不管是list或者数字类型的类变量，它们不都是共享的吗？\r\n在init()方法中的重新声明同名变量，只不过是在类实例新定义了一个变量，原来的变量仍然存在啊，\r\n只不过由于属性查找顺序首先查找实例对象自己，然后是类，接着是类的父类。相当于被“覆盖”了\r\ninstance.__dict 和 instance.__class__.__dict__\r\n\r\n当然也可能是python2.7的特性不一样？？？\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/739/comments",
    "author": "avincross",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-02-20T13:03:35Z",
        "body": "1. 是共享的\r\n2. init声明覆盖后，后续查找的第一个都是实例对象自身的变量，那么就达到了目的：每个实例里的算法逻辑只访问本实例自身的数据"
      }
    ]
  },
  {
    "number": 732,
    "title": "有美股/港股的相关接口吗？",
    "created_at": "2018-02-10T16:59:57Z",
    "closed_at": "2018-02-12T01:19:07Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/732",
    "body": "或者有相关的计划之类的",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/732/comments",
    "author": "westeast",
    "comments": [
      {
        "user": "xldistance",
        "created_at": "2018-02-11T02:15:06Z",
        "body": "有对接富途、IB的"
      },
      {
        "user": "westeast",
        "created_at": "2018-02-11T02:46:59Z",
        "body": "这样，输入富途帐号，设置好策略，就可以自动买入卖出是吗？"
      },
      {
        "user": "xldistance",
        "created_at": "2018-02-11T03:04:35Z",
        "body": "估计入门得花一段时间......"
      },
      {
        "user": "vnpy",
        "created_at": "2018-02-12T01:19:07Z",
        "body": "建议直接使用富途接口，目前做美股、港股整体上用户体验最好的经纪商了。"
      }
    ]
  },
  {
    "number": 729,
    "title": "[Question] 谁调用vtEngine.py中PositionDetail的updateTick，用于实时计算盈亏",
    "created_at": "2018-02-07T04:58:35Z",
    "closed_at": "2018-02-12T06:54:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/729",
    "body": "## 环境\r\n\r\n* Ubuntu 16.04\r\n* Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py  1.7.3\r\n\r\n## Issue类型\r\nQuestion\r\n\r\n## 预期程序行为\r\n获取动态盈亏时，在持仓未同步之前，getPositionDetail后获取longPnl，发现由于没有tick的lastPrice，导致其longPnl都是亏几十万的，因为lastPrice=0无值\r\n\r\n目前：\r\n通过上层processTickEvent后，\r\n调用self.mainEngine.dateEngine.getPositionDetail(vtSymbol).updateTick(tick)向下直通式赋值，但觉得有种破坏结构性。\r\n\r\n\r\n想了解下，当前PositionDetail的updateTick，设计上在谁来触发，那里触发的？  \r\n谢谢\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/729/comments",
    "author": "lajor2010",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-02-07T14:09:32Z",
        "body": "由DataEngine负责触发"
      }
    ]
  },
  {
    "number": 727,
    "title": "策略运行回测后报错",
    "created_at": "2018-02-06T08:32:16Z",
    "closed_at": "2018-02-07T01:07:23Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/727",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n\r\n\r\n\r\n\r\n2018-02-06 16:25:02.756000\t开始载入数据\r\n2018-02-06 16:25:02.904000\t载入完成，数据量：463950\r\n2018-02-06 16:25:02.904000\t开始回测\r\n2018-02-06 16:25:02.904000\t策略初始化完成\r\n2018-02-06 16:25:02.904000\t策略启动完成\r\n2018-02-06 16:25:02.904000\t开始回放数据\r\n\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-17-198f99f1abe7> in <module>()\r\n      1 # 运行回测\r\n----> 2 engine.runBacktesting()          # 运行回测\r\n\r\nC:\\Anaconda2\\lib\\site-packages\\vnpy-1.7.2-py2.7.egg\\vnpy\\trader\\app\\ctaStrategy\\ctaBacktesting.pyc in runBacktesting(self)\r\n    248             data = dataClass()\r\n    249             data.__dict__ = d\r\n--> 250             func(data)\r\n    251 \r\n    252         self.output(u'数据回放结束')\r\n\r\nC:\\Anaconda2\\lib\\site-packages\\vnpy-1.7.2-py2.7.egg\\vnpy\\trader\\app\\ctaStrategy\\ctaBacktesting.pyc in newBar(self, bar)\r\n    260         self.crossLimitOrder()      # 先撮合限价单\r\n    261         self.crossStopOrder()       # 再撮合停止单\r\n--> 262         self.strategy.onBar(bar)    # 推送K线到策略中\r\n    263 \r\n    264         self.updateDailyClose(bar.datetime, bar.close)\r\n\r\nC:\\Users\\Gemini-Nick\\Desktop\\研究\\vnpy-1.7.3\\examples\\CtaBacktesting\\strategyBollingerBot.pyc in onBar(self, bar)\r\n    158 \r\n    159                 # 推送5分钟线数据\r\n--> 160                 self.onFiveBar(fiveBar)\r\n    161 \r\n    162                 # 清空5分钟线数据缓存\r\n\r\nC:\\Users\\Gemini-Nick\\Desktop\\研究\\vnpy-1.7.3\\examples\\CtaBacktesting\\strategyBollingerBot.pyc in onFiveBar(self, bar)\r\n    192         # 撤销之前发出的尚未成交的委托（包括限价单和停止单）\r\n    193         for orderID in self.orderList:\r\n--> 194             self.cancelOrder(orderID)\r\n    195         self.orderList = []\r\n    196 \r\n\r\nC:\\Anaconda2\\lib\\site-packages\\vnpy-1.7.2-py2.7.egg\\vnpy\\trader\\app\\ctaStrategy\\ctaTemplate.pyc in cancelOrder(self, vtOrderID)\r\n    147             self.ctaEngine.cancelStopOrder(vtOrderID)\r\n    148         else:\r\n--> 149             self.ctaEngine.cancelOrder(vtOrderID)\r\n    150 \r\n    151     #----------------------------------------------------------------------\r\n\r\nC:\\Anaconda2\\lib\\site-packages\\vnpy-1.7.2-py2.7.egg\\vnpy\\trader\\app\\ctaStrategy\\ctaBacktesting.pyc in cancelOrder(self, vtOrderID)\r\n    472     def cancelOrder(self, vtOrderID):\r\n    473         \"\"\"撤单\"\"\"\r\n--> 474         if vtOrderID in self.workingLimitOrderDict:\r\n    475             order = self.workingLimitOrderDict[vtOrderID]\r\n    476 \r\n\r\nTypeError: unhashable type: 'list'\r\n\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/727/comments",
    "author": "Gemini-Nick",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-02-07T01:07:23Z",
        "body": "v1.7.2后委托返回的是一个委托号的列表，而非单一委托号，因此撤单的时候要把列表里面的内容作为参数传入cancelOrder里"
      }
    ]
  },
  {
    "number": 725,
    "title": "vnpy中回测引擎是以什么价格撮合的？",
    "created_at": "2018-02-04T12:28:29Z",
    "closed_at": "2018-02-08T01:29:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/725",
    "body": "请教一个问题，载入数据为1min的K线数据\r\n在onbar方法里发出开仓信号后，计算出了一个具体的开仓点位、手数，\r\n在之后的k线里，会用什么价格撮合成交。（open、high、low、close）\r\n价格点在开盘价和最高价之间的话，会成交吗，以什么点位成交？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/725/comments",
    "author": "avincross",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-02-05T02:19:22Z",
        "body": "撮合的模式，接近实盘交易中的情景。\r\n\r\n都以买入为例\r\n\r\n限价100买入：\r\n1. 下一根K线Low<=100，能成交，反之不能\r\n2. 成交价格为100\r\n\r\n停止100买入：\r\n1. 下一根K线的High>=100，能成交，反之不能\r\n2. 下一根K线的Open<=100，意味着K线中有机会以100的价格追入，成交价为100\r\n3. 下一根K线的Open>100（比如105），意味着K线一开始就会触发信号，成交价为Open（即105）"
      },
      {
        "user": "avincross",
        "created_at": "2018-02-07T16:52:36Z",
        "body": "谢谢，主要是优矿帮助文档上仅以开盘价和成交量来判断是否成交，所以想问下。"
      },
      {
        "user": "vnpy",
        "created_at": "2018-02-08T01:29:00Z",
        "body": "优矿采用的是低频的粗粒度撮合模式，解决它针对的低频选股策略问题不大，但是对于CTA策略就精度太低了\r\n"
      }
    ]
  },
  {
    "number": 720,
    "title": "自建策略模块回测无法引用：No module named strategyXXX",
    "created_at": "2018-01-30T16:24:11Z",
    "closed_at": "2018-01-31T01:16:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/720",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 10\r\n* Anaconda版本: Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: v1.7.2\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n使用runBackTesting进行回测，引用vnpy.trader.app.ctaStrategy.strategy下原有的策略文件，可以正常进行回测。\r\n但是引用我新建的策略文件，比如：\r\n文件名为strategyNew.py，在runBackTesting中引用：\r\nfrom vnpy.trader.app.ctaStrategy.strategy.strategyNew import newStrategy\r\n运行后，系统就会提示错误：\r\nNo module named strategyNew\r\n\r\n很奇怪，照理来说都是vnpy.trader.app.ctaStrategy.strategy下的模块，都使用的绝对引用，为何我新建的模块就会提示找不到，请教\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/720/comments",
    "author": "unlimitnight0",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-01-31T01:16:18Z",
        "body": "1. 把策略文件放到安装到site-packages目录中的vnpy相关目录下，而不是你下载解压后的目录下\r\n2. 回测的话，直接放到CtaBacktesting目录下，然后from strategyNew import newStrategy就行"
      },
      {
        "user": "unlimitnight0",
        "created_at": "2018-01-31T07:49:33Z",
        "body": "十分感谢，回答精准，响应迅速"
      }
    ]
  },
  {
    "number": 717,
    "title": "vnpy有支持单策略内实现多个品种交易从而实现复杂套利策略的计划吗？",
    "created_at": "2018-01-26T03:50:26Z",
    "closed_at": "2018-02-01T08:21:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/717",
    "body": "vnpy就缺套利策略的实现了......",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/717/comments",
    "author": "xldistance",
    "comments": [
      {
        "user": "msincenselee",
        "created_at": "2018-01-28T02:25:27Z",
        "body": "有实现的。\r\n看我的fork\r\n"
      },
      {
        "user": "vnpy",
        "created_at": "2018-01-29T02:18:10Z",
        "body": "如果是价差交易的话，目前已经有SpreadTrading模块的实现了，相应的策略交易功能将会在v1.9.0之前推出。"
      }
    ]
  },
  {
    "number": 709,
    "title": "centos (非GUI) 下能正常使用吗？比如收集数据。",
    "created_at": "2018-01-23T03:01:49Z",
    "closed_at": "2018-01-23T06:34:55Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/709",
    "body": "centos (非GUI) 下能正常使用吗？比如收集数据。\r\n\r\npython runDataRecording.py\r\n会出错：\r\nImportError: No module named queue\r\n\r\n## 环境\r\n\r\n* 操作系统: 如WCentos 6.5\r\n* Anaconda版本: 如Anaconda2 Python 2.7 32位\r\n* vn.py版本: 如v1.7.3 \r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/709/comments",
    "author": "baimin1",
    "comments": [
      {
        "user": "yesheng1984",
        "created_at": "2018-01-23T05:22:10Z",
        "body": "安装下future模块，试一下\r\npip install future"
      }
    ]
  },
  {
    "number": 708,
    "title": "centos anconda  下安装vnpy成功后，anaconda2/lib/python2.7/site-packages/vnpy没有发现example目录",
    "created_at": "2018-01-23T02:12:03Z",
    "closed_at": "2018-01-23T06:34:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/708",
    "body": "centos anconda  下安装vnpy成功后，anaconda2/lib/python2.7/site-packages/vnpy没有发现example目录\r\n请问怎么办？\r\n\r\n## 环境\r\n\r\n* 操作系统: centos 6.5\r\n* Anaconda版本anaconda2 Python 2.7\r\n* vn.py版本: 如v1.7.3\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/708/comments",
    "author": "baimin1",
    "comments": [
      {
        "user": "JaysonAlbert",
        "created_at": "2018-01-23T02:23:27Z",
        "body": "example目录是不会被安装的，只有项目目录里才有"
      },
      {
        "user": "BillyZhangGuoping",
        "created_at": "2018-01-23T02:41:54Z",
        "body": "解压缩zip文档就有了，直接copy过去"
      },
      {
        "user": "baimin1",
        "created_at": "2018-01-23T02:48:36Z",
        "body": "谢谢！"
      }
    ]
  },
  {
    "number": 701,
    "title": "请问一部分代码按照python 3风格修改后如何在python 2环境下启动？",
    "created_at": "2018-01-19T07:20:13Z",
    "closed_at": "2018-01-20T03:49:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/701",
    "body": "比如讲import Queue改为import queue在python 2找不到module",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/701/comments",
    "author": "geraybos",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-01-20T03:49:39Z",
        "body": "pip install future，现在最新的requirements.txt中已经加上，会自动安装"
      }
    ]
  },
  {
    "number": 697,
    "title": "Python 3 + Anaconda 5 支持？",
    "created_at": "2018-01-18T07:29:09Z",
    "closed_at": "2018-01-20T03:47:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/697",
    "body": "现在公司用的是 Python 3.6 + Anaconda 5.0，是否可以使用 vnpy ？ 能否增加相应支持？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/697/comments",
    "author": "jiagengliu",
    "comments": [
      {
        "user": "xldistance",
        "created_at": "2018-01-18T10:34:53Z",
        "body": "有py3的ctp接口"
      },
      {
        "user": "vnpy",
        "created_at": "2018-01-19T01:28:18Z",
        "body": "python3有社区贡献的CTP接口，5.0兼容方面应该没太大问题，有些小的库更新就自己修改下函数。"
      }
    ]
  },
  {
    "number": 692,
    "title": "关于“应用模块开发GUI界面”",
    "created_at": "2018-01-16T08:05:47Z",
    "closed_at": "2018-01-17T01:21:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/692",
    "body": "如题：\r\n\r\n能否简单设置界面色调，python新人，萌新一问。\r\n非常感谢这款软件的设计者",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/692/comments",
    "author": "Henry-PY",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-01-17T01:21:35Z",
        "body": "vn.py中的界面主题设置，使用的是pyqt的QStyleSheet功能，可以在Github和Google上搜索其他的主题来替换。"
      }
    ]
  },
  {
    "number": 680,
    "title": "数据库中的rawdata是什么",
    "created_at": "2018-01-11T02:30:15Z",
    "closed_at": "2018-01-15T01:29:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/680",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7.2发行版\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n数据库中无rawdata出现\r\n\r\n## 实际程序行为\r\n数据库中值均为null的rawData是什么，记得之前版本中没有出现过的。这个空值是不是导致插入数据重复报错的原因呢。\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n查看数据库\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/680/comments",
    "author": "KobeZhao",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-01-12T01:18:11Z",
        "body": "rawData是针对某些用户自行对接的交易接口，如果有特殊的字段是vtObject中的数据类所不支持的，可以直接将原始数据通过rawData传送给上层应用部分，省去修改中间引擎层的工作 "
      }
    ]
  },
  {
    "number": 679,
    "title": "请问下，vnpy中 期货回测 有自动拼接成主力连续的数据么",
    "created_at": "2018-01-10T07:19:24Z",
    "closed_at": "2018-01-16T05:32:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/679",
    "body": "如题。好多平台，提供了各个合约的数据，可是要回测的时候，需要在主力连续上回测。请问下vnpy中，是否能够主力连续上回测。\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/679/comments",
    "author": "linshilogin",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-01-11T01:08:14Z",
        "body": "vn.py是另一个思路，你可以选择将策略在所有主力合约上跑回测，然后拼接起来得到最终的盈亏曲线。\r\n\r\n这个方法比拼接行情数据后再回测，可以彻底规避掉换月跳空导致的不准确问题。"
      },
      {
        "user": "linshilogin",
        "created_at": "2018-01-11T02:42:05Z",
        "body": "@vnpy 你好。这个“将策略在所有主力合约上跑回测，然后拼接起来得到最终的盈亏曲线”  的过程，vnpy是已经有了模块来拼接，还是需要用户自己来自定义拼接方式呢？"
      },
      {
        "user": "vnpy",
        "created_at": "2018-01-12T01:22:39Z",
        "body": "参考CtaBacktesting下的组合回测功能，拼接就是自己把每段回测好得到的DataFrame加起来就行了，很傻瓜"
      },
      {
        "user": "linshilogin",
        "created_at": "2018-01-19T02:44:59Z",
        "body": "@vnpy  你好。“vn.py是另一个思路，你可以选择将策略在所有主力合约上跑回测”  这段话，也不是很好实现。比如，我要在过去3年的 czce.zc 上回测，那么 就拿到一个这么一个时间段和品种，如何去定  具体在zc的那些合约上 运行呢。"
      },
      {
        "user": "vnpy",
        "created_at": "2018-01-22T01:39:21Z",
        "body": "1. 了解该品种的主力合约切换规律\r\n2. 定义好3年时间里，每段时间回测要用的合约是具体哪个\r\n3. 运行回测"
      },
      {
        "user": "luckyxinshidai",
        "created_at": "2018-12-05T13:46:53Z",
        "body": "(⊙o⊙)…，这种方法好傻啊。。。为什么不能整个主力合约与真实合约的对照关系的这种逻辑呢？"
      }
    ]
  },
  {
    "number": 675,
    "title": "该写开发日志2018年项目计划了",
    "created_at": "2018-01-08T04:30:29Z",
    "closed_at": "2018-05-07T14:46:00Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/675",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Enhancement\r\n\r\n## 预期程序行为\r\n有开发日志2018年项目计划\r\n\r\n## 实际程序行为\r\n无开发日志2018年项目计划\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/675/comments",
    "author": "pl1612127",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-01-08T08:40:02Z",
        "body": "哈哈哈，好的，我尽快在春节前写"
      },
      {
        "user": "huxunya",
        "created_at": "2018-01-10T06:41:12Z",
        "body": "顺手就把价差交易的策略模板写了呗"
      },
      {
        "user": "vnpy",
        "created_at": "2018-05-07T14:46:00Z",
        "body": "已完成"
      }
    ]
  },
  {
    "number": 669,
    "title": "#371里面说到部分API只有32位接口，在64位Python中使用可能出现异常，请问只有32位接口的API是哪些？",
    "created_at": "2018-01-02T10:52:16Z",
    "closed_at": "2018-01-03T00:29:27Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/669",
    "body": "## 环境\r\n\r\n* 如Windows 7\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 64位\r\n\r\n## Issue类型\r\n#371里面说到部分API只有32位接口，在64位Python中使用可能出现异常，请问只有32位接口的API是哪些？如果忽略掉那些只有32位接口的API，是否可以使用Anaconda64 Python 64位？\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/669/comments",
    "author": "sirtristancomtedeartois",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-01-03T00:29:27Z",
        "body": "目前项目中，所有Windows上的接口都是32位的，Ubuntu上的接口都是64位的\r\n\r\nWindows的64位接口可以自行尝试编译"
      }
    ]
  },
  {
    "number": 663,
    "title": "下午收盘后，日志隔一段时间会提示“交易服务器连接成功”，然后立马又提示“交易服务器连接断开”，是什么原因呢？",
    "created_at": "2017-12-29T08:19:30Z",
    "closed_at": "2018-01-02T00:19:09Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/663",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7.2发行版\r\n\r\n## Issue类型\r\nQuestion\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/663/comments",
    "author": "water321",
    "comments": [
      {
        "user": "xldistance",
        "created_at": "2017-12-30T12:13:08Z",
        "body": "收盘后断开连接，程序会一直尝试重连......"
      }
    ]
  },
  {
    "number": 659,
    "title": "No Qt bindings could be found",
    "created_at": "2017-12-27T08:41:57Z",
    "closed_at": "2017-12-28T02:27:56Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/659",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 8\r\n* Anaconda版本: 如利用anaconda创建的虚拟环境  Python 2.7 32位\r\n* vn.py版本: 如v1.7.2\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n\r\n\r\n\r\n## 重现步骤\r\n\r\n运行run.py 或者运行 runBacktesting.py  都会出现以下问题\r\n\r\nfrom qtpy.QtCore import QTimer\r\n  File \"D:\\common\\Anaconda3.4\\envs\\vnpyEnv\\lib\\site-packages\\qtpy\\__init__.py\", line 154, in <module>\r\n    raise PythonQtError('No Qt bindings could be found')\r\nqtpy.PythonQtError: No Qt bindings could be found\r\n\r\n\r\n关键我已经安装了pyqt 5.6 啊。\r\n\r\n实在找不出为什么了？\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/659/comments",
    "author": "linshilogin",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-12-28T02:27:56Z",
        "body": "请使用Anaconda 4.0.0 Python 2.7"
      },
      {
        "user": "linshilogin",
        "created_at": "2017-12-28T05:16:58Z",
        "body": "@vnpy  你好。Anaconda 4.0.0 Python 2.7 32位  如何与  其他anaconda版本并存 很存在问题。请问下，是否有成功的案例。"
      },
      {
        "user": "vnpy",
        "created_at": "2017-12-29T01:20:05Z",
        "body": "不建议采用并存的方案，如果有需要可以用多个虚拟机，然后基于socket通讯交换信息"
      }
    ]
  },
  {
    "number": 655,
    "title": "vnpy的按照是否可以 用虚拟环境来安装",
    "created_at": "2017-12-23T03:03:58Z",
    "closed_at": "2018-01-08T08:55:15Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/655",
    "body": "我看了官网提供的安装方法。\r\n\r\n但是我现在已经有了其他版本的anaconda\r\n\r\n请问下我是否可以通过conda -n 新建一个虚拟环境，然后在虚拟 环境中 安装 vnpy官网提供的那些环境。如果可以的话，要怎么修改呢。\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/655/comments",
    "author": "linshilogin",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-12-28T02:30:54Z",
        "body": "除非你自己已经是高手，否则不建议折腾"
      }
    ]
  },
  {
    "number": 649,
    "title": "\\vnpy-1.7.2\\examples\\CtaBacktesting 中的例子运行报错",
    "created_at": "2017-12-19T14:34:33Z",
    "closed_at": "2017-12-20T01:36:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/649",
    "body": "vn.py  下载后 。Windows：双击运行install.bat自动安装  安装了。\r\n\r\n结果：：：\r\n\r\n用spyder 运行\\vnpy-1.7.2\\examples\\CtaBacktesting    下的runBacktesting.py。直接报很多错误\r\nNo module named chinese\r\nprint str(datetime.now()) + \"\\t\" + content    SyntaxError: invalid syntax\r\n\r\n\r\n自带的示例都直接报错。\r\n\r\n请问下是为什么哇？\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/649/comments",
    "author": "linshilogin",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-12-20T01:36:45Z",
        "body": "请不要用spyder运行，直接去目录下用python运行"
      },
      {
        "user": "linshilogin",
        "created_at": "2017-12-20T03:01:48Z",
        "body": "你好。请问下是用命令行运行么。那 想用ide调试 python程序 是不是在vnpy中实现不了啊"
      },
      {
        "user": "linshilogin",
        "created_at": "2017-12-20T10:24:44Z",
        "body": "@vnpy "
      },
      {
        "user": "vnpy",
        "created_at": "2017-12-21T02:05:12Z",
        "body": "可以用pycharm、wingide这类项目开发用的IDE来跑，不建议用Spyder这种做交互式开发的IDE来做"
      }
    ]
  },
  {
    "number": 639,
    "title": "ImportError: No module named queue",
    "created_at": "2017-12-11T09:46:36Z",
    "closed_at": "2017-12-14T08:09:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/639",
    "body": null,
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/639/comments",
    "author": "zjx",
    "comments": [
      {
        "user": "sun0x00",
        "created_at": "2017-12-11T09:52:32Z",
        "body": "pip install future\r\n这是为了兼容python3做出的修改，只需要安装future模块即可修改"
      },
      {
        "user": "ttys000",
        "created_at": "2017-12-25T14:20:33Z",
        "body": "@zjx 纠正一下\r\n是pip install snappy"
      },
      {
        "user": "linshilogin",
        "created_at": "2017-12-27T01:02:38Z",
        "body": "@zjx pip install future\r\n这是为了兼容python3做出的修改，只需要安装future模块即可修改\r\n\r\n请问下，vnpy不是只能用python2 么，怎么还要兼容python3呢。"
      },
      {
        "user": "vnpy",
        "created_at": "2017-12-28T02:28:26Z",
        "body": "在慢慢做一些版本兼容的升级"
      },
      {
        "user": "liujunhui2",
        "created_at": "2018-06-05T01:16:10Z",
        "body": "我也遇到了\"No module named queue\"的问题，并且pip install future也不管用。\r\n我的解决办法是修改lib/python2.7/site-packages/vnpy-1.7.2-py2.7.egg/vnpy/event/eventEngine.py文件，把from queue import Queue, Empty 改为 from Queue import Queue, Empty\r\n即小写queue改为大写的Queue"
      },
      {
        "user": "jiangsanyin",
        "created_at": "2020-07-22T02:18:45Z",
        "body": "> pip install future\r\n> 这是为了兼容python3做出的修改，只需要安装future模块即可修改\r\n\r\n我安装的是python2.7.12，执行此命令安装future模块后，此问题解决，感谢！~\\(≧▽≦)/~ ~\\(≧▽≦)/~"
      }
    ]
  },
  {
    "number": 637,
    "title": "1",
    "created_at": "2017-12-11T09:16:50Z",
    "closed_at": "2017-12-14T01:14:31Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/637",
    "body": "",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/637/comments",
    "author": "zha0yangchen",
    "comments": [
      {
        "user": "zly111",
        "created_at": "2017-12-13T08:09:09Z",
        "body": "这是因为缓存数据不够多吧"
      },
      {
        "user": "vnpy",
        "created_at": "2017-12-14T01:14:31Z",
        "body": "报错了什么？"
      },
      {
        "user": "zha0yangchen",
        "created_at": "2017-12-15T06:30:27Z",
        "body": "ctabase里的缓存限制了，改一下就好了"
      }
    ]
  },
  {
    "number": 636,
    "title": "为什么mongdb里记录的分钟行情和其它软件里的差一分钟？",
    "created_at": "2017-12-11T02:22:12Z",
    "closed_at": "2017-12-15T07:40:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/636",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7 \r\n* vn.py版本: git上12/10下的最新版\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\nQuestion\r\n## 预期程序行为\r\n打开vntrader运行examples里的策略，开启行情记录，\r\n查看mongdb中的一分钟数据\r\n2017-12-11 09:39:00.000Z\r\nVnTrader_1Min_Db rb1805\r\nopen:3955.0\r\nhigh:3957  \r\n## 实际程序行为\r\n其它交易软件显示的数据10点39分数据为\r\nopen:3953.0\r\nhigh:3955\r\n而10点四十分的数据才为mongdb里的数据  \r\n\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/636/comments",
    "author": "davidyangan",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-12-14T01:10:59Z",
        "body": "有些软件用K线起始作为时间戳，有些使用结束作为时间戳\r\n\r\n现在已经改为使用起始位的了"
      },
      {
        "user": "davidyangan",
        "created_at": "2017-12-15T06:27:30Z",
        "body": "好的，谢谢！我再核对下"
      }
    ]
  },
  {
    "number": 632,
    "title": "市场信息监控为何禁止排序了？",
    "created_at": "2017-12-09T04:36:52Z",
    "closed_at": "2017-12-15T07:40:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/632",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: 如Anaconda 5.0.1 Python 2.7 64位\r\n* vn.py版本: dev branch 20171201 (dfb23ab2f486991061df1331e0015e663bbc789b)（下载日期）\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n市场信息监控可以按标题排序\r\n\r\n## 实际程序行为\r\n不能排序了\r\n\r\n## 重现步骤\r\n点一下市场信息监控UI的标题\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\nuiBasicWidget.py的第457行代码\r\n        # 设置排序\r\n        self.setSorting(False)\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/632/comments",
    "author": "wisfern",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-12-14T01:09:01Z",
        "body": "两个原因：\r\n1. 发现大部分人用不到\r\n2. 订阅数据量过大的时候，如果不点击强制排序会导致每行乱跳的情况\r\n\r\n索性关掉了，有需求的自己打开就行"
      }
    ]
  },
  {
    "number": 627,
    "title": "xtp账号怎么申请了，有了解的朋友么",
    "created_at": "2017-12-07T05:52:28Z",
    "closed_at": "2017-12-08T01:21:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/627",
    "body": "",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/627/comments",
    "author": "reaIws",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-12-08T01:21:04Z",
        "body": "测试帐号需要去www.xtphelp.com网站申请\r\n实盘帐号需要1000万去中泰证券开户"
      }
    ]
  },
  {
    "number": 622,
    "title": "可以交易50ETF期权吗？",
    "created_at": "2017-12-01T06:44:09Z",
    "closed_at": "2017-12-01T14:23:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/622",
    "body": "对应券商的服务器地址和端口从哪儿取得呢？\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/622/comments",
    "author": "4ever911",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-12-01T14:23:28Z",
        "body": "目前vn.py支持的50ETF期权接口：\r\n1. 中信证券vnpy.api.cshshlp\r\n2. CTP证券柜台vnpy.api.ctp（华西期货、南华期货）\r\n3. 飞创证券柜台vnpy.api.sec（银河期货、兴业期货）"
      }
    ]
  },
  {
    "number": 616,
    "title": "onTick()回调速度慢的问题",
    "created_at": "2017-11-22T05:27:04Z",
    "closed_at": "2017-12-02T12:34:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/616",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.3.0 Python 2.7 64位\r\n* vn.py版本: 如v1.7.1发行版\r\n\r\n## Issue类型\r\nQuestion\r\n\r\n## 预期程序行为\r\n'vtGateway收到Tick数据，put进入策略的队列后，策略函数onTick()应该很快回调，的回调时间一般延后20-30毫秒\r\n## 实际程序行为\r\n'vtGateway收到Tick数据，put进入策略的队列后，策略函数onTick()的回调时间一般延后20-30毫秒\r\n\r\n## 重现步骤\r\n在'vtGateway的onTick()函数中增加打印信息\r\n    def onTick(self, tick):\r\n        \"\"\"市场行情推送\"\"\"\r\n        # 通用事件\r\n        event1 = Event(type_=EVENT_TICK)\r\n        event1.dict_['data'] = tick\r\n        self.eventEngine.put(event1)\r\n        print(\"vtGateway::onTick()\",time.time(),event1.type_)\r\n        # 特定合约代码的事件\r\n        event2 = Event(type_=EVENT_TICK+tick.vtSymbol)\r\n        event2.dict_['data'] = tick\r\n        self.eventEngine.put(event2)\r\n\tprint(\"vtGateway::onTick()\",time.time(),event2.type_)\r\n\r\n在策略MyStrategy的onTick()中增加打印信息\r\nclass MyStrategy(CtaTemplate):\r\n\r\n    def onTick(self, tick):\r\n        \"\"\"收到行情TICK推送（必须由用户继承实现）\"\"\"\r\n        print(\"MyStrategy::onTick() time:\",time.time())\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n打印信息如下：\r\n('vtGateway::onTick()', 1511327132.446368, 'eTick.')\r\n('vtGateway::onTick()', 1511327132.446532, 'eTick.IF1712')\r\n('MyStrategy::onTick() time:', 1511327132.492622)\r\n\r\n('vtGateway::onTick()', 1511327132.936723, 'eTick.')\r\n('vtGateway::onTick()', 1511327132.936898, 'eTick.IF1712')\r\n('MyStrategy::onTick() time:', 1511327132.961351)\r\n\r\n('vtGateway::onTick()', 1511327133.705335, 'eTick.')\r\n('vtGateway::onTick()', 1511327133.705477, 'eTick.IF1712')\r\n('MyStrategy::onTick() time:', 1511327133.746765)\r\n\r\n('vtGateway::onTick()', 1511327133.940717, 'eTick.')\r\n('vtGateway::onTick()', 1511327133.940854, 'eTick.IF1712')\r\n('MyStrategy::onTick() time:', 1511327133.968843)\r\n\r\n('vtGateway::onTick()', 1511327134.460096, 'eTick.')\r\n('vtGateway::onTick()', 1511327134.46041, 'eTick.IF1712')\r\n('MyStrategy::onTick() time:', 1511327134.487052)\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/616/comments",
    "author": "kevinlee1974",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-11-23T01:15:10Z",
        "body": "可以参考知乎专栏里的一个关于vn.py事件引擎测试的文章，目前通用版的EventEngine基本就是15-25的响应延时"
      }
    ]
  },
  {
    "number": 615,
    "title": "vnpy可以实时聚合XBarK线，等满足XBar分钟再聚合一次吗？",
    "created_at": "2017-11-22T02:05:38Z",
    "closed_at": "2017-12-02T14:45:08Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/615",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: 如Anaconda 5.0.1 Python 3.6 64位\r\n* vn.py版本: v1.7.1dev branch 20171114\r\n\r\n## Issue类型\r\n三选一：Enhancement\r\n\r\n## 预期程序行为\r\n实时聚合XBarK线推送Bar可以最快的抓住行情，等满足XBar分钟再聚合错过不少利润了。可以设计成实时聚合XBarK线并推送，等满足XBar分钟的时候再聚合推送一次吗\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/615/comments",
    "author": "xldistance",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-12-02T14:45:08Z",
        "body": "这种做法不能保证回测中的数据一致性，说白了就是可能出现所谓实盘信号闪烁的情况，算是CTA策略里一个比较初级的坑了"
      }
    ]
  },
  {
    "number": 614,
    "title": "回测触发止损的返回信息",
    "created_at": "2017-11-21T15:44:48Z",
    "closed_at": "2017-12-02T12:33:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/614",
    "body": "现在回测中，触发了止损，它只返回了一个止损单号以及一个标志，已触发。\r\n然后又返回了一个 onTrade，而这个 onTrade的单号是在引擎中自己生成的，我们策略中根本就不知道这个单号。\r\n能不能在触发止损返回onStopOrder的时候就把这个单号一起返回给策略？\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/614/comments",
    "author": "viponedream",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-11-22T04:54:45Z",
        "body": "目前不行呢，因为停止委托被触发后，实际发出去的单子是在那一刻才生成委托号的，所以在你下达停止委托的那一刻并不知道"
      },
      {
        "user": "t0trader",
        "created_at": "2017-11-27T12:34:44Z",
        "body": "@vnpy 可以用FrontID + SessionID + OrderRef 在本地定位报单INPUT，然后和前置反馈的ORDER建立联系"
      }
    ]
  },
  {
    "number": 612,
    "title": "现在vnpy支持python 64位了么，我看wiki中vnpy的安装教程，使用了Anaconda64位",
    "created_at": "2017-11-20T09:42:51Z",
    "closed_at": "2017-11-21T08:04:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/612",
    "body": "现在vnpy支持python 64位了么，我看wiki中vnpy的安装教程，使用了Anaconda64位",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/612/comments",
    "author": "reaIws",
    "comments": [
      {
        "user": "xldistance",
        "created_at": "2017-11-20T11:27:24Z",
        "body": "群里的只有CTP 64位的接口，可以正常使用的"
      }
    ]
  },
  {
    "number": 586,
    "title": "ctaTrading 子进程关闭时保存持仓到本地",
    "created_at": "2017-11-02T08:47:23Z",
    "closed_at": "2017-11-03T01:28:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/586",
    "body": "1.7.1中 examples/CtaTrading中 runParentProcess会在非交易时间关闭子进程runChildProcess, 那么策略持仓回保存到本地数据库么？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/586/comments",
    "author": "HY-Scatterer",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-11-03T01:28:35Z",
        "body": "v1.7.1之后的策略持仓已经改为在收到成交回报的时候实时保存到数据库里了，后面再启动策略时会自动加载进来，只要数据库不挂就完全不用担心。"
      }
    ]
  },
  {
    "number": 579,
    "title": "连续运行程序，第二天策略发不出单",
    "created_at": "2017-10-26T13:35:31Z",
    "closed_at": "2017-10-27T00:16:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/579",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* vn.py版本: v1.6.2\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 程序行为\r\n第一天是正常的，日志上有发单，实际上也发单了。\r\n然后没有重启程序。\r\n第二天，“CTA策略”这个页面上的日志有发单日志，但是实际上没有发单。\r\n\r\n## 重现步骤\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/579/comments",
    "author": "JasonXZh",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-10-27T00:16:26Z",
        "body": "VnTrader的进程每天收盘后必须关闭，第二天盘前重启；想要实现自动运维请参考examples/CtaTrading下的守护进程模式。"
      }
    ]
  },
  {
    "number": 575,
    "title": "有支持python3.6的打算吗",
    "created_at": "2017-10-26T04:51:29Z",
    "closed_at": "2017-10-26T07:48:35Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/575",
    "body": "\r\n## Issue类型\r\nQuestion\r\n\r\n请问下有支持python3.6的打算吗？\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/575/comments",
    "author": "yc3231996",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-10-26T07:48:32Z",
        "body": "暂时没有哦"
      }
    ]
  },
  {
    "number": 558,
    "title": "请教如何获取某一策略的仓位",
    "created_at": "2017-10-20T03:27:24Z",
    "closed_at": "2017-12-02T13:47:46Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/558",
    "body": "求教，当对同一品种做多策略的时候，怎么获取某一策略的仓位信息呢？\r\n或者是在开发策略时需要增加哪些东西？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/558/comments",
    "author": "JasonXZh",
    "comments": [
      {
        "user": "xldistance",
        "created_at": "2017-10-20T04:45:51Z",
        "body": "abs(self.pos)"
      }
    ]
  },
  {
    "number": 552,
    "title": "How to get the data for Dow/Nasdaq?",
    "created_at": "2017-10-18T13:35:43Z",
    "closed_at": "2017-12-02T12:33:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/552",
    "body": "New to this, I will dig into it while someone may possibly provide me an answer, thanks!\r\nPlease label this as a question only, thanks!",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/552/comments",
    "author": "zhenqidong",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-10-18T13:53:15Z",
        "body": "You can use ibGateway to connect to Interactive Brokers and get stock price data for Dow/Nasdaq or futures price data of the two indexes on CME.\r\n\r\nYou may also use shzdGateway to connect to Shanghai Zhida Futures for futures data."
      }
    ]
  },
  {
    "number": 548,
    "title": "CTP TdApi 偶尔无法退出",
    "created_at": "2017-10-17T02:27:41Z",
    "closed_at": "2017-10-18T14:07:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/548",
    "body": "int TdApi::exit()\r\n{\r\n\t//该函数在原生API里没有，用于安全退出API用，原生的join似乎不太稳定\r\n\tthis->api->RegisterSpi(NULL);\r\n\tthis->api->Release();\r\n\tthis->api = NULL;\r\n\treturn 1;\r\n};\r\n在Release之前不需要调用RegisterSpi(NULL);注销Spi的，如果这样做了，有可能导致CTP退不出的",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/548/comments",
    "author": "bigdig",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-10-17T03:00:54Z",
        "body": "这个是参考了官方一个demo里的实现，问下是怎么出现退出不了的情况？手动关闭VnTrader不太可能卡住吧"
      },
      {
        "user": "bigdig",
        "created_at": "2017-10-17T13:58:39Z",
        "body": "我是在每个分段交易前10分重新连接交易服务，每一两周就会出现关闭时阻塞现象，原因定位到exit()这里，解决方法我也是在网上看一哥们说的（我也还没有确认这样就一定好使^_^）。\r\n`        #盘前10分钟\r\n        timesOn = ['08:50',\"13:20\",\"20:50\"]\r\n        timesOff = ['15:10','23:10']\r\n        #重启\r\n        reBoot = lambda: [log.debug(\"Stopping\"), stop(), log.debug('Staring'), start(), log.debug('Restart OK')]\r\n\r\n        #开机先起动\r\n        start()\r\n        #开盘前重启\r\n        [ schedule.every().day.at(t).do( \r\n            lambda:reBoot() if datetime.now().isoweekday() not in [6,7] else None )\r\n              for t in timesOn]`"
      }
    ]
  },
  {
    "number": 542,
    "title": "螺纹钢（SHFE）没有添加到锁仓模式，开仓的时候是锁仓模式",
    "created_at": "2017-10-12T10:28:11Z",
    "closed_at": "2017-10-13T01:12:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/542",
    "body": "旧的仓位没有平掉，直接开反方向的仓位了\r\ntdPenalty里面只有IF和IH",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/542/comments",
    "author": "xldistance",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-10-13T01:12:37Z",
        "body": "这个是给用户自己添加配置的......每个品种的交易规则交易所经常改啊"
      }
    ]
  },
  {
    "number": 537,
    "title": "连接CTP无任何反应，求解答",
    "created_at": "2017-10-10T15:57:18Z",
    "closed_at": "2017-10-11T01:14:26Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/537",
    "body": "启动VtTrade.bat后能看到软件运行主界面，但点击“连接CTP”后主界面上看不到任何行情信息，“错误”和“日志”栏也没有任何输出。CTP_connect.json已经正确配置。\r\n如果点击“连接币行”，能在主界面上看到行情信息，但无法下单。其他的所有连接都是没有任何输出。\r\n求解答。\r\n#为什么“连接CTP”看不到行情信息？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/537/comments",
    "author": "cydrain",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-10-11T01:14:26Z",
        "body": "配置文件OKCOIN_connect.json修改其中的内容为你自己的账户"
      },
      {
        "user": "xldistance",
        "created_at": "2017-10-11T03:33:46Z",
        "body": "国内的比特币程序化API都关了，没的交易了"
      },
      {
        "user": "cydrain",
        "created_at": "2017-10-11T13:03:50Z",
        "body": "为什么“连接CTP”看不到行情信息？"
      },
      {
        "user": "vnpy",
        "created_at": "2017-10-12T01:58:21Z",
        "body": "连接后你得订阅行情才会有行情推送过来"
      },
      {
        "user": "linbozhong",
        "created_at": "2018-03-08T04:01:23Z",
        "body": "启动VtTrade.bat后能看到软件运行主界面，但点击“连接CTP”后主界面上看不到任何行情信息，“错误”和“日志”栏也没有任何输出。CTP_connect.json已经正确配置。\r\n我昨天还可以连接到ctp，今天就出现了上面这样没有任何反应的情况，请问什么原因？\r\n\r\n-- 已解决，切换了个服务器就好了。但是没有弹出任何提示，找问题不太好找。"
      }
    ]
  },
  {
    "number": 530,
    "title": "ctaTemplate 中BarManager 的updateBar方法 合成x分钟bar不正确",
    "created_at": "2017-09-28T06:09:13Z",
    "closed_at": "2017-10-07T03:01:32Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/530",
    "body": "应该是第5min中bar到达后，先处理5min的bar，再去推Xmin的bar",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/530/comments",
    "author": "wangxu666",
    "comments": [
      {
        "user": "wangxu666",
        "created_at": "2017-09-28T08:51:36Z",
        "body": "def updateBar(self, bar):\r\n\t\"\"\"1分钟K线更新\"\"\"\r\n\tnewX = False      # 默认不是新的X分钟\r\n\t\r\n\t# 尚未创建对象\r\n\tif not self.xminBar:\r\n\t\tself.xminBar = VtBarData()\r\n\t\tnewX = True\r\n\r\n\t\t\r\n\t# 初始化K线数据\r\n\tif newX:\r\n\t\tself.xminBar.vtSymbol = bar.vtSymbol\r\n\t\tself.xminBar.symbol = bar.symbol\r\n\t\tself.xminBar.exchange = bar.exchange\r\n\t\r\n\t\tself.xminBar.open = bar.open\r\n\t\tself.xminBar.high = bar.high\r\n\t\tself.xminBar.low = bar.low\r\n\t# 累加老K线\r\n\telse:\r\n\t\tself.xminBar.high = max(self.xminBar.high, bar.high)\r\n\t\tself.xminBar.low = min(self.xminBar.low, bar.low)\r\n\t\t\r\n\t# 通用部分\r\n\tself.xminBar.close = bar.close\r\n\tself.xminBar.datetime = bar.datetime\r\n\tself.xminBar.openInterest = bar.openInterest\r\n\tself.xminBar.volume += int(bar.volume)\r\n\t\r\n\t# X分钟已经走完\r\n\tif not bar.datetime.minute % self.xmin:   # 可以用X整除\r\n\t\t# 生成上一X分钟K线的时间戳\r\n\t\tself.xminBar.datetime = self.xminBar.datetime.replace(second=0, microsecond=0)  # 将秒和微秒设为0\r\n\t\tself.xminBar.date = self.xminBar.datetime.strftime('%Y%m%d')\r\n\t\tself.xminBar.time = self.xminBar.datetime.strftime('%H:%M:%S.%f')\r\n\t\t\r\n\t\t# 推送\r\n\t\tself.onXminBar(self.xminBar)\r\n\t\t\r\n\t\t# 释放xminBar对象\r\n\t\tself.xminBar = None"
      },
      {
        "user": "vnpy",
        "created_at": "2017-10-02T14:34:41Z",
        "body": "这里的设计是：\r\n1. 调用updateTick告知BM有新的tick更新，然后BM自动去合成1分钟K线，并调用回调函数\r\n2. 显式调用updateBar告知BM有新的bar更新，然后BM自动去合成X分钟K线，并调用回调函数"
      },
      {
        "user": "wangxu666",
        "created_at": "2017-10-03T02:01:27Z",
        "body": "恩，逻辑没问题。是否在合成的时候细节逻辑不对。5min bar 应该是在第 5个1 min bar到达时候处理bar 然后push ，目前的逻辑是5min 到达后先push 5min bar,这样导致每次5min bar的close 是第四个一分钟bar 的close."
      },
      {
        "user": "vnpy",
        "created_at": "2017-10-07T03:01:32Z",
        "body": "明白了，已经修复这个问题，多谢！"
      }
    ]
  },
  {
    "number": 523,
    "title": "对于市场成交数据流的问题",
    "created_at": "2017-09-25T02:20:18Z",
    "closed_at": "2017-09-25T06:01:18Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/523",
    "body": "部分期货高频参考了市场成交数据流，用于判断下单量。但vnpy框架的onTrade这个貌似是为了个人帐户的成交信息做准备的，而没有一个针对市场成交数据的接口。\r\n是这样的吗？还是我理解出错了？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/523/comments",
    "author": "wisfern",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-09-25T06:01:18Z",
        "body": "期货交易所提供的行情数据，只有1秒推送2次的切片，通过行情接口MdApi推送，对应的是CTA策略模块里的onTick推送的数据。\r\n\r\nL2行情的接口是需要自己找交易所购买的。"
      },
      {
        "user": "wisfern",
        "created_at": "2017-09-25T06:26:03Z",
        "body": "那trade数据，还是通过onTrade这个接口把市场成交数据通知策略？"
      },
      {
        "user": "vnpy",
        "created_at": "2017-09-26T00:08:49Z",
        "body": "你自己的成交数据，是通过onTrade通知你的"
      },
      {
        "user": "wisfern",
        "created_at": "2017-09-26T01:38:42Z",
        "body": "好的，看来市场的成交数据需要自己再扩展接口来实现。"
      }
    ]
  },
  {
    "number": 513,
    "title": "windows下运行run.py报错ImportError",
    "created_at": "2017-09-19T08:35:06Z",
    "closed_at": "2017-09-23T01:28:36Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/513",
    "body": "ImportError: No module named strategy_options\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/513/comments",
    "author": "BruceDai003",
    "comments": [
      {
        "user": "xldistance",
        "created_at": "2017-09-20T01:52:52Z",
        "body": "贴上完整错误啊"
      }
    ]
  },
  {
    "number": 512,
    "title": "能否将时间Event暴露给策略",
    "created_at": "2017-09-19T00:56:15Z",
    "closed_at": "2017-09-23T01:29:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/512",
    "body": "有时候我们发了单后，需要在30秒后判断该委托成交没有，如果没有成交则撤单，有个秒表时间就容易实现了。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/512/comments",
    "author": "miyihuxi",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-09-20T02:43:11Z",
        "body": "时间功能在回测里没法实现，CTA策略模块的回测和实盘一致性必须要保证。\r\n\r\n更推荐通过监控你发单tick的时间戳和最新tick的时间戳做对比来实现定时撤单。\r\n\r\n"
      }
    ]
  },
  {
    "number": 507,
    "title": "加载价差交易器，报错问题",
    "created_at": "2017-09-14T13:51:40Z",
    "closed_at": "2017-09-15T01:09:34Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/507",
    "body": "spreadingTrading\\uiStWidget.py line389, in initUi\r\n        self.horizontalHeader().setResizeMode(QtWidgets.QHeaderView.Stretch)\r\nAttributeError: 'QHeaderView' object has no attribute 'setResizeMode'\r\n这个报错该怎样解决？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/507/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-09-15T01:09:34Z",
        "body": "找到报错行的代码，注释掉就行。\r\n\r\n因为你用的Anaconda版本较新，带的是qt5了"
      }
    ]
  },
  {
    "number": 504,
    "title": "请问vnpy仅支持mongoDB吗，如何使用mysql来回测和交易呢",
    "created_at": "2017-09-13T09:08:35Z",
    "closed_at": "2017-09-20T07:58:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/504",
    "body": "",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/504/comments",
    "author": "timinGo",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-09-14T02:09:57Z",
        "body": "目前不支持，MySQL在行情数据方面的性能相比教于MongDB还是差一些，另外关系型数据库在这块也没什么太大的意义"
      }
    ]
  },
  {
    "number": 487,
    "title": "OKCOIN更新gateway后无法记录数据",
    "created_at": "2017-09-05T08:24:11Z",
    "closed_at": "2017-09-19T14:42:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/487",
    "body": "2017-09-05 16:18:45,207  ERROR: error from callback <bound method Api.onMessage of <vnpy.trader.gateway.okcoinGateway.okcoinGateway.Api object at 0x08E6F430>>: Error -3 while decompressing: invalid distance too far back\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\websocket\\_app.py\", line 269, in _callback\r\n    callback(self, *args)\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.7.0-py2.7.egg\\vnpy\\trader\\gateway\\okcoinGateway\\okcoinGateway.py\", line 275, in onMessage\r\n    data = self.readData(evt)[0]\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.7.0-py2.7.egg\\vnpy\\api\\okcoin\\vnokcoin.py\", line 108, in readData\r\n    inflated = decompress.decompress(evt) + decompress.flush()",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/487/comments",
    "author": "xldistance",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-09-05T12:42:39Z",
        "body": "请检查日志中是否有okcoinGateway连接成功的信息，这个报错常见于连接失败后返回无用信息导致"
      },
      {
        "user": "xldistance",
        "created_at": "2017-09-05T23:59:25Z",
        "body": "服务器连接成功，还是无法记录数据"
      }
    ]
  },
  {
    "number": 481,
    "title": "1.7版本run.py 出现错误提示RuntimeWarning",
    "created_at": "2017-09-01T09:15:19Z",
    "closed_at": "2017-09-03T17:10:51Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/481",
    "body": "(py27x86) C:\\Users\\User\\Desktop\\Python\\quant\\vnpy>python run.py\r\nC:\\Users\\User\\Anaconda3\\envs\\py27x86\\lib\\site-packages\\vnpy\\api\\ib\\__init__.py:3\r\n: RuntimeWarning: to-Python converter for class std::vector<class ibapi::shared_\r\nptr<class OrderCondition>,class std::allocator<class ibapi::shared_ptr<class Ord\r\nerCondition> > > already registered; second conversion method ignored.\r\n---------\r\nFailed to import strategy file strategyEngine:\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\User\\Anaconda3\\envs\\py27x86\\lib\\site-packages\\vnpy\\trader\\app\\c\r\ntaStrategy\\strategy\\__init__.py\", line 18, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"C:\\Users\\User\\Anaconda3\\envs\\py27x86\\lib\\importlib\\__init__.py\", line 37\r\n, in import_module\r\n    __import__(name)\r\nImportError: No module named strategyEngine\r\n还有一堆import error，不全部截取了，能成功启动vnpy，暂时不清楚该报错会影响什么功能。\r\n\r\n安装过程比较坎坷（不清楚是否跟安装过程有关）：\r\n原来有1.6.2版本，安装在conda环境下（py27x86）。\r\n1.手动把vnpy的文件夹删了。\r\n2.然后解压之前下载好的安装包。\r\n3.激活py27x86环境后，进入解压的文件夹下,python setup.py install。\r\n4.解压后在py27x86的site-packages下，有vnpy-1.7.0-py2.7.egg文件夹，将其中的vnpy文件夹复制到site-packages下。\r\n\r\n二更：\r\n仔细看了看报错信息，上面的错误提示不知道为什么少了个\\（估计手抖删了），下面是更正后的错误提示：\r\n--------------------\r\nFailed to import strategy file strategyEngine:\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\User\\Anaconda3\\envs\\py27x86\\lib\\site-packages\\vnpy\\trader\\app\\c\r\ntaStrategy\\strategy\\__init__.py\", line 18, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"C:\\Users\\User\\Anaconda3\\envs\\py27x86\\lib\\importlib\\__init__.py\", line 37\r\n, in import_module\r\n    __import__(name)\r\nImportError: No module named strategyEngine\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/481/comments",
    "author": "likenji",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-09-01T09:56:06Z",
        "body": "C:\\Users\\User\\Anaconda3\\envs\\py27x86\\lib\\site-packages\\vnpy\\trader\\app\\c\r\ntaStrategy\\strategy_init_.py\"\r\n\r\n这个strategy_init_.py不是目前官方版本里的，你自己加的？"
      },
      {
        "user": "likenji",
        "created_at": "2017-09-01T20:11:34Z",
        "body": "找了找文件夹，没有strategyEngine这个文件，是不是这里出错了"
      },
      {
        "user": "likenji",
        "created_at": "2017-09-03T17:10:51Z",
        "body": "问题半解决。\r\n解决方法：卸载后，pip install source.rar\r\n之所以叫半解决，因为RuntimeWarning: to-Python converter for class std::vector<class ibapi::shared_\r\nptr,class std::allocator<class ibapi::shared_ptr > > already registered; second conversion method ignored.\r\n仍然存在"
      },
      {
        "user": "viponedream",
        "created_at": "2017-09-03T19:00:02Z",
        "body": "strategy\\_init_.py 安装好就有这个东西。在安装目录下面。\r\n出现这个的原因是你使用了自己的策略文件，并且这个策略文件没有存在安装目录下。\r\n我也是同个问题。解决方案就是 把策略文件复制到 安装目录下面去。不要放在 run 目录下。"
      }
    ]
  },
  {
    "number": 478,
    "title": "Mac系统安装不了",
    "created_at": "2017-08-29T08:55:55Z",
    "closed_at": "2017-08-30T01:28:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/478",
    "body": "Mac系统安装不了，感觉是boost库编译失败了。\r\npython vnpy/examples/VnTrader/run.py \r\nTraceback (most recent call last):\r\n  File \"vnpy/examples/VnTrader/run.py\", line 19, in <module>\r\n    from vnpy.trader.gateway import (ctpGateway, oandaGateway, ibGateway, \r\n  File \"/Users/jing/anaconda2/lib/python2.7/site-packages/vnpy-1.7.0-py2.7.egg/vnpy/trader/gateway/ctpGateway/__init__.py\", line 4, in <module>\r\n    from ctpGateway import CtpGateway\r\n  File \"/Users/jing/anaconda2/lib/python2.7/site-packages/vnpy-1.7.0-py2.7.egg/vnpy/trader/gateway/ctpGateway/ctpGateway.py\", line 16, in <module>\r\n    from vnpy.api.ctp import MdApi, TdApi, defineDict\r\n  File \"/Users/jing/anaconda2/lib/python2.7/site-packages/vnpy-1.7.0-py2.7.egg/vnpy/api/ctp/__init__.py\", line 3, in <module>\r\n    from vnctpmd import MdApi\r\nImportError: No module named vnctpmd",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/478/comments",
    "author": "xJayLee",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-08-30T01:28:45Z",
        "body": "MAC系统用不了"
      },
      {
        "user": "xJayLee",
        "created_at": "2017-08-30T03:12:17Z",
        "body": "python是跨平台的，和接口有关？"
      },
      {
        "user": "vnpy",
        "created_at": "2017-08-30T13:19:24Z",
        "body": "是的，国内柜台API都没有提供MAC的版本"
      },
      {
        "user": "wsygzn",
        "created_at": "2019-03-29T10:11:57Z",
        "body": "如果可以提供一个版本，方便Mac安装，不用那些不支持Mac的接口，这样还能连很多Mac能支持的接口"
      }
    ]
  },
  {
    "number": 472,
    "title": "IF0000_1min.csv导入数据库出错中断",
    "created_at": "2017-08-24T05:38:56Z",
    "closed_at": "2017-08-25T02:06:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/472",
    "body": "函数 loadMcCsv('IF0000_1min.csv', MINUTE_DB_NAME, 'IF0000')  每次都出错中断，而且每次断的位置不一样，有时导入了快一半的时候断掉，有时刚开始就断掉，是什么原因，期间没有任何操作\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\ipykernel\\iostream.py\", line 317, in write\r\n    self._buffer.write(string)\r\n\r\nValueError: I/O operation on closed file",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/472/comments",
    "author": "ygnn008",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-08-25T01:17:20Z",
        "body": "看起来你是在ipython里运行的，请直接在Python里运行"
      },
      {
        "user": "linshilogin",
        "created_at": "2018-03-13T05:59:46Z",
        "body": "@vnpy ,我也遇到这个问题了。我是在spyder中运行的。这个是什么原因哇"
      },
      {
        "user": "linshilogin",
        "created_at": "2018-03-13T06:18:08Z",
        "body": "@每次出现问题的记录点都不一样，我设置断点都不好设置"
      },
      {
        "user": "vnpy",
        "created_at": "2018-03-14T01:02:57Z",
        "body": "请在Python里运行，不要用spyder或者ipython"
      }
    ]
  },
  {
    "number": 468,
    "title": "新人求教",
    "created_at": "2017-08-23T02:57:46Z",
    "closed_at": "2017-08-25T02:11:53Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/468",
    "body": "本人菜鸟最近刚刚开始研究vnpy项目，想请问已经在使用的各位前辈，你们用来回测的历史数据是通过什么方式取得并存入mongodb的，通联数据？（具体买的是哪类数据，因为要用到token凭证）还是multicharts导出数据csv（multicharts免费使用2个月），或是通达信导出数据，希望能予以解答，数据问题实在困扰，不胜感激",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/468/comments",
    "author": "ygnn008",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-08-23T14:21:09Z",
        "body": "1. 项目里自带了一个IF主力连续合约的分钟线数据，来源是MC，在examples/CtaBacktesting目录下\r\n2. 可以使用行情记录模块每天记录、使用上海中期数据服务自动下载\r\n3. 也在和更多的数据提供方对接，争取在年底前建立更多成熟的方案"
      },
      {
        "user": "linshilogin",
        "created_at": "2018-01-01T09:59:17Z",
        "body": "@vnpy  您好。请问下，你说的那个自带的IF数据是指的文件 IF0000_1min.csv 么。但是这个文件似乎在运行CtaBacktesting的策略的时候，没有被读取啊"
      },
      {
        "user": "vnpy",
        "created_at": "2018-01-02T00:21:29Z",
        "body": "运行loadCsv.py将数据插入到数据库里，后续回测都通过数据库加载"
      }
    ]
  },
  {
    "number": 467,
    "title": "方法def downloadEquityDailyBarts(self, symbol)是否属于class HistoryDataEngine(object)",
    "created_at": "2017-08-22T07:46:16Z",
    "closed_at": "2017-08-25T02:07:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/467",
    "body": "看源码def downloadEquityDailyBarts(self, symbol)是不属于class HistoryDataEngine(object)的，但为什么要加上self参数，而wiki里面的教程“行情解决方案”最后的例子：创建API下载引擎实例\r\n\r\n    e = HistoryDataEngine()\r\n根据所要下载品种选择相应函数，如下载'000001'日行情\r\n\r\n    e.downloadEquityDailyBarts(‘000001’)\r\n这分明是当作类的方法来调用的，我现在就是卡在取历史数据存入mongodb这步了，不知道如何调用downloadEquityDailyBarts(self, symbol)这个方法，教程和版本不一致，学习起来费大劲了，经常因为一点小问题止步",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/467/comments",
    "author": "ygnn008",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-08-23T01:16:10Z",
        "body": "通联数据接口的内容已经比较老了，最近准备删掉"
      },
      {
        "user": "ygnn008",
        "created_at": "2017-08-23T02:00:31Z",
        "body": "原来如此，那请问一下vnpy项目的用户主要通过什么方式取得历史数据呢，multicharts或是通达信软件导出么？数据问题我实在搞不清楚，谢谢了"
      }
    ]
  },
  {
    "number": 466,
    "title": "关于dev版本ctaHistoryData.py文件中的class HistoryDataEngine(object)",
    "created_at": "2017-08-22T03:10:25Z",
    "closed_at": "2017-08-22T09:54:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/466",
    "body": "class HistoryDataEngine(object):\r\n    \"\"\"CTA模块用的历史数据引擎\"\"\"\r\n\r\n    #----------------------------------------------------------------------\r\n    def __init__(self, token):\r\n        \"\"\"Constructor\"\"\"\r\n        self.dbClient = pymongo.MongoClient(globalSetting['mongoHost'], globalSetting['mongoPort'])\r\n        self.datayesClient = DatayesApi(token)\r\n请问token是什么参数类型",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/466/comments",
    "author": "ygnn008",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-08-22T09:54:27Z",
        "body": "token应该是字符串，需要在通联数据购买后才能有"
      }
    ]
  },
  {
    "number": 463,
    "title": "ctp夜盘前需要重新登录的问题",
    "created_at": "2017-08-21T02:59:19Z",
    "closed_at": "2017-08-30T01:58:06Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/463",
    "body": "有时候vnpy部署在台式机上，而ctp夜盘开盘前需要重新连接登录。而有时候人不在电脑边上，无法点击登录。针对这个问题我想到可以用itchat这个包，用微信发信息的方式来远程登录。同时也可以用itchat做当前持仓、策略运行情况发送等交互。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/463/comments",
    "author": "HY-Scatterer",
    "comments": [
      {
        "user": "KobeZhao",
        "created_at": "2017-08-21T07:04:50Z",
        "body": "直接设个任务计划不就好了么。。"
      },
      {
        "user": "vnpy",
        "created_at": "2017-08-22T00:59:25Z",
        "body": "也可以参考examples/CtaTrading使用守护进程的方式来实现"
      }
    ]
  },
  {
    "number": 462,
    "title": "关于1.6.2版本启动问题",
    "created_at": "2017-08-20T07:17:25Z",
    "closed_at": "2017-08-23T02:58:52Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/462",
    "body": "我确定是按照github上的步骤安装的，用的方法1：解压后运行install.bat自动安装，但是安装完之后并没有在Anaconda2\\Lib\\site-packages\\文件夹中找到vnpy-1.6.2b0-py2.7.egg文件夹，倒是在下载的文件中找到了CTP_connect.json文件并进行了修改，下一步保存run.py文件并运行，无论是双击还是cmd运行，都是闪一下就没反应了，该怎么解决，希望遇到同样问题的小伙伴回答一下，感激不尽",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/462/comments",
    "author": "ygnn008",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-08-21T01:57:32Z",
        "body": "运行install.bat是在cmd里输入install.bat安装，如果出错会有对应的内容输出。"
      }
    ]
  },
  {
    "number": 461,
    "title": "为啥下单等操作不做成异步的？",
    "created_at": "2017-08-18T09:14:12Z",
    "closed_at": "2017-08-30T01:58:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/461",
    "body": "这样在高频交易下 还是有些处理延迟啊！",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/461/comments",
    "author": "0428402001",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-08-21T01:55:02Z",
        "body": "因为在Python中直接调用底层接口发单的延时，小于将委托放到队列里再由另一个线程发送出去的延时。"
      },
      {
        "user": "0428402001",
        "created_at": "2017-08-21T09:41:29Z",
        "body": "直接在api里面td模块做成异步呢？"
      },
      {
        "user": "vnpy",
        "created_at": "2017-08-22T01:00:20Z",
        "body": "你可以试试看，如果比起目前的方案延时更低我来合并进去"
      },
      {
        "user": "4ever911",
        "created_at": "2017-08-30T08:58:01Z",
        "body": "其实还是要考虑做成异步的，因为可能同时对多个产品监控，可能同一时间会有很多下单请求，比如开盘时。放在一个队列里面还方便可以对流控做更细致的控制。"
      },
      {
        "user": "ghost",
        "created_at": "2018-12-13T09:08:46Z",
        "body": "这个问题是不是可以理解成除了交易所，或者大型券商 并没有这么多的业务压力？直接在python调用即可"
      }
    ]
  },
  {
    "number": 458,
    "title": "spreadTrading套利可以套用cta的回测框架吗",
    "created_at": "2017-08-18T02:53:22Z",
    "closed_at": "2017-08-30T01:58:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/458",
    "body": "目前在套利模块vnpy/vnpy/trader/app/spreadTrading/没有看到回测框架，可以套用cta的回测框架吗？由于套利模块至少有两个品种会出问题吗？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/458/comments",
    "author": "dandebin",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-08-21T01:53:32Z",
        "body": "不能直接套用，价差套利策略很多是半自动的，所以暂时只提供了算法，价差策略引擎可能后面看社区的需求决定是否要实现。"
      },
      {
        "user": "HY-Scatterer",
        "created_at": "2017-08-21T02:48:23Z",
        "body": "其实还是非常迫切地需要一个套利回测的框架"
      }
    ]
  },
  {
    "number": 453,
    "title": " 目前怎么运行VnTrader呢 ？",
    "created_at": "2017-08-17T01:59:45Z",
    "closed_at": "2017-08-18T01:26:02Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/453",
    "body": "",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/453/comments",
    "author": "FallacyWalker",
    "comments": [
      {
        "user": "likenji",
        "created_at": "2017-08-17T02:37:35Z",
        "body": "参考Github的quick start"
      },
      {
        "user": "vnpy",
        "created_at": "2017-08-18T01:26:02Z",
        "body": "请看dev页面下的Quickstart说明"
      }
    ]
  },
  {
    "number": 447,
    "title": "类似ctp接口回调的实现，直接使用回调接口参数传回来的指针，是否有出现引用非法地址这样错误的可能？",
    "created_at": "2017-08-14T03:15:51Z",
    "closed_at": "2017-08-17T01:48:47Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/447",
    "body": "```\r\n// vnpy/api/ctp/vnctpmd/vnctpmd/vnctpmd.cpp\r\nvoid MdApi::OnRspError(CThostFtdcRspInfoField *pRspInfo, int nRequestID, bool bIsLast)\r\n{\r\n\tTask task = Task();\r\n\ttask.task_name = ONRSPERROR;\r\n\r\n        // 直接使用回调接口参数传回来的指针指向的内存空间\r\n        // 没有数据的深拷贝过程，如果队列处理被阻塞，而回调接口参数指针\r\n        // 指向的内存空间已经被释放，会不会出现引用非法地址的错误？\r\n\tif (pRspInfo)\r\n\t{\r\n\t\ttask.task_error = *pRspInfo;\r\n\t}\r\n\telse\r\n\t{\r\n\t\tCThostFtdcRspInfoField empty_error = CThostFtdcRspInfoField();\r\n\t\tmemset(&empty_error, 0, sizeof(empty_error));\r\n\t\ttask.task_error = empty_error;\r\n\t}\r\n\ttask.task_id = nRequestID;\r\n\ttask.task_last = bIsLast;\r\n\tthis->task_queue.push(task);\r\n};\r\n```\r\n\r\n类似ctp接口回调的实现，直接使用回调接口参数传回来的指针，是否有出现引用非法地址这样错误的可能？\r\n如下面的代码段：\r\n```\r\n        // 直接使用回调接口参数传回来的指针指向的内存空间\r\n        // 没有数据的深拷贝过程，如果队列处理被阻塞，而回调接口参数指针\r\n        // 指向的内存空间已经被释放，会不会出现引用非法地址的错误？\r\n\tif (pRspInfo)\r\n\t{\r\n\t\ttask.task_error = *pRspInfo;\r\n\t}\r\n```",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/447/comments",
    "author": "xdev1206",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-08-16T01:26:29Z",
        "body": "这里已经对指针的数据进行拷贝了，赋值的是指针指向的对象数据，而不是指针本身。"
      },
      {
        "user": "xdev1206",
        "created_at": "2017-08-16T02:31:28Z",
        "body": "了解了，我看了一下回调函数传回的参数，结构体内数据类型中没有指针，目前的实现没有问题"
      }
    ]
  },
  {
    "number": 444,
    "title": "AttributeError: 'QHeaderView' object has no attribute 'setResizeMode'",
    "created_at": "2017-08-13T09:24:02Z",
    "closed_at": "2017-08-23T14:43:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/444",
    "body": "  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.6.2b0-py2.7.egg\\vnpy\\trader\\app\\spreadTrading\\uiStWidget.py\", line 389, in initUi\r\n    self.horizontalHeader().setResizeMode(QtWidgets.QHeaderView.Stretch)\r\nAttributeError: 'QHeaderView' object has no attribute 'setResizeMode',点击价差交易就出现这个错误",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/444/comments",
    "author": "xldistance",
    "comments": [
      {
        "user": "zsluedem",
        "created_at": "2017-08-14T00:57:18Z",
        "body": "pyqt版本问题吧，用的是pyqt几"
      },
      {
        "user": "xldistance",
        "created_at": "2017-08-15T06:57:45Z",
        "body": "用的是PYQT5，我把这行代码注释了可以用......"
      },
      {
        "user": "vnpy",
        "created_at": "2017-08-16T01:27:04Z",
        "body": "恩。。。这是个pyqt版本更新导致api不兼容的问题"
      },
      {
        "user": "isecren",
        "created_at": "2017-11-12T10:44:08Z",
        "body": "可以使用setSectionResizeMode替换setResizeMode"
      }
    ]
  },
  {
    "number": 436,
    "title": "现在应该用run.py还是tick2trader下的vtMain.py",
    "created_at": "2017-08-08T11:36:26Z",
    "closed_at": "2017-08-23T14:43:28Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/436",
    "body": "这两边都可以运行，但是有些不同。\r\n刚入门应该用哪个开始呢？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/436/comments",
    "author": "fupip",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-08-09T02:27:15Z",
        "body": "应该用run.py\r\n\r\ntick2trade下的那个回头我会处理掉了"
      },
      {
        "user": "fupip",
        "created_at": "2017-08-09T02:28:19Z",
        "body": "好的，感谢指点。"
      }
    ]
  },
  {
    "number": 430,
    "title": "怎么用vnpy做股票？",
    "created_at": "2017-08-01T06:35:07Z",
    "closed_at": "2017-08-03T01:31:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/430",
    "body": "大神们， vnpy里只放了做股指期货的代码样例，怎么没有做股票的哪？看来大神门只做期货/期权，不做股票的喽。。。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/430/comments",
    "author": "zzniwei",
    "comments": [
      {
        "user": "zsluedem",
        "created_at": "2017-08-01T08:00:16Z",
        "body": "股票接口不能用，只能看行情"
      },
      {
        "user": "zzniwei",
        "created_at": "2017-08-01T08:50:18Z",
        "body": "额，是柜台没有开放接口，还是没有做哪？"
      },
      {
        "user": "zsluedem",
        "created_at": "2017-08-01T09:08:40Z",
        "body": "没有开放接口了，政策抑制，"
      },
      {
        "user": "vnpy",
        "created_at": "2017-08-02T00:26:24Z",
        "body": "你有1000W的话可以走机构接口的方式接入。"
      },
      {
        "user": "zzniwei",
        "created_at": "2017-08-02T01:35:30Z",
        "body": "我是小P哪里那么多money：（"
      },
      {
        "user": "vnpy",
        "created_at": "2017-08-03T01:31:45Z",
        "body": "那就暂时没办法了"
      }
    ]
  },
  {
    "number": 429,
    "title": "msgpack cant serialize Event object",
    "created_at": "2017-08-01T05:57:27Z",
    "closed_at": "2017-08-23T14:42:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/429",
    "body": "试图用msgpack 进行序列化，得到了一下错误，\r\n\r\n    File \"msgpack\\_packer.pyx\", line 231, in msgpack._packer.Packer.pack (msgpack/_packer.cpp:3661)\r\n    File \"msgpack\\_packer.pyx\", line 233, in msgpack._packer.Packer.pack (msgpack/_packer.cpp:3503)\r\n    File \"msgpack\\_packer.pyx\", line 228, in msgpack._packer.Packer._pack (msgpack/_packer.cpp:3382)\r\n    TypeError: can't serialize <vnpy.event.eventEngine.Event instance at 0x0BF09C60>",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/429/comments",
    "author": "tesla1060",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-08-02T00:24:59Z",
        "body": "msgpack主要用于序列化数值、字符串、列表、字典等基础数据类型，复杂的数据类型需要专门配置模板。"
      }
    ]
  },
  {
    "number": 428,
    "title": "强迫症",
    "created_at": "2017-07-31T08:23:47Z",
    "closed_at": "2017-08-02T03:53:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/428",
    "body": "看代码，就是相知道，vn和vt是什么的缩写。\r\n没有按格式发issue，就是有些强迫症",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/428/comments",
    "author": "wheeler18",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-07-31T09:15:26Z",
        "body": "vt是VnTrader的缩写，vn的意思暂时保密，哈哈"
      },
      {
        "user": "wheeler18",
        "created_at": "2017-08-02T03:53:25Z",
        "body": "F"
      }
    ]
  },
  {
    "number": 400,
    "title": "前后端开发分离？",
    "created_at": "2017-07-11T01:18:42Z",
    "closed_at": "2017-07-15T15:55:35Z",
    "labels": [
      "question",
      "wontfix"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/400",
    "body": "有没有想过前后端开发分离下，现在前端代码都是手写，其实可以使用qtwidget写界面，然后后段独立逻辑，我觉得这样维护更好吧？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/400/comments",
    "author": "zsluedem",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-07-13T06:31:06Z",
        "body": "你说的是QDesigner那个图形化开发工具吧，个人使用经验是效率远不如自己手写来的快，所以就没用了"
      }
    ]
  },
  {
    "number": 393,
    "title": "运行run.py　遇到找不到指定模块",
    "created_at": "2017-07-08T03:39:47Z",
    "closed_at": "2017-07-10T01:24:57Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/393",
    "body": "\r\n  File \"D:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy\\api\\ctp\\__init__.py\", line 3, in <module>\r\n    from vnctpmd import MdApi\r\n\r\nImportError: DLL load failed: 找不到指定的模块。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/393/comments",
    "author": "zhikook",
    "comments": [
      {
        "user": "zsluedem",
        "created_at": "2017-07-08T06:13:18Z",
        "body": "什么版本的？\r\nD:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy\\api\\ctp里面有什么文件"
      },
      {
        "user": "vnpy",
        "created_at": "2017-07-08T13:29:08Z",
        "body": "1. 检查Anaconda版本是否为4.0.0 Python 2.7 32位\r\n2. 检查vcredist x86 2013是否安装"
      },
      {
        "user": "zhikook",
        "created_at": "2017-07-08T14:37:02Z",
        "body": "@zsluedem thanks ,list:\r\n\r\n__init__.py\r\n__init__.pyc\r\nctp_data_type.py\r\nctp_data_type.pyc\r\nthostmduserapi.dll\r\nthostmduserapi.so\r\nthosttraderapi.dll\r\nthosttraderapi.so\r\nvnctpmd.pyd\r\nvnctptd.pyd"
      },
      {
        "user": "zhikook",
        "created_at": "2017-07-08T15:03:26Z",
        "body": "@vnpy 谢谢，vcredist x86 2013安装版本出错，我想问题应该是这个，现在这个问题没有了，不过遇到新问题，我正在处理。\r\n\r\n  File \"D:\\ProgramData\\Anaconda2\\lib\\anydbm.py\", line 85, in open\r\n    return mod.open(file, flag, mode)\r\n\r\n  File \"D:\\ProgramData\\Anaconda2\\lib\\dbhash.py\", line 18, in open\r\n    return bsddb.hashopen(file, flag, mode)\r\n\r\n  File \"D:\\ProgramData\\Anaconda2\\lib\\bsddb\\__init__.py\", line 364, in hashopen\r\n    d.open(file, db.DB_HASH, flags, mode)\r\n\r\nDBNoSuchFileError: (2, 'No such file or directory')\r\n\r\n"
      },
      {
        "user": "zhikook",
        "created_at": "2017-07-08T15:06:18Z",
        "body": " #----------------------------------------------------------------------\r\n    def loadContracts(self):\r\n        \"\"\"从硬盘读取合约对象\"\"\"\r\n        f = shelve.open(self.contractFileName)\r\n        if 'data' in f:\r\n            d = f['data']\r\n            for key, value in d.items():\r\n                self.contractDict[key] = value\r\n        f.close()\r\n        \r\n请问是否要对那个文件设置读写权限，我的操作系统是ｗｉｎｄｏｗｓ７　３２"
      },
      {
        "user": "vnpy",
        "created_at": "2017-07-09T02:06:31Z",
        "body": "需要管理员权限，用管理员账号来启动Python"
      },
      {
        "user": "zhikook",
        "created_at": "2017-07-09T15:33:58Z",
        "body": "@vnpy 好的，谢谢。原先的电脑比较慢，等过一阵子换一个配置高的电脑再来弄。"
      },
      {
        "user": "Hilyme",
        "created_at": "2019-01-09T05:40:24Z",
        "body": "我的系统是win10，conda是4.3.30的，python是2.7的，然后vc是2015的，还是from .vnctpmd import MdApi\r\nImportError: DLL load failed: %1 不是有效的 Win32 应用程序  这个问题，这是什么原因"
      }
    ]
  },
  {
    "number": 388,
    "title": "关于ctaEngine中saveSetting",
    "created_at": "2017-07-05T02:13:47Z",
    "closed_at": "2017-07-09T13:12:59Z",
    "labels": [
      "enhancement",
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/388",
    "body": "目前这个函数并没有使用到，对吗？\r\n现在cta setting文件和程序文件在一起，安装新版本后就会覆盖，是否应该考虑更改配置文件路径",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/388/comments",
    "author": "geraybos",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-07-06T01:43:20Z",
        "body": "saveSetting是个预留函数，目前没有使用。\r\n\r\n配置文件的问题已经在处理了，会在v1.7中完成"
      }
    ]
  },
  {
    "number": 384,
    "title": "有开关可以方便的关闭界面的显示吗？",
    "created_at": "2017-07-01T14:47:31Z",
    "closed_at": "2017-07-03T01:04:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/384",
    "body": "因为放在服务器上跑，不需要界面，只要有日志就好了，有开关可以很方便去关闭吗？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/384/comments",
    "author": "JasonXZh",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-07-03T01:04:49Z",
        "body": "请参考Dev分支下的examples/CtaTrading"
      }
    ]
  },
  {
    "number": 371,
    "title": "请问有没有64bit的版本，是不是因为一些dll是32bit的？ ",
    "created_at": "2017-06-22T12:17:48Z",
    "closed_at": "2017-06-27T01:29:33Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/371",
    "body": "",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/371/comments",
    "author": "naturelan00",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-06-23T01:22:24Z",
        "body": "目前官方没有提供64位版本，原因：\r\n1. 部分API只有32位接口，在64位Python中使用可能出现异常\r\n2. 部分量化相关库的64位版本稳定性不如32位\r\n3. 32位版本的性能对于目前的应用几乎都可以满足"
      },
      {
        "user": "naturelan00",
        "created_at": "2017-06-26T07:07:39Z",
        "body": "明白了，谢谢。 主要是觉得用深度学习去开发策略的话可能需要用到64bit的python库。"
      }
    ]
  },
  {
    "number": 367,
    "title": "做回测的时候发现，不能同时载入分钟级别和日级别的bar历史行情数据",
    "created_at": "2017-06-20T09:44:50Z",
    "closed_at": "2017-06-27T09:29:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/367",
    "body": "做回测的时候发现，不能同时载入分钟级别和日级别的bar历史行情数据，回测引擎返回初始化是分钟级别的bar数据，这样的话很不方便，回测不准确，建议在回测引擎和ctaEngine里面，增加载入历史日行情数据的方法\r\n\r\ndef loadBar(self, dbName, collectionName, startDate):\r\n        \"\"\"直接返回初始化数据列表中的Bar\"\"\"\r\n        return self.initData\r\n\r\n\r\n def loadDailyBar(self, dbName, collectionName, days):\r\n        \"\"\"从数据库中读取Bar数据，startDate是datetime对象\"\"\"\r\n        startDate = self.today - timedelta(days)\r\n        \r\n        d = {'datetime':{'$gte':startDate}}\r\n        barData = self.dailyDbCursor.dbQuery(dbName, collectionName, d)\r\n        \r\n        l = []\r\n        for d in barData:\r\n            bar = CtaBarData()\r\n            bar.__dict__ = d\r\n            l.append(bar)\r\n        return l",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/367/comments",
    "author": "zzniwei",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-06-21T01:08:38Z",
        "body": "可以通过分钟线自行聚合为日线"
      },
      {
        "user": "zzniwei",
        "created_at": "2017-06-23T02:01:38Z",
        "body": "难道每次需要用到历史日行情，都要自己self.onbar计算均线 ？ ：（"
      },
      {
        "user": "vnpy",
        "created_at": "2017-06-23T02:26:21Z",
        "body": "目前是的，每天实盘在跑的时候也只有通过这个方法来不断进行计算。\r\n\r\nvn.py的定位是实盘交易，策略开发时涉及的各种比较复杂的回测计算建议通过定制化的脚本实现。"
      }
    ]
  },
  {
    "number": 365,
    "title": "关于1.6.2的代码结构",
    "created_at": "2017-06-17T04:39:41Z",
    "closed_at": "2017-06-27T09:30:10Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/365",
    "body": "是不是只有vnpy目录下的代码有用？其他几个目录的代码是重复的？除vnpy目录外删掉也行？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/365/comments",
    "author": "JasonXZh",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-06-19T00:22:54Z",
        "body": "archive中的是项目老代码，但是考虑可能有些人会用到暂时保留，未来会删除\r\ndocker中的是DOCKER应用模式下的代码，和目前的结构有所区别，用不着可以删掉\r\nexamples是vn.py的使用方法示例，建议保留\r\ntutorial中的是一些特殊的实盘应用指南，因为是过去写的所以代码版本和目前已经不再通用，用不着可以删掉"
      },
      {
        "user": "vnpy",
        "created_at": "2017-06-19T00:23:30Z",
        "body": "1.7发布正式版前，会对目录做一次清理"
      }
    ]
  },
  {
    "number": 362,
    "title": "okcoin接口 zlib: Error -3 while decompressing data: invalid distance too far back",
    "created_at": "2017-06-13T02:25:23Z",
    "closed_at": "2017-06-27T09:21:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/362",
    "body": "    如下函数在使用zlib解压缩出现错误 zlib: Error -3 while decompressing data: invalid distance too far back\r\n  def readData(self, evt):\r\n        \"\"\"解压缩推送收到的数据\"\"\"\r\n        # 创建解压器\r\n        decompress = zlib.decompressobj(-zlib.MAX_WBITS)\r\n        \r\n        # 将原始数据解压成字符串\r\n        inflated = decompress.decompress(evt) + decompress.flush()\r\n        \r\n        # 通过json解析字符串\r\n        data = json.loads(inflated)\r\n        \r\n        return data",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/362/comments",
    "author": "nigelliyang",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-06-14T01:48:55Z",
        "body": "请说明你遭遇这个问题的情景？比如用的系统、Python版本，做了什么操作"
      },
      {
        "user": "vnpy",
        "created_at": "2017-06-27T09:21:48Z",
        "body": "无更新，关闭issue。"
      },
      {
        "user": "yiyisan",
        "created_at": "2017-12-16T03:31:23Z",
        "body": "本以为报错的原因是zlib设置，后来调试才发现，原来是OKEx传过来的数据大部分是压缩的，有部分竟然是没有压缩的，没压缩的就会报这个错误，有点坑"
      }
    ]
  },
  {
    "number": 361,
    "title": "一个策略能够同时交易多个品种，怎么做呢？",
    "created_at": "2017-06-13T02:20:52Z",
    "closed_at": "2017-06-27T09:22:12Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/361",
    "body": "",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/361/comments",
    "author": "nigelliyang",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-06-14T01:47:50Z",
        "body": "CTA策略模块不允许交易多个品种。\r\n\r\n价差交易模块会限制以价差的形式交易多个品种。\r\n\r\n要那种可以复杂交易的需要自己开发扩展模块。"
      },
      {
        "user": "ujfjhz",
        "created_at": "2017-06-14T07:23:28Z",
        "body": "您的意思是不支持多品种的“组合”交易吧？如果各品种独立交易，同一个策略可以支持多品种吗？"
      },
      {
        "user": "vnpy",
        "created_at": "2017-06-15T01:08:26Z",
        "body": "可以的，这个是CTA模块自带的功能。"
      }
    ]
  },
  {
    "number": 340,
    "title": "量化回测",
    "created_at": "2017-06-02T09:05:58Z",
    "closed_at": "2017-06-02T14:13:59Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/340",
    "body": "搭建了vnpy，看到策略只支持CTA策略，请教下不知道做股票的回测支持不支持，改动大不大？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/340/comments",
    "author": "Tonykeng",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-06-02T14:13:59Z",
        "body": "vn.py的主要定位是量化交易这个环节，如果以Alpha类策略举例，vn.py解决的是每天策略生成的交易列表实盘中的算法执行任务，而不是每天收盘后的策略运行计算目标持仓的任务。"
      }
    ]
  },
  {
    "number": 188,
    "title": "vnctpmd.so vnltsmd.so有32位的库版本吗？",
    "created_at": "2016-11-27T01:58:25Z",
    "closed_at": "2016-12-05T01:33:58Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/188",
    "body": "首先谢谢  vnpy提供了如此好的框架。目前正在32位的ubuntu上进行安装。碰到了vnctpmd.so 和vnltsmd.so只支持64位的问题。想问一下 vnctpmd.so vnltsmd.so有32位的库版本吗？ 非常谢谢啦",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/188/comments",
    "author": "DennisFoo",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2016-11-28T01:19:11Z",
        "body": "不好意思，因为官方API只提供了64的so，所以没有32的"
      }
    ]
  },
  {
    "number": 185,
    "title": "会出支持python3的版本吗",
    "created_at": "2016-11-24T07:25:41Z",
    "closed_at": "2016-12-01T01:45:37Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/185",
    "body": "求支持",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/185/comments",
    "author": "slashqiang",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2016-11-24T13:33:47Z",
        "body": "因为量化相关的部分库在Python3还没有非常完美的支持，所以暂时没有升级计划。\r\n\r\n但是这确实也是大势所趋，未来等生态慢慢成熟后会移植过去。"
      }
    ]
  },
  {
    "number": 154,
    "title": "CTAengine中数据推送的问题",
    "created_at": "2016-09-20T06:03:37Z",
    "closed_at": "2016-09-27T09:52:48Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/154",
    "body": "假设在CTAsetting文件中设置了多策略同时使用某一个合约的时候\n单独运行其中一个策略，另一个策略也会收到数据推送\n\n修正方法\nctaEngine.py文件中processTickEvent(self,event)\n修改：\n\n```\nl = self.tickStrategyDict[tick.vtSymbol]\n            for strategy in l:\n                strategy.onTick(ctaTick)\n```\n\n为：\n\n```\nl = self.tickStrategyDict[tick.vtSymbol]\n            for strategy in l:\n                if strategy.trading:\n                    strategy.onTick(ctaTick)\n```\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/154/comments",
    "author": "crazykuma",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2016-09-27T09:52:48Z",
        "body": "你说的情况是CTA引擎的设计初衷，所以这个修改有点问题。\n\n目前CTA引擎的设计是允许没有启动交易的策略也实时接收到推送的行情，并进行相关的指标等数据计算，后面需要时用户只需启动交易就可以了。\n\n采用你这里改进的写法，会导致没有启动的策略收不到行情数据。\n"
      }
    ]
  },
  {
    "number": 152,
    "title": "要是想给vnpy贡献代码的话，按照什么流程？",
    "created_at": "2016-09-14T08:18:58Z",
    "closed_at": "2016-09-27T09:48:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/152",
    "body": "是允许咱们提交新的分支？还是说只允许添加新文件？还是咋个玩法？陈总给科普一下？\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/152/comments",
    "author": "snake3342",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2016-09-27T09:48:28Z",
        "body": "目前没有非常正式的流程，整体上欢迎修复bug和提交新的功能代码，我review后没问题就合并进去，有需要修改的地方会和作者沟通，尽量由贡献者修改后我这边来合并，这样可以比较清楚的看到大家的贡献。\n"
      }
    ]
  },
  {
    "number": 136,
    "title": "exchange拿不到交易所名称，其他关键字都没问题。调用的的是ctp接口。",
    "created_at": "2016-08-12T08:51:24Z",
    "closed_at": "2016-08-30T01:39:54Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/136",
    "body": "class getAccoutInfo(object):\n    \"\"\"获取账户信息\"\"\"\n    #----------------------------------------------------------------------\n    def **init**(self, mainEngine):\n        self.eventEngine = mainEngine.eventEngine\n        # 注册事件监听\n        self.accountDic = {}\n        self.positionDic = {}\n        self.registerEvent()\n\n```\ndef onAccount(self, event):\n    info = event.dict_['data']\n    # 账号代码相关\n    self.accountDic[\"accountID\"] = info.accountID     # 账户代码\n    self.accountDic[\"vtAccountID\"] = info.vtAccountID         # 账户在vt中的唯一代码，通常是 Gateway名.账户代码\n    # 数值相关\n    self.accountDic[\"preBalance\"] = info.preBalance           # 昨日账户结算净值\n    self.accountDic[\"balance\"] = info.balance              # 账户净值\n    self.accountDic[\"available\"] = info.available            # 可用资金\n    self.accountDic[\"commission\"] = info.commission           # 今日手续费\n    self.accountDic[\"margin\"] = info.margin               # 保证金占用\n    self.accountDic[\"closeProfit\"] = info.closeProfit          # 平仓盈亏\n    self.accountDic[\"positionProfit\"] = info.positionProfit       # 持仓盈亏\n\ndef onPosition(self, event):\n    p = event.dict_['data']\n    # 代码编号相关\n    self.positionDic[\"symbol\"] = p.symbol              # 合约代码\n    self.positionDic[\"exchange\"] = p.exchange            # 交易所代码\n    self.positionDic[\"vtSymbol\"] = p.vtSymbol            # 合约在vt系统中的唯一代码，合约代码.交易所代码  \n\n    # 持仓相关\n    self.positionDic[\"direction\"] = p.direction           # 持仓方向\n    self.positionDic[\"position\"] = p.position               # 持仓量\n    self.positionDic[\"frozen\"] = p.frozen                 # 冻结数量\n    self.positionDic[\"price\"] = p.price                # 持仓均价\n    self.positionDic[\"vtPositionName\"] = p.vtPositionName      # 持仓在vt系统中的唯一代码，通常是vtSymbol.方向\n\n    # 20151020添加\n    self.positionDic[\"ydPosition\"] = p.ydPosition             # 昨持仓            \n    print self.positionDic\n\ndef registerEvent(self):\n    \"\"\"注册事件监听\"\"\"\n    self.eventEngine.register(EVENT_POSITION, self.onPosition)\n```\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/136/comments",
    "author": "jieyujing",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2016-08-12T09:47:38Z",
        "body": "CTP的原生C++接口，在持仓回报这个函数里就是不提供交易所代码的。\n"
      }
    ]
  },
  {
    "number": 135,
    "title": "unbuntu下界面中文无法显示",
    "created_at": "2016-08-12T06:37:26Z",
    "closed_at": "2016-08-30T01:40:29Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/135",
    "body": "unbuntu下界面中文无法显示\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/135/comments",
    "author": "victorcai0922",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2016-08-12T09:46:46Z",
        "body": "说一下你的ubuntu环境、配置等信息，有图也贴上来。\n"
      }
    ]
  },
  {
    "number": 131,
    "title": "可以用于别的券商吗？",
    "created_at": "2016-08-11T02:37:08Z",
    "closed_at": "2016-10-28T16:30:05Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/131",
    "body": "比如说国金证券。\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/131/comments",
    "author": "zhangshenhua",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2016-08-11T08:32:08Z",
        "body": "国金证券如果提供接口就可以。\n"
      },
      {
        "user": "bailzx5522",
        "created_at": "2016-08-30T09:04:30Z",
        "body": "国金不就是CTP吗\n"
      },
      {
        "user": "vnpy",
        "created_at": "2016-08-31T01:34:44Z",
        "body": "国金期货可能有用CTP，但是证券肯定不是。\n"
      }
    ]
  },
  {
    "number": 121,
    "title": "dataRecorder引擎的浮点数精度问题",
    "created_at": "2016-08-03T02:45:41Z",
    "closed_at": "2016-08-12T09:43:22Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/121",
    "body": "数据引擎存储的bidPrice1、upperLimit等等报价，经常出现类似6471.400000000001，2145.0000000000005这种由于float计算精度导致的错误数据，在做tick级别回测的时候无法正常测试。\n\n考虑使用round（）或者decimal模块截取3位小数，由于每个tick都需要处理多个字段，不知道这两种方式哪种效率更高些呢？或者有更好的处理方式？\ntks\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/121/comments",
    "author": "freeitaly",
    "comments": [
      {
        "user": "snake3342",
        "created_at": "2016-08-03T04:19:11Z",
        "body": "用python你就别计较效率，只要结果没错就行。\n"
      },
      {
        "user": "freeitaly",
        "created_at": "2016-08-03T05:19:45Z",
        "body": "担心一个tick的时间处理有延迟，\n测试了下，round（）处理tick的时间可以忽略，插入mongo要0.001秒，这都没问题。\n不过要处理原来存储的tick就难实现了，一个tick 0.1～0.5秒，可以放弃了\n"
      },
      {
        "user": "vnpy",
        "created_at": "2016-08-04T01:43:15Z",
        "body": "大部分情况应该都是内置库会快一些，具体测下吧。我的建议倒是检查下你的算法，多这种小数点后很多位的情况，不应该导致算法逻辑出错吧。\n"
      }
    ]
  },
  {
    "number": 3596,
    "title": "Python3.12环境下 安装vnpy_tap失败",
    "created_at": "2024-12-20T02:07:40Z",
    "closed_at": "2024-12-26T03:10:21Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3596",
    "body": "## 环境\r\n\r\n* 操作系统:  Windows 11\r\n* Python版本: 3.12\r\n* 编译器: PyCharm\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n在运行vnpy_tap的setup.py脚本后，应该显示正常安装vnpy_tap的流程\r\n\r\n## 实际程序行为\r\n在运行之后报错，无法安装\r\n\r\n## 重现步骤\r\n安装Python3.12，安装Visual Studio 2022，下载vnpy_tap 源码，在环境中运行setup.py脚本\r\n\r\n(venv) PS C:\\Users\\keith.yuan\\PycharmProjects\\VNPY-py12\\vnpy_tap-main> python setup.py install         \r\nrunning install\r\n\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\nbuilding 'vnpy_tap.api.vntaptd' extension\r\n\"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.42.34433\\bin\\HostX86\\x64\\cl.exe\" /c /nologo /O2 /W3 /GL /DNDEBUG /MD -Ivnpy_tap/api/include -Ivnpy_tap/api/vntap -IC:\\Users\\keith.yuan\\PycharmProjects\\VNP\r\nY-py12\\venv\\include -IC:\\Users\\keith.yuan\\AppData\\Local\\Programs\\Python\\Python312\\include -IC:\\Users\\keith.yuan\\AppData\\Local\\Programs\\Python\\Python312\\Include \"-IC:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\\r\nvnpy_tap/api/include\\pybind11/pybind11.h(1892): error C2027: 使用了未定义类型“_frame”\r\nC:\\Users\\keith.yuan\\AppData\\Local\\Programs\\Python\\Python312\\include\\pytypedefs.h(22): note: 参见“_frame”的声明\r\nvnpy_tap/api/include\\pybind11/pybind11.h(1895): error C2027: 使用了未定义类型“_frame”\r\nC:\\Users\\keith.yuan\\AppData\\Local\\Programs\\Python\\Python312\\include\\pytypedefs.h(22): note: 参见“_frame”的声明\r\nvnpy_tap/api/include\\pybind11/pybind11.h(1895): error C2027: 使用了未定义类型“_frame”\r\nC:\\Users\\keith.yuan\\AppData\\Local\\Programs\\Python\\Python312\\include\\pytypedefs.h(22): note: 参见“_frame”的声明\r\nvnpy_tap/api/include\\pybind11/pybind11.h(1894): error C2660: “PyDict_GetItem”: 函数不接受 1 个参数\r\nC:\\Users\\keith.yuan\\AppData\\Local\\Programs\\Python\\Python312\\include\\dictobject.h(22): note: 参见“PyDict_GetItem”的声明\r\nvnpy_tap/api/include\\pybind11/pybind11.h(1894): note: 尝试匹配参数列表“()”时\r\nvnpy_tap/api/vntap/vntaptd/vntaptd.cpp(5235): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.  \r\nerror: command 'C:\\\\Program Files\\\\Microsoft Visual Studio\\\\2022\\\\Community\\\\VC\\\\Tools\\\\MSVC\\\\14.42.34433\\\\bin\\\\HostX86\\\\x64\\\\cl.exe' failed with exit code 2\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3596/comments",
    "author": "Ke1th4",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2024-12-26T03:10:21Z",
        "body": "确认是Pybind11版本问题，已经完成vnpy_tap模块新版本的升级和发布，请再尝试下"
      }
    ]
  },
  {
    "number": 3583,
    "title": "希望提供vnpy_tts 的python3.11支持",
    "created_at": "2024-11-04T12:13:53Z",
    "closed_at": "2024-12-26T03:16:20Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3583",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10 64位\r\n* Python版本:  3.11\r\n* VeighNa版本: vnpy_tts 6.7.2.0\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n`pip install vnpy_tts` 应正常执行 或提供对应 3.11的whl包\r\n\r\n## 实际程序行为\r\n```\r\nBuilding wheels for collected packages: vnpy_tts\r\n  Building wheel for vnpy_tts (setup.py) ... error\r\n  error: subprocess-exited-with-error\r\n\r\n  × python setup.py bdist_wheel did not run successfully.\r\n  │ exit code: 1\r\n  ╰─> [447 lines of output]\r\n      running bdist_wheel\r\n      running build\r\n      running build_py\r\n      creating build\\lib.win-amd64-cpython-311\\vnpy_tts\r\n      copying vnpy_tts\\__init__.py -> build\\lib.win-amd64-cpython-311\\vnpy_tts\r\n      creating build\\lib.win-amd64-cpython-311\\vnpy_tts\\api\r\n      copying vnpy_tts\\api\\tts_constant.py -> build\\lib.win-amd64-cpython-311\\vnpy_tts\\api\r\n      copying vnpy_tts\\api\\__init__.py -> build\\lib.win-amd64-cpython-311\\vnpy_tts\\api\r\n      creating build\\lib.win-amd64-cpython-311\\vnpy_tts\\gateway\r\n      copying vnpy_tts\\gateway\\tts_gateway.py -> build\\lib.win-amd64-cpython-311\\vnpy_tts\\gateway\r\n      copying vnpy_tts\\gateway\\__init__.py -> build\\lib.win-amd64-cpython-311\\vnpy_tts\\gateway\r\n      running egg_info\r\n      writing vnpy_tts.egg-info\\PKG-INFO\r\n      writing dependency_links to vnpy_tts.egg-info\\dependency_links.txt\r\n      writing requirements to vnpy_tts.egg-info\\requires.txt\r\n      writing top-level names to vnpy_tts.egg-info\\top_level.txt\r\n      reading manifest file 'vnpy_tts.egg-info\\SOURCES.txt'\r\n      reading manifest template 'MANIFEST.in'\r\n      warning: no files found matching '*.pyd' under directory 'vnpy_tts'\r\n      adding license file 'LICENSE'\r\n      writing manifest file 'vnpy_tts.egg-info\\SOURCES.txt'\r\n.....\r\n  vnttstd.cpp\r\n        C:\\Users\\MSI\\AppData\\Local\\Temp\\pip-install-o0lbewet\\vnpy-tts_b14aec34c5214e438aa4691af6ad20c0\\vnpy_tts\\api\\include\\pybind11\\cast.h(441): error C2027: 使用了未定义类型“_frame”\r\n        F:\\Miniconda\\envs\\py11\\include\\pytypedefs.h(22): note: 参见“_frame”的声明\r\n        C:\\Users\\MSI\\AppData\\Local\\Temp\\pip-install-o0lbewet\\vnpy-tts_b14aec34c5214e438aa4691af6ad20c0\\vnpy_tts\\api\\include\\pybind11\\cast.h(443): error C2027: 使用了未定义类型“_frame”\r\n        F:\\Miniconda\\envs\\py11\\include\\pytypedefs.h(22): note: 参见“_frame”的声明\r\n        C:\\Users\\MSI\\AppData\\Local\\Temp\\pip-install-o0lbewet\\vnpy-tts_b14aec34c5214e438aa4691af6ad20c0\\vnpy_tts\\api\\include\\pybind11\\cast.h(444): error C2027: 使用了未定义类型“_frame”\r\n        F:\\Miniconda\\envs\\py11\\include\\pytypedefs.h(22): note: 参见“_frame”的声明\r\n        vnpy_tts/api/include\\pybind11/pybind11.h(1890): error C2039: \"frame\": 不是 \"_ts\" 的成员\r\n        F:\\Miniconda\\envs\\py11\\include\\cpython/pystate.h(82): note: 参见“_ts”的声明\r\n        vnpy_tts/api/include\\pybind11/pybind11.h(1891): error C2027: 使用了未定义类型“_frame”\r\n        F:\\Miniconda\\envs\\py11\\include\\pytypedefs.h(22): note: 参见“_frame”的声明\r\n        vnpy_tts/api/include\\pybind11/pybind11.h(1892): error C2027: 使用了未定义类型“_frame”\r\n        F:\\Miniconda\\envs\\py11\\include\\pytypedefs.h(22): note: 参见“_frame”的声明\r\n        vnpy_tts/api/include\\pybind11/pybind11.h(1895): error C2027: 使用了未定义类型“_frame”\r\n        F:\\Miniconda\\envs\\py11\\include\\pytypedefs.h(22): note: 参见“_frame”的声明\r\n        vnpy_tts/api/include\\pybind11/pybind11.h(1894): error C2660: “PyDict_GetItem”: 函数不接受 1 个参数\r\n        F:\\Miniconda\\envs\\py11\\include\\dictobject.h(22): note: 参见“PyDict_GetItem”的声明\r\n        vnpy_tts/api/vntts/vnttstd/vnttstd.cpp(11838): warning C4996: 'sscanf': This function or variable may be unsafe. Consider using sscanf_s instead. To disable deprecation, use _CRT_SECURE_NO_WARNINGS. See online help for details.\r\n        error: command 'F:\\\\Visual Studio Community 2022\\\\VS\\\\VC\\\\Tools\\\\MSVC\\\\14.31.31103\\\\bin\\\\HostX86\\\\x64\\\\cl.exe' failed with exit code 2\r\n        [end of output]\r\n  \r\n    note: This error originates from a subprocess, and is likely not a problem with pip.\r\n  error: legacy-install-failure\r\n  \r\n  × Encountered error while trying to install package.\r\n  ╰─> vnpy_tts\r\n```\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\npython切换为3.11 并 pip install vnpy_tts\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3583/comments",
    "author": "Daic115",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2024-12-26T03:16:21Z",
        "body": "确认是Pybind11版本问题，已经完成vnpy_tts模块新版本的升级和发布，请再尝试下"
      }
    ]
  },
  {
    "number": 3581,
    "title": "数据管理下载数据报错",
    "created_at": "2024-11-01T12:50:33Z",
    "closed_at": "2024-12-26T04:10:56Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3581",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 11\r\n* Python版本: veighna_studio-3.9.3\r\n* VeighNa版本: veighna_studio-3.9.3\r\n\r\n## Issue类型\r\nBug\r\n\r\n## 预期程序行为\r\n下载数据成功，正确储存到postgres数据库\r\n\r\n## 实际程序行为\r\n下载失败，报错如下：\r\nTraceback (most recent call last):\r\n  File \"C:\\veighna_studio\\lib\\site-packages\\vnpy_datamanager\\ui\\widget.py\", line 610, in download\r\n    count: int = self.engine.download_bar_data(symbol, exchange, interval, start, self.output)\r\n  File \"C:\\veighna_studio\\lib\\site-packages\\vnpy_datamanager\\engine.py\", line 215, in download_bar_data\r\n    self.database.save_bar_data(data)\r\n  File \"C:\\veighna_studio\\lib\\site-packages\\vnpy_postgresql\\postgresql_database.py\", line 198, in save_bar_data\r\n    ).execute()\r\n  File \"C:\\veighna_studio\\lib\\site-packages\\peewee.py\", line 1971, in inner\r\n    return method(self, database, *args, **kwargs)\r\n  File \"C:\\veighna_studio\\lib\\site-packages\\peewee.py\", line 2042, in execute\r\n    return self._execute(database)\r\n  File \"C:\\veighna_studio\\lib\\site-packages\\peewee.py\", line 2847, in _execute\r\n    return super(Insert, self)._execute(database)\r\n  File \"C:\\veighna_studio\\lib\\site-packages\\peewee.py\", line 2558, in _execute\r\n    cursor = self.execute_returning(database)\r\n  File \"C:\\veighna_studio\\lib\\site-packages\\peewee.py\", line 2565, in execute_returning\r\n    cursor = database.execute(self)\r\n  File \"C:\\veighna_studio\\lib\\site-packages\\peewee.py\", line 3258, in execute\r\n    sql, params = ctx.sql(query).query()\r\n  File \"C:\\veighna_studio\\lib\\site-packages\\peewee.py\", line 628, in sql\r\n    return obj.__sql__(self)\r\n  File \"C:\\veighna_studio\\lib\\site-packages\\peewee.py\", line 2832, in __sql__\r\n    self._generate_insert(self._insert, ctx)\r\n  File \"C:\\veighna_studio\\lib\\site-packages\\peewee.py\", line 2708, in _generate_insert\r\n    column = getattr(self.table, column)\r\nAttributeError: type object 'DbBarData' has no attribute 'extra'\r\n\r\n\r\n## 重现步骤\r\n使用数据管理下载数据\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3581/comments",
    "author": "linst95",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2024-12-26T04:10:56Z",
        "body": "目前vnpy_postgresql并未支持extra字段，因此写入数据时请确保BarData没有提供extra字段"
      }
    ]
  },
  {
    "number": 3576,
    "title": "[Bug] ubuntu下段错误 (核心已转储)",
    "created_at": "2024-10-13T13:13:54Z",
    "closed_at": "2024-10-14T01:36:18Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3576",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 23.10\r\n* Python版本: 3.12.7\r\n* VeighNa版本: 3.9.3\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n\r\n正常运行\r\n\r\n## 实际程序行为\r\n\r\n在运行 `qapp = create_qapp()` 出现段错误。\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n使用miniconda，安装python3.12环境\r\n\r\n`conda install -c conda-forge ta-lib;`\r\n\r\n下载压缩包后运行\r\n\r\n`. install.sh python`\r\n\r\n然后发现包不全又运行了：\r\n\r\n`pip install vnpy_ctastrategy vnpy_ctabacktester vnpy_spreadtrading vnpy_optionmaster vnpy_portfoliostrategy vnpy_algotrading vnpy_scripttrader vnpy_paperaccount vnpy_chartwizard vnpy_portfoliomanager vnpy_rpcservice vnpy_datamanager vnpy_datarecorder vnpy_excelrtd vnpy_webtrader vnpy_rest vnpy_websocket vnpy_ctp vnpy_rqdata vnpy_tushare vnpy_ifind vnpy_riskmanager vnpy_riskmanager vnpy_sqlite vnpy_tushare`\r\n\r\n然后qt报错又运行了：`sudo apt install libxcb-*`\r\n\r\n最后尝试运行readme中的代码和example下的veighna_trader，python不报错了，但是都出现了段错误。在shell里面一步一步运行代码发现`qapp = create_qapp()`出错。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3576/comments",
    "author": "Huasushis",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2024-10-14T01:36:18Z",
        "body": "请使用官方发布的Python（如操作系统自带版本），不要使用conda环境"
      }
    ]
  },
  {
    "number": 3575,
    "title": "Mac M1 zsh: segmentation fault错误",
    "created_at": "2024-10-11T06:50:23Z",
    "closed_at": "2024-10-13T13:06:54Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3575",
    "body": "## 环境\r\n\r\n* 操作系统: Apple M1 Max Macos 15.0.1\r\n* Python版本: VeighNa 最新版\r\n\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n运行Demo后, 报错zsh\r\npython run.py\r\n\r\nzsh: segmentation fault  python run.py\r\n\r\n还找不到相关解决方案\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3575/comments",
    "author": "yhmickey",
    "comments": [
      {
        "user": "yhmickey",
        "created_at": "2024-10-12T00:37:30Z",
        "body": "python 3.10.14 没出现问题,  python 3.12.7 环境出现该问题"
      },
      {
        "user": "vnpy",
        "created_at": "2024-10-13T02:36:42Z",
        "body": "请问使用的Python是操作系统自带的吗，还是conda之类的？"
      },
      {
        "user": "yhmickey",
        "created_at": "2024-10-13T10:24:13Z",
        "body": "使用的conda 建的环境"
      },
      {
        "user": "vnpy",
        "created_at": "2024-10-13T13:06:54Z",
        "body": "vnpy_ctp项目的README里有强调，不能用conda环境（因为二进制链接库和官方不兼容），请换回官方Python发行版"
      }
    ]
  },
  {
    "number": 3569,
    "title": "Ubuntu 20.04 no_ui运行webtrader",
    "created_at": "2024-10-05T16:15:55Z",
    "closed_at": "2024-10-10T02:35:13Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3569",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 11或者Ubuntu 20.04\r\n* Python版本: 如VeighNa Studio-2.9.0\r\n* VeighNa版本: 如v2.9.0发行版或者dev branch 20211224（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\nlinux可以后台运行webtrader程序\r\n\r\n## 实际程序行为\r\n官方noui脚本不支持\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3569/comments",
    "author": "zhangweilun",
    "comments": [
      {
        "user": "flycocopig",
        "created_at": "2024-10-06T16:40:15Z",
        "body": "```\r\n# -*- coding: utf-8 -*-\r\nimport multiprocessing\r\nimport sys\r\nfrom time import sleep\r\nfrom datetime import datetime, time\r\nfrom logging import INFO\r\nimport json\r\nimport subprocess\r\nimport threading\r\n\r\nfrom vnpy.event import EventEngine\r\nfrom vnpy.trader.setting import SETTINGS\r\nfrom vnpy.trader.engine import MainEngine\r\n\r\nfrom vnpy_webtrader import WebTraderApp\r\n\r\nfrom vnpy_ctp import CtpGateway\r\nfrom vnpy_ctptest import CtptestGateway\r\n\r\nfrom vnpy_ctastrategy import CtaStrategyApp\r\nfrom vnpy_ctastrategy.base import EVENT_CTA_LOG\r\n\r\nfrom vnpy.trader.utility import load_json, save_json, get_file_path\r\n\r\n\r\n\r\n# 配置文件路径\r\nconfig_filepath = 'config.json'\r\nprint(get_file_path(config_filepath))\r\n\r\nDAY_START = time(8, 45)\r\nDAY_END = time(15, 0)\r\n\r\nNIGHT_START = time(20, 45)\r\nNIGHT_END = time(2, 45)\r\n\r\n\r\nctp_setting = {\r\n    \"用户名\": 'xxxx',\r\n    \"密码\": 'xxxx',\r\n    \"经纪商代码\": '',\r\n    \"交易服务器\": '',\r\n    \"行情服务器\": '',\r\n    \"产品名称\": '',\r\n    \"授权编码\": '',\r\n    \"产品信息\": ''\r\n}\r\n\r\n# 读取配置文件\r\ndef load_config(filepath: str) -> dict:\r\n    \"\"\"加载配置文件\"\"\"\r\n    with open(filepath, 'r') as f:\r\n        config = json.load(f)\r\n    return config\r\n\r\n# 检查交易时段\r\ndef check_trading_period():\r\n    \"\"\"\"\"\"\r\n    current_time = datetime.now().time()\r\n\r\n    trading = False\r\n    if (\r\n        (current_time >= DAY_START and current_time <= DAY_END)\r\n        or (current_time >= NIGHT_START)\r\n        or (current_time <= NIGHT_END)\r\n    ):\r\n        trading = True\r\n\r\n    return trading\r\n\r\n# 子进程运行函数\r\ndef run_child(req_address: str, sub_address: str, ):\r\n    \"\"\"\r\n    运行在子进程中。\r\n    \"\"\"\r\n    SETTINGS[\"log.file\"] = True\r\n\r\n    event_engine = EventEngine()\r\n    main_engine = MainEngine(event_engine)\r\n    # main_engine.add_gateway(CtpGateway)\r\n    main_engine.add_gateway(CtptestGateway)\r\n    cta_engine = main_engine.add_app(CtaStrategyApp)\r\n    web_engine = main_engine.add_app(WebTraderApp)\r\n    main_engine.write_log(\"主引擎创建成功\")\r\n\r\n    log_engine = main_engine.get_engine(\"log\")\r\n    event_engine.register(EVENT_CTA_LOG, log_engine.process_log_event)\r\n    main_engine.write_log(\"注册日志事件监听\")\r\n\r\n    # main_engine.connect(ctp_setting, \"CTP\")\r\n    main_engine.connect(ctp_setting, 'CTPTEST')\r\n    main_engine.write_log(\"连接CTPTEST接口\")\r\n\r\n    sleep(10)\r\n    web_engine.start_server(req_address, sub_address)\r\n    sleep(10)\r\n\r\n    cta_engine.init_engine()\r\n    main_engine.write_log(\"CTA策略初始化完成\")\r\n\r\n    cta_engine.init_all_strategies()\r\n    sleep(60)   # 留足够的时间完成策略初始化\r\n    main_engine.write_log(\"CTA策略全部初始化\")\r\n\r\n    cta_engine.start_all_strategies()\r\n    main_engine.write_log(\"CTA策略全部启动\")\r\n\r\n    while True:\r\n        sleep(10)\r\n\r\n        trading = check_trading_period()\r\n        if not trading:\r\n            print(\"关闭子进程\")\r\n            main_engine.close()\r\n            sys.exit(0)\r\n\r\n# 启动 Uvicorn 服务器和 RPC 服务器\r\ndef start_web_rpc_client(host: str, port: str):\r\n    \"\"\"启动Uvicorn服务器和RPC服务器\"\"\"\r\n\r\n    # 启动Uvicorn服务器\r\n    uvicorn_cmd = [\r\n        sys.executable,\r\n        \"-m\",\r\n        \"uvicorn\",\r\n        \"vnpy_webtrader.web:app\",\r\n        f\"--host={host}\",\r\n        f\"--port={port}\"\r\n    ]\r\n    uvicorn_process = subprocess.Popen(uvicorn_cmd)\r\n    uvicorn_process.wait()\r\n\r\n# 父进程运行函数\r\ndef run_parent():\r\n    \"\"\"\r\n    运行在父进程中。\r\n    \"\"\"\r\n    print(\"启动CTA策略守护父进程\")\r\n\r\n    child_process = None\r\n    web_rpc_process = None\r\n\r\n    while True:\r\n        trading = check_trading_period()\r\n\r\n        # 在交易时段启动子进程\r\n        if trading and child_process is None:\r\n            print(\"启动子进程\")\r\n            child_process = multiprocessing.Process(\r\n                target=run_child,\r\n                args=(\r\n                    'tcp://127.0.0.1:2014',\r\n                    'tcp://127.0.0.1:4102'\r\n                ))\r\n            child_process.start()\r\n            print(\"子进程启动成功\")\r\n\r\n        # 非交易时段则退出子进程\r\n        if not trading and child_process is not None:\r\n            if not child_process.is_alive():\r\n                child_process = None\r\n                print(\"子进程关闭成功\")\r\n\r\n        # 启动 Web 服务和 RPC 服务器\r\n        if web_rpc_process is None:\r\n            print(\"启动Web服务和RPC服务器\")\r\n            # config = load_config(config_filepath)\r\n            web_rpc_process = multiprocessing.Process(\r\n                target=start_web_rpc_client,\r\n                args=(\r\n                    '127.0.0.1',\r\n                    '8000'\r\n                )\r\n            )\r\n            web_rpc_process.start()\r\n            print(\"Web服务和RPC服务器启动成功\")\r\n\r\n        sleep(5)\r\n\r\nif __name__ == \"__main__\":\r\n    \"\"\" 命令行启动web trader， 未经过验证，不知道是否正确\"\"\"\r\n    run_parent()\r\n```\r\n\r\n以上是我这两天写的运行webtrader的脚本，具体还没经过测试。可以一起研究看看，建议官方出一个no ui 运行webtrader的example"
      },
      {
        "user": "vnpy",
        "created_at": "2024-10-10T02:35:13Z",
        "body": "WebTrader更多作为如何使用Web方式访问控制VeighNa系统的DEMO参考，仅推荐有前后端Web开发经验的用户使用。"
      }
    ]
  },
  {
    "number": 3546,
    "title": "社区无法注册",
    "created_at": "2024-06-17T02:16:30Z",
    "closed_at": "2024-06-18T01:01:40Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3546",
    "body": "下载完vnpy之后点击注册，跳转到社区，注册完成后登陆显示密码错误，然后点找回密码显示账户未注册。重试了很多次都不成功，应该和vnpy版本没关系，社区单纯注册不了\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3546/comments",
    "author": "scp-66",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2024-06-18T01:01:40Z",
        "body": "请在vnpy-community微信公众号后台，留言申请重置密码，记得提供下用户名和邮箱信息"
      }
    ]
  },
  {
    "number": 3532,
    "title": "请问我们能不能在VSCODE下运行，有没有帮助视频，或者说明文档",
    "created_at": "2024-05-03T08:10:30Z",
    "closed_at": "2024-07-05T02:48:12Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3532",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 11或者Ubuntu 20.04\r\n* Python版本: 如VeighNa Studio-2.9.0\r\n* VeighNa版本: 如v2.9.0发行版或者dev branch 20211224（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3532/comments",
    "author": "jasonudu",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2024-05-04T02:07:40Z",
        "body": "vnpy-community微信公众号中有详细的说明"
      },
      {
        "user": "jasonudu",
        "created_at": "2024-05-05T01:39:41Z",
        "body": "谢谢"
      }
    ]
  },
  {
    "number": 3501,
    "title": "vnpy_scripttrader的cli.py文件 中 event_engine 不需要注册 EVENT_LOG的 process_log_event函数 与主引擎重复注册导致LOG输出两遍",
    "created_at": "2024-02-22T09:40:13Z",
    "closed_at": "2024-03-21T06:36:36Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3501",
    "body": "vnpy_scripttrader的cli.py文件 中 event_engine 不需要注册 EVENT_LOG的 process_log_event函数 与主引擎重复注册导致LOG输出两遍",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3501/comments",
    "author": "EzMoney-Sniper",
    "comments": [
      {
        "user": "noranhe",
        "created_at": "2024-03-19T05:22:39Z",
        "body": "init_cli_trading是为了命令行界面使用设计的，所以收到的日志事件都是调用print函数打印输出的。而日志引擎的日志事件收到后是通过logger输出的，如果想用jupyter跑脚本，不想logger输出日志事件信息，把log.active设置为False应该就可以了"
      }
    ]
  },
  {
    "number": 3494,
    "title": "cta柜台下订阅持仓推送，PositionData的持仓成本是错误的，price并非持仓成本，而是昨日的结算价格，导致pnl也是错误的。",
    "created_at": "2024-01-05T03:23:52Z",
    "closed_at": "2024-03-22T02:21:42Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3494",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 11或者Ubuntu 20.04\r\n* Python版本: 如VeighNa Studio-2.9.0\r\n* VeighNa版本: 如v2.9.0发行版或者dev branch 20211224（下载日期）\r\n\r\n## Issue类型\r\nBug\r\n\r\n## 预期程序行为\r\n持仓推送返回持仓信息\r\n\r\n## 实际程序行为\r\n返回的持仓成本是昨日结算价格\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3494/comments",
    "author": "jieyujing",
    "comments": [
      {
        "user": "noranhe",
        "created_at": "2024-03-15T05:11:51Z",
        "body": "position.price是用持仓成本PositionCost除以持仓的volume和size算出来的"
      }
    ]
  },
  {
    "number": 3489,
    "title": "有些gateway, 我想脱离vnpy使用，可以吗，如何做？",
    "created_at": "2023-12-10T07:38:19Z",
    "closed_at": "2023-12-10T13:48:48Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3489",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 11或者Ubuntu 20.04\r\n* Python版本: 如VeighNa Studio-2.9.0\r\n* VeighNa版本: 如v2.9.0发行版或者dev branch 20211224（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3489/comments",
    "author": "happybeta",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2023-12-10T13:48:48Z",
        "body": "大部分Gateway模块中（如vnpy_ctp）都包含了两层：\r\n\r\n1. C++类接口的Python封装\r\n2. 将1对接到VeighNa标准交易接口的实现\r\n\r\n其中1部分可以脱离VeighNa框架直接使用，例如：\r\n\r\n```\r\nfrom vnpy_ctp.api import CtpMdpi, CtpTdApi\r\n\r\nclass MyMdApi(CtpMdApi):\r\n....\r\n\r\n```"
      }
    ]
  },
  {
    "number": 3484,
    "title": "需要更新到python3.11",
    "created_at": "2023-11-13T10:17:35Z",
    "closed_at": "2023-12-05T12:51:17Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3484",
    "body": "## 环境\r\n\r\n* 操作系统: Manjaro\r\n* Python版本: 3.11.5\r\n* VeighNa版本: 3.8.0\r\n\r\n## Issue类型\r\nBug\r\n\r\n## 预期程序行为\r\n顺利安装\r\n\r\n## 实际程序行为\r\n安装失败\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3484/comments",
    "author": "yeming-li-coder",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2023-11-13T13:12:32Z",
        "body": "请提供具体的报错截图？"
      }
    ]
  },
  {
    "number": 3472,
    "title": "vnpy_portfoliostrategy不支持创建日线级别的自定义Bargenerator对象",
    "created_at": "2023-10-01T12:23:47Z",
    "closed_at": "2023-12-05T12:37:09Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3472",
    "body": "如题，建议增加 update_bar_daily_window、on_daily_bars 功能。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3472/comments",
    "author": "Mjzs12138",
    "comments": [
      {
        "user": "noranhe",
        "created_at": "2023-12-04T02:13:34Z",
        "body": "PortfolioBarGenerator只是一个K线合成器的示例，可以参照vnpy.trader.utility里的BarGenerator进行个性化修改"
      }
    ]
  },
  {
    "number": 3457,
    "title": "海通期货的uft尝试在Linux系统下连接股票期权行情 显示无法连接到行情 ",
    "created_at": "2023-08-09T16:37:56Z",
    "closed_at": "2023-08-10T01:01:42Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3457",
    "body": "## 环境\r\n\r\n* 操作系统:Ubuntu 22.04.2 LTS\r\n* Python版本: Python 3.10.12\r\n\r\n## Issue类型\r\nBug\r\n\r\n## 预期程序行为\r\n正确连接到行情\r\n\r\n## 实际程序行为\r\n无法正确连接到行情\r\n\r\n## 重现步骤\r\nfrom vnpy_uft.gateway import UftGateway\r\nfrom vnpy.event import EventEngine\r\nfrom vnpy.trader.engine import MainEngine\r\nfrom vnpy_scripttrader import ScriptEngine, ScriptTraderApp\r\nfrom vnpy_scripttrader import init_cli_trading\r\nfrom script_trade_test import run\r\nstage_setting = {\r\n    \"用户名\": \"********\", #此处隐去账号密码\r\n    \"密码\": \"********\",\r\n    \"交易服务器\": \"116.236.247.243:21491\",  # 模拟交易\r\n    \"行情服务器\": \"116.236.247.243:21492\",  # 模拟行情\r\n    \"服务器类型\": \"ETF期权\",\r\n    \"产品名称\": \"\",\r\n    \"授权编码\": \"\",\r\n    \"委托类型\": \"7\"\r\n}\r\ndef main():\r\n    engine = init_cli_trading([UftGateway])\r\n    engine.connect_gateway(stage_setting,\"UFT\")\r\n    vt_symbols = [\"10005860.SSE\", \"10005107.SSE\"]\r\n    engine.subscribe(vt_symbols)\r\n    contract_info = engine.get_all_contracts()\r\n    print(contract_info)\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n找不到数据服务驱动vnpy_，使用默认的RQData数据服务\r\n[]\r\n2023-08-09 16:22:59.052041\t行情服务器连接断开，原因：-1009，连接超时，重试中...\r\n2023-08-09 16:22:59.095026\t交易服务器连接断开，原因：-1009，连接超时，重试中...\r\n2023-08-09 16:23:02.055486\t行情服务器连接断开，原因：-1009，连接超时，重试中...\r\n2023-08-09 16:23:02.099250\t交易服务器连接断开，原因：-1009，连接超时，重试中...\r\n2023-08-09 16:23:05.002897\t交易服务器连接断开，原因：-1009，连接超时，重试中...\r\n2023-08-09 16:23:05.059165\t行情服务器连接断开，原因：-1009，连接超时，重试中...\r\n\r\n\r\n没有任何别的报错，对于windows版本是一直可用但是linux版本就无法连接 \r\n券商为海通期货  ",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3457/comments",
    "author": "kmeiMagma",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2023-08-10T01:00:50Z",
        "body": "请在vnpy_uft项目下开issue吧"
      }
    ]
  },
  {
    "number": 3437,
    "title": "vnpy3.7版本使用dolphindb录制数据报错",
    "created_at": "2023-06-20T04:44:49Z",
    "closed_at": "2023-07-11T10:04:20Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3437",
    "body": "环境\r\n操作系统: 操作系统: Windows 11\r\nPython版本: VeighNa Studio-3.7.0\r\nVeighNa版本: v3.7.0\r\nIssue类型\r\n\r\nEnhancement\r\n\r\n预期程序行为\r\n\r\n使用dolphindb录制数据，正常数据入库。\r\n\r\n实际程序行为\r\n**vnpy3.7版本使用dolphindb录制数据的报错代码如下所示：**\r\n`Traceback (most recent call last):\r\n  File \"C:\\veighna_studio\\lib\\site-packages\\vnpy_datarecorder\\ui\\widget.py\", line 157, in process_exception_event\r\n    raise exc_info[1].with_traceback(exc_info[2])\r\n  File \"C:\\veighna_studio\\lib\\site-packages\\vnpy_datarecorder\\engine.py\", line 117, in run\r\n    self.database.save_bar_data(data, stream=True)\r\n  File \"C:\\veighna_studio\\lib\\site-packages\\vnpy_dolphindb\\dolphindb_database.py\", line 94, in save_bar_data\r\n    overview_table = self.session.loadTable(tableName=\"baroverview\", dbPath=self.db_path)\r\n  File \"C:\\veighna_studio\\lib\\site-packages\\dolphindb\\session.py\", line 758, in loadTable\r\n    return Table(data=tbName, s=self, isMaterialized=True)\r\n  File \"C:\\veighna_studio\\lib\\site-packages\\dolphindb\\table.py\", line 157, in __init__\r\n    self._init_schema()\r\n  File \"C:\\veighna_studio\\lib\\site-packages\\dolphindb\\table.py\", line 339, in _init_schema\r\n    schema = self.__session.run(\"schema(%s)\" % self.__tableName)  # type: dict\r\n  File \"C:\\veighna_studio\\lib\\site-packages\\dolphindb\\session.py\", line 453, in run\r\n    return self.cpp.run(script, *args, **kwargs)\r\nRuntimeError: <Exception> in run: Received invalid header: _`",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3437/comments",
    "author": "rjl02468",
    "comments": [
      {
        "user": "rjl02468",
        "created_at": "2023-06-26T00:31:13Z",
        "body": "这个问题应该是个bug。"
      },
      {
        "user": "noranhe",
        "created_at": "2023-07-11T09:23:26Z",
        "body": "可以录制rb2310.SHFE试试看，我这边试了没有问题\r\n"
      }
    ]
  },
  {
    "number": 3406,
    "title": "多合约组合策略在成交后，pos或pos_data的持仓数据没有改变",
    "created_at": "2023-03-09T09:20:52Z",
    "closed_at": "2023-04-22T13:12:54Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3406",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 10\r\n* Python版本: vn studio自带的python\r\n* VeighNa版本: VeighNa Studio-2.9.0 和最新的3.6\r\n\r\n## Issue类型\r\n三选一：Bug or Question\r\n\r\n## 重现步骤\r\n在vn trader的界面程序里，使用多合约组合策略的模块，使用buy,sell等函数下单，下单能实际成交，但pos或pos_data没自动更新\r\n\r\n## 预期程序行为\r\npos应该和cta策略模块一样，会自动根据成交来更新持仓，查阅一些文档也没发现有什么需要注意。在最新的3.6版本，pos在多合约策略中变成了pos_data,按照例子使用set target，target是能改变，但也影响不了pos_data(也就是pos)的变化\r\n\r\n## 实际程序行为\r\n使用下单或平仓函数可以，但持仓pos数据没有根据成交来改变，这是在2.9和3.6版本中的多合约策略都出现，与之对应，cta策略就会自动改变pos\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3406/comments",
    "author": "holmhe",
    "comments": [
      {
        "user": "noranhe",
        "created_at": "2023-04-18T10:03:06Z",
        "body": "请问你的vnpy_portfoliostrategy版本是？方便的话能否提供成交后pos_data不变的截图？正常情况下，engine收到process_trade_event函数的推送时会找到成交信息上委托号对应的策略实例调用update_trade函数更新策略实例的pos_data的"
      }
    ]
  },
  {
    "number": 3405,
    "title": "vntrader app:  'PySide6.QtWidgets.QDockWidget' object has no attribute 'DockWidgetFloatable'.",
    "created_at": "2023-03-08T12:29:22Z",
    "closed_at": "2023-03-09T00:00:51Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3405",
    "body": "## 环境\r\n\r\n* 操作系统: Deepin Linux (Debian)\r\n* Python版本: Python 3.10.6\r\n* VeighNa版本: vnpy 3.6.0\r\n* pyside6 6.4.2\r\n* \r\n\r\n## Issue类型\r\nBug\r\n\r\n## 预期程序行为\r\n```\r\ndef main():\r\n    \"\"\"\"\"\"\r\n    qapp = create_qapp()\r\n\r\n    event_engine = EventEngine()\r\n\r\n    main_engine = MainEngine(event_engine)\r\n\r\n    main_engine.add_gateway(CtpGateway)\r\n\r\n    main_window = MainWindow(main_engine, event_engine)\r\n    main_window.showMaximized()\r\n\r\n    qapp.exec()\r\n\r\n```\r\n\r\n## 实际程序行为\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/william/Workspace/Quant/fquant_vnpy/tool/vntrader_app.py\", line 110, in <module>\r\n    main()\r\n  File \"/home/william/Workspace/Quant/fquant_vnpy/tool/vntrader_app.py\", line 103, in main\r\n    main_window = MainWindow(main_engine, event_engine)\r\n  File \"/home/william/miniconda3/lib/python3.10/site-packages/vnpy/trader/ui/mainwindow.py\", line 51, in __init__\r\n    self.init_ui()\r\n  File \"/home/william/miniconda3/lib/python3.10/site-packages/vnpy/trader/ui/mainwindow.py\", line 56, in init_ui\r\n    self.init_dock()\r\n  File \"/home/william/miniconda3/lib/python3.10/site-packages/vnpy/trader/ui/mainwindow.py\", line 63, in init_dock\r\n    self.trading_widget, trading_dock = self.create_dock(\r\n  File \"/home/william/miniconda3/lib/python3.10/site-packages/vnpy/trader/ui/mainwindow.py\", line 232, in create_dock\r\n    dock.setFeatures(dock.DockWidgetFloatable | dock.DockWidgetMovable)\r\nAttributeError: 'PySide6.QtWidgets.QDockWidget' object has no attribute 'DockWidgetFloatable'. Did you mean: 'DockWidgetFeature'?\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3405/comments",
    "author": "cloudseasail",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2023-03-09T00:00:51Z",
        "body": "请安装指定版本的PySide6：\r\n\r\n`pip install PySide6==6.3.0`"
      }
    ]
  },
  {
    "number": 3400,
    "title": "Could not find the Qt platform plugin \"cocoa\" in \"\"",
    "created_at": "2023-02-20T03:45:15Z",
    "closed_at": "2023-04-22T13:09:10Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3400",
    "body": "## 环境\r\n\r\n* 操作系统: mac m1 13.0.1\r\n* Python版本: Python 3.9.13\r\n* VeighNa版本: 如v3.6.0发行版\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\nbash install_osx.sh\r\ncd examples/veighna_trader\r\npython run.py\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\nqt.qpa.plugin: Could not find the Qt platform plugin \"cocoa\" in \"\"\r\nThis application failed to start because no Qt platform plugin could be initialized. Reinstalling the application may fix this problem.\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3400/comments",
    "author": "bobingxin",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2023-02-21T00:49:54Z",
        "body": "请安装下Python 3.10后，再尝试看看。"
      },
      {
        "user": "mago960806",
        "created_at": "2023-02-28T14:23:22Z",
        "body": "## 环境\r\n- 操作系统: Windows11\r\n- Python版本: 3.10.10\r\n- VeighNa版本: 3.6.0\r\n## 报错信息\r\nPS D:\\vnpy> python .\\examples\\veighna_trader\\run.py\r\nqt.qpa.plugin: Could not find the Qt platform plugin \"windows\" in \"\"\r\nThis application failed to start because no Qt platform plugin could be initialized. Reinstalling the application may fix this problem.\r\n## 重现步骤\r\npython .\\examples\\veighna_trader\\run.py\r\n## 解决方法\r\n和`PyQT6`环境配置有关，需要在系统环境变量里添加\r\n变量名: `QT_QPA_PLATFORM_PLUGIN_PATH`\r\n变量值:  `%LocalAppData%\\Programs\\Python\\Python310\\lib\\site-packages\\PySide6\\plugins\\platforms`\r\n即可解决此问题"
      }
    ]
  },
  {
    "number": 3357,
    "title": "安装studio时拒绝访问",
    "created_at": "2022-10-14T02:37:26Z",
    "closed_at": "2022-10-18T09:18:55Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3357",
    "body": "## 环境\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: vnpy_scripttrader, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: vnpy_sec, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: vnpy_sopt, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: vnpy_sopttest, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: vnpy_spreadtrading, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: vnpy_sqlite, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: vnpy_taos, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: vnpy_tap, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: vnpy_timescaledb, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: vnpy_tinysoft, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: vnpy_tqsdk, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: vnpy_tts, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: vnpy_tushare, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: vnpy_udata, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: vnpy_uft, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: vnpy_websocket, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: vnpy_webtrader, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: vnpy_wind, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: vnpy_xtp, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: wcwidth, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: webencodings, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: websockets, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: websocket_client, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: WMI, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: yarl, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: zipp, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: path_AllUsers, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: Uninstall, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: path_JustForMe, state: Absent, default requested: Absent, ba requested: Absent, execute: None, rollback: None, cache: No, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: compileall_AllUsers, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: None, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: compileallO_AllUsers, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: None, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: compileallOO_AllUsers, state: Absent, default requested: Present, ba requested: Present, execute: Install, rollback: None, cache: Yes, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: compileall_JustForMe, state: Absent, default requested: Absent, ba requested: Absent, execute: None, rollback: None, cache: No, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: compileallO_JustForMe, state: Absent, default requested: Absent, ba requested: Absent, execute: None, rollback: None, cache: No, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i201: Planned package: compileallOO_JustForMe, state: Absent, default requested: Absent, ba requested: Absent, execute: None, rollback: None, cache: No, uncache: No, dependency: None\r\n[792C:6550][2022-10-14T10:35:55]i299: Plan complete, result: 0x0\r\n[792C:6550][2022-10-14T10:35:55]i300: Apply begin\r\n[792C:6550][2022-10-14T10:35:55]i010: Launching elevated engine process.\r\n[792C:6550][2022-10-14T10:35:59]i011: Launched elevated engine process.\r\n[792C:6550][2022-10-14T10:35:59]i012: Connected to elevated engine.\r\n[83B4:1320][2022-10-14T10:35:59]i358: Pausing automatic updates.\r\n[83B4:1320][2022-10-14T10:35:59]i359: Paused automatic updates.\r\n[83B4:1320][2022-10-14T10:35:59]i360: Creating a system restore point.\r\n[83B4:1320][2022-10-14T10:35:59]i362: System restore disabled, system restore point not created.\r\n[792C:6550][2022-10-14T10:35:59]i370: Session begin, registration key: SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\{32805f35-fa72-453b-a884-667565bb687e}, options: 0x4, disable resume: No\r\n[792C:6550][2022-10-14T10:35:59]i320: Registering bundle dependency provider: CPython-3.10, version: 3.3.0.0\r\n[792C:6550][2022-10-14T10:35:59]i371: Updating session, registration key: SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Uninstall\\{32805f35-fa72-453b-a884-667565bb687e}, resume: Active, restart initiated: No, disable resume: No\r\n[792C:6550][2022-10-14T10:36:00]e000: Error 0x80070005: Failed to write run key value.\r\n[792C:6550][2022-10-14T10:36:00]e000: Error 0x80070005: Failed to update resume mode.\r\n[792C:6550][2022-10-14T10:36:00]e000: Error 0x80070005: Failed to begin registration session.\r\n[792C:6550][2022-10-14T10:36:00]e000: Error 0x80070005: Failed to register bundle.\r\n[792C:6550][2022-10-14T10:36:00]i399: Apply complete, result: 0x80070005, restart: None, ba requested restart:  No\r\n\r\n\r\n\r\n\r\n* 操作系统: 如Windows 11或者Ubuntu 20.04\r\n* Python版本: 如VeighNa Studio-2.9.0\r\n* VeighNa版本: 如v2.9.0发行版或者dev branch 20211224（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3357/comments",
    "author": "ArtificialZeng",
    "comments": [
      {
        "user": "noranhe",
        "created_at": "2022-10-18T08:43:54Z",
        "body": "可以安装一下vcredist，然后重装的时候用管理员权限安装试试看"
      }
    ]
  },
  {
    "number": 3347,
    "title": "TypeError: Can't instantiate abstract class SqliteDatabase with abstract methods get_tick_overview",
    "created_at": "2022-09-27T10:43:13Z",
    "closed_at": "2022-09-29T00:58:38Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3347",
    "body": "## 环境\r\n\r\n* 操作系统: Linux Deepin\r\n* Python版本: Python 3.8.5\r\n* VeighNa版本: VNPY 3.3.0\r\n\r\n## Issue类型   Bug\r\n\r\n```\r\nFaile to import cython option pricing model, please rebuild with cython in cmd.\r\nTraceback (most recent call last):\r\n  File \"run.py\", line 99, in <module>\r\n    main()\r\n  File \"run.py\", line 76, in main\r\n    main_engine.add_app(CtaStrategyApp)\r\n  File \"/home/william/miniconda3/lib/python3.8/site-packages/vnpy/trader/engine.py\", line 101, in add_app\r\n    engine: BaseEngine = self.add_engine(app.engine_class)\r\n  File \"/home/william/miniconda3/lib/python3.8/site-packages/vnpy/trader/engine.py\", line 72, in add_engine\r\n    engine: BaseEngine = engine_class(self, self.event_engine)\r\n  File \"/home/william/miniconda3/lib/python3.8/site-packages/vnpy_ctastrategy/engine.py\", line 110, in __init__\r\n    self.database: BaseDatabase = get_database()\r\n  File \"/home/william/miniconda3/lib/python3.8/site-packages/vnpy/trader/database.py\", line 158, in get_database\r\n    database = module.Database()\r\nTypeError: Can't instantiate abstract class SqliteDatabase with abstract methods get_tick_overview\r\n```\r\n\r\n\r\n## 重现步骤\r\n\r\n`vnpy/examples/veighna_trader$ python run.py \r\n`",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3347/comments",
    "author": "cloudseasail",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2022-09-28T00:18:08Z",
        "body": "请升级核心库到3.3.0版本接口\r\n\r\n`pip install vnpy --upgrade`"
      },
      {
        "user": "cloudseasail",
        "created_at": "2022-09-28T11:20:45Z",
        "body": "> \r\nAlready upgraded to 3.3.0\r\n\r\n`Requirement already satisfied: vnpy in /home/william/miniconda3/lib/python3.8/site-packages (3.3.0)\r\nRequirement already satisfied: pyqtgraph in /home/william/miniconda3/lib/python3.8/site-packages (from vnpy) (0.12.3)\r\nRequirement already satisfied: ta-lib in /home/william/miniconda3/lib/python3.8/site-packages (from vnpy) (0.4.24)\r\nRequirement already satisfied: plotly in /home/william/miniconda3/lib/python3.8/site-packages (from vnpy) (5.5.0)\r\nRequirement already satisfied: qdarkstyle in /home/william/miniconda3/lib/python3.8/site-packages (from vnpy) (3.0.3)\r\nRequirement already satisfied: numpy in /home/william/miniconda3/lib/python3.8/site-packages (from vnpy) (1.21.5)\r\nRequirement already satisfied: pyzmq in /home/william/miniconda3/lib/python3.8/site-packages (from vnpy) (22.3.0)\r\nRequirement already satisfied: matplotlib in /home/william/miniconda3/lib/python3.8/site-packages (from vnpy) (3.5.1)\r\nRequirement already satisfied: pandas in /home/william/miniconda3/lib/python3.8/site-packages (from vnpy) (1.3.5)\r\nRequirement already satisfied: seaborn in /home/william/miniconda3/lib/python3.8/site-packages (from vnpy) (0.11.2)\r\nRequirement already satisfied: PySide6 in /home/william/miniconda3/lib/python3.8/site-packages (from vnpy) (6.2.3)\r\nRequirement already satisfied: tzlocal in /home/william/miniconda3/lib/python3.8/site-packages (from vnpy) (4.2)\r\nRequirement already satisfied: deap in /home/william/miniconda3/lib/python3.8/site-packages (from vnpy) (1.3.3)\r\nRequirement already satisfied: pyparsing>=2.2.1 in /home/william/miniconda3/lib/python3.8/site-packages (from matplotlib->vnpy) (2.4.7)\r\nRequirement already satisfied: kiwisolver>=1.0.1 in /home/william/miniconda3/lib/python3.8/site-packages (from matplotlib->vnpy) (1.3.1)\r\nRequirement already satisfied: cycler>=0.10 in /home/william/miniconda3/lib/python3.8/site-packages (from matplotlib->vnpy) (0.10.0)\r\nRequirement already satisfied: python-dateutil>=2.7 in /home/william/miniconda3/lib/python3.8/site-packages (from matplotlib->vnpy) (2.8.1)\r\nRequirement already satisfied: pillow>=6.2.0 in /home/william/miniconda3/lib/python3.8/site-packages (from matplotlib->vnpy) (8.0.1)\r\nRequirement already satisfied: fonttools>=4.22.0 in /home/william/miniconda3/lib/python3.8/site-packages (from matplotlib->vnpy) (4.33.3)\r\nRequirement already satisfied: packaging>=20.0 in /home/william/miniconda3/lib/python3.8/site-packages (from matplotlib->vnpy) (20.8)\r\nRequirement already satisfied: pytz>=2017.3 in /home/william/miniconda3/lib/python3.8/site-packages (from pandas->vnpy) (2020.5)\r\nRequirement already satisfied: tenacity>=6.2.0 in /home/william/miniconda3/lib/python3.8/site-packages (from plotly->vnpy) (8.0.1)\r\nRequirement already satisfied: six in /home/william/miniconda3/lib/python3.8/site-packages (from plotly->vnpy) (1.15.0)\r\nRequirement already satisfied: shiboken6==6.2.3 in /home/william/miniconda3/lib/python3.8/site-packages (from PySide6->vnpy) (6.2.3)\r\nRequirement already satisfied: qtpy>=1.9 in /home/william/miniconda3/lib/python3.8/site-packages (from qdarkstyle->vnpy) (2.1.0)\r\nRequirement already satisfied: scipy>=1.0 in /home/william/miniconda3/lib/python3.8/site-packages (from seaborn->vnpy) (1.5.4)\r\nRequirement already satisfied: pytz-deprecation-shim in /home/william/miniconda3/lib/python3.8/site-packages (from tzlocal->vnpy) (0.1.0.post0)\r\nRequirement already satisfied: backports.zoneinfo in /home/william/miniconda3/lib/python3.8/site-packages (from tzlocal->vnpy) (0.2.1)\r\nRequirement already satisfied: tzdata in /home/william/miniconda3/lib/python3.8/site-packages (from pytz-deprecation-shim->tzlocal->vnpy) (2022.1)\r\n`"
      },
      {
        "user": "cloudseasail",
        "created_at": "2022-09-28T11:48:39Z",
        "body": "更新vnpy_sqlite 之后解决了。\r\n有没有脚本可以把这些vnpy插件一起更新？  因为实在太多了"
      },
      {
        "user": "vnpy",
        "created_at": "2022-09-29T00:58:38Z",
        "body": "> 更新vnpy_sqlite 之后解决了。 有没有脚本可以把这些vnpy插件一起更新？ 因为实在太多了\r\n\r\nVeighNa Studio中的Station提供了环境管理维护的功能，包括【一键更新】等"
      }
    ]
  },
  {
    "number": 3335,
    "title": "最新版本无法微信扫码登录，注册时没有维护邮箱与密码；找回密码必须邮箱，无解了",
    "created_at": "2022-08-23T14:12:56Z",
    "closed_at": "2022-08-24T01:20:53Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3335",
    "body": "最新版本无法微信扫码登录，注册时没有维护邮箱与密码；找回密码必须邮箱，无解了",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3335/comments",
    "author": "CharlesSong",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2022-08-24T01:20:49Z",
        "body": "请在公众号[VeighNa开源量化]后台，提供您的注册时昵称和邮箱信息，以及新的要使用的邮箱，我们在后台看看能否找回匹配的记录"
      },
      {
        "user": "CharlesSong",
        "created_at": "2022-08-25T07:54:14Z",
        "body": "> 请在公众号[VeighNa开源量化]后台，提供您的注册时昵称和邮箱信息，以及新的要使用的邮箱，我们在后台看看能否找回匹配的记录\r\n\r\n\r\n您好，APP端的扫码登录能否恢复？\r\n\r\n"
      }
    ]
  },
  {
    "number": 3313,
    "title": "请教个计算期权希腊字母的问题",
    "created_at": "2022-07-02T08:39:22Z",
    "closed_at": "2022-09-29T00:57:19Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3313",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 11或者Ubuntu 20.04\r\n* Python版本: 如VeighNa Studio-2.9.0\r\n* VeighNa版本: 如v2.9.0发行版或者dev branch 20211224（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n针对期权定价模块，原来的pricing 模块是数值解，最新的是解析解，但是计算以下参数的gamma 差别有点大，不知道是什么原因，感谢大家。\r\n\r\ns=50\r\nk=50\r\nr=0.12\r\nq=0.0\r\nt=0.25\r\nv=0.3\r\ncp=1\r\n\r\nmatlab计算gamma结果为：0.05121，\r\n\r\n最新pricing的是解析解\r\n#-------------------------------------------------------------------------------\r\nfrom scipy import stats\r\nfrom math import log, pow, sqrt, exp\r\nfrom typing import Tuple\r\ncdf = stats.norm.cdf\r\npdf = stats.norm.pdf\r\ndef calculate_d1(\r\n    s: float,\r\n    k: float,\r\n    r: float,\r\n    t: float,\r\n    v: float\r\n) -> float:\r\n    \"\"\"Calculate option D1 value\"\"\"\r\n    d1: float = (log(s / k) + (r + 0.5 * pow(v, 2)) * t) / (v * sqrt(t))\r\n    return d1\r\n\r\ndef calculate_gamma(\r\n    s: float,\r\n    k: float,\r\n    r: float,\r\n    t: float,\r\n    v: float,\r\n    d1: float = 0.0\r\n) -> float:\r\n    \"\"\"Calculate option gamma\"\"\"\r\n    if v <= 0:\r\n        return 0\r\n\r\n    if not d1:\r\n        d1: float = calculate_d1(s, k, r, t, v)\r\n\r\n    _gamma: float = pdf(d1) / (s * v * sqrt(t))\r\n    gamma: float = _gamma * pow(s, 2) * 0.0001\r\n\r\n    return gamma\r\n#------------------------------------------------------------------------------\r\n\r\ncalculate_gamma(s,k,r,t,v,)\r\nOut[44]: 0.01280463051019016\r\n\r\n原来pricing的是数值解\r\n#------------------------------------------------------------------------------\r\nfrom scipy import stats\r\nfrom math import (log, pow, sqrt, exp)\r\n\r\ncdf = stats.norm.cdf\r\n# 计算希腊值和隐含波动率时用的参数\r\nSTEP_CHANGE = 0.001\r\nSTEP_UP = 1 + STEP_CHANGE\r\nSTEP_DOWN = 1 - STEP_CHANGE\r\nSTEP_DIFF = STEP_CHANGE * 2\r\n\r\nDX_TARGET = 0.00001\r\n\r\ndef calculatePrice(s, k, r, t, v, cp):\r\n    \"\"\"计算期权价格\"\"\"\r\n    # 如果波动率为0，则直接返回期权空间价值\r\n    if v <= 0:\r\n        return max(0, cp * (s - k))\r\n\r\n    d1 = (log(s / k) + (r + 0.5 * pow(v, 2)) * t) / (v * sqrt(t))\r\n    d2 = d1 - v * sqrt(t)\r\n    price = cp * (s * cdf(cp * d1) - k * cdf(cp * d2) * exp(-r * t))\r\n    return price\r\n\r\ndef calculateMPrice(s, k, r, t, v, q, cp):\r\n    \"\"\"计算期权价格,带股息率\"\"\"\r\n    # 如果波动率为0，则直接返回期权空间价值\r\n    if v <= 0:\r\n        return max(0, cp * (s - k))\r\n\r\n    d1 = (log(s / k) + (r -q + 0.5 * pow(v, 2)) * t) / (v * sqrt(t))\r\n    d2 = d1 - v * sqrt(t)\r\n    price = cp * (s * cdf(cp * d1)*exp(-q*t) - k * cdf(cp * d2) * exp(-r * t))\r\n    return price\r\n\r\ndef calculateDelta(s, k, r, t, v, cp):\r\n    \"\"\"计算Delta值\"\"\"\r\n    price1 = calculatePrice(s*STEP_UP, k, r, t, v, cp)\r\n    price2 = calculatePrice(s*STEP_DOWN, k, r, t, v, cp)\r\n    delta = (price1 - price2) / (s * STEP_DIFF) * (s * 0.01)\r\n    return delta\r\n\r\ndef calculateGamma(s, k, r, t, v, cp):\r\n    \"\"\"计算Gamma值\"\"\"\r\n    delta1 = calculateDelta(s*STEP_UP, k, r, t, v, cp)\r\n    delta2 = calculateDelta(s*STEP_DOWN, k, r, t, v, cp)\r\n    gamma = (delta1 - delta2) / (s * STEP_DIFF) * pow(s, 2) * 0.0001\r\n    return gamma\r\n\r\ncalculateGamma(s, k, r, t, v, cp)\r\nOut[46]: 0.007923080148275335\r\n\r\n\r\ncalculate_gamma(s,k,r,t,v,)\r\nOut[44]: 0.01280463051019016\r\n\r\n上面这两个结果差别有点大\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3313/comments",
    "author": "nankaimy",
    "comments": [
      {
        "user": "Edanflame",
        "created_at": "2022-08-15T02:22:08Z",
        "body": "因为vnpy中采用的现金希腊值，考虑了合约价值的因素，在calculateDelta中delta = (price1 - price2) / (s * STEP_DIFF)，获得的结果就和vnpy中一致了"
      },
      {
        "user": "qiyuexuezainanfang",
        "created_at": "2022-09-28T07:57:57Z",
        "body": "matlab计算的是普通的gamma希腊值，在python中用数值方法得到了跟它一样的结果。vnpy提供的是现金希腊值，如果你也想计算这个，就在calculateDelta中delta = (price1 - price2) / (s * STEP_DIFF)，gamma函数不用改；如果你想计算普通的ganma希腊值，那两个函数都要改。"
      }
    ]
  },
  {
    "number": 3291,
    "title": "python run.py无法启动",
    "created_at": "2022-04-26T05:26:12Z",
    "closed_at": "2022-04-27T01:47:22Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3291",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: 如VeighNa Studio-2.9.0\r\n* VeighNa版本: \r\nveighna_studio-3.0.0.exe\r\npython3.10.0\r\nvnpy-3.0.0\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\nC:\\Users\\xinmans\\Desktop\\vnpy-3.0.0\\examples\\vn_trader>python run.py\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\xinmans\\Desktop\\vnpy-3.0.0\\examples\\vn_trader\\run.py\", line 31, in <module>\r\n    from vnpy_optionmaster import OptionMasterApp\r\n  File \"C:\\Users\\xinmans\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\vnpy_optionmaster\\__init__.py\", line 26, in <module>\r\n    from .engine import OptionEngine, APP_NAME\r\n  File \"C:\\Users\\xinmans\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\vnpy_optionmaster\\engine.py\", line 34, in <module>\r\n    from .pricing import binomial_tree_cython as binomial_tree\r\n  File \"binomial_tree_cython.pyx\", line 1, in init binomial_tree_cython\r\nValueError: numpy.ndarray size changed, may indicate binary incompatibility. Expected 96 from C header, got 88 from PyObject\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3291/comments",
    "author": "xinmans",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2022-04-27T01:47:22Z",
        "body": "numpy版本太低了，升级下吧：\r\n\r\n`pip install numpy --upgrade`"
      }
    ]
  },
  {
    "number": 3289,
    "title": "rpc_client调用错误",
    "created_at": "2022-04-22T10:17:19Z",
    "closed_at": "2022-04-22T13:08:16Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3289",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: 3.7\r\n* VeighNa版本: 如v3.0.0\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n0 4\r\n1 4\r\n2 4\r\n3 4\r\n4 4\r\n5 4\r\n6 4\r\n7 4\r\n8 4\r\n9 4\r\n0 7\r\n1 7\r\n2 7\r\n3 7\r\n4 7\r\n5 7\r\n6 7\r\n7 7\r\n8 7\r\n9 7\r\n\r\n\r\n## 实际程序行为\r\n0 7\r\n0 4\r\n2 7\r\n3 7\r\n4 7\r\n4 4\r\n6 7\r\n7 7\r\n8 7\r\n8 4\r\n9 7\r\n9 4\r\n2 4\r\n5 7\r\n5 4\r\n6 4\r\n1 7\r\n3 4\r\n7 4\r\n1 4\r\n\r\n## 描述\r\n多线程远程发送指令出现一些耗时较长的指令后，较早发送的耗时较短的指令会拖到很后面才能处理，导致程序时序混乱。\r\n\r\n## 重现步骤\r\n\r\ntest_client.py:\r\n```\r\nfrom __future__ import print_function\r\nfrom __future__ import absolute_import\r\nfrom concurrent.futures import ThreadPoolExecutor\r\nfrom time import sleep\r\n\r\nfrom vnpy.rpc import RpcClient\r\n\r\n\r\nclass TestClient(RpcClient):\r\n    \"\"\"\r\n    Test RpcClient\r\n    \"\"\"\r\n\r\n    def __init__(self):\r\n        \"\"\"\r\n        Constructor\r\n        \"\"\"\r\n        super(TestClient, self).__init__()\r\n\r\n    def callback(self, topic, data):\r\n        \"\"\"\r\n        Realize callable function\r\n        \"\"\"\r\n        print(f\"client received topic:{topic}, data:{data}\")\r\n\r\ndef test(c):\r\n    a = tc.add1(2, 5)\r\n    print(c, a)\r\n    b = tc.add(1, 3)\r\n    print(c, b)\r\n    sleep(2)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    req_address = \"tcp://localhost:2014\"\r\n    sub_address = \"tcp://localhost:4102\"\r\n\r\n    tc = TestClient()\r\n    tc.subscribe_topic(\"\")\r\n    tc.start(req_address, sub_address)\r\n\r\n    p = ThreadPoolExecutor()\r\n    for i in range(10):\r\n        p.submit(test, i)\r\n        sleep(1)\r\n```\r\n\r\ntest_server.py:\r\n```\r\nfrom __future__ import print_function\r\nfrom __future__ import absolute_import\r\nfrom time import sleep, time\r\n\r\nfrom vnpy.rpc import RpcServer\r\n\r\n\r\nclass TestServer(RpcServer):\r\n    \"\"\"\r\n    Test RpcServer\r\n    \"\"\"\r\n\r\n    def __init__(self):\r\n        \"\"\"\r\n        Constructor\r\n        \"\"\"\r\n        super(TestServer, self).__init__()\r\n\r\n        self.register(self.add)\r\n        self.register(self.add1)\r\n\r\n    def add(self, a, b):\r\n        \"\"\"\r\n        Test function\r\n        \"\"\"\r\n        print(f\"receiving:{a} {b}\")\r\n        return a + b\r\n\r\n    def add1(self, a, b):\r\n        \"\"\"\r\n        Test function\r\n        \"\"\"\r\n        print(f\"receiving:{a} {b}\")\r\n        sleep(10)\r\n        return a + b\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    rep_address = \"tcp://*:2014\"\r\n    pub_address = \"tcp://*:4102\"\r\n\r\n    ts = TestServer()\r\n    ts.start(rep_address, pub_address)\r\n\r\n    while 1:\r\n        content = f\"current server time is {time()}\"\r\n        print(content)\r\n        ts.publish(\"test\", content)\r\n        sleep(2)\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3289/comments",
    "author": "eachout",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2022-04-22T13:08:16Z",
        "body": "vnpy.rpc的主动请求是基于ZMQ的REP-REQ的单线程同步阻塞工作模式，上述是正常情况。\r\n\r\n交易类应用不是Web服务，不应该存在需要长时间等待的调用。"
      }
    ]
  },
  {
    "number": 3249,
    "title": "在macbook-m1 chip 安装的时候先brew一下",
    "created_at": "2022-03-09T20:35:02Z",
    "closed_at": "2022-03-16T01:12:37Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3249",
    "body": "## 环境\r\n\r\n* 操作系统: macbook-m1 macOS Monterey 12.2\r\n* Python版本: miniforge 3.9.10\r\n\r\n## Issue类型\r\nBug\r\n\r\n## 预期程序行为\r\n\r\n```\r\nbash install_osx.sh\r\n```\r\n\r\n## 实际程序行为\r\n\r\n```\r\nbash install_osx.sh\r\n× Preparing metadata (pyproject.toml) did not run successfully.\r\n```\r\n\r\n## 解决方法\r\n\r\n```\r\nconda create -n quant python=3.9\r\npython -m pip install --upgrade pip setuptools wheel\r\narch -arm64 brew install ta-lib\r\nbrew install pyqt5\r\necho 'export PATH=\"/opt/homebrew/opt/qt@5/bin:$PATH\"' >> ~/.zshrc\r\npython -m pip install ta-lib pyqt5\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3249/comments",
    "author": "monchewharry",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2022-03-13T12:02:45Z",
        "body": "@Edanflame 请看下"
      },
      {
        "user": "Edanflame",
        "created_at": "2022-03-15T04:02:55Z",
        "body": "看了一下，好像是因为pypi上pyqt5目前只支持了intel芯片版本的mac的安装包。新的vnpy3.0使用pyside6替换pyqt5，应该可以不会有这个问题了"
      }
    ]
  },
  {
    "number": 3247,
    "title": "vnpy-3.0.0无法启动",
    "created_at": "2022-02-24T12:06:57Z",
    "closed_at": "2022-03-13T12:01:55Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3247",
    "body": "## 环境\r\n\r\n* 操作系统: macos\r\n* Python版本: 3.7\r\n* VeighNa版本: v3.0.0发行版\r\n\r\n\r\n## Issue类型\r\nBug\r\n\r\n\r\n## 预期程序行为\r\n样例启动成功\r\n```\r\npython run.py\r\n```\r\n\r\n## 实际程序行为\r\n装包脚本运行成功 `bash install_osx.sh`\r\n```\r\nSuccessfully built vnpy\r\nInstalling collected packages: vnpy\r\nSuccessfully installed vnpy-3.0.0\r\n```\r\n**样例启动失败**\r\n```\r\npython run.py\r\n```\r\n```\r\nTraceback (most recent call last):\r\n  File \"run.py\", line 3, in <module>\r\n    from vnpy.trader.ui import MainWindow, create_qapp\r\n  File \"/Users/xxx/PycharmProjects/vnpy/vnpy-master-github/vnpy/trader/ui/__init__.py\", line 1, in <module>\r\n    from .qt import QtCore, QtWidgets, QtGui, Qt, create_qapp\r\n  File \"/Users/xxx/PycharmProjects/vnpy/vnpy-master-github/vnpy/trader/ui/qt.py\", line 9, in <module>\r\n    from PySide6 import QtGui, QtWidgets, QtCore\r\nImportError: could not import module 'PySide6.QtCore'\r\n\r\n```\r\nPySide6.QtCore模块无法导入，执行`pip install PySide6 --upgrade` 仍然无效\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3247/comments",
    "author": "ZzAllenZz",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2022-02-24T23:56:02Z",
        "body": "@Edanflame "
      },
      {
        "user": "Edanflame",
        "created_at": "2022-02-25T02:58:17Z",
        "body": "在MacOS下尝试了多个版本的python和PySide6之间的兼容性。在python3.7下运行安装PySide6 6.23或者6.22.1，都会产生异常symbol not found in flat namespace '_PyIndex_Check'。原因可能和MacOS最近较大内容升级以及PySide6的.so文件的编译有关。在python3.8以及之后的版本则不会出现此问题，建议升级python版本。"
      },
      {
        "user": "ZzAllenZz",
        "created_at": "2022-02-26T04:22:07Z",
        "body": "使用python3.8 并运行install_osx.sh成功\r\n```\r\nSuccessfully installed vnpy-3.0.0\r\n\r\n```\r\n```\r\nPython 3.8.12 (default, Oct 12 2021, 06:23:56) \r\n[Clang 10.0.0 ] :: Anaconda, Inc. on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n```\r\n但运行run.py仍报错\r\n```\r\nTraceback (most recent call last):\r\n  File \"run.py\", line 6, in <module>\r\n    from vnpy_ctastrategy import CtaStrategyApp\r\nModuleNotFoundError: No module named 'vnpy_ctastrategy'\r\n\r\n```\r\n请求帮助\r\n"
      },
      {
        "user": "ZzAllenZz",
        "created_at": "2022-02-26T05:37:17Z",
        "body": "是不是应为 没有 安装`vnpy_ctastrategy`等包导致的？\r\n手动安装`vnpy_ctastrategy`后，运行显示`ModuleNotFoundError: No module named 'vnpy.trader.ui.editor'`"
      },
      {
        "user": "Edanflame",
        "created_at": "2022-02-26T08:13:42Z",
        "body": "可以查看一下vnpy_ctastrategy的版本，1.0.8版本的是适配vnpy-3.0.0的"
      }
    ]
  },
  {
    "number": 3228,
    "title": "官网",
    "created_at": "2022-01-17T09:36:21Z",
    "closed_at": "2022-01-18T01:22:07Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3228",
    "body": "vnpy.cn 与vnpy.com 哪个才是官网？\r\n有点懵\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3228/comments",
    "author": "majieforest",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2022-01-18T01:22:07Z",
        "body": "我们的官网是www.vnpy.com，其他后缀名的和我们都无关哦"
      }
    ]
  },
  {
    "number": 3223,
    "title": "vnpy 在macOS Monterey下的安装问题",
    "created_at": "2022-01-04T02:13:10Z",
    "closed_at": "2022-02-21T06:33:53Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3223",
    "body": "## 环境\r\n\r\n* 操作系统: MacOS Monterey\r\n* Python版本: 如python 3.7.11\r\n* vn.py版本: v2.9.0\r\n\r\n## Issue类型\r\nQuestion\r\n\r\n## 预期程序行为\r\nexample中的run.py打开图形主界面\r\n\r\n## 实际程序行为\r\n无法打开图形界面\r\n\r\n解决方案：\r\npip install PyQt5==5.15.4 后，才可以打开图形界面\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3223/comments",
    "author": "yhmickey",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2022-02-21T06:33:53Z",
        "body": "3.0中将改为使用PySide6，解决该问题"
      }
    ]
  },
  {
    "number": 3210,
    "title": "Mac安装脚本不支持M1芯片",
    "created_at": "2021-12-08T08:15:28Z",
    "closed_at": "2022-01-18T01:22:35Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3210",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.0.5发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3210/comments",
    "author": "sunaigo",
    "comments": [
      {
        "user": "cymqqqq",
        "created_at": "2021-12-20T04:28:52Z",
        "body": "在此询问vnpy团队什么时候能修复m1 mac安装失败的问题"
      },
      {
        "user": "Edanflame",
        "created_at": "2022-01-17T07:15:08Z",
        "body": "尝试使用2.9.0最新的安装脚本安装试试。m1 mac的问题有些是依赖库和python本身不支持导致的，我们也在等待python以及依赖对m1芯片的完美适配。由于我们目前没有m1芯片的机器来开发，所以有些问题可能需要自行调试修改一下，在过程中可以把遇到的具体问题贴在issues上或者论坛上，可以大家一起讨论，我们也会尽力解决。"
      }
    ]
  },
  {
    "number": 3174,
    "title": "运行python \\example\\vn_trader\\run.py，ImportError: DLL load failed: 找不到指定的模块",
    "created_at": "2021-10-26T16:05:56Z",
    "closed_at": "2021-11-01T08:08:24Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3174",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 10\r\n* Python版本: Python3.7\r\n* vn.py版本: v2.7.0 和 master分支\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n\r\n正常启动\r\n\r\n## 实际程序行为\r\n\r\npython .\\example\\vn_trader\\run.py\r\n\r\nFile \".\\run.py\", line 5, in <module>\r\n    from vnpy.trader.ui import MainWindow, create_qapp\r\n  File \"C:\\ProgramData\\Miniconda3\\lib\\site-packages\\vnpy\\trader\\ui\\__init__.py\", line 9, in <module>\r\n    from PyQt5 import QtGui, QtWidgets, QtCore\r\nImportError: DLL load failed: 找不到指定的模块。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3174/comments",
    "author": "finology",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-10-27T00:10:21Z",
        "body": "PyQt安装有问题，请卸载Miniconda后安装使用VNStudio"
      }
    ]
  },
  {
    "number": 3172,
    "title": "vnpy2.7.0版本币安永续USDT接口，未能正确在UI界面显示已订阅的合约",
    "created_at": "2021-10-26T08:48:06Z",
    "closed_at": "2021-10-27T13:29:10Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3172",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: 3.7\r\n* vn.py版本: 如v2.7.0\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 实际程序行为\r\nvnpy2.7.0版本币安永续USDT接口，未能正确在UI界面显示已订阅的合约。\r\n多个策略初始化之后，UI界面上的行情依旧为空白显示。\r\n\r\n不确定是不是仅仅是UI显示有问题，还是行情订阅本身还存在问题\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3172/comments",
    "author": "AITrading2020",
    "comments": [
      {
        "user": "noranhe",
        "created_at": "2021-10-27T06:43:16Z",
        "body": "已修复，用命令行pip install --upgrade vnpy_binance升级即可"
      }
    ]
  },
  {
    "number": 3151,
    "title": "ubuntu安装过程报错",
    "created_at": "2021-09-28T14:16:19Z",
    "closed_at": "2021-10-08T13:38:42Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3151",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 20.04\r\n* Python版本: Python 3.9.5 (default, Jun  4 2021, 12:28:51) \r\n[GCC 7.5.0] :: Anaconda, Inc. on linux\r\n\r\n* vn.py版本: v2.60\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n按照安装指南\r\nbash install.sh\r\n安装过程报\r\nERROR: Could not find a version that satisfies the requirement dolphindb (from vnpy-dolphindb) (from versions: none)\r\nERROR: No matching distribution found for dolphindb\r\nsed: 无法打开临时文件 /etc/sedE9iFuF: 权限不够\r\nProcessing /home/hyz/下载/vnpy-2.6.0\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3151/comments",
    "author": "rdscfh",
    "comments": [
      {
        "user": "LJNL",
        "created_at": "2021-10-03T16:13:45Z",
        "body": "在requirement.txt 去掉leveldb。\r\n原因有win依赖。\r\n\r\nleveldb 是个kv数据库 Facebook搞的，现在改名成rocksdb了。\r\n你可以用别的数据库存储。"
      },
      {
        "user": "luneice",
        "created_at": "2021-11-20T10:18:32Z",
        "body": "请问，这个问题解决了吗？删除leveldb依赖之后，在后续的安装过程中还是出现了权限的错误。\r\n```\r\n...\r\n...\r\n...\r\nRequirement already satisfied: soupsieve>1.2 in /luneice/env/anaconda/envs/fintech/lib/python3.8/site-packages (from beautifulsoup4->bs4->tushare->vnpy_tushare==1.2.64.1->-r requirements.txt (line 75)) (2.3.1)\r\nsed: 无法打开临时文件 /etc/sedWVWLHa: 权限不够\r\nProcessing /luneice/project/python/vnpy\r\n  Preparing metadata (setup.py) ... done\r\nRequirement already satisfied: PyQt5 in /luneice/env/anaconda/envs/fintech/lib/python3.8/site-packages (from vnpy==2.7.0) (5.14.1)\r\n...\r\n...\r\n...\r\n```"
      }
    ]
  },
  {
    "number": 3106,
    "title": "K线图画图是否可以对一些刷新、更新做分钟级别的修改",
    "created_at": "2021-08-13T08:43:44Z",
    "closed_at": "2023-12-05T12:50:25Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3106",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* vn.py版本: 如v2.3\r\n\r\n## Issue类型\r\n三选一：Enhancement\r\n\r\n## 重现步骤\r\n\r\n\r\n群主，您好\r\n\r\n对于 class ChartWizardWidget 的结构设计等真的是没得说的，非常棒的，是否会考虑对于这部分做如下修改：\r\n\r\n1、对于图形上下限，做10%（可分别上下限设置，可能需要增加参数修改的页签会更方便的）的溢出，这样就会看起来比较舒服些；\r\n2、对于纵轴，是否可以考虑修改成分钟级别或者说bar数量变更级别的更新，因为1溢出了，不需要一直更新y轴的了；\r\n\r\n图形画图，感觉有些更新、刷新修改成分钟级别或者说bar数量变更级别会好些的，尤其是开了多个图形一直时时刷的情况下。\r\n（以上是我已经变相实现后感觉这样修改会更好的切实感受。）\r\n\r\n\r\n谢谢！\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3106/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "stone3536",
        "created_at": "2021-08-13T08:47:44Z",
        "body": "对了，感觉左边是百分比，右边是价格比较好些，画图按照百分比画（这个就需要有个初始值了，默认第一个bar），实际显示的时候该显示价格的位置显示价格，该显示百分比的显示百分比比较合适的。"
      },
      {
        "user": "vnpy",
        "created_at": "2023-12-05T12:50:25Z",
        "body": "经过考虑，VeighNa项目核心定位保持在量化交易平台开发框架，K线图表等相应图表功能建议使用其他项目实现（如TradingView等）"
      }
    ]
  },
  {
    "number": 3091,
    "title": "使用RqdataClient的方法query_history获取历史数据报错",
    "created_at": "2021-08-09T02:15:46Z",
    "closed_at": "2021-08-15T06:34:26Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3091",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: Anancoda 3.7\r\n* vn.py版本: 如2.3.0\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n使用RqdataClient的方法query_history获取历史数据时候\r\n\r\n## 实际程序行为\r\n            for ix, row in df.iterrows():\r\n                dt = row.name.to_pydatetime() - adjustment\r\n报错\r\nrow.name 是tuple, 是(symbol, 时间）组合，而不是直接时间，没有pydatetime()\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3091/comments",
    "author": "BillyZhangGuoping",
    "comments": [
      {
        "user": "noranhe",
        "created_at": "2021-08-09T08:25:48Z",
        "body": "请问你是下载什么数据的什么时间段的什么频率的数据导致的报错？我们来复现一下。"
      },
      {
        "user": "vnpy",
        "created_at": "2021-08-15T06:34:26Z",
        "body": "请使用2.9.33版本的rqdatac，我们会在后续升级到最新版本"
      }
    ]
  },
  {
    "number": 3089,
    "title": "图形启动报错'BaseCell' does not have a signal with the signature signal_history",
    "created_at": "2021-08-09T01:49:10Z",
    "closed_at": "2021-08-10T03:50:54Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3089",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* vn.py版本: 如v2.3.0\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 重现步骤\r\n\r\n群主，您好\r\n\r\n启动图形的时候报类似这种错误，恳请您指导下这类错误该如何跟踪处理？\r\n实际上BaseCell根本没用到的，但是为啥会报这类错误？【是不是对象错乱了导致的？想不通的呢】\r\n就算ChartWizardWidget用到的三个 signal_tick、signal_spread、signal_history 也是在类中定义的，不应该丢失的呀，\r\n\r\n请问如果是单独创建了的 ChartWizardWidget 的对象，那什么情况下会丢失？\r\n\r\n另外就是这个对象，是保存在哪个python的缓存对象中？如何判断event到了这个对象或者类（比如我提前记录对象或者类到指定的event字典中，每次都判断这个对象或者类是否有signal_tick属性）的位置判断属性是否存在，通过try... except方式规避掉这种错误发生，否则程序直接异常了的？\r\n\r\n恳请百忙中指导下该如何屏蔽掉这种错误或者该如何查询这类错误，谢谢！\r\n\r\n\r\n\r\n错误信息如下：\r\nPS D:\\00_VNPY_2.x\\trader2.x> python '.\\run_current(2.3.0).py'\r\n2021-08-06 09:33:08,420  INFO: IB TWS连接成功\r\n2021-08-06 09:35:04,837  INFO: 当前使用的交易账号为\r\n2021-08-06 09:35:04,839  INFO: 行情服务器连接成功\r\n2021-08-06 09:35:04,840  INFO: 交易服务器连接成功\r\n2021-08-06 09:35:04,840  INFO: 行情服务器登录成功\r\n2021-08-06 09:35:04,841  INFO: 交易服务器授权验证成功\r\n2021-08-06 09:35:04,841  INFO: 交易服务器登录成功\r\n2021-08-06 09:35:04,841  INFO: 结算信息确认成功\r\n2021-08-06 09:35:06,017  INFO: 合约信息查询成功\r\nException in thread Thread-1:\r\nTraceback (most recent call last):\r\n  File \"D:\\00_VNPY_2.x\\Anaconda3\\lib\\threading.py\", line 917, in _bootstrap_inner\r\n    self.run()\r\n  File \"D:\\00_VNPY_2.x\\Anaconda3\\lib\\threading.py\", line 865, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"D:\\00_VNPY_2.x\\Anaconda3\\lib\\site-packages\\vnpy\\event\\engine.py\", line 64, in _run\r\n    self._process(event)\r\n  File \"D:\\00_VNPY_2.x\\Anaconda3\\lib\\site-packages\\vnpy\\event\\engine.py\", line 77, in _process\r\n    [handler(event) for handler in self._handlers[event.type]]\r\n  File \"D:\\00_VNPY_2.x\\Anaconda3\\lib\\site-packages\\vnpy\\event\\engine.py\", line 77, in <listcomp>\r\n    [handler(event) for handler in self._handlers[event.type]]\r\nAttributeError: 'BaseCell' does not have a signal with the signature signal_history(PyQt_PyObject)\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3089/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-08-10T03:50:54Z",
        "body": "这个报错是因为错误的将某个单元格对象，用作了想要绑定signal的图表对象，请自行排查代码了。"
      },
      {
        "user": "stone3536",
        "created_at": "2021-08-10T09:32:08Z",
        "body": "这个，真的是没有用到 BaseCell 和 signal_history的，包括继承的。遍历搜索过的了，每一个都仔细看过的了。"
      },
      {
        "user": "stone3536",
        "created_at": "2021-08-10T09:35:29Z",
        "body": "遍历搜索过了BaseCell ，也同时遍历搜索过了signal_history。\r\n这个错误，是2个月来第一次出现的，也是醉了怎么会报这个错误的。"
      }
    ]
  },
  {
    "number": 3073,
    "title": "TargetPosTemplate 锁仓功能",
    "created_at": "2021-07-20T06:39:01Z",
    "closed_at": "2021-08-15T06:34:44Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3073",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 18.04\r\n* Python版本: Python 3.7.7\r\n* vn.py版本: v2.0.5\r\n\r\n## Issue类型\r\nEnhancement\r\n\r\n## 预期程序行为\r\n\r\n希望 `set_target_pos`可以支持锁仓功能， 并且假如日内保证金占用过高，切换到不锁仓模式后，`offset`的判断不应该只看`self.pos`，还要像`convert_order_request_lock`一样看`td_volume`。\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3073/comments",
    "author": "AStupidBear",
    "comments": [
      {
        "user": "noranhe",
        "created_at": "2021-08-12T01:46:58Z",
        "body": "请根据自己需求进行个性化修改了"
      }
    ]
  },
  {
    "number": 3067,
    "title": "策略variables加载机制导致的信号覆盖问题",
    "created_at": "2021-07-12T02:16:43Z",
    "closed_at": "2021-08-15T06:35:15Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3067",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 10\r\n* Python版本: 如VNStudio-2.3\r\n* vn.py版本: master branch 20210615（下载日期）\r\n\r\n## Issue类型\r\nBug\r\n\r\n## 预期程序行为\r\n使用vnpy自带DualThrust策略，cta_strategy_data.json文件中存在day_open,long_entry,short_entry等参数。当策略在交易时段内启动时，预期day_open,long_entry,short_entry应为当日开盘价计算的结果\r\n\r\n## 实际程序行为\r\nday_open,long_entry,short_entry为文件内储存的旧参数\r\n\r\n## 重现步骤\r\n原因：交易时段内启动策略，会导致当日的day_open,long_entry,short_entry是在on_init内load（10）计算的，但json文件会在on_init后覆盖策略参数\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3067/comments",
    "author": "dz8235462",
    "comments": [
      {
        "user": "noranhe",
        "created_at": "2021-08-13T05:57:49Z",
        "body": "程序是这么设计的，预计的是如果没有缓存，就用load_bar10天计算的指标初始化。如果有缓存，默认的是正常连续交易，所以第二天盘前打开读取昨天收盘交易结束时计算的指标数值。如果有盘中内启动策略的需求，可以根据自己需求进行个性化修改了。"
      }
    ]
  },
  {
    "number": 3059,
    "title": "关掉vnpy时报错：OSError: [WinError 10038] 在一个非套接字上尝试了一个操作",
    "created_at": "2021-07-07T08:34:44Z",
    "closed_at": "2021-07-07T22:25:59Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3059",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* vn.py版本: 如v2.3.0\r\n\r\n## Issue类型\r\n三选一：Bug/Question\r\n\r\n## 重现步骤\r\n\r\n群主，您好\r\n\r\n关掉vnpy时报错，这个错误之前提出过，之前的答复是：\r\n这个问题来源于IB的Python API底层，在vn.py中无法处理，因为在退出时才会出现，所以忽略即可\r\n\r\n1、请问目前是否有更好的解决方法了？\r\n2、另外请问是否可以在IB的接口中根据message号 10038 屏蔽掉这个错误信息不在cmd窗口中显示出来？ \r\n3、这个错误，有时候感觉关掉所有程序后，会导致cmd直接卡死的了呢，就是关掉后，这个报错信息出来了，，，然后cmd窗口就卡住了，，，不论怎么敲回车都没任何反应的，，，等10几分钟都是如此的\r\n\r\n恳请百忙中帮忙确认下这个问题是否有好的规避掉的方法，谢谢！\r\n\r\n错误信息如下：\r\nunhandled exception in EReader thread\r\nTraceback (most recent call last):\r\n  File \"D:\\01_VNPY\\Anaconda3\\lib\\site-packages\\ibapi\\reader.py\", line 34, in run\r\n    data = self.conn.recvMsg()\r\n  File \"D:\\01_VNPY\\Anaconda3\\lib\\site-packages\\ibapi\\connection.py\", line 99, in recvMsg\r\n    buf = self._recvAllMsg()\r\n  File \"D:\\01_VNPY\\Anaconda3\\lib\\site-packages\\ibapi\\connection.py\", line 119, in _recvAllMsg\r\n    buf = self.socket.recv(4096)\r\nOSError: [WinError 10038] 在一个非套接字上尝试了一个操作。\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3059/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-07-07T22:25:59Z",
        "body": "这个我们排查过时IB官方API底层实现的问题，无法在vn.py层修复了，可以升级到最新版试试：\r\n\r\n`pip install ibapi --upgrade`"
      },
      {
        "user": "stone3536",
        "created_at": "2021-08-05T01:48:09Z",
        "body": "@vnpy \r\n群主，您好\r\n升级完后报错\r\n\r\n2021-08-05 09:42:06,151  INFO: IB TWS连接成功\r\nException in thread Thread-4:\r\nTraceback (most recent call last):\r\n  File \"D:\\00_VNPY_2.x\\Anaconda3\\lib\\threading.py\", line 917, in _bootstrap_inner\r\n    self.run()\r\n  File \"D:\\00_VNPY_2.x\\Anaconda3\\lib\\threading.py\", line 865, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"D:\\00_VNPY_2.x\\Anaconda3\\lib\\site-packages\\vnpy\\gateway\\ib\\ib_gateway.py\", line 908, in run\r\n    while not self.done and self.isConnected():\r\nAttributeError: 'IbClient' object has no attribute 'done'\r\n\r\n"
      }
    ]
  },
  {
    "number": 3058,
    "title": "vnpy新版订阅SI行情报错：you must specify the multiplier or trading class.",
    "created_at": "2021-07-07T08:28:23Z",
    "closed_at": "2021-08-15T06:42:51Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3058",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* vn.py版本: 如v2.3.0\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 重现步骤\r\n\r\n群主，您好\r\n\r\n登录tws后，对于si标的订阅的，报错信息如下：\r\n......\r\nERROR 16 200 The contract description specified for SI is ambiguous;\r\nyou must specify the multiplier or trading class.\r\n......\r\n2021-07-07 15:49:04,574  INFO: 信息通知，代码：200，内容: The contract descripti\r\non specified for SI is ambiguous;\r\nyou must specify the multiplier or trading class.\r\n2021-07-07 15:49:08,221  INFO: 合约信息查询成功\r\n\r\n\r\nTWS 是英文的登录环境，使用新版本的，SI 的合约 \"SI-20210928-USD-FUT.NYMEX\" 报错，但是使用vnpy1.9.2版本的获取合约 SIU1 都是可以订阅到的，同一个IB的实盘账号的，请问这类是跟 vnpy 或者 ib 的接口有关吗？\r\n恳请百忙中帮忙确认下，谢谢！\r\n\r\n论坛及网上搜索了，没有这类的解决方法的。\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3058/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "noranhe",
        "created_at": "2021-08-12T01:40:20Z",
        "body": "应该是因为没有传multiplier和trading class导致的。可以根据自己需求自行去接口的generate_ib_contract函数进行修改了"
      },
      {
        "user": "stone3536",
        "created_at": "2021-08-12T01:47:37Z",
        "body": "@noranhe \r\n您好，这个是标的订阅的时候就报的错误的，是否可以考虑在vnpy标准中就增加上？\r\n谢谢！\r\n"
      },
      {
        "user": "stone3536",
        "created_at": "2021-08-12T01:52:43Z",
        "body": "另外请教下，在data_recorder_setting.json 或者 spread_trading_setting.json 中有标的了，启动程序，并不会自动订阅，即使再次打开，也不会订阅上。在主界面输入代码位置并选择对应的交易所、接口后，敲击回车，第一次都要等待大概30秒到2分钟左右的情况的，就是这个标的第一次用，如果不这样操作，就订阅不过来的，试过大概10几次了。这次过后，就正常了，启动程序，就自动订阅了。\r\n不知道这种情况是何原因。\r\nib实盘账号，该标的的交易所数据付费并订阅的了。比如 铜。"
      },
      {
        "user": "vnpy",
        "created_at": "2021-08-15T06:42:51Z",
        "body": "IB的合约信息不提供全量查询功能，必须用户输入完整的合约代码后主动查询才能获取，因此上述问题目前必须手动先订阅后才能录制行情。"
      }
    ]
  },
  {
    "number": 3056,
    "title": "K线图更新时出错：Cannot destroy paint device that is being painted",
    "created_at": "2021-07-07T07:24:51Z",
    "closed_at": "2021-08-12T06:46:34Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3056",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* vn.py版本: 如v2.3.0\r\n\r\n## Issue类型\r\n三选一：Bug/Question\r\n\r\n## 重现步骤\r\n\r\n群主，您好\r\n\r\nk线图更新时出错，错误信息如下：\r\n\r\nQPaintDevice: Cannot destroy paint device that is being painted\r\nQPaintDevice: Cannot destroy paint device that is being painted\r\nPS D:\\00_VNPY_2.x\\trader2.x>\r\n\r\n\r\n恳请百忙中帮看看下这类错误是何原因，谢谢！\r\n\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3056/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-07-07T22:24:47Z",
        "body": "这个问题是否在关闭程序时才出现？"
      },
      {
        "user": "stone3536",
        "created_at": "2021-07-07T23:20:06Z",
        "body": "群主，您好\r\n这个不是在关闭程序时出现，是正在运行的时候，直接所有程序被强退的了，然后cmd窗口出现这个提示的，其他没有提示信息的了。"
      },
      {
        "user": "stone3536",
        "created_at": "2021-08-12T06:46:34Z",
        "body": "尝试在价差窗口打开多个ChartWizardWidget窗口后，在窗口关闭位置最早加了destroy()，应该是这个原因导致窗口destroy时和event事件又还有的时候paint冲突了。\r\n\r\n关闭窗口时出现这个错误是上边的原因导致的，但是很多时候没关闭的时候竟然会因为这个错误直接导致程序全部退出的了，这个就想不通是哪里导致的了。因为原始的ChartWizardWidget是close()的方式而不是destroy()的。\r\n\r\n先将问题关闭了。\r\n\r\n不知道后续 vnpy的 2.5.0版本 是否会做行情记录模块、价差模块、CTA模块、......、K线图时时画图并且同时时时画价差、多个标的内外盘的这种组合测试，感觉为了要这个整个大的系统稳定还是要做下比较复杂的模块组合挂盘测试的，并且隔夜等的挂着。\r\n"
      }
    ]
  },
  {
    "number": 3055,
    "title": "策略引擎的持仓不能只用一个pos来存，期货存在双向交易，没办法同时记录多头仓位和空头仓位",
    "created_at": "2021-07-07T03:26:56Z",
    "closed_at": "2021-07-07T22:23:53Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3055",
    "body": "策略引擎的持仓不能只用一个pos来存，期货存在双向交易，没办法同时记录多头仓位和空头仓位，是否可以优化？\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3055/comments",
    "author": "glysoft",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-07-07T22:23:53Z",
        "body": "对于CTA策略来说，只需要关注自己的逻辑仓位，而无需去跟踪账户底层的持仓（因为还可能有其他策略、以及手动交易持仓），因此单一的pos字段在大部分情况下已经足以。\r\n\r\n如果确实有需求，可以自行在策略中增加long_pos、short_pos这样的变量，然后基于on_trade回报计算更新即可，无需在vn.py系统层做修改。"
      }
    ]
  },
  {
    "number": 3037,
    "title": "异常处理的一些情况",
    "created_at": "2021-06-25T04:56:09Z",
    "closed_at": "2021-08-15T06:47:53Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3037",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.0.5发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\nINFO  [2021-06-25 04:28:22,855][gateway.py:193] 触发异常，状态码：<class 'concurrent.futures._base.TimeoutError'>，信息 ：\r\n在使用aiohttp的时候，有出现了这样的报错，从这些信息上面无法定位得到是在哪里报错的。导致想加一些机制让他更稳健的时候，不知道从哪里下手好。可以提供一下解决这类问题的思路吗？我也不确定是基于rest报错，还是基于websocket出错的。\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3037/comments",
    "author": "KimChow",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-06-26T06:42:08Z",
        "body": "请问具体是使用哪个gateway触发的异常？"
      }
    ]
  },
  {
    "number": 3023,
    "title": "gateio的api接口无法使用",
    "created_at": "2021-06-08T07:30:20Z",
    "closed_at": "2021-06-20T03:19:58Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3023",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.0.5发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\ngateio的api接口因为官方api的修改导致程序接口不能使用，需要修改\r\n\r\n## 实际程序行为\r\ngateio的api接口因为官方api的修改导致程序接口不能使用，需要修改\r\n官方在2019-11-07修改了api接口，原有的\r\n修改内容如下：\r\n以 /futures 为前缀的所有接口前缀统一调整为 /futures/{settle} ，以支持基于多种结算货币的合约操作。\r\n/futures/{settle}/accounts 返回的账户信息里 currency 增加 USDT 的返回\r\n/futures/{setttle}/tickers 返回的交易量信息新增 volume_24h_base, volume_24h_quote 和 volume_24h_settle 字段，取代原有 volume_24h_btc 和 volume_24h_usd 的使用。 后两个字段为了兼容依然保留，但是新的操作不推荐继续使用。\r\n将 /futures 替换成 /futures/usdt 就可以使用 USDT 结算的合约操作, 例如 GET /futures/usdt/accounts 能够获取 USDT 的合约账户，而 GET /futures/btc/accounts 则是用来获取 BTC 的合约账户。\r\n\r\n为了保持兼容, 原有的 GET /futures/xxx 的 API 都会默认为 BTC GET /futures/btc/xxx 。如 GET /futures/accounts 会被服务默认按 GET /futures/btc/accounts 请求来处理\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3023/comments",
    "author": "wwwlyw",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-06-20T03:19:58Z",
        "body": "暂时没有更新计划了，gateio接口的用户太少，后面3.0应该会移除掉它。"
      }
    ]
  },
  {
    "number": 3017,
    "title": "价差交易，直接send_order, 提示'SpreadStrategyEngine' object has no attribute 'offset_converter'",
    "created_at": "2021-06-02T03:12:38Z",
    "closed_at": "2021-08-15T06:47:38Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3017",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: anaconda 3.7\r\n* vn.py版本: vntrader 2.3.0\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n日内交易结束时，使用SpreadStrategyTemplate.cover /sell 方法直接发单，清除持仓。\r\n\r\n## 实际程序行为\r\n报错，提示\r\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\vnpy\\app\\spread_trading\\template.py\", line 721, in cover\r\nreturn self.send_order(vt_symbol, price, volume, Direction.LONG, Offset.CLOSE, lock)\r\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\vnpy\\app\\spread_trading\\template.py\", line 743, in send_order\r\nlock\r\nFile \"C:\\ProgramData\\Anaconda3\\lib\\site-packages\\vnpy\\app\\spread_trading\\engine.py\", line 1086, in send_order\r\nreq_list = self.offset_converter.convert_order_request(\r\nAttributeError: 'SpreadStrategyEngine' object has no attribute 'offset_converter'\r\n\r\n\r\n## 重现步骤\r\n\r\n## 临时解决方法\r\n在SpreadStrategyEngine初始化方法中，加入offset_converter\r\nself.offset_converter: OffsetConverter = OffsetConverter(self.main_engine)\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3017/comments",
    "author": "BillyZhangGuoping",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-08-15T06:47:38Z",
        "body": "已在vnpy_spreadtrading项目中修复"
      }
    ]
  },
  {
    "number": 3008,
    "title": "关闭程序时报错",
    "created_at": "2021-05-27T01:13:27Z",
    "closed_at": "2021-06-20T08:41:00Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/3008",
    "body": "发现一些情况下会导致整个vnpy卡死，比如：\r\n策略发了一个委托，trader拆分成一个平仓，一个开仓。\r\n\r\n报错信息：\r\nException ignored in: <function BaseMonitor.__del__ at 0x000002C47CF73268>\r\nTraceback (most recent call last):\r\n  File \"C:\\vnstudio\\lib\\site-packages\\vnpy\\trader\\ui\\widget.py\", line 213, in __del__\r\n    self.save_setting()\r\n  File \"C:\\vnstudio\\lib\\site-packages\\vnpy\\trader\\ui\\widget.py\", line 357, in save_setting\r\n    settings.setValue(\"column_state\", self.horizontalHeader().saveState())\r\nRuntimeError: wrapped C/C++ object of type LogMonitor has been deleted\r\nException ignored in: <function BaseMonitor.__del__ at 0x000002C47CF73268>\r\nTraceback (most recent call last):\r\n  File \"C:\\vnstudio\\lib\\site-packages\\vnpy\\trader\\ui\\widget.py\", line 213, in __del__\r\n    self.save_setting()\r\n  File \"C:\\vnstudio\\lib\\site-packages\\vnpy\\trader\\ui\\widget.py\", line 357, in save_setting\r\n    settings.setValue(\"column_state\", self.horizontalHeader().saveState())\r\nRuntimeError: wrapped C/C++ object of type StopOrderMonitor has been deleted\r\n\r\n两个委托都成交了，时间记录是同一秒完成的",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/3008/comments",
    "author": "noranhe",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-06-20T08:30:28Z",
        "body": "已在vnpy_ctastrategy项目中修复"
      }
    ]
  },
  {
    "number": 2991,
    "title": "华鑫TORASTOCK GATEWAY 的send_order(..) 没有返回orderid",
    "created_at": "2021-05-17T06:43:32Z",
    "closed_at": "2021-06-20T08:12:43Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2991",
    "body": "## 环境\r\n\r\n* 操作系统: 无关\r\n* Python版本: 无关\r\n* vn.py版本: 无关\r\n\r\n## Issue类型\r\nBug\r\n\r\n## 预期程序行为\r\n应该返回orderid,否则在vt_orderid = self.main_engine.send_order(\r\n                req, contract.gateway_name)以及后续CTA/SPREAD中均无法正常工作\r\n\r\n## 实际程序行为\r\nvt_orderid为空None\r\n\r\n## 重现步骤\r\n\r\n通过algo产生一个algo 订单，即可重现\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2991/comments",
    "author": "kolamanlee",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-06-20T08:12:43Z",
        "body": "已修复"
      },
      {
        "user": "kolamanlee",
        "created_at": "2021-06-21T08:22:04Z",
        "body": "没有看到有对应的代码呀。但是我已经更改好，如果需要，我可以发给你们。"
      }
    ]
  },
  {
    "number": 2981,
    "title": "OKEX v5 永续合约无法下单了",
    "created_at": "2021-05-04T10:01:14Z",
    "closed_at": "2021-05-04T13:52:28Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2981",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: 3.0\r\n* vn.py版本: 2.3.0\r\n\r\n## Issue类型\r\nBug\r\n\r\n## 预期程序行为\r\n下单成功\r\n\r\n## 实际程序行为\r\n\r\n升级到最新的 2.3.0，委托下单购买永续合约的时候，报下面的错，你们代码里面是不是没有写入这个参数\r\n\r\n`委托失败，状态码：51000，信息：Parameter posSide  error`\r\n\r\n## 重现步骤\r\n\r\n合约正常下多/空单，即可发现。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2981/comments",
    "author": "grantchen",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-05-04T13:52:28Z",
        "body": "由于统一账户的规则变动，OKEX的V5接口只能支持以下模式：\r\n\r\n1. 只支持单币种保证金模式\r\n2. 只支持全仓模式\r\n3. 只支持单向持仓模式\r\n\r\n"
      },
      {
        "user": "junyanwu",
        "created_at": "2022-02-19T08:58:22Z",
        "body": "1. 在`vnpy.trader.constant`中，修改常量：\r\n```python\r\nclass Direction(Enum):\r\n    \"\"\"\r\n    Direction of order/trade/position.\r\n    \"\"\"\r\n    LONG = \"long\"\r\n    SHORT = \"short\"\r\n    NET = \"net\"\r\n```\r\n\r\n2. 在`okex_gateway.py`的`send_order`中，`arg`改为如下：\r\n```python\r\nargs: dict = {\r\n            \"instId\": req.symbol,\r\n            \"clOrdId\": orderid,\r\n            \"side\": DIRECTION_VT2OKEX[req.direction],\r\n            \"posSide\": req.direction.value,\r\n            \"ordType\": ORDERTYPE_VT2OKEX[req.type],\r\n            \"px\": str(req.price),\r\n            \"sz\": str(req.volume)\r\n        }\r\n```\r\n\r\n即可合约双向下单"
      },
      {
        "user": "zhuanqizhirou",
        "created_at": "2022-05-03T13:15:20Z",
        "body": "> 1. 在`vnpy.trader.constant`中，修改常量：\r\n> \r\n> ```python\r\n> class Direction(Enum):\r\n>     \"\"\"\r\n>     Direction of order/trade/position.\r\n>     \"\"\"\r\n>     LONG = \"long\"\r\n>     SHORT = \"short\"\r\n>     NET = \"net\"\r\n> ```\r\n> \r\n> 2. 在`okex_gateway.py`的`send_order`中，`arg`改为如下：\r\n> \r\n> ```python\r\n> args: dict = {\r\n>             \"instId\": req.symbol,\r\n>             \"clOrdId\": orderid,\r\n>             \"side\": DIRECTION_VT2OKEX[req.direction],\r\n>             \"posSide\": req.direction.value,\r\n>             \"ordType\": ORDERTYPE_VT2OKEX[req.type],\r\n>             \"px\": str(req.price),\r\n>             \"sz\": str(req.volume)\r\n>         }\r\n> ```\r\n> \r\n> 即可合约双向下单\r\n\r\n但无法正常平仓"
      },
      {
        "user": "junyanwu",
        "created_at": "2022-05-03T13:15:42Z",
        "body": "你的邮件已收到，我会尽快回复~"
      }
    ]
  },
  {
    "number": 2952,
    "title": "对于trader下的engine中的 get_contract 为何一直被调用？是否有办法瘦身字典数据",
    "created_at": "2021-04-16T02:35:07Z",
    "closed_at": "2021-05-01T05:11:32Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2952",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* vn.py版本: 如v2.2.0\r\n\r\n三选一：Enhancement/Question\r\n\r\n\r\n群主，您好\r\n\r\n请教个问题，\r\n\r\n对于 def get_contract(self, vt_symbol: str) -> Optional[ContractData]:\r\n为何一直被持续不断的调用？\r\n我把字典 self.contracts  的 key 和 data 打印了出来，发现基本上都是CTP的，我看了下数据，里边是不存在价格的，但是有size，是因为有size才一直更新吗？\r\n那么对于我用不到那么多标的，可能都用不到10个ctp的标的，对于这个self.contracts如此大并且还一直被调用，是不是非常影响性能？\r\n请教：\r\n1、为何一直在被调用？是因为tick变动了就被调用吗？\r\n2、是否有办法对self.contracts 进行瘦身？  就是只要我订阅的合约的，不要这些全市场的？\r\n\r\n谢谢！\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2952/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "raycool",
        "created_at": "2021-04-17T14:43:03Z",
        "body": "self.contracts 是个字典，对他调用取值是哈希的，时间复杂度O(1)\r\n对性能没影响。"
      },
      {
        "user": "vnpy",
        "created_at": "2021-05-01T05:11:32Z",
        "body": "楼上正解"
      }
    ]
  },
  {
    "number": 2947,
    "title": "请教如何在录制分钟bar的时候同时也录制5分钟、1小时、日线的数据",
    "created_at": "2021-04-13T07:51:31Z",
    "closed_at": "2021-05-01T05:21:13Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2947",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* vn.py版本: 如v2.1.9.x\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 重现步骤\r\n群主，您好\r\n\r\n请教下，在“行情记录”模块，\r\n1、如何做到最小、标准的改动，可以同时录制“5分钟、1小时、日线的数据”的数据？恳请百忙中指点下，谢谢！\r\n\r\n\r\n另外，这个，是不是可以做成可配置的，就是对某个标的，“class Interval(Enum)”中的列出来，勾选，即可录制勾选对应的K线数据或者tick数据，而不是当前行情记录的模式；就是列出标的清单（各个模块加载的可以交易标的都自动加进来），后边勾选哪个分钟bar录制或勾选tick录制？当然，目前的“本地代码”的输入框保留会很好的，方便要输入的时候输入。\r\n个人感觉这种方式更优。\r\n\r\n\r\n2、对于bar的录制，缺少收盘时间最后1根K线，是不是用 bg.generate()主动调用是最好的方式？那么是不是就应该在timer事件中判断事件是接近限定的收盘时间（自定义交易所或者说价差或者说标的的收盘的几个时间）了，调用一次bg.generate()？\r\n搜索了 “.generate(”在dr模块中没有找到任何调用的地方，只在策略中看到了有调用的。\r\n\r\n恳请百忙中指导下，谢谢！\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2947/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-05-01T05:21:13Z",
        "body": "vn.py本身只录制tick和分钟k线数据，其他周期的K线可以在后续通过脚本合成即可，同时策略中也提供BarGenerator合成工具"
      }
    ]
  },
  {
    "number": 2937,
    "title": "vnpy v2.2.0 的IB接口在读取历史数据时候出现 “信息通知，代码：321，内容：Error validating request: -'bT' case - Date formatting selection of 0 rejected“",
    "created_at": "2021-04-06T21:10:37Z",
    "closed_at": "2021-04-30T06:33:06Z",
    "labels": [
      "bug",
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2937",
    "body": "## 环境\r\n\r\n* vn.py版本: v2.2.0\r\n\r\n## Issue类型\r\nBug\r\n\r\n## 问题描述\r\n在query_history的时候，程序会出现\r\nError 321 Error validating request: -'bT' case - Date formatting selection of 0 rejected\r\n\r\n## 重现步骤\r\n随便初始化一个cta strategy。只要strategy里面有load_bar这个函数，就会调用到ib_gateway里面的query_history，然后这个错误就会出现\r\n\r\n## 解决办法\r\n\r\nib_gateway.py -> IbApi 类 -> query_history 函数\r\n将下面的调用\r\n```\r\nself.client.reqHistoricalData(\r\n            self.reqid,\r\n            ib_contract,\r\n            end_str,\r\n            duration,\r\n            bar_size,\r\n            bar_type,\r\n            1,\r\n            0,\r\n            False,\r\n            []\r\n        )\r\n```\r\n\r\n改成这样\r\n```\r\nself.client.reqHistoricalData(\r\n            self.reqid,\r\n            ib_contract,\r\n            end_str,\r\n            duration,\r\n            bar_size,\r\n            bar_type,\r\n            1,\r\n            1,\r\n            False,\r\n            []\r\n        )\r\n```\r\n\r\n不知道为什么，以前这里还是好好的，现在突然变成了0。。。。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2937/comments",
    "author": "HuntFeng",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-04-30T06:33:06Z",
        "body": "已修复，非常感谢"
      }
    ]
  },
  {
    "number": 2933,
    "title": "ubuntu 18.04 安装完成后无法启动",
    "created_at": "2021-04-04T17:23:49Z",
    "closed_at": "2021-04-05T23:59:52Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2933",
    "body": "## 环境\r\n\r\n* 操作系统:  Ubuntu 18.04\r\n* Python版本: 3.7.6\r\n* vn.py版本: 2.2.0\r\n\r\n## Issue类型\r\n三选一：Bug\r\n## 报错信息\r\n安装成功后，执行python run.py，报以下错误，试过N种方式仍失败\r\n```bash\r\n\r\nqt.qpa.xcb: could not connect to display :1.0\r\nqt.qpa.plugin: Could not load the Qt platform plugin \"xcb\" in \"\" even though it was found.\r\nThis application failed to start because no Qt platform plugin could be initialized. Reinstalling the application may fix this problem.\r\n\r\nAvailable platform plugins are: eglfs, linuxfb, minimal, minimalegl, offscreen, vnc, wayland-egl, wayland, wayland-xcomposite-egl, wayland-xcomposite-glx, webgl, xcb.\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2933/comments",
    "author": "huangyingjie",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-04-05T23:59:52Z",
        "body": "这是Qt的报错，请开启Qt的DEBUG环境变量后，再运行启动，即可看到具体的报错输出，应该是少了某个图形驱动库so导致的。\r\n\r\n设置环境变量的方法，请在terminal中运行，再在当前terminal启动VN Trader：\r\n\r\n`set QT_DEBUG_PLUGINS=1`"
      },
      {
        "user": "xfzen",
        "created_at": "2021-07-04T03:02:37Z",
        "body": "Need to install libxcb for Fresh Ubuntu installation,\r\nsudo apt install --reinstall libxcb-xinerama0\r\n"
      }
    ]
  },
  {
    "number": 2917,
    "title": "OKEx报错",
    "created_at": "2021-03-26T14:02:03Z",
    "closed_at": "2021-03-28T04:23:07Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2917",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: 3.7\r\n* vn.py版本: 最新版\r\n\r\n## Issue类型\r\nQuestion\r\n\r\n## 预期程序行为\r\n可以正常连接okex的服务器\r\n\r\n## 实际程序行为\r\n一直报400，接口返回的是\r\n请求失败，状态码：400，信息：{\"error_message\":\"Please change to port v1 when you are using v1 apiKey. If you wish to use port v3, please register a v3 apiKey.\",\"code\":30016,\"error_code\":\"30016\",\"message\":\"Please change to port v1 when you are using v1 apiKey. If you wish to use port v3, please register a v3 apiKey.\"}\r\n问官网客服，说是已经不支持v3的api了，现在已经是v5的，有什么办法可以解决这个问题\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2917/comments",
    "author": "KAMIENDER",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-03-28T04:23:07Z",
        "body": "我们会在下个版本增加对V5的支持，另外你这里的报错是因为在用V1的API KEY，请用重新申请一个V3的KEY再用即可"
      }
    ]
  },
  {
    "number": 2913,
    "title": "登录ib，退出程序报错：OSError: [WinError 10038] 在一个非套接字上尝试了一个操作",
    "created_at": "2021-03-25T03:16:52Z",
    "closed_at": "2021-03-25T14:06:29Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2913",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* vn.py版本: 如v2.1.9.x\r\n\r\n## Issue类型\r\n三选一：Bug/Question\r\n\r\n## 预期程序行为\r\n\r\n群主，您好\r\n\r\n登录ib后，不做任何操作，退出整个程序，报错，错误信息如下：\r\n\r\nunhandled exception in EReader thread\r\nTraceback (most recent call last):\r\n  File \"D:\\00_VNPY_2.x\\Anaconda3\\lib\\site-packages\\ibapi\\reader.py\", line 34, in run\r\n    data = self.conn.recvMsg()\r\n  File \"D:\\00_VNPY_2.x\\Anaconda3\\lib\\site-packages\\ibapi\\connection.py\", line 99, in recvMsg\r\n    buf = self._recvAllMsg()\r\n  File \"D:\\00_VNPY_2.x\\Anaconda3\\lib\\site-packages\\ibapi\\connection.py\", line 119, in _recvAllMsg\r\n    buf = self.socket.recv(4096)\r\nOSError: [WinError 10038] 在一个非套接字上尝试了一个操作。\r\n\r\n------------------\r\n以前没碰到过这类问题的，另外在ibapi中也没头绪，恳请您指导下该如何解决这个问题，谢谢！\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2913/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-03-25T14:06:29Z",
        "body": "这个问题来源于IB的Python API底层，在vn.py中无法处理，因为在退出时才会出现，所以忽略即可"
      }
    ]
  },
  {
    "number": 2906,
    "title": "数据管理，是否可以增加对于具体行的错误数据删除功能；更新数据，报错",
    "created_at": "2021-03-23T01:56:40Z",
    "closed_at": "2021-05-01T05:22:46Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2906",
    "body": "## 环境\r\n\r\n* vn.py版本: 如v2.1.9.x(2021.02.24下载的)\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement\r\n\r\n群主，您好\r\n\r\n对于查看数据位置右侧具体数据行，是否可以增驾对于具体行的错误数据删除功能，这样方便操作，因为确实可能会存在某一行数据不准确的情况，而此时再使用下载、修改数据、再次导入覆盖的方式及其不方便。\r\n恳请考虑增加该方便操作功能，谢谢！\r\n\r\n\r\n另外，在查看模式下，点击“更新数据”，直接报错，错误信息\r\n\r\nTraceback (most recent call last):\r\n  File \"D:\\00_VNPY_2.x\\Anaconda3\\lib\\site-packages\\vnpy\\app\\data_manager\\ui\\widget.py\", line 355, in update_data\r\n    data = self.engine.get_bar_data_available()\r\nAttributeError: 'ManagerEngine' object has no attribute 'get_bar_data_available'",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2906/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-05-01T05:22:46Z",
        "body": "bug已修复，具体数据的修改，可以通过DBeaver之类的数据库工具来实现"
      }
    ]
  },
  {
    "number": 2900,
    "title": "bar显示K线图时报错TypeError: can't compare offset-naive and offset-aware datetimes",
    "created_at": "2021-03-19T09:06:43Z",
    "closed_at": "2021-03-22T13:13:05Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2900",
    "body": "## 环境\r\n* 操作系统: 如Windows 10\r\n* vn.py版本: 如v2.1.9.x\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 实际程序行为\r\n群主，您好\r\n该问题在vnpy社区提了，根据xiaohe要求在这里发个issue的。\r\n\r\n===\r\n 2021年3月19日 下午1:11\r\n群主，您好\r\n\r\n使用K线图表时，报错，错误信息如下：\r\nTraceback (most recent call last):\r\nFile \"D:\\00_VNPY_2.x\\Anaconda3\\lib\\site-packages\\vnpy\\app\\chart_wizard\\ui\\widget.py\", line 188, in process_history_event\r\nchart.update_history(history)\r\nFile \"D:\\00_VNPY_2.x\\Anaconda3\\lib\\site-packages\\vnpy\\chart\\widget.py\", line 158, in update_history\r\nself._manager.update_history(history)\r\nFile \"D:\\00_VNPY_2.x\\Anaconda3\\lib\\site-packages\\vnpy\\chart\\manager.py\", line 30, in update_history\r\nself._bars = dict(sorted(self._bars.items(), key=lambda tp: tp[0]))\r\nTypeError: can't compare offset-naive and offset-aware datetimes\r\n\r\n这个是获取数据库的bar的时候，显示在图表上的时候报错的，获取au2106，au2112以及其他单标旳的时候没问题，但是获取价差.LOCAL显示历史数据bar的时候，就报错的，请问都是从同一个数据表获取数据，都是一样的数据格式，为何这里报错的？请您百忙中指导下，谢谢！\r\n\r\n该如何调整或者修改呢？\r\n\r\n===\r\n 2021年3月19日 下午1:20\r\n群主，您好\r\n经过查找，感觉是价差base.py位置的calculate_price使用的是\r\n        # Update calculate time\r\n        self.datetime = datetime.now()\r\n而接口（ctp）中使用的是：\r\ntimestamp = f\"{self.current_date} {data['UpdateTime']}.{int(data['UpdateMillisec']/100)}\"\r\ndt = datetime.strptime(timestamp, \"%Y%m%d %H:%M:%S.%f\")\r\ndt = CHINA_TZ.localize(dt)\r\n\r\n需要将价差base.py中calculate_price函数中的\r\n        # Update calculate time\r\n        self.datetime = datetime.now()\r\n进行更改，否则在to_tick中是\r\ndatetime=self.datetime,\r\n这样保存到数据库中虽然可以保存，但是读取过来就出错了。\r\n\r\n得看哪种方式调整最优了，感觉需要修改calculate_price里边的。\r\n\r\n\r\n------------------------\r\nxiaohe\r\n2021年3月19日 下午1:45\r\n\r\n应该是一个有时区信息一个没有导致的，方便的话可以去github开个issue, 谢谢\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2900/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "stone3536",
        "created_at": "2021-03-19T09:09:10Z",
        "body": "确定是在spread位置的datetime没有zone导致的，修改了后续存的数据再查询就不报错了，参考的是ib的gateway的实现方式。"
      },
      {
        "user": "vnpy",
        "created_at": "2021-03-22T13:13:05Z",
        "body": "已修复，非常感谢"
      }
    ]
  },
  {
    "number": 2889,
    "title": "是否可以增加 spread_name.LOCAL 价差的K线图显示呢？",
    "created_at": "2021-03-10T02:26:55Z",
    "closed_at": "2021-03-23T08:15:02Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2889",
    "body": "## 环境\r\n* vn.py版本: 如v2.1.x\r\n\r\n## Issue类型\r\n三选一：Enhancement\r\n\r\n群主，您好\r\n\r\n是否可以考虑增加 spread_name.LOCAL 价差的K线图显示呢？\r\n\r\n我通过增加 EVENT_SPREAD_DATA 的功能，实现了价差的分钟线显示在K线图上了，但是希望vnpy从原始功能上就增加上的。\r\n\r\nvnpy的架构设计确实是漂亮，感恩，谢谢！\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2889/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-03-23T08:15:02Z",
        "body": "已添加"
      }
    ]
  },
  {
    "number": 2871,
    "title": "2.x后续版本的增强功能中是否可以增加条件提醒、声音报警、窗口闪烁等提醒功能",
    "created_at": "2021-03-03T01:53:53Z",
    "closed_at": "2021-08-15T06:48:54Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2871",
    "body": "## 环境\r\n\r\n## Issue类型\r\n三选一：Enhancement\r\n\r\n群主，您好\r\n\r\n新的版本增强中，是否可以在cta、algo、spread等模块中增加统一的条件提醒，声音警报、窗口闪烁、发送微信（是否支持发多个人以及发到指定微信群中？）等提醒功能，因为对于行情情况以及策略的信号交易，很多时候是需要条件达到大概特定情况的时候进行提醒，多种提醒功能也是需要的。\r\n\r\n期待中！\r\n\r\n谢谢！",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2871/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-08-15T06:48:54Z",
        "body": "1. 目前只支持邮件这一种提醒模式\r\n2. 发出声音、弹窗闪烁等需求，可以自行在策略代码中调用winsound等模块的功能即可"
      }
    ]
  },
  {
    "number": 2868,
    "title": "跨市场交易的价差的交易时间不同如何保证价差数据准确",
    "created_at": "2021-03-02T06:49:12Z",
    "closed_at": "2021-03-22T12:58:29Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2868",
    "body": "## 环境\r\n* 操作系统: 如Windows 10\r\n* Python版本: 如VNStudio-2.0.6\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n\r\n群主，您好\r\n请教群主个问题，\r\n\r\n对于跨市场的spread，因为有时间差（比如内盘的时间不交易，那么ctp和ib的价差数据就会在内盘不交易时间不准确了），那么这个时候分钟的bar有不需要录入和不需要在K线图上显示的，最优的处理方式该如何处理？\r\n恳请群主指导下，谢谢！\r\n\r\n\r\n我想到的方式，在价差的engine位置，增加timer事件，判断这个价差对应的交易时间，如果不在交易时间了（具体到时分秒，在开始和结束时间，提前几秒结束和延迟几秒开始），设置个“交易标识flag”，不在交易时间设置为false，那么在类class SpreadDataEngine的 def process_tick_event 位置，如果“交易标识flag”是false了，不再调用 self.put_data_event(spread)，到了交易时间，继续调用 self.put_data_event(spread) 的，\r\n\r\n不知道这样的处理方式是不是从架构上最优的？\r\n\r\n另外这样是否可以保证K线图上的bar是准确的（会不会有跨分钟的数据更新错误？）？是否可以保证小时的k线数据保存是正确的？\r\n\r\n恳请百忙中指导下，谢谢！\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2868/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "stone3536",
        "created_at": "2021-03-02T06:53:33Z",
        "body": "2.1.9版本"
      },
      {
        "user": "vnpy",
        "created_at": "2021-03-22T12:58:29Z",
        "body": "技术上这么做没问题，通过定时事件来检查肯定比每个Tick都进行检查效率要来的高。\r\n\r\n我个人更推荐非交易时段由交易员自行停止算法，毕竟价差交易中交易员还是很重要的。"
      }
    ]
  },
  {
    "number": 2864,
    "title": "币安永续-双向持仓",
    "created_at": "2021-03-01T09:18:18Z",
    "closed_at": "2021-03-22T12:51:46Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2864",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.0.5发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n目前币安永续接口默认并且只支持，单项持仓模式交易。这对于多策略-单品种的交易方式极不友好，策略直接会出现干扰。希望可以支持双向持仓模式。\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2864/comments",
    "author": "chenglong-zhao",
    "comments": [
      {
        "user": "matthew77",
        "created_at": "2021-03-01T12:37:03Z",
        "body": "我一直收到“拒单”"
      },
      {
        "user": "vnpy",
        "created_at": "2021-03-22T12:51:46Z",
        "body": "请参考#2854"
      }
    ]
  },
  {
    "number": 2856,
    "title": "火币永续-订单提交中",
    "created_at": "2021-02-25T10:11:54Z",
    "closed_at": "2021-03-22T12:54:38Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2856",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.0.5发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n在正向合约交易中，无论限价/市价单发送，都显示提交中。实际持仓已经变化。\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2856/comments",
    "author": "chenglong-zhao",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-03-22T12:54:38Z",
        "body": "请检查代理配置是否正确，如果错误则会由于Websocket无法连接导致收不到委托的状态变化推送"
      }
    ]
  },
  {
    "number": 2854,
    "title": "币安永续-4061错误",
    "created_at": "2021-02-25T05:21:15Z",
    "closed_at": "2021-03-22T12:50:35Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2854",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: 如VNStudio-2.1.8\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n币安的永续合约接口，在双边持仓模式下，下单会出如下错误：\r\n   **Code -4061 msg:  Order’s position side does not match user’s setting。**\r\n\r\n在设置为单边持仓模式下，可以正常下单。\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2854/comments",
    "author": "chenglong-zhao",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-03-22T12:50:32Z",
        "body": "币安目前支持两个模式：\r\n\r\n1. One-way Mode的全仓模式，或者叫做单边持仓模式，这个是vn.py能支持的（和传统交易所规则一致）\r\n2. Hedge Mode的逐仓模式，或者叫做对冲模式，这个是来自于零售外汇的持仓模式，vn.py无法支持这种\r\n\r\n所以请选择One-way Mode后再使用vn.py即可。"
      }
    ]
  },
  {
    "number": 2851,
    "title": "关于 oms 中持仓数据的更新问题",
    "created_at": "2021-02-23T07:29:57Z",
    "closed_at": "2021-03-22T12:55:49Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2851",
    "body": "有些期货公司柜台的持仓查询返回会有较大的延时，导致获取当前持仓会有不同步的问题，可否考虑使用 on_trade 来更新 oms 中的持仓数据保证 oms 持仓数据不滞后？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2851/comments",
    "author": "Gwill",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-03-22T12:55:49Z",
        "body": "技术上可以，请参考vnpy.trader.converter中的逻辑实现：\r\n\r\n1. 基于委托请求、委托回报、成交回报来实时计算仓位情况\r\n2. 基于持仓查询数据来进行全量同步"
      }
    ]
  },
  {
    "number": 2847,
    "title": "vntrader 2.1.9 参数优化有bug 超过5个以上条件的参数优化会报错而停下来 剩下的python会一直挂起",
    "created_at": "2021-02-20T05:51:08Z",
    "closed_at": "2021-02-20T15:01:57Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2847",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10 内存16g\r\n* 数据库为;mongoDB\r\n* Python版本: 如VNStudio-2.1.9\r\n* vn.py版本: VNStudio-2.1.9集成安装版本\r\n\r\n## Issue类型\r\n三选一：Bug/\r\n\r\n## 预期程序行为\r\n多进程参数优化\r\n\r\n## 实际程序行为\r\n多进程参数优化被中止 出现bug\r\n\r\n## 重现步骤\r\n参数优化时 选择10个以上的参数以上的参数优化\r\n比如 优化____均线周期.  起始 10 步长 1 终止 20,会报错\r\n优化____均线周期.  起始 15 步长 1 终止 20, 则不会报错 会顺利运行\r\n\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\nProcess SpawnPoolWorker-16:\r\nProcess SpawnPoolWorker-18:\r\nProcess SpawnPoolWorker-22:\r\nProcess SpawnPoolWorker-20:\r\nProcess SpawnPoolWorker-19:\r\nProcess SpawnPoolWorker-14:\r\nTraceback (most recent call last):\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\process.py\", line 297, in _bootstrap\r\n    self.run()\r\nProcess SpawnPoolWorker-13:\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\process.py\", line 99, in run\r\n    self._target(*self._args, **self._kwargs)\r\nTraceback (most recent call last):\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\pool.py\", line 110, in worker\r\n    task = get()\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\queues.py\", line 354, in get\r\n    return _ForkingPickler.loads(res)\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\process.py\", line 297, in _bootstrap\r\n    self.run()\r\nProcess SpawnPoolWorker-23:\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_strategy\\__init__.py\", line 9, in <module>\r\n    from .engine import CtaEngine\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\process.py\", line 99, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_strategy\\engine.py\", line 10, in <module>\r\n    from concurrent.futures import ThreadPoolExecutor\r\nTraceback (most recent call last):\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\pool.py\", line 110, in worker\r\n    task = get()\r\n  File \"G:\\vnstudio\\lib\\concurrent\\futures\\__init__.py\", line 8, in <module>\r\n    from concurrent.futures._base import (FIRST_COMPLETED,\r\nProcess SpawnPoolWorker-17:\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\process.py\", line 297, in _bootstrap\r\n    self.run()\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\queues.py\", line 354, in get\r\n    return _ForkingPickler.loads(res)\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\process.py\", line 99, in run\r\n    self._target(*self._args, **self._kwargs)\r\nProcess SpawnPoolWorker-21:\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_strategy\\__init__.py\", line 9, in <module>\r\n    from .engine import CtaEngine\r\nTraceback (most recent call last):\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\pool.py\", line 110, in worker\r\n    task = get()\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_strategy\\engine.py\", line 40, in <module>\r\n    from vnpy.trader.rqdata import rqdata_client\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\process.py\", line 297, in _bootstrap\r\n    self.run()\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\queues.py\", line 354, in get\r\n    return _ForkingPickler.loads(res)\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\trader\\rqdata.py\", line 6, in <module>\r\n    from rqdatac import init as rqdata_init\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\process.py\", line 99, in run\r\n    self._target(*self._args, **self._kwargs)\r\nTraceback (most recent call last):\r\n  File \"<frozen importlib._bootstrap_external>\", line 724, in exec_module\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_strategy\\__init__.py\", line 9, in <module>\r\n    from .engine import CtaEngine\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\__init__.py\", line 21, in <module>\r\n    __go()\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\pool.py\", line 110, in worker\r\n    task = get()\r\nTraceback (most recent call last):\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\process.py\", line 297, in _bootstrap\r\n    self.run()\r\n  File \"<frozen importlib._bootstrap_external>\", line 818, in get_code\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_strategy\\engine.py\", line 40, in <module>\r\nTraceback (most recent call last):\r\nTraceback (most recent call last):\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\__init__.py\", line 18, in __go\r\n    importlib.import_module(module_name)\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\queues.py\", line 354, in get\r\n    return _ForkingPickler.loads(res)\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\process.py\", line 297, in _bootstrap\r\n    self.run()\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\process.py\", line 99, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"<frozen importlib._bootstrap_external>\", line 917, in get_data\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\trader\\rqdata.py\", line 6, in <module>\r\n    from rqdatac import init as rqdata_init\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\process.py\", line 297, in _bootstrap\r\n    self.run()\r\nTraceback (most recent call last):\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\process.py\", line 297, in _bootstrap\r\n    self.run()\r\n  File \"G:\\vnstudio\\lib\\importlib\\__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_strategy\\__init__.py\", line 9, in <module>\r\n    from .engine import CtaEngine\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\process.py\", line 99, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\pool.py\", line 110, in worker\r\n    task = get()\r\nMemoryError\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\__init__.py\", line 21, in <module>\r\n    __go()\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\process.py\", line 99, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\process.py\", line 297, in _bootstrap\r\n    self.run()\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\process.py\", line 99, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_strategy\\engine.py\", line 40, in <module>\r\n    from vnpy.trader.rqdata import rqdata_client\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\pool.py\", line 110, in worker\r\n    task = get()\r\nTraceback (most recent call last):\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\queues.py\", line 354, in get\r\n    return _ForkingPickler.loads(res)\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\__init__.py\", line 18, in __go\r\n    importlib.import_module(module_name)\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\pool.py\", line 110, in worker\r\n    task = get()\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\process.py\", line 99, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\pool.py\", line 110, in worker\r\n    task = get()\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\trader\\rqdata.py\", line 6, in <module>\r\n    from rqdatac import init as rqdata_init\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\queues.py\", line 354, in get\r\n    return _ForkingPickler.loads(res)\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\process.py\", line 297, in _bootstrap\r\n    self.run()\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_strategy\\__init__.py\", line 9, in <module>\r\n    from .engine import CtaEngine\r\n  File \"G:\\vnstudio\\lib\\importlib\\__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\queues.py\", line 354, in get\r\n    return _ForkingPickler.loads(res)\r\nProcess SpawnPoolWorker-15:\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\pool.py\", line 110, in worker\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\queues.py\", line 354, in get\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\__init__.py\", line 21, in <module>\r\n    __go()\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_strategy\\__init__.py\", line 9, in <module>\r\n    from .engine import CtaEngine\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\process.py\", line 99, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_strategy\\engine.py\", line 40, in <module>\r\n    from vnpy.trader.rqdata import rqdata_client\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\services\\financial.py\", line 12, in <module>\r\n    from sqlalchemy import Column\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_strategy\\__init__.py\", line 9, in <module>\r\n    from .engine import CtaEngine\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\queues.py\", line 354, in get\r\n    return _ForkingPickler.loads(res)\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_strategy\\__init__.py\", line 6, in <module>\r\n    from vnpy.trader.utility import BarGenerator, ArrayManager\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\__init__.py\", line 18, in __go\r\n    importlib.import_module(module_name)\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_strategy\\engine.py\", line 40, in <module>\r\n    from vnpy.trader.rqdata import rqdata_client\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\pool.py\", line 110, in worker\r\n    task = get()\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\trader\\rqdata.py\", line 6, in <module>\r\n    from rqdatac import init as rqdata_init\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\__init__.py\", line 10, in <module>\r\n    from .schema import BLANK_SCHEMA  # noqa\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_strategy\\engine.py\", line 40, in <module>\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_strategy\\__init__.py\", line 9, in <module>\r\n    from .engine import CtaEngine\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\trader\\utility.py\", line 14, in <module>\r\n    import talib\r\n  File \"<frozen importlib._bootstrap_external>\", line 724, in exec_module\r\n  File \"G:\\vnstudio\\lib\\importlib\\__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\trader\\rqdata.py\", line 6, in <module>\r\n    from rqdatac import init as rqdata_init\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\queues.py\", line 354, in get\r\n    return _ForkingPickler.loads(res)\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\__init__.py\", line 21, in <module>\r\n    __go()\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\schema.py\", line 12, in <module>\r\n    from .sql.base import SchemaVisitor  # noqa\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\trader\\rqdata.py\", line 6, in <module>\r\n    from rqdatac import init as rqdata_init\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_strategy\\engine.py\", line 40, in <module>\r\n    from vnpy.trader.rqdata import rqdata_client\r\n  File \"G:\\vnstudio\\lib\\site-packages\\talib\\__init__.py\", line 43, in <module>\r\n    from ._ta_lib import (\r\n  File \"<frozen importlib._bootstrap_external>\", line 818, in get_code\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\services\\financial.py\", line 12, in <module>\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\__init__.py\", line 21, in <module>\r\n    __go()\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_strategy\\__init__.py\", line 9, in <module>\r\n    from .engine import CtaEngine\r\nTraceback (most recent call last):\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\__init__.py\", line 18, in __go\r\n    importlib.import_module(module_name)\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\__init__.py\", line 8, in <module>\r\n    from .expression import Alias  # noqa\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\__init__.py\", line 21, in <module>\r\n    __go()\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\trader\\rqdata.py\", line 6, in <module>\r\n    from rqdatac import init as rqdata_init\r\nImportError: DLL load failed: 页面文件太小，无法完成操作。\r\n  File \"<frozen importlib._bootstrap_external>\", line 917, in get_data\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\__init__.py\", line 10, in <module>\r\n    from .schema import BLANK_SCHEMA  # noqa\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\__init__.py\", line 18, in __go\r\n    importlib.import_module(module_name)\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_strategy\\engine.py\", line 40, in <module>\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\process.py\", line 297, in _bootstrap\r\n  File \"G:\\vnstudio\\lib\\importlib\\__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\expression.py\", line 90, in <module>\r\n    from .dml import Delete  # noqa\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\__init__.py\", line 18, in __go\r\n    importlib.import_module(module_name)\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\__init__.py\", line 21, in <module>\r\n    __go()\r\nMemoryError\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\schema.py\", line 12, in <module>\r\n    from .sql.base import SchemaVisitor  # noqa\r\n  File \"G:\\vnstudio\\lib\\importlib\\__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\trader\\rqdata.py\", line 6, in <module>\r\n    from rqdatac import init as rqdata_init\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\process.py\", line 99, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\services\\financial.py\", line 12, in <module>\r\n    from sqlalchemy import Column\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\dml.py\", line 12, in <module>\r\n    from . import util as sql_util\r\n  File \"G:\\vnstudio\\lib\\importlib\\__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\__init__.py\", line 18, in __go\r\n    importlib.import_module(module_name)\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\__init__.py\", line 106, in <module>\r\n    __go(locals())\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\services\\financial.py\", line 12, in <module>\r\n    from sqlalchemy import Column\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\__init__.py\", line 21, in <module>\r\n    __go()\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\pool.py\", line 110, in worker\r\n    task = get()\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\__init__.py\", line 10, in <module>\r\n    from .schema import BLANK_SCHEMA  # noqa\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\util.py\", line 15, in <module>\r\n    from . import operators\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\services\\financial.py\", line 12, in <module>\r\n    from sqlalchemy import Column\r\n  File \"G:\\vnstudio\\lib\\importlib\\__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\__init__.py\", line 103, in __go\r\n    from . import naming  # noqa\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\__init__.py\", line 10, in <module>\r\n    from .schema import BLANK_SCHEMA  # noqa\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\__init__.py\", line 18, in __go\r\n    importlib.import_module(module_name)\r\n  File \"G:\\vnstudio\\lib\\multiprocessing\\queues.py\", line 354, in get\r\n    return _ForkingPickler.loads(res)\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\schema.py\", line 12, in <module>\r\n    from .sql.base import SchemaVisitor  # noqa\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\__init__.py\", line 10, in <module>\r\n    from .schema import BLANK_SCHEMA  # noqa\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _gcd_import\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\naming.py\", line 27, in <module>\r\n    from .. import events  # noqa\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\schema.py\", line 12, in <module>\r\n    from .sql.base import SchemaVisitor  # noqa\r\n  File \"G:\\vnstudio\\lib\\importlib\\__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_strategy\\__init__.py\", line 9, in <module>\r\n    from .engine import CtaEngine\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\__init__.py\", line 8, in <module>\r\n    from .expression import Alias  # noqa\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\schema.py\", line 12, in <module>\r\n    from .sql.base import SchemaVisitor  # noqa\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\__init__.py\", line 8, in <module>\r\n    from .expression import Alias  # noqa\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\services\\financial.py\", line 12, in <module>\r\n    from sqlalchemy import Column\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_strategy\\engine.py\", line 40, in <module>\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\expression.py\", line 90, in <module>\r\n    from .dml import Delete  # noqa\r\n  File \"<frozen importlib._bootstrap>\", line 671, in _load_unlocked\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\__init__.py\", line 8, in <module>\r\n    from .expression import Alias  # noqa\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\expression.py\", line 90, in <module>\r\n    from .dml import Delete  # noqa\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\__init__.py\", line 10, in <module>\r\n    from .schema import BLANK_SCHEMA  # noqa\r\n  File \"G:\\vnstudio\\lib\\site-packages\\vnpy\\trader\\rqdata.py\", line 6, in <module>\r\n    from rqdatac import init as rqdata_init\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\dml.py\", line 12, in <module>\r\n    from . import util as sql_util\r\n  File \"<frozen importlib._bootstrap>\", line 316, in __enter__\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\expression.py\", line 90, in <module>\r\n    from .dml import Delete  # noqa\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\dml.py\", line 12, in <module>\r\n    from . import util as sql_util\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\schema.py\", line 12, in <module>\r\n    from .sql.base import SchemaVisitor  # noqa\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\__init__.py\", line 21, in <module>\r\n    __go()\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\util.py\", line 34, in <module>\r\nMemoryError\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\dml.py\", line 12, in <module>\r\n    from . import util as sql_util\r\n  File \"<frozen importlib._bootstrap_external>\", line 724, in exec_module\r\n  File \"<frozen importlib._bootstrap_external>\", line 724, in exec_module\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\util.py\", line 22, in <module>\r\n    from .ddl import sort_tables  # noqa\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\__init__.py\", line 8, in <module>\r\n    from .expression import Alias  # noqa\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\__init__.py\", line 18, in __go\r\n    importlib.import_module(module_name)\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\util.py\", line 34, in <module>\r\n    from .schema import Column\r\n  File \"<frozen importlib._bootstrap_external>\", line 818, in get_code\r\n  File \"<frozen importlib._bootstrap_external>\", line 818, in get_code\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\ddl.py\", line 17, in <module>\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\expression.py\", line 90, in <module>\r\n    from .dml import Delete  # noqa\r\n  File \"G:\\vnstudio\\lib\\importlib\\__init__.py\", line 127, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"<frozen importlib._bootstrap_external>\", line 917, in get_data\r\n  File \"<frozen importlib._bootstrap_external>\", line 917, in get_data\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\dml.py\", line 12, in <module>\r\n    from . import util as sql_util\r\n  File \"G:\\vnstudio\\lib\\site-packages\\rqdatac\\services\\financial.py\", line 12, in <module>\r\n    from sqlalchemy import Column\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\nMemoryError\r\nMemoryError\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\util.py\", line 34, in <module>\r\n    from .schema import Column\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\__init__.py\", line 10, in <module>\r\n    from .schema import BLANK_SCHEMA  # noqa\r\n  File \"<frozen importlib._bootstrap_external>\", line 724, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 983, in _find_and_load\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\schema.py\", line 12, in <module>\r\n    from .sql.base import SchemaVisitor  # noqa\r\n  File \"<frozen importlib._bootstrap_external>\", line 818, in get_code\r\n  File \"<frozen importlib._bootstrap_external>\", line 724, in exec_module\r\n  File \"<frozen importlib._bootstrap_external>\", line 724, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 967, in _find_and_load_unlocked\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\__init__.py\", line 8, in <module>\r\n    from .expression import Alias  # noqa\r\n  File \"<frozen importlib._bootstrap_external>\", line 917, in get_data\r\n  File \"<frozen importlib._bootstrap_external>\", line 818, in get_code\r\n  File \"<frozen importlib._bootstrap_external>\", line 818, in get_code\r\n  File \"<frozen importlib._bootstrap>\", line 677, in _load_unlocked\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\expression.py\", line 90, in <module>\r\n    from .dml import Delete  # noqa\r\nMemoryError\r\n  File \"<frozen importlib._bootstrap_external>\", line 917, in get_data\r\n  File \"<frozen importlib._bootstrap_external>\", line 917, in get_data\r\n  File \"<frozen importlib._bootstrap_external>\", line 724, in exec_module\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\dml.py\", line 12, in <module>\r\nMemoryError\r\nMemoryError\r\n  File \"<frozen importlib._bootstrap_external>\", line 818, in get_code\r\n  File \"<frozen importlib._bootstrap_external>\", line 917, in get_data\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\util.py\", line 22, in <module>\r\n    from .ddl import sort_tables  # noqa\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\ddl.py\", line 32, in <module>\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\sql\\ddl.py\", line 106, in DDLElement\r\n    \"The :meth:`.DDLElement.execute_at` method is deprecated and will \"\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\util\\deprecations.py\", line 85, in decorate\r\n    header,\r\nMemoryError\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\util\\deprecations.py\", line 256, in _decorate_with_warning\r\n    decorated = warned(func)\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 152, in decorate\r\n  File \"G:\\vnstudio\\lib\\site-packages\\sqlalchemy\\util\\langhelpers.py\", line 162, in _exec_code_in_env\r\n    exec(code, env)\r\nMemoryError\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2847/comments",
    "author": "xiecheng7511",
    "comments": [
      {
        "user": "xiecheng7511",
        "created_at": "2021-02-20T10:08:26Z",
        "body": "使用VNStudio 2.1.2安装的话 多进程参数优化就没有这个问题了.   测试了VNStudio 2.1.5安装的版本一样会出现这个问题 不过这个版本只运行前面 5个python程序 就停止挂起了 也不报错 后面的python优化程序都在挂起 cpu也没动用  "
      },
      {
        "user": "vnpy",
        "created_at": "2021-02-20T15:01:57Z",
        "body": "MemoryError是指内存不足程序挂了，请提高系统硬件配置，或者缩短优化的时间周期吧"
      }
    ]
  },
  {
    "number": 2837,
    "title": "目前是否真的支持max osx ?",
    "created_at": "2021-02-07T20:34:36Z",
    "closed_at": "2021-02-08T01:34:42Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2837",
    "body": "如题 尝试安装几次 总是报错\r\n但安装目录下发现 install mac osx setup 所以尝试安装\r\n是否有人在 mac 上安装成功过 ？ \r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2837/comments",
    "author": "lu-liu-perion",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-02-08T01:34:42Z",
        "body": "请查看社区论坛中的相关文章：www.vnpy.com/forum。\r\n\r\nMac OS并不是我们优先支持的系统，所以安装脚本的更新会有落后。"
      }
    ]
  },
  {
    "number": 2830,
    "title": "查询活动委托请求出错，代码：1032，信息：The number of access exceeded the limit.    ##接口：HUOBIS",
    "created_at": "2021-02-02T13:44:37Z",
    "closed_at": "2021-02-15T06:56:19Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2830",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.0.5发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2830/comments",
    "author": "imjing0921",
    "comments": [
      {
        "user": "xldistance",
        "created_at": "2021-02-03T11:05:20Z",
        "body": "查询活动委托单超限了，可以定时几秒查一次"
      },
      {
        "user": "vnpy",
        "created_at": "2021-02-15T06:56:19Z",
        "body": "已修复"
      }
    ]
  },
  {
    "number": 2816,
    "title": "coinbase的连接一直报Invalid API Key！的错误，可能是passphrase的API接口修改了，需要升级一下。",
    "created_at": "2021-01-19T03:07:21Z",
    "closed_at": "2021-02-16T15:09:14Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2816",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.0.5发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2816/comments",
    "author": "pnfgxw",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-01-20T00:31:08Z",
        "body": "应该是需要升级了，我们后续来安排下"
      },
      {
        "user": "vnpy",
        "created_at": "2021-02-15T03:38:20Z",
        "body": "查了下文档，目前签名规则没有变化，建议检查是否填错了API Key"
      },
      {
        "user": "vnpy",
        "created_at": "2021-02-16T15:09:14Z",
        "body": "测试后确认目前可以正常使用，关闭issue"
      }
    ]
  },
  {
    "number": 2798,
    "title": "币安合约不能下单开空",
    "created_at": "2021-01-05T13:12:28Z",
    "closed_at": "2021-02-15T06:26:14Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2798",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.0.5发行版或者dev branch 20190101（下载日期）\r\n币安合约不能下单开空，一直提示-2022 REDUCE_ONLY_REJECT\r\nReduceOnly Order is rejected.\r\nReduceOnly订单被拒绝\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2798/comments",
    "author": "sisisiss",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2021-01-07T00:15:01Z",
        "body": "请问是否开平指令中，选择了【平仓】？应该选择【开仓】"
      }
    ]
  },
  {
    "number": 2780,
    "title": "咨询在同一台电脑上跑多个账户实现方式",
    "created_at": "2020-12-25T08:54:26Z",
    "closed_at": "2020-12-29T00:27:19Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2780",
    "body": "## 环境\r\n* 操作系统: 如Windows 10\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 实际程序行为\r\n\r\n群主，您好\r\n\r\n这个咨询，发到群里未得到高手们的准确答复，特地向您请教下，\r\n\r\n因为多核的机器并且内存配置也都非常高，那么想利用好这台机器，在这个机器上想开多个vnpy的，怕有冲突，想到的一个方法是：\r\n\r\n1、再我机器的安装vnpy的位置，拷贝一个新的文件夹出来 ssTrdr,在ssTrdr中把所有源代码中的 vnpy.  都替换成 ssTrdr. \r\n2、在我运行的 run 的文件位置，新建一个文件夹，把文件夹中的所有文件中的vnpy. 都替换成ssTrdr\r\n3、同时运行run，是不是就是两个完整的了，其中的所有开平仓以及策略等都不会冲突了，因为是完全的2个实例进程了？\r\n\r\n\r\n写了代码把安装好的路径下的vnpy中的所有文件中的vnpy. 都替换成了 ssTrdr. ，也把run文件单独拷贝了一个文件出来，也都把vnpy.替换成了ssTrdr. 了，但是报错，错误信息\r\nE:\\01_ssTrdr>python run.py\r\nTraceback (most recent call last):\r\n  File \"run.py\", line 16, in <module>\r\n    from ssTrdr.trader.uiMainWindow import MainWindow\r\n  File \"E:\\00_VNPY_192\\Anaconda2\\lib\\site-packages\\vnpy-1.9.2-py2.7.egg\\ssTrdr\\t\r\nrader\\uiMainWindow.py\", line 9, in <module>\r\n\r\n...\r\n\r\n    from ssTrdr.trader.gateway.ibGateway.ibGateway import account_Deposit\r\n  File \"E:\\00_VNPY_192\\Anaconda2\\lib\\site-packages\\vnpy-1.9.2-py2.7.egg\\ssTrdr\\t\r\nrader\\gateway\\ibGateway\\__init__.py\", line 5, in <module>\r\n    from .ibGateway import IbGateway\r\n  File \"E:\\00_VNPY_192\\Anaconda2\\lib\\site-packages\\vnpy-1.9.2-py2.7.egg\\ssTrdr\\t\r\nrader\\gateway\\ibGateway\\ibGateway.py\", line 22, in <module>\r\n    from ssTrdr.api.ib import *\r\n  File \"E:\\00_VNPY_192\\Anaconda2\\lib\\site-packages\\vnpy-1.9.2-py2.7.egg\\ssTrdr\\a\r\npi\\ib\\__init__.py\", line 4, in <module>\r\n    from .vnib import *\r\nImportError: DLL load failed: %1 不是有效的 Win32 应用程序。\r\n\r\n\r\n恳请群主指导下，谢谢！\r\n\r\n是想到的这种方式就不行呢，还是限制死了必须是vnpy的目录呢？\r\n\r\n非常感谢！\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2780/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "lookis",
        "created_at": "2020-12-26T12:36:23Z",
        "body": "不知道你是否一定需要图形界面？如果不一定需要图形界面的话可以直接用类似example/no_ui 的脚本直接运行，然后不同的账号可以写在脚本里面"
      },
      {
        "user": "stone3536",
        "created_at": "2020-12-28T02:31:06Z",
        "body": "交易的机器，需要图形界面的，因为要操作设置对应的开平仓的点位的。（但是这个图形界面只是gui的操作界面的，不是K线图的，K线图的图形界面是行情功能，在单独的行情的机器上的。）"
      },
      {
        "user": "lookis",
        "created_at": "2020-12-28T09:18:14Z",
        "body": "如果需要图形界面的话有一个比较保准的方案是使用虚拟机软件，可选方案有 vmware，virtualbox，还有windows自带的hyper-v。"
      },
      {
        "user": "vnpy",
        "created_at": "2020-12-29T00:27:19Z",
        "body": "今天（2020年12月29日）下午的宏源期货分享活动会有讲解这块的内容，活动报名请加QQ：2476475172"
      }
    ]
  },
  {
    "number": 2770,
    "title": "no_ui脚本异常暂停工作,没有报错log",
    "created_at": "2020-12-19T03:09:18Z",
    "closed_at": "2020-12-21T05:21:22Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2770",
    "body": "## 环境\r\n\r\n* 操作系统: Windows Server 2016 Datacenter\r\n* Python版本: vnstudio-2.1.1(python 3.7.1)\r\n* vn.py版本: v2.1.3.1\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\nno_ui脚本长时间正常运行,直到程序报错异常停止或者手动关闭\r\n\r\n## 实际程序行为\r\n使用的是币安永续合约,cta策略取消订单后异常停止,取消订单从币安app中查看,发现取消成功.取消订单是在on_tick方法中采用论坛中的追单撤单进行的.\r\n2020-12-09 19:12:03 取消订单后停止\r\n2020-12-14 18:48:48 取消订单后停止\r\n2020-12-16 06:43:09 取消订单后停止\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n相关代码:\r\n策略中取消订单\r\ndef on_tick():\r\n      self.write_log(\r\n                            \"cancel_order short\" + \",tick:\" + str(tick.datetime) + \",order:\" + str(order.datetime))\r\n      self.cancel_order(vt_orderid)\r\ncta_engine:\r\ndef cancel_server_order(self, strategy: CtaTemplate, vt_orderid: str):\r\n      req = order.create_cancel_request()\r\n        self.main_engine.cancel_order(req, order.gateway_name)\r\n      # 将取消订单的信息使用peewee保存到sqlite,查看sqlite,发现有2020-12-14 18:48该取消订单的记录.\r\nbinances_gateway:\r\n def on_cancel_order(self, data: dict, request: Request) -> None:\r\n      self.write_log(\" cancel_result  \" + cancel_order_response.status.name)\r\n\r\n2020-12-14 18:48:48 取消订单后停止\r\n这次我打开windows服务器,查看redis中的最新tick时间为2020-12-14 18:48:45.040000+08:06.\r\n看到命令行最新的日志为\r\n2020-12-14 01:11:50,908  INFO: yfii_turtle: 策略启动\r\n2020-12-14 01:11:50,908  INFO: eth_turtle: 策略启动\r\n2020-12-14 01:11:50,908  INFO: CTA策略全部启动\r\n\r\n我把币安的ethusdt单子手动平仓掉,19:11分用鼠标点击命令行窗口,令人震惊的一幕出现了,发现2020-12-14 18:48:48,673  INFO: eth_xxx: cancel_order short,tick:2020-12-14 18:48:48.527000+08:06,order:2020-12-14 18:48:42.386000+08:06\r\nlog出现了,然后程序疯狂的撤单追单(并且追单是有成功的,撤单追单逻辑我修改过)\r\n\r\n为什么19:11时,才打印出18:48的log,怀疑18:48时,EventEngine 接收到queue消息,但是EventEngine  的 self._thread线程却从此之后,没有获得执行权,所以没有执行打印Log,tick处理等操作.一直等到19:11获得执行权了才处理.\r\n\r\n2020-12-16 06:43:09 取消订单后停止 \r\n这次我是2020-12-16 8点左右登录服务器查看,此时用鼠标点击命令行窗口,并没有出现更多日志.\r\n\r\n昨天0点到昨晚6点,我在本地用win10,用no_ui脚本跑币安永续合约测试服,将该策略的on_bar部分每分钟下1未成交单,发现这么久,并没有出现脚本异常停止的现象.\r\n\r\n\r\n2020-12-14 01:11:23,626  INFO: eth_xxx初始化完成\r\n2020-12-14 01:11:23,845  INFO: 行情Websocket API连接刷新\r\n2020-12-14 01:11:50,908  INFO: CTA策略全部初始化\r\n2020-12-14 01:11:50,908  INFO: eth_xxx: 策略启动\r\n2020-12-14 01:11:50,908  INFO: CTA策略全部启动\r\n2020-12-14 18:48:48,673  INFO: eth_xxx: cancel_order short,tick:2020-12-14 18:48:48.527000+08:06,order:2020-12-14 18:48:42.386000+08:06\r\n2020-12-14 19:11:34,690  INFO: eth_xxx:  cancel_result  SUCCESS\r\n2020-12-14 19:11:34,690  INFO: eth_xxx: short:580.99\r\n2020-12-14 19:11:34,690  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000004\r\n2020-12-14 19:11:34,690  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,705  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000004\r\n2020-12-14 19:11:34,705  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,705  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000005\r\n2020-12-14 19:11:34,705  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,705  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000004\r\n2020-12-14 19:11:34,705  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,705  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000006\r\n2020-12-14 19:11:34,705  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,705  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000005\r\n2020-12-14 19:11:34,705  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,705  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000004\r\n2020-12-14 19:11:34,705  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,705  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000007\r\n2020-12-14 19:11:34,705  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,705  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000006\r\n2020-12-14 19:11:34,705  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,705  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000005\r\n2020-12-14 19:11:34,705  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,705  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000004\r\n2020-12-14 19:11:34,705  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,705  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000008\r\n2020-12-14 19:11:34,721  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,768  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000005\r\n2020-12-14 19:11:34,768  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,768  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000007\r\n2020-12-14 19:11:34,784  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,784  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000006\r\n2020-12-14 19:11:34,784  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,784  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000004\r\n2020-12-14 19:11:34,784  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,784  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000008\r\n2020-12-14 19:11:34,784  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,784  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000005\r\n2020-12-14 19:11:34,784  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,784  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000009\r\n2020-12-14 19:11:34,784  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,784  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000007\r\n2020-12-14 19:11:34,784  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,784  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000006\r\n2020-12-14 19:11:34,784  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,784  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000004\r\n2020-12-14 19:11:34,784  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,784  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000008\r\n2020-12-14 19:11:34,784  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,784  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000005\r\n2020-12-14 19:11:34,799  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,799  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000009\r\n2020-12-14 19:11:34,799  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,799  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000007\r\n2020-12-14 19:11:34,799  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,799  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000006\r\n2020-12-14 19:11:34,799  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,799  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000010\r\n2020-12-14 19:11:34,799  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,799  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000008\r\n2020-12-14 19:11:34,799  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,799  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000009\r\n2020-12-14 19:11:34,799  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,799  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000007\r\n2020-12-14 19:11:34,799  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,799  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000006\r\n2020-12-14 19:11:34,799  INFO: eth_xxx:  cancel_result  FAIL\r\n2020-12-14 19:11:34,799  INFO: eth_xxx: 撤单失败，找不到委托BINANCES.328hhn6c-201214011111000011",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2770/comments",
    "author": "JamesLi2013",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-12-21T05:21:22Z",
        "body": "1. 策略运行过程中不应该人工干预\r\n2. 如果要干预应该先停止策略后再操作\r\n3. 论坛上社区分享的代码仅供参考，不属于vn.py本身的代码，请确保自己完全理解运行逻辑后再使用\r\n4. 在cmd中运行程序时，不要点击触发选中光标，会卡住整个程序的运行（直到回车或者点击别处后再恢复），这是Windows系统自身的设计了"
      }
    ]
  },
  {
    "number": 2733,
    "title": "希望VN做出的改进",
    "created_at": "2020-11-12T07:41:08Z",
    "closed_at": "2020-12-08T05:27:38Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2733",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.0.5发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\nEnhancement\r\n## 预期程序行为\r\n1.数据库存储数据能将不同类别数据存储于不同表中，并以合约名为表名\r\n2.模拟盘和实盘加入回测，如计算持仓盈利率曲线，最大回撤曲线，以及当日盈亏\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2733/comments",
    "author": "couldn",
    "comments": [
      {
        "user": "lookis",
        "created_at": "2020-12-08T03:14:01Z",
        "body": "为何要用表来区分合约呢？直接在查询的时候可以加个symbol条件就过滤出来数据了"
      },
      {
        "user": "vnpy",
        "created_at": "2020-12-08T05:27:38Z",
        "body": "楼上正解，数据库本来正确用法就不是每个合约存一张表，而是每种类型的数据存一张表。\r\n\r\n实盘交易不会加入图表功能，因为会显著拖慢程序响应速度，这类需求更推荐用TB/MC等平台。"
      }
    ]
  },
  {
    "number": 2684,
    "title": "请问如何将bybit的反向合约的本地停止单改为交易所停止单，有没有朋友改过？",
    "created_at": "2020-10-11T04:07:16Z",
    "closed_at": "2020-10-12T00:28:06Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2684",
    "body": "\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2684/comments",
    "author": "TrinityWater1991",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-10-11T11:26:36Z",
        "body": "我们回头来看下，理论上在接口层增加对停止单类型的支持就行"
      },
      {
        "user": "TrinityWater1991",
        "created_at": "2020-10-11T12:27:08Z",
        "body": "> 我们回头来看下，理论上在接口层增加对停止单类型的支持就行\r\n\r\n陈老师，我试着改了一下，发现bybit反向合约不支持同时下多头和空头支票的停止单，只能下一个方向的停止单，后下的会被拒单。询问了bybit官方API支持确认，确实如此。通道类策略同时下多头空头停止单是刚需。。。准备放弃bybit。。。"
      },
      {
        "user": "vnpy",
        "created_at": "2020-10-12T00:28:06Z",
        "body": "啊。。。看来是他们底层净仓位撮合机制的问题了，这个确实没办法在vn.py客户端的层面来修改"
      }
    ]
  },
  {
    "number": 2675,
    "title": "使用多进程或遗传算法寻优时的问题",
    "created_at": "2020-09-21T06:01:20Z",
    "closed_at": "2020-09-21T12:37:43Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2675",
    "body": "测试了好几次，多参数寻优后的结果与相同参数的单独回测的结果（sharp等）不同\r\n可能是寻优函数有问题，但也没找出来原因\r\n目前只是看到backtesting文件最下面一行缺少inverse变量。\r\n如方便，也请做下测试",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2675/comments",
    "author": "yhmickey",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-09-21T08:51:09Z",
        "body": "请尝试下用自带策略AtrRsiStrategy进行优化，是否也会出现这样的情况？"
      },
      {
        "user": "yhmickey",
        "created_at": "2020-09-21T12:37:43Z",
        "body": "又换了几个策略，重新测试了一遍，没有问题。\r\n之前出现的问题不知道是怎么出来的。。。"
      }
    ]
  },
  {
    "number": 2673,
    "title": "使用paper_account问题",
    "created_at": "2020-09-20T17:34:17Z",
    "closed_at": "2020-10-20T00:17:06Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2673",
    "body": "连接实盘之后，在CTA策略初始化时，日志显示： 找不到底层接口：PAPER\r\n\r\n请问，这个是正常的吗？\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2673/comments",
    "author": "yhmickey",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-09-21T00:14:44Z",
        "body": "我们来查下，这个应该和历史数据查询有关系...请问用的什么交易接口呢？"
      },
      {
        "user": "yhmickey",
        "created_at": "2020-09-21T00:15:05Z",
        "body": "BITMEX"
      },
      {
        "user": "yhmickey",
        "created_at": "2020-09-21T00:24:21Z",
        "body": "试了下BINANCE初始化时，参数也未能初始化，可能和历史数据有关"
      },
      {
        "user": "yhmickey",
        "created_at": "2020-09-21T01:01:51Z",
        "body": "用了Paper后，ChartWizard也报 找不到底层接口：PAPER ， 无法绘图，BINANCE"
      },
      {
        "user": "vnpy",
        "created_at": "2020-10-20T00:17:06Z",
        "body": "已在DEV分支修复，2.1.7发布后更新下就行"
      }
    ]
  },
  {
    "number": 2662,
    "title": "vnpy2.1.5，直达接口，CME交易所，无法查询到农产品，实盘权限已开通",
    "created_at": "2020-09-09T02:56:04Z",
    "closed_at": "2020-09-17T13:40:38Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2662",
    "body": "vnpy2.1.5，直达接口，CME交易所，无法查询到农产品，实盘权限已开通",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2662/comments",
    "author": "xinli93",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-09-17T13:40:38Z",
        "body": "农产品在CBOT交易所下，已添加支持"
      }
    ]
  },
  {
    "number": 2655,
    "title": "请教vnpy中对对象 做copy.deepcopy(spread) 报错TypeError: can't pickle thread.lock objects",
    "created_at": "2020-09-04T07:41:21Z",
    "closed_at": "2020-09-17T13:19:27Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2655",
    "body": "## 环境\r\n\r\n* vn.py版本: v2.0.5\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 实际程序行为\r\n\r\n群主，您好\r\n\r\n请教个问题，\r\n\r\n做数据分析，就是把 spread 的数据 tick 层一直保存下来做分析，用了创建类 StSpread 的新对象，然后用__dict__的方式把 spread.__dict__ 赋值给了new_spread.__dict__, 此时 new_spread 的id是新的id的了，但是 new_spread 里边的腿的 id 确一直都是一样的呢，如何才能让 new_spread 中的leg的也是新的id呢，不受到spread更新价格时候的影响？\r\n是不能用 copy.deepcopy(spread) 的方式生成新的 new_spread 的，因为 spread是被注册了event的了。\r\n\r\n试过对 new_spread 再次做深度拷贝赋值给一个新的对象，仍旧不行的，报错：TypeError: can't pickle thread.lock objects，\r\n恳请百忙中指导下在vnpy中如何处理这类spread（将多个spread的数据记录到list中，然后需要倒序循环，此时spread中的legs上的数据都是同一个了）和leg的tick层数据深度拷贝并保存问题，谢谢！\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2655/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-09-17T13:19:27Z",
        "body": "1. SpreadData和LegData存在内存中的映射关系，所以应该不适合直接做deepcopy操作\r\n2. 建议自己创建一个字典，然后将SpreadData和LegData中对应字段的数据逐个写进去，保存这个字典即可"
      }
    ]
  },
  {
    "number": 2640,
    "title": "关于咨询no_ui无人值守模式子进程关闭时刻，如何把交易策略的变量variables存入硬盘的咨询",
    "created_at": "2020-08-21T12:21:40Z",
    "closed_at": "2020-08-23T11:28:55Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2640",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 10\r\n* Python版本: python37\r\n* vn.py版本: v2.1.5\r\n\r\n## Issue类型\r\nEnhancement\r\n\r\n## 预期程序行为\r\n\r\n1:使用no_ui无人值守模式，在子进程定时关闭时刻，执行sync_strategy_data()，把交易策略的最新变量veriables存入硬盘。\r\n\r\n## 实际程序行为\r\n\r\n1：在vnpy中只要接口上收到成交数据，策略就会通过on_trade推送函数得到交易结果，CTA引擎就会自动执行sync_strategy_data()，把交易策略的variables中变量存入磁盘文件。\r\n\r\n2：在vnpy中，人工关闭vntrader界面或者点击CTA策略的 “全部停止” 按钮，CTA引擎就会自动执行sync_strategy_data()，把交易策略的variables中变量存入磁盘文件。\r\n\r\n3：但是，在子进程定时关闭时刻，没有执行sync_strategy_data()函数把交易策略的variables中变量存入硬盘，论坛也有很多vnpy的追随者问过这个问题无果。\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2640/comments",
    "author": "rjl02468",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-08-23T11:28:55Z",
        "body": "dev分支的examples/no_ui已经支持该需求"
      }
    ]
  },
  {
    "number": 2637,
    "title": "想请教一下vnpy可以进行网格回测吗？",
    "created_at": "2020-08-20T12:46:00Z",
    "closed_at": "2020-09-01T06:30:08Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2637",
    "body": "想请教一下vnpy可以进行网格回测吗？\r\n可以的话，能给个思路吗",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2637/comments",
    "author": "CryptoQiantang",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-09-01T06:30:08Z",
        "body": "可以基于CtaStrategy模块自行开发网格策略，用于回测。\r\n\r\n网格策略相关的逻辑代码，可以参考vnpy.app.algo_trading.algos.grid_algo中的代码"
      }
    ]
  },
  {
    "number": 2632,
    "title": "仿真看穿测试要求6.3.13版本，而CTPTEST对应6.3.16，请问应如何完成看穿测试？",
    "created_at": "2020-08-14T04:17:22Z",
    "closed_at": "2020-08-15T14:32:57Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2632",
    "body": "Hi @vnpy \r\n\r\n国金期货仿真看穿测试要求6.3.13版本，而现在使用的VNPY 2.1.4 CTPTEST对应6.3.16，请问有何办法完成仿真看穿测试？\r\n恳请赐教，衷心感谢。\r\n\r\n## 环境\r\n* 操作系统: 如Windows 10\r\n* Python版本: 如VNStudio-2.1.4\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2632/comments",
    "author": "forhonourlx",
    "comments": [
      {
        "user": "Gwill",
        "created_at": "2020-08-14T06:26:46Z",
        "body": "直接把对应的 dll 文件替换试试"
      },
      {
        "user": "vnpy",
        "created_at": "2020-08-15T14:32:57Z",
        "body": "可以让国金期货联系我们这边来做下对接测试。"
      },
      {
        "user": "forhonourlx",
        "created_at": "2020-08-16T14:19:49Z",
        "body": "@vnpy @Gwill \r\n请问下：除了`gateway\\ctptest\\`下`thostmduserapi_se.dll`和`thostmduserapi_se.dll`替换成6.3.13版本，32位？\r\n`vnctpmd.pyd`和`vnctptd.pyd`是否需要调整？\r\n\r\n最后vnpy团队，请问应该如何联系你们？联系方式可否私信？感谢。"
      },
      {
        "user": "Gwill",
        "created_at": "2020-08-17T01:46:58Z",
        "body": "pyd 不需要动，直接换 dll ，试一下，有的版本可以"
      },
      {
        "user": "forhonourlx",
        "created_at": "2020-08-17T05:32:50Z",
        "body": "使用VNSTUDIO 2.0.8的CTPTEST 6.3.13依然连接仿真失败。\r\n然后直接使用VNSTUDIO 2.1.5的CTP(非CTP TEST)可以连接仿真。"
      }
    ]
  },
  {
    "number": 2624,
    "title": "安装时WMI模块报错",
    "created_at": "2020-08-10T11:56:14Z",
    "closed_at": "2020-08-10T13:43:34Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2624",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 16.04\r\n* Python版本: Python3.7，基于Anaconda\r\n* vn.py版本: 2.1.4\r\n\r\n## Issue类型\r\nQuestion\r\n\r\n## 预期程序行为\r\n运行 `bash install.sh` 安装成功\r\n\r\n## 实际程序行为\r\n在安装wmi模块时，报错，显示找不到 pywin32 模块。\r\n\r\n## 注释\r\n我尝试了Anaconda和Virtuualenv来安装python package，都遇到了相同的问题，请问如何在linux系统中解决这个问题\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2624/comments",
    "author": "CACppuccino",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-08-10T13:43:34Z",
        "body": "请删除requirements.txt里的wmi，再执行安装即可。\r\n\r\n目前vn.py支持的接口数量太多，不同接口存在许多不同的依赖，后续3.0会做拆分了"
      }
    ]
  },
  {
    "number": 2608,
    "title": "火币交易所接口BUG问题",
    "created_at": "2020-07-31T06:53:44Z",
    "closed_at": "2020-08-02T14:39:39Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2608",
    "body": "请官方帮助修复接口 BUG\r\n火币交易所，报错代码如下，win版死机，报python 停止工作\r\n\r\nqt.network.ssl: QSslSocket: cannot call unresolved function SSL_set_psk_use_session_callback\r\n[2020-07-31T14:03:01.177387]: Unhandled WebSocket Error:<class 'OSError'>\r\nLastSentText:\r\n{\"pong\": 1596175381119}\r\nLastReceivedText:\r\nb'\\x1f\\x8b\\x08\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\xabV*\\xc8\\xccKW\\xb224\\xb543475\\xb6044\\xb4\\xac\\x05\\x00\\x8d\\x9e\\xe2\\x99\\x16\\x00\\x00\\x00'\r\nException trace:\r\nTraceback (most recent call last):\r\n  File \"C:\\vnstudio\\lib\\site-packages\\vnpy\\api\\websocket\\websocket_client.py\", line 249, in _run_ping\r\n    self._ping()\r\n  File \"C:\\vnstudio\\lib\\site-packages\\vnpy\\api\\websocket\\websocket_client.py\", line 266, in _ping\r\n    ws.send(\"ping\", websocket.ABNF.OPCODE_PING)\r\n  File \"C:\\vnstudio\\lib\\site-packages\\websocket\\_core.py\", line 253, in send\r\n    return self.send_frame(frame)\r\n  File \"C:\\vnstudio\\lib\\site-packages\\websocket\\_core.py\", line 279, in send_frame\r\n    l = self._send(data)\r\n  File \"C:\\vnstudio\\lib\\site-packages\\websocket\\_core.py\", line 449, in _send\r\n    return send(self.sock, data)\r\n  File \"C:\\vnstudio\\lib\\site-packages\\websocket\\_socket.py\", line 157, in send\r\n    return _send()\r\n  File \"C:\\vnstudio\\lib\\site-packages\\websocket\\_socket.py\", line 139, in _send\r\n    return sock.send(data)\r\n  File \"C:\\vnstudio\\lib\\ssl.py\", line 984, in send\r\n    return self._sslobj.write(data)\r\nOSError: [WinError 10014] 系统检测到在一个调用中尝试使用指针参数时的无效指针地址。\r\nTraceback (most recent call last):\r\n  File \"C:\\vnstudio\\lib\\site-packages\\vnpy\\api\\websocket\\websocket_client.py\", line 249, in _run_ping\r\n    self._ping()\r\n  File \"C:\\vnstudio\\lib\\site-packages\\vnpy\\api\\websocket\\websocket_client.py\", line 266, in _ping\r\n    ws.send(\"ping\", websocket.ABNF.OPCODE_PING)\r\n  File \"C:\\vnstudio\\lib\\site-packages\\websocket\\_core.py\", line 253, in send\r\n    return self.send_frame(frame)\r\n  File \"C:\\vnstudio\\lib\\site-packages\\websocket\\_core.py\", line 279, in send_frame\r\n    l = self._send(data)\r\n  File \"C:\\vnstudio\\lib\\site-packages\\websocket\\_core.py\", line 449, in _send\r\n    return send(self.sock, data)\r\n  File \"C:\\vnstudio\\lib\\site-packages\\websocket\\_socket.py\", line 157, in send\r\n    return _send()\r\n  File \"C:\\vnstudio\\lib\\site-packages\\websocket\\_socket.py\", line 139, in _send\r\n    return sock.send(data)\r\n  File \"C:\\vnstudio\\lib\\ssl.py\", line 984, in send\r\n    return self._sslobj.write(data)\r\nOSError: [WinError 10014] 系统检测到在一个调用中尝试使用指针参数时的无效指针地址。\r\nqt.network.ssl: QSslSocket: cannot call unresolved function SSL_set_psk_use_session_callback\r\n\r\n火币 交易所报错\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2608/comments",
    "author": "yxl560",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-08-02T14:39:39Z",
        "body": "我们这边无法重现，搜了下网上资料，可能是因为Python的ssl库和Windows的兼容性问题。\r\n\r\n建议这么处理：\r\n1. 检查你的代理是否稳定，最可能出现的原因就是代理闪断了\r\n2. 运行命令`netsh winsock reset`"
      }
    ]
  },
  {
    "number": 2607,
    "title": "vnpy1.9.2版本可以连接 IB Gateway 而不是tws吗",
    "created_at": "2020-07-30T06:58:05Z",
    "closed_at": "2020-07-31T01:39:37Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2607",
    "body": "## 环境\r\n\r\n* 操作系统: 如windows server 2012\r\n* vn.py版本: vnpy1.9.2\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 实际程序行为\r\n群主，您好\r\n\r\n咨询下，vnpy1.9.2版本，可以连接 IB Gateway 而不通过tws连接吗？\r\n\r\n如果可以连接，对 IB Gateway 的版本有要求吗？具体那几个版本可以，哪个版本是最推荐的版本？\r\n是否可以用带有FIX CTCI（ib的一种专线连接模式，相当于国内专线连接到ib香港或者ib美国的服务器端） 的IB Gateway 连接？\r\n\r\n如果可以连接，是否有这方面的简要说明？在vnpy.com上搜索了ibGateway，没找到任何对应的资料的。\r\n如果可以连接，在windows server 2012上是可以的，对吗？\r\n\r\n是否还有其他的特殊要求或者注意事项，恳请您指点下，谢谢！\r\n\r\n谢谢！\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2607/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-07-31T01:39:37Z",
        "body": "1. 可以对接，具体版本要求不确定了，因为1.9.2太老了\r\n2. 不支持FIX协议，而是走的IB API\r\n3. 老版本已经停止维护，2012应该可以运行，但不推荐使用了"
      }
    ]
  },
  {
    "number": 2599,
    "title": "gateway调用close之后未关闭注册事件的bug",
    "created_at": "2020-07-24T07:43:44Z",
    "closed_at": "2020-08-04T07:36:44Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2599",
    "body": "存在部分gateway中注册了事件（EVENT_TIMER）后，在关闭gateway(close方法)时未取消事件，导致事件在gateway关闭后仍运行。特别是1s一次的rest请求，在关闭了gateway之后会积攒在queue中，等重新连接gateway时，会迸发大量请求，导致api请求上限触发，封ip\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2599/comments",
    "author": "chuwt",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-08-04T07:36:44Z",
        "body": "close函数，是由MainEngine在程序退出时调用，用来断开接口连接的，正常情景随后就会立即关闭进程，所以不会出现上述问题"
      }
    ]
  },
  {
    "number": 2598,
    "title": "round_to 的 target 可能為 0",
    "created_at": "2020-07-24T05:09:16Z",
    "closed_at": "2020-08-02T14:45:13Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2598",
    "body": "## 环境\r\n\r\nUbuntu 18.04\r\n\r\nPython 3.7.7 (default, May  7 2020, 21:25:33) \r\n[GCC 7.3.0] :: Anaconda, Inc. on linux\r\n\r\nvb.py a43a8a553ededcd69c5674bd18653dec24194cde\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n```\r\ndef round_to(value: float, target: float) -> float:\r\n    \"\"\"\r\n    Round price to price tick value.\r\n    \"\"\"\r\n    value = Decimal(str(value))\r\n    target = Decimal(str(target))\r\n    rounded = float(int(round(value / target)) * target)\r\n    return rounded\r\n```\r\n\r\ntarget可能為0狀況 會報錯\r\n\r\ndecimal.DivisionByZero: [<class 'decimal.DivisionByZero'>]\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2598/comments",
    "author": "fire-in-the-hold",
    "comments": [
      {
        "user": "fire-in-the-hold",
        "created_at": "2020-07-24T05:11:35Z",
        "body": "對 py 比較不熟 目前我暫時解法\r\n```\r\ndef round_to(value: float, target: float) -> float:\r\n    \"\"\"\r\n    Round price to price tick value.\r\n    \"\"\"\r\n    value = Decimal(str(value))\r\n    target = Decimal(str(target))\r\n    if target == Decimal('0'):\r\n        rounded = float(0)\r\n    else:\r\n        rounded = float(int(round(value / target)) * target)\r\n    return rounded\r\n```"
      },
      {
        "user": "vnpy",
        "created_at": "2020-08-02T14:45:13Z",
        "body": "round_to的第二个参数必须非0，否则报错是正常行为。"
      }
    ]
  },
  {
    "number": 2594,
    "title": "bybit交易所正向合约，使用一个没有交易过的账号登入时报错",
    "created_at": "2020-07-22T06:24:33Z",
    "closed_at": "2020-08-04T07:42:27Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2594",
    "body": "C:\\Users\\Administrator>python -m vnstation\r\nqt.network.ssl: QSslSocket: cannot resolve SSL_CTX_set_ciphersuites\r\nqt.network.ssl: QSslSocket: cannot resolve SSL_set_psk_use_session_callback\r\nqt.network.ssl: QSslSocket: cannot call unresolved function SSL_set_psk_use_session_callback\r\nqt.network.ssl: QSslSocket: cannot call unresolved function SSL_set_psk_use_session_callback\r\nqt.network.ssl: QSslSocket: cannot call unresolved function SSL_set_psk_use_session_callback\r\nqt.network.ssl: QSslSocket: cannot call unresolved function SSL_set_psk_use_session_callback\r\n[2020-07-22T14:07:06.373781]: Unhandled RestClient Error:<class 'KeyError'>\r\nrequest:request : GET /private/linear/order/list error because 200:\r\nheaders: {'Referer': 'vn.py'}\r\nparams: {'symbol': 'BTCUSDT', 'limit': 50, 'page': 1, 'api_key': 'u2EhilD0Pr1Zauikm5', 'recv_window': 30000, 'timestamp': 1595398021311, 'sign': 'f93a76ea051f53e086eb7df5e5ffb0849964b4f8c26a29953ce10f3f34322624'}\r\ndata: None\r\nresponse:{\"ret_code\":0,\"ret_msg\":\"OK\",\"ext_code\":\"\",\"ext_info\":\"\",\"result\":{\"current_page\":1,\"data\":[{\"order_id\":\"8b2359be-7aac-4d9e-b524-a9ac2ca5e1e8\",\"user_id\":804109,\"symbol\":\"BTCUSDT\",\"side\":\"Buy\",\"order_type\":\"Limit\",\"price\":9342,\"qty\":0.001,\"time_in_force\":\"GoodTillCancel\",\"order_status\":\"Cancelled\",\"last_exec_price\":0,\"cum_exec_qty\":0,\"cum_exec_value\":0,\"cum_exec_fee\":0,\"reduce_only\":false,\"order_link_id\":\"\",\"created_time\":\"2020-07-22T05:56:19Z\",\"updated_time\":\"2020-07-22T05:56:28Z\"}]},\"time_now\":\"1595398026.355384\",\"rate_limit_status\":599,\"rate_limit_reset_ms\":1595398026350,\"rate_limit\":600}\r\n\r\nException trace:\r\nTraceback (most recent call last):\r\n  File \"C:\\vnstudio\\lib\\site-packages\\vnpy\\api\\rest\\rest_client.py\", line 272, in _process_request\r\n    request.callback(json_body, request)\r\n  File \"C:\\vnstudio\\lib\\site-packages\\vnpy\\gateway\\bybit\\bybit_gateway.py\", line 503, in on_query_order\r\n    if result[\"current_page\"] != result[\"last_page\"]:\r\nKeyError: 'last_page'",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2594/comments",
    "author": "yxl560",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-08-04T07:42:27Z",
        "body": "已修复"
      }
    ]
  },
  {
    "number": 2593,
    "title": "bybit 正向合约接口问题",
    "created_at": "2020-07-22T02:52:26Z",
    "closed_at": "2020-08-04T07:30:38Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2593",
    "body": "bybit的正向合约(USDT)接口变更了吗\r\n\r\n以下接口使用正向合约失败了\r\n- 获取历史kline\r\n- 下单\r\n- 撤单",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2593/comments",
    "author": "chuwt",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-08-04T07:30:38Z",
        "body": "已在DEV分支升级"
      }
    ]
  },
  {
    "number": 2592,
    "title": "bybit 正反合约选择问题",
    "created_at": "2020-07-21T07:56:19Z",
    "closed_at": "2020-08-04T07:34:35Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2592",
    "body": "由于bybit交易对获取是公共接口，所以即使选择正向合约，依然可以选择反向合约的交易对，能不能做个判断\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2592/comments",
    "author": "chuwt",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-08-04T07:34:35Z",
        "body": "已添加"
      }
    ]
  },
  {
    "number": 2562,
    "title": "关于vntrader界面版中添加自动重启软件、自动登录API、自动初始化与实盘功能的建议",
    "created_at": "2020-07-03T12:36:37Z",
    "closed_at": "2020-08-01T16:07:29Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2562",
    "body": "环境\r\n\r\n操作系统: Windows 10\r\nPython版本: VNStudio-2.0.6\r\nvn.py版本: v2.0.5发行版\r\n\r\nIssue类型\r\n三选一：Enhancement\r\n\r\n1：vntrader界面版中是否可以添加自动重启软件，重启软件自动登录需要的API接口，登录API后，自动初始化，然后自动实盘运行的功能\r\n\r\n2：no_ui模式对新人不是非常的友好\r\n\r\n预期程序行为\r\n\r\nvntrader界面版中是否可以添加自动重启软件，重启软件自动登录需要的API接口，登录API后，自动初始化，然后实盘运行的功能\r\n\r\n实际程序行为\r\n\r\n需要手工一步一步去操作\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2562/comments",
    "author": "rjl02468",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-08-01T16:07:29Z",
        "body": "使用类似no_ui的脚本操作即可，修改点：\r\n1. 需要启动图形界面\r\n2. 需要有另一个线程，来执行各项初始化调用"
      }
    ]
  },
  {
    "number": 2558,
    "title": "如何连接币安接口",
    "created_at": "2020-06-29T15:41:11Z",
    "closed_at": "2020-06-30T01:07:10Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2558",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Python版本: 如VNStudio-2.1.4\r\n\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n如何连接币安接口",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2558/comments",
    "author": "Angel0726",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-06-30T01:07:10Z",
        "body": "请查看【vnpy-community】微信公众号的入门教程。"
      }
    ]
  },
  {
    "number": 2542,
    "title": "实盘上期平单变开单",
    "created_at": "2020-06-18T07:36:02Z",
    "closed_at": "2020-06-19T01:13:51Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2542",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: 如3.7\r\n* vn.py版本: 如v2.1.2\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n平仓就是平仓，不是自动开仓\r\n\r\n## 实际程序行为\r\n发送平今，变成了开仓\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2542/comments",
    "author": "TIANRENK",
    "comments": [
      {
        "user": "TIANRENK",
        "created_at": "2020-06-18T08:02:29Z",
        "body": "我用cta_engine.offset_converter.holdings来查询当前仓位，显示已经持了多仓，我发送的SHORT，平今指令，但是发现实际是在开空单。"
      },
      {
        "user": "vnpy",
        "created_at": "2020-06-19T01:13:51Z",
        "body": "1. CTA策略模块对策略只提供了平仓指令，没有提供平今、平昨的选项\r\n2. 对于上期所合约，开平自动转换只会转换平仓到对应的平今、平昨\r\n2. buy/sell/short/cover四个函数的最后一个可选参数lock，控制是否要用锁仓模式，在有反向持仓时会将平转开，请检查是否这里调用错了"
      }
    ]
  },
  {
    "number": 2530,
    "title": "HUOBI testnet ",
    "created_at": "2020-06-07T17:34:50Z",
    "closed_at": "2020-06-12T07:39:12Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2530",
    "body": "请问vnpy的huobi gateway是不是还没有推出testnet功能\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2530/comments",
    "author": "john012343210",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-06-08T02:27:22Z",
        "body": "目前没有，我们来查下加上吧"
      },
      {
        "user": "vnpy",
        "created_at": "2020-06-12T07:39:12Z",
        "body": "火币的TESTNET目前只提供现货，没有期货和永续。\r\n\r\n且其Websocket接口使用的还是老的V1版本，而vn.py中已经升级到了新的V2版本，两者无法兼容。\r\n\r\n因此无法对接其testnet环境了。"
      }
    ]
  },
  {
    "number": 2526,
    "title": "vnstudio安装时导致wind的wdf.dll 频繁注册",
    "created_at": "2020-06-02T02:00:15Z",
    "closed_at": "2020-06-03T01:34:39Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2526",
    "body": "\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2526/comments",
    "author": "wangxu666",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-06-02T02:47:34Z",
        "body": "请提供具体问题截图？"
      },
      {
        "user": "wangxu666",
        "created_at": "2020-06-02T07:29:39Z",
        "body": "已经解决，wind卸载，先装vnpy，再装wind就好了\r\n"
      }
    ]
  },
  {
    "number": 2525,
    "title": "canel_all函数调用更新延迟",
    "created_at": "2020-06-02T00:58:21Z",
    "closed_at": "2020-06-03T01:35:35Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2525",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: 3.7\r\n* vn.py版本: 如v2.1.2\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n调用cancel_all函数后，一定时间get_all_active_orders更新。\r\n\r\n## 实际程序行为\r\n在当前on_tick中，我发出撤单委托之后，无论过多久get_all_active_orders都没有更新，必须等到下个on_tick才会更新， 这个问题有办法解决吗\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2525/comments",
    "author": "TIANRENK",
    "comments": [
      {
        "user": "TIANRENK",
        "created_at": "2020-06-02T01:18:24Z",
        "body": "不仅仅调用cancel_all函数，包括send_order等发送委托，过了一定时间后，即使该委托已经成功了，但是在当前on_tick内，查询get_all_active_orders或者查询当前仓位都没有更新，是否是因为线程阻塞和调度的问题"
      },
      {
        "user": "xldistance",
        "created_at": "2020-06-02T03:01:57Z",
        "body": "cancel_all不适合放到on_tick里面，on_tick里面需要更精细的控制"
      },
      {
        "user": "vnpy",
        "created_at": "2020-06-03T01:35:35Z",
        "body": "cancel_all只是给on_bar这种比较低频交易模式下的一个便捷功能，请不要在on_tick下使用"
      }
    ]
  },
  {
    "number": 2522,
    "title": "融航接口无法返回账户信息",
    "created_at": "2020-05-29T15:07:55Z",
    "closed_at": "2020-06-12T07:41:29Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2522",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: py 3.7\r\n* vn.py版本: dev branch 20200526（下载日期）\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n登陆融航CTP后自动获取账户信息\r\n\r\n## 实际程序行为\r\n登录后无法获取账户信息，第一次发单结束后，账户信息才能获取到\r\nreqQryTradingAccount这个函数是能够执行到的，但是就是收不到回调函数，ctp的日志能收到回报，所以问题应该是接口函数没有把回报传递给python造成的\r\n\r\n\r\n## 重现步骤\r\n首次登陆融航模拟柜台，无法显示账户信息\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2522/comments",
    "author": "longmumin",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-06-12T07:41:29Z",
        "body": "发单结束后能正常收到账户信息，说明封装代码逻辑部分没有错误，这段代码里没有判断逻辑，建议联系下期货公司的运维团队检查是否服务端配置有问题。"
      }
    ]
  },
  {
    "number": 2495,
    "title": "cannot import name 'MdsApiClientEnvT' from 'vnpy.api.oes.vnoes' (unknown location)",
    "created_at": "2020-05-14T10:53:47Z",
    "closed_at": "2020-05-14T15:15:03Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2495",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.0.5发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\nQuestion\r\n\r\n## 预期程序行为\r\n能正常连接oes接口\r\n\r\n## 实际程序行为\r\nfrom vnpy.api.oes.vnoes import MdsApiClientEnvT, MdsApi_DestoryAll\r\n\r\n## 重现步骤\r\n无法连接\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2495/comments",
    "author": "welcomeyou2019",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-05-14T15:15:03Z",
        "body": "请检查使用的系统，OES接口只支持Windows"
      }
    ]
  },
  {
    "number": 2488,
    "title": "scripty_trader 发送委托全是已撤销",
    "created_at": "2020-05-08T07:34:10Z",
    "closed_at": "2020-05-09T01:19:41Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2488",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.0.5发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n正常发送委托\r\n## 实际程序行为\r\n上期，simnow账号模拟交易，发送委托全部都是已撤销\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2488/comments",
    "author": "TIANRENK",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-05-09T01:19:41Z",
        "body": "上期所只支持平今、平昨，不支持标准的平仓指令，请用send_order下单，然后指定offset即可"
      }
    ]
  },
  {
    "number": 2459,
    "title": "BarGenerator.update_bar",
    "created_at": "2020-04-27T12:49:01Z",
    "closed_at": "2020-04-30T04:52:20Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2459",
    "body": "BarGenerator.update_bar的下述代码，只会在分钟为x的时候生成x minutes bar，每小时生成一个，而不是每x分钟生成一个x minutes bar：\r\n        if self.interval == Interval.MINUTE:\r\n            if not (bar.datetime.minute + 1) % self.window:\r\n                finished = True\r\n\r\n修改为：\r\n        if self.interval == Interval.MINUTE:\r\n            if not (bar.datetime.minute - self.window_bar.datetime + 1) % self.window:\r\n                finished = True\r\n\r\n还不严谨，假设了x分钟bar的x小于60，常规来说应该OK",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2459/comments",
    "author": "walkingsnail",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-04-30T04:52:20Z",
        "body": "5分钟K线正常就应该是5分钟才生成一次，而不是每分钟都在生成。"
      }
    ]
  },
  {
    "number": 2441,
    "title": "no ui 运行后提示订阅失败",
    "created_at": "2020-04-20T03:13:33Z",
    "closed_at": "2020-04-21T02:11:49Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2441",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: conda 3.7 64\r\n* vn.py版本: vnpy 2.1.1\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\nD:\\res\\vnpy-2.1.1\\examples\\no_ui>python run.py\r\n启动CTA策略守护父进程\r\n启动子进程\r\n子进程启动成功\r\n2020-04-20 11:07:55,094  INFO: 主引擎创建成功\r\n1\r\n2020-04-20 11:07:55,105  INFO: 注册日志事件监听\r\n2020-04-20 11:07:55,106  INFO: 连接CTP接口\r\n2020-04-20 11:08:05,137  INFO: CTA策略引擎初始化成功\r\n2020-04-20 11:08:05,138  INFO: 创建DM_RB2010策略\r\n2020-04-20 11:08:05,177  INFO: CTA策略初始化完成\r\n2020-04-20 11:08:15,181  INFO: DM_RB2010开始执行初始化\r\n2020-04-20 11:08:15,182  INFO: DM_RB2010: 策略初始化\r\n2020-04-20 11:08:15,186  INFO: DM_RB2010: 行情订阅失败，找不到合约RB2010.SHFE\r\n2020-04-20 11:08:15,187  INFO: DM_RB2010初始化完成\r\n2020-04-20 11:08:25,181  INFO: CTA策略全部初始化\r\n2020-04-20 11:08:25,182  INFO: DM_RB2010: 策略启动\r\n2020-04-20 11:08:25,182  INFO: CTA策略全部启动\r\n\r\n提示找不到RB2010.SHFE ",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2441/comments",
    "author": "jxhuliqun138",
    "comments": [
      {
        "user": "xldistance",
        "created_at": "2020-04-21T01:10:38Z",
        "body": "rb2010.SHFE，可以去vnpy GUI里面的合约查询查看合约名称"
      },
      {
        "user": "vnpy",
        "created_at": "2020-04-21T02:11:49Z",
        "body": "没有连上服务器、登录成功、查询合约成功的输出日志，请检查是否正确配置了接口账号、密码、服务器地址"
      }
    ]
  },
  {
    "number": 2415,
    "title": "郑商所tick覆盖问题",
    "created_at": "2020-04-08T06:19:36Z",
    "closed_at": "2020-04-30T04:26:15Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2415",
    "body": "## Issue类型\r\nQuestion\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n由于郑商所的tick没有毫秒时间戳，导致录制行情的时候会相互覆盖，每秒只有一个tick会被保存，\r\n后期可否针对郑商所做额外的判断加上一个随机毫秒时间以便于入数据库时不会出问题\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2415/comments",
    "author": "zly111",
    "comments": [
      {
        "user": "xldistance",
        "created_at": "2020-04-10T08:01:31Z",
        "body": "官方交易所都没给毫秒，就不要自己加了吧......"
      },
      {
        "user": "zly111",
        "created_at": "2020-04-10T08:05:27Z",
        "body": "> 官方交易所都没给毫秒，就不要自己加了吧......\r\n\r\n是的，可能会导致数据污染，但是入库的时候该怎么办呢，就变成一秒一跳了"
      },
      {
        "user": "vnpy",
        "created_at": "2020-04-30T04:26:15Z",
        "body": "技术上可以通过缓存时间戳到字典中，然后每次有重复时间戳就加500毫秒后缀的方式来实现。\r\n\r\n考虑到交易所自身就没提供的情况，因此vn.py也不在底层接口中做修改了。"
      }
    ]
  },
  {
    "number": 2414,
    "title": "vnpy是否考虑增加跟单模块",
    "created_at": "2020-04-07T05:09:31Z",
    "closed_at": "2020-04-13T14:53:40Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2414",
    "body": "## 环境\r\n\r\n* vn.py版本: 如v2.1.x发行版\r\n\r\n## Issue类型\r\n三选一：Enhancement\r\n\r\n## 预期程序行为\r\n\r\n群主，您好\r\n\r\nvnpy2.x.x 是否考虑增加跟单模块？\r\n\r\n相当于登录当前交易账号（子账号，跟单账号）后，再登录一个跟单的主账号（被跟单账号，主账号在该系统中不能进行交易，可能需要一个账户属性的字段用来做限制。这里比较麻烦的地儿就是知道了主账号密码的了，而不是主账号的“只读密码”），主账号的成交等交易信息显示在一个单独的窗口中，主账号开平仓对应的接口的标的交易了，那么登录账号（子账号）就对应的开平仓，开仓手数等根据资金比例或者设定的固定比例进行处理？\r\n\r\n个人觉得这个需求还是很多交易者需要的，或者说不是特别懂交易或者做不好交易的人反倒是更需要的，因为会跟着交易做的好的人做。\r\n\r\n感谢！\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2414/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "stone3536",
        "created_at": "2020-04-07T05:10:07Z",
        "body": "印象中好像以前论坛中有人提过这个需求的。"
      },
      {
        "user": "stone3536",
        "created_at": "2020-04-07T05:23:41Z",
        "body": "密码这个问题应该可以绕过去解决的，就是做个密码的加密文件，放到对应的文件夹下边即可，那么跟单客户端只需要输入被跟单的账号（主账号）即可，该账号自动找对应的密码文件验证并登录并且这个模式登录的账号是不能做交易的。\r\n\r\n有个输入主账号、密码的特定窗口，生成这个特定的密码文件即可。"
      },
      {
        "user": "vnpy",
        "created_at": "2020-04-13T14:53:40Z",
        "body": "评估了下这块功能不属于大多数用户需要的功能，开源版本就不打算开发了，如果需要的话可以找我们定制"
      }
    ]
  },
  {
    "number": 2413,
    "title": "交易开、平仓记录查询；交易盈亏统计分析",
    "created_at": "2020-04-07T04:57:28Z",
    "closed_at": "2020-08-04T09:03:39Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2413",
    "body": "## 环境\r\n\r\n\r\n* vn.py版本: 如v2.1.x发行版\r\n\r\n## Issue类型\r\n三选一：Enhancement\r\n\r\n## 预期程序行为\r\n群主，您好\r\n\r\n关于 CTA、algo、价差、期权等全部的策略开仓、平仓：\r\n1、查询（开仓、平仓记录最好能够显示在打开对应标的的1分钟K线图上，复盘方便）；\r\n2、持仓（当前市价）、平仓后盈利的计算统计分析；\r\n\r\n这里两个功能，从实际实际交易的角度确实是需要的，并且相对成熟的软件也都是有对应的这两个查询、分析功能的，是否可以把这部分功能纳入到2.xx版本的开发进程中，恳请您考虑下，谢谢！\r\n\r\n\r\n（我提这个需求是基于实际情况提出的，其实这是很多用了 vnpy 用户的两个痛点的，真的！   我目前用的在 vnpy1.9.2 版本上已经都实现上边功能的了，但是觉得 vnpy 2.x.x 应该有这2个功能才更合适、完美的，并且这个功能是成熟的交易软件都应该具备的，也是目前使用 vnpy2.x.x 大量爱好者们的痛点的。）\r\n另外我认为对于交易成功后的记录保存到数据库可能会影响性能这个应该是非常非常小的，因为毕竟不是频繁交易，再就是用eventType方式应该没啥影响的吧，另外是否可以做成开关功能，相当于可以保存开平仓记录也可以不保存，那么这样实际使用起来也方便的。对于python3.9后续版本升级也肯定会比较方便。\r\n\r\n\r\n有这方面需要的朋友们帮忙顶下吧，谢谢！\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2413/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-08-04T09:03:39Z",
        "body": "以上两点更多属于定制化的需求，截止目前没有其他用户留言，所以不考虑在vn.py里提供了。"
      },
      {
        "user": "waytrylee",
        "created_at": "2020-09-18T08:51:41Z",
        "body": "确实需要"
      },
      {
        "user": "rjl02468",
        "created_at": "2020-09-18T11:24:40Z",
        "body": "平时逛vnpy论坛的时候，发现很多vnpy的粉丝提过这个需求的，github 中也多次有人提及，望老大重视一下，希望vnpy越来越强壮，开创中国量化交易平台一个辉煌的未来，加油！"
      },
      {
        "user": "ouryoustone",
        "created_at": "2020-09-20T00:30:39Z",
        "body": "这部分功能确实是需要的，对于使用一个量化交易系统来说如果不能有基于策略的交易记录查询、盈利统计分析，那么就是半盲的了，策略多了单子多了光一个个的数岂不是得掐人中了！\r\n期望vnpy越来越好能够成为量化交易中的完美软件。"
      },
      {
        "user": "stone3536",
        "created_at": "2020-10-14T08:39:47Z",
        "body": "群主，您好\r\n因为这个需求对于一个交易软件或者系统来说确实是最基本的硬需求，另外其实很多用vnpy的铁粉们都需要的（或者您可以再咨询确认下），我就再把这个问题打开了，请您再次考虑下是否可以添加上这个功能。感谢！\r\n\r\n找了下，真的是没找到怎么reopen这个问题的，以前记得还有这个功能的呢。\r\n"
      }
    ]
  },
  {
    "number": 2409,
    "title": "打开vnstation，或者是命令行输入python run.py，都会出现如下信息：This Windows version (6.3.9600) does not support the required bluetooth API.",
    "created_at": "2020-04-05T08:26:29Z",
    "closed_at": "2020-04-13T14:40:00Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2409",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 8版本（6.3.9600）\r\n* Python版本: 3.7\r\n* vn.py版本: 2.1.1\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2409/comments",
    "author": "moyuweiqing",
    "comments": [
      {
        "user": "moyuweiqing",
        "created_at": "2020-04-07T08:39:12Z",
        "body": "目前已经解决，可能是win8系统下不支持吧，使用win10系统可以正常运行"
      },
      {
        "user": "vnpy",
        "created_at": "2020-04-13T14:40:00Z",
        "body": "到文件夹中 vnstudio中\\Lib\\site-packages\\PyQt5\\Qt\\bin\\\r\n\r\n将Qt5Bluetooth.dll 重命名为 Qt5Bluetooth.dll1"
      }
    ]
  },
  {
    "number": 2400,
    "title": "XTP连接成功，过一段时间报错并断开（交易服务器连接断开, 原因10210006）",
    "created_at": "2020-03-31T02:51:26Z",
    "closed_at": "2020-04-01T02:29:56Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2400",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 10\r\n* Python版本: ANACONDA 3.7\r\n* vn.py版本: v2.0.9\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n测试账号正常连接服务器\r\n\r\n## 实际程序行为\r\n使用XTP提供的测试账号和环境，显示连接交易服务器和测试服务器成功，但过一段时间后系统报错如下：\r\n**报错：**\r\nTypeError: login(): incompatible function arguments. The following argument types are supported:\r\n    1. (self: vnpy.api.xtp.vnxtpmd.MdApi, arg0: str, arg1: int, arg2: str, arg3: str, arg4: int) -> int\r\n\r\nInvoked with: <vnpy.gateway.xtp.xtp_gateway.XtpMdApi object at 0x0000019597B26830>\r\n\r\nAt:\r\n  C:\\TraderWu\\vnpywj\\vnpy\\gateway\\xtp\\xtp_gateway.py(234): onDisconnected\r\n\r\n**并打印日志**\r\n2020-03-31 10:13:06,142  INFO: 交易服务器连接断开, 原因10210006\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2400/comments",
    "author": "unlimitnight0",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-04-01T02:29:56Z",
        "body": "2.1.2将会发布重构的XTP API，最近有些新的升级了"
      }
    ]
  },
  {
    "number": 2367,
    "title": "ModuleNotFoundError: No module named 'vnpy.api.uft.vnuftmd'",
    "created_at": "2020-02-29T15:46:58Z",
    "closed_at": "2020-03-01T00:11:44Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2367",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 18.04.4\r\n* Python版本: python3.7.4\r\n* vn.py版本: v2.1.0\r\n\r\n## Issue类型\r\nBug\r\n\r\n## 预期程序行为\r\n\r\n能正常运行examples/vn_trader/run.py文件\r\n\r\n## 实际程序行为\r\n首次运行run.py报错如下：\r\nTraceback (most recent call last):\r\n  File \"/home/salt/下载/vnpy-2.1.0/examples/vn_trader/run.py\", line 36, in <module>\r\n    from vnpy.gateway.uft import UftGateway\r\n  File \"/home/salt/miniconda3/lib/python3.7/site-packages/vnpy/gateway/uft/__init__.py\", line 1, in <module>\r\n    from .uft_gateway import UftGateway\r\n  File \"/home/salt/miniconda3/lib/python3.7/site-packages/vnpy/gateway/uft/uft_gateway.py\", line 8, in <module>\r\n    from vnpy.api.uft import (\r\n  File \"/home/salt/miniconda3/lib/python3.7/site-packages/vnpy/api/uft/__init__.py\", line 3, in <module>\r\n    from .vnuftmd import MdApi\r\nModuleNotFoundError: No module named 'vnpy.api.uft.vnuftmd'\r\n\r\n该如何解决？\r\n另外ubuntu环境下安装曲折，我是将install.sh 里的代码一步一步输的。\r\n\r\n## 重现步骤\r\n无\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2367/comments",
    "author": "ForyoungYu",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-03-01T00:11:44Z",
        "body": "移除run.py中的uft_gateway加载即可，UBUNTU只支持CTP/IB/FUTU/数字货币类的接口"
      }
    ]
  },
  {
    "number": 2362,
    "title": "OKEX交易所loadbar 在交易所数据有限的情况，只能装载部分数据，造成实盘交易迟迟不能启动",
    "created_at": "2020-02-25T11:32:28Z",
    "closed_at": "2020-03-10T13:21:38Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2362",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n\r\n* vn.py版本: v2.10\r\n\r\n## Issue类型\r\n三选一：Enhancement\r\n\r\n## 预期程序行为\r\n初始化之后，下载的数据足够多，可以马上交易\r\n\r\n## 实际程序行为\r\n初始化之后，下载的数据不足，不能马上交易\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n在OKEX交易的时候，修改query_history函数，改为从onetoken下载历史数据",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2362/comments",
    "author": "wangdalei001",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-03-10T13:21:38Z",
        "body": "已有解决方案：\r\n1. 请使用DataRecorder录制数据后\r\n2. 在策略中调用load_bar函数时，传入可选参数use_database=True，强制使用本地数据库的数据"
      },
      {
        "user": "wangdalei001",
        "created_at": "2020-03-16T02:52:02Z",
        "body": "收到，谢谢陈总！"
      }
    ]
  },
  {
    "number": 2361,
    "title": "zha==",
    "created_at": "2020-02-24T02:22:36Z",
    "closed_at": "2020-03-02T14:12:12Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2361",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 18.04\r\n* Python版本: 3.7.4（gcc:7.3.0）\r\n* vn.py版本: v2.1.0\r\n## Issue类型\r\nQuestion\r\n\r\n## 预期程序行为\r\n正常运行\r\n## 实际程序行为\r\n报错\r\n\r\n## 重现步骤\r\npython run.py \r\n(base) root@iZj6c8yz09wrirsl1dqqo5Z:~/vnpy-2.1.0/examples/vn_trader# python run.py \r\nTraceback (most recent call last):\r\n  File \"run.py\", line 36, in <module>\r\n    from vnpy.gateway.uft import UftGateway\r\n  File \"/root/miniconda3/lib/python3.7/site-packages/vnpy/gateway/uft/__init__.py\", line 1, in <module>\r\n    from .uft_gateway import UftGateway\r\n  File \"/root/miniconda3/lib/python3.7/site-packages/vnpy/gateway/uft/uft_gateway.py\", line 8, in <module>\r\n    from vnpy.api.uft import (\r\n  File \"/root/miniconda3/lib/python3.7/site-packages/vnpy/api/uft/__init__.py\", line 3, in <module>\r\n    from .vnuftmd import MdApi\r\nModuleNotFoundError: No module named 'vnpy.api.uft.vnuftmd'\r\n\r\n用阿里云的ubuntu18.0.4按照官方按照完成，运行run.sh的时候说找不到vnpy.api.uft.vnuftmd，咋办呀？\r\n另外，海外的windows版本服务器好贵，用ubuntu安装调试了好久，问题好多。请教下ubuntu下有没有啥简单的方法安装使用呀？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2361/comments",
    "author": "hanfeng1982",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-03-02T14:12:12Z",
        "body": "UFT接口不支持Ubuntu系统，请在run.py中移除即可"
      }
    ]
  },
  {
    "number": 2349,
    "title": "安装完毕后，运行脚本run.py报错",
    "created_at": "2020-02-17T08:22:25Z",
    "closed_at": "2020-02-18T01:43:03Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2349",
    "body": "## 环境\r\n\r\n* 操作系统: manjaro\r\n* Python版本: python3 3.8.1\r\n* vn.py版本: v2.1 2020/2/17\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n安装完成后，执行 `python run.py` . 期待启动VS station\r\n\r\n## 实际程序行为\r\n> Traceback (most recent call last):\r\n  File \"run_git.py\", line 3, in <module>\r\n    from vnpy.trader.ui import MainWindow, create_qapp\r\n  File \"/home/scolo/.local/lib/python3.8/site-packages/vnpy/trader/ui/__init__.py\", line 11, in <module>\r\n    from .mainwindow import MainWindow\r\n  File \"/home/scolo/.local/lib/python3.8/site-packages/vnpy/trader/ui/mainwindow.py\", line 28, in <module>\r\n    from .editor import CodeEditor\r\n  File \"/home/scolo/.local/lib/python3.8/site-packages/vnpy/trader/ui/editor.py\", line 4, in <module>\r\n    from PyQt5 import QtWidgets, Qsci, QtGui\r\nImportError: /usr/lib/python3.8/site-packages/PyQt5/Qsci.abi3.so: undefined symbol: __cxa_throw_bad_array_new_length, version Qt_5\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2349/comments",
    "author": "scolo111",
    "comments": [
      {
        "user": "scolo111",
        "created_at": "2020-02-17T12:17:14Z",
        "body": "用conda 把pyhton 降为 3.7 后，执行 install.sh . 出现了其他错误\r\n\r\n>......  \r\nbuild/temp.linux-x86_64-3.7/talib/_ta_lib.o: file not recognized: file format not recognized\r\n  collect2: error: ld returned 1 exit status\r\n  error: command 'gcc' failed with exit status 1\r\n   ERROR: Failed building wheel for ta-lib\r\n\r\n>...... \r\nERROR: Command errored out with exit status 1: /home/scolo/Software/miniconda3/bin/python -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/var/tmp/pip-install-wcqmqz02/ta-lib/setup.py'\"'\"'; __file__='\"'\"'/var/tmp/pip-install-wcqmqz02/ta-lib/setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record /var/tmp/pip-record-mykpam6u/install-record.txt --single-version-externally-managed --compile --install-headers /home/scolo/Software/miniconda3/include/python3.7m/ta-lib Check the logs for full command output.\r\n\r\n>......   \r\n build/temp.linux-x86_64-3.7/psycopg/psycopgmodule.o: file not recognized: file format not recognized\r\n  collect2: error: ld returned 1 exit status\r\n  error: command 'gcc' failed with exit status 1\r\n  ERROR: Failed building wheel for psycopg2\r\n\r\n"
      },
      {
        "user": "vnpy",
        "created_at": "2020-02-18T01:43:03Z",
        "body": "1. 请使用Python 3.7\r\n2. Linux需要先安装gcc\r\n3. install.sh是为Ubuntu系统编写的，其他系统请自行编写相关脚本，主要是安装命令\r\n4. 目前官方只支持Ubuntu了"
      }
    ]
  },
  {
    "number": 2324,
    "title": "进行实盘策略运行的时候，无法设定数据推送的周期",
    "created_at": "2020-02-04T18:28:37Z",
    "closed_at": "2020-03-10T14:23:14Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2324",
    "body": "## 环境\r\n\r\nWindows 10或者Ubuntu 18.04\r\nVNStudio-2.0.9\r\nlast master\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n进行实盘策略运行的时候，无法设定运行的周期。\r\n哪怕程序已经强制设定1小时周期，但还是按分钟推送数据Bar\r\n‘’‘\r\n  self.bg = BarGenerator(self.on_bar,window=1,on_window_bar=self.on_bar,interval=Interval.HOUR)\r\n  self.am = ArrayManager(150)\r\n’‘’\r\n\r\n## 实际程序行为\r\n正常应该推送过来按小时数据排布的数据\r\n如果按分钟的话，要自己合成，需要1个小时后才能正常进入工作状态\r\n\r\n希望能增加周期设定\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2324/comments",
    "author": "taoyonggang",
    "comments": [
      {
        "user": "taoyonggang",
        "created_at": "2020-02-05T02:52:40Z",
        "body": "    def __init__(self, cta_engine, strategy_name, vt_symbol, setting):\r\n\r\n        super().__init__(cta_engine, strategy_name, vt_symbol, setting)\r\n\r\n        self.bg5min = BarGenerator(self.on_bar,\r\n                    window=5, \r\n                    on_window_bar=self.on_5min_bar, \r\n                    interval=Interval.MINUTE)\r\n\r\n        self.bg1H = BarGenerator(self.on_bar,\r\n                    window=1,\r\n                    on_window_bar=self.on_1H_bar,\r\n                    interval=Interval.HOUR)\r\n\r\n\r\n        self.am5min = ArrayManager(150)\r\n        self.am1H = ArrayManager(150)\r\n\r\ndef on_tick(self, tick: TickData):\r\n\r\n        self.bg1H.update_tick(tick)\r\n        self.bg5min.update_tick(tick)\r\n\r\n  def on_bar(self,bar:BarData):\r\n\r\n        self.bg1H.update_bar(bar)#将1小时K线合成1小时K线\r\n        self.bg5min.update_bar(bar)#将1分钟K线合成5分钟K线\r\n\r\n\r\n  def on_1H_bar(self, bar: BarData):\r\n\r\n\r\n        print(\"Run begin hour...\")\r\n\r\n        self.am1H.update_bar(bar)\r\n        if not self.am1H.inited:\r\n            return  \r\n\r\n        am1H = self.am1H\r\n        \r\n        print(\"Run in hour...\")\r\n\r\n\r\n这种策略，小时数据永远没法准备完全，历史数据也下载了。回测是好的，实盘就是跑不起来。"
      },
      {
        "user": "taoyonggang",
        "created_at": "2020-02-05T02:55:59Z",
        "body": "接入的okex永续合约数据"
      },
      {
        "user": "taoyonggang",
        "created_at": "2020-02-05T02:59:14Z",
        "body": "不管怎样，实盘和回测最好能一致，本来回测时候用小时周期，运行好好的，结果一到实盘，强制变成1分钟基础周期，刚开始还不知道。知道后，想强制用小时数据，也用不起来，实盘谁会用1分钟跑啊，说明很少有人用。可能考虑换个量化平台了"
      },
      {
        "user": "taoyonggang",
        "created_at": "2020-02-05T03:12:59Z",
        "body": "Traceback (most recent call last):\r\n  File \"D:\\vnstudio\\lib\\threading.py\", line 917, in _bootstrap_inner\r\n    self.run()\r\n  File \"D:\\vnstudio\\lib\\threading.py\", line 865, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"D:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_backtester\\engine.py\", line 172, in run_backtesting\r\n    engine.run_backtesting()\r\n  File \"D:\\vnstudio\\lib\\site-packages\\vnpy\\app\\cta_strategy\\backtesting.py\", line 276, in run_backtesting\r\n    if self.datetime and data.datetime.day != self.datetime.day:\r\nAttributeError: 'str' object has no attribute 'day'\r\n\r\n分钟数据复盘的时候会出现这个错误"
      },
      {
        "user": "taoyonggang",
        "created_at": "2020-02-05T04:39:43Z",
        "body": "下面程序，用demo改的，实盘也不工作，回测用分钟会报错的\r\n\r\nfrom vnpy.app.cta_strategy import (\r\n    CtaTemplate,\r\n    StopOrder,\r\n    TickData,\r\n    BarData,\r\n    TradeData,\r\n    OrderData,\r\n    BarGenerator,\r\n    ArrayManager,\r\n)\r\n\r\n\r\nclass MultiTimeframeStrategy2(CtaTemplate):\r\n    \"\"\"\"\"\"\r\n    author = \"用Python的交易员\"\r\n\r\n    rsi_signal = 20\r\n    rsi_window = 14\r\n    fast_window = 5\r\n    slow_window = 20\r\n    fixed_size = 1\r\n\r\n    rsi_value = 0\r\n    rsi_long = 0\r\n    rsi_short = 0\r\n    fast_ma = 0\r\n    slow_ma = 0\r\n    ma_trend = 0\r\n\r\n    parameters = [\"rsi_signal\", \"rsi_window\",\r\n                  \"fast_window\", \"slow_window\",\r\n                  \"fixed_size\"]\r\n\r\n    variables = [\"rsi_value\", \"rsi_long\", \"rsi_short\",\r\n                 \"fast_ma\", \"slow_ma\", \"ma_trend\"]\r\n\r\n    def __init__(self, cta_engine, strategy_name, vt_symbol, setting):\r\n        \"\"\"\"\"\"\r\n        super().__init__(cta_engine, strategy_name, vt_symbol, setting)\r\n\r\n        self.rsi_long = 50 + self.rsi_signal\r\n        self.rsi_short = 50 - self.rsi_signal\r\n\r\n        self.bg5 = BarGenerator(self.on_bar, 5, self.on_5min_bar)\r\n        self.am5 = ArrayManager()\r\n\r\n        self.bg30 = BarGenerator(self.on_bar, 30, self.on_30min_bar)\r\n        self.am30 = ArrayManager()\r\n\r\n    def on_init(self):\r\n        \"\"\"\r\n        Callback when strategy is inited.\r\n        \"\"\"\r\n        self.write_log(\"策略初始化\")\r\n        self.load_bar(10)\r\n\r\n    def on_start(self):\r\n        \"\"\"\r\n        Callback when strategy is started.\r\n        \"\"\"\r\n        self.write_log(\"策略启动\")\r\n\r\n    def on_stop(self):\r\n        \"\"\"\r\n        Callback when strategy is stopped.\r\n        \"\"\"\r\n        self.write_log(\"策略停止\")\r\n\r\n    def on_tick(self, tick: TickData):\r\n        \"\"\"\r\n        Callback of new tick data update.\r\n        \"\"\"\r\n        self.bg5.update_tick(tick)\r\n\r\n    def on_bar(self, bar: BarData):\r\n        \"\"\"\r\n        Callback of new bar data update.\r\n        \"\"\"\r\n        self.bg5.update_bar(bar)\r\n        self.bg30.update_bar(bar)\r\n\r\n    def on_5min_bar(self, bar: BarData):\r\n        \"\"\"\"\"\"\r\n        self.cancel_all()\r\n\r\n        print(\"5 min begin\")\r\n\r\n        self.am5.update_bar(bar)\r\n        if not self.am5.inited:\r\n            return\r\n        \r\n        print(\"5 min ready\")\r\n\r\n        if not self.ma_trend:\r\n            return\r\n\r\n        self.rsi_value = self.am5.rsi(self.rsi_window)\r\n\r\n        if self.pos == 0:\r\n            if self.ma_trend > 0 and self.rsi_value >= self.rsi_long:\r\n                self.buy(bar.close_price + 5, self.fixed_size)\r\n            elif self.ma_trend < 0 and self.rsi_value <= self.rsi_short:\r\n                self.short(bar.close_price - 5, self.fixed_size)\r\n\r\n        elif self.pos > 0:\r\n            if self.ma_trend < 0 or self.rsi_value < 50:\r\n                self.sell(bar.close_price - 5, abs(self.pos))\r\n\r\n        elif self.pos < 0:\r\n            if self.ma_trend > 0 or self.rsi_value > 50:\r\n                self.cover(bar.close_price + 5, abs(self.pos))\r\n\r\n        self.put_event()\r\n\r\n    def on_30min_bar(self, bar: BarData):\r\n        \"\"\"\"\"\"\r\n        print(\"30 min begin\")\r\n        self.am30.update_bar(bar)\r\n        if not self.am30.inited:\r\n            return\r\n\r\n        print(\"30 min ready\")\r\n\r\n        self.fast_ma = self.am30.sma(self.fast_window)\r\n        self.slow_ma = self.am30.sma(self.slow_window)\r\n\r\n        if self.fast_ma > self.slow_ma:\r\n            self.ma_trend = 1\r\n        else:\r\n            self.ma_trend = -1\r\n\r\n    def on_order(self, order: OrderData):\r\n        \"\"\"\r\n        Callback of new order data update.\r\n        \"\"\"\r\n        pass\r\n\r\n    def on_trade(self, trade: TradeData):\r\n        \"\"\"\r\n        Callback of new trade data update.\r\n        \"\"\"\r\n        self.put_event()\r\n\r\n    def on_stop_order(self, stop_order: StopOrder):\r\n        \"\"\"\r\n        Callback of stop order update.\r\n        \"\"\"\r\n        pass\r\n"
      },
      {
        "user": "vnpy",
        "created_at": "2020-03-10T14:23:14Z",
        "body": "实盘交易初始化时调用on_init函数，此时可以调用load_bar加载最近N天的数据用于初始化，如果最近N天数据不存在则策略需要等待实盘收到的推送TICK满足条件后，才能触发交易。\r\n\r\n这块基础的使用方法请在微信公众号vnpy-community的入门教程中学习。"
      }
    ]
  },
  {
    "number": 2313,
    "title": "开盘开仓错误",
    "created_at": "2020-01-23T01:52:44Z",
    "closed_at": "2020-01-29T03:00:36Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2313",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 7\r\nVNStudio-2.0.8\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n正常开仓预期1手\r\n\r\n## 实际程序行为\r\n如果一开盘达到买卖点就会不正常，重复开仓。实际上持仓2手\r\n日志上传不了，日志已经发给你了\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2313/comments",
    "author": "playfund",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-01-29T03:00:36Z",
        "body": "不好意思，找不到你提供的日志信息了...\r\n\r\n建议这么处理：\r\n1. 升级到2.0.9\r\n2. 在交易代码中，检查你的状态控制是否有问题，开盘时由集合竞价进入连续交易，短时间内可能触发多次on_bar回调，如果委托频率高但控制状态机又过于简单，就可能导致重复下单\r\n3. 简单的解决办法就是加个时间判断，比如只有bar.datetime超过9:30后才允许发出委托"
      }
    ]
  },
  {
    "number": 2308,
    "title": "windows下 使用多进程参数优化BUG",
    "created_at": "2020-01-19T17:32:32Z",
    "closed_at": "2020-01-20T17:07:31Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2308",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 10\r\n* Python版本: Python 3.7.4\r\n* vn.py版本: v2.0.9\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n2020-01-20 01:22:51.361774\t开始回放历史数据\r\n2020-01-20 01:22:51.361774\t逐日盯市盈亏计算完成\r\n2020-01-20 01:22:51.361774\t开始计算策略统计指标\r\n2020-01-20 01:22:51.380722\t历史数据回放结束\r\n2020-01-20 01:22:51.380722\t开始计算逐日盯市盈亏\r\n2020-01-20 01:22:51.386706\t逐日盯市盈亏计算完成\r\n2020-01-20 01:22:51.386706\t开始计算策略统计指标\r\nException in thread Thread-4:\r\nmultiprocessing.pool.RemoteTraceback: \r\n\"\"\"\r\nTraceback (most recent call last):\r\n  File \"G:\\ProgramData\\Anaconda3\\lib\\site-packages\\talib\\__init__.py\", line 20, in wrapper\r\n    for arg in chain(args, kwargs.values())\r\nStopIteration\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"G:\\ProgramData\\Anaconda3\\lib\\multiprocessing\\pool.py\", line 121, in worker\r\n    result = (True, func(*args, **kwds))\r\n  File \"G:\\ProgramData\\Anaconda3\\lib\\site-packages\\vnpy\\app\\cta_strategy\\backtesting.py\", line 1210, in optimize\r\n    engine.run_backtesting()\r\n  File \"G:\\ProgramData\\Anaconda3\\lib\\site-packages\\vnpy\\app\\cta_strategy\\backtesting.py\", line 294, in run_backtesting\r\n    func(data)\r\n  File \"G:\\ProgramData\\Anaconda3\\lib\\site-packages\\vnpy\\app\\cta_strategy\\backtesting.py\", line 724, in new_bar\r\n    self.strategy.on_bar(bar)\r\n  File \"G:\\ProgramData\\Anaconda3\\lib\\site-packages\\vnpy\\app\\cta_strategy\\strategies\\double_ma_strategy.py\", line 73, in on_bar\r\n    fast_ma = am.sma(self.fast_window, array=True)\r\n  File \"G:\\ProgramData\\Anaconda3\\lib\\site-packages\\vnpy\\trader\\utility.py\", line 377, in sma\r\n    result = talib.SMA(self.close, n)\r\n  File \"G:\\ProgramData\\Anaconda3\\lib\\site-packages\\talib\\__init__.py\", line 24, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"_func.pxi\", line 9954, in talib._ta_lib.SMA\r\n  File \"_common.pxi\", line 30, in talib._ta_lib._ta_check_success\r\nException: TA_SMA function failed with error code 2: Bad Parameter (TA_BAD_PARAM)\r\n\"\"\"\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"G:\\ProgramData\\Anaconda3\\lib\\threading.py\", line 926, in _bootstrap_inner\r\n    self.run()\r\n  File \"G:\\ProgramData\\Anaconda3\\lib\\threading.py\", line 870, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"G:\\ProgramData\\Anaconda3\\lib\\site-packages\\vnpy\\app\\cta_backtester\\engine.py\", line 295, in run_optimization\r\n    output=False\r\n  File \"G:\\ProgramData\\Anaconda3\\lib\\site-packages\\vnpy\\app\\cta_strategy\\backtesting.py\", line 569, in run_optimization\r\n    result_values = [result.get() for result in results]\r\n  File \"G:\\ProgramData\\Anaconda3\\lib\\site-packages\\vnpy\\app\\cta_strategy\\backtesting.py\", line 569, in <listcomp>\r\n    result_values = [result.get() for result in results]\r\n  File \"G:\\ProgramData\\Anaconda3\\lib\\multiprocessing\\pool.py\", line 657, in get\r\n    raise self._value\r\nException: TA_SMA function failed with error code 2: Bad Parameter (TA_BAD_PARAM)\r\n因为回测的是的双均线策略，提示TA_SMA错误，自己捣鼓了半天没弄出来。\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2308/comments",
    "author": "qmzhn",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-01-20T14:05:11Z",
        "body": "Exception: TA_SMA function failed with error code 2: Bad Parameter\r\n\r\n这里的报错，我猜测可能是第二个参数n，优化时出现了0或者负数"
      },
      {
        "user": "qmzhn",
        "created_at": "2020-01-20T17:07:31Z",
        "body": "经晓优大神提点，测试后发现TA_SMA的n不能为1……"
      }
    ]
  },
  {
    "number": 2233,
    "title": "IB合约不能自动订阅问题，建议vnpy加上ib的标的自动订阅功能",
    "created_at": "2019-12-06T08:53:56Z",
    "closed_at": "2020-01-29T14:31:22Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2233",
    "body": "## 环境\r\n* vn.py版本: 如v2.0.8发行版\r\n\r\n## Issue类型\r\n三选一：Enhancement\r\n\r\n## 实际程序行为\r\n\r\n\r\n群主，您好\r\n\r\nvnpy的2.0.x中 ib合约不能自动订阅，不太清楚为啥这里没做，我试了下，在dr的窗口中，添加了这个合约的时候，判断出来是ib的合约了（我根据交易所判断的），那么就和内盘一样加到tick和bar的记录列表中并调用self.main_engine.subscribe(req, \"IB\") ，下次登录ib的时候，在ib接口文件的connect(...)登录成功获取时间完成后的位置，增加一个eIBcontractSubscribe的事件，在dr的engine的方法 process_contract_event(...) 中捕获到这个事件后调用 self.main_engine.subscribe(req, \"IB\") 来完成IB合约的自动订阅，否则这个位置真的是不够完美的，以上我测试过了没问题的。\r\n\r\n当然也许还有更好的方式，期望vnpy从源头上能够优化下这里的。\r\n\r\n\r\n另外 吐槽下 代码用纯数字的conId，实在是耗费精神熵的呀！当然，可能是为了更广泛的兼容。如果可以，是否可以在代码后边增加上localSymbol的呢？\r\n\r\n2.0.x 的结构设计确实是漂亮的，赞！！！\r\n\r\n感谢！\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2233/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2020-01-29T14:31:22Z",
        "body": "已在DEV分支添加IbGateway的合约本地缓存和加载该功能"
      }
    ]
  },
  {
    "number": 2226,
    "title": "穿透测试现在需要CTP6.3.16T",
    "created_at": "2019-12-02T02:46:10Z",
    "closed_at": "2019-12-22T15:36:48Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2226",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: 如VNStudio-2.0.6\r\n\r\n## Issue类型\r\n现在做穿透测是需要6.3.16T版本，之前的6.3.13用不了了。使用6.3.13版本登录会报交易服务器验证失败，错误代码63.\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2226/comments",
    "author": "RosyRomance",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-12-22T15:36:48Z",
        "body": "dev分支已升级到6.3.16"
      }
    ]
  },
  {
    "number": 2217,
    "title": "Script_trader 模块是不是没有对上海持仓做平今、平昨处理？",
    "created_at": "2019-11-24T15:11:09Z",
    "closed_at": "2020-01-29T15:14:17Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2217",
    "body": "Script_trader 模块是不是没有对上海持仓做平今、平昨处理？\r\n\r\n## 环境\r\n* 操作系统: 如Windows 7\r\n* Python版本:  3.7_64 \r\n* vn.py版本:  dev\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\nScript_trader 模块对上海持仓做平今、平昨处理\r\n\r\n## 实际程序行为\r\nScript_trader 模块没有对上海持仓做平今\r\n\r\n## 重现步骤\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2217/comments",
    "author": "solobear",
    "comments": [
      {
        "user": "solobear",
        "created_at": "2019-11-24T15:11:37Z",
        "body": "交易委托失败，代码：51，信息：CTP:平昨仓位不足"
      },
      {
        "user": "vnpy",
        "created_at": "2019-11-25T01:02:30Z",
        "body": "确实没有处理，我们后续版本加上"
      },
      {
        "user": "solobear",
        "created_at": "2019-11-25T07:46:07Z",
        "body": "谢谢"
      },
      {
        "user": "vnpy",
        "created_at": "2020-01-29T15:14:17Z",
        "body": "ScriptTrader模块和CtaStrategy、SpsreadTrading有个比较大的区别，就是策略内部是可以通过get_position函数来直接访问到底层账户的真实持仓数据，该数据包括总仓和昨仓字段（可以计算出今仓），可以很方便的自行判断是要发出平今还是平昨指令。\r\n\r\n同时ScriptTrader模块主要的定位，是给用户提供一个尽可能接近各个交易接口最原始设计的交易功能，因此决定不加入OffsetConverter的自动转换功能。"
      }
    ]
  },
  {
    "number": 2208,
    "title": "example/no_ui/run.py程序，使用mysql数据库，每次快到交易时间启动子进程，策略读数据时会报连接错误，重启整个run进程就没问题。",
    "created_at": "2019-11-20T13:12:31Z",
    "closed_at": "2019-12-25T04:15:56Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2208",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 16.04\r\n* Python版本: 如VNStudio-2.0.7\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\ncta engine能正常查询mysql数据库的数据\r\n\r\n## 实际程序行为\r\n报连接异常\r\n\r\n## 重现步骤\r\n\r\n使用mysql数据库存在下面问题：\r\n每次快到交易时间，重新启动交易系统子进程的时候都会出现这个连接异常。只要关闭进程，重新启动整个run进程就可以正常连接mysql读取数据。\r\n我对mysql和peewee这个orm还不是特别了解，猜测是不是收盘过段时间后，交易系统子进程被直接kill掉导致的？\r\n\r\n下面整个错误提示在早上8：46分和晚上8：46，交易系统子进程启动，策略加载mysql数据的时候都会出现，后面还有大量因为没有成功连接而出现的其他异常。这里我只截取一部分。\r\n\r\n\r\n\r\n\r\n```\r\n...\r\n....\r\n\r\n2019-11-20 08:46:11,754  INFO: CTA策略全部初始化\r\n2019-11-20 08:46:11,757  INFO: cu: 策略启动\r\n2019-11-20 08:46:11,786  INFO: cu: 触发异常已停止\r\nTraceback (most recent call last):\r\n  File \"/home/lbz/miniconda3/lib/python3.7/site-packages/pymysql/connections.py\", line 713, in _write_bytes\r\n    self._sock.sendall(data)\r\nBrokenPipeError: [Errno 32] Broken pipe\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/lbz/miniconda3/lib/python3.7/site-packages/peewee.py\", line 3005, in execute_sql\r\n    cursor.execute(sql, params or ())\r\n  File \"/home/lbz/miniconda3/lib/python3.7/site-packages/pymysql/cursors.py\", line 170, in execute\r\n    result = self._query(query)\r\n  File \"/home/lbz/miniconda3/lib/python3.7/site-packages/pymysql/cursors.py\", line 328, in _query\r\n    conn.query(q)\r\n  File \"/home/lbz/miniconda3/lib/python3.7/site-packages/pymysql/connections.py\", line 516, in query\r\n    self._execute_command(COMMAND.COM_QUERY, sql)\r\n  File \"/home/lbz/miniconda3/lib/python3.7/site-packages/pymysql/connections.py\", line 771, in _execute_command\r\n    self._write_bytes(packet)\r\n  File \"/home/lbz/miniconda3/lib/python3.7/site-packages/pymysql/connections.py\", line 718, in _write_bytes\r\n    \"MySQL server has gone away (%r)\" % (e,))\r\npymysql.err.OperationalError: (2006, \"MySQL server has gone away (BrokenPipeError(32, 'Broken pipe'))\")\r\n\r\n....\r\n....\r\n\r\n```\r\n\r\n\r\n**补充：**\r\n\r\n我改变了run文件的判断trading的代码，以便模拟父进程关闭子进程然后开启子进程的整个过程。中间只停了2分钟左右，这样的测试发现没有异常，可以正常加载mysql的数据。\r\n\r\n看来似乎中间要停留较长时间才会报出异常，之前对网络编程和数据库并不是太了解，简单查了下资料。\r\n用这个命令netstat -atulnp | grep 3306查看连接，发现父进程关闭子进程之后，这个连接仍然存在。所以猜测会不会因为子进程获取完数据后没有关闭连接，然后过了一晚上之后超出mysql的wait_time默认的8小时，再次连接的时候就出错？\r\n于是缩短了wait_timeout和interactive_timeout，再次做测试，果然弹出了异常，不过这个异常错误是：\r\npymysql.err.OperationalError: (2013, 'Lost connection to MySQL server during query')\r\n而此前的异常是：\r\npymysql.err.OperationalError: (2006, \"MySQL server has gone away (BrokenPipeError(32, 'Broken pipe'))\")\r\n\r\n并不一样，所以目前仍然还不确定是否是因为子进程mysql连接未关闭引起的。\r\n\r\n**再补充：**\r\n\r\n早上起来，应该已经过了8个小时了。用mysql的show processlist查看连接，已经销毁了这个连接。然后用netstat查看端口连接，这次发现run进程和3306端口的连接已经消失不见了。再想起报2006异常之前还有一个异常：BrokenPipeError: [Errno 32] Broken pipe。\r\n所以我猜测，可能是mysql超时关闭后，又过了一段时间，连接3306端口的管道也关闭了，但是启动新的交易子进程可能没办法重新建立起新的管道连接，导致无网络连接可用的缘故把。\r\n我先试试把mysql的wait_timeout设置到16个小时，让它一直保持住这个连接，看是否能暂时解决这个问题。\r\n\r\n**后续**\r\n\r\n把mysql的wait_timeout设置更久之后，可以保持住这个长连接，问题可以临时得到解决。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2208/comments",
    "author": "linbozhong",
    "comments": [
      {
        "user": "playfund",
        "created_at": "2019-11-22T00:42:47Z",
        "body": "you can set the Mysql connect max count to fix this problem."
      },
      {
        "user": "vnpy",
        "created_at": "2019-12-25T04:15:56Z",
        "body": "非常感谢后续更新，这么看其实没必要的话还不如用SQLite了，可以省去很多折腾的时间"
      }
    ]
  },
  {
    "number": 2198,
    "title": "连接CTP时报错闪退",
    "created_at": "2019-11-15T02:35:17Z",
    "closed_at": "2019-11-15T02:36:57Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2198",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 10\r\n* Python版本: VNStudio-2.0.7, python 3.7.1\r\n* vn.py版本: 下载日期 dev branch 20191105\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n利用powershell 管理员身份运行 python run.py，登陆vnstation，打开VN Trader Lite，连接CTP时，预计能顺利登陆\r\n\r\n## 实际程序行为\r\n实际上在powershell中提示RuntimeError:can not open CFlow file in line 331 of file ..\\..\\source\\userapi_se\\ThostFtdcUserApiImplBase.cpp\r\n然后程序自动退出\r\n\r\n## 重现步骤\r\n先从github上下载源码，利用install.bat安装，然后利用powershell 管理员身份运行 python run.py，登陆vnstation，打开VN Trader Lite，连接CTP，输入用户名等信息，点击连接，powershell中提示RuntimeError:can not open CFlow file in line 331 of file ..\\..\\source\\userapi_se\\ThostFtdcUserApiImplBase.cpp，然后程序退出",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2198/comments",
    "author": "chiyt14",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-11-15T02:36:57Z",
        "body": "检查你的Windows用户名是否为中文，以及用户是否有管理员权限"
      }
    ]
  },
  {
    "number": 2159,
    "title": "order_price_type 为7时超出了定义导致程序异常退出",
    "created_at": "2019-10-25T07:33:34Z",
    "closed_at": "2019-10-28T06:45:01Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2159",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 18.04\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.0.7发行版\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n异常\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n\r\nhbdb_gateway.py 第64~68行，只定义了 1~6 种类型，但在603行\r\ntype=ORDERTYPE_HBDM2VT[d[\"order_price_type\"]],\r\n存在返回的值为7\r\n\r\n返回值数据片断为\r\n{\r\n    \"status\":\"ok\",\r\n    \"data\":{\r\n        \"orders\":[\r\n            Object{...},\r\n            Object{...},\r\n            {\r\n                \"order_id\":636414259111415808,\r\n                \"contract_code\":\"BTC191227\",\r\n                \"symbol\":\"BTC\",\r\n                \"lever_rate\":20,\r\n                \"direction\":\"sell\",\r\n                \"offset\":\"close\",\r\n                \"volume\":14,\r\n                \"price\":8157.16,\r\n                \"create_date\":1571774583380,\r\n                \"order_source\":\"trigger\",\r\n                \"order_price_type\":7,\r\n                \"order_type\":1,\r\n                \"margin_frozen\":0,\r\n                \"profit\":-0.003051451235476,\r\n                \"contract_type\":\"quarter\",\r\n                \"trade_volume\":14,\r\n                \"trade_turnover\":1400,\r\n                \"fee\":-0.000034325672170216,\r\n                \"trade_avg_price\":8157.16,\r\n                \"status\":6,\r\n                \"order_id_str\":\"636414259111415808\"\r\n            },\r\n---- 下略\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2159/comments",
    "author": "stonejiang208",
    "comments": [
      {
        "user": "stonejiang208",
        "created_at": "2019-10-27T02:32:16Z",
        "body": "增加\"fok\":FOK订单(fok:全部成交或立即取消)，\"ioc\":IOC订单(ioc:立即成交并取消剩余)\r\n"
      },
      {
        "user": "vnpy",
        "created_at": "2019-10-28T06:45:01Z",
        "body": "已在DEV分支修复，非常感谢"
      }
    ]
  },
  {
    "number": 2137,
    "title": "数据下载失败，无法获取IF99.CFFEX的历史数据",
    "created_at": "2019-10-15T03:23:44Z",
    "closed_at": "2019-10-16T00:58:45Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2137",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python版本: 如VNStudio-2.0.6\r\n* vn.py版本: 如v2.0.7\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n数据默认用的sqlite3, 我已经把examples\\csv_load 下的IF99_1D.csv 载入了数据库，但是cta回测界面把所有的参数都配置好后， 点击下载数据 缺提示 数据下载失败，无法获取IF99.CFFEX的历史数据\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2137/comments",
    "author": "jxhuliqun138",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-10-16T00:58:45Z",
        "body": "CTA回测界面的【下载数据】，是从RQData或者数字货币的数据服务器下载历史数据的操作，需要相应的账号和权限，你这里已经载入数据库的情况下，直接运行回测就好"
      },
      {
        "user": "jxhuliqun138",
        "created_at": "2019-10-16T05:41:32Z",
        "body": "13:23:00\t加载进度：########## [100%]\r\n13:23:00\t历史数据加载完成，数据量：0\r\n13:23:00\t策略初始化完成\r\n本地代码配置为了IF99.CFFEX， K线周期也配置好了为d , 但是为什么夹加载的数据却是0，\r\n我用sqlite3 打开了数据库， 用命令sqlite> select  * from dbbardata ; 查看里面是有数据的\r\n2210|IF99.CFFEX|CFFEX|2019-05-21 00:00:00|d|138543.0|0.0|3592.5957|3667.5662|3584.8429|3619.2342\r\n2211|IF99.CFFEX|CFFEX|2019-05-22 00:00:00|d|111582.0|0.0|3623.9009|3635.7851|3584.1958|3615.5455\r\n2212|IF99.CFFEX|CFFEX|2019-05-23 00:00:00|d|125768.0|0.0|3597.5694|3601.0001|3539.2854|3549.9006\r\n2213|IF99.CFFEX|CFFEX|2019-05-24 00:00:00|d|123458.0|0.0|3562.5325|3598.0641|3545.409|3561.5637\r\nsqlite> select  * from dbbardata ;\r\n"
      },
      {
        "user": "vnpy",
        "created_at": "2019-10-16T12:33:00Z",
        "body": "你在载入的时候，合约代码应该设置为IF99，而不是IF99.CFFEX"
      }
    ]
  },
  {
    "number": 2128,
    "title": "回测tick数据提示last_price错误",
    "created_at": "2019-10-05T06:43:47Z",
    "closed_at": "2019-10-05T14:34:30Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2128",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 10\r\n* Python版本: python3.7.4\r\n* vn.py版本: v2.0.7\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n我有一个tick的策略需要回测\r\n设置 mode = BacktestingMode.TICK 进行回测时提示错误 错误日志如下\r\n(python37) PS E:\\myquant\\vnpy_coding> & D:/Anaconda3/envs/python37/python.exe e:/myquant/vnpy_coding/strategies/pulse_trade.py\r\n2019-10-05 14:42:07.954554      开始加载历史数据\r\n2019-10-05 14:42:15.188163      加载进度：########## [100%]\r\n2019-10-05 14:42:15.189161      历史数据加载完成，数据量：31839\r\nTraceback (most recent call last):\r\n  File \"e:/myquant/vnpy_coding/strategies/pulse_trade.py\", line 177, in <module>\r\n    engine.run_backtesting()\r\n  File \"D:\\Anaconda3\\envs\\python37\\lib\\site-packages\\vnpy\\app\\cta_strategy\\backtesting.py\", line 282, in run_backtesting\r\n    self.callback(data)\r\n  File \"D:\\Anaconda3\\envs\\python37\\lib\\site-packages\\vnpy\\app\\cta_strategy\\strategies\\pulse_trade.py\", line 77, in on_bar\r\n    self.bg.update_bar(bar)\r\n  File \"D:\\Anaconda3\\envs\\python37\\lib\\site-packages\\vnpy\\trader\\utility.py\", line 231, in update_bar\r\n    self.window_bar.close_price = bar.close_price\r\nAttributeError: 'TickData' object has no attribute 'close_price'\r\n\r\n我看了tick bar确实没有 close_price字段. 值有last_price \r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2128/comments",
    "author": "Lsgo",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-10-05T14:34:30Z",
        "body": "对于tick回测模式的策略来说，请在策略代码中使用load_tick函数来加载历史数据，而不是load_bar"
      }
    ]
  },
  {
    "number": 2115,
    "title": "成功更新到2.0.7版本，IB连接成功输入conid回车，没反应，无法订阅行情。",
    "created_at": "2019-09-26T04:01:03Z",
    "closed_at": "2019-09-30T04:20:27Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2115",
    "body": "\r\n\r\n升级之前，行情订阅正常。升级后就没反应了，求助。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2115/comments",
    "author": "nwalesL",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-09-27T01:36:59Z",
        "body": "具体用的哪个CoinID？\r\n"
      },
      {
        "user": "nwalesL",
        "created_at": "2019-09-27T05:26:17Z",
        "body": "SPY：756733 \\ SMART"
      },
      {
        "user": "vnpy",
        "created_at": "2019-09-30T04:20:27Z",
        "body": "用DEMO环境尝试订阅，提示没有该行情权限，需要付费订阅，这个是正常的情况，请检查下是不是行情到期后没有续费吧。"
      }
    ]
  },
  {
    "number": 2092,
    "title": "做x-min或小时线级别的通道策略，新的交易日回放到最后一根历史bar的时候应该发出停止单",
    "created_at": "2019-09-17T14:32:59Z",
    "closed_at": "2020-01-30T08:45:49Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2092",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 10\r\n* Anaconda版本: Anaconda 18.12 Python 3.7 64位\r\n* vn.py版本: v2.0.6\r\n\r\n## Issue类型\r\n三选一：Enhancement\r\n\r\n## 预期程序行为\r\n在做x-min或者小时线级别的通道策略的时候，在新的交易日开盘前启动策略就应该根据历史数据最后一根bar的信息，发出本地停止单，开盘后就可以立即进入等待撮合的状态。\r\n\r\n现在策略模板的逻辑是在on_init函数用load_bar载入历史数据，在这个过程中用on_bar或on_x_bar回放数据，如果trading为false，cta_engine就不会发单，因为要先完成初始化才能启动策略，此时策略trading状态肯定是false，历史的数据全部回放完成也不会发出停止单，只有开盘后，等到bar_generator合成完第一根所需要的bar并推送到on_bar函数才能实现发单。\r\n如果是1分钟的策略相对还好，最多就是等待一分钟。但是如果是5分钟以上的策略，这个等待就太久了，对于一些通道突破策略的入场或者是已有仓位的止损，都是需要在开盘就立即发出停止单，如果有需要，立即就进行交易。\r\n\r\n虽然可以自己更改一下cta_engine的代码或者在策略中保存好最后一根bar的停止单数据然后启动策略后发单，不过还是有点麻烦，毕竟策略文件最好是仅写与策略相关的代码，而cta_engine用户最好是不用去改动，否则以后升级又要重新处理一下。\r\n感觉这应该是一个比较常用的功能，最好是能在引擎层里面直接实现了。\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2092/comments",
    "author": "linbozhong",
    "comments": [
      {
        "user": "linbozhong",
        "created_at": "2019-09-17T23:55:44Z",
        "body": "这里提供一个临时解决方案，是通过保存最后一根bar的发单参数，在策略启动的时候发单出去。\r\n\r\n1、在__init__新增一个变量用来保存最新的bar的stop_order参数列表\r\n````self.last_stop_order_params_list = []````\r\n\r\n2、在策略文件中重写template的send_order，主要是当trading为False的时候，保存最新bar的停止单参数。\r\n````\r\ndef send_order(\r\n        self,\r\n        direction: Direction,\r\n        offset: Offset,\r\n        price: float,\r\n        volume: float,\r\n        stop: bool = False,\r\n        lock: bool = False\r\n    ):\r\n        \"\"\"\r\n        Send a new order.\r\n        \"\"\"\r\n        if self.trading:\r\n            vt_orderids = self.cta_engine.send_order(\r\n                self, direction, offset, price, volume, stop, lock\r\n            )\r\n            return vt_orderids\r\n        else:\r\n            params = (direction, offset, price, volume, stop, lock)\r\n            self.last_stop_order_params_list.append(params)\r\n            return []\r\n````\r\n\r\n3、在on_x_min函数运行前，清空上一根bar保存的停止单参数\r\n```` \r\ndef on_hour_bar(self, bar: BarData):\r\n       self.last_stop_order_params_list.clear()\r\n````\r\n\r\n4、新建一个策略启动后把最后一根bar的停止单发出去的函数，发单完成后清空停止单参数列表\r\n````\r\ndef send_pre_trading_order(self):\r\n        \"\"\"\r\n        Send a pre trading saved stop order after start strategy.\r\n        \"\"\"\r\n        print(self.trading)\r\n        l = self.last_stop_order_params_list\r\n        if self.trading and l:\r\n            for params in l:\r\n                self.send_order(*params)\r\n            l.clear()\r\n````\r\n\r\n5、本来第四步的发单函数是可以放在on_start的，但是因为现在cta_engine在启动策略的时候是先调用了on_start函数再把trading状态改成True，所以如果我们把发单函数放在on_start的话，是无法触发发单行为的。这里有两个办法：\r\n（1）修改cta_engine，把代码顺序改一下（没有充分测试，不确定有什么后果）\r\n（2）把发单函数放在on_tick，这样第一根tick过来了就发单了。\r\n\r\n特别声明：以上方案只经过简单测试，仅提供思路为主，如果出现什么bug也很正常。请大家自行调试。\r\n\r\n================= 2019.10.16更新 ===================\r\n前面几个步骤大体差不多，就是最后把发单参数保存起来之后要怎么处理有一个新思路。\r\n\r\n写一个on_timer函数，在策略启动的时候注册为timer事件。然后在这个函数里面就可以根据tick时间来做一个定时发单逻辑，这样就可以在策略层面上实现任意什么时候发单。\r\n这种方式也同样适用于日线级别的策略。\r\n以上模拟运行测试通过。\r\n\r\n\r\n````\r\n    def on_timer(self, event):\r\n        \"\"\"\r\n        Send pre stop order at specified time\r\n        \"\"\"\r\n        if self.is_last_stop_order_sended:\r\n            return\r\n\r\n        # print(f\"now is {datetime.now()}\")\r\n        if self.tick_time is None:\r\n            return\r\n\r\n        now = self.tick_time\r\n        if now.hour not in self.trade_hour:\r\n            return\r\n\r\n        # 可以指定开盘后多长时间下单。\r\n        if now.hour in self.nigh_hour and now > self.nigh_start:\r\n            self.send_pre_trading_order()\r\n        if now.hour in self.day_hour and now > self.day_start:\r\n            self.send_pre_trading_order()\r\n````"
      },
      {
        "user": "handsomehu",
        "created_at": "2019-09-18T02:37:54Z",
        "body": "也可以用小时线出信号，1分钟线发单。开盘价格波动剧烈，马上发单容易中招。"
      },
      {
        "user": "vnpy",
        "created_at": "2020-01-30T08:45:49Z",
        "body": "楼上两种方案都能解决该问题。\r\n\r\n我们提供另一种思路：\r\n1. 策略每次on_bar/on_hour_bar产生信号后，记录信号到缓存变量中\r\n2. 增加一个开盘发单的布尔值控制变量，每天重置\r\n3. 在策略的on_tick函数中，检查当前的tick时间，超过9:30（开盘时间），且控制变量为True，则立即发出开盘委托（基于之前缓存的信号），并将控制变量设为False"
      }
    ]
  },
  {
    "number": 2063,
    "title": "策略目录复制到另的地方就调不出来 vnpy.app.cta_strategy",
    "created_at": "2019-09-03T01:39:55Z",
    "closed_at": "2019-09-06T00:56:45Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2063",
    "body": "如果我把这个策略目录 cta_strategy 复制到新的地方，则调不出来。之前是可以的。\r\nrun.py这样的：\r\nfrom vnpy.app.cta_strategy import CtaStrategyApp                      #这样就可以调用\r\nfrom vnpy_other.app.cta_strategy import CtaStrategyApp           # 这样就调不到策略了\r\n然后运行在ui界面下。策略就调不到。\r\n============================\r\n建议  策略文件存放位置：\r\n1，cta_strategy目录下， 指import CtaStrategyApp 的这个目录。而不是默认的  vnpy.app.cta_strategy， 因为我们会把整个 cta_strategy 目录复制到别的地方修改，防止一更新全覆盖掉了。\r\n2，设置文件 cta_strategy_setting.json 里面可以指定多个目录。\r\n3，最后才是官方的，\r\n\r\n如果重名则以上面的顺序为准。\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2063/comments",
    "author": "viponedream",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-09-04T02:30:29Z",
        "body": "如果自行对App做了定制修改，请将整个App代码都放在你自己的目录下，然后在run.py中加载修改后的App即可。\r\n\r\n太多重的文件加载扫描是没必要的，因为用户开发的策略本身应该放在运行时目录（带有.vntrader文件夹）的strategies目录下。"
      }
    ]
  },
  {
    "number": 2023,
    "title": "bitmex ontick和ondepth时间有穿插",
    "created_at": "2019-08-15T07:30:59Z",
    "closed_at": "2019-09-17T15:48:27Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/2023",
    "body": "下面是onDepth和ontick来时的时间。\r\nonTick时间比onDepth慢，怎么处理呢？\r\n\r\nonDepth: 07:18:03.063Z\r\nonDepth: 07:18:03.063Z\r\nonTick: 07:18:01.637Z\r\nonTick: 07:18:01.673Z\r\nonDepth: 07:18:03.197Z\r\nonDepth: 07:18:03.202Z\r\nonDepth: 07:18:03.204Z\r\nonDepth: 07:18:03.207Z\r\nonDepth: 07:18:03.210Z\r\nonDepth: 07:18:03.232Z\r\nonDepth: 07:18:03.242Z\r\nonDepth: 07:18:03.244Z\r\nonDepth: 07:18:03.250Z\r\nonDepth: 07:18:03.252Z\r\nonTick: 07:18:01.689Z\r\nonTick: 07:18:01.738Z\r\nonTick: 07:18:01.765Z\r\nonTick: 07:18:01.853Z\r\nonTick: 07:18:01.985Z\r\nonTick: 07:18:02.014Z\r\nonTick: 07:18:02.024Z",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/2023/comments",
    "author": "xueshufeng",
    "comments": [
      {
        "user": "xueshufeng",
        "created_at": "2019-08-15T08:10:31Z",
        "body": "是不是 把lastprice和深度数据分开上报， 新建一个 ondepth的消息"
      },
      {
        "user": "vnpy",
        "created_at": "2019-08-16T02:38:02Z",
        "body": "可以采用分开上报的方案，或者采用不管这个时间戳直接合成的方案"
      },
      {
        "user": "xueshufeng",
        "created_at": "2019-08-16T02:43:28Z",
        "body": "深度时间比成交时间 快2秒， 难道bitmex推送过来的成交数据会延迟2秒，那也太可怕了"
      },
      {
        "user": "vnpy",
        "created_at": "2019-09-17T15:48:27Z",
        "body": "BitMEX的几条数据流本身是分开的，vn.py本地做了合成，如果网络有问题是可能出现前后到达时间的抖动，要解决还是优先在网络上想办法吧，比如用爱尔兰的AWS"
      }
    ]
  },
  {
    "number": 1977,
    "title": "How to Get Tick data by ctp",
    "created_at": "2019-07-30T13:00:39Z",
    "closed_at": "2019-07-31T00:35:57Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1977",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 18.04\r\n* vn.py版本: v2.0.6\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n现在的文档非常少，如何通过ctp接口获取tick数据，是否能提供一个示例？\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1977/comments",
    "author": "chasingegg",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-07-31T00:35:57Z",
        "body": "请关注微信公众号vnpy-community获取傻瓜式入门教程，预计本周补完"
      },
      {
        "user": "chasingegg",
        "created_at": "2019-07-31T02:08:54Z",
        "body": "公众号都是图形界面操作，想通过编程实现的方式来获取tick数据"
      },
      {
        "user": "Gwill",
        "created_at": "2019-07-31T03:09:36Z",
        "body": "写个函数监听 EVENT_TICK 事件即可"
      }
    ]
  },
  {
    "number": 1971,
    "title": "希望能加入多账号功能",
    "created_at": "2019-07-26T23:22:47Z",
    "closed_at": "2019-07-27T00:40:40Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1971",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Anaconda版本: 如Anaconda 18.12 Python 3.7 64位\r\n* vn.py版本: 如v2.0发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Enhancement\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n老大，真的很希望在2.0中能利用gateway实例化加入多账号管理交易功能，有这个需求的人感觉也不少，不知道能不能考虑加入到官方计划中，或者能不能提供一个指引或者模板。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1971/comments",
    "author": "yunnant",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-07-27T00:40:40Z",
        "body": "目前就能做到，自己改策略接口名字gateway_name就行"
      }
    ]
  },
  {
    "number": 1970,
    "title": " round_to函数 中 遇到float NaN数据强转int,导致程序崩溃",
    "created_at": "2019-07-26T09:05:41Z",
    "closed_at": "2019-07-27T00:43:08Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1970",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: 如Anaconda 18.12 Python 3.7 64位\r\n* vn.py版本: v2.0.5\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\nException in thread Thread-8:\r\nTraceback (most recent call last):\r\n  File \"D:\\ProgramData\\Anaconda3\\envs\\vnpy2\\lib\\threading.py\", line 917, in _boo\r\ntstrap_inner\r\n    self.run()\r\n  File \"D:\\ProgramData\\Anaconda3\\envs\\vnpy2\\lib\\threading.py\", line 865, in run\r\n    self._target(*self._args, **self._kwargs)\r\n  File \"D:\\ProgramData\\Anaconda3\\envs\\vnpy2\\lib\\site-packages\\vnpy\\app\\cta_backt\r\nester\\engine.py\", line 272, in run_optimization\r\n    output=False\r\n  File \"D:\\ProgramData\\Anaconda3\\envs\\vnpy2\\lib\\site-packages\\vnpy\\app\\cta_strat\r\negy\\backtesting.py\", line 673, in run_ga_optimization\r\n    halloffame=hof\r\n  File \"D:\\ProgramData\\Anaconda3\\envs\\vnpy2\\lib\\site-packages\\deap\\algorithms.py\r\n\", line 302, in eaMuPlusLambda\r\n    for ind, fit in zip(invalid_ind, fitnesses):\r\n  File \"D:\\ProgramData\\Anaconda3\\envs\\vnpy2\\lib\\site-packages\\vnpy\\app\\cta_strat\r\negy\\backtesting.py\", line 1197, in ga_optimize\r\n    return _ga_optimize(tuple(parameter_values))\r\n  File \"D:\\ProgramData\\Anaconda3\\envs\\vnpy2\\lib\\site-packages\\vnpy\\app\\cta_strat\r\negy\\backtesting.py\", line 1190, in _ga_optimize\r\n    ga_mode\r\n  File \"D:\\ProgramData\\Anaconda3\\envs\\vnpy2\\lib\\site-packages\\vnpy\\app\\cta_strat\r\negy\\backtesting.py\", line 1164, in optimize\r\n    engine.run_backtesting()\r\n  File \"D:\\ProgramData\\Anaconda3\\envs\\vnpy2\\lib\\site-packages\\vnpy\\app\\cta_strat\r\negy\\backtesting.py\", line 293, in run_backtesting\r\n    func(data)\r\n  File \"D:\\ProgramData\\Anaconda3\\envs\\vnpy2\\lib\\site-packages\\vnpy\\app\\cta_strat\r\negy\\backtesting.py\", line 708, in new_bar\r\n    self.strategy.on_bar(bar)\r\n  File \"D:\\ProgramData\\Anaconda3\\envs\\vnpy2\\lib\\site-packages\\vnpy\\app\\cta_strat\r\negy\\strategies\\turtle_signal_strategy.py\", line 92, in on_bar\r\n    self.send_buy_orders(self.entry_up)\r\n  File \"D:\\ProgramData\\Anaconda3\\envs\\vnpy2\\lib\\site-packages\\vnpy\\app\\cta_strat\r\negy\\strategies\\turtle_signal_strategy.py\", line 136, in send_buy_orders\r\n    self.buy(price, self.fixed_size, True)\r\n  File \"D:\\ProgramData\\Anaconda3\\envs\\vnpy2\\lib\\site-packages\\vnpy\\app\\cta_strat\r\negy\\template.py\", line 155, in buy\r\n    return self.send_order(Direction.LONG, Offset.OPEN, price, volume, stop, loc\r\nk)\r\n  File \"D:\\ProgramData\\Anaconda3\\envs\\vnpy2\\lib\\site-packages\\vnpy\\app\\cta_strat\r\negy\\template.py\", line 189, in send_order\r\n    self, direction, offset, price, volume, stop, lock\r\n  File \"D:\\ProgramData\\Anaconda3\\envs\\vnpy2\\lib\\site-packages\\vnpy\\app\\cta_strat\r\negy\\backtesting.py\", line 906, in send_order\r\n    price = round_to(price, self.pricetick)\r\n  File \"D:\\ProgramData\\Anaconda3\\envs\\vnpy2\\lib\\site-packages\\vnpy\\trader\\utilit\r\ny.py\", line 116, in round_to\r\n    rounded = int(round(value / target)) * target\r\nValueError: cannot convert float NaN to integer\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1970/comments",
    "author": "yhmickey",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-07-27T00:43:08Z",
        "body": "这是因为pricetick设置太小导致的，自己检查下吧"
      },
      {
        "user": "xldistance",
        "created_at": "2019-08-04T09:23:46Z",
        "body": "def round_to(value: float, target: float):\r\n    \"\"\"\r\n    Round price to price tick value.\r\n    \"\"\"\r\n    tmp = float(target)\r\n    rounded = int(round(np.nan_to_num(value) / tmp)) * tmp\r\n    return rounded"
      }
    ]
  },
  {
    "number": 1957,
    "title": "ubuntu 无法正常build oes",
    "created_at": "2019-07-23T12:47:08Z",
    "closed_at": "2019-09-17T14:50:31Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1957",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 18.04，华为云2核4g版本\r\n* Anaconda版本: 通过官方库安装的python3.7.3版本，构建virtual env\r\n* vn.py版本: v2.0.5\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n无法build 安装成功，build oes接口的时候出现会出现内存溢出的错误（卡住，消耗完服务器的内存和swap空间然后显示安装失败，在本地有8g内存的虚拟机上也出现了同样的结果）\r\n去掉setup.py中关于vnoes的内容之后，可以build 安装成功\r\n\r\n我不用oes模块，不过安装过程遇到了这个问题，所以提一下。\r\n\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1957/comments",
    "author": "biggreyhairboy",
    "comments": [
      {
        "user": "yunnant",
        "created_at": "2019-07-23T13:50:15Z",
        "body": "需要更新setup，试一下2.0.6，2.0.6ubuntu移除了vnoes，我之前也遇到这个问题，更新了完整版2.0.6没有再出现问题了。"
      },
      {
        "user": "vnpy",
        "created_at": "2019-07-24T00:39:23Z",
        "body": "我们在2.0.5升级了autocxxpy编译脚本，导致需要50G内存完成编译，因为我们之前用服务器测试所以没发现，目前2.0.6暂时移除了OES自动编译，2.0.7我们会修复解决这个内存开销太大的问题"
      },
      {
        "user": "vnpy",
        "created_at": "2019-09-17T14:50:31Z",
        "body": "已修复"
      }
    ]
  },
  {
    "number": 1941,
    "title": "全局配置建议加上 数据源，如 rqdata还是本地数据库获取",
    "created_at": "2019-07-20T10:36:42Z",
    "closed_at": "2019-07-23T01:30:42Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1941",
    "body": "全局配置建议加上 数据源，如 rqdata还是本地数据库获取",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1941/comments",
    "author": "viponedream",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-07-21T01:33:23Z",
        "body": "目前的模式，配置了rqdata.username, rqdata.password，实盘初始化就会优先从RQData获取，数字货币类/IB接口，会优先从接口获取。\r\n\r\n获取不到的自动从本地数据库查询。\r\n\r\n希望做什么修改呢？\r\n"
      },
      {
        "user": "viponedream",
        "created_at": "2019-07-22T17:25:18Z",
        "body": "比如像这些。\r\ncta_backtester/engine.py \r\nresult = rqdata_client.init()\r\n    def init_rqdata(self):\r\n        \"\"\"\r\n        Init RQData client.\r\n        \"\"\"\r\n       先判断一下再载入和初始化\r\n        from vnpy.trader.rqdata import rqdata_client\r\n        result = rqdata_client.init()\r\n\r\n可以统统判断一下有没有 rqdata.username, rqdata.password再来导入rqdata_client"
      },
      {
        "user": "vnpy",
        "created_at": "2019-07-23T01:30:38Z",
        "body": "rqdata_client.init这个里面有判断了，如果没配置用户密码不会去发起连接，而import本身几乎没什么额外开销。"
      }
    ]
  },
  {
    "number": 1932,
    "title": "dev 和 master 分支编译失败",
    "created_at": "2019-07-19T04:40:38Z",
    "closed_at": "2019-07-19T12:38:06Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1932",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 18.04\r\n* Anaconda版本:\r\nPython 3.7.3 (default, Mar 27 2019, 22:11:17) \r\n[GCC 7.3.0] :: Anaconda, Inc. on linux\r\n* vn.py版本: dev af37ba8beb946c64f684e3d7feb5556bd59a421c\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n正常通过编译。\r\n\r\n## 实际程序行为\r\nIn file included from vnpy/api/oes/vnoes/include/autocxxpy/autocxxpy.hpp:12:0,\r\n                 from vnpy/api/oes/vnoes/generated_files/generated_functions_0.cpp:8:\r\nvnpy/api/oes/vnoes/include/autocxxpy/cross_assign.hpp:11:11: warning: ‘autocxxpy::cross_assign’ declared with greater visibility than the type of its field ‘autocxxpy::cross_assign::_delay_assings’ [-Wattributes]\r\n     class cross_assign\r\n           ^~~~~~~~~~~~\r\ngcc: internal compiler error: Killed (program cc1plus)\r\nPlease submit a full bug report,\r\nwith preprocessed source if appropriate.\r\nSee <file:///usr/share/doc/gcc-7/README.Bugs> for instructions.\r\nerror: command 'gcc' failed with exit status 4\r\n\r\n8 g 内存 + 10 g 虚拟内存耗尽……\r\nv2.0.4 编译能正常完成\r\n\r\n## 重现步骤\r\n\r\n运行 bash ./install.sh 或者 python ./setup.py install\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1932/comments",
    "author": "zhangr011",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-07-19T12:38:06Z",
        "body": "请尝试重启机器，并且不要启动其他程序，直接进行安装"
      },
      {
        "user": "zhangr011",
        "created_at": "2019-07-19T13:13:32Z",
        "body": "可以对比一下 v2.0.4 和 dev 分支，编译的速度下降明显"
      },
      {
        "user": "vnpy",
        "created_at": "2019-07-20T01:37:37Z",
        "body": "最新的2.0.5分支升级了autocxxpy封装库，编译耗时是会有上升"
      },
      {
        "user": "yunnant",
        "created_at": "2019-07-20T04:23:46Z",
        "body": "    vnpy/api/oes/vnoes/include/autocxxpy/callback_wrapper.hpp:82:12: warning: ‘autocxxpy::async_dispatch_exception’ declared with greater visibility than the type of its field ‘autocxxpy::async_dispatch_exception::instance’ [-Wattributes]\r\n         struct async_dispatch_exception : public std::exception\r\n                ^~~~~~~~~~~~~~~~~~~~~~~~\r\n    vnpy/api/oes/vnoes/include/autocxxpy/callback_wrapper.hpp:138:107: warning: ‘selectany’ attribute directive ignored [-Wattributes]\r\n         AUTOCXXPY_SELECT_ANY async_callback_exception_handler::handler_type async_callback_exception_handler::custom_handler;\r\n                                                                                                               ^~~~~~~~~~~~~~\r\n    In file included from vnpy/api/oes/vnoes/include/autocxxpy/autocxxpy.hpp:12:0,\r\n                     from vnpy/api/oes/vnoes/generated_files/generated_functions_0.cpp:8:\r\n    vnpy/api/oes/vnoes/include/autocxxpy/cross_assign.hpp:11:11: warning: ‘autocxxpy::cross_assign’ declared with greater visibility than the type of its field ‘autocxxpy::cross_assign::_delay_assings’ [-Wattributes]\r\n         class cross_assign\r\n               ^~~~~~~~~~~~\r\n    virtual memory exhausted: Cannot allocate memory\r\n    error: command 'gcc' failed with exit status 1\r\n\r\n\r\n同样资源耗尽。。"
      },
      {
        "user": "zhangr011",
        "created_at": "2019-07-20T07:35:52Z",
        "body": "问题应该出在 oes 的编译上，暂时屏蔽了，可以正常编译。\r\noes 中确实是耗在了 autocxxpy 的编译上，最终把内存吃完了。"
      }
    ]
  },
  {
    "number": 1922,
    "title": "websocket_client  Exception",
    "created_at": "2019-07-13T14:29:32Z",
    "closed_at": "2019-07-14T03:29:10Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1922",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Python 3.7 64位\r\n* vn.py版本: 如v2.0.5 dev branch 2019.712 新websocket_client（下载日期）\r\n\r\n## Issue类型\r\n三选一：Exception\r\n## 预期程序行为\r\n因该会断线重连\r\n\r\n## 实际程序行为\r\n异常后，无法重连，需要重新运行程序才行\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n[2019-07-13T22:08:00.469127]: Unhandled RestClient Error:<class 'requests.exceptions.ConnectionError'>\r\nrequest:request : PUT /api/v1/userDataStream?listenKey=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX error because terminated: \r\nheaders: {'Content-Type': 'application/x-www-form-urlencoded', 'Accept': 'application/json', 'X-MBX-APIKEY': 'XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX'}\r\nparams: {}\r\ndata: {}\r\nresponse: \r\n\r\nException trace: \r\nTraceback (most recent call last):\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 600, in urlopen\r\n    chunked=chunked)\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 343, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 839, in _validate_conn\r\n    conn.connect()\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\connection.py\", line 344, in connect\r\n    ssl_context=context)\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\util\\ssl_.py\", line 344, in ssl_wrap_socket\r\n    return context.wrap_socket(sock, server_hostname=server_hostname)\r\n  File \"C:\\Python37\\lib\\ssl.py\", line 423, in wrap_socket\r\n    session=session\r\n  File \"C:\\Python37\\lib\\ssl.py\", line 870, in _create\r\n    self.do_handshake()\r\n  File \"C:\\Python37\\lib\\ssl.py\", line 1139, in do_handshake\r\n    self._sslobj.do_handshake()\r\nOSError: [Errno 0] Error\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Python37\\lib\\site-packages\\requests\\adapters.py\", line 449, in send\r\n    timeout=timeout\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 638, in urlopen\r\n    _stacktrace=sys.exc_info()[2])\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\util\\retry.py\", line 367, in increment\r\n    raise six.reraise(type(error), error, _stacktrace)\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\packages\\six.py\", line 685, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 600, in urlopen\r\n    chunked=chunked)\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 343, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 839, in _validate_conn\r\n    conn.connect()\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\connection.py\", line 344, in connect\r\n    ssl_context=context)\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\util\\ssl_.py\", line 344, in ssl_wrap_socket\r\n    return context.wrap_socket(sock, server_hostname=server_hostname)\r\n  File \"C:\\Python37\\lib\\ssl.py\", line 423, in wrap_socket\r\n    session=session\r\n  File \"C:\\Python37\\lib\\ssl.py\", line 870, in _create\r\n    self.do_handshake()\r\n  File \"C:\\Python37\\lib\\ssl.py\", line 1139, in do_handshake\r\n    self._sslobj.do_handshake()\r\nurllib3.exceptions.ProtocolError: ('Connection aborted.', OSError(0, 'Error'))\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"D:\\vnpy_2.0.4_mod_20190628-2\\vnpy\\api\\rest\\rest_client.py\", line 214, in _process_request\r\n    proxies=self.proxies,\r\n  File \"C:\\Python37\\lib\\site-packages\\requests\\sessions.py\", line 533, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"C:\\Python37\\lib\\site-packages\\requests\\sessions.py\", line 646, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"C:\\Python37\\lib\\site-packages\\requests\\adapters.py\", line 498, in send\r\n    raise ConnectionError(err, request=request)\r\nrequests.exceptions.ConnectionError: ('Connection aborted.', OSError(0, 'Error'))\r\nTraceback (most recent call last):\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 600, in urlopen\r\n    chunked=chunked)\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 343, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 839, in _validate_conn\r\n    conn.connect()\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\connection.py\", line 344, in connect\r\n    ssl_context=context)\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\util\\ssl_.py\", line 344, in ssl_wrap_socket\r\n    return context.wrap_socket(sock, server_hostname=server_hostname)\r\n  File \"C:\\Python37\\lib\\ssl.py\", line 423, in wrap_socket\r\n    session=session\r\n  File \"C:\\Python37\\lib\\ssl.py\", line 870, in _create\r\n    self.do_handshake()\r\n  File \"C:\\Python37\\lib\\ssl.py\", line 1139, in do_handshake\r\n    self._sslobj.do_handshake()\r\nOSError: [Errno 0] Error\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Python37\\lib\\site-packages\\requests\\adapters.py\", line 449, in send\r\n    timeout=timeout\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 638, in urlopen\r\n    _stacktrace=sys.exc_info()[2])\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\util\\retry.py\", line 367, in increment\r\n    raise six.reraise(type(error), error, _stacktrace)\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\packages\\six.py\", line 685, in reraise\r\n    raise value.with_traceback(tb)\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 600, in urlopen\r\n    chunked=chunked)\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 343, in _make_request\r\n    self._validate_conn(conn)\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\connectionpool.py\", line 839, in _validate_conn\r\n    conn.connect()\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\connection.py\", line 344, in connect\r\n    ssl_context=context)\r\n  File \"C:\\Python37\\lib\\site-packages\\urllib3\\util\\ssl_.py\", line 344, in ssl_wrap_socket\r\n    return context.wrap_socket(sock, server_hostname=server_hostname)\r\n  File \"C:\\Python37\\lib\\ssl.py\", line 423, in wrap_socket\r\n    session=session\r\n  File \"C:\\Python37\\lib\\ssl.py\", line 870, in _create\r\n    self.do_handshake()\r\n  File \"C:\\Python37\\lib\\ssl.py\", line 1139, in do_handshake\r\n    self._sslobj.do_handshake()\r\nurllib3.exceptions.ProtocolError: ('Connection aborted.', OSError(0, 'Error'))\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"D:\\vnpy_2.0.4_mod_20190628-2\\vnpy\\api\\rest\\rest_client.py\", line 214, in _process_request\r\n    proxies=self.proxies,\r\n  File \"C:\\Python37\\lib\\site-packages\\requests\\sessions.py\", line 533, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"C:\\Python37\\lib\\site-packages\\requests\\sessions.py\", line 646, in send\r\n    r = adapter.send(request, **kwargs)\r\n  File \"C:\\Python37\\lib\\site-packages\\requests\\adapters.py\", line 498, in send\r\n    raise ConnectionError(err, request=request)\r\nrequests.exceptions.ConnectionError: ('Connection aborted.', OSError(0, 'Error'))\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1922/comments",
    "author": "sunzhouhong",
    "comments": [
      {
        "user": "xldistance",
        "created_at": "2019-07-14T03:16:57Z",
        "body": "这是rest_client代理连接出错"
      },
      {
        "user": "sunzhouhong",
        "created_at": "2019-07-14T03:20:33Z",
        "body": "> 这是rest_client代理连接出错\r\n\r\n如何处理掉这个异常并重新连接啊"
      },
      {
        "user": "vnpy",
        "created_at": "2019-07-14T03:29:10Z",
        "body": "这是你的主动请求出错，之前考虑过两个方案：\r\n1. 自动重连重试请求，但因为恢复连接的时间不确定，可能导致已经过去很久不再需要的请求发出去\r\n2. 自动重连放弃请求，这种模式更安全，但对于用户来说就意味着不确定的丢包情况\r\n\r\n综上，不如把异常情况抛出，让用户知晓后去处理好再来跑交易，本来实盘交易机器的网络连接就必须保证稳定性。"
      },
      {
        "user": "sunzhouhong",
        "created_at": "2019-07-14T03:42:18Z",
        "body": "> 这是你的主动请求出错，之前考虑过两个方案：\r\n> \r\n> 1. 自动重连重试请求，但因为恢复连接的时间不确定，可能导致已经过去很久不再需要的请求发出去\r\n> 2. 自动重连放弃请求，这种模式更安全，但对于用户来说就意味着不确定的丢包情况\r\n> \r\n> 综上，不如把异常情况抛出，让用户知晓后去处理好再来跑交易，本来实盘交易机器的网络连接就必须保证稳定性。\r\n\r\n处理方案代码能贴出来的话，可以有个选择，直接抛出异常只能不断重启，并不有助于问题的解决"
      }
    ]
  },
  {
    "number": 1910,
    "title": "请问现在那个版本支持simnow对接测试(2.0.3好像不支持)，急需测试环境，谢谢",
    "created_at": "2019-07-09T12:26:19Z",
    "closed_at": "2019-07-10T02:02:57Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1910",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Anaconda版本: 如Anaconda 18.12 Python 3.7 64位\r\n* vn.py版本: 如v2.0发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1910/comments",
    "author": "yuanjh6",
    "comments": [
      {
        "user": "lipan0722",
        "created_at": "2019-07-09T13:12:16Z",
        "body": "我用的是1.9.2LTS版本，前几天可以使用，今晚开始不能登录了，报：CTP客户端认证失败。应该是simnow做过调整，只有等等看了。"
      },
      {
        "user": "yuanjh6",
        "created_at": "2019-07-09T13:14:31Z",
        "body": "> 我用的是1.9.2LTS版本，前几天可以使用，今晚开始不能登录了，报：CTP客户端认证失败。应该是simnow做过调整，只有等等看了。\r\n\r\n1.9.2有些接口不能用了，比如火币等的，用的人少估计以后未必维护，所以还是希望以后以2.0后版本为准，2.03之前看有人讨论的不支持，最新的还不知道，如果支持的化可以merge下，否则在想其他办法，实在不行了也只有回退到1.9.2"
      },
      {
        "user": "vnpy",
        "created_at": "2019-07-10T02:02:57Z",
        "body": "2.0.5，ctp_gateway，支持第一套环境的2、3两组服务器，以及第二套环境"
      }
    ]
  },
  {
    "number": 1852,
    "title": "macos安装make install错误",
    "created_at": "2019-06-19T10:21:06Z",
    "closed_at": "2019-06-20T04:12:21Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1852",
    "body": "## 环境\r\n\r\n* 操作系统: macos 10.14.4\r\n\r\n* Anaconda版本:Python 3.7.3 (default, Mar 27 2019, 16:54:48) \r\n[Clang 4.0.1 (tags/RELEASE_401/final)] :: Anaconda, Inc. on darwin\r\n\r\n* vn.py版本: 如v2.0.4\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\nRequirement already up-to-date: wheel in /Users/hucong/anaconda3/lib/python3.7/site-packages (0.33.4)\r\n/tmp /Users/hucong/python/vnpy\r\n./install.sh: line 13: wget: command not found\r\ntar: Error opening archive: Failed to open 'ta-lib-0.4.0-src.tar.gz'\r\n./install.sh: line 15: cd: ta-lib: No such file or directory\r\n./install.sh: line 16: ./configure: No such file or directory\r\nmake: *** No targets specified and no makefile found.  Stop.\r\nmake: *** No rule to make target `install'.  Stop.\r\n/Users/hucong/python/vnpy\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1852/comments",
    "author": "hucs2542",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-06-20T01:08:40Z",
        "body": "用的是install_osx.sh？"
      },
      {
        "user": "hucs2542",
        "created_at": "2019-06-20T02:11:41Z",
        "body": "@vnpy 是的"
      },
      {
        "user": "newencn",
        "created_at": "2019-06-20T03:33:44Z",
        "body": "```\r\n\"./install.sh: line 13: wget: command not found\"\r\nPls install the wget tools use command \"brew install wget\" firstly\r\n```\r\n"
      },
      {
        "user": "hucs2542",
        "created_at": "2019-06-20T04:12:14Z",
        "body": "@newencn 谢谢"
      }
    ]
  },
  {
    "number": 1835,
    "title": "回测数据读取",
    "created_at": "2019-06-15T09:01:46Z",
    "closed_at": "2019-07-02T14:50:55Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1835",
    "body": "现在的模式是从数据库中读取数据，再直接发去回测计算。这里有个缺点就是数据量大的话会很慢，从数据库中要读很久了。（比如N年的tick）\r\n从性能和效率的角度来考虑应该分开。一个线程专门来从数据库中读取数据放到队列，队列数据少于1万条就继续读。读完标记完成。\r\n计算方面就可以不停从队列中提，直到为空并且标记完成为止。\r\n从各种数据量来说，这个模式肯定综合性能较佳。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1835/comments",
    "author": "viponedream",
    "comments": [
      {
        "user": "viponedream",
        "created_at": "2019-06-15T09:05:50Z",
        "body": "如果回测是外汇，24小时的tick,  简直要死的心都有。"
      },
      {
        "user": "vnpy",
        "created_at": "2019-06-16T06:45:48Z",
        "body": "几个方案吧：\r\n1. 直接分段读取，分段回放（比较简单）\r\n2. 独立线程，预热读取完成后就边回放边读取（在Python中因为GIL，线程间来回切换可能会导致回测更慢）\r\n3. 独立进程，专门负责和数据库的请求和数据转发工作（之前1.9.2中我们提供过的回测目录下的HistoryDataServer）模式，但需要进一步扩展\r\n\r\n综上来看，2没啥意义，1最简单，可以考虑后续快速支持下，3最彻底但需要投入精力做相当的开发\r\n\r\n\r\n如果有兴趣的话欢迎贡献代码~\r\n\r\n另外除非你是EBS Reuters上的原始ECN行情，否则经纪商那边来的外汇市场的tick回测意义不大。。。"
      },
      {
        "user": "aslan9",
        "created_at": "2019-06-20T02:27:05Z",
        "body": "方案1可以单独线程维护数据读取，读完一段backtester可以回放，然后异步继续读取下一段，把io和cpu的消耗通过异步来并行化"
      }
    ]
  },
  {
    "number": 1824,
    "title": "CTP 结算单过长时，CTP api 返回结算单错误",
    "created_at": "2019-06-12T14:18:25Z",
    "closed_at": "2019-07-19T13:46:53Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1824",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu18.04\r\n* vn.py版本: v2.0.3\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## bug 原因\r\nvnpy/api/ctp/vnctp/vnctptd/vnctptd.cpp 4526行\r\n对 `CThostFtdcSettlementInfoField.Content` 调用了 `toUtf` 函数，\r\n```\r\ndata[\"Content\"] = toUtf(task_data->Content);\r\n```\r\n其中 `Content` 字段的类型为 `char[500]`\r\n实盘中，有时结算单过长，ctp 会将结算单拆分为多个字符串，多次回调 `OnRspQrySettlementInfo` 函数返回给用户\r\n但由于结算单以 GBK 编码存储，一个汉字占多个字节，可能某一个汉字会在两次函数回调中，各返回一半（比如一个三字节的汉字，第一次回调的`Content[499]`返回第一个字节，第二次回调的`Content[0...1]`返回第二三个字节），这种情况下 `toUtf` 可能会无法 decode GBK 字符串，而返回空串\r\n\r\n## 解决方法\r\n没想到什么特别好的解决方案，我的做法直接不转换丢给上层，在gateway层处理或丢给用户自行解码\r\n即，将 4526 行改为\r\n```\r\ndata[\"Content\"] = bytes(task_data->Content);\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1824/comments",
    "author": "lostleaf",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-07-19T13:46:53Z",
        "body": "非常感谢，确实算是一个非常有用的经验，后续遇到问题结算单问题的用户可以参考这种解决方案。\r\n\r\n但考虑到：\r\n\r\n1. 结算单过长的情况比较少见\r\n2. 使用vn.py的用户需要输出和查看结算单的情况更加少见\r\n\r\n因此就不在项目代码中进行修改了，需要的用户请自行在自己的代码中修改吧。"
      }
    ]
  },
  {
    "number": 1760,
    "title": "HBDM websocket网络断开",
    "created_at": "2019-05-29T12:00:47Z",
    "closed_at": "2019-06-10T06:48:02Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1760",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Anaconda版本: 如Anaconda 18.12 Python 3.7 64位\r\n* vn.py版本: 如v2.0.3 发行版（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n一直能收到websocekt数据\r\n\r\n## 实际程序行为\r\n在连接5-20分钟之后，会只能收到ping数据，而收不到行情数据。\r\n并且因为连接是好的，不会自动重连。导致策略无法触发onBar\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1760/comments",
    "author": "eachout",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-05-30T01:18:18Z",
        "body": "请用SS翻墙或者使用香港阿里云"
      },
      {
        "user": "eachout",
        "created_at": "2019-05-30T06:33:59Z",
        "body": "已SS翻墙， 并在连接时填了代理。"
      },
      {
        "user": "vnpy",
        "created_at": "2019-05-30T13:04:37Z",
        "body": "中间有出现过Websocket断开重连的记录吗？"
      },
      {
        "user": "eachout",
        "created_at": "2019-05-31T09:39:09Z",
        "body": "重连了，然后就没反应了。感觉是没有重新订阅。"
      },
      {
        "user": "eachout",
        "created_at": "2019-05-31T11:55:53Z",
        "body": "我在硅谷机房，没开SS直连跑了半小时，一样的结果。"
      },
      {
        "user": "yuanjh6",
        "created_at": "2019-05-31T16:15:53Z",
        "body": "我跑一天没问题，2-3天则需要重新订阅，怀疑时火币的问题，火币没有推送了"
      },
      {
        "user": "vnpy",
        "created_at": "2019-06-02T04:46:12Z",
        "body": "我们尝试重现下情况"
      },
      {
        "user": "vnpy",
        "created_at": "2019-06-10T06:48:02Z",
        "body": "增加了断线重连后的行情的自动重新订阅"
      }
    ]
  },
  {
    "number": 1665,
    "title": "ctp_se ubuntu 编译wheel报错 ",
    "created_at": "2019-05-06T02:47:42Z",
    "closed_at": "2019-05-12T15:17:05Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1665",
    "body": "## 环境\r\n\r\n* 操作系统:Ubuntu 18.04\r\n* Anaconda版本: 如Anaconda 18.12 Python 3.7 64位\r\n* vn.py版本: ctp_se下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n安装成功\r\n\r\n## 实际程序行为\r\n    /home/vnpy/anaconda3/compiler_compat/ld: cannot find -lthosttraderapi\r\n    collect2: error: ld returned 1 exit status\r\n    error: command 'gcc' failed with exit status 1\r\n\r\n\r\n## 重现步骤\r\nbash install.sh\r\n\r\n安装２．ｘ不会报错　\r\n\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1665/comments",
    "author": "somewheve",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-05-06T07:54:10Z",
        "body": "ctp_se分支尚未完成对ubuntu的支持"
      },
      {
        "user": "somewheve",
        "created_at": "2019-05-06T09:16:23Z",
        "body": "那大概要等多久?"
      }
    ]
  },
  {
    "number": 1627,
    "title": "隔夜模式、开盘价成交，如何在vn.py中实现",
    "created_at": "2019-04-24T01:38:36Z",
    "closed_at": "2019-04-30T06:30:52Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1627",
    "body": "在隔夜模式下，新交易日的开盘价是在第一个tick到达时才能知道吧，这种情况下如何在实盘和回测中怎么实现啊？\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1627/comments",
    "author": "legendaryT",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-04-24T01:53:56Z",
        "body": "这种隔夜立即成交的情况，回测和实盘需要区别处理了：\r\n* 回测：在前一天最后一根K线直接下单，无论限价单、停止单，价格足够远保证能触发就行\r\n* 实盘：在策略on_start函数里处理，启动策略时立即将昨日收盘潜在的委托下出去，并在集合竞价开始后才启动你的策略"
      }
    ]
  },
  {
    "number": 1625,
    "title": "富途接口断线重连功能",
    "created_at": "2019-04-23T14:24:17Z",
    "closed_at": "2019-04-30T06:30:35Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1625",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 10\r\n* Anaconda版本: 如Anaconda3 Python 3.7 64位\r\n* vn.py版本: 2.02\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n如因网络连接等原因导致富途接口断开，等网络恢复后FutuOpenD会恢复重连，但vnpy中不再更新行情。如何在futuGateway中实现断线重连功能？\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1625/comments",
    "author": "Rongnian",
    "comments": [
      {
        "user": "loadatom",
        "created_at": "2019-04-24T02:40:38Z",
        "body": "是订阅了什么数据？OpenD用的哪个版本？"
      },
      {
        "user": "vnpy",
        "created_at": "2019-04-24T03:00:43Z",
        "body": "请富途团队的人做了测试，无法重现，检查下使用的是否是最新版本吧，然后可以加富途的这个群和他们核心团队交流：108534288"
      },
      {
        "user": "Rongnian",
        "created_at": "2019-04-24T05:50:12Z",
        "body": "> 请富途团队的人做了测试，无法重现，检查下使用的是否是最新版本吧，然后可以加富途的这个群和他们核心团队交流：108534288\r\n\r\nFutuOpenD，futu-api和vnpy都是用的最新版本。\r\nFutuOpenD是能断线重连的，没有问题。但vnpy已经订阅的合约不再更新行情，如果从主界面中输入一个新合约，新合约还是能正常推送行情的。这说明问题不在FutuOpenD或者futu-api上，而是vnpy的futuGateway中没有处理OpenQuoteContext断线重连后发生的一些变化吧，例如OpenQuoteContext在重连后会进行一次重新订阅，生成新的订阅list，这个操作是否会导致Gateway中注册的行情回调函数失效？\r\n这个问题和现象我观察了很久，相信以后还会有人遇到。富途量化的群里面响应都很慢，一般回答问题也回答不到点上，建议vnpy团队和富途联系是否能改进这个问题？\r\n\r\n如果无法改进也无妨，除了重启程序，是否有其他方式能够恢复行情订阅？"
      },
      {
        "user": "Rongnian",
        "created_at": "2019-04-24T12:14:04Z",
        "body": "> 是订阅了什么数据？OpenD用的哪个版本？\r\n\r\n订阅的A股指数数据。OpenD用的是1.09版"
      },
      {
        "user": "FutunnOpen",
        "created_at": "2019-04-25T01:50:52Z",
        "body": "hello，可以加我QQ看看 82317916"
      },
      {
        "user": "vnpy",
        "created_at": "2019-04-30T06:30:35Z",
        "body": "确认由FutuOpenD内部修复"
      },
      {
        "user": "Rongnian",
        "created_at": "2019-05-14T08:54:54Z",
        "body": "> hello，可以加我QQ看看 82317916\r\n\r\n请问修复完了吗？"
      }
    ]
  },
  {
    "number": 1594,
    "title": "新版本的LogEngine的单例模式无效",
    "created_at": "2019-04-13T14:16:58Z",
    "closed_at": "2019-05-01T14:53:31Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1594",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Anaconda版本: 如Anaconda 18.12 Python 3.7 64位\r\n* vn.py版本: 如v2.0发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\nBug\r\n\r\n## 预期程序行为\r\n\r\nee = EventEngine()\r\nme = MainEngine(ee)\r\nle = LogEngine(main_engine=me, event_engine=ee)\r\nle.add_console_handler()\r\nle.info(u'启动行情记录运行子进程')\r\n\r\n\r\n## 实际程序行为\r\n\r\n2019-04-13 22:14:50,522  INFO: 启动行情记录运行子进程\r\n2019-04-13 22:14:50,522  INFO: 启动行情记录运行子进程\r\n2019-04-13 22:14:50,522  INFO: 启动行情记录运行子进程\r\n\r\n是否可以回到了老版的LogEngine\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1594/comments",
    "author": "mumuwoyou",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-04-14T01:49:28Z",
        "body": "无人值守模式我们将在后续版本中提供，不再采用之前的单例方法了"
      }
    ]
  },
  {
    "number": 1515,
    "title": "社区无法注册呀",
    "created_at": "2019-03-22T14:20:27Z",
    "closed_at": "2019-03-25T06:44:29Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1515",
    "body": "微信扫描后进入“绑定第三方账户”界面输入邮箱、用户名、密码后点注册，然后密码清空，没有后续动作。没账号社区也发不了求助，只能在这里问了。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1515/comments",
    "author": "zzangpeng",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-03-25T03:51:49Z",
        "body": "我们在处理中"
      },
      {
        "user": "vnpy",
        "created_at": "2019-03-25T06:44:29Z",
        "body": "已经修复了"
      }
    ]
  },
  {
    "number": 1508,
    "title": "server 2008启动vntrader 连接bitmex的REAL和TESTNTE有问题，win7就没有问题",
    "created_at": "2019-03-21T00:21:06Z",
    "closed_at": "2019-03-25T03:46:32Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1508",
    "body": "## 环境\r\n\r\n* 操作系统: 如Server 2008 64 和 windows 7 64\r\n* Anaconda版本: 如Anaconda 18.12 Python 3.7.2 64位\r\n* vn.py版本: 如v2.0发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\nserver和win7都一样正常连接\r\n\r\n## 实际程序行为\r\nserver不正常：连接bitmex（ctp连接正常）\r\n   REST API启动成功\r\n   触发异常，状态码：<class 'websocket._exceptions.WebSocketProxyException'>，信息：[WinError 10054] 远程主机强迫关闭了一个现有的连接。\r\n connect_bitmex.json中 proxy_host 和 proxy_port 用的是香港服务器IP和端口\r\nwin7正常:\r\n  REST API启动成功\r\n  Websocket API连接成功\r\n   Websocket API验证授权成功\r\n  connect_bitmex.json中 proxy_host 和 proxy_port 用的是    \r\n  \"proxy_host\": \"127.0.0.1\",\r\n   \"proxy_port\": 1080\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1508/comments",
    "author": "followdao",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-03-21T01:10:34Z",
        "body": "用的是2.0版本还是1.9.2版本的？\r\n\r\n如果是2.0版本，走代理服务器需要安装shadowsocks"
      },
      {
        "user": "followdao",
        "created_at": "2019-03-21T01:28:58Z",
        "body": "陈老师，我这边是2.0.1-DEV版本，在香港云服务器运行，也需要再安装shadowsocks吗？"
      },
      {
        "user": "vnpy",
        "created_at": "2019-03-21T14:48:03Z",
        "body": "你的情况，proxy_host和proxy_port都直接留空，不要输入任何东西就行"
      },
      {
        "user": "followdao",
        "created_at": "2019-03-23T01:55:30Z",
        "body": "非常感谢陈老师,biemex正常连接了"
      }
    ]
  },
  {
    "number": 1506,
    "title": "请问大神，我准备连接实盘了",
    "created_at": "2019-03-20T11:10:08Z",
    "closed_at": "2019-03-22T01:16:35Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1506",
    "body": "\r\n但是期货公司的服务器\r\n行情地址和交易地址都是一样的\r\n但是有个啥port = 41213和port=41205，还有个type = 0,type = 1我怎么来连接呢\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1506/comments",
    "author": "buermen",
    "comments": [
      {
        "user": "buermen",
        "created_at": "2019-03-20T14:33:42Z",
        "body": "`<hq>\r\n<server server=\"180.166.183.113\" port=\"41213\" type=\"0\"/>\r\n</hq>\r\n<trade>\r\n<server server=\"180.166.183.113\" port=\"41205\" type=\"1\"/>\r\n</trade>`\r\n"
      },
      {
        "user": "buermen",
        "created_at": "2019-03-20T14:43:07Z",
        "body": "只输入地址的话会提示错误：\r\nInvalid port: No error\r\n"
      },
      {
        "user": "vnpy",
        "created_at": "2019-03-21T01:12:16Z",
        "body": "你这是什么交易通道的？看两个端口号应该是CTP，直接在服务器地址里写\r\n\r\n```\r\ntcp://180.166.183.113:41213\r\ntcp://180.166.183.113:41205\r\n\r\n```\r\n就行"
      },
      {
        "user": "buermen",
        "created_at": "2019-03-21T02:19:01Z",
        "body": "> 你这是什么交易通道的？看两个端口号应该是CTP，直接在服务器地址里写\r\n> \r\n> ```\r\n> tcp://180.166.183.113:41213\r\n> tcp://180.166.183.113:41205\r\n> ```\r\n> 就行\r\n\r\n您好，我这样加了之后登陆提示ctp登陆不合法，是还需要向期货公司获取什么吗"
      },
      {
        "user": "buermen",
        "created_at": "2019-03-21T02:22:43Z",
        "body": "> 你这是什么交易通道的？看两个端口号应该是CTP，直接在服务器地址里写\r\n> \r\n> ```\r\n> tcp://180.166.183.113:41213\r\n> tcp://180.166.183.113:41205\r\n> ```\r\n> 就行\r\n是ctp的"
      },
      {
        "user": "vnpy",
        "created_at": "2019-03-21T14:46:04Z",
        "body": "请检查你的brokerID是否填对了，如果还是不行可能期货公司开了接入验证，就要申请product_info和auth_code了"
      },
      {
        "user": "gwall2005",
        "created_at": "2019-03-21T14:49:39Z",
        "body": "帐号没开通ctp吧"
      },
      {
        "user": "buermen",
        "created_at": "2019-03-21T22:47:19Z",
        "body": "> 请检查你的brokerID是否填对了，如果还是不行可能期货公司开了接入验证，就要申请product_info和auth_code了\r\n\r\nID账号密码这些没错，好的，谢谢，我向期货公司问下"
      }
    ]
  },
  {
    "number": 1492,
    "title": "ctp接口login error",
    "created_at": "2019-03-18T01:14:11Z",
    "closed_at": "2019-03-21T14:52:31Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1492",
    "body": "## 环境\r\n\r\n* 操作系统:Ubuntu 16.04\r\n* Anaconda版本: Anaconda3-5.3.1 Python 3.7 64位\r\n* vn.py版本: 如v2.0.1DEV\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\nGatewayManager: connecting [demo]\r\nInvalid port: Success\r\nRuntimeError: Unable to cast Python instance to C++ type (compile in debug mode for details)\r\n\r\nAt:\r\n  /home/jaden/anaconda3/envs/py37/lib/python3.7/site-packages/vnpy-2.0-py3.7-linux-x86_64.egg/vnpy/gateway/ctp/ctp_gateway.py(337): login\r\n  /home/jaden/anaconda3/envs/py37/lib/python3.7/site-packages/vnpy-2.0-py3.7-linux-x86_64.egg/vnpy/gateway/ctp/ctp_gateway.py(239): onFrontConnected\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n程序安装后调用ctp_gateway的CtpMdApi.login()函数报错\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1492/comments",
    "author": "JadenGu0",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-03-18T01:52:05Z",
        "body": "1. GatewayManager我猜测是你自己写的一个组件模块？\r\n2. 这个报错的意思，是你在登录请求中输入错了字段类型，最常见的是brokerid应该是int而非str，你也可以检查下其他的字段"
      },
      {
        "user": "JadenGu0",
        "created_at": "2019-03-18T02:19:43Z",
        "body": "请问接口中的auth code 和product info是必填字段吗"
      },
      {
        "user": "JadenGu0",
        "created_at": "2019-03-18T05:30:31Z",
        "body": "@vnpy   经测试发现导致问题的原因和1477的bug一样，import ctp时出错，但程序未抛出异常"
      },
      {
        "user": "vnpy",
        "created_at": "2019-03-19T01:37:37Z",
        "body": "不是必填的，我们测试下ubuntu import这个问题"
      }
    ]
  },
  {
    "number": 1480,
    "title": "中信证券行情使用飞创证券的行情，查询510050提示接口不存在",
    "created_at": "2019-03-13T10:11:05Z",
    "closed_at": "2019-03-14T00:54:59Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1480",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: 如Anaconda2\r\n* vn.py版本: 如v1.92\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n中信证券的行情使用飞创证券的行情，连接后，查询510050 ETF50合约，提示接口不存在，optionMaster初始化时，提示：找不到标的物合约510050，请问该怎么进行配置呢？\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1480/comments",
    "author": "xycfree",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-03-14T00:54:59Z",
        "body": "中信证券的这个接口没有适配optionMaster模块，后续2.0可能会基于顶点来开发"
      }
    ]
  },
  {
    "number": 1479,
    "title": "vnpy2.0不能订阅标准套利合约",
    "created_at": "2019-03-13T08:56:22Z",
    "closed_at": "2019-03-14T01:52:57Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1479",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7 64bit\r\n* Anaconda版本: VNConda Python 3.7 64位\r\n* vn.py版本: v2.0发行版\r\n\r\n## Issue类型\r\nQuestion\r\n\r\n## 预期程序行为\r\n可以订阅大商所和郑商所的标准套利合约行情\r\n\r\n## 实际程序行为\r\n安装vnpy2.0后，无法订阅大商所和郑商所的标准套利合约，在合约查询中也查询不到相关合约。但是我在交易面板输入完相关信息，点委托按钮后，是可以进行委托下单的，就是没法标准套利合约订阅行情。\r\n我用的行情、交易CTP服务器地址是从快期上查询来的，在快期上可以看到标准套利合约行情，也可以交易。也就是说服务器是支持标准套利合约的。\r\n\r\n## 重现步骤\r\n在交易面板，代码输入如SPD SR905&SR909，回车后没有反应。查询合约面板中也查询不到标准套利合约。\r\n之前在vnpy1.x版本中是可以订阅套利合约行情的的，为什么在vnpy2.0就不行了呢？\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1479/comments",
    "author": "chdl21cn",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-03-14T01:52:57Z",
        "body": "已修改，支持价差合约"
      }
    ]
  },
  {
    "number": 1469,
    "title": "请问新版本的ctp会有python2版本的吗",
    "created_at": "2019-03-11T11:48:12Z",
    "closed_at": "2019-03-11T14:15:57Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1469",
    "body": "您好，感谢大佬开源\r\n我使用的vnpy是1.5版本的\r\n请问会有支持以前的老版本的新ctp吗\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1469/comments",
    "author": "buermen",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-03-11T14:15:57Z",
        "body": "v2.0中目前的CTP版本就是不支持强制验证的老版本，后续等新规实施后再升级上去。"
      }
    ]
  },
  {
    "number": 1461,
    "title": "dual_thrust_strategy 行情订阅失败",
    "created_at": "2019-03-08T15:14:02Z",
    "closed_at": "2019-03-13T02:23:31Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1461",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10或者Ubuntu 18.04\r\n* Anaconda版本: 如Anaconda 18.12 Python 3.7 64位\r\n* vn.py版本: 如v2.0发行版或者dev branch 20190101（下载日期）\r\n\r\n## Issue类型\r\nBug\r\n\r\ndual_thrust_strategy加载初始化后显示行情订阅失败, 查看代码如下:\r\n            # Subscribe market data\r\n            contract = self.main_engine.get_contract(strategy.vt_symbol)\r\n            if contract:\r\n                req = SubscribeRequest(\r\n                    symbol=contract.symbol, exchange=contract.exchange)\r\n                self.main_engine.subscribe(req, contract.gateway_name)\r\n            else:\r\n                self.write_log(f\"行情订阅失败，找不到合约{strategy.vt_symbol}\", strategy)\r\n\r\n订阅行情依赖于main_engine.get_contract方法,但是main_engine并没有实现该方法,所以报错.\r\n同时发现还有很多依赖于main_engine来实现的方法都没有实现, 比如 \r\nmain_engine.get_order\r\nmain_engine.cancel_limit_order\r\nmain_engine.sendmail\r\n这些方法有些在OmsEngine和EmailEngine里实现了,但是调用方法不对.\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1461/comments",
    "author": "cxjpower",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-03-11T14:23:18Z",
        "body": "请提供报错截图？订阅行情失败可能是因为你还没有连接上CTP接口获取到合约信息。\r\n\r\nget_contract, get_order, sendmail等函数是在对应引擎中实现，并通过对象方法绑定的方式注入到main_engine中的"
      },
      {
        "user": "cxjpower",
        "created_at": "2019-03-12T04:02:20Z",
        "body": "我对2.0架构还没理解透,定位错误,\r\n订阅行情失败是因为vt_symbol错误, 我在cta_strategy_setting.json里手动把vt_symbol的值改成正确的格式(加上交易所代码)就成功了,所以应该是strategy初始化时保存的vt_symbol不对,是属于操作错误. 不过这里输入的合约号要加交易所代码也很怪, 建议加个后台转换的功能."
      },
      {
        "user": "vnpy",
        "created_at": "2019-03-13T02:23:31Z",
        "body": "2.0后为了保持统一性，所有的vt_symbol都是带交易所后缀的了，慢慢就习惯了"
      }
    ]
  },
  {
    "number": 1429,
    "title": "CTP不合法的登录",
    "created_at": "2019-03-04T02:22:08Z",
    "closed_at": "2019-03-04T03:50:04Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1429",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0\r\n* vn.py版本: v1.9.2LTS\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n通过`python run.py`进入vntrader的GUI界面，然后点击连接CTP，应该会成功连接到行情\r\n## 实际程序行为\r\n行情和交易服务器都连接成功，数据库也成功了，但是显示不合法的登录，错误代码3\r\nvnpy那个文件夹下的CTP_connet.json应该没什么问题\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1429/comments",
    "author": "LimingFang",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-03-04T03:50:04Z",
        "body": "请确保你的账号密码正确，第一次注册的SimNow需要修改密码后才能使用"
      },
      {
        "user": "LimingFang",
        "created_at": "2019-03-04T11:17:46Z",
        "body": "账号就是investorid,密码也是对的，simnow也是可以登录的，我第一次下载vnpy后成功登录过的，现在第二次安装后不行了"
      },
      {
        "user": "LimingFang",
        "created_at": "2019-03-04T11:18:11Z",
        "body": "@vnpy \r\n"
      },
      {
        "user": "vnpy",
        "created_at": "2019-03-05T02:29:43Z",
        "body": "那么请检查下你的连接服务器地址是否正确了"
      },
      {
        "user": "LimingFang",
        "created_at": "2019-03-05T06:33:25Z",
        "body": "我example/Vntrader的CTP_connect.json配置如下：\r\n{\r\n\"brokerID\":\"9999\",\"mdAddress\":\"tcp://218.202.237.33:10012\",\"tdAddress\":\"tcp://218.202.237.33:10002\",\r\n\"userID\":\"084109\",\"password\":（打码）\r\n}"
      },
      {
        "user": "vnpy",
        "created_at": "2019-03-06T01:22:05Z",
        "body": "你的brokerid和服务器地址是第三组应该都i没问题，建议先尝试其他组服务器，如果还是不行就重新注册个账号试试\r\n"
      }
    ]
  },
  {
    "number": 1386,
    "title": "请教作者大大，如果我需要在策略的onbar函数中使用for遍历列表",
    "created_at": "2019-02-19T01:02:40Z",
    "closed_at": "2019-02-25T02:30:06Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1386",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\nQuestion \r\n## 预期程序行为\r\n首先感谢您的开源，我从去年发现到vnpy，编程基础为0，然后自己开始慢慢磕磕碰碰一点一点研究，感谢您的良苦用心，一点基础都没我一个一个文件挨着看居然看懂了，然后慢慢开始写自己的策略，说出来您可能不信，我策略主体是在ctabacktesting.py里面完成的，因为我第一次发现这里可以打印出bar。。\r\n\r\n## 实际程序行为\r\n最近策略写差不多了，准备全部写进策略里面了，然后首先就发现一个问题。。在策略里面的onbar函数里，使用for遍历列表会有大问题。。\r\n```\r\nself.closeArray.append(bar.close)\r\n        array = pd.Series(self.closeArray)\r\n        cumsum = array.cummax()\r\n        compare = cumsum - array\r\n        print compare\r\n        for i in range(len(compare)):\r\n            if compare[i] > 5:\r\n                self.daxiao1.append(i)\r\n        if not self.daxiao1:\r\n            return\r\n```\r\n我这样写，一千多根bar，打印self.daxiao1有35万多个，我知道原因是因为事件引擎，但苦于编程能力一直没找到解决办法，\r\n您看到的时候能否帮我指导一个思路吗，因为我策略里面必须遍历收盘价列表，但是我又不能确定我收盘价需要多少根bar\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1386/comments",
    "author": "buermen",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-02-19T06:31:54Z",
        "body": "1. 这个写法肯定是不好的，pandas相关的运算还是用pandas自身的矩阵计算比较好\r\n2. 请描述下策略逻辑，感觉你的策略是多标的同时计算的，这种模式下可能不太适合用ctaStrategy模块，推荐用RQAlpha或者Zipline之类的工具"
      },
      {
        "user": "buermen",
        "created_at": "2019-02-19T11:04:13Z",
        "body": "> 1. 这个写法肯定是不好的，pandas相关的运算还是用pandas自身的矩阵计算比较好\r\n> 2. 请描述下策略逻辑，感觉你的策略是多标的同时计算的，这种模式下可能不太适合用ctaStrategy模块，推荐用RQAlpha或者Zipline之类的工具\r\n\r\n感谢您的回复，我就是想找到收盘价回撤大于一个值的那些bar，为此需要遍历收盘价列表，但是在onbar函数里面不能用for循环，我想到的解决方法最终都需要遍历一个列表，所以就卡在这里了，能否麻烦您提示下我怎么写才能遍历呢\r\n\r\n"
      },
      {
        "user": "xldistance",
        "created_at": "2019-02-24T00:17:40Z",
        "body": "self.daxiao1Array[0:self.buffersize-1] = self.daxiao1Array[1:self.buffersize] \r\nself.daxiao1Array[-1]= compare[i]"
      },
      {
        "user": "vnpy",
        "created_at": "2019-02-25T02:30:06Z",
        "body": "类似楼上的写法，Pandas的DataFrame有比较取值的功能，看看《Python数据分析》这本书吧"
      }
    ]
  },
  {
    "number": 1380,
    "title": "ImportError: No module named strategyAtrRsi",
    "created_at": "2019-02-14T03:38:13Z",
    "closed_at": "2019-03-07T06:58:40Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1380",
    "body": "## 环境\r\n\r\n* 操作系统: MacOS Mojave 10.14.1 (18B75)\r\n* Anaconda版本: 如Anaconda 4.6.3 Python 2.7.15 :: Anaconda, Inc.\r\n* vn.py版本: v1.9.2 使用 master branch 20190213 进行源代码安装的\r\n\r\n## Issue类型\r\n\r\nQuestion\r\n\r\n## 预期程序行为\r\n\r\n预期使用 `import vnpy.trader.app.ctaStrategy.strategy as cta` 可以正常引入包\r\n\r\n## 实际程序行为\r\n\r\n报错：提示 `/anaconda3/envs/Python27/lib/python2.7/site-packages/vnpy/trader/app/ctaStrategy/strategy/__init__.py` 文件无法引入相同目录下的其他策略文件，如下：\r\n\r\n```txt\r\n--------------------\r\nFailed to import strategy file strategyAtrRsi:\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/site-packages/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 20, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\nImportError: No module named strategyAtrRsi\r\n--------------------\r\nFailed to import strategy file strategyBollChannel:\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/site-packages/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 20, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\nImportError: No module named strategyBollChannel\r\n--------------------\r\nFailed to import strategy file strategyDoubleMa:\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/site-packages/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 20, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\nImportError: No module named strategyDoubleMa\r\n--------------------\r\nFailed to import strategy file strategyMultiTimeframe:\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/site-packages/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 20, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\nImportError: No module named strategyMultiTimeframe\r\n--------------------\r\nFailed to import strategy file strategyMultiSignal:\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/site-packages/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 20, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\nImportError: No module named strategyMultiSignal\r\n--------------------\r\nFailed to import strategy file strategyTurtleTrading:\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/site-packages/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 20, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\nImportError: No module named strategyTurtleTrading\r\n--------------------\r\nFailed to import strategy file strategyKingKeltner:\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/site-packages/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 20, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\nImportError: No module named strategyKingKeltner\r\n--------------------\r\nFailed to import strategy file strategyDualThrust:\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/site-packages/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 20, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\nImportError: No module named strategyDualThrust\r\n--------------------\r\nFailed to import strategy file strategyAtrRsi:\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/site-packages/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 20, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\nImportError: No module named strategyAtrRsi\r\n--------------------\r\nFailed to import strategy file strategyBollChannel:\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/site-packages/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 20, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\nImportError: No module named strategyBollChannel\r\n--------------------\r\nFailed to import strategy file strategyDoubleMa:\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/site-packages/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 20, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\nImportError: No module named strategyDoubleMa\r\n--------------------\r\nFailed to import strategy file strategyMultiTimeframe:\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/site-packages/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 20, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\nImportError: No module named strategyMultiTimeframe\r\n--------------------\r\nFailed to import strategy file strategyMultiSignal:\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/site-packages/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 20, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\nImportError: No module named strategyMultiSignal\r\n--------------------\r\nFailed to import strategy file strategyTurtleTrading:\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/site-packages/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 20, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\nImportError: No module named strategyTurtleTrading\r\n--------------------\r\nFailed to import strategy file strategyKingKeltner:\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/site-packages/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 20, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\nImportError: No module named strategyKingKeltner\r\n--------------------\r\nFailed to import strategy file strategyDualThrust:\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/site-packages/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 20, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\nImportError: No module named strategyDualThrust\r\n```\r\n\r\n## 重现步骤\r\n\r\n我在 anaconda python 2.7x 和本机自带的 python 都尝试了，问题相同。\r\n\r\n让朋友在其 Windows 电脑下进行相同尝试没有问题。\r\n\r\n看了 issues 里面其他的 `ImportError: No module named XXX` 问题貌似都与我的不太相同， 请大神指点~\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1380/comments",
    "author": "justinchou",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-02-15T03:25:55Z",
        "body": "我估计应该和Mac的路径或者环境变量有关，我这边用Windows机器试了下也没问题，推荐尝试的解决方法：\r\n1. 安装ta-lib\r\n2. 换anaconda2 5.2.0 Py2.7\r\n3. 换回到windows机器"
      },
      {
        "user": "justinchou",
        "created_at": "2019-02-15T09:21:28Z",
        "body": "昨天尝试了替代方案：使用 miniconda 替代 anaconda.\r\n\r\n安装 miniconda 之后，要使 miniconda 生效：\r\n\r\n```bash\r\necho \". /Users/admin/miniconda2/etc/profile.d/conda.sh\" >> ~/.bash_profile\r\n# 增加 miniconda 的路径到 PATH 路径最前\r\nsource ~/.bash_profile\r\n```\r\n\r\n1. 创建虚拟环境：`conda create -n py27 python=2.7`\r\n2. 切换环境：`conda activate py27`\r\n3. 检查环境是否切换成功：\r\n\r\n```bash\r\nconda --version\r\npython --version\r\npip --version\r\nwhich conda\r\nwhich python\r\nwhich pip\r\n```\r\n\r\n4. 安装依赖：\r\n\r\n```bash\r\nbrew install qt pyqt ta-lib\r\nconda install matplotlib spyder pyqt QtPy future pymongo\r\npip install pandas numpy ta-lib bs4 tushare vnpy\r\n```\r\n"
      },
      {
        "user": "shiniantianlang",
        "created_at": "2019-06-11T09:30:46Z",
        "body": "试试在`vnpy\\trader\\app\\ctaStrategy\\strategy\\__init__.py`文件中`import sys`，并在`path = os.path.abspath(os.path.dirname(__file__))`下面添加一行`sys.path.append(path)`\r\n"
      }
    ]
  },
  {
    "number": 1370,
    "title": "vntader重新启动后，策略启动，即使符合停止单挂单条件，没有停止单生成",
    "created_at": "2019-01-29T08:05:08Z",
    "closed_at": "2019-03-07T07:00:52Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1370",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.9发行版\r\n## Issue类型\r\n三选一：Bug\r\n## 预期程序行为\r\nvntrader重新启动后，启动策略，回放数据，如果符合停止单挂单条件，应该挂停止单\r\n\r\n## 实际程序行为\r\n启动策略，点击onInit回放数据，onStart启动策略，即使符合停止单挂单条件，没有停止单生成。\r\n\r\n分析代码，onInit(self) 回放数据，但是此时self.trading 为false，不会发出停止单；而onStart时候，不会重新回放启动。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1370/comments",
    "author": "BillyZhangGuoping",
    "comments": [
      {
        "user": "BillyZhangGuoping",
        "created_at": "2019-01-29T08:24:10Z",
        "body": "有简单解决方法就是把回放最后一个bar放在onStart里面跑，这时候self.trading 为True，允许挂单。\r\n1. 修改策略的onInit(self) ,回放不包括最后一个bar\r\ndef onInit(self):\r\n    \"\"\"初始化策略（必须由用户继承实现）\"\"\"\r\nself.writeCtaLog(u'%s策略初始化' % self.name)\r\ninitData = self.loadBar(self.initDays)\r\n    for bar in initData[：-1]:\r\n        self.onBar(bar)\r\n    self.putEvent()\r\n2.给onStart加入最后一个bar回放，\r\ndef onStart(self):\r\n    \"\"\"启动策略（必须由用户继承实现）\"\"\"\r\ninitData = self.loadBar(1)\r\n    bar = initData[-1]\r\n    self.onBar(bar)\r\n    self.writeCtaLog(u'%s策略启动' % self.name)    self.putEvent()"
      },
      {
        "user": "vnpy",
        "created_at": "2019-03-07T07:00:52Z",
        "body": "细粒度的挂撤单控制还是交给用户自行实现了"
      }
    ]
  },
  {
    "number": 1351,
    "title": "xtp demo 错误",
    "created_at": "2019-01-22T06:46:55Z",
    "closed_at": "2019-01-23T00:55:53Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1351",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 16.04\r\n* Anaconda版本: Anaconda Python 3.5m 64位\r\n* vn.py版本: 最新版本（20190122）\r\n\r\n## Issue类型\r\nBug\r\n\r\n##说明\r\n本人在将vnpy转换为python3.5的过程中，xtp部分编译通过后调试test文件夹下tradertest.py，调用函数setSoftwareCode报错，查看vnxtptrader.cpp后发现应使用setSoftwareKey；不知是否因xtp更新导致的异常，望指正，谢谢！\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1351/comments",
    "author": "lzd324",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-01-23T00:55:53Z",
        "body": "XTP的Python API之前由中泰证券技术团队负责维护，vn.py这边挺久没更新了，2.0后会做更新"
      }
    ]
  },
  {
    "number": 1343,
    "title": "关于mdapi的继承",
    "created_at": "2019-01-17T03:54:50Z",
    "closed_at": "2019-02-16T17:10:19Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1343",
    "body": "## 环境\r\n\r\n* 操作系统: ubuntu18.04\r\n* Anaconda版本: 如Anaconda 5.2.0 Python 2.7 64位\r\n* vn.py版本: 1.9.2\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n我发现CtpMdApi的onRtnDepthMarketData是接受ctp的行情的，但是他接受data处理data的方式并不是我想要的方式，然后我就重新写了一个类来继承CtpMdApi。\r\n然后发现程序运行的时候，总是卡在了继承类的初始化完成阶段。\r\n\r\n\r\n```\r\nclass CtpgatewayExtra(CtpGateway):\r\n    def __init__(self, eventEngine, gatewayName='CTP'):\r\n        super(CtpgatewayExtra, self).__init__(eventEngine, gatewayName)\r\n        self.mdApi = CtpMdApiExtra(self)  # 行情API\r\n        print (2)\r\n\r\nclass CtpMdApiExtra(CtpMdApi, TickBase):\r\n    def __init__(self, gateway):\r\n        super(CtpMdApiExtra, self).__init__(gateway)\r\n        print (1)\r\n    def onRtnDepthMarketData(self, data):\r\n        \"\"\"行情推送\"\"\"\r\n        # 这里是获得行情的第一入口\r\n        # 过滤尚未获取合约交易所时的行情推送\r\n        symbol = data['InstrumentID']\r\n        if symbol not in symbolExchangeDict:\r\n            return\r\n\r\n        last_tick = self.tickDict.get(symbol, None)\r\n\r\n        # 创建对象\r\n        tick = VttickdataExtra()\r\n        #以下为其他方法\r\n\r\n\r\n```\r\n## 实际程序行为\r\n程序，每次都只能print (1),都不会print(2)\r\n\r\n## 重现步骤\r\n我是先python setup.py安装了vnpy1.9.2.\r\n然后另外写了一个project来写我的代码，调用vnpy的相关模块，以上代码，都在我自己的project中。\r\n\r\n请问，如果我要修改mdapi的行为，是可以用这种新的类继承，然后直接改方法，还是我得要在vnpy的project文件夹内修改，然后重新setup.py install？\r\n还有，我上面的这个是出了是么问题？\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1343/comments",
    "author": "bzg246",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-01-17T04:09:37Z",
        "body": "你这个方法看着没啥问题啊，print 1完了后程序就崩溃了嘛？"
      }
    ]
  },
  {
    "number": 1323,
    "title": "CryptoTrader 运行报错",
    "created_at": "2019-01-07T09:26:22Z",
    "closed_at": "2019-01-08T04:33:03Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1323",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 7\r\n* Anaconda版本: Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: v1.9.2\r\n\r\n## Issue类型\r\n三选一：Bug/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n未能正常启动\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\nC:\\vnpy\\examples\\CryptoTrader>python run.py\r\nTraceback (most recent call last):\r\n  File \"run.py\", line 18, in <module>\r\n    from vnpy.trader.gateway import (huobiGateway, okexGateway, okexfGateway,\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.9.2-py2.7.egg\\vnpy\\tra\r\nder\\gateway\\bigoneGateway\\__init__.py\", line 4, in <module>\r\n    from .bigoneGateway import BigoneGateway\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.9.2-py2.7.egg\\vnpy\\tra\r\nder\\gateway\\bigoneGateway\\bigoneGateway.py\", line 16, in <module>\r\n    from vnpy.api.bigone import BigoneRestApi\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.9.2-py2.7.egg\\vnpy\\api\r\n\\bigone\\__init__.py\", line 1, in <module>\r\n    from .vnbigone import BigoneRestApi\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.9.2-py2.7.egg\\vnpy\\api\r\n\\bigone\\vnbigone.py\", line 20, in <module>\r\n    from jwt import PyJWS\r\nImportError: No module named jwt\r\n\r\n\r\n于是在anaconda prompt 下 pip install jwt\r\n安装jwt后，运行报错：\r\n\r\nC:\\vnpy\\examples\\CryptoTrader>python run.py\r\nTraceback (most recent call last):\r\n  File \"run.py\", line 18, in <module>\r\n    from vnpy.trader.gateway import (huobiGateway, okexGateway, okexfGateway,\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.9.2-py2.7.egg\\vnpy\\tra\r\nder\\gateway\\bigoneGateway\\__init__.py\", line 4, in <module>\r\n    from .bigoneGateway import BigoneGateway\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.9.2-py2.7.egg\\vnpy\\tra\r\nder\\gateway\\bigoneGateway\\bigoneGateway.py\", line 16, in <module>\r\n    from vnpy.api.bigone import BigoneRestApi\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.9.2-py2.7.egg\\vnpy\\api\r\n\\bigone\\__init__.py\", line 1, in <module>\r\n    from .vnbigone import BigoneRestApi\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.9.2-py2.7.egg\\vnpy\\api\r\n\\bigone\\vnbigone.py\", line 20, in <module>\r\n    from jwt import PyJWS\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\jwt\\__init__.py\", line 17, in\r\n <module>\r\n    from .jwk import (\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\jwt\\jwk.py\", line 60\r\n    def is_sign_key(self) -> bool:\r\n                          ^\r\nSyntaxError: invalid syntax\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1323/comments",
    "author": "yhmickey",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2019-01-08T04:33:03Z",
        "body": "这是pyjws接口的问题，应该源于你装了Python 3的版本，所以Python 2报语法错误"
      },
      {
        "user": "yhmickey",
        "created_at": "2019-01-08T08:13:54Z",
        "body": "已解决，建议requirements.txt增加PyJWT"
      }
    ]
  },
  {
    "number": 1302,
    "title": "datarecorder 最后一条K线",
    "created_at": "2018-12-25T08:23:55Z",
    "closed_at": "2018-12-26T00:44:00Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1302",
    "body": "昨天晚上折腾在windows上安装自动录制K线的服务。\r\n刚刚上数据库去看，发现最后一根K线有问题。\r\n2018-12-25 14:59:00.000Z\r\n2018-12-25 15:00:05.000Z\r\n我查了一下 文华和tb,他们都是只有  14:59:00这一根的。所以最后那根是不是多余的？\r\n并且 14:59:00这一根的开盘价，收盘价都跟他们对不上。\r\n\r\n今天MA905 12251459这一根\r\n文华TB是：O: 2321  C: 2317\r\n自己录的是O: 2320  C: 2318\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1302/comments",
    "author": "viponedream",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-12-26T00:44:00Z",
        "body": "1. 国内期货交易所在收盘后，有时会再推送一些tick\r\n2. DataRecorder是面向所有市场的行情录制工具，如果需要对国内的情况专门做过滤请自行实现\r\n3. 比起自己浪费时间折腾数据，推荐用RQData的数据服务"
      }
    ]
  },
  {
    "number": 1301,
    "title": "南华期货ctp tick LastPrice 时常为0",
    "created_at": "2018-12-25T06:42:28Z",
    "closed_at": "2018-12-26T00:42:07Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1301",
    "body": "在ctpGateway中加入打印语句\r\n\r\n```\r\n    def onRtnDepthMarketData(self, data):\r\n        \"\"\"行情推送\"\"\"\r\n        # 过滤尚未获取合约交易所时的行情推送\r\n        symbol = data['InstrumentID']\r\n        if symbol not in symbolExchangeDict:\r\n            return\r\n        \r\n        print(symbol, data['LastPrice'])\r\n        if data['LastPrice'] <= 0. :\r\n            print(symbol, data)\r\n\r\n```\r\n\r\n得到如下结果，有时没有LastPrice，只有BidPrice1和AskPrice1：\r\n\r\n```\r\n('rb1905', 3407.0)\r\n('p1905', 4488.0)\r\n2018-12-25 14:32:52,573  INFO: CTP\tContract data received.\r\n('rb1905', 3406.0)\r\n('p1905', 4490.0)\r\n('rb1905', 3406.0)\r\n('p1905', 4490.0)\r\n('rb1905', 3406.0)\r\n('SR905', 0.0)\r\n('SR905', {'HighestPrice': 0.0, 'BidPrice5': 0.0, 'BidPrice4': 0.0, 'BidPrice1': 4818.0, 'BidPrice3': 0.0, 'BidPrice2': 0.0, 'LowerLimitPrice': 0.0, 'PreOpenInterest': 0.0, 'AskPrice5': 0.0, 'AskPrice4': 0.0, 'AveragePrice': 0.0, 'PreClosePrice': 0.0, 'AskPrice1': 4819.0, 'PreSettlementPrice': 0.0, 'Volume': 0, 'UpdateTime': '14:32:53', 'UpdateMillisec': 0, 'AskPrice3': 0.0, 'BidVolume5': 0, 'BidVolume4': 0, 'BidVolume3': 0, 'BidVolume2': 0, 'OpenPrice': 0.0, 'AskPrice2': 0.0, 'AskVolume1': 81, 'AskVolume3': 0, 'AskVolume2': 0, 'AskVolume5': 0, 'AskVolume4': 0, 'UpperLimitPrice': 0.0, 'BidVolume1': 66, 'InstrumentID': 'SR905', 'ClosePrice': 0.0, 'ExchangeID': 'CZCE', 'TradingDay': '', 'PreDelta': 0.0, 'OpenInterest': 0.0, 'CurrDelta': 0.0, 'Turnover': 0.0, 'LastPrice': 0.0, 'SettlementPrice': 0.0, 'ExchangeInstID': '', 'LowestPrice': 0.0, 'ActionDay': '20181225'})\r\n('procecssTickEvent off hour or bad tick: ', '14:32:53.0', ' ', 'SR905', ' ', 0.0)\r\n('rb1905', 3406.0)\r\n('rb1905', 3407.0)\r\n('rb1905', 3407.0)\r\n('p1905', 0.0)\r\n('p1905', {'HighestPrice': 0.0, 'BidPrice5': 0.0, 'BidPrice4': 0.0, 'BidPrice1': 4490.0, 'BidPrice3': 0.0, 'BidPrice2': 0.0, 'LowerLimitPrice': 0.0, 'PreOpenInterest': 0.0, 'AskPrice5': 0.0, 'AskPrice4': 0.0, 'AveragePrice': 0.0, 'PreClosePrice': 0.0, 'AskPrice1': 4492.0, 'PreSettlementPrice': 0.0, 'Volume': 0, 'UpdateTime': '14:32:55', 'UpdateMillisec': 684, 'AskPrice3': 0.0, 'BidVolume5': 0, 'BidVolume4': 0, 'BidVolume3': 0, 'BidVolume2': 0, 'OpenPrice': 0.0, 'AskPrice2': 0.0, 'AskVolume1': 203, 'AskVolume3': 0, 'AskVolume2': 0, 'AskVolume5': 0, 'AskVolume4': 0, 'UpperLimitPrice': 0.0, 'BidVolume1': 215, 'InstrumentID': 'p1905', 'ClosePrice': 0.0, 'ExchangeID': 'DCE', 'TradingDay': '', 'PreDelta': 0.0, 'OpenInterest': 0.0, 'CurrDelta': 0.0, 'Turnover': 0.0, 'LastPrice': 0.0, 'SettlementPrice': 0.0, 'ExchangeInstID': '', 'LowestPrice': 0.0, 'ActionDay': '20181225'})\r\n('procecssTickEvent off hour or bad tick: ', '14:32:55.6', ' ', 'p1905', ' ', 0.0)\r\n('rb1905', 0.0)\r\n('rb1905', {'HighestPrice': 0.0, 'BidPrice5': 0.0, 'BidPrice4': 0.0, 'BidPrice1': 3406.0, 'BidPrice3': 0.0, 'BidPrice2': 0.0, 'LowerLimitPrice': 0.0, 'PreOpenInterest': 0.0, 'AskPrice5': 0.0, 'AskPrice4': 0.0, 'AveragePrice': 0.0, 'PreClosePrice': 0.0, 'AskPrice1': 3407.0, 'PreSettlementPrice': 0.0, 'Volume': 0, 'UpdateTime': '14:32:55', 'UpdateMillisec': 500, 'AskPrice3': 0.0, 'BidVolume5': 0, 'BidVolume4': 0, 'BidVolume3': 0, 'BidVolume2': 0, 'OpenPrice': 0.0, 'AskPrice2': 0.0, 'AskVolume1': 492, 'AskVolume3': 0, 'AskVolume2': 0, 'AskVolume5': 0, 'AskVolume4': 0, 'UpperLimitPrice': 0.0, 'BidVolume1': 244, 'InstrumentID': 'rb1905', 'ClosePrice': 0.0, 'ExchangeID': 'SHFE', 'TradingDay': '', 'PreDelta': 0.0, 'OpenInterest': 0.0, 'CurrDelta': 0.0, 'Turnover': 0.0, 'LastPrice': 0.0, 'SettlementPrice': 0.0, 'ExchangeInstID': '', 'LowestPrice': 0.0, 'ActionDay': '20181225'})\r\n('procecssTickEvent off hour or bad tick: ', '14:32:55.5', ' ', 'rb1905', ' ', 0.0)\r\n('p1905', 0.0)\r\n('p1905', {'HighestPrice': 0.0, 'BidPrice5': 0.0, 'BidPrice4': 0.0, 'BidPrice1': 4490.0, 'BidPrice3': 0.0, 'BidPrice2': 0.0, 'LowerLimitPrice': 0.0, 'PreOpenInterest': 0.0, 'AskPrice5': 0.0, 'AskPrice4': 0.0, 'AveragePrice': 0.0, 'PreClosePrice': 0.0, 'AskPrice1': 4492.0, 'PreSettlementPrice': 0.0, 'Volume': 0, 'UpdateTime': '14:32:56', 'UpdateMillisec': 174, 'AskPrice3': 0.0, 'BidVolume5': 0, 'BidVolume4': 0, 'BidVolume3': 0, 'BidVolume2': 0, 'OpenPrice': 0.0, 'AskPrice2': 0.0, 'AskVolume1': 203, 'AskVolume3': 0, 'AskVolume2': 0, 'AskVolume5': 0, 'AskVolume4': 0, 'UpperLimitPrice': 0.0, 'BidVolume1': 216, 'InstrumentID': 'p1905', 'ClosePrice': 0.0, 'ExchangeID': 'DCE', 'TradingDay': '', 'PreDelta': 0.0, 'OpenInterest': 0.0, 'CurrDelta': 0.0, 'Turnover': 0.0, 'LastPrice': 0.0, 'SettlementPrice': 0.0, 'ExchangeInstID': '', 'LowestPrice': 0.0, 'ActionDay': '20181225'})\r\n('procecssTickEvent off hour or bad tick: ', '14:32:56.1', ' ', 'p1905', ' ', 0.0)\r\n('rb1905', 0.0)\r\n('rb1905', {'HighestPrice': 0.0, 'BidPrice5': 0.0, 'BidPrice4': 0.0, 'BidPrice1': 3406.0, 'BidPrice3': 0.0, 'BidPrice2': 0.0, 'LowerLimitPrice': 0.0, 'PreOpenInterest': 0.0, 'AskPrice5': 0.0, 'AskPrice4': 0.0, 'AveragePrice': 0.0, 'PreClosePrice': 0.0, 'AskPrice1': 3407.0, 'PreSettlementPrice': 0.0, 'Volume': 0, 'UpdateTime': '14:32:56', 'UpdateMillisec': 0, 'AskPrice3': 0.0, 'BidVolume5': 0, 'BidVolume4': 0, 'BidVolume3': 0, 'BidVolume2': 0, 'OpenPrice': 0.0, 'AskPrice2': 0.0, 'AskVolume1': 495, 'AskVolume3': 0, 'AskVolume2': 0, 'AskVolume5': 0, 'AskVolume4': 0, 'UpperLimitPrice': 0.0, 'BidVolume1': 245, 'InstrumentID': 'rb1905', 'ClosePrice': 0.0, 'ExchangeID': 'SHFE', 'TradingDay': '', 'PreDelta': 0.0, 'OpenInterest': 0.0, 'CurrDelta': 0.0, 'Turnover': 0.0, 'LastPrice': 0.0, 'SettlementPrice': 0.0, 'ExchangeInstID': '', 'LowestPrice': 0.0, 'ActionDay': '20181225'})\r\n('procecssTickEvent off hour or bad tick: ', '14:32:56.0', ' ', 'rb1905', ' ', 0.0)\r\n('rb1905', 3406.0)\r\n('rb1905', 3406.0)\r\n('rb1905', 3406.0)\r\n('rb1905', 3406.0)\r\n('p1905', 4492.0)\r\n('rb1905', 3407.0)\r\n('SR905', 4818.0)\r\n('p1905', 4492.0)\r\n('rb1905', 0.0)\r\n('rb1905', {'HighestPrice': 0.0, 'BidPrice5': 0.0, 'BidPrice4': 0.0, 'BidPrice1': 3406.0, 'BidPrice3': 0.0, 'BidPrice2': 0.0, 'LowerLimitPrice': 0.0, 'PreOpenInterest': 0.0, 'AskPrice5': 0.0, 'AskPrice4': 0.0, 'AveragePrice': 0.0, 'PreClosePrice': 0.0, 'AskPrice1': 3407.0, 'PreSettlementPrice': 0.0, 'Volume': 0, 'UpdateTime': '14:32:59', 'UpdateMillisec': 0, 'AskPrice3': 0.0, 'BidVolume5': 0, 'BidVolume4': 0, 'BidVolume3': 0, 'BidVolume2': 0, 'OpenPrice': 0.0, 'AskPrice2': 0.0, 'AskVolume1': 525, 'AskVolume3': 0, 'AskVolume2': 0, 'AskVolume5': 0, 'AskVolume4': 0, 'UpperLimitPrice': 0.0, 'BidVolume1': 216, 'InstrumentID': 'rb1905', 'ClosePrice': 0.0, 'ExchangeID': 'SHFE', 'TradingDay': '', 'PreDelta': 0.0, 'OpenInterest': 0.0, 'CurrDelta': 0.0, 'Turnover': 0.0, 'LastPrice': 0.0, 'SettlementPrice': 0.0, 'ExchangeInstID': '', 'LowestPrice': 0.0, 'ActionDay': '20181225'})\r\n('procecssTickEvent off hour or bad tick: ', '14:32:59.0', ' ', 'rb1905', ' ', 0.0)\r\n('SR905', 0.0)\r\n('SR905', {'HighestPrice': 0.0, 'BidPrice5': 0.0, 'BidPrice4': 0.0, 'BidPrice1': 4818.0, 'BidPrice3': 0.0, 'BidPrice2': 0.0, 'LowerLimitPrice': 0.0, 'PreOpenInterest': 0.0, 'AskPrice5': 0.0, 'AskPrice4': 0.0, 'AveragePrice': 0.0, 'PreClosePrice': 0.0, 'AskPrice1': 4819.0, 'PreSettlementPrice': 0.0, 'Volume': 0, 'UpdateTime': '14:32:59', 'UpdateMillisec': 0, 'AskPrice3': 0.0, 'BidVolume5': 0, 'BidVolume4': 0, 'BidVolume3': 0, 'BidVolume2': 0, 'OpenPrice': 0.0, 'AskPrice2': 0.0, 'AskVolume1': 81, 'AskVolume3': 0, 'AskVolume2': 0, 'AskVolume5': 0, 'AskVolume4': 0, 'UpperLimitPrice': 0.0, 'BidVolume1': 83, 'InstrumentID': 'SR905', 'ClosePrice': 0.0, 'ExchangeID': 'CZCE', 'TradingDay': '', 'PreDelta': 0.0, 'OpenInterest': 0.0, 'CurrDelta': 0.0, 'Turnover': 0.0, 'LastPrice': 0.0, 'SettlementPrice': 0.0, 'ExchangeInstID': '', 'LowestPrice': 0.0, 'ActionDay': '20181225'})\r\n('procecssTickEvent off hour or bad tick: ', '14:32:59.0', ' ', 'SR905', ' ', 0.0)\r\n('p1905', 0.0)\r\n('p1905', {'HighestPrice': 0.0, 'BidPrice5': 0.0, 'BidPrice4': 0.0, 'BidPrice1': 4490.0, 'BidPrice3': 0.0, 'BidPrice2': 0.0, 'LowerLimitPrice': 0.0, 'PreOpenInterest': 0.0, 'AskPrice5': 0.0, 'AskPrice4': 0.0, 'AveragePrice': 0.0, 'PreClosePrice': 0.0, 'AskPrice1': 4492.0, 'PreSettlementPrice': 0.0, 'Volume': 0, 'UpdateTime': '14:32:59', 'UpdateMillisec': 730, 'AskPrice3': 0.0, 'BidVolume5': 0, 'BidVolume4': 0, 'BidVolume3': 0, 'BidVolume2': 0, 'OpenPrice': 0.0, 'AskPrice2': 0.0, 'AskVolume1': 195, 'AskVolume3': 0, 'AskVolume2': 0, 'AskVolume5': 0, 'AskVolume4': 0, 'UpperLimitPrice': 0.0, 'BidVolume1': 216, 'InstrumentID': 'p1905', 'ClosePrice': 0.0, 'ExchangeID': 'DCE', 'TradingDay': '', 'PreDelta': 0.0, 'OpenInterest': 0.0, 'CurrDelta': 0.0, 'Turnover': 0.0, 'LastPrice': 0.0, 'SettlementPrice': 0.0, 'ExchangeInstID': '', 'LowestPrice': 0.0, 'ActionDay': '20181225'})\r\n('procecssTickEvent off hour or bad tick: ', '14:32:59.7', ' ', 'p1905', ' ', 0.0)\r\n('rb1905', 0.0)\r\n('rb1905', {'HighestPrice': 0.0, 'BidPrice5': 0.0, 'BidPrice4': 0.0, 'BidPrice1': 3406.0, 'BidPrice3': 0.0, 'BidPrice2': 0.0, 'LowerLimitPrice': 0.0, 'PreOpenInterest': 0.0, 'AskPrice5': 0.0, 'AskPrice4': 0.0, 'AveragePrice': 0.0, 'PreClosePrice': 0.0, 'AskPrice1': 3407.0, 'PreSettlementPrice': 0.0, 'Volume': 0, 'UpdateTime': '14:32:59', 'UpdateMillisec': 500, 'AskPrice3': 0.0, 'BidVolume5': 0, 'BidVolume4': 0, 'BidVolume3': 0, 'BidVolume2': 0, 'OpenPrice': 0.0, 'AskPrice2': 0.0, 'AskVolume1': 520, 'AskVolume3': 0, 'AskVolume2': 0, 'AskVolume5': 0, 'AskVolume4': 0, 'UpperLimitPrice': 0.0, 'BidVolume1': 217, 'InstrumentID': 'rb1905', 'ClosePrice': 0.0, 'ExchangeID': 'SHFE', 'TradingDay': '', 'PreDelta': 0.0, 'OpenInterest': 0.0, 'CurrDelta': 0.0, 'Turnover': 0.0, 'LastPrice': 0.0, 'SettlementPrice': 0.0, 'ExchangeInstID': '', 'LowestPrice': 0.0, 'ActionDay': '20181225'})\r\n('procecssTickEvent off hour or bad tick: ', '14:32:59.5', ' ', 'rb1905', ' ', 0.0)\r\n('p1905', 4490.0)\r\n('First bar in BarsManager', datetime.datetime(2018, 12, 25, 14, 32))\r\n('rb1905', 3407.0)\r\n('First bar in BarsManager', datetime.datetime(2018, 12, 25, 14, 32))\r\n('p1905', 4490.0)\r\n('rb1905', 3406.0)\r\n('SR905', 0.0)\r\n('SR905', {'HighestPrice': 0.0, 'BidPrice5': 0.0, 'BidPrice4': 0.0, 'BidPrice1': 4818.0, 'BidPrice3': 0.0, 'BidPrice2': 0.0, 'LowerLimitPrice': 0.0, 'PreOpenInterest': 0.0, 'AskPrice5': 0.0, 'AskPrice4': 0.0, 'AveragePrice': 0.0, 'PreClosePrice': 0.0, 'AskPrice1': 4819.0, 'PreSettlementPrice': 0.0, 'Volume': 0, 'UpdateTime': '14:33:00', 'UpdateMillisec': 0, 'AskPrice3': 0.0, 'BidVolume5': 0, 'BidVolume4': 0, 'BidVolume3': 0, 'BidVolume2': 0, 'OpenPrice': 0.0, 'AskPrice2': 0.0, 'AskVolume1': 81, 'AskVolume3': 0, 'AskVolume2': 0, 'AskVolume5': 0, 'AskVolume4': 0, 'UpperLimitPrice': 0.0, 'BidVolume1': 82, 'InstrumentID': 'SR905', 'ClosePrice': 0.0, 'ExchangeID': 'CZCE', 'TradingDay': '', 'PreDelta': 0.0, 'OpenInterest': 0.0, 'CurrDelta': 0.0, 'Turnover': 0.0, 'LastPrice': 0.0, 'SettlementPrice': 0.0, 'ExchangeInstID': '', 'LowestPrice': 0.0, 'ActionDay': '20181225'})\r\n('procecssTickEvent off hour or bad tick: ', '14:33:00.0', ' ', 'SR905', ' ', 0.0)\r\n('p1905', 4490.0)\r\n('rb1905', 3407.0)\r\n('SR905', 4818.0)\r\n('First bar in BarsManager', datetime.datetime(2018, 12, 25, 14, 32))\r\n('p1905', 0.0)\r\n('p1905', {'HighestPrice': 0.0, 'BidPrice5': 0.0, 'BidPrice4': 0.0, 'BidPrice1': 4490.0, 'BidPrice3': 0.0, 'BidPrice2': 0.0, 'LowerLimitPrice': 0.0, 'PreOpenInterest': 0.0, 'AskPrice5': 0.0, 'AskPrice4': 0.0, 'AveragePrice': 0.0, 'PreClosePrice': 0.0, 'AskPrice1': 4492.0, 'PreSettlementPrice': 0.0, 'Volume': 0, 'UpdateTime': '14:33:01', 'UpdateMillisec': 769, 'AskPrice3': 0.0, 'BidVolume5': 0, 'BidVolume4': 0, 'BidVolume3': 0, 'BidVolume2': 0, 'OpenPrice': 0.0, 'AskPrice2': 0.0, 'AskVolume1': 202, 'AskVolume3': 0, 'AskVolume2': 0, 'AskVolume5': 0, 'AskVolume4': 0, 'UpperLimitPrice': 0.0, 'BidVolume1': 175, 'InstrumentID': 'p1905', 'ClosePrice': 0.0, 'ExchangeID': 'DCE', 'TradingDay': '', 'PreDelta': 0.0, 'OpenInterest': 0.0, 'CurrDelta': 0.0, 'Turnover': 0.0, 'LastPrice': 0.0, 'SettlementPrice': 0.0, 'ExchangeInstID': '', 'LowestPrice': 0.0, 'ActionDay': '20181225'})\r\n('procecssTickEvent off hour or bad tick: ', '14:33:01.7', ' ', 'p1905', ' ', 0.0)\r\n('rb1905', 3407.0)\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1301/comments",
    "author": "XilinJia",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-12-26T00:42:07Z",
        "body": "这里的接口层是直接打印CTP过来的原始数据，没有做任何处理，如果确定是0建议联系南华那边，他们行情服务器可能有问题。"
      }
    ]
  },
  {
    "number": 1290,
    "title": "能否提供本地洗价功能?",
    "created_at": "2018-12-14T05:39:59Z",
    "closed_at": "2018-12-16T03:35:14Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1290",
    "body": "期货交易使用期货指数数据(通达信上的IFL9/IHL9/RBL9/...),本地洗价达到触发条件后,下单到具体合约(IF1901/IH1901/...)上去\r\n股票交易用前复权数据,本地洗价达到触发条件后,下单到具体股票上去\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1290/comments",
    "author": "zfsamzfsam",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-12-16T03:35:14Z",
        "body": "可以自行修改下CtaEngine，增加行情和交易合约的映射关系后实现，但这类功能的实际价值很小，官方不会提供。"
      }
    ]
  },
  {
    "number": 1280,
    "title": "行情刷新不及时",
    "created_at": "2018-12-05T13:13:25Z",
    "closed_at": "2018-12-06T01:59:15Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1280",
    "body": "今天接上期货公司的CTP真实接口，与文华的手机行情对照了一下，发现VNPY的行情刷新频率平均是一秒一次，比接口实际推送的一秒两次要少。请问这是什么原因导致的呢？\r\n\r\nVNPY运行在上海的阿里云服务器，查询的是螺纹行情。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1280/comments",
    "author": "kevinhuangwl",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-12-06T01:59:15Z",
        "body": "接的是simnow服务器吧，仿真系统的推送有时会有延时"
      }
    ]
  },
  {
    "number": 1240,
    "title": "BITMEX数据插入错误，MONGODB不支持\".\"开头的合约",
    "created_at": "2018-11-15T09:39:02Z",
    "closed_at": "2018-11-17T01:49:53Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1240",
    "body": "## 环境\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n正常插入数据\r\n\r\n## 实际程序行为\r\nTraceback (most recent call last):\r\n  File \"C:\\Anaconda2\\lib\\threading.py\", line 801, in __bootstrap_inner\r\n    self.run()\r\n  File \"C:\\Anaconda2\\lib\\threading.py\", line 754, in run\r\n    self.__target(*self.__args, **self.__kwargs)\r\n  File \"C:\\Anaconda2\\Lib\\site-packages\\vnpy-1.9.0-py2.7.egg\\vnpy\\trader\\app\\dataRecorder\\drEngine.py\", line 50, in run\r\n    self.mainEngine.dbInsert(dbName, collectionName, d)\r\n  File \"C:\\Anaconda2\\Lib\\site-packages\\vnpy-1.9.0-py2.7.egg\\vnpy\\trader\\vtEngine.py\", line 217, in dbInsert\r\n    collection = db[collectionName]\r\n  File \"C:\\Anaconda2\\lib\\site-packages\\pymongo\\database.py\", line 259, in __getitem__\r\n    return Collection(self, name)\r\n  File \"C:\\Anaconda2\\lib\\site-packages\\pymongo\\collection.py\", line 170, in __init__\r\n    \"or end with '.': %r\" % name)\r\nInvalidName: collection names must not start or end with '.': u'.XBTUSDPI.BITMEX'\r\n\r\n\r\n## 重现步骤\r\n连接bitmex，下载数据\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1240/comments",
    "author": "UtorYeung",
    "comments": [
      {
        "user": "UtorYeung",
        "created_at": "2018-11-15T09:44:13Z",
        "body": "自己改写了一下MainEngine.dbInsert修改合约名的方法:\r\n    def dbInsert(self, dbName, collectionName, d):\r\n        \"\"\"向MongoDB中插入数据，d是具体数据\"\"\"\r\n        if self.dbClient:\r\n            #------------\r\n            # newfunc ∵BITMEX的合约名有'.'开头的，MONGODB对此不支持，而原函数并没有对此进行处理。∴新函数对此进行了处理\r\n            if dbName.startswith(\".\"):\r\n                dbName = dbName.replace(\".\", \"_\", 1)\r\n            if collectionName.startswith(\".\"):\r\n                collectionName = collectionName.replace(\".\", \"_\", 1)\r\n            if dbName.endswith(\".\"):\r\n                dbName = dbName[:-1] + \"_\"\r\n            if collectionName.endswith(\".\"):\r\n                collectionName = collectionName[:-1] + \"_\"\r\n            #------------\r\n            db = self.dbClient[dbName]\r\n            collection = db[collectionName]\r\n            collection.insert_one(d)\r\n        else:\r\n            self.writeLog(text.DATA_INSERT_FAILED)\r\n\r\n但有个问题不知道怎么处理：\r\n1.这样修改完之后，需要在其他一切跟mongodb相关的函数都进行同样的修改，以确保不会新增bug\r\n2.在MainEngine上修改，其他模块如果不通过MainEngine连接MongoDB的话，那么读取时会出错\r\n\r\n所以这种情况下，在哪个模块修改会比较安全？MainEngine？DataEngine？或者其他模块？"
      },
      {
        "user": "vnpy",
        "created_at": "2018-11-17T01:49:53Z",
        "body": "1. BITMEX以.开头的合约为指数行情报价，而非可交易合约，不是vn.py关注的重点，\r\n2. 这些指数行情的价值很低，因为BITMEX的合约标的是多家交易所的价格合成指数，而它自己的这些.开头的合约行情速度肯定是显著慢于用户自行根据其他交易所实时行情合成的指数价格\r\n\r\n综上，vn.py的代码就不修改以兼容这些指数了，另外我个人也不建议去收集这类数据，意义不大。"
      }
    ]
  },
  {
    "number": 1238,
    "title": "VNIB 封装的 TagValue 类存在Bug，对IB order的AlgoParams设置直接崩溃，",
    "created_at": "2018-11-15T06:52:17Z",
    "closed_at": "2019-01-11T00:36:16Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1238",
    "body": "## 环境\r\nWindows 7\r\n* Anaconda Python 2.7 32位\r\n* vn.py版本: 最新版\r\n\r\n## Issue类型\r\nBUG:\r\nVNIB 封装的 TagValue 类存在Bug，\r\n相关代码:order.algoParams.append(TagValue(\"maxPctVol\", 0.25))\r\n\r\n## 预期程序行为\r\n预期程序可以顺利完成改行代码\r\n\r\n## 实际程序行为\r\n崩溃，system exit with error (1)\r\n\r\n## 重现步骤\r\n\r\n对发给IB的order进行algo strategy的设置，到TagValue相关的代码都会报错\r\n\r\n        # order.algoStrategy = \"ArrivalPx\"\r\n        # # order.algoParams.append(TagValue(\"maxPctVol\", 0.25))\r\n        # # order.algoParams.append(TagValue(\"riskAversion\", \"Aggressive\"))\r\n        # # order.algoParams.append(TagValue(\"startTime\", startTime))\r\n        # # order.algoParams.append(TagValue(\"endTime\", endTime))\r\n        # # order.algoParams.append(TagValue(\"forceCompletion\",int(1)))\r\n        # # order.algoParams.append(TagValue(\"allowPastEndTime\",int(1)))\r\n        # # order.algoParams.append(TagValue(\"monetaryValue\", 100000))\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1238/comments",
    "author": "richApplea",
    "comments": [
      {
        "user": "richApplea",
        "created_at": "2018-11-19T08:56:41Z",
        "body": "经查，AlgoParams 是Order类的附属TagValueList，但这种Order类的附属List的Boost封装都存在问题，对这种List进行append都会导致crash，我尝试着自己编译C++ Lib到pyd文件，安装了Boosts等，编译出来的文件只有921kb，与项目中1mb+的pyd文件有大小差距，而且无法使用，因此我卡在这里没有办法了。\r\n\r\n如果方便手头有这个project的话，能不能帮忙把这个Order附属类List问题修复了再编译出一个lib上传即可解决，感谢！"
      },
      {
        "user": "vnpy",
        "created_at": "2019-01-11T00:36:16Z",
        "body": "2.0的ib_gateway已经改为使用官方的Python API来实现，可以使用所有的功能了"
      }
    ]
  },
  {
    "number": 1105,
    "title": "class ArrayManager(object):",
    "created_at": "2018-09-10T03:50:12Z",
    "closed_at": "2018-10-10T08:40:23Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1105",
    "body": "里面有一个指标 SMA，似乎只是计算最后的平均值吗？\r\n如果我要当前的3个月均值，跟半年前的3个月均值来比较，可以吗？\r\n不是短均线，长均线来比较，同样是3个月的均线，只是当前跟半年前的来比较。可以吗\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1105/comments",
    "author": "viponedream",
    "comments": [
      {
        "user": "viponedream",
        "created_at": "2018-09-10T05:39:11Z",
        "body": "一，重新看了一下这个类。class ArrayManager，似乎就是存放K线的库。既如此，不如弄成一个df表。功能也更强大。也兼容其它的做法。\r\n二，导入历史数据中。使用了onBar,\r\n        for bar in initData:\r\n            self.onBar(bar)\r\n从逻辑上来说，历史数据并不参与下单操作，只是为了充实K线，计算指标而已。\r\n所以， 载入历史数据觉得只要单纯存入上面那个表，来计算指标就行。不要通过onbar, ontick。\r\n\r\n"
      },
      {
        "user": "vnpy",
        "created_at": "2018-09-11T03:17:43Z",
        "body": "DataFrame对象的创建、销毁的开销很大，而且无法高效的动态增加数据，实盘中会严重拖慢速度，所以如非必要并不建议使用。"
      }
    ]
  },
  {
    "number": 1092,
    "title": "vnpy会支持交易时主力合约自动换月吗",
    "created_at": "2018-09-05T01:53:07Z",
    "closed_at": "2018-10-10T08:41:07Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1092",
    "body": "感觉交易的品种多了话，手动换月好麻烦，群主要是支持下就太感谢了",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1092/comments",
    "author": "xldistance",
    "comments": [
      {
        "user": "williamlfang",
        "created_at": "2018-09-25T03:32:03Z",
        "body": "建议在本地保存一份主力合约清单，这个可以根据每日的数据进行更新处理。"
      },
      {
        "user": "vnpy",
        "created_at": "2018-10-10T08:41:07Z",
        "body": "暂时不会，该功能请在外部实现"
      }
    ]
  },
  {
    "number": 1084,
    "title": "单独使用example/Datarecording怎么会调用strategy相关模块",
    "created_at": "2018-09-02T17:06:26Z",
    "closed_at": "2018-11-06T01:05:00Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1084",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 16.04\r\n* Anaconda版本: Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 1.8\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\nFailed to import strategy file vnpy.trader.app.ctaStrategy.strategy.strategyDualThrust:\r\nTraceback (most recent call last):\r\n  File \"/home/dr/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 18, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/home/dr/anaconda2/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/home/dr/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/strategy/strategyDualThrust.py\", line 11, in <module>\r\n    from vnpy.trader.app.ctaStrategy.ctaTemplate import CtaTemplate, BarGenerator\r\n  File \"/home/dr/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/ctaTemplate.py\", line 8, in <module>\r\n    import talib\r\n  File \"/home/dr/anaconda2/lib/python2.7/site-packages/talib/__init__.py\", line 4, in <module>\r\n    from . import common\r\nImportError: cannot import name common\r\n\r\n## 重现步骤\r\npython runDataRecording.py \r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1084/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-09-03T02:07:45Z",
        "body": "因为现在DataRecorder里用到的BarGenerator是在CTA模块里的，不过现在看来该组件可以剥离放到底层里了，我来改下吧"
      },
      {
        "user": "vnpy",
        "created_at": "2018-11-06T01:05:00Z",
        "body": "已修改"
      }
    ]
  },
  {
    "number": 1056,
    "title": "WebTrader 的 WebSocket 连接不正常",
    "created_at": "2018-08-21T15:59:54Z",
    "closed_at": "2018-08-28T09:58:42Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1056",
    "body": "## 环境\r\n\r\n* 操作系统: CENTOS/WINDOWS\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 最新版本master\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\nWebTrader 网页登陆前/后，正常连接。\r\n\r\n\r\n## 实际程序行为\r\n登陆前产生报错：\r\nWebSocket connection to 'ws://xxx.yyy.zzz:5000/socket.io/?EIO=3&transport=websocket' failed: Error during WebSocket handshake: Unexpected response code: 400\r\n\r\n但将 index.html 中传输模式变更为下面代码的时候，则不报错，但也不能即时推送信息了：\r\n异常行：\r\n`var socket = io.connect(host + \"\", { transports: ['websocket'] });\r\n`\r\n变更后无报错，但不能实时推送数据到客户端\r\n`\r\nvar socket = io.connect(host + \"\", {transports:['polling', 'websocket']}); \r\n`\r\n\r\n## 重现步骤\r\n网页访问即可。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1056/comments",
    "author": "ShellMount",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-08-28T09:58:42Z",
        "body": "请使用chrome再试试"
      }
    ]
  },
  {
    "number": 1036,
    "title": "futuquant有版本限制",
    "created_at": "2018-08-12T10:38:32Z",
    "closed_at": "2018-08-12T16:46:50Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1036",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: v1.8.1\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n无报错\r\n\r\n## 实际程序行为\r\n依赖报错\r\n\r\n## 重现步骤\r\n（暂无截图）\r\n问题是futuquant有版本限制，vnpy支持的版本为版本2（个人使用2.3.14）\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1036/comments",
    "author": "Liyunfan1998",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-08-12T16:46:50Z",
        "body": "v1.9中已经升级到最新版本的futuquant"
      }
    ]
  },
  {
    "number": 1010,
    "title": "不同目录下的策略不能导入",
    "created_at": "2018-07-31T09:42:20Z",
    "closed_at": "2018-08-03T09:17:03Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1010",
    "body": "启动的时候，按理应该是自动导入策略的。\r\n结果只有导入 安装的那些。  'vnpy.trader.app.ctaStrategy.strategy. 这自带的这些才能导入。\r\n\r\n自己写的那些导不了。\r\n我的目录结构是这样的\r\n\r\nd:\\vnpy-my \r\nd:\\vnpy-my\\run.py                                在这里启动， 只有放在run同个目录的才能导入。下级目录不行。\r\nd:\\vnpy-my\\my_strategy\\strategyTest     策略放在这里 \r\n结果里面的策略都不行。\r\nFailed to import strategy file xxxxxxx  \r\n\r\nd:\\vnpy-my\\my_strategy\\长线策略\\xxxx策略xxxx\r\nd:\\vnpy-my\\my_strategy\\短线策略\\xxxx策略xxxx\r\nd:\\vnpy-my\\my_strategy\\日内策略\\xxxx策略xxxx\r\n\r\n假如策略这样放在各种不同的目录下，导入不了啊。\r\n\r\n目前的策略只能导入两个目录下的：\r\n一，安装目录  'vnpy.trader.app.ctaStrategy.strategy.\r\n二，跟run.py同个位置。即使下级目录也不行。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1010/comments",
    "author": "viponedream",
    "comments": [
      {
        "user": "viponedream",
        "created_at": "2018-08-02T09:16:12Z",
        "body": "其实它是有去当前目录寻找策略的，只是导进去出错了。"
      },
      {
        "user": "viponedream",
        "created_at": "2018-08-02T13:34:35Z",
        "body": "把策略所在的路径加入到系统中去就可以导入了。\r\n\r\n# 遍历工作目录下的文件\r\nworkingPath = os.getcwd()\r\nfor root, subdirs, files in os.walk(workingPath):\r\n    for name in files:\r\n        # 只有文件名中包含strategy且以.py结尾的文件，才是策略文件\r\n        if 'strategy' in name and name[-3:] == '.py':\r\n            # 模块名称无需前缀\r\n            moduleName = name.replace('.py', '')\r\n            sys.path.append(root)                   # 加入模块所在位置----》  加这一句就可以了。\r\n            loadStrategyModule(moduleName)"
      },
      {
        "user": "vnpy",
        "created_at": "2018-08-03T09:17:03Z",
        "body": "修改strategy/__init__.py里的遍历目录逻辑就好"
      }
    ]
  },
  {
    "number": 1003,
    "title": "实盘bat窗口log日志打印出错",
    "created_at": "2018-07-26T13:38:15Z",
    "closed_at": "2018-07-30T05:29:16Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1003",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.8\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n错误日志:  2018-07-26 21:28:49,551  INFO: CTA_STRATEGY     ThreeRb1810:onStart lasttime=21:29:00 \r\n2Traceback (most recent call last):\r\n  File \"C:\\Anaconda2\\lib\\logging\\__init__.py\", line 872, in emit\r\n    stream.write(ufs % msg)\r\nIOError: [Errno 0] Error\r\nLogged from file vtEngine.py, line 688\r\n2018-07-26 21:30:26,115  INFO: CTA_STRATEGY     策略ThreeRb1810同步数据保存成功，当前持仓0\r\n当bat窗口最小化后台运行一段时间后， 第一次点击显示界面时偶尔会没有新的输出日志，需要键入回车才会出现未刷新的日志，同时此时刷新的日志打印时间上会有较大的延迟， 请问是为什么？\r\n然而键入回车出现刷新的日志后 偶尔会报以上的错误。\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1003/comments",
    "author": "jxhuliqun138",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-07-30T05:29:16Z",
        "body": "1. IOError: [Errno 0] Error  这个错误查了下是Windows系统问题，安装Win10最近的一个自动更新应该能解决\r\n2. 日志信息在图形界面的刷新，是由PyQt库在内部完成的，从这里的情况上看可能是由于日志信息过多，当窗口从最小化转向显示的时候瞬间刷新的信息量较大，导致中间的卡顿。\r\n\r\n建议试试减少日志信息输出。"
      }
    ]
  },
  {
    "number": 1001,
    "title": "vnpy有没有办法做数字货币搬砖，作者能不能提个思路。",
    "created_at": "2018-07-25T11:46:15Z",
    "closed_at": "2018-08-04T16:39:14Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/1001",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/1001/comments",
    "author": "sage-peng",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-08-04T16:39:14Z",
        "body": "已添加套利算法AribtrageAlgo"
      }
    ]
  },
  {
    "number": 990,
    "title": "在CentOS7上面安装时报错",
    "created_at": "2018-07-21T15:11:54Z",
    "closed_at": "2018-07-22T12:46:18Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/990",
    "body": "## 环境\r\n\r\n* 操作系统: CentOS7 (CentOS Linux release 7.5.1804 (Core) )\r\n* Anaconda版本: Anaconda 4.0.0 Python 2.7 64位\r\n* vn.py版本: v1.8.1\r\n\r\n## Issue类型\r\nQuestion\r\n\r\n## 实际程序行为\r\n不能成功安装或运行，不确定是否能在CentOS环境下安装。\r\n\r\n## 重现步骤\r\n[root@localhost vnpy-1.8.1]# ./install.sh \r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n[root@localhost vnpy-1.8.1]# ./install.sh \r\n/usr/local/vnpy-1.8.1/vnpy/api/ctp /usr/local/vnpy-1.8.1\r\n/usr/local/vnpy-1.8.1/vnpy/api/ctp/build /usr/local/vnpy-1.8.1/vnpy/api/ctp\r\n-- The C compiler identification is GNU 4.8.5\r\n-- The CXX compiler identification is GNU 4.8.5\r\n-- Check for working C compiler: /usr/bin/cc\r\n-- Check for working C compiler: /usr/bin/cc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working CXX compiler: /usr/bin/c++\r\n-- Check for working CXX compiler: /usr/bin/c++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\nUnder unix: 8\r\n-- Boost version: 1.55.0\r\n-- Found the following Boost libraries:\r\n--   python\r\n--   thread\r\n--   date_time\r\n--   system\r\n--   chrono\r\nCMake Error: The following variables are used in this project, but they are set to NOTFOUND.\r\nPlease set them or make sure they are set and tested correctly in the CMake files:\r\nPYTHON_LIBRARY\r\n    linked by target \"vnctpmd\" in directory /usr/local/vnpy-1.8.1/vnpy/api/ctp\r\n    linked by target \"vnctptd\" in directory /usr/local/vnpy-1.8.1/vnpy/api/ctp\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/usr/local/vnpy-1.8.1/vnpy/api/ctp/build/CMakeFiles/CMakeOutput.log\".\r\n/usr/local/vnpy-1.8.1\r\n/usr/local/vnpy-1.8.1/vnpy/api/lts /usr/local/vnpy-1.8.1\r\n/usr/local/vnpy-1.8.1/vnpy/api/lts/build /usr/local/vnpy-1.8.1/vnpy/api/lts\r\n-- The C compiler identification is GNU 4.8.5\r\n-- The CXX compiler identification is GNU 4.8.5\r\n-- Check for working C compiler: /usr/bin/cc\r\n-- Check for working C compiler: /usr/bin/cc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working CXX compiler: /usr/bin/c++\r\n-- Check for working CXX compiler: /usr/bin/c++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\nUnder unix: 8\r\nltsapi\r\n/usr/local/vnpy-1.8.1/vnpy/api/lts/ltsapi/libsecuritymduserapi.so\r\n-- Boost version: 1.55.0\r\n-- Found the following Boost libraries:\r\n--   python\r\n--   thread\r\n--   date_time\r\n--   system\r\n--   chrono\r\nCMake Error: The following variables are used in this project, but they are set to NOTFOUND.\r\nPlease set them or make sure they are set and tested correctly in the CMake files:\r\nPYTHON_LIBRARY\r\n    linked by target \"vnltsmd\" in directory /usr/local/vnpy-1.8.1/vnpy/api/lts\r\n    linked by target \"vnltsqry\" in directory /usr/local/vnpy-1.8.1/vnpy/api/lts\r\n    linked by target \"vnltstd\" in directory /usr/local/vnpy-1.8.1/vnpy/api/lts\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/usr/local/vnpy-1.8.1/vnpy/api/lts/build/CMakeFiles/CMakeOutput.log\".\r\n/usr/local/vnpy-1.8.1\r\n/usr/local/vnpy-1.8.1/vnpy/api/xtp /usr/local/vnpy-1.8.1\r\n/usr/local/vnpy-1.8.1/vnpy/api/xtp/build /usr/local/vnpy-1.8.1/vnpy/api/xtp\r\n-- The C compiler identification is GNU 4.8.5\r\n-- The CXX compiler identification is GNU 4.8.5\r\n-- Check for working C compiler: /usr/bin/cc\r\n-- Check for working C compiler: /usr/bin/cc -- works\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working CXX compiler: /usr/bin/c++\r\n-- Check for working CXX compiler: /usr/bin/c++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\nUnder unix: 8\r\n-- Boost version: 1.55.0\r\n-- Found the following Boost libraries:\r\n--   python\r\n--   thread\r\n--   date_time\r\n--   system\r\n--   chrono\r\nCMake Error: The following variables are used in this project, but they are set to NOTFOUND.\r\nPlease set them or make sure they are set and tested correctly in the CMake files:\r\nPYTHON_LIBRARY\r\n    linked by target \"vnxtpquote\" in directory /usr/local/vnpy-1.8.1/vnpy/api/xtp\r\n    linked by target \"vnxtptrader\" in directory /usr/local/vnpy-1.8.1/vnpy/api/xtp\r\nXTPAPI_MD_LIBRARY\r\n    linked by target \"vnxtpquote\" in directory /usr/local/vnpy-1.8.1/vnpy/api/xtp\r\nXTPAPI_TD_LIBRARY\r\n    linked by target \"vnxtptrader\" in directory /usr/local/vnpy-1.8.1/vnpy/api/xtp\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/usr/local/vnpy-1.8.1/vnpy/api/xtp/build/CMakeFiles/CMakeOutput.log\".\r\n/usr/local/vnpy-1.8.1\r\n/usr/local/vnpy-1.8.1/vnpy/api/ib /usr/local/vnpy-1.8.1\r\n/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux /usr/local/vnpy-1.8.1/vnpy/api/ib\r\n/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux\r\n-- The CXX compiler identification is GNU 4.8.5\r\n-- Check for working CXX compiler: /usr/bin/c++\r\n-- Check for working CXX compiler: /usr/bin/c++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Configuring done\r\n-- Generating done\r\n-- Build files have been written to: /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build\r\n/usr/bin/cmake -H/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux -B/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build --check-build-system CMakeFiles/Makefile.cmake 0\r\n/usr/bin/cmake -E cmake_progress_start /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles/progress.marks\r\nmake -f CMakeFiles/Makefile2 all\r\nmake[1]: 进入目录“/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build”\r\nmake -f CMakeFiles/twsapi.dir/build.make CMakeFiles/twsapi.dir/depend\r\nmake[2]: 进入目录“/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build”\r\ncd /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build && /usr/bin/cmake -E cmake_depends \"Unix Makefiles\" /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles/twsapi.dir/DependInfo.cmake --color=\r\nDependee \"/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles/twsapi.dir/DependInfo.cmake\" is newer than depender \"/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles/twsapi.dir/depend.internal\".\r\nDependee \"/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles/CMakeDirectoryInformation.cmake\" is newer than depender \"/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles/twsapi.dir/depend.internal\".\r\nScanning dependencies of target twsapi\r\nmake[2]: 离开目录“/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build”\r\nmake -f CMakeFiles/twsapi.dir/build.make CMakeFiles/twsapi.dir/build\r\nmake[2]: 进入目录“/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build”\r\n/usr/bin/cmake -E cmake_progress_report /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles 1\r\n[  4%] Building CXX object CMakeFiles/twsapi.dir/client/ContractCondition.cpp.o\r\n/usr/bin/c++   -DBUILD_IB -DUSE_64BITS -Dtwsapi_EXPORTS -fPIC -std=c++11 -O3 -DNDEBUG -fPIC -I/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/IB_PATH    -o CMakeFiles/twsapi.dir/client/ContractCondition.cpp.o -c /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/client/ContractCondition.cpp\r\n/usr/bin/cmake -E cmake_progress_report /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles 2\r\n[  9%] Building CXX object CMakeFiles/twsapi.dir/client/DefaultEWrapper.cpp.o\r\n/usr/bin/c++   -DBUILD_IB -DUSE_64BITS -Dtwsapi_EXPORTS -fPIC -std=c++11 -O3 -DNDEBUG -fPIC -I/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/IB_PATH    -o CMakeFiles/twsapi.dir/client/DefaultEWrapper.cpp.o -c /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/client/DefaultEWrapper.cpp\r\n/usr/bin/cmake -E cmake_progress_report /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles 3\r\n[ 14%] Building CXX object CMakeFiles/twsapi.dir/client/EClient.cpp.o\r\n/usr/bin/c++   -DBUILD_IB -DUSE_64BITS -Dtwsapi_EXPORTS -fPIC -std=c++11 -O3 -DNDEBUG -fPIC -I/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/IB_PATH    -o CMakeFiles/twsapi.dir/client/EClient.cpp.o -c /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/client/EClient.cpp\r\n/usr/bin/cmake -E cmake_progress_report /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles 4\r\n[ 19%] Building CXX object CMakeFiles/twsapi.dir/client/EClientSocket.cpp.o\r\n/usr/bin/c++   -DBUILD_IB -DUSE_64BITS -Dtwsapi_EXPORTS -fPIC -std=c++11 -O3 -DNDEBUG -fPIC -I/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/IB_PATH    -o CMakeFiles/twsapi.dir/client/EClientSocket.cpp.o -c /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/client/EClientSocket.cpp\r\n/usr/bin/cmake -E cmake_progress_report /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles 5\r\n[ 23%] Building CXX object CMakeFiles/twsapi.dir/client/EDecoder.cpp.o\r\n/usr/bin/c++   -DBUILD_IB -DUSE_64BITS -Dtwsapi_EXPORTS -fPIC -std=c++11 -O3 -DNDEBUG -fPIC -I/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/IB_PATH    -o CMakeFiles/twsapi.dir/client/EDecoder.cpp.o -c /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/client/EDecoder.cpp\r\n/usr/bin/cmake -E cmake_progress_report /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles 6\r\n[ 28%] Building CXX object CMakeFiles/twsapi.dir/client/EMessage.cpp.o\r\n/usr/bin/c++   -DBUILD_IB -DUSE_64BITS -Dtwsapi_EXPORTS -fPIC -std=c++11 -O3 -DNDEBUG -fPIC -I/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/IB_PATH    -o CMakeFiles/twsapi.dir/client/EMessage.cpp.o -c /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/client/EMessage.cpp\r\n/usr/bin/cmake -E cmake_progress_report /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles 7\r\n[ 33%] Building CXX object CMakeFiles/twsapi.dir/client/EMutex.cpp.o\r\n/usr/bin/c++   -DBUILD_IB -DUSE_64BITS -Dtwsapi_EXPORTS -fPIC -std=c++11 -O3 -DNDEBUG -fPIC -I/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/IB_PATH    -o CMakeFiles/twsapi.dir/client/EMutex.cpp.o -c /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/client/EMutex.cpp\r\n/usr/bin/cmake -E cmake_progress_report /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles 8\r\n[ 38%] Building CXX object CMakeFiles/twsapi.dir/client/EReader.cpp.o\r\n/usr/bin/c++   -DBUILD_IB -DUSE_64BITS -Dtwsapi_EXPORTS -fPIC -std=c++11 -O3 -DNDEBUG -fPIC -I/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/IB_PATH    -o CMakeFiles/twsapi.dir/client/EReader.cpp.o -c /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/client/EReader.cpp\r\n/usr/bin/cmake -E cmake_progress_report /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles 9\r\n[ 42%] Building CXX object CMakeFiles/twsapi.dir/client/EReaderOSSignal.cpp.o\r\n/usr/bin/c++   -DBUILD_IB -DUSE_64BITS -Dtwsapi_EXPORTS -fPIC -std=c++11 -O3 -DNDEBUG -fPIC -I/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/IB_PATH    -o CMakeFiles/twsapi.dir/client/EReaderOSSignal.cpp.o -c /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/client/EReaderOSSignal.cpp\r\n/usr/bin/cmake -E cmake_progress_report /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles 10\r\n[ 47%] Building CXX object CMakeFiles/twsapi.dir/client/EReaderWMSignal.cpp.o\r\n/usr/bin/c++   -DBUILD_IB -DUSE_64BITS -Dtwsapi_EXPORTS -fPIC -std=c++11 -O3 -DNDEBUG -fPIC -I/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/IB_PATH    -o CMakeFiles/twsapi.dir/client/EReaderWMSignal.cpp.o -c /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/client/EReaderWMSignal.cpp\r\n/usr/bin/cmake -E cmake_progress_report /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles 11\r\n[ 52%] Building CXX object CMakeFiles/twsapi.dir/client/ESocket.cpp.o\r\n/usr/bin/c++   -DBUILD_IB -DUSE_64BITS -Dtwsapi_EXPORTS -fPIC -std=c++11 -O3 -DNDEBUG -fPIC -I/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/IB_PATH    -o CMakeFiles/twsapi.dir/client/ESocket.cpp.o -c /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/client/ESocket.cpp\r\n/usr/bin/cmake -E cmake_progress_report /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles 12\r\n[ 57%] Building CXX object CMakeFiles/twsapi.dir/client/MarginCondition.cpp.o\r\n/usr/bin/c++   -DBUILD_IB -DUSE_64BITS -Dtwsapi_EXPORTS -fPIC -std=c++11 -O3 -DNDEBUG -fPIC -I/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/IB_PATH    -o CMakeFiles/twsapi.dir/client/MarginCondition.cpp.o -c /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/client/MarginCondition.cpp\r\n/usr/bin/cmake -E cmake_progress_report /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles 13\r\n[ 61%] Building CXX object CMakeFiles/twsapi.dir/client/OperatorCondition.cpp.o\r\n/usr/bin/c++   -DBUILD_IB -DUSE_64BITS -Dtwsapi_EXPORTS -fPIC -std=c++11 -O3 -DNDEBUG -fPIC -I/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/IB_PATH    -o CMakeFiles/twsapi.dir/client/OperatorCondition.cpp.o -c /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/client/OperatorCondition.cpp\r\n/usr/bin/cmake -E cmake_progress_report /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles 14\r\n[ 66%] Building CXX object CMakeFiles/twsapi.dir/client/OrderCondition.cpp.o\r\n/usr/bin/c++   -DBUILD_IB -DUSE_64BITS -Dtwsapi_EXPORTS -fPIC -std=c++11 -O3 -DNDEBUG -fPIC -I/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/IB_PATH    -o CMakeFiles/twsapi.dir/client/OrderCondition.cpp.o -c /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/client/OrderCondition.cpp\r\n/usr/bin/cmake -E cmake_progress_report /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles 15\r\n[ 71%] Building CXX object CMakeFiles/twsapi.dir/client/PercentChangeCondition.cpp.o\r\n/usr/bin/c++   -DBUILD_IB -DUSE_64BITS -Dtwsapi_EXPORTS -fPIC -std=c++11 -O3 -DNDEBUG -fPIC -I/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/IB_PATH    -o CMakeFiles/twsapi.dir/client/PercentChangeCondition.cpp.o -c /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/client/PercentChangeCondition.cpp\r\n/usr/bin/cmake -E cmake_progress_report /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles 16\r\n[ 76%] Building CXX object CMakeFiles/twsapi.dir/client/PriceCondition.cpp.o\r\n/usr/bin/c++   -DBUILD_IB -DUSE_64BITS -Dtwsapi_EXPORTS -fPIC -std=c++11 -O3 -DNDEBUG -fPIC -I/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/IB_PATH    -o CMakeFiles/twsapi.dir/client/PriceCondition.cpp.o -c /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/client/PriceCondition.cpp\r\n/usr/bin/cmake -E cmake_progress_report /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles 17\r\n[ 80%] Building CXX object CMakeFiles/twsapi.dir/client/SoftDollarTier.cpp.o\r\n/usr/bin/c++   -DBUILD_IB -DUSE_64BITS -Dtwsapi_EXPORTS -fPIC -std=c++11 -O3 -DNDEBUG -fPIC -I/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/IB_PATH    -o CMakeFiles/twsapi.dir/client/SoftDollarTier.cpp.o -c /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/client/SoftDollarTier.cpp\r\n/usr/bin/cmake -E cmake_progress_report /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles 18\r\n[ 85%] Building CXX object CMakeFiles/twsapi.dir/client/StdAfx.cpp.o\r\n/usr/bin/c++   -DBUILD_IB -DUSE_64BITS -Dtwsapi_EXPORTS -fPIC -std=c++11 -O3 -DNDEBUG -fPIC -I/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/IB_PATH    -o CMakeFiles/twsapi.dir/client/StdAfx.cpp.o -c /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/client/StdAfx.cpp\r\n/usr/bin/cmake -E cmake_progress_report /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles 19\r\n[ 90%] Building CXX object CMakeFiles/twsapi.dir/client/TimeCondition.cpp.o\r\n/usr/bin/c++   -DBUILD_IB -DUSE_64BITS -Dtwsapi_EXPORTS -fPIC -std=c++11 -O3 -DNDEBUG -fPIC -I/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/IB_PATH    -o CMakeFiles/twsapi.dir/client/TimeCondition.cpp.o -c /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/client/TimeCondition.cpp\r\n/usr/bin/cmake -E cmake_progress_report /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles 20\r\n[ 95%] Building CXX object CMakeFiles/twsapi.dir/client/VolumeCondition.cpp.o\r\n/usr/bin/c++   -DBUILD_IB -DUSE_64BITS -Dtwsapi_EXPORTS -fPIC -std=c++11 -O3 -DNDEBUG -fPIC -I/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/IB_PATH    -o CMakeFiles/twsapi.dir/client/VolumeCondition.cpp.o -c /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/client/VolumeCondition.cpp\r\n/usr/bin/cmake -E cmake_progress_report /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles 21\r\n[100%] Building CXX object CMakeFiles/twsapi.dir/client/executioncondition.cpp.o\r\n/usr/bin/c++   -DBUILD_IB -DUSE_64BITS -Dtwsapi_EXPORTS -fPIC -std=c++11 -O3 -DNDEBUG -fPIC -I/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/IB_PATH    -o CMakeFiles/twsapi.dir/client/executioncondition.cpp.o -c /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/client/executioncondition.cpp\r\nLinking CXX shared library lib/twsapi.so\r\n/usr/bin/cmake -E cmake_link_script CMakeFiles/twsapi.dir/link.txt --verbose=1\r\n/usr/bin/c++  -fPIC  -fPIC -std=c++11 -O3 -DNDEBUG   -shared -Wl,-soname,twsapi.so -o lib/twsapi.so CMakeFiles/twsapi.dir/client/ContractCondition.cpp.o CMakeFiles/twsapi.dir/client/DefaultEWrapper.cpp.o CMakeFiles/twsapi.dir/client/EClient.cpp.o CMakeFiles/twsapi.dir/client/EClientSocket.cpp.o CMakeFiles/twsapi.dir/client/EDecoder.cpp.o CMakeFiles/twsapi.dir/client/EMessage.cpp.o CMakeFiles/twsapi.dir/client/EMutex.cpp.o CMakeFiles/twsapi.dir/client/EReader.cpp.o CMakeFiles/twsapi.dir/client/EReaderOSSignal.cpp.o CMakeFiles/twsapi.dir/client/EReaderWMSignal.cpp.o CMakeFiles/twsapi.dir/client/ESocket.cpp.o CMakeFiles/twsapi.dir/client/MarginCondition.cpp.o CMakeFiles/twsapi.dir/client/OperatorCondition.cpp.o CMakeFiles/twsapi.dir/client/OrderCondition.cpp.o CMakeFiles/twsapi.dir/client/PercentChangeCondition.cpp.o CMakeFiles/twsapi.dir/client/PriceCondition.cpp.o CMakeFiles/twsapi.dir/client/SoftDollarTier.cpp.o CMakeFiles/twsapi.dir/client/StdAfx.cpp.o CMakeFiles/twsapi.dir/client/TimeCondition.cpp.o CMakeFiles/twsapi.dir/client/VolumeCondition.cpp.o CMakeFiles/twsapi.dir/client/executioncondition.cpp.o \r\nmake[2]: 离开目录“/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build”\r\n/usr/bin/cmake -E cmake_progress_report /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21\r\n[100%] Built target twsapi\r\nmake[1]: 离开目录“/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build”\r\n/usr/bin/cmake -E cmake_progress_start /usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux/build/CMakeFiles 0\r\n/usr/local/vnpy-1.8.1/vnpy/api/ib/ibapi/linux\r\n/usr/local/vnpy-1.8.1/vnpy/api/ib\r\n/usr/local/vnpy-1.8.1/vnpy/api/ib/build /usr/local/vnpy-1.8.1/vnpy/api/ib\r\n-- The CXX compiler identification is GNU 4.8.5\r\n-- Check for working CXX compiler: /usr/bin/c++\r\n-- Check for working CXX compiler: /usr/bin/c++ -- works\r\n-- Detecting CXX compiler ABI info\r\n-- Detecting CXX compiler ABI info - done\r\n-- Boost version: 1.55.0\r\n-- Found the following Boost libraries:\r\n--   python\r\n--   thread\r\n--   date_time\r\n--   system\r\n--   chrono\r\nCMake Error: The following variables are used in this project, but they are set to NOTFOUND.\r\nPlease set them or make sure they are set and tested correctly in the CMake files:\r\nPYTHON_LIBRARY\r\n    linked by target \"vnib\" in directory /usr/local/vnpy-1.8.1/vnpy/api/ib\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/usr/local/vnpy-1.8.1/vnpy/api/ib/build/CMakeFiles/CMakeOutput.log\".\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/990/comments",
    "author": "finology",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-07-22T12:46:18Z",
        "body": "CentOS并不在vn.py官方支持的系统中，从报错信息来看：\r\n\r\n> CMake Error: The following variables are used in this project, but they are set to NOTFOUND.\r\nPlease set them or make sure they are set and tested correctly in the CMake files:\r\nPYTHON_LIBRARY\r\n\r\n应该是CentOS上Python的环境变量路径名找不到，试试去手动修改下吧。\r\n"
      }
    ]
  },
  {
    "number": 986,
    "title": "No module named vnpy.event",
    "created_at": "2018-07-20T04:10:09Z",
    "closed_at": "2018-08-03T13:49:33Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/986",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 16.04\r\n* Anaconda版本: Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: v1.8.1\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n正常安装。原来一模一样的过程安装，但是出现了\r\nNo module named vnpy.event\r\n莫名其妙的错误，看到之前有一个closed issue，但是并没有看到回复说可以运行了。\r\n试过python setup.py install，没有报错，但是运行run  webServer.py就报错\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/986/comments",
    "author": "wheeler18",
    "comments": [
      {
        "user": "yua3",
        "created_at": "2018-07-26T11:42:40Z",
        "body": "运行 python setup.py install"
      },
      {
        "user": "wheeler18",
        "created_at": "2018-07-27T07:08:10Z",
        "body": "试过了"
      },
      {
        "user": "yua3",
        "created_at": "2018-07-28T11:23:06Z",
        "body": "重新安装TA-Lib库"
      },
      {
        "user": "kevinhuangwl",
        "created_at": "2018-07-30T13:22:44Z",
        "body": "这个问题我重现过。后来发现应该是Anaconda的版本不对。我重现这个问题时，安装的是官网上的Anaconda5.x版，后来仔细看WIKI发现文档用的是4.0版本"
      },
      {
        "user": "wheeler18",
        "created_at": "2018-08-02T09:39:10Z",
        "body": "TA-lib都是一键安装的。版本没有错。以前安装过1.8,1.7都没问题。自己在腾讯云乱弄，搞坏了。然后在Windows7虚拟机下也同样的问题。。。"
      },
      {
        "user": "wheeler18",
        "created_at": "2018-08-03T13:49:33Z",
        "body": "解决了，有些文件都是root用户的，通通chown。自己的原因，打扰大家了"
      }
    ]
  },
  {
    "number": 983,
    "title": "Tick数据回测时，一次性loadHistoryData容易导致内存不够",
    "created_at": "2018-07-19T05:31:10Z",
    "closed_at": "2018-07-21T12:07:30Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/983",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.8.1\r\n\r\n## Issue类型\r\n三选一：Enhancement\r\n\r\n## 预期程序行为\r\n\r\n在使用Tick级别的数据进行回测时，由于数据是一次性载入（BacktestingEngine.loadHistoryData），普通配置的机器（阿里云4G）内存根本不够用。有没有啥分批载入改动思路？\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/983/comments",
    "author": "q6218271",
    "comments": [
      {
        "user": "cooooo",
        "created_at": "2018-07-19T07:54:02Z",
        "body": "有人实现了依次加载csv回测，这就需要自己实现了"
      },
      {
        "user": "vnpy",
        "created_at": "2018-07-21T12:07:30Z",
        "body": "分段回测，将回测的每日交易的DataFrame相加，再执行calculateDailyStatistics统计，参考examples/ctaBacktesting下的backtesting_portfolio方法。"
      }
    ]
  },
  {
    "number": 945,
    "title": "wingIDE 运行runbacktesting.py无法显示权益曲线图",
    "created_at": "2018-06-22T13:28:03Z",
    "closed_at": "2018-06-27T02:08:47Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/945",
    "body": "## 环境\r\n\r\n操作系统: Windows 10\r\nAnaconda版本: Anaconda 4.0.0 Python 2.7 32位\r\nvn.py版本: v1.8.1\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n出现回测参数的同时应该出现权益曲线图，命令窗口运行python runbacktesing 图形能正常显示\r\n\r\n## 实际程序行为\r\nwingIDE运行脚本时只出来回测数据，没有出来图形\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/945/comments",
    "author": "jxhuliqun138",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-06-27T02:08:47Z",
        "body": "请使用ipython notebook运行回测"
      }
    ]
  },
  {
    "number": 921,
    "title": "WebTrader Readme 该更新了",
    "created_at": "2018-06-14T01:04:51Z",
    "closed_at": "2018-08-06T03:47:16Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/921",
    "body": " 我验证能通过的步骤是运行tradingServer.py, 然后运行webServer.py。原文中说的server.py不存在，而运行run.py总是有异常\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/921/comments",
    "author": "liujunhui2",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-06-16T03:45:29Z",
        "body": "收到"
      },
      {
        "user": "vnpy",
        "created_at": "2018-08-06T03:47:16Z",
        "body": "已完成修改"
      }
    ]
  },
  {
    "number": 908,
    "title": "IB接口无法获得配置文件指定的\"accountCode\"，并且把TWS的第一个子帐号给自动切成第二个子帐号了",
    "created_at": "2018-06-07T06:47:16Z",
    "closed_at": "2018-07-12T01:56:56Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/908",
    "body": "环境\r\n\r\n操作系统: 如Windows 7\r\nAnaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\nvn.py版本: 如v1.8.1\r\n\r\nIssue类型\r\n三选一：Enhancement\r\n\r\n预期程序行为\r\nIB接口根据配置文件指定的\"accountCode\"获得用户名下对应的子账户\r\n\r\n实际程序行为\r\n获取到的是用户名下的第二个子账户，无法获得第一个账户。\r\n\r\n重现步骤\r\n----------------------------------------------\r\n一：\r\nIB配置：\"accountCode\": \"DU933268\"\r\n那么这个accountCode目前指定了是不起效果的，实际上是想获得指定的IB用户名下的对应的子账户的，配置文件中的accountCode在程序中读取到后，就没再作为参数使用过。\r\n代码位置：\r\n文件ibGateway.py，函数def connect(self)，代码：self.api.eConnect(self.host, self.port, self.clientId, False)\r\n\r\n期望能够根据该配置实现获得用户名下指定的子帐号。\r\n\r\n对于显示的账户编号，对于IB子帐号是加了货币的后缀的，查询了对应的ibGateway.py中的逻辑，是函数updateAccountValue处理的，但是没法跟进去的。\r\n\r\n二：\r\n另外就是TWS登陆后，TWS默认是第一个子帐号的，信息等都正确的，但是登陆vnpy后，获得的是第二个子帐号的信息，并且立刻就把TWS的登陆的第一个子帐号切换成了第二个子帐号了，多次验证确实是如此(发现时无法相信，后来两个人盯着把窗口前后放好看的，确实如此，今天早上又特意看了下，也是如此。)，与IB负责接口的同事联系过的了，他们需要具体实现的函数，但是目前从逻辑上无法准确提供给他们。\r\n\r\n\r\n肯定群主实现该功能或指点下该如何实现该功能，谢谢！\r\n\r\n----------------------------------------------\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/908/comments",
    "author": "stone3536",
    "comments": [
      {
        "user": "stone3536",
        "created_at": "2018-06-22T03:24:27Z",
        "body": "@vnpy 群主，您好\r\n恳请您百忙中帮忙看下这个问题该如何实现，谢谢！\r\n1、\"accountCode\"在配置文件和代码中做了的，但是实际没有实现的，开始一直以为这个就是ib的登录用户名的。\r\n2、有子帐号的，登录后会修改TWS的账号的\r\n3、这部分代码都封装了的了，看不到也跟不进去的，实在是摸不着北，请您帮忙看下，谢谢！"
      },
      {
        "user": "stone3536",
        "created_at": "2018-07-12T01:48:44Z",
        "body": "@群主，您好\r\n这个问题可以通过变相方式实现的，就是IB的一个登录帐号可以对应一个资金帐号。主登录帐号可以看到所有子帐号，申请一个新的登录帐号对应到相应的资金帐号就可以解决了。此问题可以关闭。\r\n是否可以多个登录帐号（不含主登录帐号）对应一个资金帐号，没和ib进行过确认，但是按照了解下来他们的模式，应该也是可以的。\r\n感谢您！"
      },
      {
        "user": "vnpy",
        "created_at": "2018-07-12T03:04:16Z",
        "body": "非常感谢告知！"
      }
    ]
  },
  {
    "number": 888,
    "title": "dataRecording模块丢失最后一根bar数据",
    "created_at": "2018-05-25T02:16:25Z",
    "closed_at": "2018-08-06T05:57:36Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/888",
    "body": "BarGenerator的合成规则是新一分钟的第一个tick线到来后，才会生成上一分钟的Bar线。\r\n当前的dataRecording机制，下午盘后和晚上夜盘后会强制断线程，这时候收盘前最后一根K线其实是还没有生成的（前提是非交易时间段的异常数据过滤得干净），断线后就直接丢了，所以缺了最后一根K线。\r\n\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/888/comments",
    "author": "smartgang",
    "comments": [
      {
        "user": "bigdig",
        "created_at": "2018-05-25T03:33:39Z",
        "body": "可以将Record的非交易时段定义的宽松点，将收盘最后一个Tick放进来\r\n```java\r\n{\r\n    \"_id\" : ObjectId(\"5b0662f01d74e373c4556502\"),\r\n    \"askVolume4\" : 0,\r\n    \"bidVolume5\" : 0,\r\n    \"bidVolume4\" : 0,\r\n    \"bidVolume3\" : 0,\r\n    \"bidVolume2\" : 0,\r\n    \"openPrice\" : 3530.0,\r\n    \"datetime\" : ISODate(\"2018-05-24T15:00:00.000Z\"),\r\n    \"askVolume1\" : 446,\r\n    \"askVolume3\" : 0,\r\n    \"askVolume2\" : 0,\r\n    \"askVolume5\" : 0,\r\n    \"rawData\" : null,\r\n    \"lastPrice\" : 3583.0,\r\n    \"highPrice\" : 3590,\r\n    \"openInterest\" : 3111164.0,\r\n    \"preClosePrice\" : 3531.0,\r\n    \"gatewayName\" : \"CTP\",\r\n    \"lowerLimit\" : 3293.0,\r\n    \"exchange\" : \"SHFE\",\r\n    \"symbol\" : \"rb1810\",\r\n    \"bidPrice4\" : 0.0,\r\n    \"volume\" : 3251118,\r\n    \"bidVolume1\" : 51,\r\n    \"date\" : \"20180524\",\r\n    \"lastVolume\" : 0,\r\n    \"askPrice4\" : 0.0,\r\n    \"bidPrice5\" : 0.0,\r\n    \"lowPrice\" : 3520.0,\r\n    \"bidPrice1\" : 3583.0,\r\n    \"bidPrice3\" : 0.0,\r\n    \"bidPrice2\" : 0.0,\r\n    \"askPrice1\" : 3584.0,\r\n    \"time\" : \"15:00:00.0\",\r\n    \"askPrice5\" : 0.0,\r\n    \"turnover\" : 115355069800.0,\r\n    \"askPrice3\" : 0.0,\r\n    \"askPrice2\" : 0.0,\r\n    \"vtSymbol\" : \"rb1810\",\r\n    \"upperLimit\" : 3788.0\r\n}\r\n```"
      },
      {
        "user": "smartgang",
        "created_at": "2018-05-25T03:36:56Z",
        "body": "我也想过这样，不过DR模块用的是和实盘相同的接口和BarGenerator，如果交易时间段放宽的话，意味着实盘会受这些垃圾数据的影响，这样可能会得不偿失。"
      },
      {
        "user": "vnpy",
        "created_at": "2018-08-06T05:57:36Z",
        "body": "DrEngine已增加一个针对国内期货交易所收盘的marketCloseTime功能"
      }
    ]
  },
  {
    "number": 871,
    "title": "ImportError: No module named strategyTest",
    "created_at": "2018-05-15T09:18:59Z",
    "closed_at": "2018-05-19T14:28:24Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/871",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 7\r\n* Anaconda版本: Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: v1.8.0\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\nvnpy安装在C:\\Anaconda2\\lib\\site-packages目录下，并且C:\\Anaconda2\\lib\\site-packages\\下有vnpy-1.8.0-py2.7.egg。\r\n我在本地D盘新建了程序目录，如E:\\vnpy-test，目录文件如下：\r\n>vnpy-test\\\r\n>>__init__.py\r\n>>ctaBacktesting.py\r\n>>runBacktesting.py\r\n>>strategy\\\r\n>>>__init__.py\r\n>>>strategyTest.py\r\n\r\n其中ctaBacktesting.py与安装目录下的ctaBacktesting.py内容一样，strategyTest.py是我根据样例编写的策略，运行runBacktesting.py后，先是报错：\r\n`File \"C:\\Anaconda2\\lib\\site-packages\\vnpy-1.8.0-py2.7.egg\\vnpy\\trader\\app\\ctaStrategy\\strategy\\__init__.py\", line 18, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"C:\\Anaconda2\\lib\\importlib\\__init__.py\", line 37, in import_module\r\n    __import__(name)\r\nImportError: No module named strategyTest`\r\n\r\n然后开始载入数据、开始回测，直到跑出结果，都正常。\r\n我的疑问是：\r\n是不是只要跑回测，安装目录下的strategy\\__init__.py都会导入strategy\\下的所有策略？如果我不放在安装目录下，岂不是总是会报以上的错误？\r\n\r\n\r\n@vnpy \r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/871/comments",
    "author": "lyh404",
    "comments": [
      {
        "user": "cooooo",
        "created_at": "2018-05-18T03:31:12Z",
        "body": "读一下\"X:\\vnpy\\vnpy\\trader\\app\\ctaStrategy\\strategy\\__init__.py\"的代码"
      },
      {
        "user": "vnpy",
        "created_at": "2018-05-19T14:28:24Z",
        "body": "1. ctaStrategy/strategy/__init__.py，会加载strategy目录下和当前工作目录下，所有包含strategy的.py文件中的策略对象\r\n2. 所以如果你从vnpy.trader.app.ctaStrategy.strategy去加载任何东西的话，就有可能会倒错，但并不一定影响使用，因为你可能用不着这个策略类"
      }
    ]
  },
  {
    "number": 860,
    "title": "为何日线算法测试失败？",
    "created_at": "2018-05-11T05:21:59Z",
    "closed_at": "2018-05-12T09:55:36Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/860",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 1.8（2018-05-09）\r\n\r\n## Issue类型\r\n三选一：question\r\n\r\n## 预期程序行为\r\n1，分钟级别测试KK算法正常\r\n2，测试程序自带的strategyHaigui, strategyDoubleMa两个日级算法文件\r\n期货1d数据从richquant导出为csv文件\r\n执行examples/runbacktesting\r\n\r\n## 实际程序行为\r\nctaBacktesting.py line 793, keyError: 'timeList'\r\n\r\n研究发现可能是版本不兼容导致，\r\n比如Haigui算法中有BarManager类，但是在1.8的vnpy里只有BarGenerator类\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/860/comments",
    "author": "wuyongyi",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-05-12T09:55:36Z",
        "body": "1. 目前官方并未提供strategyHaigui这一策略，请检查代码来源\r\n2. v1.8后BarManager已经改名为BarGenerator\r\n3. timeList报错可能是因为回测时没有生成任何一笔交易，导致数据为空"
      },
      {
        "user": "wuyongyi",
        "created_at": "2018-05-12T11:13:57Z",
        "body": "谢谢回复！\r\n1，后来发现是typo导致的，问题已经解决，回测已经通过\r\n2，发现一个小bug：\r\nctaBacktesting.py 第829行：\r\nxindex = np.arange(0, len(tradeTimeIndex), np.int(len(tradeTimeIndex)/10))\r\n但是如果是日线交易，有时次数小于5，那么会报被0除的错。可以改成：\r\nif  np.int(len(tradeTimeIndex)/10) != 0: \r\n       xindex = np.arange(0, len(tradeTimeIndex), np.int(len(tradeTimeIndex)/10))\r\nelse:\r\n       xindex = np.arange(0, len(tradeTimeIndex), 1)\r\n"
      }
    ]
  },
  {
    "number": 831,
    "title": "撤单操作会触发一个未成交状态的Onorder事件回报！",
    "created_at": "2018-04-24T03:07:54Z",
    "closed_at": "2018-05-07T15:12:30Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/831",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 7 64位\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: v1.8发行版\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n在Onorder里执行撤单操作，应该不会接收到未成交的回报！\r\n\r\n## 实际程序行为\r\n在Onorder里执行撤单操作，会接收到一个未成交的回报和一个已撤销的回报！这个未成交状态导致会再次执行cancelOrder撤单操作！\r\n\r\n## 重现步骤\r\n测试代码如下：\r\n    def onOrder(self, order):\r\n        \"\"\"收到委托变化推送（必须由用户继承实现）\"\"\"\r\n        print u'OnOrder.. {} '.format(order.status)\r\n        if order.status == STATUS_NOTTRADED or order.status == STATUS_PARTTRADED:\r\n            self.cancelOrder(order.vtOrderID)\r\n            print (u\"未成或部成开始撤单..\")\r\n\r\n打印结果如下：\r\n未成或部成开始撤单..\r\nOnOrder.. 未成交\r\n未成或部成开始撤单..\r\nOnOrder.. 已撤销\r\n\r\n完整的测试流程是发送一个未成交的委托单，然后会执行撤单操作，整个这个流程的Onorder回报会被触发4次，依次是，1.未知，2.未成交，3.未成交，4.已撤销。\r\n这个未成交状态会产生歧义的，是挂单的未成交还是其他？以为order.status里只有这个字段记录了状态！",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/831/comments",
    "author": "stardna",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-04-27T07:53:39Z",
        "body": "用的是SimNow还是实盘环境？\r\n\r\n如果是SimNow可能是服务器更新又出问题了，另外重复撤单目前对账户是没有影响的"
      },
      {
        "user": "stardna",
        "created_at": "2018-05-03T00:41:02Z",
        "body": "用的是simnow，simnow有这错误？我改天用实盘试试吧！\r\n另外重复撤单虽然对账户没有影响，但是假如实盘也出现这个问题，还是请群主改一下吧！毕竟会影响有些功能的实现！"
      },
      {
        "user": "stardna",
        "created_at": "2018-05-03T03:25:25Z",
        "body": "我查了一下代码，发现processTradeEvent里有一段代码，是过滤已经收到的成交回报，但是在processOrderEvent里没有，是不是群主忘写了？加上类似的代码是不是就能解决上述问题？\r\n        # 过滤已经收到过的成交回报\r\n        if trade.vtTradeID in self.tradeSet:\r\n            return\r\n        self.tradeSet.add(trade.vtTradeID)"
      },
      {
        "user": "bigdig",
        "created_at": "2018-05-03T05:41:01Z",
        "body": "> 这里没有群主，上面的代码可能无法解决你的问题\r\n\r\n- 因为您的问题不是问题，是正常的定单回报显示。\r\n- CTP一个定单逻辑上就有两个回报：分别是发单的回报，报单结果的回报。\r\n"
      },
      {
        "user": "stardna",
        "created_at": "2018-05-03T05:45:01Z",
        "body": "谢谢您，两个回报我明白，但是肯定是有状态能区分的出来的，现在的问题是，这两个订单的order.status都是未成交！"
      },
      {
        "user": "bigdig",
        "created_at": "2018-05-04T02:08:31Z",
        "body": "> 报单的问题细想极其恐怖，\r\n\r\n你收到的 未知、**未成交、未成交**、已取消，问题在于 取到的都是 order.status，其实应综合 OrderSubmitStatus 来判断。但VPNY CTP Gateway好象没有处理这个状态，这个状态也只有象您这样进行精细报单控制才会用到"
      },
      {
        "user": "bigdig",
        "created_at": "2018-05-04T02:14:19Z",
        "body": "报单是个大体力活，很难进行全面的封装。量化策略下单大多以对价成交为主，这样简单的封装基本就够用了"
      },
      {
        "user": "vnpy",
        "created_at": "2018-05-07T15:12:30Z",
        "body": "同意楼上得自己结合submitStatus字段来修改底层接口增加状态了"
      }
    ]
  },
  {
    "number": 830,
    "title": "初次安装运行run.py时出现错误",
    "created_at": "2018-04-21T04:10:24Z",
    "closed_at": "2018-04-24T01:30:11Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/830",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: v1.8\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n运行run.py时出现错误\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\nrunfile('D:/Anaconda2/Lib/site-packages/vnpy/trader/run.py', wdir='D:/Anaconda2/Lib/site-packages/vnpy/trader')\r\nTraceback (most recent call last):\r\n\r\n  File \"<ipython-input-5-955f0e2ce047>\", line 1, in <module>\r\n    runfile('D:/Anaconda2/Lib/site-packages/vnpy/trader/run.py', wdir='D:/Anaconda2/Lib/site-packages/vnpy/trader')\r\n\r\n  File \"D:\\Anaconda2\\lib\\site-packages\\spyderlib\\widgets\\externalshell\\sitecustomize.py\", line 699, in runfile\r\n    execfile(filename, namespace)\r\n\r\n  File \"D:\\Anaconda2\\lib\\site-packages\\spyderlib\\widgets\\externalshell\\sitecustomize.py\", line 74, in execfile\r\n    exec(compile(scripttext, filename, 'exec'), glob, loc)\r\n\r\n  File \"D:/Anaconda2/Lib/site-packages/vnpy/trader/run.py\", line 11, in <module>\r\n    from vnpy.trader.uiQt import qApp\r\n\r\nImportError: cannot import name qApp\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/830/comments",
    "author": "unicorn910121",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-04-24T01:30:11Z",
        "body": "qApp这个对象已经废弃，请使用新版本的examples目录"
      },
      {
        "user": "silent494529371",
        "created_at": "2018-05-01T06:25:28Z",
        "body": "windows下面按照标准流程来测试还是会出现这个错误"
      },
      {
        "user": "silent494529371",
        "created_at": "2018-05-01T06:25:39Z",
        "body": "Traceback (most recent call last):\r\n  File \"run.py\", line 15, in <module>\r\n    from vnpy.trader.uiQt import createQApp\r\nImportError: cannot import name createQApp"
      }
    ]
  },
  {
    "number": 782,
    "title": "vnpy.trader.app.optionMaster.strategy.DemoStrategy 无法停止",
    "created_at": "2018-03-13T08:06:57Z",
    "closed_at": "2018-05-07T15:05:58Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/782",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 7\r\n* Anaconda版本: Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: v1.8.0\r\n\r\n## Issue类型\r\nQuestion、Bug\r\n\r\n## 预期程序行为\r\n在点击gui中的策略停止之后，策略停止，onTimer 回调关闭\r\n\r\n## 实际程序行为\r\n在点击gui中的策略停止之后，onTimer 回调还会被定时执行\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/782/comments",
    "author": "Gwill",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-05-07T15:05:58Z",
        "body": "停止策略后只是禁止策略发单，并不会影响回调函数的触发"
      }
    ]
  },
  {
    "number": 781,
    "title": "银河飞创 SEC API 仿真账号 tick 数据频率特别低",
    "created_at": "2018-03-13T07:06:59Z",
    "closed_at": "2018-05-07T15:04:51Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/781",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 7\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: v1.8.0发行版\r\n\r\n## Issue类型\r\nQuestion\r\n\r\n## 预期程序行为\r\ntick 数据更新评率 < 1秒\r\n\r\n## 实际程序行为\r\ntick 数据更新频率为 5-10 秒\r\n\r\n## 重现步骤\r\n使用仿真账号登录，开启optionMaster，观察50ETF相关期权合约数据变动",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/781/comments",
    "author": "Gwill",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-05-07T15:04:51Z",
        "body": "仿真环境数据少是正常情况"
      }
    ]
  },
  {
    "number": 775,
    "title": "安装时报错",
    "created_at": "2018-03-09T07:14:05Z",
    "closed_at": "2018-05-07T15:04:30Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/775",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu17\r\n* Anaconda版本: Anaconda 4.0.0 Python 2.7.14 \r\n* vn.py版本: 1.8\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n安装成功\r\n\r\n## 实际程序行为\r\n出现bug\r\n\r\n## 重现步骤\r\n1.尝试安装；\r\n    -出现：\r\n\r\nCMake Warning at /usr/share/cmake-3.9/Modules/FindBoost.cmake:771 (message):\r\n  Imported targets not available for Boost version\r\nCall Stack (most recent call first):\r\n  /usr/share/cmake-3.9/Modules/FindBoost.cmake:875 (_Boost_COMPONENT_DEPENDENCIES)\r\n  /usr/share/cmake-3.9/Modules/FindBoost.cmake:1519 (_Boost_MISSING_DEPENDENCIES)\r\n  CMakeLists.txt:62 (find_package)\r\n\r\n\r\n-- Looking for C++ include pthread.h\r\n-- Looking for C++ include pthread.h - found\r\n-- Looking for pthread_create\r\n-- Looking for pthread_create - not found\r\n-- Looking for pthread_create in pthreads\r\n-- Looking for pthread_create in pthreads - not found\r\n-- Looking for pthread_create in pthread\r\n-- Looking for pthread_create in pthread - found\r\n-- Found Threads: TRUE  \r\nCMake Error at /usr/share/cmake-3.9/Modules/FindBoost.cmake:1898 (message):\r\n  Unable to find the requested Boost libraries.\r\n\r\n  Unable to find the Boost header files.  Please set BOOST_ROOT to the root\r\n  directory containing Boost or BOOST_INCLUDEDIR to the directory containing\r\n  Boost's headers.\r\nCall Stack (most recent call first):\r\n  CMakeLists.txt:62 (find_package)\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\nSee also \"/home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/CMakeOutput.log\".\r\nSee also \"/home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/CMakeError.log\".\r\n\r\n\r\n2.进入CMakeError.log\r\n   -显示:The system is: Linux - 4.13.0-21-generic - x86_64\r\nCompiling the CXX compiler identification source file \"CMakeCXXCompilerId.cpp\" succeeded.\r\nCompiler: /usr/bin/c++ \r\nBuild flags: \r\nId flags:  \r\n\r\nThe output was:\r\n0\r\n\r\n\r\nCompilation of the CXX compiler identification source \"CMakeCXXCompilerId.cpp\" produced \"a.out\"\r\n\r\nThe CXX compiler identification is GNU, found in \"/home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/3.9.1/CompilerIdCXX/a.out\"\r\n\r\nDetermining if the CXX compiler works passed with the following output:\r\nChange Dir: /home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/CMakeTmp\r\n\r\nRun Build Command:\"/usr/bin/make\" \"cmTC_b4151/fast\"\r\n/usr/bin/make -f CMakeFiles/cmTC_b4151.dir/build.make CMakeFiles/cmTC_b4151.dir/build\r\nmake[1]: Entering directory '/home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/CMakeTmp'\r\nBuilding CXX object CMakeFiles/cmTC_b4151.dir/testCXXCompiler.cxx.o\r\n/usr/bin/c++     -o CMakeFiles/cmTC_b4151.dir/testCXXCompiler.cxx.o -c /home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/CMakeTmp/testCXXCompiler.cxx\r\nLinking CXX executable cmTC_b4151\r\n/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_b4151.dir/link.txt --verbose=1\r\n/usr/bin/c++       -rdynamic CMakeFiles/cmTC_b4151.dir/testCXXCompiler.cxx.o  -o cmTC_b4151 \r\nmake[1]: Leaving directory '/home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/CMakeTmp'\r\n\r\n\r\nDetecting CXX compiler ABI info compiled with the following output:\r\nChange Dir: /home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/CMakeTmp\r\n\r\nRun Build Command:\"/usr/bin/make\" \"cmTC_ab59d/fast\"\r\n/usr/bin/make -f CMakeFiles/cmTC_ab59d.dir/build.make CMakeFiles/cmTC_ab59d.dir/build\r\nmake[1]: Entering directory '/home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/CMakeTmp'\r\nBuilding CXX object CMakeFiles/cmTC_ab59d.dir/CMakeCXXCompilerABI.cpp.o\r\n/usr/bin/c++     -o CMakeFiles/cmTC_ab59d.dir/CMakeCXXCompilerABI.cpp.o -c /usr/share/cmake-3.9/Modules/CMakeCXXCompilerABI.cpp\r\nLinking CXX executable cmTC_ab59d\r\n/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_ab59d.dir/link.txt --verbose=1\r\n/usr/bin/c++      -v -rdynamic CMakeFiles/cmTC_ab59d.dir/CMakeCXXCompilerABI.cpp.o  -o cmTC_ab59d \r\nUsing built-in specs.\r\nCOLLECT_GCC=/usr/bin/c++\r\nCOLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper\r\nOFFLOAD_TARGET_NAMES=nvptx-none\r\nOFFLOAD_TARGET_DEFAULT=1\r\nTarget: x86_64-linux-gnu\r\nConfigured with: ../src/configure -v --with-pkgversion='Ubuntu 7.2.0-8ubuntu3' --with-bugurl=file:///usr/share/doc/gcc-7/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++ --prefix=/usr --with-gcc-major-version-only --program-suffix=-7 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu\r\nThread model: posix\r\ngcc version 7.2.0 (Ubuntu 7.2.0-8ubuntu3) \r\nCOMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/\r\nLIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../:/lib/:/usr/lib/\r\nCOLLECT_GCC_OPTIONS='-v' '-rdynamic' '-o' 'cmTC_ab59d' '-shared-libgcc' '-mtune=generic' '-march=x86-64'\r\n /usr/lib/gcc/x86_64-linux-gnu/7/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/7/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper -plugin-opt=-fresolution=/tmp/ccW43w2Y.res -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc --sysroot=/ --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -export-dynamic -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_ab59d /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/7 -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/7/../../.. CMakeFiles/cmTC_ab59d.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-linux-gnu/7/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crtn.o\r\nCOLLECT_GCC_OPTIONS='-v' '-rdynamic' '-o' 'cmTC_ab59d' '-shared-libgcc' '-mtune=generic' '-march=x86-64'\r\nmake[1]: Leaving directory '/home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/CMakeTmp'\r\n\r\n\r\nParsed CXX implicit link information from above output:\r\n  link line regex: [^( *|.*[/\\])(ld|CMAKE_LINK_STARTFILE-NOTFOUND|([^/\\]+-)?ld|collect2)[^/\\]*( |$)]\r\n  ignore line: [Change Dir: /home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/CMakeTmp]\r\n  ignore line: []\r\n  ignore line: [Run Build Command:\"/usr/bin/make\" \"cmTC_ab59d/fast\"]\r\n  ignore line: [/usr/bin/make -f CMakeFiles/cmTC_ab59d.dir/build.make CMakeFiles/cmTC_ab59d.dir/build]\r\n  ignore line: [make[1]: Entering directory '/home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/CMakeTmp']\r\n  ignore line: [Building CXX object CMakeFiles/cmTC_ab59d.dir/CMakeCXXCompilerABI.cpp.o]\r\n  ignore line: [/usr/bin/c++     -o CMakeFiles/cmTC_ab59d.dir/CMakeCXXCompilerABI.cpp.o -c /usr/share/cmake-3.9/Modules/CMakeCXXCompilerABI.cpp]\r\n  ignore line: [Linking CXX executable cmTC_ab59d]\r\n  ignore line: [/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_ab59d.dir/link.txt --verbose=1]\r\n  ignore line: [/usr/bin/c++      -v -rdynamic CMakeFiles/cmTC_ab59d.dir/CMakeCXXCompilerABI.cpp.o  -o cmTC_ab59d ]\r\n  ignore line: [Using built-in specs.]\r\n  ignore line: [COLLECT_GCC=/usr/bin/c++]\r\n  ignore line: [COLLECT_LTO_WRAPPER=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper]\r\n  ignore line: [OFFLOAD_TARGET_NAMES=nvptx-none]\r\n  ignore line: [OFFLOAD_TARGET_DEFAULT=1]\r\n  ignore line: [Target: x86_64-linux-gnu]\r\n  ignore line: [Configured with: ../src/configure -v --with-pkgversion='Ubuntu 7.2.0-8ubuntu3' --with-bugurl=file:///usr/share/doc/gcc-7/README.Bugs --enable-languages=c,ada,c++,go,brig,d,fortran,objc,obj-c++ --prefix=/usr --with-gcc-major-version-only --program-suffix=-7 --program-prefix=x86_64-linux-gnu- --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --with-default-libstdcxx-abi=new --enable-gnu-unique-object --disable-vtable-verify --enable-libmpx --enable-plugin --enable-default-pie --with-system-zlib --with-target-system-zlib --enable-objc-gc=auto --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-offload-targets=nvptx-none --without-cuda-driver --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu]\r\n  ignore line: [Thread model: posix]\r\n  ignore line: [gcc version 7.2.0 (Ubuntu 7.2.0-8ubuntu3) ]\r\n  ignore line: [COMPILER_PATH=/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/]\r\n  ignore line: [LIBRARY_PATH=/usr/lib/gcc/x86_64-linux-gnu/7/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib/:/lib/x86_64-linux-gnu/:/lib/../lib/:/usr/lib/x86_64-linux-gnu/:/usr/lib/../lib/:/usr/lib/gcc/x86_64-linux-gnu/7/../../../:/lib/:/usr/lib/]\r\n  ignore line: [COLLECT_GCC_OPTIONS='-v' '-rdynamic' '-o' 'cmTC_ab59d' '-shared-libgcc' '-mtune=generic' '-march=x86-64']\r\n  link line: [ /usr/lib/gcc/x86_64-linux-gnu/7/collect2 -plugin /usr/lib/gcc/x86_64-linux-gnu/7/liblto_plugin.so -plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper -plugin-opt=-fresolution=/tmp/ccW43w2Y.res -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc -plugin-opt=-pass-through=-lc -plugin-opt=-pass-through=-lgcc_s -plugin-opt=-pass-through=-lgcc --sysroot=/ --build-id --eh-frame-hdr -m elf_x86_64 --hash-style=gnu --as-needed -export-dynamic -dynamic-linker /lib64/ld-linux-x86-64.so.2 -pie -z now -z relro -o cmTC_ab59d /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o /usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o -L/usr/lib/gcc/x86_64-linux-gnu/7 -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu -L/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib -L/lib/x86_64-linux-gnu -L/lib/../lib -L/usr/lib/x86_64-linux-gnu -L/usr/lib/../lib -L/usr/lib/gcc/x86_64-linux-gnu/7/../../.. CMakeFiles/cmTC_ab59d.dir/CMakeCXXCompilerABI.cpp.o -lstdc++ -lm -lgcc_s -lgcc -lc -lgcc_s -lgcc /usr/lib/gcc/x86_64-linux-gnu/7/crtendS.o /usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crtn.o]\r\n    arg [/usr/lib/gcc/x86_64-linux-gnu/7/collect2] ==> ignore\r\n    arg [-plugin] ==> ignore\r\n    arg [/usr/lib/gcc/x86_64-linux-gnu/7/liblto_plugin.so] ==> ignore\r\n    arg [-plugin-opt=/usr/lib/gcc/x86_64-linux-gnu/7/lto-wrapper] ==> ignore\r\n    arg [-plugin-opt=-fresolution=/tmp/ccW43w2Y.res] ==> ignore\r\n    arg [-plugin-opt=-pass-through=-lgcc_s] ==> ignore\r\n    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore\r\n    arg [-plugin-opt=-pass-through=-lc] ==> ignore\r\n    arg [-plugin-opt=-pass-through=-lgcc_s] ==> ignore\r\n    arg [-plugin-opt=-pass-through=-lgcc] ==> ignore\r\n    arg [--sysroot=/] ==> ignore\r\n    arg [--build-id] ==> ignore\r\n    arg [--eh-frame-hdr] ==> ignore\r\n    arg [-m] ==> ignore\r\n    arg [elf_x86_64] ==> ignore\r\n    arg [--hash-style=gnu] ==> ignore\r\n    arg [--as-needed] ==> ignore\r\n    arg [-export-dynamic] ==> ignore\r\n    arg [-dynamic-linker] ==> ignore\r\n    arg [/lib64/ld-linux-x86-64.so.2] ==> ignore\r\n    arg [-pie] ==> ignore\r\n    arg [-znow] ==> ignore\r\n    arg [-zrelro] ==> ignore\r\n    arg [-o] ==> ignore\r\n    arg [cmTC_ab59d] ==> ignore\r\n    arg [/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o] ==> ignore\r\n    arg [/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crti.o] ==> ignore\r\n    arg [/usr/lib/gcc/x86_64-linux-gnu/7/crtbeginS.o] ==> ignore\r\n    arg [-L/usr/lib/gcc/x86_64-linux-gnu/7] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/7]\r\n    arg [-L/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu]\r\n    arg [-L/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib]\r\n    arg [-L/lib/x86_64-linux-gnu] ==> dir [/lib/x86_64-linux-gnu]\r\n    arg [-L/lib/../lib] ==> dir [/lib/../lib]\r\n    arg [-L/usr/lib/x86_64-linux-gnu] ==> dir [/usr/lib/x86_64-linux-gnu]\r\n    arg [-L/usr/lib/../lib] ==> dir [/usr/lib/../lib]\r\n    arg [-L/usr/lib/gcc/x86_64-linux-gnu/7/../../..] ==> dir [/usr/lib/gcc/x86_64-linux-gnu/7/../../..]\r\n    arg [CMakeFiles/cmTC_ab59d.dir/CMakeCXXCompilerABI.cpp.o] ==> ignore\r\n    arg [-lstdc++] ==> lib [stdc++]\r\n    arg [-lm] ==> lib [m]\r\n    arg [-lgcc_s] ==> lib [gcc_s]\r\n    arg [-lgcc] ==> lib [gcc]\r\n    arg [-lc] ==> lib [c]\r\n    arg [-lgcc_s] ==> lib [gcc_s]\r\n    arg [-lgcc] ==> lib [gcc]\r\n    arg [/usr/lib/gcc/x86_64-linux-gnu/7/crtendS.o] ==> ignore\r\n    arg [/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/crtn.o] ==> ignore\r\n  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/7] ==> [/usr/lib/gcc/x86_64-linux-gnu/7]\r\n  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu] ==> [/usr/lib/x86_64-linux-gnu]\r\n  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/7/../../../../lib] ==> [/usr/lib]\r\n  collapse library dir [/lib/x86_64-linux-gnu] ==> [/lib/x86_64-linux-gnu]\r\n  collapse library dir [/lib/../lib] ==> [/lib]\r\n  collapse library dir [/usr/lib/x86_64-linux-gnu] ==> [/usr/lib/x86_64-linux-gnu]\r\n  collapse library dir [/usr/lib/../lib] ==> [/usr/lib]\r\n  collapse library dir [/usr/lib/gcc/x86_64-linux-gnu/7/../../..] ==> [/usr/lib]\r\n  implicit libs: [stdc++;m;gcc_s;gcc;c;gcc_s;gcc]\r\n  implicit dirs: [/usr/lib/gcc/x86_64-linux-gnu/7;/usr/lib/x86_64-linux-gnu;/usr/lib;/lib/x86_64-linux-gnu;/lib]\r\n  implicit fwks: []\r\n\r\n\r\n\r\n\r\nDetecting CXX [-std=c++1z] compiler features compiled with the following output:\r\nChange Dir: /home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/CMakeTmp\r\n\r\nRun Build Command:\"/usr/bin/make\" \"cmTC_69418/fast\"\r\n/usr/bin/make -f CMakeFiles/cmTC_69418.dir/build.make CMakeFiles/cmTC_69418.dir/build\r\nmake[1]: Entering directory '/home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/CMakeTmp'\r\nBuilding CXX object CMakeFiles/cmTC_69418.dir/feature_tests.cxx.o\r\n/usr/bin/c++    -std=c++1z -o CMakeFiles/cmTC_69418.dir/feature_tests.cxx.o -c /home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/feature_tests.cxx\r\nLinking CXX executable cmTC_69418\r\n/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_69418.dir/link.txt --verbose=1\r\n/usr/bin/c++       -rdynamic CMakeFiles/cmTC_69418.dir/feature_tests.cxx.o  -o cmTC_69418 \r\nmake[1]: Leaving directory '/home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/CMakeTmp'\r\n\r\n\r\n    Feature record: CXX_FEATURE:1cxx_aggregate_default_initializers\r\n    Feature record: CXX_FEATURE:1cxx_alias_templates\r\n    Feature record: CXX_FEATURE:1cxx_alignas\r\n    Feature record: CXX_FEATURE:1cxx_alignof\r\n    Feature record: CXX_FEATURE:1cxx_attributes\r\n    Feature record: CXX_FEATURE:1cxx_attribute_deprecated\r\n    Feature record: CXX_FEATURE:1cxx_auto_type\r\n    Feature record: CXX_FEATURE:1cxx_binary_literals\r\n    Feature record: CXX_FEATURE:1cxx_constexpr\r\n    Feature record: CXX_FEATURE:1cxx_contextual_conversions\r\n    Feature record: CXX_FEATURE:1cxx_decltype\r\n    Feature record: CXX_FEATURE:1cxx_decltype_auto\r\n    Feature record: CXX_FEATURE:1cxx_decltype_incomplete_return_types\r\n    Feature record: CXX_FEATURE:1cxx_default_function_template_args\r\n    Feature record: CXX_FEATURE:1cxx_defaulted_functions\r\n    Feature record: CXX_FEATURE:1cxx_defaulted_move_initializers\r\n    Feature record: CXX_FEATURE:1cxx_delegating_constructors\r\n    Feature record: CXX_FEATURE:1cxx_deleted_functions\r\n    Feature record: CXX_FEATURE:1cxx_digit_separators\r\n    Feature record: CXX_FEATURE:1cxx_enum_forward_declarations\r\n    Feature record: CXX_FEATURE:1cxx_explicit_conversions\r\n    Feature record: CXX_FEATURE:1cxx_extended_friend_declarations\r\n    Feature record: CXX_FEATURE:1cxx_extern_templates\r\n    Feature record: CXX_FEATURE:1cxx_final\r\n    Feature record: CXX_FEATURE:1cxx_func_identifier\r\n    Feature record: CXX_FEATURE:1cxx_generalized_initializers\r\n    Feature record: CXX_FEATURE:1cxx_generic_lambdas\r\n    Feature record: CXX_FEATURE:1cxx_inheriting_constructors\r\n    Feature record: CXX_FEATURE:1cxx_inline_namespaces\r\n    Feature record: CXX_FEATURE:1cxx_lambdas\r\n    Feature record: CXX_FEATURE:1cxx_lambda_init_captures\r\n    Feature record: CXX_FEATURE:1cxx_local_type_template_args\r\n    Feature record: CXX_FEATURE:1cxx_long_long_type\r\n    Feature record: CXX_FEATURE:1cxx_noexcept\r\n    Feature record: CXX_FEATURE:1cxx_nonstatic_member_init\r\n    Feature record: CXX_FEATURE:1cxx_nullptr\r\n    Feature record: CXX_FEATURE:1cxx_override\r\n    Feature record: CXX_FEATURE:1cxx_range_for\r\n    Feature record: CXX_FEATURE:1cxx_raw_string_literals\r\n    Feature record: CXX_FEATURE:1cxx_reference_qualified_functions\r\n    Feature record: CXX_FEATURE:1cxx_relaxed_constexpr\r\n    Feature record: CXX_FEATURE:1cxx_return_type_deduction\r\n    Feature record: CXX_FEATURE:1cxx_right_angle_brackets\r\n    Feature record: CXX_FEATURE:1cxx_rvalue_references\r\n    Feature record: CXX_FEATURE:1cxx_sizeof_member\r\n    Feature record: CXX_FEATURE:1cxx_static_assert\r\n    Feature record: CXX_FEATURE:1cxx_strong_enums\r\n    Feature record: CXX_FEATURE:1cxx_template_template_parameters\r\n    Feature record: CXX_FEATURE:1cxx_thread_local\r\n    Feature record: CXX_FEATURE:1cxx_trailing_return_types\r\n    Feature record: CXX_FEATURE:1cxx_unicode_literals\r\n    Feature record: CXX_FEATURE:1cxx_uniform_initialization\r\n    Feature record: CXX_FEATURE:1cxx_unrestricted_unions\r\n    Feature record: CXX_FEATURE:1cxx_user_literals\r\n    Feature record: CXX_FEATURE:1cxx_variable_templates\r\n    Feature record: CXX_FEATURE:1cxx_variadic_macros\r\n    Feature record: CXX_FEATURE:1cxx_variadic_templates\r\n\r\n\r\nDetecting CXX [-std=c++14] compiler features compiled with the following output:\r\nChange Dir: /home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/CMakeTmp\r\n\r\nRun Build Command:\"/usr/bin/make\" \"cmTC_966bb/fast\"\r\n/usr/bin/make -f CMakeFiles/cmTC_966bb.dir/build.make CMakeFiles/cmTC_966bb.dir/build\r\nmake[1]: Entering directory '/home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/CMakeTmp'\r\nBuilding CXX object CMakeFiles/cmTC_966bb.dir/feature_tests.cxx.o\r\n/usr/bin/c++    -std=c++14 -o CMakeFiles/cmTC_966bb.dir/feature_tests.cxx.o -c /home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/feature_tests.cxx\r\nLinking CXX executable cmTC_966bb\r\n/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_966bb.dir/link.txt --verbose=1\r\n/usr/bin/c++       -rdynamic CMakeFiles/cmTC_966bb.dir/feature_tests.cxx.o  -o cmTC_966bb \r\nmake[1]: Leaving directory '/home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/CMakeTmp'\r\n\r\n\r\n    Feature record: CXX_FEATURE:1cxx_aggregate_default_initializers\r\n    Feature record: CXX_FEATURE:1cxx_alias_templates\r\n    Feature record: CXX_FEATURE:1cxx_alignas\r\n    Feature record: CXX_FEATURE:1cxx_alignof\r\n    Feature record: CXX_FEATURE:1cxx_attributes\r\n    Feature record: CXX_FEATURE:1cxx_attribute_deprecated\r\n    Feature record: CXX_FEATURE:1cxx_auto_type\r\n    Feature record: CXX_FEATURE:1cxx_binary_literals\r\n    Feature record: CXX_FEATURE:1cxx_constexpr\r\n    Feature record: CXX_FEATURE:1cxx_contextual_conversions\r\n    Feature record: CXX_FEATURE:1cxx_decltype\r\n    Feature record: CXX_FEATURE:1cxx_decltype_auto\r\n    Feature record: CXX_FEATURE:1cxx_decltype_incomplete_return_types\r\n    Feature record: CXX_FEATURE:1cxx_default_function_template_args\r\n    Feature record: CXX_FEATURE:1cxx_defaulted_functions\r\n    Feature record: CXX_FEATURE:1cxx_defaulted_move_initializers\r\n    Feature record: CXX_FEATURE:1cxx_delegating_constructors\r\n    Feature record: CXX_FEATURE:1cxx_deleted_functions\r\n    Feature record: CXX_FEATURE:1cxx_digit_separators\r\n    Feature record: CXX_FEATURE:1cxx_enum_forward_declarations\r\n    Feature record: CXX_FEATURE:1cxx_explicit_conversions\r\n    Feature record: CXX_FEATURE:1cxx_extended_friend_declarations\r\n    Feature record: CXX_FEATURE:1cxx_extern_templates\r\n    Feature record: CXX_FEATURE:1cxx_final\r\n    Feature record: CXX_FEATURE:1cxx_func_identifier\r\n    Feature record: CXX_FEATURE:1cxx_generalized_initializers\r\n    Feature record: CXX_FEATURE:1cxx_generic_lambdas\r\n    Feature record: CXX_FEATURE:1cxx_inheriting_constructors\r\n    Feature record: CXX_FEATURE:1cxx_inline_namespaces\r\n    Feature record: CXX_FEATURE:1cxx_lambdas\r\n    Feature record: CXX_FEATURE:1cxx_lambda_init_captures\r\n    Feature record: CXX_FEATURE:1cxx_local_type_template_args\r\n    Feature record: CXX_FEATURE:1cxx_long_long_type\r\n    Feature record: CXX_FEATURE:1cxx_noexcept\r\n    Feature record: CXX_FEATURE:1cxx_nonstatic_member_init\r\n    Feature record: CXX_FEATURE:1cxx_nullptr\r\n    Feature record: CXX_FEATURE:1cxx_override\r\n    Feature record: CXX_FEATURE:1cxx_range_for\r\n    Feature record: CXX_FEATURE:1cxx_raw_string_literals\r\n    Feature record: CXX_FEATURE:1cxx_reference_qualified_functions\r\n    Feature record: CXX_FEATURE:1cxx_relaxed_constexpr\r\n    Feature record: CXX_FEATURE:1cxx_return_type_deduction\r\n    Feature record: CXX_FEATURE:1cxx_right_angle_brackets\r\n    Feature record: CXX_FEATURE:1cxx_rvalue_references\r\n    Feature record: CXX_FEATURE:1cxx_sizeof_member\r\n    Feature record: CXX_FEATURE:1cxx_static_assert\r\n    Feature record: CXX_FEATURE:1cxx_strong_enums\r\n    Feature record: CXX_FEATURE:1cxx_template_template_parameters\r\n    Feature record: CXX_FEATURE:1cxx_thread_local\r\n    Feature record: CXX_FEATURE:1cxx_trailing_return_types\r\n    Feature record: CXX_FEATURE:1cxx_unicode_literals\r\n    Feature record: CXX_FEATURE:1cxx_uniform_initialization\r\n    Feature record: CXX_FEATURE:1cxx_unrestricted_unions\r\n    Feature record: CXX_FEATURE:1cxx_user_literals\r\n    Feature record: CXX_FEATURE:1cxx_variable_templates\r\n    Feature record: CXX_FEATURE:1cxx_variadic_macros\r\n    Feature record: CXX_FEATURE:1cxx_variadic_templates\r\n\r\n\r\nDetecting CXX [-std=c++11] compiler features compiled with the following output:\r\nChange Dir: /home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/CMakeTmp\r\n\r\nRun Build Command:\"/usr/bin/make\" \"cmTC_80175/fast\"\r\n/usr/bin/make -f CMakeFiles/cmTC_80175.dir/build.make CMakeFiles/cmTC_80175.dir/build\r\nmake[1]: Entering directory '/home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/CMakeTmp'\r\nBuilding CXX object CMakeFiles/cmTC_80175.dir/feature_tests.cxx.o\r\n/usr/bin/c++    -std=c++11 -o CMakeFiles/cmTC_80175.dir/feature_tests.cxx.o -c /home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/feature_tests.cxx\r\nLinking CXX executable cmTC_80175\r\n/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_80175.dir/link.txt --verbose=1\r\n/usr/bin/c++       -rdynamic CMakeFiles/cmTC_80175.dir/feature_tests.cxx.o  -o cmTC_80175 \r\nmake[1]: Leaving directory '/home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/CMakeTmp'\r\n\r\n\r\n    Feature record: CXX_FEATURE:0cxx_aggregate_default_initializers\r\n    Feature record: CXX_FEATURE:1cxx_alias_templates\r\n    Feature record: CXX_FEATURE:1cxx_alignas\r\n    Feature record: CXX_FEATURE:1cxx_alignof\r\n    Feature record: CXX_FEATURE:1cxx_attributes\r\n    Feature record: CXX_FEATURE:0cxx_attribute_deprecated\r\n    Feature record: CXX_FEATURE:1cxx_auto_type\r\n    Feature record: CXX_FEATURE:0cxx_binary_literals\r\n    Feature record: CXX_FEATURE:1cxx_constexpr\r\n    Feature record: CXX_FEATURE:0cxx_contextual_conversions\r\n    Feature record: CXX_FEATURE:1cxx_decltype\r\n    Feature record: CXX_FEATURE:0cxx_decltype_auto\r\n    Feature record: CXX_FEATURE:1cxx_decltype_incomplete_return_types\r\n    Feature record: CXX_FEATURE:1cxx_default_function_template_args\r\n    Feature record: CXX_FEATURE:1cxx_defaulted_functions\r\n    Feature record: CXX_FEATURE:1cxx_defaulted_move_initializers\r\n    Feature record: CXX_FEATURE:1cxx_delegating_constructors\r\n    Feature record: CXX_FEATURE:1cxx_deleted_functions\r\n    Feature record: CXX_FEATURE:0cxx_digit_separators\r\n    Feature record: CXX_FEATURE:1cxx_enum_forward_declarations\r\n    Feature record: CXX_FEATURE:1cxx_explicit_conversions\r\n    Feature record: CXX_FEATURE:1cxx_extended_friend_declarations\r\n    Feature record: CXX_FEATURE:1cxx_extern_templates\r\n    Feature record: CXX_FEATURE:1cxx_final\r\n    Feature record: CXX_FEATURE:1cxx_func_identifier\r\n    Feature record: CXX_FEATURE:1cxx_generalized_initializers\r\n    Feature record: CXX_FEATURE:0cxx_generic_lambdas\r\n    Feature record: CXX_FEATURE:1cxx_inheriting_constructors\r\n    Feature record: CXX_FEATURE:1cxx_inline_namespaces\r\n    Feature record: CXX_FEATURE:1cxx_lambdas\r\n    Feature record: CXX_FEATURE:0cxx_lambda_init_captures\r\n    Feature record: CXX_FEATURE:1cxx_local_type_template_args\r\n    Feature record: CXX_FEATURE:1cxx_long_long_type\r\n    Feature record: CXX_FEATURE:1cxx_noexcept\r\n    Feature record: CXX_FEATURE:1cxx_nonstatic_member_init\r\n    Feature record: CXX_FEATURE:1cxx_nullptr\r\n    Feature record: CXX_FEATURE:1cxx_override\r\n    Feature record: CXX_FEATURE:1cxx_range_for\r\n    Feature record: CXX_FEATURE:1cxx_raw_string_literals\r\n    Feature record: CXX_FEATURE:1cxx_reference_qualified_functions\r\n    Feature record: CXX_FEATURE:0cxx_relaxed_constexpr\r\n    Feature record: CXX_FEATURE:0cxx_return_type_deduction\r\n    Feature record: CXX_FEATURE:1cxx_right_angle_brackets\r\n    Feature record: CXX_FEATURE:1cxx_rvalue_references\r\n    Feature record: CXX_FEATURE:1cxx_sizeof_member\r\n    Feature record: CXX_FEATURE:1cxx_static_assert\r\n    Feature record: CXX_FEATURE:1cxx_strong_enums\r\n    Feature record: CXX_FEATURE:1cxx_template_template_parameters\r\n    Feature record: CXX_FEATURE:1cxx_thread_local\r\n    Feature record: CXX_FEATURE:1cxx_trailing_return_types\r\n    Feature record: CXX_FEATURE:1cxx_unicode_literals\r\n    Feature record: CXX_FEATURE:1cxx_uniform_initialization\r\n    Feature record: CXX_FEATURE:1cxx_unrestricted_unions\r\n    Feature record: CXX_FEATURE:1cxx_user_literals\r\n    Feature record: CXX_FEATURE:0cxx_variable_templates\r\n    Feature record: CXX_FEATURE:1cxx_variadic_macros\r\n    Feature record: CXX_FEATURE:1cxx_variadic_templates\r\n\r\n\r\nDetecting CXX [-std=c++98] compiler features compiled with the following output:\r\nChange Dir: /home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/CMakeTmp\r\n\r\nRun Build Command:\"/usr/bin/make\" \"cmTC_90c4d/fast\"\r\n/usr/bin/make -f CMakeFiles/cmTC_90c4d.dir/build.make CMakeFiles/cmTC_90c4d.dir/build\r\nmake[1]: Entering directory '/home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/CMakeTmp'\r\nBuilding CXX object CMakeFiles/cmTC_90c4d.dir/feature_tests.cxx.o\r\n/usr/bin/c++    -std=c++98 -o CMakeFiles/cmTC_90c4d.dir/feature_tests.cxx.o -c /home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/feature_tests.cxx\r\nLinking CXX executable cmTC_90c4d\r\n/usr/bin/cmake -E cmake_link_script CMakeFiles/cmTC_90c4d.dir/link.txt --verbose=1\r\n/usr/bin/c++       -rdynamic CMakeFiles/cmTC_90c4d.dir/feature_tests.cxx.o  -o cmTC_90c4d \r\nmake[1]: Leaving directory '/home/nuckykk/下载/vnpy-1.8/vnpy/api/ib/build/CMakeFiles/CMakeTmp'\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/775/comments",
    "author": "nuckykk",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-03-12T01:38:10Z",
        "body": "1. 没看明白这里的bug是什么，请说明下细节\r\n2. 路径名称中不要有中文“下载”"
      }
    ]
  },
  {
    "number": 770,
    "title": "vnpy.trader.app.ctaStrategy.ctaTemplate.BarManager.updateTick在tick数据延迟到达情况下推送的bar不正确",
    "created_at": "2018-03-06T06:11:42Z",
    "closed_at": "2018-05-07T15:05:08Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/770",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 7\r\n* Anaconda版本: Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 1.7.2\r\n\r\n## Issue类型\r\nQuestion\r\n假设目前处于2分10秒，当前bar是2分的bar，这时由于网络原因我收到了时间戳为1分57秒的tick，则2分的bar已经被推送出去了。\r\n```\r\n    def updateTick(self, tick):\r\n        \"\"\"TICK更新\"\"\"\r\n...\r\n        elif self.bar.datetime.minute != tick.datetime.minute:\r\n            # 生成上一分钟K线的时间戳\r\n            self.bar.datetime = self.bar.datetime.replace(second=0, microsecond=0)  # 将秒和微秒设为0\r\n            self.bar.date = self.bar.datetime.strftime('%Y%m%d')\r\n            self.bar.time = self.bar.datetime.strftime('%H:%M:%S.%f')\r\n            \r\n            # 推送已经结束的上一分钟K线\r\n            self.onBar(self.bar)\r\n            \r\n            # 创建新的K线对象\r\n            self.bar = VtBarData()\r\n            newMinute = True\r\n            \r\n...\r\n\r\n\r\n```\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/770/comments",
    "author": "tanruoqiao",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-03-07T01:30:53Z",
        "body": "这点之前确实没考虑过，正常情况下，tick的推送应该是符合时间顺序的。\r\n\r\n如果确实遇到，建议在updateTick加上一个时间戳的检查，丢弃所有比上一个tick时间更早的tick"
      }
    ]
  },
  {
    "number": 766,
    "title": "ImportError: twsapi.so: cannot open shared object file: No such file or directory",
    "created_at": "2018-03-05T09:35:43Z",
    "closed_at": "2018-03-06T04:52:45Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/766",
    "body": "第一次安装VNPY，运行时碰到下面错误，我搜索了一下没看到相关内容，哪位大神帮我指点一下：\r\n\r\nhzhen@ubuntu:~/vnpy-1.8/examples/VnTrader$ python run.py\r\nTraceback (most recent call last):\r\n  File \"run.py\", line 19, in <module>\r\n    from vnpy.trader.gateway import (ctpGateway, oandaGateway, \r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/gateway/ibGateway/__init__.py\", line 4, in <module>\r\n    from ibGateway import IbGateway\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/gateway/ibGateway/ibGateway.py\", line 20, in <module>\r\n    from vnpy.api.ib import *\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/api/ib/__init__.py\", line 3, in <module>\r\n    from vnib import *\r\nImportError: twsapi.so: cannot open shared object file: No such file or directory\r\n\r\n\r\n## 环境\r\n\r\n* 操作系统: Ubuntu 16.04\r\n* Anaconda版本: Anaconda 4.0.0 Python 2.7 32\r\n* vn.py版本: v1.8\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n希望看到启动界面\r\n\r\n## 实际程序行为\r\n显示如上错误信息\r\n\r\n## 重现步骤\r\nN/A\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/766/comments",
    "author": "swiftzhen",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-03-06T01:09:08Z",
        "body": "进入vnpy/api/ib目录下，运行build.sh，然后再回到vnpy目录运行install.bat安装"
      },
      {
        "user": "swiftzhen",
        "created_at": "2018-03-06T01:38:02Z",
        "body": "Build.sh时碰到以下输出\r\n\r\n/usr/include/c++/5/bits/unique_ptr.h:49:28: note: declared here\r\n   template<typename> class auto_ptr;\r\n                            ^\r\nvirtual memory exhausted: Cannot allocate memory\r\nCMakeFiles/vnib.dir/build.make:62: recipe for target 'CMakeFiles/vnib.dir/vnib/vnib/vnib.cpp.o' failed\r\nmake[2]: *** [CMakeFiles/vnib.dir/vnib/vnib/vnib.cpp.o] Error 1\r\nmake[2]: Leaving directory '/home/hzhen/vnpy-1.8/vnpy/api/ib/build'\r\nCMakeFiles/Makefile2:67: recipe for target 'CMakeFiles/vnib.dir/all' failed\r\nmake[1]: *** [CMakeFiles/vnib.dir/all] Error 2\r\nmake[1]: Leaving directory '/home/hzhen/vnpy-1.8/vnpy/api/ib/build'\r\nMakefile:83: recipe for target 'all' failed\r\nmake: *** [all] Error 2\r\nhzhen@ubuntu:~/vnpy-1.8/vnpy/api/ib$ \r\n\r\n在运行pyrhon sun.py碰到开始的同样问题，是否我的安装方法有问题？\r\n\r\n"
      },
      {
        "user": "swiftzhen",
        "created_at": "2018-03-06T02:26:12Z",
        "body": "我给虚拟机增加了内存，上面的build.sh的错误消失了，我重新尝试了安装，发现以下错误信息:\r\n\r\nhzhen@ubuntu:~/vnpy-1.8/examples/VnTrader$ python run.py\r\n--------------------\r\nFailed to import strategy file vnpy.trader.app.ctaStrategy.strategy.strategyMultiTimeframe:\r\nTraceback (most recent call last):\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 18, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/strategy/strategyMultiTimeframe.py\", line 9, in <module>\r\n    from vnpy.trader.app.ctaStrategy.ctaTemplate import (CtaTemplate,\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/ctaTemplate.py\", line 8, in <module>\r\n    import talib\r\nImportError: No module named talib\r\n--------------------\r\nFailed to import strategy file vnpy.trader.app.ctaStrategy.strategy.strategyKingKeltner:\r\nTraceback (most recent call last):\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 18, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/strategy/strategyKingKeltner.py\", line 14, in <module>\r\n    from vnpy.trader.app.ctaStrategy.ctaTemplate import (CtaTemplate,\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/ctaTemplate.py\", line 8, in <module>\r\n    import talib\r\nImportError: No module named talib\r\n--------------------\r\nFailed to import strategy file vnpy.trader.app.ctaStrategy.strategy.strategyBollChannel:\r\nTraceback (most recent call last):\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 18, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/strategy/strategyBollChannel.py\", line 23, in <module>\r\n    from vnpy.trader.app.ctaStrategy.ctaTemplate import (CtaTemplate,\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/ctaTemplate.py\", line 8, in <module>\r\n    import talib\r\nImportError: No module named talib\r\n--------------------\r\nFailed to import strategy file vnpy.trader.app.ctaStrategy.strategy.strategyAtrRsi:\r\nTraceback (most recent call last):\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 18, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/strategy/strategyAtrRsi.py\", line 14, in <module>\r\n    from vnpy.trader.app.ctaStrategy.ctaTemplate import (CtaTemplate,\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/ctaTemplate.py\", line 8, in <module>\r\n    import talib\r\nImportError: No module named talib\r\n--------------------\r\nFailed to import strategy file vnpy.trader.app.ctaStrategy.strategy.strategyDoubleMa:\r\nTraceback (most recent call last):\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 18, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/strategy/strategyDoubleMa.py\", line 10, in <module>\r\n    from vnpy.trader.app.ctaStrategy.ctaTemplate import (CtaTemplate,\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/ctaTemplate.py\", line 8, in <module>\r\n    import talib\r\nImportError: No module named talib\r\n--------------------\r\nFailed to import strategy file vnpy.trader.app.ctaStrategy.strategy.strategyDualThrust:\r\nTraceback (most recent call last):\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 18, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/strategy/strategyDualThrust.py\", line 11, in <module>\r\n    from vnpy.trader.app.ctaStrategy.ctaTemplate import CtaTemplate, BarGenerator\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/ctaTemplate.py\", line 8, in <module>\r\n    import talib\r\nImportError: No module named talib\r\n--------------------\r\nFailed to import strategy file vnpy.trader.app.ctaStrategy.strategy.strategyMultiSignal:\r\nTraceback (most recent call last):\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 18, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/strategy/strategyMultiSignal.py\", line 12, in <module>\r\n    from vnpy.trader.app.ctaStrategy.ctaTemplate import (TargetPosTemplate,\r\n  File \"/home/hzhen/anaconda2/lib/python2.7/site-packages/vnpy-1.8.0-py2.7.egg/vnpy/trader/app/ctaStrategy/ctaTemplate.py\", line 8, in <module>\r\n    import talib\r\nImportError: No module named talib\r\nTraceback (most recent call last):\r\n  File \"run.py\", line 70, in <module>\r\n    main()\r\n  File \"run.py\", line 54, in main\r\n    me.addGateway(xtpGateway)\r\nNameError: global name 'xtpGateway' is not defined\r\n\r\n"
      },
      {
        "user": "swiftzhen",
        "created_at": "2018-03-06T04:52:45Z",
        "body": "从头重新安装，所以关掉此问题。"
      }
    ]
  },
  {
    "number": 762,
    "title": "ctaStrategy模块无法加载当前目录下子目录的策略文件",
    "created_at": "2018-03-01T05:18:21Z",
    "closed_at": "2018-05-07T15:06:41Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/762",
    "body": "## 环境\r\n\r\n* 操作系统: Windows10\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 1.73\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n在当前工作目录中，策略文件放置在当前工作目录中的子目录。\r\n## 实际程序行为\r\napp\\ctaStratgy\\strategy\\__init__.py的loadStrategyModule会报错，无法动态加载子目录中的策略模块。\r\n\r\n## 重现步骤\r\n1.  当前目录结构：project\\strategy\\strategyAtrRsi.py\r\n2.  运行project根目录下的run.py\r\n3. 会无法加载strategyAtrRsi.py\r\n\r\n个人解决方案是，请指正：\r\nworkingPath = os.getcwd()\r\nfor root, subdirs, files in os.walk(workingPath,False):\r\n    for name in files:\r\n        # 只有文件名中包含strategy且非.pyc的文件，才是策略文件\r\n        if 'strategy' in name and '.pyc' not in name:\r\n            # 模块名称无需前缀\r\n            moduleName = name.replace('.py', '')\r\n            import sys\r\n            sys.path.append(root)\r\n            loadStrategyModule(moduleName) ",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/762/comments",
    "author": "yesheng1984",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-03-02T01:40:31Z",
        "body": "设计上就不支持工作目录下子目录中的策略文件加载。\r\n\r\n修改方法：\r\n1. strategy目录中添加__init__.py\r\n2. moduleName = 'strategy.' + moduleName\r\n\r\n请试试看吧"
      },
      {
        "user": "justinchou",
        "created_at": "2019-02-14T02:31:51Z",
        "body": "我在 MacOS下引入 `vnpy.trader.app.ctaStrategy` 报错提示：\r\n```\r\n--------------------\r\nFailed to import strategy file strategyAtrRsi:\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/site-packages/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 20, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\nImportError: No module named strategyAtrRsi\r\n--------------------\r\nFailed to import strategy file strategyBollChannel:\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/site-packages/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 20, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\nImportError: No module named strategyBollChannel\r\n--------------------\r\nFailed to import strategy file strategyDoubleMa:\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/site-packages/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 20, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/importlib/__init__.py\", line 37, in import_module\r\n    __import__(name)\r\nImportError: No module named strategyDoubleMa\r\n--------------------\r\nFailed to import strategy file strategyMultiTimeframe:\r\nTraceback (most recent call last):\r\n  File \"/anaconda3/envs/Python27/lib/python2.7/site-packages/vnpy/trader/app/ctaStrategy/strategy/__init__.py\", line 20, in loadStrategyModule\r\n    module = importlib.import_module(moduleName)\r\n........\r\n```"
      }
    ]
  },
  {
    "number": 751,
    "title": "回测优化参数run optimization以后，输出对应的目标以及每个优化参数",
    "created_at": "2018-02-25T09:51:28Z",
    "closed_at": "2018-02-26T01:13:47Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/751",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Enhancement\r\n\r\n优化多个参数结果以后，希望可以输出excel每个遍历的结果和对应目标值，方便可视化和分析\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/751/comments",
    "author": "Gemini-Nick",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-02-26T01:13:47Z",
        "body": "目前已经可以输出每次遍历结果的所有统计数值，调用BacktestingEngine的runParallelOptimization函数后返回的结果列表中就有。\r\n\r\n输出为EXCEL的操作建议自己用csv模块处理下，很容易。"
      }
    ]
  },
  {
    "number": 749,
    "title": "跪求开发多品种的回测",
    "created_at": "2018-02-22T17:51:06Z",
    "closed_at": "2018-02-26T01:08:59Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/749",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/749/comments",
    "author": "hackerwei",
    "comments": [
      {
        "user": "xldistance",
        "created_at": "2018-02-25T00:46:17Z",
        "body": "vnpy/examples/CtaBacktesting/backtesting_portfolio.ipynb"
      },
      {
        "user": "vnpy",
        "created_at": "2018-02-26T01:08:59Z",
        "body": "楼上正解"
      },
      {
        "user": "hackerwei",
        "created_at": "2018-02-26T01:51:02Z",
        "body": "OK, close!"
      }
    ]
  },
  {
    "number": 748,
    "title": "CTP关于上期所持仓问题以及大连郑州今昨持仓问题。",
    "created_at": "2018-02-22T16:48:20Z",
    "closed_at": "2018-08-05T16:01:21Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/748",
    "body": " # 针对上期所持仓的今昨分条返回（有昨仓、无今仓），读取昨仓数据\r\n        if data['YdPosition'] and not data['TodayPosition']:\r\n            pos.ydPosition = data['Position']\r\n\r\nctpGateway中这行代码可以解决上期所今昨仓问题。\r\n但是对于郑州和大连来说，如果持有昨仓，而无今仓，那么此条语句同样执行，可以得到昨仓的持仓数，同时下面的代码得到的总持仓数。\r\n        # 汇总总仓\r\n        pos.position += data['Position']\r\n        pos.positionProfit += data['PositionProfit']\r\n但是对于持有同时持有昨仓和今仓的大连郑州品种，如果盘中打开vnpy，那么pos.ydPosition = data['Position']的语句不会被触发，得到的总持仓数是正确的，但是此时昨持仓数为0， 那么在updatePosition 更新函数中，\r\n\r\n            self.longPos = pos.position\r\n            self.longYd = pos.ydPosition\r\n            self.longTd = self.longPos - self.longYd\r\n\r\nself.longTd的数值把昨仓和今仓一起计算了，造成昨仓今仓的数据混乱，虽然逻辑上郑州大连不分今昨仓，但是在现实中会发生混乱。\r\nCTP文档中描述：\r\nYdPosition 持仓查询记录中的昨持仓是今天开盘前的一个初始值，不会因为平昨或者平仓而减少。 当前时侯的昨持仓=总持仓-今持仓。YdPosition := Position - TodayPosition。\r\n\r\n那么ctp中修改为   \r\n        if data['YdPosition']:\r\n            pos.ydPosition = data['Position'] - data['TodayPosition']\r\n\r\n对于有昨仓，那么这条语句都会被执行，可以得到正确的昨仓持仓数，随后的updatePosition 函数更新得到的结果都没问题。\r\n这是看ctp代码中感到不理解的地方，提出来自己的看法，不知道是否正确。\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/748/comments",
    "author": "raycool",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-02-23T01:11:34Z",
        "body": "我来检查下，这个点看得很细了"
      },
      {
        "user": "jerrycgc",
        "created_at": "2018-05-12T00:02:29Z",
        "body": "这BUG还没有更新吗"
      },
      {
        "user": "vnpy",
        "created_at": "2018-08-05T16:01:21Z",
        "body": "已修复"
      }
    ]
  },
  {
    "number": 742,
    "title": "WEB页面登陆后无数据",
    "created_at": "2018-02-22T01:32:56Z",
    "closed_at": "2018-05-07T14:54:10Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/742",
    "body": "## 环境\r\n\r\n* 操作系统: LINUX，CENTOS7.0\r\n* Anaconda版本:最新64位\r\n* vn.py版本: DEV\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n1,登陆连接成功后应该会展示资金持仓等信息\r\n2，订阅显示成功，行情区域有数据\r\n\r\n\r\n## 实际程序行为\r\n无任何显示数据\r\n\r\n## 重现步骤\r\n\r\nWEB展示。无数据。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/742/comments",
    "author": "ShellMount",
    "comments": [
      {
        "user": "cccbbbaaab",
        "created_at": "2018-03-02T00:28:13Z",
        "body": "能看一下后台的flask有什么输出么？"
      },
      {
        "user": "ShellMount",
        "created_at": "2018-03-02T01:15:33Z",
        "body": "通过定时重启解决了无数据的问题。\r\n（原因可能是run.py经常卡死，如连续跑一天。就会卡死）\r\n\r\n订阅功能，仍然显示成功，但无数据。\r\n且后台没有输出报错信息。\r\n\r\n同时，还发现，持仓盈亏一列，无数据。（持仓的其它字段有数据，被接口一列填补到了持仓盈亏，显示为“CTP”）"
      },
      {
        "user": "vnpy",
        "created_at": "2018-03-02T01:38:01Z",
        "body": "@ShellMount 订阅行情，请确保在交易时段或者用24小时那套环境\r\n@cccbbbaaab 请帮忙看下持仓盈亏的问题吧"
      },
      {
        "user": "ShellMount",
        "created_at": "2018-03-02T01:52:49Z",
        "body": "@vnpy 是在交易时段，且是正式账号。"
      },
      {
        "user": "vnpy",
        "created_at": "2018-03-05T01:47:33Z",
        "body": "@ShellMount 给个截图吧，然后也说明下你的操作步骤？"
      },
      {
        "user": "ShellMount",
        "created_at": "2018-03-05T01:50:59Z",
        "body": "由于这图片上传不成功。\r\n我把图片，放到QQ群的文件里面了，\r\n文件名： issue369778941"
      },
      {
        "user": "vnpy",
        "created_at": "2018-03-06T01:30:36Z",
        "body": "看了下，确实情况比较奇怪，两个建议：\r\n1. 使用chrome浏览器\r\n2. 试试最新的dev分支，修复了几个web的bug"
      },
      {
        "user": "ShellMount",
        "created_at": "2018-03-06T01:32:34Z",
        "body": "我用IPHONE的浏览器测试过：效果一样。\r\n\r\n另外：\r\nWEB功能的run.py经常卡死，如连续跑一天。就会卡死\r\n\r\n最好也能解决一下。这个我没能定位到原因。\r\n现象就是跑过一天后，不响应服务，是大概率事件。"
      },
      {
        "user": "vnpy",
        "created_at": "2018-03-07T01:28:31Z",
        "body": "和VnTrader一样，WebTrader每天3点后也需要关闭直到开盘前重启，不能连续不关"
      }
    ]
  },
  {
    "number": 726,
    "title": "中信证券接口轮训qryAccount, qryPosition两个接口会导致程序崩溃",
    "created_at": "2018-02-05T08:49:41Z",
    "closed_at": "2018-02-12T06:54:10Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/726",
    "body": "\r\n\r\n* 操作系统: 如Windows 7\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本:v1.72\r\n\r\n三选一：Bug\r\n\r\n中信证券接口轮训qryAccount, qryPosition两个接口会导致程序崩溃,麻烦帮忙看下是不是底层对接的有一点问题，比如内存问题，本人不懂C++，有劳了\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/726/comments",
    "author": "shmliao",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-02-06T01:53:40Z",
        "body": "请问如何触发崩溃的？之前测试的时候做了几十笔交易开了一整天的交易时段没有遇到过。"
      },
      {
        "user": "shmliao",
        "created_at": "2018-02-06T08:09:44Z",
        "body": "我也不知道，反正程序经常出现这个错误，0x1E07D7C9 (python27.dll) (python.exe 中)处有未经处理的异常:  0xC0000005:  读取位置 0x38313072 时发生访问冲突。"
      },
      {
        "user": "vnpy",
        "created_at": "2018-02-07T01:06:03Z",
        "body": "请尝试触发一次错误，然后记录下这些信息：\r\n1. 日志文件\r\n2. cmd里错误的截图\r\n3. 错误时屏幕的截图\r\n\r\n另外问下你订阅了多少期权的行情，以及委托数量和频率大概是多少"
      },
      {
        "user": "shmliao",
        "created_at": "2018-02-07T08:11:27Z",
        "body": "没有日志，没有报错，直接崩溃。。。能加个QQ不，有点问题QQ联系请教下。。。 #"
      },
      {
        "user": "shmliao",
        "created_at": "2018-02-07T08:29:19Z",
        "body": "我没有订阅期权的行情，期权行情我是用飞创接口，然后每一秒查询account和position。。。"
      },
      {
        "user": "vnpy",
        "created_at": "2018-02-07T14:10:31Z",
        "body": "你在QQ加我吧，著名是中信期权接口的问题就行"
      },
      {
        "user": "shmliao",
        "created_at": "2018-02-08T03:06:05Z",
        "body": "QQ号多少"
      },
      {
        "user": "vnpy",
        "created_at": "2018-02-09T05:10:07Z",
        "body": "418225424"
      }
    ]
  },
  {
    "number": 719,
    "title": "qdp接口里 vnqdptd 中的 test 文件夹测试用例是 ctp 的，不是 qdh 的",
    "created_at": "2018-01-30T03:30:33Z",
    "closed_at": "2018-01-31T13:54:10Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/719",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n vnpy/vnpy/api/qdp/vnqdptd/ 下的 test 文件夹里面的文件是ctp的接口\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/719/comments",
    "author": "77KMwrPl",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-01-31T01:14:58Z",
        "body": "好久没有人问QDP的问题了啊，我来处理下"
      },
      {
        "user": "vnpy",
        "created_at": "2018-01-31T13:54:09Z",
        "body": "已移除"
      }
    ]
  },
  {
    "number": 682,
    "title": "vtEngine  positionDetail初始化有问题",
    "created_at": "2018-01-11T06:15:27Z",
    "closed_at": "2018-01-13T03:28:30Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/682",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n当程序启动的时候有委托或者交易推送的时候，这个时候调用getPositionDetail初始化，如果这个时候contract还没获取到， PositionDetail初始化就会有问题。如果是rb，mode就不是shfe，平仓的时候区分不了平昨还是平今\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/682/comments",
    "author": "xueshufeng",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-01-12T01:26:51Z",
        "body": "每次VnTrader关闭时，会把系统内已有的合约信息落地到硬盘上；下次启动时会立即加载。也就是当用户连接接口前系统内就已经有了相关的配置信息，这个设计就是为了避免上述出现的情况。\r\n\r\n理论上只有当你第一次使用VnTrader，且还是在其他客户端已经做了一堆交易后，盘中再启动VnTrader连接CTP的情况下，才可能出现上述错误，我的建议是不要这么操作..."
      },
      {
        "user": "xueshufeng",
        "created_at": "2018-01-12T01:33:35Z",
        "body": "恩。 我是无界面跑的，可能与停止程序方式有关系，界面关闭的时候会落盘， 命令行跑都是杀进程的。 不过可以写一个无界面的停止代码，停止前做一些保存。"
      },
      {
        "user": "vnpy",
        "created_at": "2018-01-13T03:28:30Z",
        "body": "恩恩，自己加下吧"
      }
    ]
  },
  {
    "number": 672,
    "title": "ctaBacktesting.py 变量未定义引用",
    "created_at": "2018-01-05T16:18:53Z",
    "closed_at": "2018-01-08T08:53:54Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/672",
    "body": "## 环境\r\n\r\nUbuntu 16.04\r\n\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\nvnpy/trader/app/ctaStrategy/ctaBacktesting.py\r\n\r\nline 953:\r\n\r\nresultDict = {k:[] for k in dailyResult.__dict__.keys()}\r\n\r\ndailyResult 没有定义报错，resultDict应该是空集合吧。\r\n\r\n我自己python -m * *\r\n\r\n报错： API 'QString' has already been set to version 1，不知道怎么编译了\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/672/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-01-08T01:55:02Z",
        "body": "API 'QString' has already been set to version 1\r\n出现这句的原因，应该是你用来运行ctaBacktesting的环境中加载了PyQt，猜测是用了Spyder？\r\n直接在terminal里运行就不会有这个报错了。\r\n\r\n另外dailyResult的没有定义报错，因为你的回测数据不足，没有生成哪怕1笔交易，就会报错了"
      }
    ]
  },
  {
    "number": 668,
    "title": "ctaHistroyData.py  文件跑到哪里去了",
    "created_at": "2018-01-01T11:17:11Z",
    "closed_at": "2018-01-08T08:53:55Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/668",
    "body": "回测文档中有这么一段\r\n\r\n`设置回测引擎的相关参数(回测模式，回测起始日期，数据库)。历史数据得预先存储在MongoDB中，若没有， 则可执行vnpy/vn.trader/ctaAlgo/ctaHistroyData.py里的代码，把回测数据插入到数据库中， 如下`\r\n\r\n可是我愣是没找到ctaHistroyData.py \r\n\r\n我用的1.7.2版本的vnpy",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/668/comments",
    "author": "linshilogin",
    "comments": [
      {
        "user": "xldistance",
        "created_at": "2018-01-01T11:29:29Z",
        "body": "C:\\ProgramData\\Anaconda3\\Lib\\site-packages\\vnpy-1.7.2-py3.6.egg\\vnpy\\trader\\app\\ctaStrategy里面"
      },
      {
        "user": "linshilogin",
        "created_at": "2018-01-01T11:46:46Z",
        "body": "@xldistance  请问下，您提供的这个目录看着像安装目录哇。为什么在github的项目中找不到这个文件呢"
      },
      {
        "user": "linshilogin",
        "created_at": "2018-01-01T12:45:29Z",
        "body": "@xldistance  我安装路径也没找到你个文件。而且，你这个路径看着像是python3.6版本，可是vnpy不是只能在2.7的python环境下么。"
      },
      {
        "user": "likenji",
        "created_at": "2018-01-03T16:52:00Z",
        "body": "Histroy->History"
      }
    ]
  },
  {
    "number": 665,
    "title": "AttributeError: 'NoneType' object has no attribute 'close'",
    "created_at": "2017-12-31T14:27:52Z",
    "closed_at": "2018-01-02T00:20:43Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/665",
    "body": "\r\nFile \"D:\\common\\Anaconda3.4\\envs\\test\\lib\\site-packages\\vnpy\\trader\\app\\ctaStrategy\\ctaBacktesting.py\", line 688, in calculateBacktestingResult\r\n    endPrice = self.bar.close\r\nAttributeError: 'NoneType' object has no attribute 'close'\r\n\r\n请问下，这是没有数据么。vnpy的例子中，没有自带数据么？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/665/comments",
    "author": "linshilogin",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2018-01-02T00:20:43Z",
        "body": "1. 出现这个报错，是因为回测时没有从数据库中加载到足够的数据\r\n2. 在examples/CtaBacktesting下，有个loadCsv.py，运行它将项目自带的测试数据插入到mongodb数据库里"
      },
      {
        "user": "Henry-PY",
        "created_at": "2018-01-16T06:25:30Z",
        "body": "@vnpy .\r\n3x"
      }
    ]
  },
  {
    "number": 662,
    "title": "提出需求",
    "created_at": "2017-12-29T07:55:16Z",
    "closed_at": "2018-01-08T08:54:37Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/662",
    "body": "例如现在RB主力合约是1805，我的策略A现在要运行在主力合约上，我的数据库里面有RB的主力合约行情数据，这个数据叫做RBM0，现在我希望我在CTA引擎初始化我的策略A的时候，数据用到我的RBM0的数据，而不是我数据库的rb1705合约的数据（因为rb1705的数据不够长，不能满足我初始化的需求，而且有主力合约变更的问题），如何做到这一点？\r\n我现在想到的一个方法就是把数据从主力合约行情那里复制到现在的例如rb1805合约数据库里面去。\r\n\r\nvnpy可以考虑做一个映射，例如我的策略是针对主力合约开发的，现在rb1805是主力合约，初始话onInit的时候，加载数据库rb0000的数据，我订阅这个rb1805合约之后，数据自动放入rb0000数据库里面\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/662/comments",
    "author": "yycyyyc321",
    "comments": [
      {
        "user": "KobeZhao",
        "created_at": "2017-12-29T13:10:21Z",
        "body": "实盘的话，分两种，一是低频日级别的要自己做指数复权，第二种分钟级的话，都是直接按交易代码取数据，数据不够长的话不做交易，主观做交易，你也不会只看主力连续合约去做吧"
      },
      {
        "user": "likenji",
        "created_at": "2018-01-03T16:55:13Z",
        "body": "我印象记录数据是有数据映射的，你可以翻翻dataRecoding模块"
      },
      {
        "user": "vnpy",
        "created_at": "2018-01-08T08:54:37Z",
        "body": "DataRecorder已经提供主力合约行情映射功能"
      }
    ]
  },
  {
    "number": 657,
    "title": "1.7.2版本下用默认参数的进行多进程优化结果显示全部为0",
    "created_at": "2017-12-24T04:07:06Z",
    "closed_at": "2018-01-08T08:56:15Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/657",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本:  v1.7.2\r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n运行默认多进程优化参数，以策略的最终净盈利排序\r\n\r\n## 实际程序行为\r\n全部结果为0\r\n\r\n## 重现步骤\r\n\r\n在多进程优化参数时，1.7.2版本ctaBacktesting引擎第1267、1268行修改为了calculateDailyStatistics函数，里面已经没有capital字段，所以以默认参数运行runOptimization.py时结果都是0。\r\n\r\n应该修改优化目标setOptimizeTarget('capital')中的'capital'为calculateDailyStatistics输出中的'totalNetPnl'，或其他优化目标，或者把ctaBacktesting引擎第1267、1268行改回跟单核优化时一样的d = self.calculateBacktestingResult()\r\n，当然最好还是不要修改引擎。。。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/657/comments",
    "author": "q6218271",
    "comments": [
      {
        "user": "xldistance",
        "created_at": "2017-12-24T12:01:52Z",
        "body": "用endBalance"
      }
    ]
  },
  {
    "number": 656,
    "title": "CTP触发tdpenalty一直发反手单",
    "created_at": "2017-12-23T06:07:17Z",
    "closed_at": "2017-12-29T01:57:32Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/656",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: 如Anaconda 5.0.1 Python 3.6 64位\r\n* vn.py版本: 1.7.2\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n螺纹多开触发锁仓后应该只发一次反手空单，结果一直发空开单，程序重启之后又恢复正常了。\r\n\r\n## 实际程序行为\r\n群里问了下也有别人遇到过这个问题，看来是偶发性BUG\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/656/comments",
    "author": "xldistance",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-12-28T02:30:21Z",
        "body": "simnow环境还是实盘环境？\r\n\r\nsimnow环境中，有时会出现数据回报的小错误，导致仓位管理出现问题，重启后恢复正常更可能是这个原因了"
      }
    ]
  },
  {
    "number": 653,
    "title": "ImportError: No module named vnxtpquote for win7 32",
    "created_at": "2017-12-21T15:36:54Z",
    "closed_at": "2017-12-22T13:39:17Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/653",
    "body": "## 环境\r\n\r\n* 操作系统: Windows 7 32bit\r\n* Anaconda版本: 如Anaconda2 5.0.1 Python 2.7 32位\r\n* vn.py版本: dev branch 20171221（下载日期）\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n打开示例窗口\r\n\r\n## 实际程序行为\r\n命令行报错\r\n\r\n## 重现步骤\r\n正常的安装了全套工具，在最后测试的时候报错\r\n`\r\nY:\\py\\vnpy\\examples\\VnTrader>python run.py\r\nC:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy\\api\\ib\\__init__.py:3: RuntimeWar\r\nning: to-Python converter for class std::vector<class ibapi::shared_ptr<class Or\r\nderCondition>,class std::allocator<class ibapi::shared_ptr<class OrderCondition>\r\n > > already registered; second conversion method ignored.\r\n  from vnib import *\r\nTraceback (most recent call last):\r\n  File \"run.py\", line 19, in <module>\r\n    from vnpy.trader.gateway import (ctpGateway, oandaGateway,\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy\\trader\\gateway\\xtpGatewa\r\ny\\__init__.py\", line 4, in <module>\r\n    from xtpGateway import XtpGateway\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy\\trader\\gateway\\xtpGatewa\r\ny\\xtpGateway.py\", line 11, in <module>\r\n    from vnpy.api.xtp import *\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy\\api\\xtp\\__init__.py\", li\r\nne 3, in <module>\r\n    from vnxtpquote import QuoteApi\r\nImportError: No module named vnxtpquote\u0000\u0000\r\n`\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/653/comments",
    "author": "ykrank",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-12-22T01:11:18Z",
        "body": "在run.py里把加载xtpGateway的代码去掉试试"
      },
      {
        "user": "ykrank",
        "created_at": "2017-12-22T02:05:11Z",
        "body": "去掉xtpGateway可以正常打开了"
      },
      {
        "user": "vnpy",
        "created_at": "2017-12-22T13:39:17Z",
        "body": "dev的xtpGateway还没全部弄好，后续会继续开发"
      }
    ]
  },
  {
    "number": 626,
    "title": "CTP多账户持有同一合约情况下，UI持仓信息显示冲突",
    "created_at": "2017-12-06T07:11:26Z",
    "closed_at": "2018-01-08T08:55:44Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/626",
    "body": "## 环境\r\n\r\n* 操作系统: ALL\r\n* Anaconda版本: ALL\r\n* vn.py版本: 如v1.7.1\r\n\r\n## Issue类型\r\nBug\r\n\r\n## 预期程序行为\r\n配置多个CTP接口后，所有接口持仓信息都应该显示\r\n\r\n## 实际程序行为\r\n部分接口持仓显示，或只显示一个接口的持仓\r\n\r\n## 重现步骤\r\n配置多个CTP接口对同一个合约下单后问题会重现\r\n\r\n个人分析后认为和PositionMonitor中设置的DataKey有关系\r\nself.setDataKey('vtPositionName')\r\n\r\n========================\r\n简单搜索暂未发现其他地方引用vtPositionName\r\n\r\n因此建议修改\r\n\r\n在ctpGateway中\r\n```python\r\nposName = '.'.join([data['InstrumentID'], data['PosiDirection']])\r\nif posName in self.posDict:\r\n    pos = self.posDict[posName]\r\nelse:\r\n    pos = VtPositionData()\r\n    self.posDict[posName] = pos\r\n    pos.gatewayName = self.gatewayName\r\n    pos.symbol = data['InstrumentID']\r\n    pos.vtSymbol = pos.symbol\r\n    pos.direction = posiDirectionMapReverse.get(data['PosiDirection'], '')\r\n    pos.vtPositionName = '.'.join([pos.vtSymbol, pos.direction]) \r\n```\r\n修改以下两行\r\n1  posName = '.'.join([data['InstrumentID'], data['PosiDirection']])\r\n修改后posName = '.'.join([self.gatewayName, data['InstrumentID'], data['PosiDirection']])\r\n\r\n2 pos.vtPositionName = '.'.join([pos.vtSymbol, pos.direction])\r\n修改后 pos.vtPositionName = '.'.join([pos.gatewayName, pos.vtSymbol, pos.direction])",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/626/comments",
    "author": "sun0x00",
    "comments": [
      {
        "user": "ruzwdy",
        "created_at": "2017-12-08T07:51:19Z",
        "body": "多账户  实现的逻辑是怎样的 。"
      },
      {
        "user": "qmhedging",
        "created_at": "2017-12-21T09:48:13Z",
        "body": "加个 记账系统，轮询，有字段能区分不同账户即可"
      },
      {
        "user": "vnpy",
        "created_at": "2017-12-22T01:10:45Z",
        "body": "这个根据自己的需求来改吧，因为不能算是通用需求就不增加到框架里了"
      }
    ]
  },
  {
    "number": 611,
    "title": "求助，这个怎么办呀：libboost_python.so.1.65.1: undefined symbol",
    "created_at": "2017-11-20T09:33:26Z",
    "closed_at": "2017-11-21T08:35:23Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/611",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 2.4.4 Python 2.7 64位\r\n* vn.py版本: 如v1.7发行版（下载日期：20171120）\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n程序启动成功\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n1.运行 install.sh文件\r\nvnpy.trader.gateway.xtpGateway.xtpGateway: module references __file__\r\nvnpy.trader.gateway.shzdGateway.shzdGateway: module references __file__\r\nvnpy.trader.gateway.sgitGateway.sgitGateway: module references __file__\r\nvnpy.trader.gateway.xspeedGateway.xspeedGateway: module references __file__\r\nvnpy.trader.gateway.oandaGateway.oandaGateway: module references __file__\r\nvnpy.trader.gateway.qdpGateway.qdpGateway: module references __file__\r\ncreating dist\r\ncreating 'dist/vnpy-1.7.1-py2.7.egg' and adding 'build/bdist.linux-x86_64/egg' to it\r\nremoving 'build/bdist.linux-x86_64/egg' (and everything under it)\r\nProcessing vnpy-1.7.1-py2.7.egg\r\ncreating /home/cmbc/anaconda2/lib/python2.7/site-packages/vnpy-1.7.1-py2.7.egg\r\nExtracting vnpy-1.7.1-py2.7.egg to /home/cmbc/anaconda2/lib/python2.7/site-packages\r\nAdding vnpy 1.7.1 to easy-install.pth file\r\n\r\nInstalled /home/cmbc/anaconda2/lib/python2.7/site-packages/vnpy-1.7.1-py2.7.egg\r\nProcessing dependencies for vnpy==1.7.1\r\nFinished processing dependencies for vnpy==1.7.1\r\n\r\n2.启动程序\r\n\\vnpy-master\\examples\\VnTrader\\run.py\r\n\r\n3.报错\r\nTraceback (most recent call last):\r\n  File \"/home/cmbc/ipython/ipython2/workspace/vnpy-master/examples/VnTrader/run.py\", line 19, in <module>\r\n    from vnpy.trader.gateway import (ctpGateway, oandaGateway, ibGateway, \r\n  File \"/home/cmbc/ipython/ipython2/workspace/vnpy-master/vnpy/trader/gateway/ctpGateway/__init__.py\", line 4, in <module>\r\n    from ctpGateway import CtpGateway\r\n  File \"/home/cmbc/ipython/ipython2/workspace/vnpy-master/vnpy/trader/gateway/ctpGateway/ctpGateway.py\", line 16, in <module>\r\n    from vnpy.api.ctp import MdApi, TdApi, defineDict\r\n  File \"/home/cmbc/ipython/ipython2/workspace/vnpy-master/vnpy/api/ctp/__init__.py\", line 3, in <module>\r\n    from vnctpmd import MdApi\r\nImportError: /home/cmbc/anaconda2/lib/libboost_python.so.1.65.1: undefined symbol: PyUnicode_InternFromString",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/611/comments",
    "author": "reaIws",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-11-21T08:05:28Z",
        "body": "这个的问题似乎出在boost上，请检查下安装的boost库版本是否正确"
      },
      {
        "user": "reaIws",
        "created_at": "2017-11-21T08:35:19Z",
        "body": "@vnpy 行了"
      },
      {
        "user": "gantians",
        "created_at": "2017-12-06T08:20:58Z",
        "body": "@reaIws  I have met the same problem. How did you solve the problem?"
      }
    ]
  },
  {
    "number": 609,
    "title": "策略多周期共振回测没有信号",
    "created_at": "2017-11-19T11:48:21Z",
    "closed_at": "2017-12-06T00:53:49Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/609",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: 如Anaconda 5.0.1 Python 3.6 64位\r\n* vn.py版本: 如v1.7.1dev branch 20171114（下载日期）\r\n\r\n## Issue类型\r\nBUG\r\n\r\n## 预期程序行为\r\nCTP策略在30分钟聚合指标信息，在一分钟周期判断开平仓回测没有信号\r\n\r\n## 实际程序行为\r\n策略在onBar里面判断开平仓回测没有信号\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/609/comments",
    "author": "xldistance",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-11-21T08:02:07Z",
        "body": "我来提供个跨周期回测的例子"
      }
    ]
  },
  {
    "number": 606,
    "title": " 缺少“算法”和ValueError:",
    "created_at": "2017-11-17T13:36:26Z",
    "closed_at": "2017-11-21T08:00:27Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/606",
    "body": "1、按照windows 系统下的安装程序后，启动 VnTrader, 菜单栏只有 “系统”， “功能” 和“帮助”， 缺少“算法”\r\n2、在SimNow网站上申请虚拟账号后，点开系统，连接CTP， 显示ValueError: no Jason object could be decoded。\r\n\r\n刚接触，遇见以上两个问题，请指点，谢谢\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/606/comments",
    "author": "fluid126",
    "comments": [
      {
        "user": "xldistance",
        "created_at": "2017-11-18T12:22:16Z",
        "body": "新版功能整合在功能里面，编辑json建议使用sublimetext"
      }
    ]
  },
  {
    "number": 600,
    "title": "出现ImportError: No module named vnxtpquote问题",
    "created_at": "2017-11-13T11:09:13Z",
    "closed_at": "2017-11-14T04:30:03Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/600",
    "body": "## 环境\r\n\r\n* 操作系统: Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7.1发行版\r\nboost版本1.58\r\ncmake版本3.5.1\r\n\r\n## Issue类型\r\nQuestion\r\n在编译的时候出现警告：\r\n/usr/bin/c++   -DBUILD_IB -DUSE_64BITS -Dvnib_EXPORTS -I/home/user/vnpy-1.7.1/vnpy/api/ib/./ibapi/linux/client -I/home/user/vnpy-1.7.1/vnpy/api/ib/IB_PATH -I/usr/include/python2.7  -fPIC -std=c++11 -O3 -DNDEBUG -fPIC   -o CMakeFiles/vnib.dir/vnib/vnib/vnib.cpp.o -c /home/user/vnpy-1.7.1/vnpy/api/ib/vnib/vnib/vnib.cpp\r\nIn file included from /home/user/vnpy-1.7.1/vnpy/api/ib/./ibapi/linux/client/EClientSocket.h:8:0,\r\n                 from /home/user/vnpy-1.7.1/vnpy/api/ib/vnib/vnib/vnib.h:25,\r\n                 from /home/user/vnpy-1.7.1/vnpy/api/ib/vnib/vnib/vnib.cpp:5:\r\n/home/user/vnpy-1.7.1/vnpy/api/ib/./ibapi/linux/client/EClient.h:350:10: warning: ‘template<class> class std::auto_ptr’ is deprecated [-Wdeprecated-declarations]\r\n     std::auto_ptr<ETransport> m_transport;\r\n          ^\r\nIn file included from /usr/include/c++/5/memory:81:0,\r\n                 from /usr/include/boost/function/function_base.hpp:16,\r\n                 from /usr/include/boost/function/detail/prologue.hpp:17,\r\n                 from /usr/include/boost/function/function_template.hpp:13,\r\n                 from /usr/include/boost/function/detail/maybe_include.hpp:13,\r\n                 from /usr/include/boost/function/function0.hpp:11,\r\n                 from /usr/include/boost/python/errors.hpp:13,\r\n                 from /usr/include/boost/python/handle.hpp:11,\r\n                 from /usr/include/boost/python/to_python_value.hpp:12,\r\n                 from /usr/include/boost/python/default_call_policies.hpp:10,\r\n                 from /usr/include/boost/python/make_function.hpp:10,\r\n                 from /usr/include/boost/python/def.hpp:11,\r\n                 from /home/user/vnpy-1.7.1/vnpy/api/ib/vnib/vnib/vnib.h:10,\r\n                 from /home/user/vnpy-1.7.1/vnpy/api/ib/vnib/vnib/vnib.cpp:5:\r\n/usr/include/c++/5/bits/unique_ptr.h:49:28: note: declared here\r\n   template<typename> class auto_ptr;\r\n                            ^\r\n\r\n在运行example/VnTrader/run.py时候出现以下错误：\r\nTraceback (most recent call last):\r\n  File \"/home/user/vnpy-1.7.1/examples/VnTrader/run.py\", line 26, in <module>\r\n    from vnpy.trader.gateway import xtpGateway\r\n  File \"/home/user/anaconda2/lib/python2.7/site-packages/vnpy-1.7.1-py2.7.egg/vnpy/trader/gateway/xtpGateway/__init__.py\", line 4, in <module>\r\n    from xtpGateway import XtpGateway\r\n  File \"/home/user/anaconda2/lib/python2.7/site-packages/vnpy-1.7.1-py2.7.egg/vnpy/trader/gateway/xtpGateway/xtpGateway.py\", line 11, in <module>\r\n    from vnpy.api.xtp import *\r\n  File \"/home/user/anaconda2/lib/python2.7/site-packages/vnpy-1.7.1-py2.7.egg/vnpy/api/xtp/__init__.py\", line 3, in <module>\r\n    from vnxtpquote import QuoteApi\r\nImportError: No module named vnxtpquote\r\n\r\n出现包未导入的问题。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/600/comments",
    "author": "roketKing",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-11-14T01:42:17Z",
        "body": "这是因为v1.7.1的ubuntu安装文件里忘记加上XTP的自动编译命令了，如果不用请先在run.py里移除xtpGateway相关的内容就行"
      },
      {
        "user": "roketKing",
        "created_at": "2017-11-14T04:30:03Z",
        "body": "在install.sh中加入以下内容，run.py编译通过，正常启动。\r\npushd vnpy/api/xtp\r\nbash build.sh\r\npopd"
      }
    ]
  },
  {
    "number": 598,
    "title": "建议统一cta交易模式与回测模式获取委托单对象的方法",
    "created_at": "2017-11-13T03:25:46Z",
    "closed_at": "2017-11-15T14:18:58Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/598",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.7发行版或者dev branch 20170920（下载日期）\r\n\r\n## Issue类型\r\n三选一：Enhancement\r\n\r\n## 预期程序行为\r\n在用户策略中，有时希望获得委托单的时间或其它信息，目前在交易与回测中用的如下办法。\r\n在交易模式下，获取order对象的方式为：order = self.ctaEngine.mainEngine.getOrder(orderID)\r\n在回测模式下，获取order对象的方式为：order = self.ctaEngine.workingLimitOrderDict[orderID]\r\n\r\n## 实际程序行为\r\n这样导致了用户策略，要在两种模式下工作，需要对代码进行修改。当然在用户策略中也可以根据self.engineType，来做判断。有没有更好办法呢？\r\n\r\n## 重现步骤\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/598/comments",
    "author": "miyihuxi",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-11-14T01:34:23Z",
        "body": "以上两种用法都是不对的，委托单order的对象会通过策略模板的onOrder推送过来，用户只要在策略里创建一个字典用来保存这些对象就好了。\r\n\r\n正常开发的流程中不建议访问引擎层面的方法和数据，这个不是设计的使用方法。"
      },
      {
        "user": "miyihuxi",
        "created_at": "2017-11-14T10:43:35Z",
        "body": "OK，还是建议给order对象加上datetime属性\r\n\r\n                   sjjg = bar.datetime - order.datetime\r\n                   if  sjjg.total_seconds() > 240.0:\r\n                       self.cancelOrder(orderID)\r\n`\r\n委托时间大于4分钟未成交则撤单，这样写简洁得多，不然仅仅是合成日期就是一件很头疼的事。\r\n"
      }
    ]
  },
  {
    "number": 597,
    "title": "把盈透官方PY3接口不成功",
    "created_at": "2017-11-11T09:55:59Z",
    "closed_at": "2017-11-15T00:26:36Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/597",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7或者Ubuntu 16.04\r\n* Anaconda版本: 如Anaconda 5.0.0 Python 3.6  64位\r\n* vn.py版本: 如v1.7.1发行版或者dev branch 20170920（下载日期）  最新版的DEV \r\n\r\n## Issue类型\r\n三选一：Bug/Enhancement/Question\r\n\r\n## 预期程序行为\r\n\r\n\r\n## 实际程序行为\r\n\r\n\r\n## 重现步骤\r\n\r\n我把官方的示例复制进去里面的ibWrapper\r\n\r\nclass IbWrapper(TestWrapper,TestClient):\r\n    \"\"\"IB回调接口的实现\"\"\"\r\n\r\n    #----------------------------------------------------------------------\r\n    def __init__(self, gateway):\r\n        \"\"\"Constructor\"\"\"\r\n        #super(IbWrapper, self).__init__()\r\n        TestWrapper.__init__(self)\r\n        TestClient.__init__(self, wrapper=self)\r\n\r\n\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n结果一直这样，死循环了吗？\r\n\r\n2017-11-11 17:52:12,187  DEBUG: acquiring lock\r\n2017-11-11 17:52:12,188  DEBUG: acquired lock\r\n2017-11-11 17:52:13,189  DEBUG: exception from recvMsg (<class 'socket.timeout'>, timeout('timed out',), <traceback object at 0x000001498ECB3708>)\r\n2017-11-11 17:52:13,190  DEBUG: releasing lock\r\n2017-11-11 17:52:13,191  DEBUG: release lock\r\n2017-11-11 17:52:13,192  DEBUG: reader loop, prevBuf.size: 0 recvd size: 0 buf b''\r\n2017-11-11 17:52:13,193  DEBUG: acquiring lock\r\n2017-11-11 17:52:13,194  DEBUG: acquired lock\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/597/comments",
    "author": "viponedream",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-11-13T01:26:02Z",
        "body": "感觉程序一直在尝试获取一把锁（可能是读取socket数据的），然后不停的失败重复"
      },
      {
        "user": "vnpy",
        "created_at": "2017-11-13T01:26:26Z",
        "body": "我没看过ib官方PY API的源代码，这个得一步步debug来查了"
      },
      {
        "user": "viponedream",
        "created_at": "2017-11-13T06:35:35Z",
        "body": "谢谢，官方的版本搞不来。\r\n还是 IBPY的那个版本简单明了。\r\n以前你用过那个 IBPY的，不知道该版本可有存？因为 IBPY是兼容py2, py3的。有的话就方便省事了。直接可以用在PY3上了。"
      },
      {
        "user": "vnpy",
        "created_at": "2017-11-14T01:35:00Z",
        "body": "可以看Github的历史，应该能找到"
      },
      {
        "user": "viponedream",
        "created_at": "2017-11-14T22:46:20Z",
        "body": "谢谢，已经对接上了。还是你的框架兼容性强。几乎不用怎么改，直接把官方的接口套上即可用。"
      },
      {
        "user": "vnpy",
        "created_at": "2017-11-15T00:26:36Z",
        "body": "哈哈，OK"
      }
    ]
  },
  {
    "number": 594,
    "title": "最新版dev ctaBacktesting组合回测出错",
    "created_at": "2017-11-09T04:37:34Z",
    "closed_at": "2017-11-29T11:57:31Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/594",
    "body": "## 环境\r\n\r\n* 操作系统: win10\r\n* Anaconda版本: Anaconda 5.0.0 Python 2.7 32位\r\n* vn.py版本: v1.7.1dev   20171109\r\n\r\n## Issue类型\r\n三选一：Bug\r\n\r\n## 预期程序行为\r\n更新ctaBacktesting后组合回测出错\r\n\r\n## 实际程序行为\r\nengine = BacktestingEngine()\r\nengine.setCapital(100000)\r\nengine.showDailyResult(dfp,result = None) result怎么运行后怎么没有传入参数\r\n\r\n## 重现步骤\r\n\r\n针对Bug类型Issue，请提供具体重现步骤以及报错截图\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.7.1-py2.7.egg\\vnpy\\trader\\app\\ctaStrategy\\ctaBacktesting.py\", line 1040, in showDailyResult\r\n    self.output(u'首个交易日：\\t%s' % result['startDate'])\r\nTypeError: 'NoneType' object has no attribute '__getitem__'\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/594/comments",
    "author": "xldistance",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-11-10T00:21:04Z",
        "body": "为了实现SharpeRatio为目标函数的优化回测，修改了showDailyResult函数，还没全部开发好，尽快弄完"
      },
      {
        "user": "xldistance",
        "created_at": "2017-11-29T11:57:29Z",
        "body": "issue看到解决办法了组和回测最后改为\r\nengine = BacktestingEngine()\r\nengine.setCapital(1000000)\r\ndfp, result = engine.calculateDailyStatistics(dfp)\r\nengine.showDailyResult(dfp, result)"
      }
    ]
  },
  {
    "number": 591,
    "title": "策略中如何获取数据库（mongo）连接，进而做数据操作？",
    "created_at": "2017-11-03T15:19:26Z",
    "closed_at": "2017-12-02T12:35:09Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/591",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows10\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 如v1.6.2\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n想在策略中保存一些中间结果到mongo，还需要在策略类的init中创建新连接吗，比如：\r\nself.dbClient = pymongo.MongoClient(globalSetting['mongoHost'], globalSetting['mongoPort'])\r\n\r\n有其他更方便的方法吗？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/591/comments",
    "author": "JasonXZh",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-11-06T01:42:58Z",
        "body": "理论上，策略对象里，你可以通过self.ctaEngine.mainEngine.dbInsert来向数据库插入数据，dbQuery来查询。\r\n\r\n但是这不是个特别安全的方案，操作不好很容易出现各种问题，所以没有设计在模板里。"
      },
      {
        "user": "JasonXZh",
        "created_at": "2017-11-06T16:55:55Z",
        "body": "但是在BacktestingEngine中好像没有mainEngine这个属性，策略里像self.ctaEngine.mainEngine这种写法是不是会导致不能回测？"
      },
      {
        "user": "vnpy",
        "created_at": "2017-11-07T01:18:02Z",
        "body": "必然的了，如果你的策略里有涉及到数据库操作的东西，那几乎都是不能回测的"
      },
      {
        "user": "JasonXZh",
        "created_at": "2017-11-08T15:04:40Z",
        "body": "主要是因为实盘的时候，每天要重启策略。\r\n想把之前的运行状态保存下来，下次启动的时候直接导入，就不用重新导入历史数据计算了。"
      },
      {
        "user": "vnpy",
        "created_at": "2017-11-09T00:19:30Z",
        "body": "这个从经验上看也不是很好的方案，如果你的策略足够稳健，那么任意时刻的状态应该是可以通过历史行情+最新持仓直接还原出来的"
      },
      {
        "user": "JasonXZh",
        "created_at": "2017-11-11T14:32:22Z",
        "body": "嗯，想保存的是更类似position的数据。通过历史也可以倒推，但是可能因为实际过程中的一些实际原因，和理论上的不是100%完全一致。所以也懒得去写通过历史还原的逻辑，想直接保存下来。"
      },
      {
        "user": "vnpy",
        "created_at": "2017-11-13T01:24:49Z",
        "body": "实盘可以这么干，回测上就没有办法了"
      },
      {
        "user": "JasonXZh",
        "created_at": "2017-11-14T16:03:14Z",
        "body": "收到，谢谢！"
      }
    ]
  },
  {
    "number": 583,
    "title": "同策略做多品种的时候，参数混了",
    "created_at": "2017-10-29T13:59:35Z",
    "closed_at": "2017-10-30T14:01:16Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/583",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 10\r\n* Anaconda版本: 如Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: v1.6.2\r\n\r\n## Issue类型\r\n三选一：Question\r\n\r\n## 预期程序行为\r\n做了一个策略，想在多个品种上跑，在CTA_setting.json中就配置了多个品种，但跑起来之后，发现策略中的变量值都混了几个品种的数据在一起。\r\n\r\n请教是不是应该设置为多线程才能跑多个品种？还是哪里设置的有问题？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/583/comments",
    "author": "JasonXZh",
    "comments": [
      {
        "user": "xldistance",
        "created_at": "2017-10-30T00:22:35Z",
        "body": "多品种变量都放到def __init__(self, ctaEngine, setting):下面"
      },
      {
        "user": "vnpy",
        "created_at": "2017-10-30T01:21:19Z",
        "body": "楼上正解，所有可变数据容器，比如list/dict/numpy array都最好放在__int__函数下再初始化一下"
      }
    ]
  },
  {
    "number": 580,
    "title": "GITHUB上直接下载的PYD和DLL使用，确认结算出错",
    "created_at": "2017-10-27T00:19:55Z",
    "closed_at": "2017-12-02T12:35:16Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/580",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7\r\n* Anaconda版本: Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: 直接下载的CTP的pyd和dll\r\n\r\n## Issue类型\r\nQuestion\r\n\r\n直接使用GITHUB上下载的CTP的PYD和DLL使用，确认结算报下面的错：\r\nTypeError: 'NoneType' object is not callable\r\n\r\n连接的是SIMNOW环境：\r\n交易前置 180.168.146.187:10030，行情前置：180.168.146.187:10031\r\n\r\n可能是需要重新编译下得到最新的PYD吧，由于还不熟悉C++，是否可以请作者重新编译得到最新可用的PYD放到GITHUB上来。\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/580/comments",
    "author": "yc3231996",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-10-30T01:20:14Z",
        "body": "你必须实现所有的回调函数接口，不用的就写pass，参考test里的.py文件"
      }
    ]
  },
  {
    "number": 574,
    "title": "用wind作为开发工具，回调函数都不进断点",
    "created_at": "2017-10-26T04:49:55Z",
    "closed_at": "2017-10-26T07:48:54Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/574",
    "body": "发现回调函数（onXXX之类的）都不会进入断点，用的是wind作为开发工具，是需要有什么特殊设置才能让回调函数进断点吗？\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/574/comments",
    "author": "yc3231996",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-10-26T07:48:54Z",
        "body": "wind的回调函数发起线程应该是COM环境下的，所以Python IDE的断点没用，直接用print来输出内容吧"
      }
    ]
  },
  {
    "number": 570,
    "title": "使用最新的CTP dll导致python程序崩溃",
    "created_at": "2017-10-23T03:46:27Z",
    "closed_at": "2017-10-26T04:48:03Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/570",
    "body": "## 环境\r\n\r\n* 操作系统: 如Windows 7\r\n* Anaconda版本: Anaconda 4.0.0 Python 2.7 32位\r\n* vn.py版本: latest\r\n\r\n## Issue类型\r\nBug，问题\r\n\r\n最新的官方CTP DLL版本是v6.3.6_20160715，跟git上CTP直接编译好的vnctpmd.pyd和vnctptd.pyd配合使用会导致程序崩溃。是不是还不支持最新的CTP DLL版本？\r\n\r\n## 重现步骤\r\n用最新的CTP dll替换git上的dll。\r\n\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/570/comments",
    "author": "yc3231996",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-10-23T07:35:41Z",
        "body": "更换API的话，有可能头文件里的函数发生了变化，需要重新编译"
      }
    ]
  },
  {
    "number": 560,
    "title": "没有今仓的情况下平仓会触发平今",
    "created_at": "2017-10-20T04:51:42Z",
    "closed_at": "2017-10-22T05:21:48Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/560",
    "body": "品种螺纹钢，错误CTP:报单字段有误，多平今成交数量是空的，委托状态拒单。这个BUG不影响使用，显示平昨成功了......",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/560/comments",
    "author": "xldistance",
    "comments": [
      {
        "user": "cn-ansonkai",
        "created_at": "2017-10-20T05:44:13Z",
        "body": "主要是因为SHFE的指令是 平今 和 平昨"
      },
      {
        "user": "xldistance",
        "created_at": "2017-10-20T07:05:58Z",
        "body": "今仓为0，平仓是这样写的吗            #今仓为0,平昨\r\n            elif re.volume > tdAvailable and tdAvailable == 0:\r\n                reqYd = copy(req)\r\n                reqYd.offset = OFFSET_CLOSEYESTERDAY\r\n                reqYd.volume = req.volume - tdAvailable\r\n\r\n                return [reqYd]"
      }
    ]
  },
  {
    "number": 526,
    "title": "vntrader.bat 报错 ImportError: DLL load failed",
    "created_at": "2017-09-26T15:47:05Z",
    "closed_at": "2017-09-27T00:10:09Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/526",
    "body": "1. 先是报错缺乏module\r\n\r\n>(C:\\ProgramData\\Anaconda2) F:\\vnpy-master\\examples\\VnTrader>vntrader.bat\r\n>\r\n>(C:\\ProgramData\\Anaconda2) F:\\vnpy-master\\examples\\VnTrader>python run.py\r\n>C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.7.0-py2.7.egg\\vnpy\\api\\ib\\__in\r\n>it__.py:3: RuntimeWarning: to-Python converter for class std::vector<class ibapi\r\n>::shared_ptr<class OrderCondition>,class std::allocator<class ibapi::shared_ptr<\r\n>class OrderCondition> > > already registered; second conversion method ignored.\r\n>from vnib import *\r\n>Traceback (most recent call last):\r\n> File \"run.py\", line 19, in <module>\r\n>    from vnpy.trader.gateway import (ctpGateway, oandaGateway, ibGateway,\r\n>  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.7.0-py2.7.egg\\vnpy\\tra\r\n>der\\gateway\\okcoinGateway\\__init__.py\", line 4, in <module>\r\n>    from okcoinGateway import OkcoinGateway\r\n>  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.7.0-py2.7.egg\\vnpy\\tra\r\n>der\\gateway\\okcoinGateway\\okcoinGateway.py\", line 21, in <module>\r\n>    from vnpy.api.okcoin import vnokcoin\r\n>  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.7.0-py2.7.egg\\vnpy\\api\r\n>\\okcoin\\__init__.py\", line 3, in <module>\r\n>    from vnokcoin import OkCoinApi\r\n>  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.7.0-py2.7.egg\\vnpy\\api\r\n>\\okcoin\\vnokcoin.py\", line 9, in <module>\r\n>    import websocket\r\n>ImportError: No module named websocket\r\n\r\n> (C:\\ProgramData\\Anaconda2) F:\\vnpy-master\\examples\\VnTrader>pip install websocke\r\n> t\r\n> Collecting websocket\r\n\r\n> \r\n>   Downloading websocket-0.2.1.tar.gz (195kB)\r\n>     41% |█████████████▍                  | 81kB 91kB/s eta 0:00:02\r\n>     47% |███████████████                 | 92kB 82kB/s eta 0:00:0\r\n>     52% |████████████████▊               | 102kB 69kB/s eta 0:0\r\n>     57% |██████████████████▌             | 112kB 69kB/s eta 0\r\n>     62% |████████████████████▏           | 122kB 59kB/s eta\r\n>     68% |█████████████████████▉          | 133kB 51kB/s et\r\n>     73% |███████████████████████▌        | 143kB 56kB/s\r\n>     78% |█████████████████████████▏      | 153kB 59kB/\r\n>     83% |██████████████████████████▉     | 163kB 59kB\r\n>     89% |████████████████████████████▌   | 174kB 53\r\n>     94% |██████████████████████████████▏ | 184kB\r\n>     99% |███████████████████████████████▉| 194kB\r\n>     100% |████████████████████████████████| 204k\r\n> B 65kB/s\r\n> Requirement already satisfied: gevent in c:\\programdata\\anaconda2\\lib\\site-packa\r\n> ges (from websocket)\r\n> Requirement already satisfied: greenlet in c:\\programdata\\anaconda2\\lib\\site-pac\r\n> kages (from websocket)\r\n> Building wheels for collected packages: websocket\r\n>   Running setup.py bdist_wheel for websocket ... done\r\n>   Stored in directory: C:\\Users\\Administrator\\AppData\\Local\\pip\\Cache\\wheels\\f0\\\r\n> a0\\e9\\00f3388fdb7e211988e6b5d0ecf7037e78965e3519d03dbac8\r\n> Successfully built websocket\r\n> Installing collected packages: websocket\r\n> Successfully installed websocket-0.2.1\r\n> \r\n\r\n2. 问题来了，修复了#1问题后，执行，报错DLL load failed。 请教各位~\r\n\r\n```\r\n(C:\\ProgramData\\Anaconda2) F:\\vnpy-master\\examples\\VnTrader>vntrader.bat\r\n\r\n(C:\\ProgramData\\Anaconda2) F:\\vnpy-master\\examples\\VnTrader>python run.py\r\nC:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.7.0-py2.7.egg\\vnpy\\api\\ib\\__in\r\nit__.py:3: RuntimeWarning: to-Python converter for class std::vector<class ibapi\r\n::shared_ptr<class OrderCondition>,class std::allocator<class ibapi::shared_ptr<\r\nclass OrderCondition> > > already registered; second conversion method ignored.\r\n  from vnib import *\r\nTraceback (most recent call last):\r\n  File \"run.py\", line 23, in <module>\r\n    from vnpy.trader.gateway import (femasGateway, xspeedGateway,\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.7.0-py2.7.egg\\vnpy\\tra\r\nder\\gateway\\sgitGateway\\__init__.py\", line 4, in <module>\r\n    from sgitGateway import SgitGateway\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.7.0-py2.7.egg\\vnpy\\tra\r\nder\\gateway\\sgitGateway\\sgitGateway.py\", line 16, in <module>\r\n    from vnpy.api.sgit import MdApi, TdApi, defineDict\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.7.0-py2.7.egg\\vnpy\\api\r\n\\sgit\\__init__.py\", line 3, in <module>\r\n    from vnsgitmd import MdApi\r\nImportError: DLL load failed: 找不到指定的模块。\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/526/comments",
    "author": "yupoet",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-09-27T00:08:21Z",
        "body": "SGIT和SHZD两个接口在win10上要额外安装vcredist的特定版本，我来从默认的run.py里移除吧"
      },
      {
        "user": "vnpy",
        "created_at": "2017-09-27T00:10:09Z",
        "body": "呃，发现最新的分支已经移除了。\r\n\r\n你直接在run.py里把sgitGateway和shzdGateway相关的代码删了就行"
      },
      {
        "user": "yupoet",
        "created_at": "2017-09-27T01:28:22Z",
        "body": "哦，我是win 2012 R2 datacenter\r\n "
      }
    ]
  },
  {
    "number": 525,
    "title": "runDataRecording运行正常，数据记录几分钟就停止了",
    "created_at": "2017-09-26T14:09:36Z",
    "closed_at": "2017-12-02T13:46:44Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/525",
    "body": "还有MongoDB Database Server长期占用20%左右的CPU，CPU是E3 1231V3，之前的版本没有这个问题，不知道是不是新增仓位记录的问题......",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/525/comments",
    "author": "xldistance",
    "comments": [
      {
        "user": "xldistance",
        "created_at": "2017-09-27T01:23:57Z",
        "body": "数据好像还是在记录的，但是插入数据库的时间比交易所时间越来越慢"
      },
      {
        "user": "xldistance",
        "created_at": "2017-09-27T13:56:53Z",
        "body": "用回没有添加持仓日志的DEV版本数据记录正常"
      },
      {
        "user": "freeitaly",
        "created_at": "2017-10-18T03:34:35Z",
        "body": "也遇到了这个问题， 分析是群主用dbUpdate替换dbInsert的原因，tick数据库中数据量比较大的情况下，update会耗费比较大的时间进行查询操作，我这边的环境update一个tick要1～2秒。"
      },
      {
        "user": "vnpy",
        "created_at": "2017-10-18T06:13:51Z",
        "body": "有可能的，当数据库中数据量太大时确实插入tick还要查询耗时会比较大"
      },
      {
        "user": "vnpy",
        "created_at": "2017-10-18T06:14:07Z",
        "body": "下个版本看看怎么弄吧\r\n"
      },
      {
        "user": "vnpy",
        "created_at": "2017-12-02T13:46:43Z",
        "body": "已解决，将DataRecorder中默认的数据记录方式从update改为insert"
      }
    ]
  },
  {
    "number": 521,
    "title": "vtEngine.py/unhashable type: 'list'",
    "created_at": "2017-09-25T01:36:43Z",
    "closed_at": "2017-09-25T06:04:56Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/521",
    "body": "  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.7.0-py2.7.egg\\vnpy\\trader\\app\\ctaStrategy\\ctaTemplate.py\", line 142, in cancelOrder\r\n    self.ctaEngine.cancelOrder(vtOrderID)\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.7.0-py2.7.egg\\vnpy\\trader\\app\\ctaStrategy\\ctaEngine.py\", line 145, in cancelOrder\r\n    order = self.mainEngine.getOrder(vtOrderID)\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.7.0-py2.7.egg\\vnpy\\trader\\vtEngine.py\", line 278, in getOrder\r\n    return self.dataEngine.getOrder(vtOrderID)\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.7.0-py2.7.egg\\vnpy\\trader\\vtEngine.py\", line 458, in getOrder\r\n    return self.orderDict[vtOrderID]\r\nTypeError: unhashable type: 'list'",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/521/comments",
    "author": "xldistance",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-09-25T06:04:56Z",
        "body": "目前CtaTemplate中的交易函数buy sell short cover，下单后不再是返回单一的vtOrderID，而是返回一个vtOrderID的列表，主要是为了解决上期所的自动平今平昨转换以及锁仓交易的自动转换功能。\r\n\r\n具体用法参考CTA策略模块里最新的策略demo。"
      }
    ]
  },
  {
    "number": 475,
    "title": "CTP针对上期货的昨仓问题",
    "created_at": "2017-08-26T06:48:39Z",
    "closed_at": "2017-09-20T07:57:48Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/475",
    "body": "昨天我做交易的时候，开盘时有10手rb，然后开了10手多单，这样今仓也是10手，总的是20；然后我平掉了5手昨仓，这时候，今仓不变，还是10手，总仓应该是15了。但是来看代码：\r\n针对上期所持仓的今昨分条返回（有昨仓、无今仓），读取昨仓数据`\r\nif data['YdPosition'] and not data['TodayPosition']:\r\n            pos.ydPosition = data['Position']`\r\n这里没理解错的话，当我开了10手今仓后，ydpos就不会再更新了，除非今仓又都平了。那这样，vnpy的昨仓还是10手，总仓是15手，而今仓成了5手。那继续这样，最后的昨仓今仓肯定是混乱的，导致平今平昨也会发生错误，不知道我有没有描述清楚。\r\n\r\n## 另外，CTP的文档(48条)这样写的：\r\n48. 持仓查询记录中的昨持仓是今天开盘前的一个初始值，不会因为平昨或者平仓而减少。 当前时侯的昨持仓=总持仓-今持仓。YdPosition := Position - TodayPosition。\r\n也就是说ydpos其实是可以通过今仓来更新的，不知道vn里的data['TodayPosition']是否记录的就是今仓并且可用，是的话其实不如就直接以tdpos为基准，用pos-tdpos更新ydpos。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/475/comments",
    "author": "KobeZhao",
    "comments": [
      {
        "user": "KobeZhao",
        "created_at": "2017-08-26T10:29:35Z",
        "body": "可不可以直接就是`pos.tdPosition = data['TodayPosition']`，然后引擎里是`self.longToday = pos.tdPosition\r\nself.longYd = self.longPosition - self.longToday`\r\n这样可行吗"
      },
      {
        "user": "vnpy",
        "created_at": "2017-09-20T07:57:48Z",
        "body": "已完成"
      }
    ]
  },
  {
    "number": 469,
    "title": "master版本ctaHistoryData.py运行出错",
    "created_at": "2017-08-23T14:14:09Z",
    "closed_at": "2017-08-23T14:47:26Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/469",
    "body": "将类HistoryDataEngine实例化后调用方法downloadFuturesSymbol\r\ne=HistoryDataEngine()\r\ne.downloadFuturesSymbol\r\n\r\n报错信息为：‘FILENAME’赋值前引用，如何解决\r\n  File \"C:\\ProgramData\\Anaconda2\\lib\\site-packages\\vnpy-1.6.2b0-py2.7.egg\\vnpy\\trader\\app\\ctaStrategy\\datayesClient.py\", line 35, in loadSetting\r\n    FILENAME = os.path.join(path, FILENAME)\r\n\r\nUnboundLocalError: local variable 'FILENAME' referenced before assignment",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/469/comments",
    "author": "ygnn008",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-08-23T14:24:34Z",
        "body": "请试试最新的beta版本，已经修复"
      }
    ]
  },
  {
    "number": 457,
    "title": "Crash when connect TdApi/mdApi",
    "created_at": "2017-08-18T02:43:56Z",
    "closed_at": "2017-08-23T01:16:25Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/457",
    "body": "用vnpy连接启动ctp connect（），连接TdApi/MdApi, 系统总是崩溃：\r\n\r\nterminate called after throwing an instance of 'boost::exception_detail::clone_impl<boost::exception_detail::error_info_injector<boost::lock_error> >'\r\n  what():  boost: mutex lock failed in pthread_mutex_lock: Invalid argument\r\nStarting server ....\r\nAborted (core dumped)\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/457/comments",
    "author": "darwinsys",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-08-21T01:52:49Z",
        "body": "请问你修改过CTP_connect.json里的帐号密码了吗？"
      },
      {
        "user": "darwinsys",
        "created_at": "2017-08-22T17:13:17Z",
        "body": "问题解决了。 是我自己子类继承了CtpMdApi， 实现上有问题， 所以系统运行就崩溃了。"
      },
      {
        "user": "vnpy",
        "created_at": "2017-08-23T01:16:25Z",
        "body": "OK"
      }
    ]
  },
  {
    "number": 439,
    "title": "能否升级下OKCOIN与HUOBI的接口",
    "created_at": "2017-08-10T07:55:07Z",
    "closed_at": "2017-08-23T14:46:01Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/439",
    "body": "OKCOIN新增了rest的API2.0接口，支持ETC交易\r\nHUOBI新增了支持ETH/CNY, ETC/CNY, ETH/BTC, LTC/BTC, ETC/BTC, BCC/BTC 的REST API接口，请求将VNPY的这两个接口升一下级 ",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/439/comments",
    "author": "vista852",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-08-11T01:34:15Z",
        "body": "暂时没时间做，欢迎发起PR"
      }
    ]
  },
  {
    "number": 432,
    "title": "夜盘的date，drEngine跟中期数据接口不同",
    "created_at": "2017-08-02T03:28:24Z",
    "closed_at": "2017-08-16T06:50:25Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/432",
    "body": "drEngine的数据来自ctpGateway，夜盘的date是实际时间；中期数据接口的夜盘数据是tradingDay。\r\n请问如何统一比较好？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/432/comments",
    "author": "ujfjhz",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-08-03T01:33:55Z",
        "body": "我来跟中期沟通下"
      }
    ]
  },
  {
    "number": 431,
    "title": "okcoin 异常",
    "created_at": "2017-08-02T01:36:11Z",
    "closed_at": "2017-08-30T13:28:57Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/431",
    "body": "error from callback <bound method OkCoinApi.onMessage of <vnokcoin.OkCoinApi object at 0x0264FA50>>: Error -3 while decompressing: invalid distance too far back\r\n  File \"D:\\Anaconda2\\lib\\site-packages\\websocket\\_app.py\", line 269, in _callback\r\n    callback(self, *args)\r\n  File \"E:\\Project\\python\\vnpy\\vnpy\\api\\okcoin\\vnokcoin.py\", line 127, in onMessage\r\n    data = self.readData(evt)\r\n  File \"E:\\Project\\python\\vnpy\\vnpy\\api\\okcoin\\vnokcoin.py\", line 106, in readData\r\n    inflated = decompress.decompress(evt) + decompress.flush()",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/431/comments",
    "author": "find-happiness",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-08-03T01:43:10Z",
        "body": "请先检查下是否有登录或者说连接成功？"
      },
      {
        "user": "vnpy",
        "created_at": "2017-08-30T13:28:57Z",
        "body": "无后续更新，关闭"
      }
    ]
  },
  {
    "number": 421,
    "title": "CTP simnow 模拟盘问题",
    "created_at": "2017-07-27T02:48:58Z",
    "closed_at": "2017-07-31T03:14:46Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/421",
    "body": "在使用CTP simnow模拟盘的时候，我发现，有时前置机会出问题，导致tick数据会从错误的时间开始回放。比如当前是10：30，收到的tick却是9：00开始，甚至是从昨天的夜盘时间开始。tick数据推送的时间间隔也不再是500ms，而是相对快一些。感觉应该是前置机出了问题，所以数据又从当日的第一个tick开始回放了。\r\n\r\n所以在这里我有两个问题，第一有没有什么办法可以解决这个问题。\r\n第二，如果数据接口的账户使用实盘的账号，而交易接口使用模拟盘账户的话，应该能解决这个问题。在这种情况下，vnpy会不会考虑添加对数据账户和交易账户不同的支持。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/421/comments",
    "author": "JaysonAlbert",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-07-28T02:06:34Z",
        "body": "SimNow只是一套质量比较普通的仿真环境，如果需要质量比较好的可以联系期货公司申请他们自运维的仿真帐号，质量会好很多"
      }
    ]
  },
  {
    "number": 413,
    "title": "回测与实盘中的成交的tradeTime不一致",
    "created_at": "2017-07-19T05:13:33Z",
    "closed_at": "2017-08-23T14:47:04Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/413",
    "body": "回测中为str(self.dt)，是datetime\r\n而实盘中是time，没有date",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/413/comments",
    "author": "ujfjhz",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-07-21T00:16:47Z",
        "body": "OK，我来处理掉"
      },
      {
        "user": "vnpy",
        "created_at": "2017-08-23T14:47:04Z",
        "body": "已处理"
      }
    ]
  },
  {
    "number": 391,
    "title": "新的master-dev中setup.py未将CSV文件打包进去",
    "created_at": "2017-07-05T14:39:46Z",
    "closed_at": "2017-07-09T13:13:30Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/391",
    "body": "如题",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/391/comments",
    "author": "alex-xst",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-07-06T01:47:40Z",
        "body": "请问是哪个csv文件需要打包进去？\r\n\r\n目前那个行情的csv已经从vnpy目录移出来了，放到了examples/CtaBacktesting下面。"
      }
    ]
  },
  {
    "number": 387,
    "title": "run.py 运行出错",
    "created_at": "2017-07-04T02:28:52Z",
    "closed_at": "2017-07-09T13:07:29Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/387",
    "body": "Traceback (most recent call last):\r\n  File \"E:/Project/python/vnpy/examples/VnTrader/run.py\", line 22, in <module>\r\n    from vnpy.trader.app import (riskManager, ctaStrategy, spreadTrading)\r\n  File \"E:\\Project\\python\\vnpy\\vnpy\\trader\\app\\spreadTrading\\__init__.py\", line 4, in <module>\r\n    from .uiStWidget import StManager\r\n  File \"E:\\Project\\python\\vnpy\\vnpy\\trader\\app\\spreadTrading\\uiStWidget.py\", line 73, in <module>\r\n    class StLogMonitor(QtWidgets.QTextEdit):\r\n  File \"E:\\Project\\python\\vnpy\\vnpy\\trader\\app\\spreadTrading\\uiStWidget.py\", line 75, in StLogMonitor\r\n    signal = QtCore.pyqtSignal(type(Event()))\r\nAttributeError: 'module' object has no attribute 'pyqtSignal'",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/387/comments",
    "author": "find-happiness",
    "comments": [
      {
        "user": "zsluedem",
        "created_at": "2017-07-04T07:59:30Z",
        "body": "我觉得是你的环境有问题,pyqt是不是5\r\n"
      },
      {
        "user": "find-happiness",
        "created_at": "2017-07-04T08:02:19Z",
        "body": "@zsluedem  我不知道  怎么看是不是pyqt版本"
      },
      {
        "user": "vnpy",
        "created_at": "2017-07-05T01:22:35Z",
        "body": "试试import PyQt4和import PyQt5两句命令，哪个能运行就是哪个"
      },
      {
        "user": "ipqhjjybj",
        "created_at": "2017-07-09T13:53:03Z",
        "body": "这个问题是  Anaconda2 版本不对导致的。"
      }
    ]
  },
  {
    "number": 382,
    "title": "环境搭建问题",
    "created_at": "2017-06-30T17:00:19Z",
    "closed_at": "2017-07-05T01:28:20Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/382",
    "body": "参考文档上的要求进行环境安装，目前有两个问题，方便请帮忙看下\r\n1.安装  conda install -c quantopian ta-lib=0.4.9\r\n报错如下：\r\n```\r\nUnsatisfiableError: The following specifications were found to be in conflict:\r\n  - matplotlib\r\n  - navigator-updater\r\n  - ta-lib 0.4.9*\r\nUse \"conda info <package>\" to see the dependencies for each package.\r\n```\r\n\r\n2. from vnctpmd import MdApi\r\nImportError: DLL load failed: 找不到指定的模块。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/382/comments",
    "author": "wudixy",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-07-03T01:06:16Z",
        "body": "1. 请问你的Anaconda版本是？建议用4.0.0\r\n2. vcredist x86没装"
      },
      {
        "user": "qk-huang",
        "created_at": "2017-07-04T09:17:14Z",
        "body": "同样问题"
      },
      {
        "user": "qk-huang",
        "created_at": "2017-07-04T09:28:59Z",
        "body": "使用方法一一键安装解决了"
      },
      {
        "user": "qk-huang",
        "created_at": "2017-07-04T11:19:40Z",
        "body": "好吧，居然anaconda 4.00完美解决"
      },
      {
        "user": "wudixy",
        "created_at": "2017-07-04T16:17:31Z",
        "body": "搞定了，不熟悉anaconda 虚拟环境造成。但现在连接时，总是说，CTP，不合法的登录，错误代码：3,怀疑是用户名密码错误，但试验了好几次，甚至换了账号 ，都不对，配置文件应该是对的，我随便换了IP，马上就连不上了。\r\n{\r\n    \"brokerID\": \"9999\", \r\n    \"mdAddress\": \"tcp://180.168.146.187:10031\", \r\n    \"tdAddress\": \"tcp://180.168.146.187:10030\", \r\n    \"userID\": \"mmmm\",\r\n    \"password\": \"password\"\r\n}\r\n\r\n上面这个CTP，不合法登录，也搞定了，要用investorId"
      },
      {
        "user": "vnpy",
        "created_at": "2017-07-05T01:28:20Z",
        "body": "问题解决，关闭issue"
      }
    ]
  },
  {
    "number": 377,
    "title": "ctp 行情订阅的一个小问题",
    "created_at": "2017-06-28T08:34:53Z",
    "closed_at": "2017-07-09T13:16:10Z",
    "labels": [
      "enhancement",
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/377",
    "body": "ctp在第一次订阅成功的时候会马上发出一个行情报文，不管是不是交易时间段。。。\r\n比如如果我的系统是在收盘之后，15：40连接ctp成功， 那么ctp会发送订阅合约最后一笔行情， 但是时间戳会是当前的时间戳， 比如15：40：37。 这种tick应该要过滤掉才是。。\r\n\r\n在线比对时间戳过滤掉行情，那么可能会拖慢整个dataRecorder的速度。\r\n如果不在每个tick收到的时候进行过滤，那么建议mongodb读取historical data最好加上时间过滤把这些错字段过滤掉。。。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/377/comments",
    "author": "JayDeng2837",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-06-29T00:29:11Z",
        "body": "能否给个截图？\r\n\r\n实盘CTP的行情服务器，在非交易时段应该返回的是同一个交易session内交易时段的最后一个tick。\r\n\r\n举例如果是中午的话，返回的是11:30收盘的tick，下午3点后应该是3点的tick，下午3点半后可能返回一个带有结算价数据的（时间戳可能是3点20-40之类的）"
      },
      {
        "user": "KobeZhao",
        "created_at": "2017-07-04T13:52:42Z",
        "body": "“在线比对时间戳过滤掉行情，那么可能会拖慢整个dataRecorder的速度。”，拖慢速度，有没有什么数据支持呢，我就是对比时间戳过滤行情的，目前看还可以，影响不太大啊。如果改为mongodb读的时候再处理的话，，，那我觉得数据库就显得有点不完美，自己收集的宝贵tick数据，还要再清洗才能用，有点不开心"
      },
      {
        "user": "vnpy",
        "created_at": "2017-07-05T01:27:46Z",
        "body": "用ipython的%timeit datetime.now()，我的电脑大约是948ns，约等于1微秒，每秒1000个tick的影响才1毫秒，从这个数量级看似乎确实还好"
      },
      {
        "user": "vnpy",
        "created_at": "2017-07-09T13:16:10Z",
        "body": "行情记录功能请参考使用examples/DataRecording中的代码，定时启动和关闭行情记录进程，通过控制程序运行的时间实现无用数据过滤。"
      }
    ]
  },
  {
    "number": 368,
    "title": "vtEngine.py中shelve.open(self.contractFileName)出现DBNoSuchFileError",
    "created_at": "2017-06-21T06:36:31Z",
    "closed_at": "2017-06-27T09:23:49Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/368",
    "body": "使用pip install vnpy，安装其他所有需要的拓展，直接运行run.py会出现`bsddb.db.DBNoSuchFileError: (2, 'No such file or directory')`，原因是vtEngine.py 334行中的`shelve.open(self.contractFileName)`\r\n\r\n除了尝试加入try-except-pass, 请问还有其他更好的解决方案吗？`shelve.open(self.contractFileName)`为什么不能自动创立文件，之前怎么没有遇到过这个问题？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/368/comments",
    "author": "ArthurSS",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-06-21T10:10:35Z",
        "body": "shelve.open函数本身是可以创建文件的，但是如果temp文件夹不存在，它是无法创建该文件夹的，导致报错。\r\n\r\n回头来加上一个文件夹检查的逻辑。"
      },
      {
        "user": "vnpy",
        "created_at": "2017-06-27T09:23:49Z",
        "body": "出现这个问题的原因是用户没有权限在相应路径新建目录，用管理员身份运行即可解决。"
      }
    ]
  },
  {
    "number": 364,
    "title": "when using Xspeed gateway , the ctaengine will receive messy tick time",
    "created_at": "2017-06-15T08:07:41Z",
    "closed_at": "2017-07-09T13:11:25Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/364",
    "body": "when start ctaStrategy using Xspeed gateway, it display randomly with massy tick time format like below ,\r\n\"\r\n16:04:32\tCTA引擎启动成功\r\n16:04:34\t策略加载成功\r\n16:04:34\ttime data '20170615 99:99:99.9' does not match format '%Y%m%d %H:%M:%S.%f'\r\n16:04:34\ttime data '20170615 99:99:99.9' does not match format '%Y%m%d %H:%M:%S.%f'\r\n\"\r\nI fix the issue with code in ctaEngine.py file  processTickEvent function like below  \r\n\"\r\n    def processTickEvent(self, event):\r\n        \"\"\"处理行情推送\"\"\"\r\n        tick = event.dict_['data']\r\n        # mylogger.debug(\"enter processTickEvent tick.date is %s, tick.time is %s \" % (tick.date, tick.time))\r\n        # 收到tick行情后，先处理本地停止单（检查是否要立即发出）\r\n        self.processStopOrder(tick)\r\n        \r\n        # 推送tick到对应的策略实例进行处理\r\n        if tick.vtSymbol in self.tickStrategyDict:\r\n            # 将vtTickData数据转化为ctaTickData\r\n            ctaTick = CtaTickData()\r\n            d = ctaTick.__dict__\r\n            for key in d.keys():\r\n                if key != 'datetime':\r\n                    d[key] = tick.__getattribute__(key)\r\n            \r\n            # 添加datetime字段\r\n            #Xspeed 传入的tick.time 字段是'99:99:99.9'系统报错程序中断\r\n            #self.writeCtaLog('tick.date is %s, tick.time is %s' % (tick.date, tick.time))\r\n            try:\r\n                ctaTick.datetime = datetime.strptime(' '.join([tick.date, tick.time]), '%Y%m%d %H:%M:%S.%f')\r\n            except ValueError as e:\r\n                self.writeCtaLog(e.message)\r\n                return\r\n            \r\n\"\r\n ",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/364/comments",
    "author": "zzniwei",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-06-16T00:57:22Z",
        "body": "这个情况来源于柜台层面推送的错误数据，具体原因我也不清楚，但只存在于测试环境，我在实盘系统中目前没遇到过。"
      },
      {
        "user": "zzniwei",
        "created_at": "2017-06-20T08:47:54Z",
        "body": "建议将捕获异常代码的添加入正式的发布中，增加程序健壮性和容错，万一收到的实盘数据有异常呢？thanks"
      },
      {
        "user": "vnpy",
        "created_at": "2017-07-09T13:11:25Z",
        "body": "已添加"
      }
    ]
  },
  {
    "number": 363,
    "title": "RuntimeError: the PyQt4.QtCore and PyQt5.QtCore modules both wrap the QObject class",
    "created_at": "2017-06-15T03:22:35Z",
    "closed_at": "2017-06-27T09:21:58Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/363",
    "body": "1.6.2 运行出现以下错误：\r\n\r\nRuntimeError: the PyQt4.QtCore and PyQt5.QtCore modules both wrap the QObject class\r\n\r\n安装了pyqt4",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/363/comments",
    "author": "LoneWolfDog",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-06-16T00:58:20Z",
        "body": "建议不要同时安装PyQt4和PyQt5，否则可能导致冲突，卸载其中的一个吧"
      }
    ]
  },
  {
    "number": 360,
    "title": "Ubuntu 碰到 ImportError: No module named vnctpmd",
    "created_at": "2017-06-12T09:06:26Z",
    "closed_at": "2017-06-13T01:21:23Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/360",
    "body": "Windows 没成功，尝试 Ubuntu 虚拟机，也没成功\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"run.py\", line 15, in <module>\r\n    from vnpy.trader.gateway import (ctpGateway, femasGateway, xspeedGateway,\r\n  File \"/home/lxf/.virtualenvs/vnpy/local/lib/python2.7/site-packages/vnpy/trader/gateway/ctpGateway/__init__.py\", line 4, in <module>\r\n    from ctpGateway import CtpGateway\r\n  File \"/home/lxf/.virtualenvs/vnpy/local/lib/python2.7/site-packages/vnpy/trader/gateway/ctpGateway/ctpGateway.py\", line 16, in <module>\r\n    from vnpy.api.ctp import MdApi, TdApi, defineDict\r\n  File \"/home/lxf/.virtualenvs/vnpy/local/lib/python2.7/site-packages/vnpy/api/ctp/__init__.py\", line 3, in <module>\r\n    from vnctpmd import MdApi\r\nImportError: No module named vnctpmd \r\n```\r\n\r\n配置如下：\r\nUbuntu 16.04.1 ，32位\r\n\r\nPython 版本：2.7.12  32位\r\n\r\n安装的模块：\r\nbackports.shutil-get-terminal-size (1.0.0)\r\nbackports.ssl-match-hostname (3.5.0.1)\r\ndecorator (4.0.11)\r\nenum34 (1.1.6)\r\nipython (5.4.1)\r\nipython-genutils (0.2.0)\r\nmsgpack-python (0.4.8)\r\nnumpy (1.13.0)\r\npathlib2 (2.2.1)\r\npexpect (4.2.1)\r\npickleshare (0.7.4)\r\npip (9.0.1)\r\nprompt-toolkit (1.0.14)\r\npsutil (5.2.2)\r\nptyprocess (0.5.1)\r\nPygments (2.2.0)\r\npymongo (3.4.0)\r\nPySide (1.2.4)\r\nQDarkStyle (2.3.1)\r\nQtPy (1.2.1)\r\nscandir (1.5)\r\nsetuptools (36.0.1)\r\nsimplegeneric (0.8.1)\r\nsix (1.10.0)\r\nTA-Lib (0.4.10)\r\ntraitlets (4.3.2)\r\nvnpy (1.6.2)\r\nwcwidth (0.1.7)\r\nwebsocket-client (0.40.0)\r\nwheel (0.29.0)",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/360/comments",
    "author": "hillerliao",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-06-13T01:21:23Z",
        "body": "1.6.2版本里的架构更新，还没有完成Ubuntu版本，1.7会完成。\r\n\r\nUbuntu的请先用1.5吧。"
      }
    ]
  },
  {
    "number": 358,
    "title": "求助，报错：bsddb.db.DBNoSuchFileError",
    "created_at": "2017-06-11T13:25:35Z",
    "closed_at": "2017-06-13T01:21:51Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/358",
    "body": "`Traceback (most recent call last):\r\n  File \"run.py\", line 46, in <module>\r\n    main()\r\n  File \"run.py\", line 28, in main\r\n    me = MainEngine(ee)\r\n  File \"C:\\Users\\liaozhihai\\Envs\\vnpy\\lib\\site-packages\\vnpy\\trader\\vtEngine.py\", line 33, in __init__\r\n    self.dataEngine = DataEngine(self.eventEngine)\r\n  File \"C:\\Users\\liaozhihai\\Envs\\vnpy\\lib\\site-packages\\vnpy\\trader\\vtEngine.py\", line 299, in __init__\r\n    self.loadContracts()\r\n  File \"C:\\Users\\liaozhihai\\Envs\\vnpy\\lib\\site-packages\\vnpy\\trader\\vtEngine.py\", line 334, in loadContracts\r\n    f = shelve.open(self.contractFileName)\r\n  File \"c:\\Python27\\Lib\\shelve.py\", line 243, in open\r\n    return DbfilenameShelf(filename, flag, protocol, writeback)\r\n  File \"c:\\Python27\\Lib\\shelve.py\", line 227, in __init__\r\n    Shelf.__init__(self, anydbm.open(filename, flag), protocol, writeback)\r\n  File \"c:\\Python27\\Lib\\anydbm.py\", line 85, in open\r\n    return mod.open(file, flag, mode)\r\n  File \"c:\\Python27\\Lib\\dbhash.py\", line 18, in open\r\n    return bsddb.hashopen(file, flag, mode)\r\n  File \"c:\\Python27\\Lib\\bsddb\\__init__.py\", line 364, in hashopen\r\n    d.open(file, db.DB_HASH, flags, mode)\r\nbsddb.db.DBNoSuchFileError: (2, 'No such file or directory')`",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/358/comments",
    "author": "hillerliao",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-06-12T01:10:23Z",
        "body": "说明下你的运行环境？"
      },
      {
        "user": "hillerliao",
        "created_at": "2017-06-12T02:25:26Z",
        "body": "@vnpy \r\n\r\n操作系统：\r\nWindows 7 ，64位系统\r\n\r\nPython环境：\r\nPython 2.7.11 (v2.7.11:6d1b6a68f775, Dec  5 2015, 20:32:19) [MSC v.1500 32 bit (Intel)] on win32\r\n\r\nvnpy版本：\r\nvnpy (1.6.2)\r\n\r\nMongoDB:\r\n3.4"
      },
      {
        "user": "nigelliyang",
        "created_at": "2017-06-12T07:31:06Z",
        "body": "我也有同样的问题\r\nTraceback (most recent call last):\r\n  File \"E:/AutoTrade/tradelink/TradeLink/PythonPlex/CTA/run.py\", line 48, in <module>\r\n    main()\r\n  File \"E:/AutoTrade/tradelink/TradeLink/PythonPlex/CTA/run.py\", line 29, in main\r\n    me = MainEngine(ee)\r\n  File \"D:\\Anaconda2_32\\lib\\site-packages\\vnpy\\trader\\vtEngine.py\", line 33, in __init__\r\n    self.dataEngine = DataEngine(self.eventEngine)\r\n  File \"D:\\Anaconda2_32\\lib\\site-packages\\vnpy\\trader\\vtEngine.py\", line 299, in __init__\r\n    self.loadContracts()\r\n  File \"D:\\Anaconda2_32\\lib\\site-packages\\vnpy\\trader\\vtEngine.py\", line 334, in loadContracts\r\n    f = shelve.open(self.contractFileName)\r\n  File \"D:\\Anaconda2_32\\lib\\shelve.py\", line 243, in open\r\n    return DbfilenameShelf(filename, flag, protocol, writeback)\r\n  File \"D:\\Anaconda2_32\\lib\\shelve.py\", line 227, in __init__\r\n    Shelf.__init__(self, anydbm.open(filename, flag), protocol, writeback)\r\n  File \"D:\\Anaconda2_32\\lib\\anydbm.py\", line 85, in open\r\n    return mod.open(file, flag, mode)\r\n  File \"D:\\Anaconda2_32\\lib\\dbhash.py\", line 18, in open\r\n    return bsddb.hashopen(file, flag, mode)\r\n  File \"D:\\Anaconda2_32\\lib\\bsddb\\__init__.py\", line 364, in hashopen\r\n    d.open(file, db.DB_HASH, flags, mode)\r\nbsddb.db.DBNoSuchFileError: (2, 'No such file or directory')"
      },
      {
        "user": "ipqhjjybj",
        "created_at": "2017-06-12T12:58:06Z",
        "body": "C:\\ProgramData\\Anaconda2\\Lib\\site-packages\\vnpy\\trader\\temp\r\n在 vnpy/trader下面创建一个 temp文件夹，  这样会自动生成 ContractData.vt 文件。  。 有些windows机器不能自动产生temp文件夹，导致错误。。。"
      },
      {
        "user": "ipqhjjybj",
        "created_at": "2017-06-12T13:03:01Z",
        "body": "@hillerliao @vnpy @nigelliyang "
      },
      {
        "user": "vnpy",
        "created_at": "2017-06-12T14:17:25Z",
        "body": "遇到这个问题的用户，请检查是否以管理员身份在运行程序，否则可能出现Python无权创建temp文件夹的情况，导致后续的shelve创建文件也失败"
      },
      {
        "user": "nigelliyang",
        "created_at": "2017-06-12T14:44:12Z",
        "body": "非常感谢，问题解决"
      }
    ]
  },
  {
    "number": 352,
    "title": "1.6.2版本CTP模块错误",
    "created_at": "2017-06-09T15:01:54Z",
    "closed_at": "2017-06-27T09:21:06Z",
    "labels": [
      "help wanted",
      "wontfix"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/352",
    "body": " 今天下了最新的1.6.2版本。运行example的run.py，发现了问题。\r\n选用菜单进行ctp连接的时候，出现了错误。\r\n同样的设置在1.6.1版本中没有出现过。\r\n错误信息为：CTP：无此功能。而且不能读取账户和持仓信息。\r\n紧急，麻烦了。\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/352/comments",
    "author": "angusoutlook",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-06-12T01:22:18Z",
        "body": "请提供你的运行环境，另外问下你是否修改过安装到site-packages下的源代码？\r\n\r\n还有请附上出错相关的截图。"
      },
      {
        "user": "vnpy",
        "created_at": "2017-06-27T09:21:29Z",
        "body": "无更新，关闭issue。"
      }
    ]
  },
  {
    "number": 341,
    "title": "RPC模式Mac上能运行vtClient客户端么？",
    "created_at": "2017-06-02T16:30:05Z",
    "closed_at": "2017-06-05T01:18:04Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/341",
    "body": "如题，提示没有找到 .so文件",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/341/comments",
    "author": "summerxiaomi",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-06-03T02:31:45Z",
        "body": "可以，但是你的vtServer必须跑在Linux或者Windows的机器上（虚拟机也行）。\r\n\r\n最近更新v1.6.2项目结构有所调整，vtClient和vtServer回头会在v1.8里重新实现，将所有的appEngine都移动到服务端，客户端仅负责GUI控制。"
      },
      {
        "user": "summerxiaomi",
        "created_at": "2017-06-06T01:39:11Z",
        "body": "thx"
      }
    ]
  },
  {
    "number": 338,
    "title": "将MongoDB替换为其他时序数据库？",
    "created_at": "2017-06-02T03:03:58Z",
    "closed_at": "2017-06-02T14:12:30Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/338",
    "body": "有没有将MongoDB替换成为其他性能更好的时序数据库的考虑？例如OpenTSDB, InfluxDB等等？MongoDB结构松散，似乎在时序数据上支持得不太好。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/338/comments",
    "author": "geraybos",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-06-02T14:12:30Z",
        "body": "不好意思，暂时没有，原因如下：\r\n1. MongoDB现阶段足以满足开发需求\r\n2. MongoDB在用户数、资料、三方支持获取等方面优于以上数据库\r\n\r\n没必要在尚未遇到瓶颈的时候去做提前优化。"
      }
    ]
  },
  {
    "number": 336,
    "title": "ubuntu 编译lts失败",
    "created_at": "2017-05-28T06:37:58Z",
    "closed_at": "2017-06-02T14:37:08Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/336",
    "body": "进入 vnpy/vn.api/vn.lts\r\n运行一下指令：\r\nmkdir build\r\ncd build\r\ncmake ..\r\nmake VERBOSE=1 -j 1\r\n报下面错误\r\n/usr/bin/cmake -H/work/finance/vn/vnpy/vn.api/vn.lts -B/work/finance/vn/vnpy/vn.api/vn.lts/build --check-build-system CMakeFiles/Makefile.cmake 0\r\n/usr/bin/cmake -E cmake_progress_start /work/finance/vn/vnpy/vn.api/vn.lts/build/CMakeFiles /work/finance/vn/vnpy/vn.api/vn.lts/build/CMakeFiles/progress.marks\r\nmake -f CMakeFiles/Makefile2 all\r\nmake[1]: Entering directory '/work/finance/vn/vnpy/vn.api/vn.lts/build'\r\nmake -f CMakeFiles/vnltsmd.dir/build.make CMakeFiles/vnltsmd.dir/depend\r\nmake[2]: Entering directory '/work/finance/vn/vnpy/vn.api/vn.lts/build'\r\ncd /work/finance/vn/vnpy/vn.api/vn.lts/build && /usr/bin/cmake -E cmake_depends \"Unix Makefiles\" /work/finance/vn/vnpy/vn.api/vn.lts /work/finance/vn/vnpy/vn.api/vn.lts /work/finance/vn/vnpy/vn.api/vn.lts/build /work/finance/vn/vnpy/vn.api/vn.lts/build /work/finance/vn/vnpy/vn.api/vn.lts/build/CMakeFiles/vnltsmd.dir/DependInfo.cmake --color=\r\nDependee \"/work/finance/vn/vnpy/vn.api/vn.lts/build/CMakeFiles/vnltsmd.dir/DependInfo.cmake\" is newer than depender \"/work/finance/vn/vnpy/vn.api/vn.lts/build/CMakeFiles/vnltsmd.dir/depend.internal\".\r\nDependee \"/work/finance/vn/vnpy/vn.api/vn.lts/build/CMakeFiles/CMakeDirectoryInformation.cmake\" is newer than depender \"/work/finance/vn/vnpy/vn.api/vn.lts/build/CMakeFiles/vnltsmd.dir/depend.internal\".\r\nScanning dependencies of target vnltsmd\r\nmake[2]: Leaving directory '/work/finance/vn/vnpy/vn.api/vn.lts/build'\r\nmake -f CMakeFiles/vnltsmd.dir/build.make CMakeFiles/vnltsmd.dir/build\r\nmake[2]: Entering directory '/work/finance/vn/vnpy/vn.api/vn.lts/build'\r\nmake[2]: Warning: File 'CMakeFiles/vnltsmd.dir/depend.make' has modification time 0.69 s in the future\r\n[ 16%] Building CXX object CMakeFiles/vnltsmd.dir/vnltsmd/vnltsmd/vnltsmd.cpp.o\r\n/usr/bin/c++   -DBUILD_LTS_MD -DBUILD_LTS_QRY -DBUILD_LTS_TD -DUSE_64BITS -Dvnltsmd_EXPORTS -I/work/finance/vn/vnpy/vn.api/vn.lts/ltsapi -I/work/finance/vn/vnpy/vn.api/vn.lts/LTS_MD_PATH -I/work/finance/vn/vnpy/vn.api/vn.lts/LTS_TD_PATH -I/work/finance/vn/vnpy/vn.api/vn.lts/LTS_QRY_PATH -I/usr/include/python2.7  -fPIC -std=c++11 -O3 -DNDEBUG -fPIC   -o CMakeFiles/vnltsmd.dir/vnltsmd/vnltsmd/vnltsmd.cpp.o -c /work/finance/vn/vnpy/vn.api/vn.lts/vnltsmd/vnltsmd/vnltsmd.cpp\r\n[ 33%] Linking CXX shared library lib/vnltsmd.so\r\n/usr/bin/cmake -E cmake_link_script CMakeFiles/vnltsmd.dir/link.txt --verbose=1\r\n/usr/bin/c++  -fPIC  -fPIC -std=c++11 -O3 -DNDEBUG  -shared -Wl,-soname,vnltsmd.so -o lib/vnltsmd.so CMakeFiles/vnltsmd.dir/vnltsmd/vnltsmd/vnltsmd.cpp.o  -L/work/finance/vn/vnpy/vn.api/vn.lts/ltsapi -lboost_python -lboost_thread -lboost_date_time -lboost_system -lboost_chrono -lboost_atomic -lpthread -lpython2.7 -lsecuritymduserapi -Wl,-rpath,/work/finance/vn/vnpy/vn.api/vn.lts/ltsapi\r\n/usr/bin/ld:/work/finance/vn/vnpy/vn.api/vn.lts/ltsapi/libsecuritymduserapi.so: file format not recognized; treating as linker script\r\n/usr/bin/ld:/work/finance/vn/vnpy/vn.api/vn.lts/ltsapi/libsecuritymduserapi.so:1: syntax error\r\ncollect2: error: ld returned 1 exit status\r\nCMakeFiles/vnltsmd.dir/build.make:103: recipe for target 'lib/vnltsmd.so' failed\r\nmake[2]: *** [lib/vnltsmd.so] Error 1\r\nmake[2]: Leaving directory '/work/finance/vn/vnpy/vn.api/vn.lts/build'\r\nCMakeFiles/Makefile2:67: recipe for target 'CMakeFiles/vnltsmd.dir/all' failed\r\nmake[1]: *** [CMakeFiles/vnltsmd.dir/all] Error 2\r\nmake[1]: Leaving directory '/work/finance/vn/vnpy/vn.api/vn.lts/build'\r\nMakefile:83: recipe for target 'all' failed\r\nmake: *** [all] Error 2\r\n\r\n看起来是编译链接的错误,怎么解决\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/336/comments",
    "author": "zsluedem",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-05-30T09:11:29Z",
        "body": "试试直接用bash build.sh能否编译？"
      },
      {
        "user": "zsluedem",
        "created_at": "2017-05-31T00:40:58Z",
        "body": "不可以啊～！报同样的错～！"
      },
      {
        "user": "vnpy",
        "created_at": "2017-06-01T15:35:00Z",
        "body": "我这边测试了下，发现了同样的问题，应该是上次更新有东西出错了，会尽快修复"
      },
      {
        "user": "vnpy",
        "created_at": "2017-06-02T14:37:08Z",
        "body": "找到问题所在了：v1.6.1的ltsapi目录下的三个lib开头的.so文件，可能因为之前同步的原因弄坏了，目前都是错误的。\r\n\r\n删除三个lib开头的.so文件，然后将三个security开头的.so文件加上lib前缀（这三个文件是正常的），再执行编译即可。"
      },
      {
        "user": "vnpy",
        "created_at": "2017-06-02T14:37:20Z",
        "body": "也将更新推送到了dev中"
      },
      {
        "user": "zsluedem",
        "created_at": "2017-06-03T02:28:56Z",
        "body": "好的～！明白～！"
      }
    ]
  },
  {
    "number": 333,
    "title": "请问行情的 QTableWidget里面订阅的合约代码较多，如果实时更新时会略卡有什么好的解决办法吗？",
    "created_at": "2017-05-24T06:04:37Z",
    "closed_at": "2017-06-01T15:04:35Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/333",
    "body": "",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/333/comments",
    "author": "tesla1060",
    "comments": [
      {
        "user": "ICTime",
        "created_at": "2017-05-29T01:33:38Z",
        "body": "订阅很多， 你确定你要用GUI吗？"
      },
      {
        "user": "vnpy",
        "created_at": "2017-06-01T01:46:13Z",
        "body": "卡主要是QTableWidget的自动Resize导致的，setResizeMode那行注释了就好"
      },
      {
        "user": "vnpy",
        "created_at": "2017-06-01T15:04:35Z",
        "body": "已修改为BasicMonitor只有第一次更新数据时会调整列宽，避免大数据量更新时导致的卡顿"
      }
    ]
  },
  {
    "number": 329,
    "title": "vnpy-dev版本 No model named vnpy.trader.vtGlobal 报错处理建议",
    "created_at": "2017-05-15T01:54:24Z",
    "closed_at": "2017-05-30T09:06:05Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/329",
    "body": "1.下载vnpy-dev版本的，windows系统添加pythonpath：系统--高级系统设置--环境变量--用户变量--新建--PYTHONPATH--vnpy-dev（主意是vnpy-dev，不是vnpy）。（我试着用pycharm添加路径，但是没成功，不知道为啥）\r\n\r\n2.如果还是报No model named vnpy.trader.vtGlobal 错误，试着删除vnpy\\trader\\gateway 中的cshshlpGateway文件夹（中信证券接口）。\r\n\r\n3.再次双击vtmain.py,看能否运行起来，我自己的是这么处理的 目前没什么问题。\r\n\r\n另外，用pycharm的同学，有时候debug时候会莫名其妙报缺少各种库，我也不知道咋回事儿，之前明明装了pyqt之类的 可是就是读取不出来，这个还是让专业人士解答下吧，毕竟我是个半路出家的文科僧~",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/329/comments",
    "author": "nikitazhhy",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-05-16T01:48:56Z",
        "body": "1. 问下你添加的PYTHONPATH的路径，是完整的vnpy-dev文件夹所在的路径吗？\r\n2. 确实pycharm会有些奇怪的问题，也是为啥我自己一直用WingIDE"
      },
      {
        "user": "kantmp",
        "created_at": "2017-05-17T09:25:13Z",
        "body": "在vtMain 里面\r\nimport sys\r\nsys.path.append('vnpy path')\r\n这个方法也是可行"
      },
      {
        "user": "nikitazhhy",
        "created_at": "2017-05-18T07:47:52Z",
        "body": "回答群主：\r\n1.是的，要将完整vnpy-dev加进去，否则还是会报错。\r\n2.pycharm经常读取不到已经安装的库，很奇怪，准备转投其他IDE。\r\n"
      },
      {
        "user": "vnpy",
        "created_at": "2017-05-30T09:05:53Z",
        "body": "试试别的IDE吧"
      }
    ]
  },
  {
    "number": 326,
    "title": "请移除开拓者历史数据导入函数",
    "created_at": "2017-05-10T12:52:29Z",
    "closed_at": "2017-05-12T03:36:41Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/326",
    "body": "请移除ctaHistoryData.py中loadTBCsv函数。\r\n原因如下：\r\n1、开拓者导出历史数据中持仓量与实盘CTP记录数据不同\r\n2、函数本身逻辑有错误",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/326/comments",
    "author": "cooooo",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-05-11T00:30:17Z",
        "body": "请给出具体的问题细节，否则单纯两句话就要删除代码的请求不可能接受"
      },
      {
        "user": "vnpy",
        "created_at": "2017-05-12T01:23:23Z",
        "body": "跟函数作者沟通后发现问题所在，会尽快移除"
      },
      {
        "user": "vnpy",
        "created_at": "2017-05-12T03:36:41Z",
        "body": "已完成 "
      }
    ]
  },
  {
    "number": 321,
    "title": "关于回测的问题，能看到回测的成交明细吗？",
    "created_at": "2017-05-03T14:18:31Z",
    "closed_at": "2017-05-04T01:22:42Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/321",
    "body": "",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/321/comments",
    "author": "zengbotang",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-05-04T01:22:42Z",
        "body": "使用CtaStrategy模块的话，可以在完成回测后，通过backtesting对象的tradeDict来查询成交记录"
      }
    ]
  },
  {
    "number": 320,
    "title": "为什么vntrader错误里提示资金不足？",
    "created_at": "2017-05-02T09:52:08Z",
    "closed_at": "2017-05-08T09:53:04Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/320",
    "body": "使用策略文件做模拟交易，“账户”显示可用为800854，卖平仓一支21235的期货，为什么错误里提示资金不足？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/320/comments",
    "author": "FallacyWalker",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-05-03T00:27:18Z",
        "body": "检查下是否有其他的活动委托没有撤销？\r\n\r\n发送委托后柜台就会立即锁定你的资金。"
      }
    ]
  },
  {
    "number": 275,
    "title": "strategy name 为中文时，策略监控的pos有异常",
    "created_at": "2017-04-06T09:04:02Z",
    "closed_at": "2017-04-08T00:57:58Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/275",
    "body": "在策略实例配置cta_setting.jason中配置name时，若为中文名，self.putevent()时，反馈在策略监控中的pos变量，跟实际的pos不一致。改成英文就没事了。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/275/comments",
    "author": "msincenselee",
    "comments": [
      {
        "user": "fanchuan8848",
        "created_at": "2017-04-06T11:00:13Z",
        "body": "用的是哪个版本？"
      },
      {
        "user": "vnpy",
        "created_at": "2017-04-08T00:57:58Z",
        "body": "这个应该和json文件在保存时的编码方式有关，默认使用的是纯英文的模式而非UTF-8，所以不能在json文件中输入中文数据，如果需要的话，可以修改loadSetting时对json的解码方式为UTF-8，应该就不会出问题。"
      }
    ]
  },
  {
    "number": 255,
    "title": "无法执行signal.connect连接的函数",
    "created_at": "2017-03-09T03:11:52Z",
    "closed_at": "2017-03-11T14:52:52Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/255",
    "body": ">  def registerEvent(self):\r\n        \"\"\"注册事件监听\"\"\"\r\n        self.signal.connect(self.updateMarketData)\r\n        self.__eventEngine.register(EVENT_MARKETDATA, self.signal.emit)\r\n\r\n代码中的updateMarketData始终无法执行",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/255/comments",
    "author": "sunshinelover",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-03-10T01:31:51Z",
        "body": "这是什么地方的代码，请把上下文一起贴出来。\r\n\r\n另外可以先检查下你调用registerEvent函数了没"
      }
    ]
  },
  {
    "number": 250,
    "title": "回测时ontrade函数重复返回平仓的数据",
    "created_at": "2017-03-07T08:44:25Z",
    "closed_at": "2017-03-07T11:00:35Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/250",
    "body": "发了1手卖平的指令后，ontrade 函数返回了两次，造成pos变成-1，然后再也没有开仓\r\n检查了数据库的1分钟数据，正常的（用别的策略回测同样的数据，很顺利的跑完所有数据），如何解决这个问题呢？求教",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/250/comments",
    "author": "jason887",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-03-07T09:01:51Z",
        "body": "检查你的历史数据，onTrade返回两次必然是因为有两个委托被触发了，是否有之前遗留的委托未取消。"
      }
    ]
  },
  {
    "number": 244,
    "title": "如果想增强同时支持多账户交易，修改量是否很大？",
    "created_at": "2017-03-03T06:16:36Z",
    "closed_at": "2018-12-02T05:27:38Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/244",
    "body": "目前vnpy只支持单个账户交易，如果想增强同时支持多账户交易，修改量是否很大？能否给一些修改方面的建议？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/244/comments",
    "author": "akeyong",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-03-03T15:11:34Z",
        "body": "我回头来提供个例子，放到vn.how下面吧"
      },
      {
        "user": "akeyong",
        "created_at": "2017-03-06T07:05:14Z",
        "body": "@vnpy 太感谢了！"
      },
      {
        "user": "vnpy",
        "created_at": "2017-06-02T16:27:59Z",
        "body": "计划在v1.8实现算法交易模块，并通过目标持仓复制算法来实现以上需求"
      },
      {
        "user": "smartgang",
        "created_at": "2018-02-22T16:14:06Z",
        "body": "大大计划何时做这个多账户的功能？"
      },
      {
        "user": "vnpy",
        "created_at": "2018-02-23T01:01:23Z",
        "body": "1.9会完成，之前1.8计划的是海龟策略和算法交易，因为Web提前改到1.9了。"
      },
      {
        "user": "vnpy",
        "created_at": "2018-12-02T05:27:38Z",
        "body": "新增TradeCopy交易复制模块，实现主账号作为Provider发布自己当前的交易仓位，跟随账户作为Subscriber按照复制系数CopyRatio来计算目标仓位，并自动执行跟踪交易的功能。"
      }
    ]
  },
  {
    "number": 241,
    "title": "有没有计划支持PyQt5",
    "created_at": "2017-03-02T12:12:57Z",
    "closed_at": "2017-05-08T10:11:12Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/241",
    "body": "现在最新版的Anaconda（4.3.0）默认安装的是PyQt5了，不知道有没有计划升级到PyQt5，不然需要Downgrade，比较麻烦。谢谢。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/241/comments",
    "author": "bitcof",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-03-03T01:34:38Z",
        "body": "建议使用的Anaconda版本是4.0.0，PyQt5的很多API都发生了变化，预计年底可能做升级。"
      },
      {
        "user": "vnpy",
        "created_at": "2017-05-08T10:11:02Z",
        "body": "通过qtpy实现兼容"
      }
    ]
  },
  {
    "number": 240,
    "title": "可以作为服务在后台运行吗",
    "created_at": "2017-03-01T14:12:30Z",
    "closed_at": "2017-03-03T15:13:10Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/240",
    "body": "突然想到，能不能作为服务在后台运行？这样我就可以安装在 ubuntu server或win机器（本机或远程）上。\r\n各种设置(如运行策略，记录数据，监控行情，交易情况等等操作) 则通过命令行，或web，或ui从本机或远端来操作？\r\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/240/comments",
    "author": "viponedream",
    "comments": [
      {
        "user": "fanchuan8848",
        "created_at": "2017-03-01T15:33:47Z",
        "body": "里面的vtServer.py就是为这种方式准备的，而且已经有人实现了"
      },
      {
        "user": "vnpy",
        "created_at": "2017-03-02T01:15:05Z",
        "body": "可以，vtServer.py的设计更多是用来展示vn.rpc模块的用法，你可以参考他来设计自己需要的后台服务器"
      },
      {
        "user": "silent494529371",
        "created_at": "2017-05-20T14:52:12Z",
        "body": "哪里能看到参考实现的代码@fanchuan8848 "
      }
    ]
  },
  {
    "number": 234,
    "title": "ctaBackBesting.py，CTA运行回测，用下一个Bar来撮合上一个Bar的订单，判断是否成交是否有点问题？",
    "created_at": "2017-02-22T01:49:20Z",
    "closed_at": "2017-03-01T02:43:12Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/234",
    "body": "在Bar模式中，CTA运行回测过程中，每一个Bar调用newBar函数一次，先撮合订单，再运行Bar。如果在上一根Bar的开盘价或者收盘价下了订单，CTA回测框架是用下一个Bar的OHLC价格来撮合订单。\r\n例如，如果用上一个Bar的开盘价100开多，上一个Bar的最高价是110，就应该成交阿。上一个Bar的收盘价是95.但是回测中用下一个Bar的OHLC价来撮合，下一个Bar的最高价99，这样上个Bar用开盘价下的订单的价格100比下一个Bar的最高价99低，回测框架判断为不成交！！！这样会导致回测结果有问题\r\n\r\n\r\ndef runBacktesting(self):\r\n        \"\"\"运行回测\"\"\"\r\n        # 载入历史数据\r\n        self.loadHistoryData()\r\n        \r\n        # 首先根据回测模式，确认要使用的数据类\r\n        if self.mode == self.BAR_MODE:\r\n            dataClass = CtaBarData\r\n            func = self.newBar\r\n        else:\r\n            dataClass = CtaTickData\r\n            func = self.newTick\r\n\r\n        self.output(u'开始回测')\r\n        \r\n        self.strategy.inited = True\r\n        self.strategy.onInit()\r\n        self.output(u'策略初始化完成')\r\n        \r\n        self.strategy.trading = True\r\n        self.strategy.onStart()\r\n        self.output(u'策略启动完成')\r\n        \r\n        self.output(u'开始回放数据')\r\n\r\n        for d in self.dbCursor:\r\n            data = dataClass()\r\n            data.__dict__ = d\r\n            func(data)     \r\n            \r\n        self.output(u'数据回放结束')\r\n        \r\n    #----------------------------------------------------------------------\r\n    def newBar(self, bar):\r\n        \"\"\"新的K线\"\"\"\r\n        self.bar = bar\r\n        self.dt = bar.datetime\r\n        self.crossLimitOrder()      # 先撮合限价单\r\n        self.crossStopOrder()       # 再撮合停止单\r\n        self.strategy.onBar(bar)    # 推送K线到策略中\r\n\r\n #----------------------------------------------------------------------\r\n    def crossLimitOrder(self):\r\n        \"\"\"基于最新数据撮合限价单\"\"\"\r\n        # 先确定会撮合成交的价格\r\n        if self.mode == self.BAR_MODE:\r\n            buyCrossPrice = self.bar.low        # 若买入方向限价单价格高于该价格，则会成交\r\n            sellCrossPrice = self.bar.high      # 若卖出方向限价单价格低于该价格，则会成交\r\n            buyBestCrossPrice = self.bar.open   # 在当前时间点前发出的买入委托可能的最优成交价\r\n            sellBestCrossPrice = self.bar.open  # 在当前时间点前发出的卖出委托可能的最优成交价\r\n        else:\r\n            buyCrossPrice = self.tick.askPrice1\r\n            sellCrossPrice = self.tick.bidPrice1\r\n            buyBestCrossPrice = self.tick.askPrice1\r\n            sellBestCrossPrice = self.tick.bidPrice1\r\n        \r\n        # 遍历限价单字典中的所有限价单\r\n        for orderID, order in self.workingLimitOrderDict.items():\r\n            # 判断是否会成交\r\n            buyCross = order.direction==DIRECTION_LONG and order.price>=buyCrossPrice\r\n            sellCross = order.direction==DIRECTION_SHORT and order.price<=sellCrossPrice\r\n            \r\n            # 如果发生了成交\r\n            if buyCross or sellCross:\r\n                # 推送成交数据\r\n                self.tradeCount += 1            # 成交编号自增1\r\n                tradeID = str(self.tradeCount)\r\n                trade = VtTradeData()\r\n                trade.vtSymbol = order.vtSymbol\r\n                trade.tradeID = tradeID\r\n                trade.vtTradeID = tradeID\r\n                trade.orderID = order.orderID\r\n                trade.vtOrderID = order.orderID\r\n                trade.direction = order.direction\r\n                trade.offset = order.offset\r\n                \r\n                # 以买入为例：\r\n                # 1. 假设当根K线的OHLC分别为：100, 125, 90, 110\r\n                # 2. 假设在上一根K线结束(也是当前K线开始)的时刻，策略发出的委托为限价105\r\n                # 3. 则在实际中的成交价会是100而不是105，因为委托发出时市场的最优价格是100\r\n                if buyCross:\r\n                    trade.price = min(order.price, buyBestCrossPrice)\r\n                    self.strategy.pos += order.totalVolume\r\n                else:\r\n                    trade.price = max(order.price, sellBestCrossPrice)\r\n                    self.strategy.pos -= order.totalVolume\r\n                \r\n                trade.volume = order.totalVolume\r\n                trade.tradeTime = str(self.dt)\r\n                trade.dt = self.dt\r\n                self.strategy.onTrade(trade)\r\n                \r\n                self.tradeDict[tradeID] = trade\r\n                \r\n                # 推送委托数据\r\n                order.tradedVolume = order.totalVolume\r\n                order.status = STATUS_ALLTRADED\r\n                self.strategy.onOrder(order)\r\n                \r\n                # 从字典中删除该限价单\r\n                del self.workingLimitOrderDict[orderID]\r\n                \r\n    #----------------------------------------------------------------------\r\n    def crossStopOrder(self):\r\n        \"\"\"基于最新数据撮合停止单\"\"\"\r\n        # 先确定会撮合成交的价格，这里和限价单规则相反\r\n        if self.mode == self.BAR_MODE:\r\n            buyCrossPrice = self.bar.high    # 若买入方向停止单价格低于该价格，则会成交\r\n            sellCrossPrice = self.bar.low    # 若卖出方向限价单价格高于该价格，则会成交\r\n            bestCrossPrice = self.bar.open   # 最优成交价，买入停止单不能低于，卖出停止单不能高于\r\n        else:\r\n            buyCrossPrice = self.tick.lastPrice\r\n            sellCrossPrice = self.tick.lastPrice\r\n            bestCrossPrice = self.tick.lastPrice\r\n        \r\n        # 遍历停止单字典中的所有停止单\r\n        for stopOrderID, so in self.workingStopOrderDict.items():\r\n            # 判断是否会成交\r\n            buyCross = so.direction==DIRECTION_LONG and so.price<=buyCrossPrice\r\n            sellCross = so.direction==DIRECTION_SHORT and so.price>=sellCrossPrice\r\n            \r\n            # 如果发生了成交\r\n            if buyCross or sellCross:\r\n                # 推送成交数据\r\n                self.tradeCount += 1            # 成交编号自增1\r\n                tradeID = str(self.tradeCount)\r\n                trade = VtTradeData()\r\n                trade.vtSymbol = so.vtSymbol\r\n                trade.tradeID = tradeID\r\n                trade.vtTradeID = tradeID\r\n                \r\n                if buyCross:\r\n                    self.strategy.pos += so.volume\r\n                    trade.price = max(bestCrossPrice, so.price)\r\n                else:\r\n                    self.strategy.pos -= so.volume\r\n                    trade.price = min(bestCrossPrice, so.price)                \r\n                \r\n                self.limitOrderCount += 1\r\n                orderID = str(self.limitOrderCount)\r\n                trade.orderID = orderID\r\n                trade.vtOrderID = orderID\r\n                \r\n                trade.direction = so.direction\r\n                trade.offset = so.offset\r\n                trade.volume = so.volume\r\n                trade.tradeTime = str(self.dt)\r\n                trade.dt = self.dt\r\n                self.strategy.onTrade(trade)\r\n                \r\n                self.tradeDict[tradeID] = trade\r\n                \r\n                # 推送委托数据\r\n                so.status = STOPORDER_TRIGGERED\r\n                \r\n                order = VtOrderData()\r\n                order.vtSymbol = so.vtSymbol\r\n                order.symbol = so.vtSymbol\r\n                order.orderID = orderID\r\n                order.vtOrderID = orderID\r\n                order.direction = so.direction\r\n                order.offset = so.offset\r\n                order.price = so.price\r\n                order.totalVolume = so.volume\r\n                order.tradedVolume = so.volume\r\n                order.status = STATUS_ALLTRADED\r\n                order.orderTime = trade.tradeTime\r\n                self.strategy.onOrder(order)\r\n                \r\n                self.limitOrderDict[orderID] = order\r\n                \r\n                # 从字典中删除该限价单\r\n                del self.workingStopOrderDict[stopOrderID]    ",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/234/comments",
    "author": "zhangshuiyong",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-02-23T01:43:18Z",
        "body": "不好意思你的描述没能看懂，不过现在vn.py的K线回测模式的原理简单解释下：\r\n1. 每根K线走完后，会触发策略的onBar\r\n2. 策略发单时，是在上一根K线走完的时候发\r\n3. 这样发出的委托，最快只能在下一根K线运行的过程中成交\r\n4. 所以做模拟撮合的时候，必须用后续的K线来判断\r\n\r\n如果用当根K线来撮合，那么直接就是逻辑上的错误了。"
      },
      {
        "user": "zhangshuiyong",
        "created_at": "2017-02-23T01:52:40Z",
        "body": "就是说，现在的回测框架是用收盘价下单才是逻辑完善。如果我用当前的Bar的开盘价下单，回测框架是用下一个bar的价格去撮合。但是开盘价到下一个bar的价格可能撮合不了。下一个bar，存在高开低开等情况，就是说一直不会达成成交。但是实际的行情数据是，用当天的bar开盘价下单，当天bar的最高价最低价会满足撮合订单的条件，可以成交。"
      },
      {
        "user": "akeyong",
        "created_at": "2017-02-23T08:32:28Z",
        "body": "@vnpy， 针对发出的开多委托（委托价格为当根k线的收盘价），如果下一根k线的最低价都比这个委托价高度话（即出现一个向上缺口），这个委托单会最终被cancel掉无法成交，这样理解对吗？\r\n\r\n另外，在下面的策略程序文件里面，为了保证成交，选择超价5个整指数点下单，这在实盘中，当卖一价格低于委托价，会以当时的卖一价格来撮合成交的；但是在回测中，因为是用下一个K线的OHLC来撮合成交的，因此只要下一根k线的开盘价是高于这个委托价的话，并且最低价低于这个委托价的话，撮合价格就是超价5个整指数点来撮合成交的，因此可以把这个5个整指数点理解为回测滑点？\r\n\r\n# 当前无仓位\r\n        if self.pos == 0:\r\n            self.intraTradeHigh = bar.high\r\n            self.intraTradeLow = bar.low\r\n\r\n            # ATR数值上穿其移动平均线，说明行情短期内波动加大\r\n            # 即处于趋势的概率较大，适合CTA开仓\r\n            if self.atrValue > self.atrMa:\r\n                # 使用RSI指标的趋势行情时，会在超买超卖区钝化特征，作为开仓信号\r\n                if self.rsiValue > self.rsiBuy:\r\n                    # 这里为了保证成交，选择超价5个整指数点下单\r\n                    self.buy(bar.close+5, self.fixedSize)\r\n\r\n                elif self.rsiValue < self.rsiSell:\r\n                    self.short(bar.close-5, self.fixedSize)"
      },
      {
        "user": "vnpy",
        "created_at": "2017-02-24T01:12:10Z",
        "body": "@zhangshuiyong \r\n\r\n理解有点错误，回测中，当你收到某个bar的推送时，这个bar已经走完了，所以你永远不能在某个bar的开始时发单，只能在上一个bar走完时发单（尽管实盘时这两个时间点是重合的），回测中必须通过这种区分才能完全杜绝未来函数的存在（你永远看不到还没发生的数据）。\r\n\r\n另外ctaAlgo模块的回测功能，是用来验证你的策略代码的实盘运行效果和回测是否一致。如果需要做初期的策略雏形开发，建议自己写脚本去做，可以有最大的自由度。"
      },
      {
        "user": "vnpy",
        "created_at": "2017-02-24T01:19:38Z",
        "body": "@akeyong \r\n\r\n1. 针对发出的开多委托（委托价格为当根k线的收盘价），如果下一根k线的最低价都比这个委托价高度话（即出现一个向上缺口），这个委托单会最终被cancel掉无法成交，这样理解对吗？\r\n\r\n没错\r\n\r\n2. 另外，在下面的策略程序文件里面，为了保证成交，选择超价5个整指数点下单，这在实盘中，当卖一价格低于委托价，会以当时的卖一价格来撮合成交的；但是在回测中，因为是用下一个K线的OHLC来撮合成交的，因此只要下一根k线的开盘价是高于这个委托价的话，并且最低价低于这个委托价的话，撮合价格就是超价5个整指数点来撮合成交的，因此可以把这个5个整指数点理解为回测滑点？\r\n\r\n“下一根k线的开盘价是高于这个委托价的话，并且最低价低于这个委托价的话”，这个情况出现的概率非常非常低，所以造成的误差基本可以忽略。\r\n\r\n滑点有单独的setSlippage可以设置，这里如果真出现了你说的情况，会有5个整指数点的额外成本。\r\n\r\nstrategyAtrRsi更多也只是用来展示的一个策略，可以跑着试试，但其中的很多交易时状态管理还远没有达到实盘的安全性，需要用户自己去完善。我受限制于公司合规的关系，无法分享更详细的策略代码出来。"
      },
      {
        "user": "zhangshuiyong",
        "created_at": "2017-02-24T01:50:30Z",
        "body": "@vnpy 规避未来函数，可以用bar的开盘价和收盘价下单，如果用收盘价下单，是应该到下一个bar去成交。但是有些策略是要用开盘价下单的。如果用开盘价下单的时候，现在回测好像不准"
      },
      {
        "user": "akeyong",
        "created_at": "2017-02-24T06:25:27Z",
        "body": "@vnpy tnx!"
      },
      {
        "user": "vnpy",
        "created_at": "2017-02-27T01:49:42Z",
        "body": "@zhangshuiyong 能举个例子描述下是怎样的情况吗？"
      },
      {
        "user": "zhangshuiyong",
        "created_at": "2017-02-28T07:39:47Z",
        "body": "举个例子：一个策略需要开盘价open买入，用的是真实的通达信数据日线数据。现在回测框架是下一日才撮合成交。但是实际上当天就要成交。这就是现在CTA回测的问题，不能反映那些以开盘价下单的策略的真实交易情况"
      },
      {
        "user": "wzy2009520",
        "created_at": "2017-02-28T07:51:48Z",
        "body": "个人感觉vnpy的回测更偏向于交易向，更偏重于实际交易遇到的情况，日线级别的回测或许更改回测框架更合适一些？而不是将日线的数据导入数据库然后使用CTA的回测框架？"
      },
      {
        "user": "vnpy",
        "created_at": "2017-03-01T01:28:52Z",
        "body": "@zhangshuiyong ctaAlgo模块整体上还是为了比较中高频的策略设计的，日线级别策略的回测建议还是直接写脚本。如果你一定要用，可以基于分钟线级别的数据来做回测（指标等方面自己通过分钟线聚合为日线来算），这样开盘第一分钟获取到当日开盘价后，可以在第二分钟就买入。"
      },
      {
        "user": "vnpy",
        "created_at": "2017-03-01T01:30:27Z",
        "body": "@wzy2009520 没错，vn.trader整个设计都是为了交易，不是为了策略研究（模型开发、回测、优化）。ctaAlgo里的回测和优化功能是为了用来验证你的策略代码是否在事件驱动框架下能和之前用脚本回测做的结果一致。"
      },
      {
        "user": "zhangshuiyong",
        "created_at": "2017-03-01T02:43:12Z",
        "body": "@vnpy 好的，了解了。"
      }
    ]
  },
  {
    "number": 231,
    "title": "CTA实盘运行策略，如何进行不同分钟周期的交易？",
    "created_at": "2017-02-20T03:29:29Z",
    "closed_at": "2017-02-21T01:49:36Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/231",
    "body": "例如每个5分钟K线才验证一次交易信号。现在只能通过实现策略中的OnTick事件处理函数，集成多个tick为想要的分钟周期，然后再做分钟信号交易？",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/231/comments",
    "author": "zhangshuiyong",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-02-21T01:38:41Z",
        "body": "基于tick先聚合成分钟线，然后在onBar（分钟线回调）中再聚合成5分钟线"
      },
      {
        "user": "zhangshuiyong",
        "created_at": "2017-02-21T01:49:36Z",
        "body": "好的，thx"
      }
    ]
  },
  {
    "number": 228,
    "title": "关于策略的一些建议",
    "created_at": "2017-02-17T12:48:02Z",
    "closed_at": "2017-02-21T01:38:51Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/228",
    "body": "当前尽管一个策略能跑多个标的，但是参数都是一样的，这跟现实中有出入，因为不同的品种，即使选择相同算法，合适的参数往往也不尽相同。\r\n如果按照当前程序的做法，需要copy这个策略，并且重命名，然后调整参数，最后把策略添加到配置文件，我有10个交易品种，就得copy10份，这就带来一个问题，如果我对算法进行了升级，如何做到高效的同步？\r\n其实如果把策略抽象出来，把参数放到配置文件中，同一个策略，不同的参数，也可认为不同的策略，不知道这样理解可不可行，如果我对程序理解有误，还望见谅。",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/228/comments",
    "author": "sunnycomes",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-02-20T01:22:02Z",
        "body": "理解有点偏差，目前是通过CTA_setting.json来实现实盘策略的参数配置的。实盘中，不同交易标的可以使用同一个策略类，只需要给不同的策略名就行。\r\n\r\n至于CTA_setting.json，你可以写个.py的脚本来自动生成以及做参数安全性检测等等。"
      }
    ]
  },
  {
    "number": 215,
    "title": "风控模块的奇怪问题",
    "created_at": "2017-02-04T03:45:05Z",
    "closed_at": "2017-03-03T15:16:52Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/215",
    "body": "自动化交易，下单一手，风控上限是10手，却触发风控模块如下：\r\n“单笔委托数量1，超过限制10”",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/215/comments",
    "author": "slashqiang",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2017-02-06T01:38:12Z",
        "body": "能否描述下具体情况？\r\n\r\n比如你用的什么接口，交易的是什么合约，是手动交易还是程序化下单的？"
      }
    ]
  },
  {
    "number": 189,
    "title": "用ib接口订阅SMART里的GLD报错",
    "created_at": "2016-11-29T14:12:09Z",
    "closed_at": "2016-12-07T02:03:52Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/189",
    "body": "报错如下：The contract description specified for GLD is ambiguous.\r\n但是SMART里只有GLD一个代码，错误原因不明",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/189/comments",
    "author": "mousewu",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2016-11-29T14:52:44Z",
        "body": "我在IB网站的合约查询里找了下，没有这个SPDR GLD的合约信息，也是奇怪了，有一堆其他类似的黄金ETF（比如有个投资COMEX黄金期货的）。我估计主要问题出在可能GLD在IB上采用的是什么别的名字"
      },
      {
        "user": "vnpy",
        "created_at": "2016-12-07T02:03:52Z",
        "body": "IB的合约定义里有个PrimaryExch字段，用于解决潜在的不同交易所合约代码重复的情况。"
      }
    ]
  },
  {
    "number": 151,
    "title": "成交和委托排序的问题",
    "created_at": "2016-09-09T05:30:29Z",
    "closed_at": "2016-09-27T09:48:53Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/151",
    "body": "问题场景：\n无界面运行策略，每天盘前启动\n界面只用作成交监控，从不关闭\n\n问题现象：\n成交监控显示正常，按照成交顺序排序\n委托监控显示异常，会排到之前的委托前面去，准确的说是把之前的委托覆盖了\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/151/comments",
    "author": "crazykuma",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2016-09-27T09:46:47Z",
        "body": "界面上的委托监控的表格，是基于委托号的数据来实现的。如果你隔夜不关闭系统，那么第二天的委托号和前一天的发生重复时就会出现覆盖的情况。\n"
      }
    ]
  },
  {
    "number": 147,
    "title": "打算加入sptrader的支持吗？",
    "created_at": "2016-08-31T04:00:23Z",
    "closed_at": "2016-09-27T09:53:06Z",
    "labels": [
      "help wanted",
      "wontfix"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/147",
    "body": "sptrader在香港比较流行，能提高国际影响力哦\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/147/comments",
    "author": "sharefantasy",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2016-09-01T01:53:58Z",
        "body": "SPT的架构太老了，性能方面和国外一流的柜台没的比，甚至和IB都没得比，所以肯定是不会支持的。\n\n未来可能考虑接入TT、Stellar之类系统的FIX协议，但是前提是确实看到大家有需求。\n"
      }
    ]
  },
  {
    "number": 113,
    "title": "ibgateway 增加",
    "created_at": "2016-07-15T15:03:25Z",
    "closed_at": "2016-12-13T14:47:21Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/vnpy/vnpy/issues/113",
    "body": "似乎目前只适用于 tws，而不适合于 gateway\n\n1，增加一个accountName\ndef sendOrder(self, orderReq):\norder.m_account = self.accountName  # 加这个。使用 ibgateway经常发单时会提示，没有指定帐号\n这个 accountName我是在回调味函数时赋值的。\n    def updateAccountValue(self, key, value, currency, accountName):\n        \"\"\"更新账户数据\"\"\"\n        # 仅逐个字段更新数据，这里对于没有currency的推送忽略\n        if currency:\n            name = '.'.join([accountName, currency])\n            if not self.gateway.accountName:                        # 在这里赋值。\n                self.gateway.accountName = accountName\n\n2，主界面持仓，资金不显示。\n可能是帐号不同。我的不显示。要下面增加一个。\n    def managedAccounts(self, accountsList):\n        \"\"\" generated source for method managedAccounts \"\"\"\n        if accountsList:                  # 在这里增加，原来是空的。\n            name = accountsList\n            # 请求账户数据主推更新\n            self.gateway.connection.reqAccountUpdates(True, name)\n",
    "comments_url": "https://api.github.com/repos/vnpy/vnpy/issues/113/comments",
    "author": "viponedream",
    "comments": [
      {
        "user": "vnpy",
        "created_at": "2016-07-22T06:57:21Z",
        "body": "你是用的投资管理人账户吧？也就是一个母账户带多个子账户的？\n"
      },
      {
        "user": "viponedream",
        "created_at": "2016-07-22T16:09:44Z",
        "body": "也不是，普通的帐户。\n但是用 ibgateway就不能用。一定要带帐户名才行\n"
      },
      {
        "user": "vnpy",
        "created_at": "2016-12-13T14:47:21Z",
        "body": "问题1对应的情景猜测可能是涉及到CTA管理人分配持仓到各个子账户的情况，目前不在vn.trader的设计范围内（和其他接口兼容难度太大），所以有需求的请自己修改吧。\r\n\r\n问题2已经按照建议的方法做出了修改。\r\n\r\n不好意思拖了挺久。"
      }
    ]
  }
]