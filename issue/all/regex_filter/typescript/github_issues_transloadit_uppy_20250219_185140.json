[
  {
    "number": 3863,
    "title": "Uppy events fire multiple times [Solved]",
    "created_at": "2022-07-05T16:44:16Z",
    "closed_at": "2022-07-11T10:16:59Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/3863",
    "body": "I use uppy in a next js page, where the user gets two dashboards : \r\n- Documents Upload : uppy = new Uppy({ id: \"newListingDocuments\" ) \r\n- Images Upload with uppy = new Uppy({ id: \"newListingPhotos\" ) \r\n\r\nI used a complete event for every instance : \r\n```\r\nuppy.on(\"complete\", async (result) => { \r\n .......................\r\nuppy.off('complete', ()=>console.log(\"complete for instance 1 is done\"))\r\n}\r\n```\r\n```\r\nuppy.on(\"complete\", async (result) => { \r\n .......................\r\nuppy.off('complete', ()=>console.log(\"complete for instance 2 is done\"))\r\n}\r\n```\r\n\r\nWhen a user uploads a file. The uppy on complete is executed multiple times even with uppy.off('complete', ...) \r\n\r\nI don't have this problem when i use one instance. \r\n\r\nAny solutions ? \r\n\r\nContext : i use the dashboard inside a multi page form controlled by formik for every field, except for the dashboards where the state is controlled by uppy ! ",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/3863/comments",
    "author": "younes-alouani",
    "comments": [
      {
        "user": "younes-alouani",
        "created_at": "2022-07-05T17:33:45Z",
        "body": "Solved : \r\nYou need to call off() to remove previous handlers attached \r\n\r\n`uppy.off(\"complete\", null).on(\"complete\", anyFunctionHandler) `\r\n\r\nI suggest this get mentionned in the documentation in the events section  :) ! \r\n\r\n\r\n"
      },
      {
        "user": "Mosharush",
        "created_at": "2022-07-06T08:53:32Z",
        "body": "Hey @younes-alouani,\r\nI think you are looking for `uppy.once` method."
      },
      {
        "user": "arturi",
        "created_at": "2022-07-08T14:44:18Z",
        "body": "@younes-alouani, @Mosharush would you be so kind as to submit a doc fix PR, if you think it’s not clear regarding events, off and once?"
      },
      {
        "user": "Murderlon",
        "created_at": "2022-07-11T10:16:59Z",
        "body": "Closing this as it's basically a question that was answered. Can re-open if needed"
      }
    ]
  },
  {
    "number": 3843,
    "title": "\"Cannot find state in session\" when trying to use \"oauthDomain\" for multiple companion servers",
    "created_at": "2022-06-22T13:46:19Z",
    "closed_at": "2022-06-28T12:34:54Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/3843",
    "body": "Hi all,\r\n\r\nI have multiple companion servers, at different subdomains, for example:\r\n\r\n1. companion.a.company.com\r\n2. companion.b.company.com\r\n3. companion.c.company.com\r\n\r\nAnd this is a dynamic list of instances and URLs.\r\n\r\nTo support 3rd party provider authentication, I'd like to have a single fixed redirect_uri configured at the provider, say \"companion.a.company.com\".\r\nI've set this as the \"oauthDomain\" and also configured the allowed companion hosts.\r\nUnfortunately, when I'm trying to authenticate with any other companion instance, I'm getting the \"Cannot find state in session\" error.\r\nNote that if I'm trying to authenticate with the \"companion.a.company.com\" instance - it works.\r\n\r\nDid I miss anything?\r\nAny help is appreciated :)",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/3843/comments",
    "author": "gabiganam",
    "comments": [
      {
        "user": "Murderlon",
        "created_at": "2022-06-22T16:13:42Z",
        "body": "Note that Companion currently can't be horizontally scaled and requires sticky sessions (marrying the client to an instance). See the elaborate discussion here: #3538. Does that help?"
      },
      {
        "user": "Murderlon",
        "created_at": "2022-06-28T12:34:54Z",
        "body": "Closing this to keep the issue count maintainable. Feel free to continue the discussion here. "
      }
    ]
  },
  {
    "number": 3659,
    "title": "Add more files error",
    "created_at": "2022-04-22T20:15:37Z",
    "closed_at": "2022-06-28T13:08:49Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/3659",
    "body": "If I started downloading first file, and then I add the second one through the \"add more\" button, then in the end only the second file is downloaded, and the first one is lost, why is that?\r\n\r\nautoProceed: true,\r\nallowMultipleUploadBatches: true",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/3659/comments",
    "author": "dividerbeam",
    "comments": [
      {
        "user": "Murderlon",
        "created_at": "2022-04-25T11:01:49Z",
        "body": "What do you mean lost? Please create a reproducible example and explain in detail the expected behavior and the actual behavior. "
      },
      {
        "user": "Murderlon",
        "created_at": "2022-06-28T13:08:49Z",
        "body": "Closing this to keep the issue count maintainable. Feel free to continue the discussion here. "
      }
    ]
  },
  {
    "number": 3616,
    "title": "Havn't use_path_style_endpoint in Companion settings",
    "created_at": "2022-04-03T13:45:48Z",
    "closed_at": "2022-06-28T13:14:14Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/3616",
    "body": "Connection to Minio aws s3 need path_style_endpoint url for rigth working, how i can set this up?\r\n\r\ncompanion return that: \r\nInaccessible host: `uploads.mys3domain.ru' at port `undefined'. This service may not be available in the `us-east-1' region. \r\n\r\ni need host like mys3domain.ru/uploads\r\nand how i can turn off region?",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/3616/comments",
    "author": "dividerbeam",
    "comments": [
      {
        "user": "Murderlon",
        "created_at": "2022-04-04T04:29:56Z",
        "body": "There is a setting for it: \r\n\r\n```js\r\n    // ...\r\n    s3: {\r\n      // ...\r\n      region: 'us-east-1',\r\n    },\r\n```\r\n\r\nor when using standalone:\r\n\r\n```shell\r\nexport COMPANION_AWS_REGION=\"AWS REGION\"\r\n```"
      },
      {
        "user": "Murderlon",
        "created_at": "2022-06-28T13:14:14Z",
        "body": "Closing this to keep the issue count maintainable. Feel free to continue the discussion here. "
      }
    ]
  },
  {
    "number": 3613,
    "title": "metaFields jsx rendering",
    "created_at": "2022-04-01T10:09:25Z",
    "closed_at": "2022-06-28T13:14:50Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/3613",
    "body": "Hello,\r\n\r\ncan I add a component like react-select for example as a metafield item? it seems that is not working, but in the documentation it says its possible to render jsx, am I missing something? or am limited to only using the \"h\"? \r\n\r\nthanks in advance",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/3613/comments",
    "author": "imccrst",
    "comments": [
      {
        "user": "Murderlon",
        "created_at": "2022-04-01T10:49:41Z",
        "body": "Unfortunately not because we are using Preact without `preact/compat`, which means you can't just throw in React components and expect it to work. I agree that writing `h` is not the most ergonomic but that's what's supported currently. "
      },
      {
        "user": "imccrst",
        "created_at": "2022-04-01T11:08:32Z",
        "body": "in this case can the options for a select tag be added dynamically?"
      },
      {
        "user": "Murderlon",
        "created_at": "2022-04-01T11:17:30Z",
        "body": "I'm not sure if this works but you could try to add them dynamically like this:\r\n\r\n```js\r\nuppy.getPlugin('Dashboard').setPluginState({ metaFields: newMetaFields }) \r\n```"
      },
      {
        "user": "Murderlon",
        "created_at": "2022-06-28T13:14:50Z",
        "body": "Closing this to keep the issue count maintainable. Feel free to continue the discussion here. "
      },
      {
        "user": "nick-kang",
        "created_at": "2024-06-20T22:52:38Z",
        "body": "For reference, this is how I added a select component:\r\n\r\n```javascript\r\nrender: ({ value, onChange }, h) => \r\n    h('select', { onChange: (ev) => onChange(ev.target.value) }, [\r\n      h('option', { value: 'option1' }, 'Option 1'),\r\n      h('option', { value: 'option2' }, 'Option 2'),\r\n      // Add more options as needed\r\n    ])\r\n```"
      }
    ]
  },
  {
    "number": 3584,
    "title": "Docs note suggestion about Companion state",
    "created_at": "2022-03-19T10:16:36Z",
    "closed_at": "2022-03-21T04:25:33Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/3584",
    "body": "Hi,\r\nI just noticed an issue with my Companion server configuration, but did not go after in depth so I am not sure about the reasons. Anyways, I suggest at least updating the docs with the information below. I was running the server on Google Cloud Run, which automatically deploys multiple containers if the number of concurrent requests exceed the configured amount. It seems that Companion fails to make download requests if multiple containers are involved. There must be some kind of state which it expects to be available across all requests of a download batch (in this case, download batch means a group of images which are downloaded in the same queue). Download requests handled by the first container resolve correctly, for the rest, the WS connection is opened, but there are no messages at all.",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/3584/comments",
    "author": "netdown",
    "comments": [
      {
        "user": "Murderlon",
        "created_at": "2022-03-21T04:25:33Z",
        "body": "Thanks for the report but it is a duplicate of #3538 "
      },
      {
        "user": "Murderlon",
        "created_at": "2022-03-21T04:26:12Z",
        "body": "We are planning to completely overhaul the companion docs so this will be tackled. "
      }
    ]
  },
  {
    "number": 3568,
    "title": "AwsS3 server-side encryption support ",
    "created_at": "2022-03-14T16:06:18Z",
    "closed_at": "2022-06-28T13:16:32Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/3568",
    "body": "I am trying to upload file on S3 with server-side encryption using `AwsS3` but the `createPresignedRequest` is missing something from its header I think due to which Uppy is returning 403 Forbidden error when it needs to verify the file and send more data on S3.\r\n\r\nI have following sample code in place:\r\n\r\n```\r\nuse(AwsS3, {\r\n          getUploadParameters (file) {\r\n            const formData = new FormData();\r\n\r\n            formData.append( 'action', file_upload' );\r\n            formData.append( 'security', '$nonce' );\r\n            formData.append( 'filename', file.name );\r\n            formData.append( 'contentType', file.type );\r\n\r\n            // Send a request to our PHP signing endpoint.\r\n            return fetch( 's3-sign.php', {\r\n              method: 'post',\r\n              body: formData,\r\n            }).then((response) => {\r\n              // Parse the JSON response.\r\n              return response.json()\r\n            }).then((data) => {\r\n              // Return an object in the correct shape.\r\n              return {\r\n                method: data.method,\r\n                url: data.url,\r\n                fields: data.fields,\r\n                // Provide content type header required by S3\r\n                headers: data.headers,\r\n              }\r\n            })\r\n          },\r\n        });\r\n```\r\nHere is the sample PHP code I am using as a signing endpoing:\r\n\r\n```\r\n$command = $s3->getCommand('putObject', [\r\n          'Bucket' => $bucket,\r\n          'Key' => \"{$directory}/{$filename}\",\r\n          'ContentType' => $contentType,\r\n          'Body' => '',\r\n          'SSECustomerKey' => $datakey,\r\n          'SSECustomerAlgorithm' => 'AES256'\r\n        ]);\r\n\r\n        $request = $s3->createPresignedRequest($command, '+5 minutes');       \r\n       wp_send_json([\r\n          'method' => $request->getMethod(),\r\n          'url' => (string) $request->getUri(),\r\n          'fields' => [],\r\n          // Also set the content-type header on the request, to make sure that it is the same as the one we used to generate the signature.\r\n          // Else, the browser picks a content-type as it sees fit.\r\n          'headers' => [\r\n            'Content-Type' => $contentType\r\n         ]\r\n        ]);\r\n```\r\nI am using `SSECustomerKey` and `SSECustomerAlgorithm` for server-side encryption which is working well. But the issues lies inside `wp_send_json` when we have to return required json data back to Uppy to process `presignedRequest`.\r\n\r\nAny help will be appreciated.",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/3568/comments",
    "author": "zishanj",
    "comments": [
      {
        "user": "Murderlon",
        "created_at": "2022-03-15T04:59:34Z",
        "body": "Hi, I'm not sure what the Uppy/Companion issue is here, this seems mostly an issue with your specific setup and I don't know PHP. Please form a more specific question if possible. "
      },
      {
        "user": "Murderlon",
        "created_at": "2022-06-28T13:16:32Z",
        "body": "Closing this to keep the issue count maintainable. Feel free to continue the discussion here. "
      }
    ]
  },
  {
    "number": 3528,
    "title": "Use dropbox, googledrive etc. with own implementation of s3 multipart ",
    "created_at": "2022-03-03T05:53:44Z",
    "closed_at": "2022-06-28T13:17:30Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/3528",
    "body": "Hi,\r\n\r\nI have a custom implementation for AWS s3 multipart on my server-side and have been using it for Dashboard uploads. I want to integrate cloud storage providers like dropbox and have implemented an express server for companion. Now instead of using my custom implementation dropbox uploads is using the companion's implementation. Regular dashboard uploads are still using my custom implementation.",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/3528/comments",
    "author": "shawshank718",
    "comments": [
      {
        "user": "Murderlon",
        "created_at": "2022-03-03T06:50:36Z",
        "body": "Companion is only used for remote sources, such as Dropbox. Therefor, it will always use companion's implementation because that's the sole selling point of it. AFAIK you either use companion or build your own for remote sources. "
      },
      {
        "user": "Murderlon",
        "created_at": "2022-06-28T13:17:30Z",
        "body": "Closing this to keep the issue count maintainable. Feel free to continue the discussion here. "
      }
    ]
  },
  {
    "number": 3326,
    "title": "Server response of  XHRUpload, { endpoint}",
    "created_at": "2021-11-20T14:41:32Z",
    "closed_at": "2022-10-19T20:20:55Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/3326",
    "body": "I'm using uppy for my nextjs(react) app with followinfg code:\r\nuppy.use(XHRUpload, {\r\n  endpoint: '/api/img-upload',\r\n  fieldName: 'image',\r\n  formData: true,\r\n})\r\n\r\nuppy.on('complete', (result) => {\r\n  console.log('successful upload', result)\r\n})\r\n--------------------and--------------------------------------------- \r\nin backend(Nodejs), I am using multer:\r\n\r\nconst upload = multer({\r\n  storage,\r\n  fileFilter: function (req, file, cb) {\r\n    checkFileType(file, cb)\r\n  },\r\n})\r\n\r\nrouter.post('/img-upload', upload.single('image'), (req, res) => {\r\n  res.send(`uploads/${req.file.filename}`)\r\n})\r\n--------------------------------------------------------------------------\r\nBut I could not get the response (res.send(`uploads/${req.file.filename}`)) of server in client-side since I am using (XHRUpload-endpoint) instead of using axios. I don't know how I can get the name of images . I was wondering if you could help me how can I get the response( res.send(`uploads/${req.file.filename}`)) of server including the name and destination of images saved in local server. I need them in client side since I would like to send the properties of product such as name, price and image url(in local server) from react to server(MongoDB). In addition, I saw uppy.on('complete', (result) but I could not find them in result.\r\n\r\nIn other words, by following code and axios, I get the path of images saved in local server:\r\nconst { data } = await axios.post('/api/img-upload', formData, config)\r\nsetImage(data)\r\nbut I don't know how can I get this data via the response of  uppy.\r\nplease help me\r\nBest regards\r\n",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/3326/comments",
    "author": "siakar",
    "comments": [
      {
        "user": "siakar",
        "created_at": "2021-11-29T16:03:56Z",
        "body": "Hi, \r\nIs there solution for this problem?\r\nI was wondering if you could help me."
      },
      {
        "user": "Murderlon",
        "created_at": "2022-10-19T20:20:55Z",
        "body": "Closing this but we can continue the discussion if needed"
      }
    ]
  },
  {
    "number": 3264,
    "title": "Open file-editor ",
    "created_at": "2021-10-15T11:49:16Z",
    "closed_at": "2021-10-25T08:44:00Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/3264",
    "body": "Hi,\r\n\r\n   Is there a solution on how to open the file editor as you need to or the only solution from what I read in the docs is using - \r\n```autoOpenFileEditor={true}``` ?",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/3264/comments",
    "author": "Mihai-github",
    "comments": [
      {
        "user": "arturi",
        "created_at": "2021-10-15T18:01:45Z",
        "body": "Hi! The idea is that the user clicks on the `edit` button in the Dashboard UI top open image / file editor. If you need to open the editor programmatically, you can probably get away with `uppy.getPlugin('Dashboard').openFileEditor(file)` — but this is neither documented, nor supported."
      },
      {
        "user": "Mihai-github",
        "created_at": "2021-10-16T10:57:21Z",
        "body": "Thank you. I will try the above solution and let you know if it works. 👍 "
      },
      {
        "user": "Mihai-github",
        "created_at": "2021-10-22T07:11:46Z",
        "body": "Hi @arturi, \r\n   There is no openFileEditor(file) on the uppy ts types and also if I try to used it I get an error that says ```TypeError: uppy.openFileEditor is not a function```. Maybe you or someone else has other idea?"
      },
      {
        "user": "Murderlon",
        "created_at": "2021-10-25T08:39:12Z",
        "body": "There exist no types for it because it's not officially supported. You can probably do something like this:\r\n\r\n```ts\r\nimport type UppyDashboard from '@uppy/dashboard'\r\nimport type { UppyFile } from '@uppy/core'\r\n\r\ndeclare class Dashboard extends UppyDashboard {\r\n  openFileEditor (file: UppyFile): void\r\n}\r\n\r\n// use it like so\r\nuppy.getPlugin<Dashboard>('Dashboard').openFileEditor(file)\r\n```"
      },
      {
        "user": "Murderlon",
        "created_at": "2021-10-25T08:44:00Z",
        "body": "Closing this but feel free to continue asking questions here."
      },
      {
        "user": "ignasiesbr",
        "created_at": "2023-09-23T08:29:21Z",
        "body": "in case someone ends up here same as me trying to enforce an image ratio using file editor this is how I did it.\r\n\r\n```javascript\r\n// utility to calculate ar\r\nconst getImageAspectRatio = (blob: Blob): Promise<number> => {\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image();\r\n    const url = URL.createObjectURL(blob); // Create object URL\r\n\r\n    img.onload = () => {\r\n      const aspectRatio = img.width / img.height;\r\n      resolve(aspectRatio);\r\n      URL.revokeObjectURL(url); // Release the object URL\r\n    };\r\n\r\n    img.onerror = () => {\r\n      reject(new Error(\"Failed to load image\"));\r\n      URL.revokeObjectURL(url); // Release the object URL on error\r\n    };\r\n\r\n    img.src = url;\r\n  });\r\n};\r\n// extension of dashboard plugin to access the openFileEditor utility\r\ndeclare class ExtDashboard extends UppyDashboard {\r\n  openFileEditor(file: UppyFile): void;\r\n}\r\n\r\n// event handler to trigger opening file editor in case any image added does not fulfill requirements\r\n// aspectRatio inside map comes from props or wherever you see fit\r\n\r\n      .on(\"file-editor:complete\", async (_) => {\r\n        const files = uppyRef.current!.getFiles();\r\n        const res = await Promise.all(\r\n          files.map(async (f) => ({\r\n            file: f,\r\n            ar: await getImageAspectRatio(f.data),\r\n          }))\r\n        );\r\n        const notRatioed = res.find((f) => f.ar !== aspectRatio);\r\n        if (notRatioed) {\r\n          uppyRef\r\n            .current!.getPlugin<ExtDashboard>(\"Dashboard\")\r\n            ?.openFileEditor(notRatioed.file);\r\n        }\r\n      });\r\n```"
      },
      {
        "user": "arturi",
        "created_at": "2023-09-25T10:58:52Z",
        "body": "@lakesare perhaps the above will be useful to you at some point, when working on the Image Editor"
      }
    ]
  },
  {
    "number": 3254,
    "title": "Transloadit Integration: Transloadit store assembly steps not reporting results",
    "created_at": "2021-10-11T09:20:08Z",
    "closed_at": "2021-10-12T13:58:08Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/3254",
    "body": "We handle multiple file uploads with Uppy and process all with the Transloadit integration (file process + upload to S3). We are currently needing to get the results of the S3/store robot in order to give the users the URL of the uploaded file in S3. \r\n\r\nAccording to the Transloadit docs, store robots don't generate results, so there's no way to get the S3 url of the processed files?\r\n\r\nI could use the `transloadit:complete` event, but the store results are missing, and if we were to use the results of previous templates, we would be coupling the architecture even more that we want to. We have a template that has 3/4 branches for possible file processing (depending on the content of the uploaded file)",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/3254/comments",
    "author": "GonzaloHirschToptal",
    "comments": [
      {
        "user": "kvz",
        "created_at": "2021-10-11T12:49:25Z",
        "body": "Hi there, the temporary locations of the processing Step files should be replaced with the locations provided by the export Robot that saves them somewhere. Does that help?"
      },
      {
        "user": "GonzaloHirschToptal",
        "created_at": "2021-10-12T13:57:53Z",
        "body": "> Hi there, the temporary locations of the processing Step files should be replaced with the locations provided by the export Robot that saves them somewhere. Does that help?\r\n\r\n@kvz yes, that's very useful. It's not the solution we were hoping to have, but it proved useful for now. Thank you!"
      }
    ]
  },
  {
    "number": 3075,
    "title": "@uppy/companion TypeError window.opener is null when using facebook / instagram option from firefox.",
    "created_at": "2021-08-04T16:35:26Z",
    "closed_at": "2021-08-11T17:01:11Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/3075",
    "body": "Uppy companion opens empty page after login with facebook/instagram, although this works fine in chrome. The blank page shows  `Uncaught TypeError: window.opener is null`.\r\n\r\nFirefox Version: 90.0",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/3075/comments",
    "author": "breathingcyborg",
    "comments": [
      {
        "user": "Murderlon",
        "created_at": "2021-08-11T11:03:15Z",
        "body": "I can not reproduce this. It works in Firefox 90 with Instagram for me. This may be an issue on your side. Do you have more details about your setup?"
      },
      {
        "user": "breathingcyborg",
        "created_at": "2021-08-11T17:01:11Z",
        "body": "Thanks for help. You're right, I had \"facebook container\" extension enabled which was causing that issue.\r\n"
      }
    ]
  },
  {
    "number": 2988,
    "title": "Removing files with `removeFileFromUploadingCounterUI(file)` throws Uncaught ReferenceError",
    "created_at": "2021-07-06T00:11:25Z",
    "closed_at": "2021-07-06T08:51:23Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/2988",
    "body": "The docs say to remove a file through something like this:\r\n\r\n```\r\nuppy.on('file-removed', (file, reason) => {\r\n  removeFileFromUploadingCounterUI(file)\r\n\r\n  if (reason === 'removed-by-user') {\r\n    sendDeleteRequestForFile(file)\r\n  }\r\n})\r\n```\r\n\r\nHowever, this results in `Uncaught ReferenceError: removeFileFromUploadingCounterUI is not defined`. I am not able to find anything that shows what `removeFileFromUploadingCounterUI` is. Is it implied that I write this logic myself?",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/2988/comments",
    "author": "birthdaycorp",
    "comments": [
      {
        "user": "Murderlon",
        "created_at": "2021-07-06T08:51:23Z",
        "body": "Hi, the example is pseudo-code in which it shows what you could do within the `file-removed` event handler. For instance, if you do something extra outside of Uppy and you want to update that based on changes. \r\n\r\nUppy can remove files itself, you don't need to add custom logic for that to work, only if you want to do something custom yourself.\r\n\r\nI think this code snippet is redundant and could be removed from the docs."
      },
      {
        "user": "birthdaycorp",
        "created_at": "2021-08-24T02:12:11Z",
        "body": "> Hi, the example is pseudo-code in which it shows what you could do within the `file-removed` event handler. For instance, if you do something extra outside of Uppy and you want to update that based on changes.\r\n> \r\n> Uppy can remove files itself, you don't need to add custom logic for that to work, only if you want to do something custom yourself.\r\n> \r\n> I think this code snippet is redundant and could be removed from the docs.\r\n\r\nI made a new thread without realizing I had already made this one, so I've closed that and will ask the same question here.\r\n\r\nSo....I just want to remove a file, right? I want it to be removed from the `uppyResult` DOM element as well. The docs suggest that I set `showRemoveButtonAfterComplete: true` and then use `removeFile(file.id)` to remove the file. But the file only gets removed from the UI. I also need for it to be removed from the `uppyResult` DOM input.\r\n\r\n```\r\n.on('file-removed', (file, reason) => {\r\n if (reason === 'removed-by-user') {\r\n  uppy.removeFile(file.id)\r\n }\r\n})\r\n```\r\nWhy does that not work? Is that not the expected behavior?"
      }
    ]
  },
  {
    "number": 2692,
    "title": "On(\"upload-success\") executed multiple times when a file uplaoded",
    "created_at": "2020-12-14T13:27:46Z",
    "closed_at": "2020-12-18T12:55:19Z",
    "labels": [
      "Question",
      "React"
    ],
    "url": "https://github.com/transloadit/uppy/issues/2692",
    "body": "I have this code copied from the official documentation, but  i have an issue it uploads the same file multiple times.\r\n\r\n```\r\nconst UploadComponent = (props) => {\r\n  const uppy = useMemo(() => {\r\n    return Uppy({\r\n      autoProceed: true,\r\n      maxFileSize: 1000,\r\n      maxNumberOfFiles: 10,\r\n    }).use(XHRUpload, {\r\n      endpoint: process.env.NEXT_PUBLIC_API_URL + \"/file/uploadSingle\",\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    return () => uppy.close();\r\n  }, []);\r\n\r\n  uppy.on(\"upload-success\", (status, event) => {\r\n    props.handleFileUploaded(event.body);\r\n  });\r\n\r\n  if (props.cancel) uppy.cancelAll();\r\n\r\n  return (\r\n    <div>\r\n      <Dashboard uppy={uppy} height={300} {...props} />\r\n    </div>\r\n  );\r\n};\r\n```",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/2692/comments",
    "author": "TarekArar",
    "comments": [
      {
        "user": "goto-bus-stop",
        "created_at": "2020-12-18T12:55:19Z",
        "body": "Hi, the problem is that you're calling `uppy.on()` at the top level of your component. This means that it is run every time your component rerenders, adding an additional listener each time.\r\n\r\nInstead, you can use React's builtin `useEffect()` hook to replace the event listener whenever you receive a different `handleFileUploaded` function—this way you will only have one at a time.\r\n\r\n```js\r\nuseEffect(() => {\r\n  const handler = (status, event) => {\r\n    props.handleFileUploaded(event.body);\r\n  };\r\n  uppy.on('upload-success', handler);\r\n  // Tell React to remove the old listener if a different function is passed to the `handleFileUploaded` prop:\r\n  return () => {\r\n    uppy.off('upload-success', handler);\r\n  };\r\n}, [props.handleFileUploaded]);\r\n```"
      },
      {
        "user": "arturi",
        "created_at": "2020-12-18T14:18:13Z",
        "body": "@goto-bus-stop we probably need to double document this, it’s the easiest way to shoot yourself in the foot in React 🤔 "
      },
      {
        "user": "PhongVu07",
        "created_at": "2021-06-30T15:39:07Z",
        "body": "@goto-bus-stop we have useUppy to solve this problem but seems like it doesn't work?"
      },
      {
        "user": "paulm17",
        "created_at": "2021-08-12T11:31:54Z",
        "body": "I just slammed into this issue myself.  \r\n\r\n@arturi definitely need to document this.  \r\n@goto-bus-stop I'm using useUppy and it's not solving this problem.\r\n\r\n@goto-bus-stop thanks for proving a resolution.  👍 "
      }
    ]
  },
  {
    "number": 2642,
    "title": "Error: Your plugin must have an id",
    "created_at": "2020-11-20T08:00:21Z",
    "closed_at": "2020-11-21T00:04:14Z",
    "labels": [
      "Question",
      "React"
    ],
    "url": "https://github.com/transloadit/uppy/issues/2642",
    "body": "I'm using uppy for my react app but whenever i do `uppy.use(Dashboard)`, it gives me this error.\r\n\r\n```\r\nimport React from 'react';\r\nimport Uppy from '@uppy/core';\r\nimport Tus from '@uppy/tus';\r\nimport { DragDrop, Dashboard } from '@uppy/react';\r\nimport '@uppy/core/dist/style.css';\r\nimport '@uppy/drag-drop/dist/style.css';\r\nimport '@uppy/dashboard/dist/style.css';\r\n\r\nconst uppy = new Uppy({\r\n\tmeta: { type: 'avatar' },\r\n\trestrictions: { maxNumberOfFiles: 1,  allowedFileTypes: ['image/*'] },\r\n\tautoProceed: true,\r\n});\r\n\r\nuppy.use(Dashboard, {\r\n\tid: 'Dashboard',\r\n\ttrigger: '.UppyModalOpenerBtn',\r\n\tinline: true,\r\n\ttarget: '.DashboardContainer',\r\n\treplaceTargetContent: true,\r\n\tshowProgressDetails: true,\r\n\tnote: 'Images and video only, 2–3 files, up to 1 MB',\r\n\twidth: 200,\r\n\theight: 200,\r\n\tmaxHeight: 200,\r\n\tmetaFields: [\r\n\t  { id: 'name', name: 'Name', placeholder: 'file name' },\r\n\t  { id: 'caption', name: 'Caption', placeholder: 'describe what the image is about' }\r\n\t],\r\n\tbrowserBackButtonClose: true\r\n})\r\n\r\nuppy.use(Tus, { endpoint: '/upload' });\r\n\r\nuppy.on('complete', (result) => {\r\n\tconst url = result.successful[0].uploadURL;\r\n\tconsole.log(url)\r\n});\r\n\r\nclass FileUploader extends React.Component {\r\n\tconstructor (props) {\r\n\t  super(props)\r\n\t  this.uppy = uppy;\r\n\t}\r\n  \r\n\tcomponentWillUnmount () {\r\n\t  this.uppy.close()\r\n\t}\r\n  \r\n\trender () {\r\n\t  return <Dashboard uppy={this.uppy} />\r\n\t}\r\n  }\r\n\r\nexport default FileUploader;\r\n```",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/2642/comments",
    "author": "zayn-m",
    "comments": [
      {
        "user": "goto-bus-stop",
        "created_at": "2020-11-20T08:55:47Z",
        "body": "When using the React components, you should _not_ also do `uppy.use(Dashboard)`. The `<Dashboard />` component does that for you. Instead, pass your Dashboard plugin options as props in the `<Dashboard />` component."
      },
      {
        "user": "zayn-m",
        "created_at": "2020-11-20T09:55:55Z",
        "body": "@goto-bus-stop Thanks"
      },
      {
        "user": "GuysmoB",
        "created_at": "2023-09-14T14:12:40Z",
        "body": "> @goto-bus-stop Thanks\r\n\r\nHey,\r\nCould you share your code please ?"
      }
    ]
  },
  {
    "number": 2596,
    "title": "mkv file type not supported",
    "created_at": "2020-10-23T03:32:25Z",
    "closed_at": "2020-11-03T10:23:10Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/2596",
    "body": "Noticed that doing `allowedFileTypes: ['image/*', 'video/*']` does not allow mkv files to be uploaded. Even doing `allowedFileTypes: ['image/*', 'video/*', 'mkv']` does not work. ",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/2596/comments",
    "author": "masudhossain",
    "comments": [
      {
        "user": "goto-bus-stop",
        "created_at": "2020-11-03T10:23:10Z",
        "body": "The dot must be included in `.mkv`, else Uppy does not recognise the string as a file extension: `allowedFileTypes: ['.mkv']`\r\n\r\nHopefully that does the trick 🙏 "
      },
      {
        "user": "yafkari",
        "created_at": "2023-10-26T23:00:56Z",
        "body": "But why does .mkv is not included in \"video/*\"? \r\n\r\nIt corresponds to \"video/x-matroska\" if I am not wrong? No?"
      }
    ]
  },
  {
    "number": 2573,
    "title": "onBeforeUpload function behaving unexpectedly",
    "created_at": "2020-10-07T11:51:59Z",
    "closed_at": "2020-11-16T10:20:01Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/2573",
    "body": "Hey there, I was trying to dynamically validate file size based on type of file(video/image) using onBeforeUpload function. After I add a file to the uploader and click on upload button it removes all the added photos and shows the message \"You have to select atleast 1 file.\" \r\n\r\nHere's the code : If you know a way to validate file size for each file separately, do let me know.\r\n\r\n```js\r\n/* eslint-disable */\r\nimport React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Uppy from '@uppy/core';\r\nimport Compressor from 'compressorjs';\r\nimport AwsS3 from '@uppy/aws-s3';\r\nimport getConfig from 'next/config';\r\nimport { get } from 'lodash';\r\nimport { Dashboard } from '@uppy/react';\r\nimport style from './uppy.module.scss';\r\n\r\n/* Only holds serverRuntimeConfig and publicRuntimeConfig */\r\nconst { publicRuntimeConfig } = getConfig();\r\n\r\nclass UppyUploader extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showInlineDashboard: false,\r\n    };\r\n\r\n    this.uppy = new Uppy({\r\n      id: 'uppy1',\r\n      autoProceed: false,\r\n      debug: true,\r\n      restrictions: {\r\n        maxFileSize: null,\r\n        maxNumberOfFiles: this.props.isMulti ? 15 : 1,\r\n        minNumberOfFiles: 1,\r\n        allowedFileTypes: this.props.acceptedMimes,\r\n      },\r\n      allowMultipleUploads: true,\r\n      onBeforeUpload: files => {\r\n        let videoCounter = 0;\r\n        Object.keys(files).forEach(item => {\r\n          if (files[item].type.includes('image')) {\r\n            if (files[item].size > 10485760) {\r\n              return Promise.reject(`file is too big`);\r\n            }\r\n          }\r\n          if (files[item].type.includes('video')) {\r\n            videoCounter++;\r\n            if (files[item].size > 209715200) {\r\n              return Promise.reject(`file is too big`);\r\n            }\r\n            if (videoCounter > 4) {\r\n              return Promise.reject(`Maximum 4 videos are allowed`);\r\n            }\r\n          }\r\n        });\r\n        return Promise.resolve();\r\n      },\r\n    });\r\n\r\n    const {\r\n      uploadedFiles,\r\n      handleOnDrop,\r\n      handleDeleteImage,\r\n      fileSlugName,\r\n      input,\r\n    } = props;\r\n\r\n    uploadedFiles &&\r\n      uploadedFiles.forEach(async file => {\r\n        await fetch(`${file.uploadURL}`)\r\n          .then(response => response.blob()) // returns a Blob\r\n          .then(async blob => {\r\n            const addedFile = await this.uppy.addFile({\r\n              name: file.uploadURL,\r\n              type: blob.type,\r\n              data: blob, // changed blob -> data\r\n              remote: true,\r\n            });\r\n            this.uppy.setFileState(addedFile, {\r\n              progress: {\r\n                ...file.progress,\r\n                uploadComplete: true,\r\n                uploadStarted: true,\r\n              },\r\n            });\r\n          });\r\n      });\r\n\r\n    this.uppy\r\n      .use(AwsS3, {\r\n        getUploadParameters(file) {\r\n          // Send a request to our PHP signing endpoint.\r\n\r\n          new Compressor(file.data, {\r\n            quality: 0.6,\r\n            success(result) {\r\n              file.data = result;\r\n            },\r\n            error(err) {\r\n              console.log(err.message);\r\n            },\r\n          });\r\n\r\n          const auth = JSON.parse(localStorage.getItem('persist:auth'));\r\n          const token = JSON.parse(get(auth, 'authToken', false));\r\n          return fetch(\r\n            `${publicRuntimeConfig.ApiBaseUrl}/files/uploadOneByOne`,\r\n            {\r\n              method: 'post',\r\n              // Send and receive JSON.\r\n              headers: {\r\n                accept: 'application/json',\r\n                'content-type': 'application/json',\r\n                Authorization: `Bearer ${token}`,\r\n              },\r\n              body: JSON.stringify({\r\n                name: file.data.name,\r\n                fileSlugName,\r\n              }),\r\n            },\r\n          )\r\n            .then(response => {\r\n              // Parse the JSON response.\r\n              return response.json();\r\n            })\r\n            .then(data => {\r\n              // Return an object in the correct shape.\r\n\r\n              return {\r\n                method: 'PUT',\r\n                url: `${data.data.signedUrl}`,\r\n                fields: [],\r\n                headers: {\r\n                  'Content-Type': file.type,\r\n                },\r\n              };\r\n            });\r\n        },\r\n      })\r\n      .on('complete', result => {\r\n        // console.log('complete', result);\r\n        handleOnDrop(result.successful);\r\n        input.onChange(result.successful);\r\n      })\r\n      .on('file-removed', (file, reason) => {\r\n        if (reason === 'removed-by-user') {\r\n          // console.log(file);\r\n          handleDeleteImage(file);\r\n        }\r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.uppy.close();\r\n  }\r\n\r\n  render() {\r\n    const { height, meta } = this.props;\r\n    return (\r\n      <div className={style.dashboardContainer}>\r\n        <Dashboard\r\n          id=\"Dashboard\"\r\n          target=\"body\"\r\n          trigger=\"#uppy-select-files\"\r\n          inline={true}\r\n          uppy={this.uppy}\r\n          width={'100%'}\r\n          height={height}\r\n          replaceTargetContent={true}\r\n          showProgressDetails={true}\r\n          browserBackButtonClose={true}\r\n          proudlyDisplayPoweredByUppy={false}\r\n          metaFields={[{ id: 'name', name: 'Name', placeholder: 'File name' }]}\r\n          showRemoveButtonAfterComplete={true}\r\n          hideCancelButton={true}\r\n        />\r\n        {meta.touched && (\r\n          <p className=\"text-center text-danger\">{meta.error}</p>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUppyUploader.defaultProps = {\r\n  name: 'file',\r\n};\r\n\r\nUppyUploader.propTypes = {\r\n  name: PropTypes.string,\r\n  open: PropTypes.bool.isRequired,\r\n  getUploadedUrl: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default UppyUploader;\r\n```",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/2573/comments",
    "author": "aquibjaved28",
    "comments": [
      {
        "user": "goto-bus-stop",
        "created_at": "2020-11-03T10:10:16Z",
        "body": "`onBeforeUpload` can not return a Promise anymore since 1.0. Uppy expects you to return a boolean `false` if the upload should be aborted (because of some error condition), or a modified `files` object, or nothing if the upload can continue unchanged.\r\n\r\nA Promise is an object, so fun times with JavaScript types mean that Uppy will treat it as a modified `files` object; a Promise does not have any keys, so it results in all the files being effectively removed.\r\n\r\nSomething like this should work better:\r\n\r\n```js\r\n      onBeforeUpload: files => {\r\n        let videoCounter = 0;\r\n        Object.keys(files).forEach(item => {\r\n          if (files[item].type.includes('image')) {\r\n            if (files[item].size > 10485760) {\r\n              uppy.info(`File is too big`, 'error', 2000);\r\n              return false;\r\n            }\r\n          }\r\n          if (files[item].type.includes('video')) {\r\n            videoCounter++;\r\n            if (files[item].size > 209715200) {\r\n              uppy.info(`File is too big`, 'error', 2000);\r\n              return false;\r\n            }\r\n            if (videoCounter > 4) {\r\n              uppy.info(`Maximum 4 videos are allowed`, 'error', 2000);\r\n              return false;\r\n            }\r\n          }\r\n        });\r\n        return files;\r\n      },\r\n```\r\n\r\nI would also recommend using `onBeforeFileAdded` for the size checks for individual files, so users get that feedback earlier!"
      }
    ]
  },
  {
    "number": 2516,
    "title": "Could not install from \"uppy/core@1.13.2\" as it does not contain a package.json file.",
    "created_at": "2020-09-08T06:17:43Z",
    "closed_at": "2020-09-21T10:03:05Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/2516",
    "body": "",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/2516/comments",
    "author": "kode-ninja",
    "comments": [
      {
        "user": "goto-bus-stop",
        "created_at": "2020-09-08T06:21:22Z",
        "body": "`uppy/core` is a file path, not a package name :)\r\n\r\nmake sure to use `@uppy/{name}` to get the scoped package."
      },
      {
        "user": "goto-bus-stop",
        "created_at": "2020-09-21T10:03:05Z",
        "body": "I think the above is the answer ☝️ but let me know if that's not it."
      }
    ]
  },
  {
    "number": 2390,
    "title": "when using the dashboard and OnbeforeUpload, I click on send, it sends, but the behavior is not as expected. Length undefined error",
    "created_at": "2020-07-23T13:33:02Z",
    "closed_at": "2020-07-24T11:58:56Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/2390",
    "body": "I am using a dashBoard in my project with the OnbeforeUpload option, but when I click on send, it brings me a length error and does not bring me the statusBar\r\n\r\nMy code is like this\r\n\r\n```js\r\nconst beforeUpload = (files: any) => {\r\n      const updatedFiles = {};\r\n      Object.keys(files).forEach(fileID => {\r\n        this.anexoMetadata.idTipo = this.tipoDocumento.value.id;\r\n        this.anexoMetadata.sigiloso = this.sigiloso.value;\r\n\r\n        updatedFiles[fileID] = {\r\n          ...files[fileID],\r\n\r\n          meta: files[fileID] = this.anexoMetadata,\r\n        };\r\n      });\r\n\r\n      return updatedFiles;\r\n    };\r\n```\r\n\r\nmy dash \r\n\r\n```js\r\nuppy.use(Dashboard, {\r\n      inline: true,\r\n      replaceTargetContent: true,\r\n      height: 200,\r\n      width: 413,\r\n      note: 'Somente imagens e arquivos (PDF) de até 2 MB',\r\n      target: '#dash-drag-drop',\r\n      showProgressDetails: true,\r\n      browserBackButtonClose: true,\r\n      disablePageScrollWhenModalOpen: false,\r\n      showLinkToFileUploadResult: false,\r\n    });\r\n```\r\n\r\nWhen I use it without onBeforeUpload, it works but can't find my files.\r\n",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/2390/comments",
    "author": "guimaraesSalgado",
    "comments": [
      {
        "user": "goto-bus-stop",
        "created_at": "2020-07-24T11:28:05Z",
        "body": "The Dashboard uses a file's `meta.name` for rendering. This line is probably overwriting `meta` so that the file name is not there anymore:\r\n```js\r\n          meta: files[fileID] = this.anexoMetadata,\r\n```\r\n(Also, that `files[fileID]` assignment seems wrong 😄 )\r\n\r\nThis should work instead:\r\n```js\r\nmeta: {\r\n  ...files[fileID],\r\n  ...this.anexoMetadata\r\n}\r\n```"
      },
      {
        "user": "guimaraesSalgado",
        "created_at": "2020-07-24T11:38:21Z",
        "body": "damn, thank you very much!"
      }
    ]
  },
  {
    "number": 2247,
    "title": "Using uppy companion to replace tus-node-server",
    "created_at": "2020-05-04T19:52:17Z",
    "closed_at": "2020-05-05T10:13:30Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/2247",
    "body": "I am using tus-node-server but since it has not been maintained in a long time, I am thinking to move on for an alternative approach preferably using nodejs.\r\n\r\nCan I use uppy companion as a replacement of tus-node-server on server side? \r\n\r\nI am already using uppy client on my frontend (reactjs) project.",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/2247/comments",
    "author": "the-dev1",
    "comments": [
      {
        "user": "goto-bus-stop",
        "created_at": "2020-05-05T08:43:29Z",
        "body": "Unfortunately not. Companion is a server that imports and uploads things from third party services to an endpoint you specify, not a server that can receive uploads."
      },
      {
        "user": "kvz",
        "created_at": "2020-05-05T09:05:02Z",
        "body": "If you need a tus-node-server replacement I can recommend tusd by the way."
      }
    ]
  },
  {
    "number": 2235,
    "title": "Getting console warning/error",
    "created_at": "2020-05-01T10:46:07Z",
    "closed_at": "2020-05-04T12:34:47Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/2235",
    "body": "Uppy is working fine but when uppy component load on screen I got below an error message in the console.\r\n\r\n```\r\n[Uppy] [16:10:05] Dashboard: Modal can only be used by plugins of types: acquirer, progressindicator, presenter \r\n    in Dashboard (at Dashboard.js:119)\r\n    in UppyComp (at ImageTab.tsx:76)\r\n    in ImageTab (at ImageModal.tsx:102)\r\n    in ImageModal (at ProductCreate.tsx:99)\r\n    in FormDataConsumerView (created by FormDataConsumer)\r\n    in FormDataConsumer (at ProductCreate.tsx:97)\r\n    in ProductCreate (created by WithPermissions)\r\n    in WithPermissions (created by Router.Consumer)\r\n    in Router.Consumer (created by Route)\r\n    in Route (created by ResourceRoutes)\r\n    in ResourceRoutes (created by Resource)\r\n    in Resource (at App.tsx:239)\r\n    in App (at src/​index.tsx:7)\r\n```\r\n\r\nI'm not using Dashboard modal. I'm using Dashboard component.\r\n\r\n```\r\n<Dashboard\r\n      uppy={uppy.current}\r\n      plugins={[\"AwsS3\"]}\r\n      proudlyDisplayPoweredByUppy={false}\r\n      note={props.note || \"Photos\"}\r\n    />\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/2235/comments",
    "author": "dhavalk-simform",
    "comments": [
      {
        "user": "goto-bus-stop",
        "created_at": "2020-05-04T12:34:47Z",
        "body": "Yeah—the `plugins` prop should only list plugins that will be mounted \"into\" the Dashboard. In practice, that means plugins that add a provider icon. But the AwsS3 plugin doesn't have any UI so it can't be mounted into the Dashboard. If you remove it it should be good!"
      }
    ]
  },
  {
    "number": 2179,
    "title": "file.size is incorrect if file is changed on disk after 'file-added' and before 'upload'",
    "created_at": "2020-04-07T16:53:54Z",
    "closed_at": "2020-04-07T18:22:41Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/2179",
    "body": "file.size is incorrect if file is changed on disk after 'file-added' and before 'upload'\r\n\r\nThis seems like a bug to me.\r\n\r\ncode to reproduce:\r\n```\r\n\r\nimport { DragDrop } from '@uppy/react'\r\nimport React from 'react'\r\nimport Uppy from '@uppy/core'\r\nimport Tus from '@uppy/tus'\r\n\r\n\r\n\r\nexport function UppyTest() {\r\n  const uppy = Uppy({\r\n    meta: { type: 'avatar' },\r\n    restrictions: { maxNumberOfFiles: 1 },\r\n    autoProceed: false\r\n  })\r\n\r\n  uppy.use(Tus, { endpoint: '/upload' })\r\n\r\n  uppy.on('upload', (file) => {\r\n    console.log('file before get file', file)\r\n    const filesss = uppy.getFile(file.fileIDs[0])\r\n    console.log('file size', filesss.size)\r\n  })\r\n\r\n  uppy.on('file-added', (file) => {\r\n    console.log('file-added', file)\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <DragDrop\r\n        locale={{\r\n          strings: {\r\n            // Text to show on the droppable area.\r\n            // `%{browse}` is replaced with a link that opens the system file selection dialog.\r\n            dropHereOr: 'Drop here or %{browse}',\r\n            // Used as the label for the link that opens the system file selection dialog.\r\n            browse: 'browse'\r\n          }\r\n        }}\r\n        uppy={uppy}\r\n      />\r\n      <button onClick={() => {\r\n        uppy.upload()\r\n      }}>click it</button>\r\n    </div>\r\n  )\r\n}\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/2179/comments",
    "author": "dkramerWiden",
    "comments": [
      {
        "user": "goto-bus-stop",
        "created_at": "2020-04-07T18:22:40Z",
        "body": "That's right. The browser reads the file when you select it, not when it is uploaded. As far as I know, there is no way to do this differently. Reading a file from disk is impossible in the browser except through drag/drop and `<input type=file>`, which do not allow any control over timing. Browsers likely avoid re-reading files for privacy/security reasons."
      }
    ]
  },
  {
    "number": 2050,
    "title": "Can I use uppy bundle with the form?",
    "created_at": "2020-02-01T04:33:56Z",
    "closed_at": "2020-05-06T10:41:04Z",
    "labels": [
      "Question",
      "Form"
    ],
    "url": "https://github.com/transloadit/uppy/issues/2050",
    "body": "I want to integrate **Uppy** inside my PHP project. What I want to do is to have a form with image uploader. The image uploader needs to send all file requests at once (so I can store it in implode array and later in DB), so I need to set bundle to true. But can I use Uppy Form so that I can catch form errors before the image upload started with the bundle set to true? I know that if the bundle is set to true we cant add metafields but I don't know if its the same case with the Uppy Form. I will appriciate any help/answer or opinion what is the best way to do this! Thanks",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/2050/comments",
    "author": "AleksaButterfly",
    "comments": [
      {
        "user": "goto-bus-stop",
        "created_at": "2020-02-03T13:28:04Z",
        "body": "The Form plugin only adds global metadata, so uploads that use the Form plugin together with the XHRUpload plugin with `bundle: true` should work as expected."
      }
    ]
  },
  {
    "number": 2036,
    "title": "open modal Dashboard on dropped files",
    "created_at": "2020-01-22T11:39:50Z",
    "closed_at": "2020-02-03T12:51:35Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/2036",
    "body": "Maybe I did not see the point in the docs, but how can open a modal (not inline) dashboard if files are dropped onto the drop area?\r\nI can see the added files if I open the modal manually.\r\n\r\nIs there an event when adding files or something?\r\n\r\nThanks for you help.",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/2036/comments",
    "author": "ulfw",
    "comments": [
      {
        "user": "goto-bus-stop",
        "created_at": "2020-01-22T11:45:53Z",
        "body": "You can manually open the modal using `uppy.getPlugin('Dashboard').openModal()`. You can do it in response to adding a file like:\r\n\r\n```js\r\nuppy.on('file-added', () => {\r\n  const dashboard = uppy.getPlugin('Dashboard')\r\n  dashboard.openModal()\r\n})\r\n```\r\n\r\nOr if you're already adding the files manually using `addFile()`, I would probably call `openModal()` at that point instead of using the event."
      },
      {
        "user": "ulfw",
        "created_at": "2020-01-22T12:29:41Z",
        "body": "Damn, I did not looked at uppy.core events. Thanks"
      }
    ]
  },
  {
    "number": 1997,
    "title": "Progress bar percentage and text update manually",
    "created_at": "2019-12-20T02:50:48Z",
    "closed_at": "2020-05-07T14:42:32Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/1997",
    "body": "Hi,\r\n\r\nBecause I'm using Uppy for upload file to CloudFlare stream, after upload success CloudFlare will return encoding progress. So I need to change the text `Uploading...` to `Encoding...` and set progress bar percentage manually, but my code is not updated percentage, progress bar always show 100%.\r\n\r\n    uppy.on('upload-success', (file, response) => {\r\n        if(typeof response.uploadURL !== \"undefined\")\r\n        {\r\n          uppy.setFileState(file.id, {\r\n              progress: {\r\n                  uploadComplete: false,\r\n                  uploadStarted: true,\r\n                  percentage: response.result.status.pctComplete\r\n              }\r\n          });\r\n        }\r\n    });\r\n\r\nCan anyone help?",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/1997/comments",
    "author": "vietnguyen09",
    "comments": [
      {
        "user": "arturi",
        "created_at": "2020-01-15T13:58:46Z",
        "body": "Hi! Sorry for the delay. Could you try emitting an `upload-progress` event instead of setting file progress manually?\r\n\r\n```js\r\nuppy.emit('upload-progress', file, {\r\n  uploader: 'CloudFlare',\r\n  bytesUploaded: bytesUploaded,\r\n  bytesTotal: bytesTotal\r\n})\r\n```"
      }
    ]
  },
  {
    "number": 1976,
    "title": "Determine whether two files were added simultaneously or separately",
    "created_at": "2019-12-07T09:41:48Z",
    "closed_at": "2020-01-16T19:06:34Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/1976",
    "body": "I need to upload two files. How can uppy judge that two files were added at the same time, instead of adding them twice",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/1976/comments",
    "author": "yanwanlun",
    "comments": [
      {
        "user": "arturi",
        "created_at": "2019-12-17T16:04:35Z",
        "body": "Hi! Could you describe the your use case in more detail? What are you trying to achieve, why is it useful to determine if two files are added in one select/drop or one by one?"
      }
    ]
  },
  {
    "number": 1541,
    "title": "Preact resolution error with Parcel [solution: clear parcel cache]",
    "created_at": "2019-05-10T09:46:31Z",
    "closed_at": "2019-05-10T12:03:14Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/1541",
    "body": "Parcel since upgrading to 1.0.1 from 1.0.0 causes the following issue when compiling:\r\n\r\n```\r\n/node_modules/preact/dist/preact.mjs: ENOENT: no such file or directory, open /node_modules/preact/dist/preact.mjs'\r\n```\r\n\r\nSo it appears a fix to help webpack has broken another bundler",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/1541/comments",
    "author": "wroughtec",
    "comments": [
      {
        "user": "goto-bus-stop",
        "created_at": "2019-05-10T10:12:03Z",
        "body": "oh my! I think this might be a cache issue, can you try removing the `.cache` directory in your project folder and restarting parcel?"
      },
      {
        "user": "wroughtec",
        "created_at": "2019-05-10T12:03:14Z",
        "body": "Yep my bad thought I had removed the cache lol (darn cache).\r\n\r\nWill be nice when Preact is not needed in 1.1..."
      },
      {
        "user": "goto-bus-stop",
        "created_at": "2019-05-10T12:05:41Z",
        "body": "no worries, I'll keep this issue pinned for a few days so others who run into the same problem can find it easily"
      }
    ]
  },
  {
    "number": 1519,
    "title": "Camera options in @uppy/react Dashboard",
    "created_at": "2019-05-03T03:43:19Z",
    "closed_at": "2019-05-08T09:59:58Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/1519",
    "body": "Hi there, I can't seem to be able to set camera options.\r\n\r\nI'm trying to enable only photos and no video or audio. And I can't seem to be able to pass this props.\r\n\r\nHere is my code\r\n ```javascript\r\nimport React, { Component, Fragment } from \"react\";\r\nimport Uppy from \"@uppy/core\";\r\nimport Webcam from \"@uppy/webcam\";\r\nimport { Dashboard } from \"@uppy/react\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nclass AvatarPicker extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.uppy = Uppy({\r\n      id: \"uploader\",\r\n      autoProceed: false,\r\n      allowMultipleUploads: true,\r\n      debug: false,\r\n      restrictions: {\r\n        maxFileSize: null,\r\n        maxNumberOfFiles: 1,\r\n        minNumberOfFiles: 1,\r\n        allowedFileTypes: [\"image/*\", \".jpg\", \".jpeg\", \".png\", \".gif\"]\r\n      }\r\n    })\r\n      .use(Webcam)\r\n      .use(Webcam, {\r\n        countdown: true,\r\n        modes: [\"picture\"],\r\n        id: \"webcam\"        \r\n      });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.uppy.close();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Helmet>\r\n          <link href=\"/css/uppy/main.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n        </Helmet>\r\n        <Dashboard\r\n          plugins={[\"Webcam\"]}\r\n          uppy={this.uppy}\r\n        />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AvatarPicker;\r\n```",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/1519/comments",
    "author": "rafcontreras",
    "comments": [
      {
        "user": "kvz",
        "created_at": "2019-05-03T09:41:11Z",
        "body": "Hi, it looks like you have two of `.use(Webcam)`, could that be it?"
      },
      {
        "user": "goto-bus-stop",
        "created_at": "2019-05-08T09:59:58Z",
        "body": "Yes:\r\n\r\n```js\r\n// adds Webcam plugin with default configuration and ID \"Webcam\"\r\n.use(Webcam)\r\n// adds Webcam plugin with custom configuration and ID \"webcam\"\r\n.use(Webcam, {\r\n  countdown: true,\r\n  modes: [\"picture\"],\r\n  id: \"webcam\"\r\n});\r\n\r\n// Mounts plugin with ID \"Webcam\" (i.e. the first .use(Webcam) with default configuration)\r\n<Dashboard\r\n  plugins={[\"Webcam\"]}\r\n  uppy={this.uppy}\r\n/>\r\n```\r\n\r\nYou can fix it by removing the `.use(Webcam)` line, and removing the `id: \"webcam\"` option from the remaining one, so that the custom config will have the default ID \"Webcam\"."
      }
    ]
  },
  {
    "number": 1384,
    "title": "customize dashboard styles",
    "created_at": "2019-03-27T10:28:06Z",
    "closed_at": "2019-05-13T14:31:47Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/1384",
    "body": "I like to customize the style of the dashboard, \r\nfor example with a background image instead of the 'dropPaste' locale string, no background color and no border\r\n\r\nis there a way without overwriting the !important styles or is it not supported yet?",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/1384/comments",
    "author": "ulfw",
    "comments": [
      {
        "user": "arturi",
        "created_at": "2019-03-27T16:19:41Z",
        "body": "Hi! Important! styles will be gone in the next release, so you can use CSS selectors and customize it to you liking! 💈"
      },
      {
        "user": "andrewmclagan",
        "created_at": "2019-04-01T02:58:00Z",
        "body": "That is great to hear, was about to post an issue on the use of `!important` rules :-)"
      }
    ]
  },
  {
    "number": 1312,
    "title": "How to launch camera automatically?",
    "created_at": "2019-02-27T02:46:13Z",
    "closed_at": "2019-02-27T10:33:47Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/1312",
    "body": "Is there a way to automatically launch the camera instead of first seeing the dashboard and having the user click the camera icon?",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/1312/comments",
    "author": "kokokenada",
    "comments": [
      {
        "user": "arturi",
        "created_at": "2019-02-27T10:33:43Z",
        "body": "Hi, not at the moment, no unless you 1. write a small JS script that will click on the camera icon for you or 2. use Webcam plugin standalone, try using it like this `.use(Webcam, { target: 'body' })`. It should render in your DOM, outside of the Dashboard."
      }
    ]
  },
  {
    "number": 1287,
    "title": "Finding ID of Dashboard for multiple instances?",
    "created_at": "2019-02-10T17:13:14Z",
    "closed_at": "2019-06-28T17:36:51Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/1287",
    "body": "Anyone discovered a way to target the files[] input field in a Dashboard when there are multiple Uppy/Dashboard instances on a page?\r\n\r\nI have the ID for each Uppy and ID for each dashboard within it to unique IDs and am trying to find specific Dashboards in a Capybara test, but it doesn't look like the IDs are exposed anywhere in the page source. \r\n\r\nThanks for any tips if someone has solved this....",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/1287/comments",
    "author": "sugaractive",
    "comments": [
      {
        "user": "arturi",
        "created_at": "2019-02-11T09:23:07Z",
        "body": "Maybe you could use inline Dashboards and pass different `target: '#first-dashboard'` to them?\r\n\r\n```html\r\n<div id=\"first-dashboard\"></div>\r\n<div id=\"second-dashboard\"></div>\r\n```"
      },
      {
        "user": "sugaractive",
        "created_at": "2019-02-11T14:20:15Z",
        "body": "Thank you for the suggestion! I have tried that and still can't find the specific dashboard on the page. \r\n\r\n**Note:** this is just for Capybara tests -- multiple Uppys and Dashboards on the page is working great.\r\n\r\nDo you know if Uppy uses the \"id\" that is passed into the instance somewhere in the page code?\r\n\r\nI was hoping that the ID I'm passing to an Uppy instance (or the different one to a Dashboard instance) would show up in here and I could target that with Capybara to find the right files[] input to attach a file to:\r\n\r\n`<div class=\"uppy-Root uppy-Dashboard uppy-Dashboard--animateOpenClose uppy-Dashboard--modal uppy-size--md uppy-size--lg\" aria-label=\"Uppy Dashboard Window (Press escape to close)\">`\r\n\r\n"
      },
      {
        "user": "goto-bus-stop",
        "created_at": "2019-05-29T12:10:39Z",
        "body": "Sorry for the delay! Wouldn't using a CSS selector like `#first-dashboard input` work with artur's sample code?"
      },
      {
        "user": "arturi",
        "created_at": "2019-06-28T17:36:49Z",
        "body": "Please let us know if this is still relevant, and we’ll re-open."
      }
    ]
  },
  {
    "number": 1270,
    "title": "How to add font-awesome icon to fileinput button",
    "created_at": "2019-01-31T13:11:02Z",
    "closed_at": "2019-03-11T14:09:32Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/1270",
    "body": "I'm hoping to add a font-awesome icon to the fileinput button. Is this possible? \r\n\r\nMy code is below:\r\n\r\n```\r\nconst uppyOne = new Uppy({debug: true, autoProceed: true, restrictions: {maxFileSize: 1024 * 1024 * 1000, allowedFileTypes: ['.pptx', '.docx']}})\r\n    .use(FileInput, { target: '.UppyForm', pretty: true, locale: {strings: {chooseFiles: 'UPLOAD DOCUMENT'}}})\r\n    .use(ProgressBar, { target: '.Uppy-Progress', hideAfterFinish: false })\r\n    .use(AwsS3, {\r\n        serverUrl: '/' // will call Shrine's presign endpoint on `/s3/params`})\r\n    });\r\n```",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/1270/comments",
    "author": "echan00",
    "comments": [
      {
        "user": "arturi",
        "created_at": "2019-02-18T14:19:48Z",
        "body": "Hi! You could try to add the icon with `:before` in CSS, using inspector to see which selectors we are using. We don’t apply too much magic to our CSS just for that. We do still have `!important` declarations there, which you’d have to override, by using your own `!important`."
      }
    ]
  },
  {
    "number": 1220,
    "title": "Preview uploaded Images in Dashboard",
    "created_at": "2018-12-26T11:43:08Z",
    "closed_at": "2019-01-22T18:27:34Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/1220",
    "body": "I have uploaded images from the Dashboard and now I want to preview images which i have uploaded before so how I can do that",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/1220/comments",
    "author": "JayU9769",
    "comments": [
      {
        "user": "arturi",
        "created_at": "2019-01-20T16:57:15Z",
        "body": "Hi! You can to it outside of Uppy — close Dashboard modal or hide it if you are using it inline on the page, and replace with previews of your uploaded images."
      }
    ]
  },
  {
    "number": 1178,
    "title": "Help running Companion on Lambda",
    "created_at": "2018-11-29T05:36:56Z",
    "closed_at": "2019-01-15T13:08:09Z",
    "labels": [
      "Question",
      "Companion"
    ],
    "url": "https://github.com/transloadit/uppy/issues/1178",
    "body": "Hello everyone,\r\n\r\nI've managed to deploy Companion on Lambda using Serverless, but when I access the endpoints I get an Internal Server Error. \r\nI'm pretty sure it must be something with my serverless.yml, in fact, I'm not sure what should I use as DOMAIN. Currently I'm using the URL of my app on Serverless, is that correct?\r\n\r\nIf anyone could help me a little bit with this would be very much appreciated.\r\n\r\nThanks in advance.",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/1178/comments",
    "author": "bherrero",
    "comments": [
      {
        "user": "bherrero",
        "created_at": "2018-11-29T06:29:40Z",
        "body": "A quick update, as I managed to advance a little bit.\r\nIt seems that there's an error on serverless.yml (companion/examples/serverless) and handler should be pointing to index.uppy\r\n\r\nNow the error that I'm getting is Cannot GET. Not sure what it means, to be honest."
      },
      {
        "user": "arturi",
        "created_at": "2018-11-29T09:29:38Z",
        "body": "@kiloreux hi, would you be able to help here, please? If that sounds familiar."
      },
      {
        "user": "kiloreux",
        "created_at": "2018-12-07T12:15:59Z",
        "body": "What you should be using as domain is the domain that you will be calling from externally to use companion."
      },
      {
        "user": "arturi",
        "created_at": "2019-01-15T13:08:09Z",
        "body": "Closing, please feel free to reply or re-open."
      },
      {
        "user": "pankaj-ch",
        "created_at": "2019-11-01T05:09:58Z",
        "body": "@arturi, @kiloreux i am unable to understand/configure the websocket part as there is no mention of `uppy.socket(server, option);` code in provided serverless example. \r\nIs there anything i am missing.\r\n\r\nThanks"
      },
      {
        "user": "King-Success",
        "created_at": "2020-02-25T20:24:42Z",
        "body": "Can anyone please point me to a resource that explains how to deploy Companion on Lambda?"
      }
    ]
  },
  {
    "number": 1089,
    "title": "Plugging into an already existing server",
    "created_at": "2018-10-03T11:54:26Z",
    "closed_at": "2018-10-04T11:37:11Z",
    "labels": [
      "Question",
      "Companion"
    ],
    "url": "https://github.com/transloadit/uppy/issues/1089",
    "body": "Hey! \r\nMay companion  be used as a pluggable NOT Express app(for example Rails or Phoenix)?",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/1089/comments",
    "author": "floodico",
    "comments": [
      {
        "user": "arturi",
        "created_at": "2018-10-03T19:17:20Z",
        "body": "We currently do not support that, since it’s written in Node, you’d have to run Companion as a standalone process if you are not running a node-based server. Please correct me if I’m wrong, @ifedapoolarewaju."
      },
      {
        "user": "goto-bus-stop",
        "created_at": "2018-10-04T11:37:11Z",
        "body": "Artur's right­—you should be able to proxy requests to Companion through your Rails app, but if you're not using Node for your app it _has_ to run as a separate process. There is no way around that, unless someone writes a Ruby version of Companion :stuck_out_tongue_winking_eye: \r\n\r\n"
      }
    ]
  },
  {
    "number": 998,
    "title": "UppyServer in ASP.Net web api",
    "created_at": "2018-08-13T20:58:13Z",
    "closed_at": "2018-08-16T12:30:01Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/998",
    "body": "I want to use uppy server in web api as I want to user GoogelDrive, Drop box etc.\r\nConfiguring basis file upload throght uppy is done but when I open the GoodDrive link in dashboard i get the below error.\r\nRequestClient.js:2 Uncaught (in promise) TypeError: Cannot read property 'replace' of undefined\r\n\r\nPlease share the steps how I can add Uppy-Server in ASP.net MVC project without angular and node.\r\nThanks,\r\nGanesh",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/998/comments",
    "author": "jagdaleganesh",
    "comments": [
      {
        "user": "goto-bus-stop",
        "created_at": "2018-08-16T12:30:01Z",
        "body": "Hi! I just replied on the community forum, let's continue there :v:"
      }
    ]
  },
  {
    "number": 948,
    "title": "how to set up uppy with Tus if its remote storage",
    "created_at": "2018-07-06T02:56:43Z",
    "closed_at": "2018-07-26T06:20:57Z",
    "labels": [
      "Question",
      "Tus"
    ],
    "url": "https://github.com/transloadit/uppy/issues/948",
    "body": "Hello,\r\n\r\nI set up uppy to work with Tus as described in the docs. Inside of the client after successful upload I receive following endpoint after successful uploaded:\r\n```\r\n127.0.0.1:8000/files\r\n```\r\nBut as my `datastore` is not `FileStore` but a remote store so I don't know how to setup uppy to that `host/path`. It would be great to see a full example on how tus and uppy needs to be configured. Thanks",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/948/comments",
    "author": "dohomi",
    "comments": [
      {
        "user": "goto-bus-stop",
        "created_at": "2018-07-09T13:41:36Z",
        "body": "Ow, I don't know if we can easily do that. This is about the final links to individual files, like shown in the Dashboard, right? AFAIK uploads in tusd don't respond with the final storage URL. The Tus plugin for Uppy just uses the URL it uploaded to. If you are able to reliably predict the final URL using just information that's known on the client, you can do something like this to set a custom URL:\r\n\r\n```js\r\nuppy.on('upload-success', (file, upload) => {\r\n // `upload` is the tus.Upload instance, idk if that could be useful\r\n const uploadURL = computeURL(file)\r\n uppy.setFileState(file.id, { uploadURL: uploadURL })\r\n})\r\n```"
      },
      {
        "user": "dohomi",
        "created_at": "2018-07-09T13:46:26Z",
        "body": "@goto-bus-stop yes I meant the individual files inside of the dashboard. I'll try your workaround thanks for your response"
      }
    ]
  },
  {
    "number": 781,
    "title": "onBeforeFileAdded - does not data bind when drag and drop",
    "created_at": "2018-04-24T05:03:47Z",
    "closed_at": "2018-05-14T11:46:23Z",
    "labels": [
      "Question",
      "Angular"
    ],
    "url": "https://github.com/transloadit/uppy/issues/781",
    "body": "Hi,\r\n\r\nI am using the uppy dashboard to upload files in Angular 5 - as we know it allows drag drop, paste and select from local disk.\r\n\r\nI have a getter in my component file to get the file count to disable/enable my custom upload button. This works perfectly fine when I select a file from the local disk, but doesnt enable the upload button (doesnt automatically call the getter) when I drag and drop. I tried digging everything possible but not able to find a solution to it. Please help!\r\n\r\n```\r\nthis.uppy = Uppy({\r\n    ....\r\n    ....\r\n    onBeforeFileAdded: (files) => {\r\n     if (files.name.indexOf('.xlsx') === -1) {\r\n        return Promise.reject('Please select only excel files')\r\n      }\r\n      return Promise.resolve();\r\n    }\r\n}).use(Dashboard, {...}).run();\r\n//In the component\r\nget fileListEmpty(): boolean {\r\n    return R.isEmpty(this.uppy.state.files); // Using ramda.js in the project\r\n}\r\n\r\n\r\n//HTML File\r\n....\r\n<button [disabled]=\"fileListEmpty\">Upload</button>\r\n```",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/781/comments",
    "author": "g8anush",
    "comments": [
      {
        "user": "goto-bus-stop",
        "created_at": "2018-04-26T12:11:41Z",
        "body": "I'm afraid I'm not familiar with Angular… you probably need to tell it to update once a file is added, otherwise Angular has no way of knowing that anything changed. Something like this mayb:\r\n\r\n```js\r\nuppy.on('state-update', function () {\r\n  tellAngularToRerender()\r\n})\r\n```\r\n\r\nThe `state-update` event is emitted whenever anything happens in uppy (very often). As I said, I don't really know how Angular works, but hopefully that points you in the right direction!"
      },
      {
        "user": "goto-bus-stop",
        "created_at": "2018-05-14T11:46:23Z",
        "body": "Please comment here or open a new issue if you have further questions. Thanks!"
      }
    ]
  },
  {
    "number": 657,
    "title": "Is it possible to disable uploading from local disk?",
    "created_at": "2018-02-23T02:14:02Z",
    "closed_at": "2018-05-05T21:17:53Z",
    "labels": [
      "Question",
      "Feature"
    ],
    "url": "https://github.com/transloadit/uppy/issues/657",
    "body": "Hi,\r\nAwesome work you guys have going on here!\r\nI have a requirement to capture only pics or short videos through the user's webcam.\r\nUploading from local disk is strictly forbidden as users are expected to upload their latest selfies.\r\nIs it possible to disable the File Browser plugin ( the \"My Device\" upload button)?\r\nLike I want to restrict all usage to the Webcam plugin WHILE using the Dashboard plugin.\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/657/comments",
    "author": "ozzioma",
    "comments": [
      {
        "user": "arturi",
        "created_at": "2018-03-01T01:44:52Z",
        "body": "Hi! Currently it’s not possible officially. There are two ways you can in theory do this:\r\n\r\n1. Use CSS to hide blue “browse“ and “My Device” buttons, leaving only the Webcam icon. This will result in a weird UI, since only one icon will be present in the top bar. Do you have an idea on how this could work if this was an official feature?\r\n2. Do `.use(Webcam, { target: '#yourWebcamContainer' }`, Dashboard-oriented UI plugins in Uppy can technically work without it, and me mounted straight to the DOM, but this does not result in an ideal UI either."
      },
      {
        "user": "arturi",
        "created_at": "2018-05-05T21:17:53Z",
        "body": "Added this to backlog, thanks!"
      }
    ]
  },
  {
    "number": 629,
    "title": "Change locale strings of progress bar when using DashboardModal in React.",
    "created_at": "2018-02-13T23:50:41Z",
    "closed_at": "2018-02-19T19:26:58Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/629",
    "body": "How to change locale string of progress bar when using DashboardModal in React?\r\n\r\nEspecially:\r\n\r\n- \"Uploading...\"\r\n- \"Upload complete\"",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/629/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "goto-bus-stop",
        "created_at": "2018-02-15T14:55:50Z",
        "body": "Pass a `locale` prop with the strings:\r\n\r\n```js\r\n<DashboardModal\r\n  locale={{\r\n    strings: {\r\n      uploading: 'Bezig met uploaden',\r\n      uploadComplete: 'Klaar!'\r\n    }\r\n  }}\r\n/>\r\n```\r\n\r\nThe StatusBar locale keys are currently missing in the documentation; adding in #633."
      },
      {
        "user": "ghost",
        "created_at": "2018-02-19T10:11:32Z",
        "body": "`uploadComplete` works.\r\n\r\n`uploading` doesn't."
      },
      {
        "user": "goto-bus-stop",
        "created_at": "2018-02-19T10:17:29Z",
        "body": "oh, you're right 🤔 Fixing in #640!"
      },
      {
        "user": "arturi",
        "created_at": "2018-02-19T19:29:43Z",
        "body": "Thanks for reporting, will be out in the next patch release soon."
      }
    ]
  },
  {
    "number": 620,
    "title": "Adding file name to status progress bar.",
    "created_at": "2018-02-12T19:46:04Z",
    "closed_at": "2018-03-11T02:42:53Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/620",
    "body": "Is it possible to add the file name to the progress status? Next to \"Uploading\" message for example.",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/620/comments",
    "author": "mazek1961",
    "comments": [
      {
        "user": "arturi",
        "created_at": "2018-02-18T03:17:05Z",
        "body": "Hi! But there are often multiple files, how would that work? You can already see the file name below the preview/icon, if we are talking about Dashboard plugin."
      },
      {
        "user": "mazek1961",
        "created_at": "2018-02-19T16:37:12Z",
        "body": "I am not talking about Dashboard. I am trying to add the ability to upload several files (one at a time) and having multiple progress bars for each file. The uploads are created in the modal window, but I am targeting the page body with several instances of the progress bar."
      },
      {
        "user": "goto-bus-stop",
        "created_at": "2018-02-22T14:48:42Z",
        "body": "The progress bar shows progress for the entire upload, not individual files. Eg if one out of 4 files completed but the other 3 are stuck at 0%, the progress bar will show 25%.\r\n\r\nYou could write a custom UI that does this by listening for the `upload-start`, `upload-progress` events:\r\n\r\n```js\r\nuppy.on('upload-start', (fileID) => {\r\n  const file = uppy.getFile(fileID)\r\n  addProgressBar(file)\r\n})\r\nuppy.on('upload-progress', (data) => {\r\n  const file = uppy.getFile(data.id)\r\n  updateProgressBar(file, data)\r\n})\r\nuppy.on('file-removed', (file) => {\r\n  removeProgressBar(file)\r\n})\r\n\r\nfunction addProgressBar (file) {\r\n  // append a custom progress bar with label `file.name`\r\n}\r\nfunction updateProgressBar (file, progress) {\r\n  // set progress bar values based on progress.bytesTotal and progress.bytesUploaded\r\n}\r\n```\r\n\r\n(Note that the `upload-start` and `upload-progress` event APIs are being changed in #647, so you would need to update the snippet in the future—the changes are small though!)\r\n\r\nDoes that direction make sense?"
      },
      {
        "user": "mazek1961",
        "created_at": "2018-02-25T18:21:24Z",
        "body": "OK. I'll try it. Thanks!"
      },
      {
        "user": "mazek1961",
        "created_at": "2018-02-25T18:40:58Z",
        "body": "Actually, then what is the point of using uppy if I can't use the uppy's progress bar?\r\nI'm using TranslodIT to upload files, so I guess I can use their functions, which is a bummer, since I do like the Uppy progress/status functionality..."
      },
      {
        "user": "arturi",
        "created_at": "2018-03-11T02:42:53Z",
        "body": "Well, yeah, right now what goto-bus-stop showed seems to be the way to go. We have to be balance specific use cases vs more common. If you have a solution of how this could work with current StatusBar and ProgressBar, let us know. \r\n\r\nFeel free to re-open, closing since there’s an issue overload, and I wasn’t able to come up with a constructive way to address this issue."
      }
    ]
  },
  {
    "number": 539,
    "title": "Support for custom file data modifier",
    "created_at": "2018-01-18T20:13:11Z",
    "closed_at": "2018-01-26T20:22:39Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/539",
    "body": "So currently after adding a file it's structured to.\r\n```javascript\r\nconst newFile = {\r\n  source: file.source || '',\r\n  id: fileID,\r\n  name: fileName,\r\n  extension: fileExtension || '',\r\n  meta: Object.assign({}, this.getState().meta, {\r\n    name: fileName,\r\n    type: fileType\r\n  }),\r\n  type: fileType,\r\n  data: file.data,\r\n  progress: {\r\n    percentage: 0,\r\n    bytesUploaded: 0,\r\n    bytesTotal: file.data.size || 0,\r\n    uploadComplete: false,\r\n    uploadStarted: false\r\n  },\r\n  size: file.data.size || 'N/A',\r\n  isRemote: isRemote,\r\n  remote: file.remote || '',\r\n  preview: file.preview\r\n}\r\n```\r\nWould it be possible to pass function that would the file be ran trough to format it ? I currently have multiple upload sources and it makes it quite inconvenient to later display the files that are in state in tables and other components as they do not follow the same schema.",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/539/comments",
    "author": "WhoAteDaCake",
    "comments": [
      {
        "user": "goto-bus-stop",
        "created_at": "2018-01-22T10:23:30Z",
        "body": "Hi @WhoAteDaCake! Uppy depends on that specific structure internally, so we can't store it much differently. If you have a function that formats the structure you should be able to use that in your app when you are about to display the files though."
      },
      {
        "user": "arturi",
        "created_at": "2018-01-26T20:22:37Z",
        "body": "Closing this for now, feel free to comment or re-open if there’s something else we can do!"
      }
    ]
  },
  {
    "number": 498,
    "title": "Configuration mobile gallery",
    "created_at": "2018-01-05T11:50:17Z",
    "closed_at": "2018-01-08T03:36:12Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/498",
    "body": "Very interesting project. Great work.\r\n\r\nHow to configure to open gallery directly on mobile device to upload a photo. I saw in example \"my device\" by default gives option for Camera and Documents. Would it be possible to open directly gallery?\r\n",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/498/comments",
    "author": "gagan-bansal",
    "comments": [
      {
        "user": "arturi",
        "created_at": "2018-01-07T19:26:45Z",
        "body": "Hi! Thank you. I’m going to do some more research, but so far I’ve found that there is no way to control the dialog on iOS. And it makes sense, because user’s images could be in some folder on their device, and not in camera roll?"
      },
      {
        "user": "gagan-bansal",
        "created_at": "2018-01-08T03:35:49Z",
        "body": "Thanks for update I got your point. My target is android user. In my project it will be a little more helpful to user if user sees directly gallery. \r\nAnyways this uppy lib will reduce lot of my work, though I have not yet started work using uppy. \r\n\r\nThanks,\r\nGagan  "
      }
    ]
  },
  {
    "number": 168,
    "title": "How to get files from request ",
    "created_at": "2017-03-01T16:59:46Z",
    "closed_at": "2017-05-04T01:35:29Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/168",
    "body": "I use uppy.io in my Laravel project\r\nI have string \r\n`uppy.use(Tus10, {endpoint: TUS_ENDPOINT, resume: true});`\r\n\r\nWhere `TUS_ENDPOINT = 'upload'`\r\n\r\nAnd in controller action has `var_dump($_FILES)` \r\n\r\nBut i get empty value\r\n\r\nHow it solve?\r\n",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/168/comments",
    "author": "MirlanJA",
    "comments": [
      {
        "user": "kvz",
        "created_at": "2017-03-02T11:01:21Z",
        "body": "Hi, thanks for taking an interest. It seems you are not running a tus.io server, but are expecting apache/nginx to handle the file uploads and then have that webserver pass a reference to your php script in the global `$FILES` array, correct? That means you'll want to use the multipart plugin instead of the tus plugin. The tus plugin uses the tus.io protocol to enable resumable file uploads, but that requires running a tus server of some kind to receive the files."
      }
    ]
  },
  {
    "number": 151,
    "title": "size/resolution options of image ",
    "created_at": "2017-02-14T13:32:01Z",
    "closed_at": "2017-06-17T00:36:00Z",
    "labels": [
      "Question"
    ],
    "url": "https://github.com/transloadit/uppy/issues/151",
    "body": "Hi all, found uppy few days back .. was excited,\r\n\r\nis there edit the pic and crop only selected part of image.\r\nor By upload of image the size/resolution force to change the resolution, That mean also setting options for resolution.\r\n\r\ngreat work is going on :D\r\n",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/151/comments",
    "author": "skeeran",
    "comments": [
      {
        "user": "arturi",
        "created_at": "2017-02-14T13:57:07Z",
        "body": "Hi! Thanks for your interest 👋\r\n\r\nCropping functionality has been discussed and is planned for sometime in the future. Those meta fields you are talking about are just meant to be passed for a server, and then it can resize the image or do something else."
      },
      {
        "user": "arturi",
        "created_at": "2017-06-17T00:36:00Z",
        "body": "Added to backlog, thanks."
      }
    ]
  },
  {
    "number": 3846,
    "title": "@uppy/image-editor - Cancel Event",
    "created_at": "2022-06-23T20:06:52Z",
    "closed_at": "2022-07-12T10:19:21Z",
    "labels": [
      "Help Wanted",
      "Feature",
      "Good first issue"
    ],
    "url": "https://github.com/transloadit/uppy/issues/3846",
    "body": "Hey, can you guys add a cancel event to this? Thanks!\r\n\r\n```\r\nuppy.on('file-editor:cancel', () => {\r\n    console.log('File Editor Cancelled')\r\n})\r\n```\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/3846/comments",
    "author": "oalexdoda",
    "comments": [
      {
        "user": "Murderlon",
        "created_at": "2022-06-24T10:09:09Z",
        "body": "I think we can add that, yes. Can you create a PR for it?"
      }
    ]
  },
  {
    "number": 2922,
    "title": "Stricter typescript definitions",
    "created_at": "2021-06-08T21:27:58Z",
    "closed_at": "2021-08-17T14:29:41Z",
    "labels": [
      "Help Wanted",
      "Types"
    ],
    "url": "https://github.com/transloadit/uppy/issues/2922",
    "body": "The typescript definitions are a big help already, but on first sight they could be much stricter, and thus make development safer.\r\n\r\nFor example, the `Event`-type form `@uppy/core` resolves to \r\n`type Event = LiteralUnion<'file-added' | 'file-removed' | 'upload' | 'upload-progress' | 'upload-success' | 'complete' | 'error' | 'upload-error' | 'upload-retry' | 'info-visible' | 'info-hidden' | 'cancel-all' | 'restriction-failed' | 'reset-progress' | string & { };` which seems not quite ideal to me. This could to this exaggerated erroneous call to `uppy.on`: `uppy.on('upload-errrOOOoooOOOOOrrrr'`. Therefore I'd suggest to make these types stricter, and in the same run remove all the most of the `any`-types if possible\r\n",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/2922/comments",
    "author": "lwolle",
    "comments": [
      {
        "user": "Murderlon",
        "created_at": "2021-06-09T07:33:55Z",
        "body": "hi @lwolle, thanks for the suggestion. Stricter types are always a good idea and it's an ongoing effort. If there is anything in particular you'd like to quickly change, PRs are welcome :)"
      }
    ]
  },
  {
    "number": 283,
    "title": "The transuppyloadit preset (yeah.. sorry)",
    "created_at": "2017-08-17T13:16:27Z",
    "closed_at": "2019-01-22T19:00:41Z",
    "labels": [
      "Help Wanted",
      "💬 Discussion",
      "Transloadit"
    ],
    "url": "https://github.com/transloadit/uppy/issues/283",
    "body": "So we want to think about the interface of a function that bootstraps Uppy+Transloadit for newcommers so that they can be on their way with ~3 lines of JavaScript.\r\n\r\nWe haven't really figured out what the majority-usecase is for newcomers. Are they using react? Do they have an existing `<form>` file upload that they want to upgrade? Hard to answer. The point could be made that people well versed in React and the likes, will be the ones that have little problems sifting through the docs and will want to build and customize Uppy themselves, anyway (and they already can to a great degree). \r\n\r\nSo to me, i think, it would be most valuable to cater to the other group of users, that is perhaps more novice but could enjoy fancy file uploaders nonetheless.\r\n\r\nThe idea rises that this group of people would be helped most with\r\n\r\n- A ready to rock bundle with the transloadit & common plugins baked inside (should be hosted on the transloadit CDN)\r\n- A clear cut example that has sane defaults baked in, and connects the tus/uppy-server/transloadit pieces for them\r\n- Optionally, a way to transform the file input of an existing form into an uppy dashboard\r\n\r\nHere's a first iteration just to kick things off, input very welcome\r\n\r\n```js\r\ntransuppyloadit({\r\n  target: '#myDiv'\r\n  authKey: '123123123123',\r\n}, function (encodedFiles) {\r\n  // To add the URLs to the encoded files to your <form>\r\n  $('form').append(`<input \r\n    type=\"hidden\" \r\n    name=\"encodedFiles\" \r\n    value=\"${JSON.stringify(encodedFiles)}\"\r\n  />`)\r\n})\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/transloadit/uppy/issues/283/comments",
    "author": "kvz",
    "comments": [
      {
        "user": "arturi",
        "created_at": "2019-01-22T19:00:41Z",
        "body": "Closing in favor of a PR with the feature — #1135"
      }
    ]
  }
]