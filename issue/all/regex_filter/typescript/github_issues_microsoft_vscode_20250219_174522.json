[
  {
    "number": 221464,
    "title": "Running a task does not show the build terminal if an editor terminal is open",
    "created_at": "2024-07-11T12:51:55Z",
    "closed_at": "2024-07-16T19:26:47Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "tasks",
      "insiders-released",
      "terminal-editors"
    ],
    "url": "https://github.com/microsoft/vscode/issues/221464",
    "body": "\nType: <b>Bug</b>\n\nPreparation: create the following `.vscode/tasks.json` file:\n```json\n{\n  \"version\": \"2.0.0\",\n  \"tasks\": [\n    {\n      \"label\": \"Test\",\n      \"type\": \"shell\",\n      \"command\": \"sleep 10\"\n    }\n  ]\n}\n```\n\n1. In the terminals panel, create a new shell terminal\n2. Drag it to the main editor area to make it a full-size terminal\n3. Also open an editor tab (any file will do, including Command-N)\n4. Make sure the panel is closed (press Command-J to close it if it is open)\n5. Run the above task (e.g. with Command-P, then type `task Test`)\n\nExpected: the panel opens and shows the running task\nActual: the editor terminal is brought to the front, and the panel stays closed\n\nVS Code version: Code - Insiders 1.92.0-insider (c37f4a49e28831cec1aec1af0f626edaada1f7ce, 2024-07-11T05:03:58.450Z)\nOS version: Darwin arm64 23.5.0\nModes:\n\n<details>\n<summary>System Info</summary>\n\n|Item|Value|\n|---|---|\n|CPUs|Apple M1 Max (10 x 2400)|\n|GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: enabled_on<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_graphite: disabled_off<br>video_decode: enabled<br>video_encode: enabled<br>webgl: enabled<br>webgl2: enabled<br>webgpu: enabled<br>webnn: disabled_off|\n|Load (avg)|4, 5, 6|\n|Memory (System)|32.00GB (3.14GB free)|\n|Process Argv|--disable-extensions . --crash-reporter-id 0af73232-1e42-4c3f-95c4-5b10f8deb228|\n|Screen Reader|no|\n|VM|0%|\n</details>Extensions disabled\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/221464/comments",
    "author": "stk-ableton",
    "comments": [
      {
        "user": "tisilent",
        "created_at": "2024-07-16T03:22:16Z",
        "body": "```javascript copy\r\n{\r\n  \"version\": \"2.0.0\",\r\n  \"tasks\": [\r\n    {\r\n      \"label\": \"Test\",\r\n      \"type\": \"shell\",\r\n      \"command\": \"sleep 10\",\r\n      \"presentation\": {\r\n           \"focus\": true\r\n       }\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nIn this scenario, focus also fails."
      },
      {
        "user": "stk-ableton",
        "created_at": "2024-07-16T17:15:36Z",
        "body": "I can confirm that #221684 fixes the problem for me. Thanks!"
      }
    ]
  },
  {
    "number": 221292,
    "title": "Opening terminal from \"Source Control Repositories\" is different than opening terminal from \"Source Control\"",
    "created_at": "2024-07-09T18:09:32Z",
    "closed_at": "2024-07-30T08:41:08Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "scm",
      "insiders-released"
    ],
    "url": "https://github.com/microsoft/vscode/issues/221292",
    "body": "Type: <b>Bug</b>\r\n\r\nIn the \"Source Control Repositories\" view, if you have several repos selected, and then right click on one of them and choose \"Open in Integrated Terminal\", it will open the terminal in the directory for the first selected repo regardless of which repo you right clicked on.\r\n\r\nHowever if you right click on a repo under \"Source Control\" then it will open the terminal correctly.\r\n\r\nVS Code version: Code 1.90.2 (5437499feb04f7a586f677b155b039bc2b3669eb, 2024-06-18T22:33:48.698Z)\r\nOS version: Linux x64 6.6.15-2rodete2-amd64\r\nModes:\r\nRemote OS version: Linux x64 6.6.15-2rodete2-amd64\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Xeon(R) Gold 6154 CPU @ 3.00GHz (72 x 1200)|\r\n|GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: disabled_off<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_graphite: disabled_off<br>video_decode: enabled<br>video_encode: disabled_software<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled<br>webgpu: disabled_off|\r\n|Load (avg)|1, 1, 1|\r\n|Memory (System)|187.53GB (163.09GB free)|\r\n|Process Argv|--crash-reporter-id dc1ae561-1402-4167-84f9-83ee5567e81c|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n|DESKTOP_SESSION|gnome|\r\n|XDG_CURRENT_DESKTOP|GNOME|\r\n|XDG_SESSION_DESKTOP|gnome|\r\n|XDG_SESSION_TYPE|wayland|\r\n\r\n|Item|Value|\r\n|---|---|\r\n|Remote|SSH: jbettis.c.googlers.com|\r\n|OS|Linux x64 6.6.15-2rodete2-amd64|\r\n|CPUs|Intel(R) Xeon(R) CPU @ 2.00GHz (96 x 0)|\r\n|Memory (System)|177.06GB (151.07GB free)|\r\n|VM|0%|\r\n</details><details><summary>Extensions (22)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\njupyter-keymap|ms-|1.1.2\r\nremote-containers|ms-|0.375.1\r\nremote-ssh|ms-|0.112.0\r\nremote-ssh-edit|ms-|0.86.0\r\nvscode-remote-extensionpack|ms-|0.25.0\r\nremote-explorer|ms-|0.4.3\r\nremote-server|ms-|1.5.2\r\nrewrap|stk|1.16.3\r\ngithistory|don|0.6.20\r\ngitlens|eam|15.1.0\r\ngo|gol|0.41.4\r\ndebugpy|ms-|2024.6.0\r\nisort|ms-|2023.10.1\r\npylint|ms-|2023.10.1\r\npython|ms-|2024.10.0\r\njupyter|ms-|2024.5.0\r\njupyter-keymap|ms-|1.1.2\r\njupyter-renderers|ms-|1.0.18\r\nvscode-jupyter-cell-tags|ms-|0.1.9\r\nvscode-jupyter-slideshow|ms-|0.1.6\r\npreview-vscode|sea|2.3.7\r\ncode-spell-checker|str|3.0.1\r\n\r\n\r\n</details><details>\r\n<summary>A/B Experiments</summary>\r\n\r\n```\r\nvsliv368cf:30146710\r\nvspor879:30202332\r\nvspor708:30202333\r\nvspor363:30204092\r\nvscoreces:30445986\r\nvscod805:30301674\r\nbinariesv615:30325510\r\nvsaa593cf:30376535\r\npy29gd2263:31024239\r\nc4g48928:30535728\r\nazure-dev_surveyone:30548225\r\n962ge761:30959799\r\nf8hc8238:30694864\r\npythongtdpath:30769146\r\nwelcomedialog:30910333\r\npythonnoceb:30805159\r\nasynctok:30898717\r\npythonregdiag2:30936856\r\npythonmypyd1:30879173\r\nh48ei257:31000450\r\npythontbext0:30879054\r\naccentitlementst:30995554\r\ndsvsc016:30899300\r\ndsvsc017:30899301\r\ndsvsc018:30899302\r\ncppperfnew:31000557\r\ndsvsc020:30976470\r\npythonait:31006305\r\njchc7451:31067544\r\nchatpanelc:31048052\r\ndsvsc021:30996838\r\n9c06g630:31013171\r\npythoncenvpt:31062603\r\na69g1124:31058053\r\ndvdeprecation:31068756\r\ndwnewjupytercf:31046870\r\nlegacy_priority:31082724\r\n\r\n```\r\n\r\n</details>\r\n\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/221292/comments",
    "author": "jeremybettis",
    "comments": [
      {
        "user": "vscodenpa",
        "created_at": "2024-07-09T18:09:48Z",
        "body": "Thanks for creating this issue! It looks like you may be using an old version of VS Code, the latest stable release is 1.91.0. Please try upgrading to the latest version and checking whether this issue remains.\n\nHappy Coding!"
      },
      {
        "user": "gjsjohnmurray",
        "created_at": "2024-07-09T19:53:30Z",
        "body": "Is that option being contributed by an extension? Please use the `Start Extension Bisect` command to investigate."
      },
      {
        "user": "jeremybettis",
        "created_at": "2024-07-09T22:04:08Z",
        "body": "The menu option is there even with no extensions loaded by \"Start Extension Bisect\""
      },
      {
        "user": "vs-code-engineering[bot]",
        "created_at": "2024-07-31T15:58:40Z",
        "body": "<!-- UNABLE_TO_LOCATE_COMMIT_MESSAGE repo -->\nIssue marked as unreleased but unable to locate closing commit in repo history. If this was closed in a separate repo you can add the `insiders-released` label directly, or comment `\\closedWith someShaThatWillbeReleasedWhenThisIsRelesed`."
      },
      {
        "user": "vs-code-engineering[bot]",
        "created_at": "2024-07-31T23:29:36Z",
        "body": "<!-- UNABLE_TO_LOCATE_COMMIT_MESSAGE -->\n\t\t\tIssue marked as unreleased but unable to locate closing commit in issue timeline. You can manually reference a commit by commenting `\\closedWith someCommitSha`, or directly add the `insiders-released` label if you know this has already been releaased"
      }
    ]
  },
  {
    "number": 214768,
    "title": "Git - Auto stash after branch switch doesn't stash new files",
    "created_at": "2024-06-10T09:24:32Z",
    "closed_at": "2024-12-13T15:06:14Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "git",
      "insiders-released"
    ],
    "url": "https://github.com/microsoft/vscode/issues/214768",
    "body": "Type: <b>Bug</b>\r\n\r\nWhen switching to another git branch, VScode offers to stash any current changes. But when I choose that option, it only stashes *changed* files, but leaves *new* files out of the stash.\r\n\r\nIt makes sense to also stash *new* files, because they are part of the set of changes that was being worked on, and should not accidentally become part of the branch being switched to.\r\n\r\nSo currently the changes stash only partly, which effectively splits the not-yet-committed changeset in twine, which is probably bad in most scenarios, and can lead to confusion and bugs.\r\n\r\nTo reproduce:\r\n\r\n1. Be on branch A\r\n2. Have some *changed* as well as some *new* files\r\n3. Checkout branch B\r\n4. VScode will ask what to do - choose to stash\r\n5. Observe the split between what's now stashed (changed files), and what isn't (new files)\r\n\r\nAfter step 5, those new files will be \"part of\" the new branch if you're not careful in selecting what to commit.\r\n\r\nInstead, *new* files should also be put into the stash that was offered in step 4.\r\n\r\nVS Code version: Code 1.89.1 (dc96b837cf6bb4af9cd736aa3af08cf8279f7685, 2024-05-07T05:13:33.891Z)\r\nOS version: Windows_NT x64 10.0.19045\r\nModes:\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|12th Gen Intel(R) Core(TM) i9-12900H (20 x 2918)|\r\n|GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: enabled_on<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_graphite: disabled_off<br>video_decode: enabled<br>video_encode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled<br>webgpu: enabled|\r\n|Load (avg)|undefined|\r\n|Memory (System)|31.68GB (13.49GB free)|\r\n|Process Argv||\r\n|Screen Reader|no|\r\n|VM|0%|\r\n</details><details><summary>Extensions (33)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nbetter-comments|aar|3.0.2\r\ncodesnap|adp|1.3.4\r\njsdoc-generator|cry|2.1.0\r\nfont-preview|ctc|2.2.1\r\nvscode-autohotkey-plus|cwe|2.7.1\r\nvscode-eslint|dba|2.4.4\r\novertype|DrM|0.5.0\r\nEditorConfig|Edi|0.16.4\r\nvscode-great-icons|emm|2.1.105\r\nauto-rename-tag|for|0.1.10\r\nremotehub|Git|0.62.0\r\ntodo-tree|Gru|0.0.226\r\nvscode-totalcommander|ipa|1.0.4\r\nrainbow-csv|mec|3.12.0\r\nvscode-duplicate|mrm|1.2.1\r\nvscode-scss|mrm|0.10.0\r\nvscode-docker|ms-|1.29.1\r\nvscode-dotnet-runtime|ms-|2.0.5\r\nremote-wsl|ms-|0.88.2\r\nazure-repos|ms-|0.38.0\r\npowershell|ms-|2024.2.2\r\nremote-repositories|ms-|0.40.0\r\ngremlins|nho|0.26.0\r\nvscode-versionlens|pfl|1.13.1\r\nprettyxml|Pra|5.0.0\r\nprisma|Pri|5.15.0\r\nsqlite-viewer|qwt|0.5.7\r\nLiveServer|rit|5.7.9\r\nsass-indented|syl|1.8.29\r\nvscode-mdx|uni|1.8.8\r\nvscode-svg-previewer|vit|0.7.0\r\nvolar|Vue|2.0.19\r\npretty-ts-errors|Yoa|0.5.4\r\n\r\n\r\n</details>\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/214768/comments",
    "author": "thany",
    "comments": [
      {
        "user": "vscodenpa",
        "created_at": "2024-06-10T09:24:49Z",
        "body": "Thanks for creating this issue! It looks like you may be using an old version of VS Code, the latest stable release is 1.90.0. Please try upgrading to the latest version and checking whether this issue remains.\n\nHappy Coding!"
      },
      {
        "user": "thany",
        "created_at": "2024-06-10T09:27:37Z",
        "body": "Whoops, that's right. The problem still happens on 1.90.0, unfortunately."
      }
    ]
  },
  {
    "number": 199938,
    "title": "Error: Illegal value for lineNumber",
    "created_at": "2023-12-04T10:04:59Z",
    "closed_at": "2023-12-12T16:25:18Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "good first issue",
      "editor-code-actions",
      "insiders-released"
    ],
    "url": "https://github.com/microsoft/vscode/issues/199938",
    "body": "I was switching between files, opened an empty file and got the error below\r\n\r\n```\r\nERR Illegal value for lineNumber: Error: Illegal value for lineNumber\r\n    at TextModel.getLineContent (vscode-file://vscode-app/Users/jrieken/Code/vscode/out/vs/editor/common/model/textModel.js:572:23)\r\n    at LightBulbWidget.update (vscode-file://vscode-app/Users/jrieken/Code/vscode/out/vs/editor/contrib/codeAction/browser/lightBulbWidget.js:170:78)\r\n    at CodeActionController.update (vscode-file://vscode-app/Users/jrieken/Code/vscode/out/vs/editor/contrib/codeAction/browser/codeActionController.js:98:42)\r\n```",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/199938/comments",
    "author": "jrieken",
    "comments": [
      {
        "user": "aiday-mar",
        "created_at": "2023-12-04T13:22:21Z",
        "body": "Hey @jrieken I am trying to reproduce the error, do you have a sample of two files where you see this error?"
      },
      {
        "user": "jrieken",
        "created_at": "2023-12-04T13:31:10Z",
        "body": "I believe this happens with empty files"
      }
    ]
  },
  {
    "number": 188810,
    "title": "Should it be possible to use ctrl+up/ctrl+down to navigate within a comment thread",
    "created_at": "2023-07-25T16:49:43Z",
    "closed_at": "2023-08-10T16:31:39Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "accessibility",
      "verification-needed",
      "on-release-notes",
      "insiders-released"
    ],
    "url": "https://github.com/microsoft/vscode/issues/188810",
    "body": "Testing #188536\r\n\r\n1. Open a file in a PR that has comments\r\n2. Set focus to the comment widget input\r\n3. :bug: can't ctrl+up/ctrl+down to move focus to the comments within that thread\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/188810/comments",
    "author": "joyceerhl",
    "comments": [
      {
        "user": "hsfzxjy",
        "created_at": "2023-08-08T07:58:43Z",
        "body": "Author of #187077 here. I would like to solve this."
      }
    ]
  },
  {
    "number": 173752,
    "title": "Screencast Mode: Only Keyboard Shortcuts still shows command names",
    "created_at": "2023-02-08T04:44:05Z",
    "closed_at": "2023-03-09T17:50:14Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "good first issue",
      "screencast-mode",
      "insiders-released"
    ],
    "url": "https://github.com/microsoft/vscode/issues/173752",
    "body": "<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ -->\r\nDoes this issue occur when all extensions are disabled?: Yes\r\n\r\n- VS Code Version: 1.75.0 Stable, 1.76.0 Insiders\r\n- OS Version: Windws 11\r\n\r\nSteps to Reproduce:\r\n\r\n1. Enable Screencast Mode: Only Keyboard Shortcuts (\"screencastMode.onlyKeyboardShortcuts\": true)\r\n2. Toggle Screencast Mode\r\n3. Try keyboard shortcuts such as Ctrl+P and Ctrl+Shift+P\r\n\r\nBoth keybindings still show \"Go to File...\" and \"Show All Commands\"\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/173752/comments",
    "author": "gregvanl",
    "comments": [
      {
        "user": "sankeerth125",
        "created_at": "2023-02-24T03:59:34Z",
        "body": "Hi @joaomoreno, is anyone working on this? if not can I do this?\r\n"
      },
      {
        "user": "nikdmello",
        "created_at": "2023-03-02T20:33:20Z",
        "body": "Hi @gregvanl @joaomoreno, what is the expected behavior? When I click Ctrl+P in Screencast Mode, should it say \"Go to File... Ctrl+P\" or \"Go to File...\" or just \"Ctrl+P\""
      },
      {
        "user": "gregvanl",
        "created_at": "2023-03-03T03:40:49Z",
        "body": "Hi @nikdmello My understanding is that with the Screencast Mode: Only Keyboard Shortcuts setting checked (value `true`), in screencast mode, you should only see the keyboard shortcuts (Ctrl+P) without any text for the command name."
      },
      {
        "user": "nikdmello",
        "created_at": "2023-03-05T00:54:04Z",
        "body": "Simple fix here. In developerActions.ts I updated the code for the Screencast Mode behavior, particularly for the Only Keyboard Shortcuts option. When the box is not checked (hence false), only then do we want the action names printed out. So, I added this Boolean check to the if statement to only print out the action names when the box is checked (true)."
      },
      {
        "user": "gregvanl",
        "created_at": "2023-03-06T05:13:07Z",
        "body": "@nikdmello I'm curious, do you know why this feature regressed and stopped working? Looking through history for the culprit should help you have confidence in your fix."
      },
      {
        "user": "nikdmello",
        "created_at": "2023-03-06T14:21:51Z",
        "body": "@gregvanl hmm, are you sure if this feature was working before? I will look through history soon but perhaps it was just faulty logic from the beginning."
      },
      {
        "user": "gregvanl",
        "created_at": "2023-03-07T02:32:13Z",
        "body": "@nikdmello I played around with some earlier versions of VS Code, for example 1.38 when the `screencastMode.onlyKeyboardShortcuts` setting was announced, and actually couldn't see the command names displayed.\r\nI'll leave it to @joaomoreno to confirm that the setting did work at one point and to review your PR.\r\nThanks"
      }
    ]
  },
  {
    "number": 164448,
    "title": "tsconfig.json: \"Follow link\" failing",
    "created_at": "2022-10-24T13:02:07Z",
    "closed_at": "2022-10-24T21:12:53Z",
    "labels": [
      "bug",
      "help wanted",
      "*duplicate"
    ],
    "url": "https://github.com/microsoft/vscode/issues/164448",
    "body": "\nType: <b>Bug</b>\n\nSteps to Reproduce:\n\n1. With the following:\n    ./base/tsconfig.json\n    ```JSON\n    {\n      \"compilerOptions\": {\n        ...\n      }\n    }\n    ```\n    ./nextjs/tsconfig.json\n    ```JSON\n    {\n      \"extends\": \"../base/tsconfig.json\",\n      \"compilerOptions\": {\n        ...\n      }\n    }\n    ```\n2. Ctrl+click the extends entry \"../base/tsconfig.json\".\n\nWhat's expected:\n\nThe VSCode will open the correct ./base/tsconfig.json file.\n\nWhat happens:\n\nVSCode opens a file with the \"almost-correct\" path, but with a backslash instead of a slash, thus issuing a file not found error, since this path is not exactly valid on WSL/Linux.\n\nVS Code version: Code 1.72.2 (d045a5eda657f4d7b676dedbfa7aab8207f8a075, 2022-10-12T22:15:18.074Z)\nOS version: Windows_NT x64 10.0.22621\nModes:\nSandboxed: No\nRemote OS version: Linux x64 5.15.68.1-microsoft-standard-WSL2\n\n<details>\n<summary>System Info</summary>\n\n|Item|Value|\n|---|---|\n|CPUs|Intel(R) Core(TM) i7-6700 CPU @ 3.40GHz (8 x 3408)|\n|GPU Status|2d_canvas: enabled<br>canvas_oop_rasterization: disabled_off<br>direct_rendering_display_compositor: disabled_off_ok<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>opengl: enabled_on<br>rasterization: enabled<br>raw_draw: disabled_off_ok<br>skia_renderer: enabled_on<br>video_decode: enabled<br>video_encode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled<br>webgpu: disabled_off|\n|Load (avg)|undefined|\n|Memory (System)|31.93GB (11.28GB free)|\n|Process Argv|--folder-uri=vscode-remote://wsl+Ubuntu/home/rodrigo/Projects/paniclobster/workspace --remote=wsl+Ubuntu --crash-reporter-id cd7ae288-f950-4814-a0e8-468a30358a65|\n|Screen Reader|no|\n|VM|0%|\n\n|Item|Value|\n|---|---|\n|Remote|WSL: Ubuntu|\n|OS|Linux x64 5.15.68.1-microsoft-standard-WSL2|\n|CPUs|Intel(R) Core(TM) i7-6700 CPU @ 3.40GHz (8 x 3407)|\n|Memory (System)|15.59GB (11.59GB free)|\n|VM|0%|\n</details><details><summary>Extensions (55)</summary>\n\nExtension|Author (truncated)|Version\n---|---|---\ncodesnap|adp|1.3.4\nincrement-selection|alb|0.2.0\nvscode-sqlite|ale|0.14.1\nvscode-bazel|Baz|0.6.0\nmarkdown-mermaid|bie|1.15.2\nmermaid-markdown-syntax-highlighting|bpr|1.5.0\nturbo-console-log|Cha|2.5.6\nnpm-intellisense|chr|1.4.2\nvscode-eslint|dba|2.2.6\njavascript-ejs-support|Dig|1.3.1\ngitlens|eam|13.0.3\nEditorConfig|Edi|0.16.4\nvsc-material-theme|Equ|33.5.0\nvsc-material-theme-icons|equ|2.4.0\nprettier-vscode|esb|9.9.0\nvscode-firefox-debug|fir|2.9.8\nshell-format|fox|7.2.2\nremotehub|Git|0.44.0\nvscode-pull-request-github|Git|0.52.0\ngo|gol|0.35.2\ntodo-tree|Gru|0.0.219\nrest-client|hum|0.25.1\nvscode-peacock|joh|4.2.2\ngit-graph|mhu|1.30.0\ndotenv|mik|1.0.1\nfile-downloader|min|1.0.12\nvscode-docker|ms-|1.22.2\nplaywright|ms-|0.2.13\npython|ms-|2022.16.1\nvscode-pylance|ms-|2022.10.30\njupyter-keymap|ms-|1.0.0\nremote-containers|ms-|0.255.4\nremote-ssh|ms-|0.90.1\nremote-ssh-edit|ms-|0.84.0\nremote-wsl|ms-|0.72.0\nvscode-remote-extensionpack|ms-|0.21.0\nremote-repositories|ms-|0.22.0\nsublime-keybindings|ms-|4.0.10\nvscode-js-profile-flame|ms-|1.0.4\nvsliveshare|ms-|1.0.5739\nvscode-react-native|msj|1.10.0\nangular-console|nrw|17.23.3\nvscode-versionlens|pfl|1.0.10\nansible|red|1.0.90\nvscode-yaml|red|1.10.1\nvscode-sort-json|ric|1.20.0\ntiltfile|til|0.0.3\nsort-lines|Tyr|1.9.1\nvscode-mdx|uni|1.0.3\nintellicode-api-usage-examples|Vis|0.2.6\nvscodeintellicode|Vis|1.2.29\nvscode-conventional-commits|viv|1.24.3\njinja|who|0.0.8\nchange-case|wma|1.0.0\nhtml-css-class-completion|Zig|1.20.0\n\n(1 theme extensions excluded)\n\n</details><details>\n<summary>A/B Experiments</summary>\n\n```\nvsliv368cf:30146710\nvsreu685:30147344\npython383cf:30185419\nvspor879:30202332\nvspor708:30202333\nvspor363:30204092\nvslsvsres303:30308271\npythonvspyl392:30443607\nvserr242:30382549\npythontb:30283811\nvsjup518:30340749\npythonptprofiler:30281270\nvshan820:30294714\nvstes263:30335439\nvscoreces:30445986\npythondataviewer:30285071\nvscod805cf:30301675\nbinariesv615:30325510\nbridge0708:30335490\nbridge0723:30353136\ncmake_vspar411:30581797\nvsaa593:30376534\npythonvs932:30410667\ncppdebug:30492333\nvsclangdf:30486550\nc4g48928:30535728\ndsvsc012:30540252\nazure-dev_surveyone:30548225\ni497e931:30553904\npyindex848cf:30577861\nnodejswelcome1cf:30587006\n40g7c324:30573242\n\n```\n\n</details>\n\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/164448/comments",
    "author": "rodrigoscna",
    "comments": [
      {
        "user": "mjbvz",
        "created_at": "2022-10-24T21:12:53Z",
        "body": "Duplicate of #160979"
      }
    ]
  },
  {
    "number": 145340,
    "title": "When split to two views, the unactive view for jupyter notebook is not fixed",
    "created_at": "2022-03-16T19:17:35Z",
    "closed_at": "2022-12-22T17:57:28Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "insiders-released",
      "notebook-layout"
    ],
    "url": "https://github.com/microsoft/vscode/issues/145340",
    "body": "\r\nIssue Type: <b>Bug</b>\r\n\r\nPerhaps it's not a bug, but when split to two different views and modify one of them, jupyter notebook doesn't work as common python file.\r\n\r\nFor example, when you try to add a lot lines from top, the unactive view would be fixed to current position, but not scroll up in common python file or jupyter notebook web version. But in vsc juypyer notebook, it scrolls up which is annoying since it would make multiple views totally meaningless.\r\n\r\nExtension version: 2022.2.1924087327\r\nVS Code version: Code 1.65.2 (c722ca6c7eed3d7987c0d5c3df5c45f6b15e77d1, 2022-03-10T14:33:55.248Z)\r\nOS version: Windows_NT x64 10.0.22000\r\nRestricted Mode: No\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|AMD Ryzen 9 5950X 16-Core Processor             (32 x 3400)|\r\n|GPU Status|2d_canvas: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>rasterization: enabled<br>skia_renderer: enabled_on<br>video_decode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled|\r\n|Load (avg)|undefined|\r\n|Memory (System)|127.92GB (84.87GB free)|\r\n|Process Argv|--crash-reporter-id de098579-2cc4-4e22-8ec0-f3fd8b564df0|\r\n|Screen Reader|no|\r\n|VM|67%|\r\n</details><details>\r\n<summary>A/B Experiments</summary>\r\n\r\n```\r\nvsliv368:30146709\r\nvsreu685:30147344\r\npython383cf:30185419\r\nvspor879:30202332\r\nvspor708:30202333\r\nvspor363:30204092\r\npythonvspyl392:30443607\r\npythontb:30283811\r\npythonptprofiler:30281270\r\nvshan820:30294714\r\nvstes263:30335439\r\npythondataviewer:30285071\r\nvscod805:30301674\r\npythonvspyt200:30340761\r\nbinariesv615:30325510\r\nbridge0708:30335490\r\nbridge0723:30353136\r\nvsaa593cf:30376535\r\ntestflightcf:30433671\r\nvsc1dst:30438360\r\npythonvs932:30410667\r\nwslgetstarted:30449410\r\nvsclayoutctrt:30451275\r\ndsvsc009:30452663\r\npythonvsnew555:30450902\r\nvscscmwlcmt:30438805\r\ndockersurvey3:30453609\r\npynewfile477cf:30450039\r\n\r\n```\r\n\r\n</details>\r\n\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/145340/comments",
    "author": "AnakinShieh",
    "comments": [
      {
        "user": "rebornix",
        "created_at": "2022-03-18T18:41:59Z",
        "body": "Thanks for the feedback, good catch."
      }
    ]
  },
  {
    "number": 138161,
    "title": "Scroll position is not preserved when custom markdown editor was closed and opened again",
    "created_at": "2021-11-30T14:34:35Z",
    "closed_at": "2022-03-17T23:06:23Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "markdown",
      "insiders-released"
    ],
    "url": "https://github.com/microsoft/vscode/issues/138161",
    "body": "Testing #138040\r\n\r\n- Open a markdown file as custom markdown preview editor\r\n- Scroll down \r\n- Close the editor and open again\r\n🐛 Scroll position is not retained\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/138161/comments",
    "author": "sandy081",
    "comments": [
      {
        "user": "babakks",
        "created_at": "2022-03-03T10:47:14Z",
        "body": "@mjbvz I'd like to fix it. I appreciate any hints."
      },
      {
        "user": "rzhao271",
        "created_at": "2022-03-24T00:06:16Z",
        "body": "It works, though I notice that after reopening, if I try scrolling immediately, it seems to take some time to register the scroll."
      }
    ]
  },
  {
    "number": 137395,
    "title": "Copy relative path key sequence",
    "created_at": "2021-11-17T22:21:41Z",
    "closed_at": "2021-11-24T13:20:16Z",
    "labels": [
      "help wanted",
      "*duplicate",
      "windows"
    ],
    "url": "https://github.com/microsoft/vscode/issues/137395",
    "body": "\r\nIssue Type: <b>Bug</b>\r\n\r\nIt says \"Ctrl+K Ctrl+Shift+C\". \r\nOn the status bar it says \"The combination Ctrl-K Ctrl+Shit+C is not a command.\"\r\n\r\nSounds like a bug to me! :)\r\n\r\n\r\nVS Code version: Code 1.62.2 (3a6960b964327f0e3882ce18fcebd07ed191b316, 2021-11-11T20:56:38.428Z)\r\nOS version: Windows_NT x64 10.0.22000\r\nRestricted Mode: No\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i7-1065G7 CPU @ 1.30GHz (8 x 1498)|\r\n|GPU Status|2d_canvas: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>rasterization: enabled<br>skia_renderer: enabled_on<br>video_decode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled|\r\n|Load (avg)|undefined|\r\n|Memory (System)|31.60GB (15.55GB free)|\r\n|Process Argv|--crash-reporter-id 257c6818-9ca6-4567-ac6d-689506cc9f38|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n</details><details><summary>Extensions (29)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\npreview-pdf|ana|1.0.0\r\nmarkdown-mermaid|bie|1.13.0\r\nvscode-task-manager|cns|0.6.0\r\ndoxdocgen|csc|1.3.2\r\nvscode-markdownlint|Dav|0.45.0\r\ngitlens|eam|11.6.1\r\nvscode-pull-request-github|Git|0.32.0\r\nbetter-cpp-syntax|jef|1.15.10\r\ncsharp|ms-|1.23.16\r\npython|ms-|2021.11.1422169775\r\nvscode-pylance|ms-|2021.11.1\r\njupyter|ms-|2021.10.1101450599\r\njupyter-keymap|ms-|1.0.0\r\njupyter-renderers|ms-|1.0.3\r\nremote-containers|ms-|0.205.2\r\nremote-ssh|ms-|0.66.1\r\nremote-ssh-edit|ms-|0.66.1\r\nremote-wsl|ms-|0.58.5\r\ncmake-tools|ms-|1.9.1\r\ncpptools|ms-|1.7.1\r\ncpptools-extension-pack|ms-|1.1.0\r\npowershell|ms-|2021.10.2\r\nvsliveshare|ms-|1.0.5090\r\nvsliveshare-audio|ms-|0.1.91\r\nvscode-taskexplorer|spm|2.5.7\r\ncmake|twx|0.0.17\r\nmarkdown-auto-toc|wib|0.3.0\r\nriscv|zhw|0.0.8\r\nlinkerscript|Zix|1.0.2\r\n\r\n(1 theme extensions excluded)\r\n\r\n</details><details>\r\n<summary>A/B Experiments</summary>\r\n\r\n```\r\nvsins829:30139715\r\nvsliv368cf:30146710\r\nvsreu685:30147344\r\nvspor879:30202332\r\nvspor708:30202333\r\nvspor363:30204092\r\nvshan820:30294714\r\nvscod805cf:30301675\r\nvsccppwt:30393681\r\nbridge0708:30335490\r\nbridge0723:30353136\r\nvsaa593cf:30376535\r\n\r\n```\r\n\r\n</details>\r\n\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/137395/comments",
    "author": "bincsh",
    "comments": [
      {
        "user": "alexdima",
        "created_at": "2021-11-18T12:36:11Z",
        "body": "I can reproduce:\r\n\r\n```\r\n/ Received  keydown event - modifiers: [ctrl], code: ControlLeft, keyCode: 17, key: Control\r\n| Converted keydown event - modifiers: [ctrl], code: ControlLeft, keyCode: 5 ('Ctrl')\r\n\\ Keyboard event cannot be dispatched in keydown phase.\r\n/ Received  keydown event - modifiers: [ctrl], code: KeyK, keyCode: 75, key: k\r\n| Converted keydown event - modifiers: [ctrl], code: KeyK, keyCode: 41 ('K')\r\n| Resolving ctrl+K\r\n\\ From 83 keybinding entries, matched chord, when: workbench.explorer.openEditorsView.active, source: built-in.\r\n/ Received  keydown event - modifiers: [ctrl,shift], code: ShiftLeft, keyCode: 16, key: Shift\r\n| Converted keydown event - modifiers: [ctrl,shift], code: ShiftLeft, keyCode: 4 ('Shift')\r\n\\ Keyboard event cannot be dispatched in keydown phase.\r\n/ Received  keydown event - modifiers: [ctrl,shift], code: KeyC, keyCode: 67, key: C\r\n| Converted keydown event - modifiers: [ctrl,shift], code: KeyC, keyCode: 33 ('C')\r\n| Resolving ctrl+shift+C chorded from ctrl+K\r\n\\ From 1 keybinding entries, no when clauses matched the context.\r\n```\r\n\r\nThe root cause is the `when` context used for the keybinding:\r\n```\r\n{ \"key\": \"ctrl+k ctrl+shift+c\",\r\n  \"command\": \"copyRelativeFilePath\",\r\n  \"when\": \"!editorFocus\" },\r\n```\r\n\r\nSo this keybinding will not work out of the box if focus is in the editor."
      },
      {
        "user": "bpasero",
        "created_at": "2021-11-24T13:19:33Z",
        "body": "/duplicate #137216"
      }
    ]
  },
  {
    "number": 130968,
    "title": "\"Error: Unable to resolve non-existing file\" on JSDoc file link",
    "created_at": "2021-08-17T06:28:31Z",
    "closed_at": "2022-02-03T16:53:10Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "javascript"
    ],
    "url": "https://github.com/microsoft/vscode/issues/130968",
    "body": "\r\nIssue Type: <b>Bug</b>\r\n\r\nWhen trying to create a link to a relative file using JSDoc and markdown like this:\r\n```js\r\n/** [link](./file.js) */\r\nconst test = 'test'\r\n```\r\nyou can try to click on the link, and it'll produce the following error:\r\n```md\r\n# Unable to open 'file.js\"'\r\nUnable to read file '\\file.js\" (Error: Unable to resolve non-existing file '\\file.js')\r\n```\r\n\r\nVS Code version: Code 1.59.0 (379476f0e13988d90fab105c5c19e7abc8b1dea8, 2021-08-04T23:13:12.822Z)\r\nOS version: Windows_NT x64 10.0.22000\r\nRestricted Mode: No\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|AMD Ryzen 7 3700X 8-Core Processor              (16 x 3593)|\r\n|GPU Status|2d_canvas: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>oop_rasterization: enabled<br>opengl: enabled_on<br>rasterization: enabled<br>skia_renderer: enabled_on<br>video_decode: enabled<br>vulkan: disabled_off<br>webgl: enabled<br>webgl2: enabled|\r\n|Load (avg)|undefined|\r\n|Memory (System)|31.93GB (15.04GB free)|\r\n|Process Argv|--crash-reporter-id b49bd496-32d9-4a43-8329-536816f85c17|\r\n|Screen Reader|no|\r\n|VM|40%|\r\n</details><details><summary>Extensions (17)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nsystemd-unit-file|coo|1.0.6\r\nvdf|GEE|0.0.7\r\nbeautify|Hoo|1.5.0\r\ndiscord-vscode|icr|5.7.0\r\nsftp|lix|1.12.9\r\nlanguague-renpy|Luq|1.1.0\r\ncsharp|ms-|1.23.14\r\npython|ms-|2021.8.1105858891\r\nvscode-pylance|ms-|2021.8.1\r\njupyter|ms-|2021.8.1195043623\r\nremote-wsl|ms-|0.58.2\r\nlive-sass|rit|3.0.0\r\nLiveServer|rit|5.6.1\r\ntypescript-initializer|Scr|0.0.2\r\nsass-indented|syl|1.8.17\r\nvscode-icons|vsc|11.6.0\r\nvscode-nginx|wil|0.7.2\r\n\r\n(1 theme extensions excluded)\r\n\r\n</details><details>\r\n<summary>A/B Experiments</summary>\r\n\r\n```\r\nvsliv368:30146709\r\nvsreu685:30147344\r\npython383:30185418\r\npythonvspyt602:30300191\r\nvspor879:30202332\r\nvspor708:30202333\r\nvspor363:30204092\r\npythonvspyt639:30300192\r\npythontb:30283811\r\npythonptprofiler:30281270\r\nvshan820:30294714\r\nvstes263:30335439\r\npythondataviewer:30285071\r\npythonvsuse255:30340121\r\nvscod805:30301674\r\npythonvspyt200:30340761\r\nvscextlangct:30333562\r\nbinariesv615:30325510\r\npythonvssor306:30344512\r\nbridge0708:30335490\r\nvstre464:30350172\r\nbridge0723cf:30351748\r\n\r\n```\r\n\r\n</details>\r\n\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/130968/comments",
    "author": "EverlyScott",
    "comments": [
      {
        "user": "AiverReaver",
        "created_at": "2021-08-20T17:00:36Z",
        "body": "can I work on this issue? @mjbvz "
      },
      {
        "user": "EverlyScott",
        "created_at": "2021-09-22T04:58:16Z",
        "body": "any updates on this?"
      },
      {
        "user": "mjbvz",
        "created_at": "2022-02-03T16:53:10Z",
        "body": "Should be fixed by #142055. Works for both images and links relative to the current file"
      },
      {
        "user": "mjbvz",
        "created_at": "2022-02-03T17:02:15Z",
        "body": "See #86564  for the issue tracking more complete support for these paths. Right now they only work properly within a file"
      }
    ]
  },
  {
    "number": 130864,
    "title": "Parameter Hints: should use link hover color",
    "created_at": "2021-08-15T20:09:22Z",
    "closed_at": "2021-08-17T15:43:20Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "editor-parameter-hints",
      "insiders-released"
    ],
    "url": "https://github.com/microsoft/vscode/issues/130864",
    "body": "Similar to #121536, #121521, #125956, #129193, #126752\r\n\r\n```js\r\n\"workbench.colorCustomizations\": {\r\n\t\"textLink.foreground\": \"#ffae00\",\r\n\t\"textLink.activeForeground\": \"#00a2ff\",\r\n}\r\n```\r\n\r\nLinks on hover in parameter hints popup should use `textLink.activeForeground`.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/130864/comments",
    "author": "usernamehw",
    "comments": [
      {
        "user": "jeanp413",
        "created_at": "2021-08-17T05:34:32Z",
        "body": "Created a PR #130963 fixing this"
      }
    ]
  },
  {
    "number": 129257,
    "title": "Terminal actions are not available for CustomExecution task output.",
    "created_at": "2021-07-23T17:18:07Z",
    "closed_at": "2021-10-19T20:42:56Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "terminal",
      "web",
      "insiders-released"
    ],
    "url": "https://github.com/microsoft/vscode/issues/129257",
    "body": "A lot of useful terminal actions are guarded by the `terminalProcessSupported` context key. However, even without process support, the `vscode.CustomExecution` mechanism used in the tasks API will stream output to terminal panels.\r\n\r\nThis means that in environment without process support, many features are not available for task output, notably including \"Terminal: Focus Find\" (Ctrl+F).\r\n\r\nCan we change the preconditions/when clauses for these actions to also enable such features for task output without process support? I see two options:\r\n1) Remove the restrictions entirely, or\r\n2) Replace `terminalProcessSupported` with something like `terminalProcessSuppported || hasCustomExecution`, where `hasCustomExecution` would be set when a task with a `vscode.CustomExecution` starts.\r\n\r\nPlease let me know if either of these make sense and if you would be open to accept a corresponding pull request.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/129257/comments",
    "author": "elmar-peise",
    "comments": [
      {
        "user": "Tyriar",
        "created_at": "2021-10-08T20:23:04Z",
        "body": "Sorry about the delay.\r\n\r\nThe restrictions are added so that we can simplify the UI such that irrelevant commands are hidden from the command palette when not needed. I think option 2 is good but maybe instead of using a hasCustomExecution context key we should have a `hasHadTerminal` one or something, which would switch on when the first terminal is created. Note that this doesn't just impact custom execution tasks but also the Pseudoterminal API which works in web too."
      },
      {
        "user": "Tyriar",
        "created_at": "2021-10-19T16:01:26Z",
        "body": "@meganrogge we should hook these up to the new context key you made."
      },
      {
        "user": "alexr00",
        "created_at": "2021-10-28T13:07:41Z",
        "body": "Verified by starting a custom execution task then making sure that the Terminal: Focus Find command works."
      }
    ]
  },
  {
    "number": 121277,
    "title": "Url encoded characters in Markdown relative paths",
    "created_at": "2021-04-14T10:32:04Z",
    "closed_at": "2021-05-12T12:01:59Z",
    "labels": [
      "bug",
      "help wanted",
      "markdown"
    ],
    "url": "https://github.com/microsoft/vscode/issues/121277",
    "body": "- VS Code Version: 1.55.2\r\n- OS Version: Windows_NT x64 10.0.19042(.867)\r\n\r\nProblem:\r\n\r\nA link in markdown like `[some C# file](C%23)/some.file` doesn't work in the peview (does nothing when pressed).\r\nHowever, it does work as intended on **github.com**\r\n\r\nDoes this issue occur when all extensions are disabled?: Yes\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/121277/comments",
    "author": "Guiorgy",
    "comments": [
      {
        "user": "jeanp413",
        "created_at": "2021-05-11T16:00:40Z",
        "body": "duplicate of #123228"
      }
    ]
  },
  {
    "number": 115366,
    "title": "Regression: Source control changes now requires manually clicking refresh button to pick up changes",
    "created_at": "2021-01-29T05:03:18Z",
    "closed_at": "2022-12-13T16:14:41Z",
    "labels": [
      "bug",
      "help wanted",
      "git"
    ],
    "url": "https://github.com/microsoft/vscode/issues/115366",
    "body": "Normally, the changes section in the source control sidebar automatically picks up changes in the given repo after the changes are saved (given that they're in a git repo). Within the last couple of days, I've had to manually refresh in order to pick up changes.\r\n\r\nNotes:\r\n- Version: 1.52.1\r\n- Using Remote SSH\r\n- Tested on multiple machines",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/115366/comments",
    "author": "zbs",
    "comments": [
      {
        "user": "zbs",
        "created_at": "2021-02-02T01:19:35Z",
        "body": "Figured it out. The issue reproes specifically when my workspace root is `/home/zbs/git/rootFolder` as opposed to the realpath of that (e.g. `realpath /home/zbs/git/rootFolder` is `/really/long/path/.../home/zbs/git/rootFolder)`. This is a bug because it catches the changes when I manually hit the refresh button in the Source Control sidebar.\r\n\r\nNote that the `home` folder is mounted onto a filesystem shared across a network."
      },
      {
        "user": "vish-sn",
        "created_at": "2022-03-24T13:01:57Z",
        "body": "I am facing issue \"need to manually refresh source control section\" on  1.65.2 (Universal) Date: 2022-03-10T14:33:49.188Z "
      },
      {
        "user": "lszomoru",
        "created_at": "2022-03-24T14:31:01Z",
        "body": "@vpatel-gb, are you facing this issue while using a network drive as described above? "
      },
      {
        "user": "lszomoru",
        "created_at": "2022-12-13T16:14:41Z",
        "body": "Closing this issue as part of our housekeeping as I have never heard back from @vpatel-gb.\nPlease feel free to reopen the issue in case you are still able to reproduce this problem. Thanks! "
      }
    ]
  },
  {
    "number": 110319,
    "title": "VSCode Git Error With Commit Signing",
    "created_at": "2020-11-10T14:36:52Z",
    "closed_at": "2021-10-12T17:45:23Z",
    "labels": [
      "bug",
      "help wanted",
      "*question",
      "macos",
      "terminal"
    ],
    "url": "https://github.com/microsoft/vscode/issues/110319",
    "body": "<!-- Use Help > Report Issue to prefill these. -->\r\n- VSCode Version: 1.51.0\r\n- OS Version: MacOs Catalina\r\n\r\nUsing the terminal to commit when git commit signing is turned on on the machine often fails at times, this doesn't happen every time but it happens occasionally like 7/10 times.\r\n\r\nSteps to Reproduce:\r\n\r\n1. Enable git code signing\r\n2. Work on some changes ready to commit\r\n3. Using the terminal to commit `git commit`\r\n4. After typing your commit message, when its meant to show the git signing wizard, it throws the error \r\n```\r\ngpg failed to sign the data\r\nfatal: failed to write commit object\r\n```\r\n\r\nTried this with other terminals, iTerm2 but can't experience same issue\r\n\r\n<!-- Launch with `code --disable-extensions` to check. -->\r\nDoes this issue occur when all extensions are disabled?: Yes\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/110319/comments",
    "author": "Quadriphobs1",
    "comments": [
      {
        "user": "Quadriphobs1",
        "created_at": "2020-12-03T18:34:01Z",
        "body": "Actually, digging further on this it only happens if there is a githook, without githook this works fine."
      },
      {
        "user": "Xmetalfanx",
        "created_at": "2021-02-12T22:05:42Z",
        "body": "Just experienced this on a KDE Neon (Linux) install, with VSCode version 1.53.2  .... it was just fine for awhile (so it's not like it never asked for the gpg passphrase) ... not sure exactly what update (to vscode or just the OS) was done when this issue started.\r\n\r\nThis is the termminal IN vscode that is doing this for me ... if I open up Konsole (Terminal) and do the same thing in the same directory/folder ... it works fine."
      },
      {
        "user": "Tyriar",
        "created_at": "2021-10-12T17:44:43Z",
        "body": "This type of issue is typically related to environment differences between VS Code's terminal and the external terminal. You can try diffing the two environments by printing them (eg. `env`, `Get-ChildItem env:`) and investigating any differences.\r\n\r\n/label *question"
      }
    ]
  },
  {
    "number": 105727,
    "title": "request: improve splitting/creation of local integrated terminal",
    "created_at": "2020-08-25T11:25:43Z",
    "closed_at": "2021-10-12T16:56:27Z",
    "labels": [
      "bug",
      "help wanted",
      "terminal",
      "*not-reproducible",
      "remote"
    ],
    "url": "https://github.com/microsoft/vscode/issues/105727",
    "body": "With a directory/workspace open in a dev-container, splitting a *local* (not in-container) terminal fails due to the root dir not existing (looking for dir in container, not in local filesystem).\r\n\r\nThis means you must create a new local terminal and cannot have them split vertically.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/105727/comments",
    "author": "phrohdoh",
    "comments": [
      {
        "user": "leojrfs",
        "created_at": "2021-02-22T15:24:06Z",
        "body": "I can confirm this issue"
      },
      {
        "user": "phrohdoh",
        "created_at": "2021-10-12T17:35:55Z",
        "body": "I am running VSCode\r\n```\r\nVersion: 1.61.0\r\nCommit: ee8c7def80afc00dd6e593ef12f37756d8f504ea\r\nDate: 2021-10-07T18:11:58.853Z\r\nElectron: 13.5.1\r\nChrome: 91.0.4472.164\r\nNode.js: 14.16.0\r\nV8: 9.1.269.39-electron.0\r\nOS: Darwin x64 20.6.0\r\n```\r\nand can confirm this is no longer an issue 👍\r\n\r\nThank you VSC team (and all of those working on the dependencies)!"
      }
    ]
  },
  {
    "number": 101569,
    "title": "vscode.workspace.getWorkspaceFolder does not check if file exists (or API documentation is not clear)",
    "created_at": "2020-07-02T06:48:35Z",
    "closed_at": "2020-09-02T02:26:26Z",
    "labels": [
      "help wanted",
      "feature-request",
      "api"
    ],
    "url": "https://github.com/microsoft/vscode/issues/101569",
    "body": "Issue Type: <b>Bug</b>\r\n\r\nHi,\r\n\r\nit looks like `vscode.workspace.getWorkspaceFolder` only checks if the uri matches any of the workspace folders uri. It does not check if the file actually exists in the folder.\r\nFor example if I have workspace folder which path `C:\\ps\\build\\engine` then `getWorkspaceFolder('C:\\ps\\build\\engine\\doesNotExist.txt')` returns this workspace folder.\r\nIn other words, following always returns the folder: `vscode.workspace.getWorkspaceFolder(vscode.Uri.file(path.join(vscode.workspace.workspaceFolders[0].uri.fsPath, \"does not exists.txt\")))`\r\n\r\nIt might be that current behaviour is correct. But then, the API documentation is not clear in my opinion. Currently it says:\r\n\r\n> Returns the workspace folder that contains a given uri.\r\n> - returns undefined when the given uri doesn't match any workspace folder\r\n> - returns the input when the given uri is a workspace folder itself\r\n\r\n\r\n### Actual results:\r\n\r\n`vscode.workspace.getWorkspaceFolder`  does not check if file exists.\r\n\r\n### Expected results:\r\n\r\nEither:\r\n* `vscode.workspace.getWorkspaceFolder` checks if file exists - returns only if folder actually contains the specified uri, or\r\n* make API documentation more clear about how the function works\r\n\r\n\r\n### System details\r\n\r\nVS Code version: Code 1.46.1 (cd9ea6488829f560dc949a8b2fb789f3cdc05f5d, 2020-06-17T21:13:20.174Z)\r\nOS version: Windows_NT x64 10.0.18363\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|AMD Ryzen 7 2700X Eight-Core Processor          (16 x 3693)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>oop_rasterization: disabled_off<br>protected_video_decode: unavailable_off<br>rasterization: enabled<br>skia_renderer: disabled_off_ok<br>video_decode: enabled<br>viz_display_compositor: enabled_on<br>viz_hit_test_surface_layer: disabled_off_ok<br>webgl: enabled<br>webgl2: enabled|\r\n|Load (avg)|undefined|\r\n|Memory (System)|15.95GB (5.71GB free)|\r\n|Process Argv||\r\n|Screen Reader|no|\r\n|VM|0%|\r\n</details><details><summary>Extensions (2)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\njenkinsfile-support|ivo|1.1.0\r\nvscode-typescript-tslint-plugin|ms-|1.2.3\r\n\r\n\r\n</details>\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/101569/comments",
    "author": "pkrukp",
    "comments": [
      {
        "user": "bpasero",
        "created_at": "2020-07-03T07:27:08Z",
        "body": "I suggest we tweak the API docs to not break. Up for grab."
      }
    ]
  },
  {
    "number": 96640,
    "title": "Source Control stages Merge Changes when trying to stage all Changes",
    "created_at": "2020-04-29T20:39:14Z",
    "closed_at": "2020-05-27T13:38:31Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "git",
      "good first issue"
    ],
    "url": "https://github.com/microsoft/vscode/issues/96640",
    "body": "Issue Type: <b>Bug</b>\r\n\r\nDuring a rebase (not sure if that's the only scenario), my SOURCE CONTROL tab display three sections, MERGE CHANGES, STAGED CHANGES and CHANGES. \r\n\r\nIf I click the + button on the CHANGES section, in order to stage all items below CHANGES, VS Code also adds everything on MERGE CHANGES.\r\n\r\nVS Code version: Code - Insiders 1.45.0-insider (4bd206856db30c27d38aa0f1fbe74bac6156edc7, 2020-04-29T05:33:59.143Z)\r\nOS version: Windows_NT x64 10.0.18363\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz (8 x 3592)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>oop_rasterization: disabled_off<br>protected_video_decode: unavailable_off<br>rasterization: enabled<br>skia_renderer: disabled_off_ok<br>video_decode: enabled<br>viz_display_compositor: enabled_on<br>viz_hit_test_surface_layer: disabled_off_ok<br>webgl: enabled<br>webgl2: enabled|\r\n|Load (avg)|undefined|\r\n|Memory (System)|7.94GB (1.28GB free)|\r\n|Process Argv||\r\n|Screen Reader|no|\r\n|VM|0%|\r\n</details><details><summary>Extensions (19)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nmarkdown-mermaid|bie|1.5.0\r\nbetter-toml|bun|0.3.2\r\nvscode-eslint|dba|2.1.5\r\ngitlens|eam|10.2.1\r\nplantuml|jeb|2.13.8\r\nsvg|joc|1.1.8\r\nvscode-peacock|joh|3.7.0\r\nchat|kar|0.33.0\r\nrust-analyzer|mat|0.2.151\r\nvscode-todo-parser|min|1.9.1\r\nremote-wsl|ms-|0.44.2\r\nvsliveshare|ms-|1.0.2104\r\nvsliveshare-audio|ms-|0.1.85\r\nvsliveshare-pack|ms-|0.3.4\r\nvscode-xml|red|0.11.0\r\nvscode-yaml|red|0.7.2\r\ncrates|ser|0.4.9\r\nvscode-hexdump|sle|1.7.2\r\nmarkdown-all-in-one|yzh|2.8.0\r\n\r\n\r\n</details>\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/96640/comments",
    "author": "bruno-brant",
    "comments": [
      {
        "user": "pfongkye",
        "created_at": "2020-05-08T21:07:30Z",
        "body": "Hello @joaomoreno @bruno-brant \r\nI would like to work on this issue if no one else is.\r\nRegards."
      },
      {
        "user": "swapnilmisal",
        "created_at": "2020-05-11T21:33:04Z",
        "body": "@joaomoreno hey could you please review the pr that I have opened and also could you please suggest any changes if required. "
      },
      {
        "user": "pfongkye",
        "created_at": "2020-05-12T08:11:41Z",
        "body": "Hi @swapnilmisal \r\nI'm also working on this issue. You can check my PR #97349 "
      },
      {
        "user": "swapnilmisal",
        "created_at": "2020-05-12T16:24:01Z",
        "body": "@pfongkye I have gone through your PR also left a comment."
      }
    ]
  },
  {
    "number": 95583,
    "title": "pdksh, dash, mksh, posh, hushlogin not highlighting as shell script code",
    "created_at": "2020-04-18T04:28:09Z",
    "closed_at": "2020-05-13T08:04:19Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "languages-basic",
      "verification-needed"
    ],
    "url": "https://github.com/microsoft/vscode/issues/95583",
    "body": "<!-- ⚠️⚠️ Do Not Delete This! bug_report_template ⚠️⚠️ -->\r\n\r\nVSCode does a decent job highlighting many different shell script languages. But it doesn't seem to be aware that pdksh, dash, mksh, and posh, especially configuration files like `.hushlogin` and shebanged extensionless scripts, are POSIXy shell scripts. They just highlight as Plain Text files instead.\r\n\r\nSame for `.tcshrc`, that's a Tcsh shell script.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/95583/comments",
    "author": "mcandre",
    "comments": [
      {
        "user": "aeschli",
        "created_at": "2020-04-20T11:56:27Z",
        "body": "PR welcome!"
      }
    ]
  },
  {
    "number": 94903,
    "title": "Search freezes computer when large files are present in workspace",
    "created_at": "2020-04-10T12:36:52Z",
    "closed_at": "2024-12-10T23:04:57Z",
    "labels": [
      "help wanted",
      "feature-request",
      "search"
    ],
    "url": "https://github.com/microsoft/vscode/issues/94903",
    "body": "\r\nIssue Type: <b>Bug</b>\r\n\r\nI have several big text files in my workspace (over ten files  ~10gb each). And when I try to search something globally whole computer stops working, I can't even move the mouse or open terminal, and probably all the files are loaded to memory. And also I have 'Max Memory For Large Files MB' set to 4gb\r\n\r\nVS Code version: Code 1.44.0 (2aae1f26c72891c399f860409176fe435a154b13, 2020-04-08T11:22:13.689Z)\r\nOS version: Linux x64 5.3.0-42-generic\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i7-8550U CPU @ 1.80GHz (8 x 2800)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>oop_rasterization: disabled_off<br>protected_video_decode: unavailable_off<br>rasterization: disabled_software<br>skia_renderer: disabled_off_ok<br>video_decode: unavailable_off<br>viz_display_compositor: enabled_on<br>viz_hit_test_surface_layer: disabled_off_ok<br>webgl: enabled<br>webgl2: enabled|\r\n|Load (avg)|1, 1, 2|\r\n|Memory (System)|23.36GB (8.48GB free)|\r\n|Process Argv|--no-sandbox --unity-launch|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n</details><details><summary>Extensions (40)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nhtml-snippets|abu|0.2.1\r\ncode-gnu-global|aus|0.2.2\r\nvscode-node-readme|ben|3.0.2\r\nsimple-react-snippets|bur|1.2.2\r\ngitignore|cod|0.6.0\r\nes7-react-js-snippets|dsz|2.7.1\r\ngitlens|eam|10.2.1\r\nvscode-html-css|ecm|0.2.3\r\nvscode-npm-script|eg2|0.3.11\r\ncode-runner|for|0.9.17\r\ngc-excelviewer|Gra|2.1.34\r\nCppSnippets|har|0.0.14\r\nsmarty|imp|0.3.0\r\npath-autocomplete|ion|1.13.6\r\nsearch-node-modules|jas|1.3.0\r\nmarkdownfromcsv|joj|1.0.6\r\nibm-assembler|kel|0.6.0\r\nnode-module-intellisense|lei|1.5.0\r\ncsharpfixformat|Leo|0.0.84\r\nrainbow-csv|mec|1.6.0\r\nvscode-docker|ms-|1.0.0\r\ncsharp|ms-|1.21.16\r\npython|ms-|2020.3.71659\r\ncpptools|ms-|0.27.0\r\nvscode-typescript-tslint-plugin|ms-|1.2.3\r\nhades-assembler|pir|0.0.1\r\nmaterial-icon-theme|PKi|4.0.1\r\ntypescript-hero|rbb|3.0.0\r\nruby|reb|0.27.0\r\nsass-indented|rob|1.5.1\r\ntrailing-spaces|sha|0.3.1\r\nascii-plist|spe|1.0.3\r\nautoimport|ste|1.5.3\r\nvs-code-node-require|tgr|1.4.7\r\nvsfire|tob|1.4.1\r\nvscode-status-bar-format-toggle|tom|2.0.0\r\nlorem-ipsum|Tyr|1.2.0\r\nerrorlens|use|3.1.0\r\nvscode-ruby|win|0.27.0\r\nhtml-css-class-completion|Zig|1.19.0\r\n\r\n(2 theme extensions excluded)\r\n\r\n</details>\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/94903/comments",
    "author": "RobMin",
    "comments": [
      {
        "user": "roblourens",
        "created_at": "2020-04-10T18:14:25Z",
        "body": "That setting is not hooked up to search. I should either use that setting for search, or add a new setting."
      },
      {
        "user": "eleanorjboyd",
        "created_at": "2024-12-10T23:04:51Z",
        "body": "Closing as this issue is stale and the search feature area has had many improvements since 2020. If you feel this issue is still relevant, please create a new issue, with updated information as this will allow us to have an better discussion about the state of the product at the current moment. Thanks!"
      }
    ]
  },
  {
    "number": 92507,
    "title": "[BUG] [Regression] \"Rename failed to execute\" when renaming a variable in TypeScript",
    "created_at": "2020-03-11T17:28:48Z",
    "closed_at": "2020-04-27T12:38:03Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "rename"
    ],
    "url": "https://github.com/microsoft/vscode/issues/92507",
    "body": "Regression on \r\n\"Rename failed to execute\" when renaming a variable in TypeScript #81125\r\n\r\nVersion: 1.43.0 (user setup)\r\nCommit: 78a4c91400152c0f27ba4d363eb56d2835f9903a\r\nDate: 2020-03-09T19:47:57.235Z\r\nElectron: 7.1.11\r\nChrome: 78.0.3904.130\r\nNode.js: 12.8.1\r\nV8: 7.8.279.23-electron.0\r\nOS: Windows_NT x64 10.0.18363",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/92507/comments",
    "author": "jsgoupil",
    "comments": [
      {
        "user": "mjbvz",
        "created_at": "2020-03-11T20:17:21Z",
        "body": "Please provide example code and steps to reproduce"
      },
      {
        "user": "jsgoupil",
        "created_at": "2020-03-11T20:30:16Z",
        "body": "@mjbvz Same exact steps and *video* from the other bug."
      },
      {
        "user": "mjbvz",
        "created_at": "2020-03-11T20:51:44Z",
        "body": "Please share code (as text)!"
      },
      {
        "user": "mjbvz",
        "created_at": "2020-03-11T20:53:14Z",
        "body": "Or is this for all code? We get a lot of issue reports so please include all required info upfront to save everyone time"
      },
      {
        "user": "jsgoupil",
        "created_at": "2020-03-11T21:28:26Z",
        "body": "It would have saved time if there were unit tests with the previous bug fix.\r\n\r\n> Steps to Reproduce:\r\n> \r\n> Open a TypeScript file\r\n> Click on a variable\r\n> Press F2\r\n> Click on the variable above the rename box that opened (you should be clicking in the code)\r\n> Click in the rename box to put back the focus where you want to rename.\r\n> Rename the variable and press Enter.\r\n> ACTUAL:\r\n> Rename failed to execute\r\n> \r\n> EXPECTED:\r\n> Rename the variable appropriately.\r\n\r\n> I can definitely repro.\r\n> I think it has one more \"rule\" to this.\r\n> When you click back on the variable, you have to change the cursor position.\r\n> So if your variable is \"hello\" and your cursor is positioned at the end of the word. Press F2, then move the cursor between the two \"L\".\r\n> \r\n> Attached video.\r\n> ● after-view-init.directive.ts - MapRadius.Web.Client - Visual Studio Code - Insiders 2019-09-23 21-40-10.mp4.zip"
      },
      {
        "user": "mjbvz",
        "created_at": "2020-04-09T23:48:46Z",
        "body": "@jrieken I think this broken during the rename preview refactoring. Can you please take a look?"
      },
      {
        "user": "jsgoupil",
        "created_at": "2020-04-27T14:13:07Z",
        "body": "Thanks for fixing this! Greatly appreciated.\r\nDo you guys write some unit tests for for bugs like this? This one crept up twice in less than 1 year."
      }
    ]
  },
  {
    "number": 91427,
    "title": "snippets don't expand on long lines",
    "created_at": "2020-02-25T17:27:06Z",
    "closed_at": "2020-03-04T12:09:53Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "snippets"
    ],
    "url": "https://github.com/microsoft/vscode/issues/91427",
    "body": "Issue Type: <b>Bug</b>\r\n\r\nIn a line of a file that's long enough to not have syntax highlighting, snippet expension does not work either.  I had an XML file, formatted for small size instead of readability, and with a custom snippet that normaly expands on \"e\", I instead got a pair of \"em\" tags.  If I added a couple of line breaks such that I had syntax highlighting, and tried again, then I got my custom snippet.\r\n\r\nVS Code version: Code 1.42.1 (c47d83b293181d9be64f27ff093689e8e7aed054, 2020-02-11T14:45:59.656Z)\r\nOS version: Windows_NT x64 10.0.17134\r\n\r\n\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/91427/comments",
    "author": "af4jm",
    "comments": [
      {
        "user": "jrieken",
        "created_at": "2020-02-26T08:27:27Z",
        "body": "Yes - we have done this on purpose. I don't recall the exact reasons but it is because snippet completions need to loop over the current line prefix. Tho, we might be able to find a better solution here. Having said that, you can always use \"F1 > Insert Snippet\""
      },
      {
        "user": "roblourens",
        "created_at": "2020-04-02T19:10:12Z",
        "body": "I wasn't able to repro the original issue in stable, is it just\r\n\r\n- Have an extremely long line\r\n- At the end of it, trigger suggest\r\n- Pick a snippet\r\n\r\nIt seems to expand fine"
      },
      {
        "user": "roblourens",
        "created_at": "2020-04-06T17:10:30Z",
        "body": "Ping @jrieken "
      },
      {
        "user": "jrieken",
        "created_at": "2020-04-07T07:00:25Z",
        "body": "Trigger IntelliSense on column 10001 or higher and make sure that you see snippet suggestions"
      }
    ]
  },
  {
    "number": 90589,
    "title": "Expand selection in words with underscores is inconsistent",
    "created_at": "2020-02-13T12:01:05Z",
    "closed_at": "2020-02-17T16:05:09Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "good first issue",
      "smart-select"
    ],
    "url": "https://github.com/microsoft/vscode/issues/90589",
    "body": "\r\nIssue Type: <b>Bug</b>\r\n\r\n1. Open any file which contains word consisting of letters with underscores (f.e. hello_world). For simplicity let's assume only one underscore is present.\r\n2. Place cursor in various places of this word and activate expand selection command (either via keyboard shortcut or keybinding)\r\n3. Observe:\r\n 3a. cursor is not near underscore (underscore is not immediately to the left or right of cursor) - part of the word selected, bounded by word beginning/end and underscore - OK\r\n 3b. underscore is immediately left to the cursor - part of word to the right of cursor is selected - OK\r\n 3c. underscore is immediately right to the cursor - the whole word is selected - UNEXPECTED.\r\n\r\nFor 3c I expected only part of the word selected as well, not the whole word.\r\n\r\nVS Code version: Code 1.42.0 (ae08d5460b5a45169385ff3fd44208f431992451, 2020-02-06T10:51:34.058Z)\r\nOS version: Windows_NT x64 10.0.18362\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i7-8650U CPU @ 1.90GHz (8 x 2112)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: disabled_software<br>metal: disabled_off<br>multiple_raster_threads: enabled_on<br>oop_rasterization: disabled_off<br>protected_video_decode: enabled<br>rasterization: enabled<br>skia_renderer: disabled_off<br>surface_control: disabled_off<br>surface_synchronization: enabled_on<br>video_decode: enabled<br>viz_display_compositor: enabled_on<br>viz_hit_test_surface_layer: disabled_off<br>webgl: enabled_readback<br>webgl2: enabled_readback|\r\n|Load (avg)|undefined|\r\n|Memory (System)|15.75GB (4.81GB free)|\r\n|Process Argv||\r\n|Screen Reader|no|\r\n|VM|0%|\r\n</details><details><summary>Extensions (10)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nquick-open-prefill-selection|col|0.0.1\r\nvscode-eslint|dba|2.0.15\r\ngitlens|eam|10.2.1\r\nEditorConfig|Edi|0.14.4\r\nvscode-great-icons|emm|2.1.47\r\nintellij-idea-keybindings|k--|0.2.37\r\ncamelcasenavigation|map|1.1.1\r\nmaterial-icon-theme|PKi|3.9.3\r\npartial-diff|ryu|1.4.1\r\nterminal-tabs|Tyr|0.2.0\r\n\r\n(5 theme extensions excluded)\r\n\r\n</details>\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/90589/comments",
    "author": "artem-karpenko",
    "comments": [
      {
        "user": "vhpgomes",
        "created_at": "2020-02-15T01:29:36Z",
        "body": "Tried to fix this in the PR #90736\r\n\r\nPS - this is my first PR for a OSS, ever... please forgive me for any mistake or misconduct."
      }
    ]
  },
  {
    "number": 90025,
    "title": "Comments with apostrophes disrupt code block indentation",
    "created_at": "2020-02-04T19:31:29Z",
    "closed_at": "2021-10-20T01:07:51Z",
    "labels": [
      "bug",
      "help wanted",
      "typescript",
      "javascript",
      "editor-autoindent"
    ],
    "url": "https://github.com/microsoft/vscode/issues/90025",
    "body": "Issue Type: <b>Bug</b>\r\n\r\nI only tested in javascript.\r\n\r\nCommented apostrophes on the same line as code that makes up a block will cause all lines after in a block of code to be indented incorrectly when you run the command 'Reindent Lines' via ctrl + shift + P\r\n\r\n```\r\n// good indent\r\nif() {\r\n    if() {\r\n        \r\n    } else {\r\n        \r\n    }\r\n}\r\n```\r\n\r\n```\r\n// bad indent\r\nif() { //'\r\n\r\nif() {\r\n    \r\n} else {\r\n    \r\n}\r\n}\r\n```\r\n\r\nVS Code version: Code - Insiders 1.42.0-insider (705f01577dd37d6f17eaa683ab89b0c392fa1a7c, 2020-02-03T14:02:55.075Z)\r\nOS version: Windows_NT x64 10.0.18362\r\n\r\n\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/90025/comments",
    "author": "ariffjeff",
    "comments": [
      {
        "user": "eamodio",
        "created_at": "2020-02-04T19:41:07Z",
        "body": "I can reproduce this with other characters as well \r\n```\r\n`\"'\r\n```"
      },
      {
        "user": "rebornix",
        "created_at": "2020-11-11T22:37:57Z",
        "body": "We have increase indentation rules like\r\n\r\n```\r\n^((?!\\/\\/).)*(\\{[^}\"'`]*|\\([^)\"'`]*|\\[[^\\]\"'`]*)$\r\n```\r\n\r\nand the part which leads to this issue is \r\n\r\n```\r\n\\{[^}\"'`]*\r\n```\r\n\r\n`{\"` will then not match"
      },
      {
        "user": "rebornix",
        "created_at": "2020-11-11T22:41:18Z",
        "body": "@mjbvz the `onEnter` rules have higher priority than the indentation rules, so if tweaking the indentations is too complex, we can probably add a new onEnter rule for this case in particular."
      },
      {
        "user": "mjbvz",
        "created_at": "2021-10-20T01:07:51Z",
        "body": "I'm closing this issue since we have not seen other reports or any 👍  on it since it was opened\r\n\r\nWe'd still take a PR if someone wants to investigate this. In general though, I suggest enabling `formatOnType` as it fixes almost all of these types of on-enter issues"
      }
    ]
  },
  {
    "number": 88034,
    "title": "No commit possible from GUI after resolving all merge conflicts",
    "created_at": "2020-01-03T10:16:05Z",
    "closed_at": "2022-12-13T21:08:42Z",
    "labels": [
      "bug",
      "help wanted",
      "git"
    ],
    "url": "https://github.com/microsoft/vscode/issues/88034",
    "body": "When having resolved all the merge conflicts from within VS Code, the resolved issues/file is not visible under \"Staged Changes\" and doing a \"Commit All\" in the action-menu, will return the error that there is nothing to commit.\r\n\r\nWorkaround: a manual \"git commit\" from the terminal will do the commit properly.\r\n\r\nI am using v1.41.1",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/88034/comments",
    "author": "giliambreems",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2020-01-14T10:54:12Z",
        "body": "@giliambreems Can you provide specific and exact steps so other people can reproduce your issue?"
      },
      {
        "user": "CherryDT",
        "created_at": "2021-08-03T14:20:20Z",
        "body": "Maybe your change resolution ended up in keeping everything as is, i.e. no changes? In this case it's a duplicate of #7989 and already fixed by now (there is now an option to click \"Create Empty Commit\" when this message appears)."
      },
      {
        "user": "lszomoru",
        "created_at": "2022-12-13T21:08:42Z",
        "body": "@giliambreems, since the issue has been last updated we have made quite some improvements to this flow. \nI will go ahead and optimistically close this issue but in case you are still able to reproduce the issue please feel free to reopen the issue. Thanks!"
      }
    ]
  },
  {
    "number": 87290,
    "title": "Restore existing multi-root workspaces when opening N folders from the command line",
    "created_at": "2019-12-18T22:46:57Z",
    "closed_at": "2021-01-03T03:01:09Z",
    "labels": [
      "help wanted",
      "feature-request",
      "workbench-multiroot",
      "workbench-cli"
    ],
    "url": "https://github.com/microsoft/vscode/issues/87290",
    "body": "Issue Type: <b>Bug</b>\r\n\r\nI am programmatically opening VSC with multiple roots like this:\r\ncode.exe \"C:\\...\\Folder1\" \"C:\\...\\Folder2\" \"C:\\...\\Folder1\\SomeFile.txt\"\r\n\r\nThis will open VSC with a multi-root workspace. So far so good.\r\n\r\nThe annoying thing happens when\r\n1) running the same cmd line again while VSC is open\r\n2) closing VSC and running the same command line again\r\n\r\nIn scenario 1) I would expect VSC to just appear in the foreground and make sure \"SomeFile.txt\" is selected. Same if I used a slight variation of the command line to open a different file (but still using the same folders).\r\nHowever, instead it just launches as a second instance of VSC with the exact same configuration, so typically the user now needs to close one of them.\r\n\r\nIn scenario 2) I would expect VSC to open once. What happens though, is that it actually opens TWICE ! As far as I can tell, what happens is that VSC launches and sees that last time it was open with this multi-root configuration, so it restores that configuration. It then additionally follows the command line instructions and thus opens a second instance with that multi-root setup, which happens to be the exact same.\r\n\r\nThe results of scenario 2) are particularly annoying. The only way to prevent this ONCE is to manually select \"Close Workspace\" before closing VSC. But the user would need to do that every single time and there is no way programmatically to prevent this behavior (afaik).\r\n\r\nI tried adding \"--new-window\" and \"--reuse-window\", but both have unintended effects. \"-n\" just always opens a new window, which is not what I want, and \"-r\" just always reuses the existing window, which is also not what I want.\r\n\r\nGenerally, I want VSC to use the given folders to detect whether the exact same multi-root configuration is already open atm and then either reuse a window or launch a new one, if needed. Once that is decided, the files given via the command line should get opened.\r\n\r\n\r\n\r\n\r\nVS Code version: Code 1.41.0 (9579eda04fdb3a9bba2750f15193e5fafe16b959, 2019-12-11T18:37:42.077Z)\r\nOS version: Windows_NT x64 10.0.18362\r\n\r\n\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/87290/comments",
    "author": "jankrassnigg",
    "comments": [
      {
        "user": "bpasero",
        "created_at": "2019-12-19T14:01:45Z",
        "body": "Yes, what is missing here is knowing that those folders are already opened inside a window and then using that window instead of opening another window. I am open for PRs in this area to improve this."
      },
      {
        "user": "epfeiffe",
        "created_at": "2020-11-03T18:59:13Z",
        "body": "I am able to work on both Scenario 1 and Scenario 2. @bpasero do you mind if I start and submit a pull request when I'm done?"
      },
      {
        "user": "epfeiffe",
        "created_at": "2020-11-12T17:18:22Z",
        "body": "I am working on this bug fix now. I'll try to have a pull request up for it in about a week or so!"
      },
      {
        "user": "epfeiffe",
        "created_at": "2020-12-03T20:53:02Z",
        "body": "Just submitted a pull request that is ready for review: #111845"
      }
    ]
  },
  {
    "number": 86813,
    "title": "Add setting to make Git: Fetch (Prune) default behaviour for Git Fetch And Pull",
    "created_at": "2019-12-12T11:13:20Z",
    "closed_at": "2020-11-04T14:44:02Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "git",
      "good first issue",
      "verification-needed",
      "on-release-notes",
      "insiders-released"
    ],
    "url": "https://github.com/microsoft/vscode/issues/86813",
    "body": "There have been some closed issues such as #78366 that are somewhat similar to this, but with a key difference: they assume local branch is not deleted. However, the problem is: when a remote branch is deleted and its local branch is deleted too, VSCode still does show **not-existing-anywhere** branches in branch checkout pull-down until Git: Fetch (Prune) is used. I have confirmed that those branches in checkout pulldown still persist after restarting vscode.\r\n\r\nWhile this may indeed be about git itself, since `Git: Fetch (Prune)` has been implemented in vscode; my suggestion is that it is only natural to add an option in settings such as `git.pruneOnFetch: True` to append the `--prune` flag to git fetch and pull operations, making this default behaviour if user so chooses. This will avoid the need to run Git: Fetch (Prune) once in a while, and will have the benefit of keeping the checkout pulldown clean.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/86813/comments",
    "author": "tgoncuoglu",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2020-01-14T11:18:21Z",
        "body": "Let's add a setting, but not have it enabled by default."
      },
      {
        "user": "Manish-Giri",
        "created_at": "2020-01-15T05:20:53Z",
        "body": "Hello, can I work on this?"
      },
      {
        "user": "tgoncuoglu",
        "created_at": "2020-11-04T18:47:16Z",
        "body": "Thank you very much !"
      }
    ]
  },
  {
    "number": 86722,
    "title": "Provide Editor Font Size with `px` unit to Webviews",
    "created_at": "2019-12-11T07:45:39Z",
    "closed_at": "2019-12-11T23:41:55Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "good first issue"
    ],
    "url": "https://github.com/microsoft/vscode/issues/86722",
    "body": "Issue Type: <b>Feature Request</b>\r\n\r\nAs an extension developer I can style my Webview from the CSS `var`s, except for `--vscode-editor-font-size` which is provided as a number without units. So in my CSS I need to hard code the font size, like so:\r\n\r\n```scss\r\n  font-size: 15px; // var(--vscode-editor-font-size);\r\n```\r\n\r\nI need a `var` including the `px` unit, like with `--vscode-font-size`.\r\n\r\nVS Code version: Code - Insiders 1.41.0-insider (9579eda04fdb3a9bba2750f15193e5fafe16b959, 2019-12-10T21:42:59.146Z)\r\nOS version: Darwin x64 19.0.0\r\n\r\n\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/86722/comments",
    "author": "PEZ",
    "comments": [
      {
        "user": "PEZ",
        "created_at": "2019-12-11T12:13:36Z",
        "body": "I found a workaround for now, maybe someone else has use for it.\r\n\r\nI set the style attribute of the html element to the result of:\r\n\r\n```js\r\ngetComputedStyle(document.body).getPropertyValue('--vscode-editor-font-size')\r\n```\r\n\r\nwith `px` concatenated."
      },
      {
        "user": "eamodio",
        "created_at": "2019-12-11T14:54:48Z",
        "body": "FYI, You can also read that value and write your own version (or overwrite the same one) with px added."
      }
    ]
  },
  {
    "number": 84174,
    "title": "PseudoTerminal.open isn't called in some circumstances",
    "created_at": "2019-11-08T00:13:00Z",
    "closed_at": "2019-11-19T18:57:32Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "terminal"
    ],
    "url": "https://github.com/microsoft/vscode/issues/84174",
    "body": "I have the following problem in one of the extensions:\r\n- Extension uses Terminal.create with Pseudoterminal API\r\n- In some circumstances pseudoterminal.open isn't called, though, when I resize and close it, events come\r\n\r\nIn extHostTerminalService I found the following code:\r\n```\r\n\t\tlet retries = 5;\r\n\t\twhile (retries-- > 0) {\r\n\t\t\tif (this._terminalProcesses[id]) {\r\n\t\t\t\t(this._terminalProcesses[id] as ExtHostPseudoterminal).startSendingEvents(initialDimensions);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tawait timeout(50);\r\n\t\t}\r\n```\r\n\r\nIt gives only 250ms for terminal to create and it seems that in my circumstances it's not enough. What's worse not even an error message is displayed. It's completely ignored. Could you do something around it, please?",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/84174/comments",
    "author": "solomatov",
    "comments": [
      {
        "user": "connor4312",
        "created_at": "2019-12-05T21:59:50Z",
        "body": "@Tyriar could you add steps for this?"
      },
      {
        "user": "Tyriar",
        "created_at": "2019-12-05T22:11:41Z",
        "body": "@connor4312 I don't know how to reproduce the problem, an extra code review of the PR might be good enough?\r\n\r\n@solomatov could you verify whether the fix worked?"
      },
      {
        "user": "connor4312",
        "created_at": "2019-12-05T22:16:20Z",
        "body": "Code lgtm"
      },
      {
        "user": "solomatov",
        "created_at": "2019-12-06T04:14:23Z",
        "body": "@Tyriar The PR fixes the repro for the problem I had. I haven't encountered this error in other circumstance.s"
      },
      {
        "user": "Tyriar",
        "created_at": "2019-12-06T18:02:41Z",
        "body": "@solomatov thanks, the best verification is from the OP 😃 "
      }
    ]
  },
  {
    "number": 84156,
    "title": "Webview steals focus?",
    "created_at": "2019-11-07T20:26:37Z",
    "closed_at": "2021-10-21T00:44:42Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "webview"
    ],
    "url": "https://github.com/microsoft/vscode/issues/84156",
    "body": "Issue Type: <b>Bug</b>\r\n\r\n1. Open markdown preview\r\n1. Click branch icon in status bar\r\n1. Click (with mouse) `Create new branch...`\r\n1. The input is not focused\r\n\r\nVS Code version: Code 1.40.0 (86405ea23e3937316009fc27c9361deee66ffbf5, 2019-11-06T17:02:13.381Z)\r\nOS version: Windows_NT x64 10.0.18362\r\n\r\n\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/84156/comments",
    "author": "usernamehw",
    "comments": [
      {
        "user": "Wowol",
        "created_at": "2019-11-19T08:38:21Z",
        "body": "I would like to have a go at this."
      },
      {
        "user": "mjbvz",
        "created_at": "2021-10-21T00:44:42Z",
        "body": "I'm not able to reproduce this with VS Code insiders following the instructions so hopefully this has already been fixed\r\n\r\nTested on Windows and MacOS\r\n\r\n"
      }
    ]
  },
  {
    "number": 80870,
    "title": "Support QuickDiffProvider without SourceControl",
    "created_at": "2019-09-13T14:59:53Z",
    "closed_at": "2020-11-11T14:35:47Z",
    "labels": [
      "help wanted",
      "feature-request",
      "api",
      "*out-of-scope"
    ],
    "url": "https://github.com/microsoft/vscode/issues/80870",
    "body": "I have a requirement to show a quick diff on a document from a custom TextDocumentContentProvider. Currently the only way to do this is to create a new SourceControl which also affects the Source Control UI.\r\n\r\nIs it possible to expose a quickDiffProvider property on either a document or editor level so its possible to use without affecting the Source Control UI.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/80870/comments",
    "author": "nbransby",
    "comments": [
      {
        "user": "joelpryde",
        "created_at": "2019-10-01T07:40:22Z",
        "body": "This would be incredibly useful.  I've been looking for this functionality as well."
      }
    ]
  },
  {
    "number": 79727,
    "title": "Add keyboard shortcut to focus settings tree",
    "created_at": "2019-08-23T23:53:44Z",
    "closed_at": "2020-03-02T15:50:49Z",
    "labels": [
      "help wanted",
      "feature-request",
      "settings-editor"
    ],
    "url": "https://github.com/microsoft/vscode/issues/79727",
    "body": "Would be useful to get back to the settings tree in one keypress. Requested via email.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/79727/comments",
    "author": "roblourens",
    "comments": [
      {
        "user": "ghost",
        "created_at": "2020-03-02T02:40:41Z",
        "body": "Hi roblourens, is it a good first issue ?"
      },
      {
        "user": "roblourens",
        "created_at": "2020-03-02T15:50:49Z",
        "body": "All we need is to decide what the keybinding should be. Since it's possible for users to set this themselves, and this issue has no 👍, I'm just going to close it."
      }
    ]
  },
  {
    "number": 79579,
    "title": "Japanese GUI font-family",
    "created_at": "2019-08-21T16:06:23Z",
    "closed_at": "2019-09-18T22:34:41Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "l10n-platform",
      "windows"
    ],
    "url": "https://github.com/microsoft/vscode/issues/79579",
    "body": "I suggest about Japanese GUI font-family. (not editor font family)\r\n\r\nCurrent vscode specified \"Meiryo\" in Japanese font-family, but normally Windows 10 using \"Yu Gothic UI\" as Japanese system font.\r\nWe should add Yu Gothic UI to vscode font-family because Yu Gothic UI has a better character width and rendering than Meiryo.\r\n\r\n#### Current (workbench.main.css)\r\n```\r\n.windows:lang(ja) {\r\n    font-family: Segoe WPC, Segoe UI, Meiryo, sans-serif\r\n}\r\n```\r\n\r\n#### Suggestion (workbench.main.css)\r\n```\r\n.windows:lang(ja) {\r\n    font-family: Segoe WPC, Segoe UI, Yu Gothic UI, Meiryo, sans-serif\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/79579/comments",
    "author": "harujii",
    "comments": [
      {
        "user": "dbaeumer",
        "created_at": "2019-08-23T06:55:46Z",
        "body": "@bpasero I think this is something set in the workbench."
      },
      {
        "user": "bpasero",
        "created_at": "2019-08-23T07:05:53Z",
        "body": "@harujii wanna do a PR for this change"
      },
      {
        "user": "harujii",
        "created_at": "2019-08-24T11:45:36Z",
        "body": "@bpasero I Created PR #79735"
      }
    ]
  },
  {
    "number": 77878,
    "title": "Trim git clone in command palette",
    "created_at": "2019-07-24T15:40:45Z",
    "closed_at": "2019-08-06T11:54:25Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "git",
      "good first issue",
      "verification-needed"
    ],
    "url": "https://github.com/microsoft/vscode/issues/77878",
    "body": "This is a small request to accept the whole `git clone SSH` inside the command palette.\r\n\r\nSo pasting the entire string in the Git: Clone command should resolve properly (rather throwing a permissions error, like i got last time).\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/77878/comments",
    "author": "suit0r",
    "comments": [
      {
        "user": "rajathans",
        "created_at": "2019-07-25T12:23:59Z",
        "body": "Can you please explain the issue and the desired behaviour a little further. I would like to work on this."
      },
      {
        "user": "joaomoreno",
        "created_at": "2019-07-25T13:13:00Z",
        "body": "The `Git: Clone` command shows an input box to insert the repository to clone. The user wants to be able to paste `git clone URL` instead of just `URL` and have it simply work."
      },
      {
        "user": "hunghw",
        "created_at": "2019-07-25T16:39:02Z",
        "body": "@rajathans Are you still interesting at this issue? I would like to give it a try."
      },
      {
        "user": "rajathans",
        "created_at": "2019-07-25T16:43:29Z",
        "body": "yes @hwhung0111 I've started working on this"
      },
      {
        "user": "suit0r",
        "created_at": "2019-07-26T01:17:58Z",
        "body": "> The `Git: Clone` command shows an input box to insert the repository to clone. The user wants to be able to paste `git clone URL` instead of just `URL` and have it simply work.\r\n\r\nexactly @joaomoreno .\r\n\r\nI've been thinking about the UX part @rajathans , and I think it would be nice if the paste command returned a processed string rather than allow for the full command to be inserted.\r\n\r\nso on paste, the command palette would show `REPO@REPO` instead of `git clone REPO@REPO`\r\n\r\nThanks a lot everyone"
      },
      {
        "user": "rajathans",
        "created_at": "2019-08-05T05:34:50Z",
        "body": "Hey @hwhung0111 you can go ahead with it. I've not been getting enough time lately."
      }
    ]
  },
  {
    "number": 77220,
    "title": "code --list-extensions by category",
    "created_at": "2019-07-11T14:15:04Z",
    "closed_at": "2019-07-23T14:29:36Z",
    "labels": [
      "help wanted",
      "feature-request",
      "extensions"
    ],
    "url": "https://github.com/microsoft/vscode/issues/77220",
    "body": "Just like I can do `@installed @category:themes` in the Extensions Search Bar, I want something like `code --list-extensions @category:themes` which will only list installed themes.\r\n\r\nIt comes handy to copy all the installed themes rather than manually entering them one by one.\r\n\r\nSame with other categories would be cool :)",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/77220/comments",
    "author": "deadcoder0904",
    "comments": [
      {
        "user": "lramos15",
        "created_at": "2019-07-12T21:48:47Z",
        "body": "@deadcoder0904 I made a PR with a simple implementation of this, it proposes that you would do `code --list-extensions --category themes` to get just your themes extensions."
      },
      {
        "user": "deadcoder0904",
        "created_at": "2019-07-13T03:48:13Z",
        "body": "Thanks, @lramos15 that was fast"
      }
    ]
  },
  {
    "number": 76885,
    "title": "'Configure File Association' has no icons!",
    "created_at": "2019-07-08T14:18:05Z",
    "closed_at": "2019-07-09T05:27:46Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "good first issue",
      "verification-needed",
      "quick-pick"
    ],
    "url": "https://github.com/microsoft/vscode/issues/76885",
    "body": "if you just want to 'Select Language Mode', languages has icons.\r\nbut if you want to 'Configure File Association', languages has no icons",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/76885/comments",
    "author": "SupinePandora43",
    "comments": [
      {
        "user": "bpasero",
        "created_at": "2019-07-08T15:02:34Z",
        "body": "True, up for grab if someone wants to do it."
      },
      {
        "user": "hunghw",
        "created_at": "2019-07-08T15:54:17Z",
        "body": "I'm going to work on it."
      }
    ]
  },
  {
    "number": 76519,
    "title": "Implement resolveTask in jake extension",
    "created_at": "2019-07-03T13:53:25Z",
    "closed_at": "2019-07-05T08:39:14Z",
    "labels": [
      "help wanted",
      "feature-request",
      "tasks",
      "debt",
      "good first issue"
    ],
    "url": "https://github.com/microsoft/vscode/issues/76519",
    "body": "See gulp extension change b6089b1",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/76519/comments",
    "author": "alexr00",
    "comments": [
      {
        "user": "hunghw",
        "created_at": "2019-07-03T16:44:05Z",
        "body": "I'm willing to give it a try."
      },
      {
        "user": "alexr00",
        "created_at": "2019-07-04T08:12:25Z",
        "body": "Thanks @hwhung0111! It should be very similar to the change in the gulp extensions."
      },
      {
        "user": "hunghw",
        "created_at": "2019-07-04T16:12:40Z",
        "body": "@alexr00 Yes, it's very similar. I copy the different part to jake extension and make a little change to fit jake extension. "
      }
    ]
  },
  {
    "number": 76428,
    "title": " Cannot escape out of the search sidebar anymore",
    "created_at": "2019-07-01T20:44:37Z",
    "closed_at": "2019-07-16T01:05:18Z",
    "labels": [
      "help wanted",
      "feature-request",
      "tree-widget"
    ],
    "url": "https://github.com/microsoft/vscode/issues/76428",
    "body": "Issue Type: <b>Bug</b>\r\n\r\nI want the Escape key to close the sidebar if it's open. Long ago (January 2018?) I added this shortcut key to do this:\r\n\r\n```\r\n{\r\n    \"key\": \"escape\",\r\n    \"command\": \"workbench.action.toggleSidebarVisibility\",\r\n    \"when\": \"sidebarVisible\"\r\n}\r\n```\r\nIt worked great... for a while. As of today, this shortcut no longer works. I believe it's been broken since the Fall 2018 release.\r\nI don't care about this specific shortcut... I just want to be able to close the sidebar with the Escape key. How can I do that?\r\n\r\nUPDATE: The sidebar I'm mostly trying to escape from is the Search sidebar, not the workspace explorer sidebar. This used to work and now it doesn't.\r\n\r\nUPDATE 2: the problem is that the `\"sidebarVisible\"` context was renamed to `\"sideBarVisible\"`. using the new name fixes the problem. but seriously vscode team, why rename something like this?\r\n\r\nVS Code version: Code - Insiders 1.36.0-insider (fe0c3e785c22c3ed2d5caa7178488c92d62bdb08, 2019-06-28T12:34:35.956Z)\r\nOS version: Windows_NT x64 10.0.17763\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i7-6700 CPU @ 3.40GHz (8 x 3408)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: disabled_software<br>oop_rasterization: disabled_off<br>protected_video_decode: unavailable_off<br>rasterization: enabled<br>skia_deferred_display_list: disabled_off<br>skia_renderer: disabled_off<br>surface_synchronization: enabled_on<br>video_decode: enabled<br>viz_display_compositor: disabled_off<br>webgl: enabled<br>webgl2: enabled|\r\n|Load (avg)|undefined|\r\n|Memory (System)|31.92GB (17.26GB free)|\r\n|Process Argv||\r\n|Screen Reader|no|\r\n|VM|0%|\r\n</details>Extensions: none\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/76428/comments",
    "author": "bruceoberg",
    "comments": [
      {
        "user": "isidorn",
        "created_at": "2019-07-03T07:59:08Z",
        "body": "It works for me.\r\nJust if the focus is in the tree, the first escape will clear the focus. And only the second escape will execute your command.\r\nThis happens because the tree is eating up the first escape key and this can not be customisable.\r\nThus forwarding this issue to @joaomoreno though I think we can close this as designed.\r\n\r\n@bruceoberg I suggest that you simply use a different shortcut which is not already taken by the tree."
      },
      {
        "user": "bruceoberg",
        "created_at": "2019-07-03T18:39:20Z",
        "body": "i am most concerned with the search sidebar, not the explorer sidebar/tree control. my shortcut used to work there and does not anymore."
      },
      {
        "user": "joaomoreno",
        "created_at": "2019-07-04T06:55:51Z",
        "body": "We can (maybe) make <kbd>Escape</kbd> a contributable tree command instead of hardcoding it."
      },
      {
        "user": "bruceoberg",
        "created_at": "2019-07-05T01:33:53Z",
        "body": "please remember that this is about escaping from the search sidebar, not from the workspace explorer."
      },
      {
        "user": "charliedua",
        "created_at": "2019-07-11T00:15:37Z",
        "body": "# Reproduce the problem\r\nTried to Check if the Search sidebar looses focus on `escape` keypress.\r\n\r\n- [x] Can confirm the focus retains in the search bar ever after multiple keypresses.\r\n\r\n# Problem \r\nThe problem is with how you have written the json file as the toggle doesn't require a when condition and hence removing it should fix the problem\r\n\r\n# Solutiion\r\nThe new json looks like this and works. \r\n```json\r\n{\r\n    \"key\": \"escape\",\r\n    \"command\": \"workbench.action.toggleSidebarVisibility\",\r\n}\r\n```\r\n\r\n# Feedback\r\nPlease tell if this fixes your problem!"
      },
      {
        "user": "bruceoberg",
        "created_at": "2019-07-16T00:29:38Z",
        "body": "the `\"when\": \"sidebarVisible\"` clause is necessary because i don't want escape to reopen the sidebar if it is not open. i want escape with no sidebar to do nothing. there does not appear to be a \"hideSidebar\" command that does not toggle. this used to work and was broken."
      },
      {
        "user": "bruceoberg",
        "created_at": "2019-07-16T01:02:16Z",
        "body": "and... the real problem is that `\"sidebarVisible\"` was renamed to `\"sideBarVisible\"` (note the capital B). the predicate names are case sensitive, and thus my shortcut was broken. with the new spelling it works again.\r\n\r\nhey vscode team... don't rename `\"when\"` predicates!"
      },
      {
        "user": "isidorn",
        "created_at": "2019-07-29T12:52:29Z",
        "body": "Sorry about that!\r\nYes we renamed it, ti was mentioned in the release notes (I believe)"
      },
      {
        "user": "bruceoberg",
        "created_at": "2019-07-29T20:26:27Z",
        "body": "@isidorn, this is a classic case of why it is a very bad idea to rename things in passive environments (where misnamed items fail silently). you believe it was mentioned in the release notes. this is simply not good enough for a widely used product. the thing is, when my shortcut stopped working, _i did not know why_. to find out why, i had to troubleshoot it, ask for help, waste others time, and then finally stumble upon what had actually happened. all because someone thought one lower case b should be capitalized. i'm glad you're sorry about that. in the future, the vscode team should try to avoid making changes that silently break things."
      },
      {
        "user": "cb109",
        "created_at": "2019-08-27T15:00:35Z",
        "body": "For anyone coming across this, this is the full keybinding (add to your `keybindings.json`) that will close the sidebar when pressing escape:\r\n```json\r\n{\r\n    \"key\": \"escape\",\r\n    \"command\": \"workbench.action.toggleSidebarVisibility\",\r\n    \"when\": \"sideBarVisible\"\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 76315,
    "title": "add *.podspec to file associations",
    "created_at": "2019-06-28T21:03:21Z",
    "closed_at": "2019-07-03T14:17:55Z",
    "labels": [
      "help wanted",
      "languages-basic",
      "good first issue"
    ],
    "url": "https://github.com/microsoft/vscode/issues/76315",
    "body": "*.podspec files are just ruby. I can add them in manually ofcourse. It would be nice if vscode had an entry by default for it so everyone gets syntax highlighting for it out of the box.\r\n\r\nThank you.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/76315/comments",
    "author": "graph",
    "comments": [
      {
        "user": "skprabhanjan",
        "created_at": "2019-07-01T08:54:50Z",
        "body": "@alexr00 ,I can fix this but I would need some starter points  and how to add this ? "
      }
    ]
  },
  {
    "number": 76195,
    "title": "Git: Add command for git stash drop",
    "created_at": "2019-06-26T18:18:21Z",
    "closed_at": "2019-10-25T09:42:19Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "git",
      "good first issue",
      "verification-needed"
    ],
    "url": "https://github.com/microsoft/vscode/issues/76195",
    "body": "Issue Type: <b>Bug</b>\r\n\r\nWhen poping a stash and there are merge conflicts between the stash and current code, even after the conflict is resolved, the pop'ed stash isn't dropped from the stash list.\r\nThe only way to drop a stash in vscode, AFAIK, is by successfully merging a stash, meaning that if a stash is no longer relevant (only conflicts, never merged), it can never be dropped from within vscode, only by a terminal command.\r\n\r\nmy suggestion is: when there are conflicts, let the user choose whether to resolve the conflicts or to just drop the stash.\r\n\r\nVS Code version: Code 1.35.1 (c7d83e57cd18f18026a8162d042843bda1bcf21f, 2019-06-12T14:30:02.622Z)\r\nOS version: Windows_NT x64 10.0.17763\r\n\r\n\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/76195/comments",
    "author": "leocb",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2019-06-27T09:12:28Z",
        "body": "> When poping a stash and there are merge conflicts between the stash and current code, even after the conflict is resolved, the pop'ed stash isn't dropped from the stash list.\r\n\r\nThis is how git works. If you run `git stash pop` and the stash can't be popped, the stash will not be dropped. We will not deviate from Git's behavior here.\r\n\r\nIf you want to drop a stash, we can add a command for that. Would you like to submit a PR for that?"
      },
      {
        "user": "leocb",
        "created_at": "2019-06-28T20:04:38Z",
        "body": "I see, makes sense. Where should I place this stash drop feature? just in the command pallet or also in the git \"more actions\" (3 dots) menu?\r\nIf I manage to get some free time I will try to open a PR. But if anyone else wants to do it, please go ahead! :)"
      },
      {
        "user": "drew212",
        "created_at": "2019-06-29T13:52:54Z",
        "body": "I have a prototype working for this, want to check a few things and I'll submit a PR."
      }
    ]
  },
  {
    "number": 75532,
    "title": "Switching themes causes webview Error",
    "created_at": "2019-06-14T18:59:59Z",
    "closed_at": "2019-07-17T20:28:49Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "webview"
    ],
    "url": "https://github.com/microsoft/vscode/issues/75532",
    "body": "\r\nIssue Type: <b>Bug</b>\r\n\r\n1. Toggle developer tools\r\n2. Switch themes\r\n\r\nEverything appears to work as normal, but the console gets flooded with `WebView must be attached to the DOM and the dom-ready event emitted before this method can be called.` errors. \r\n\r\nVS Code version: Code - Insiders 1.36.0-insider (15b7c86d86319b187a5ef255c170184a8519c5af, 2019-06-14T10:36:51.530Z)\r\nOS version: Darwin x64 18.6.0\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i7-8850H CPU @ 2.60GHz (12 x 2600)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: enabled<br>oop_rasterization: disabled_off<br>protected_video_decode: unavailable_off<br>rasterization: enabled<br>skia_deferred_display_list: disabled_off<br>skia_renderer: disabled_off<br>surface_synchronization: enabled_on<br>video_decode: enabled<br>viz_display_compositor: disabled_off<br>webgl: enabled<br>webgl2: enabled|\r\n|Load (avg)|2, 2, 2|\r\n|Memory (System)|32.00GB (9.96GB free)|\r\n|Process Argv|-psn_0_2441812|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n</details><details><summary>Extensions (13)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nvscode-eslint|dba|1.9.0\r\ngitlens|eam|9.8.2\r\nvsc-material-theme|Equ|2.9.0\r\nremote-containers|ms-|0.61.0\r\nremote-ssh-edit-nightly|ms-|2019.6.19620\r\nremote-ssh-explorer-nightly|ms-|2019.6.19620\r\nremote-ssh-nightly|ms-|2019.6.18180\r\nvscode-typescript-tslint-plugin|ms-|1.1.0\r\ndebugger-for-chrome|msj|4.11.3\r\nvscode-docker|Pet|0.6.2\r\nmaterial-icon-theme|PKi|3.8.0\r\npolacode|pnp|0.3.2\r\nvscode-sort-json|ric|1.13.0\r\n\r\n\r\n</details>\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/75532/comments",
    "author": "lramos15",
    "comments": [
      {
        "user": "mjbvz",
        "created_at": "2019-06-17T16:06:40Z",
        "body": "I can't repo this. Which developer tools and theme are you talking about specifically?"
      },
      {
        "user": "lramos15",
        "created_at": "2019-06-17T16:30:48Z",
        "body": "I tried repoing this again and it appears that this error is related to installing a new theme.\r\nHere are some better repo steps:\r\n1. Toggle developer tools\r\n2. Switch themes (no errors)\r\n3. Install a theme\r\n4. Switch themes (errors even if it is one of the themes shipped with VS code)\r\n\r\nThe errors go away after a reload, but installing a theme does not tell me a reload is required."
      },
      {
        "user": "mjbvz",
        "created_at": "2019-06-17T17:40:34Z",
        "body": "Ok, with the extensions view open, I sometimes see\r\n\r\n```\r\nERR Invalid guestInstanceId: null: Error: Invalid guestInstanceId: null\r\n    at Object.getGuestForWebContents (/Applications/Visual Studio Code - Insiders.app/Contents/Resources/electron.asar/browser/guest-view-manager.js:430:11)\r\n    at /Applications/Visual Studio Code - Insiders.app/Contents/Resources/electron.asar/browser/rpc-server.js:449:34\r\n    at EventEmitter.ipcMain.on.args (/Applications/Visual Studio Code - Insiders.app/Contents/Resources/electron.asar/browser/rpc-server.js:278:21)\r\n    at EventEmitter.emit (events.js:182:13)\r\n    at WebContents.<anonymous> (/Applications/Visual Studio Code - Insiders.app/Contents/Resources/electron.asar/browser/api/web-contents.js:370:21)\r\n    at WebContents.emit (events.js:182:13)\r\n```\r\n\r\nDoes not cause seem to cause any actual problems "
      },
      {
        "user": "lramos15",
        "created_at": "2019-06-17T18:45:32Z",
        "body": "I get that as well sometimes, but do you not get the webview must be attached to the DOM error as well? "
      },
      {
        "user": "jeanp413",
        "created_at": "2019-06-21T05:31:35Z",
        "body": "I can reproduce it. Steps:\r\n1. Click on any extension to load it's Readme in an editor\r\n2. Close that editor\r\n3. Change theme (this triggers the webview error)\r\n4. Repeat step 1 (this triggers the guestInstanceId error)"
      }
    ]
  },
  {
    "number": 75098,
    "title": "Return me to the last line of any reverted change",
    "created_at": "2019-06-07T20:13:18Z",
    "closed_at": "2020-09-09T14:36:57Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "git",
      "insiders-released"
    ],
    "url": "https://github.com/microsoft/vscode/issues/75098",
    "body": "<!-- Please search existing issues to avoid creating duplicates. -->\r\nStep 0. Version 1.35.0 with extensions disabled.\r\nStep 1. Open a file with changes committed in git\r\nStep 2. Use ALT+F3 to navigate to the next change in-line\r\nStep 3. Click Revert Change \r\nStep 4. find the line number you were on and move your cursor there, then hit ALT+F3 again\r\n\r\n<!-- Describe the feature you'd like. -->\r\nI would like vscode to remember where I was whenever I revert a change, then return me to that place, so that I can see the change disappear and so that I can proceed using hotkey to the next change.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/75098/comments",
    "author": "datocrats-org",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2019-06-12T08:56:42Z",
        "body": "We might just have to set the cursor in that position, should be simple. Would you like to submit a PR?"
      },
      {
        "user": "ankurmittal092",
        "created_at": "2019-06-14T10:22:56Z",
        "body": "@joaomoreno I can take a look at this.. As this will be my first pull request here in vscode repo, I will require some help. \r\nDo let me know a good starting point for this.. "
      },
      {
        "user": "Wowol",
        "created_at": "2019-11-06T09:56:23Z",
        "body": "Hi, I would like to work on this issue. I'll submit a PR soon."
      },
      {
        "user": "Wowol",
        "created_at": "2019-11-06T10:21:03Z",
        "body": "@joaomoreno Do we want to fix this for 'stage change' functionality too? It behaves now the same way as 'revert change' - it starts searching from the beginning, instead of placing cursor in staged line position."
      },
      {
        "user": "joaomoreno",
        "created_at": "2019-11-07T08:08:55Z",
        "body": "@Wowol Sounds good."
      }
    ]
  },
  {
    "number": 73622,
    "title": "Remember scroll position in SCM changes list when switching to other views and back",
    "created_at": "2019-05-11T16:02:51Z",
    "closed_at": "2019-06-05T08:30:16Z",
    "labels": [
      "bug",
      "help wanted",
      "good first issue",
      "scm"
    ],
    "url": "https://github.com/microsoft/vscode/issues/73622",
    "body": "Issue Type: <b>Feature Request</b>\r\n\r\nNot remembering the scroll position makes it very annoying in certain situations, esp. with long change lists during merging of upstream changes. It also resets to the top. The explorer on the other hand remembers the position.\r\n\r\nVS Code version: Code 1.33.1 (51b0b28134d51361cf996d2f0a1c698247aeabd8, 2019-04-11T08:27:09.080Z)\r\nOS version: Windows_NT ia32 10.0.17134\r\n\r\n\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/73622/comments",
    "author": "letmaik",
    "comments": [
      {
        "user": "hunghw",
        "created_at": "2019-05-24T05:51:39Z",
        "body": "I would like to try to resolve this."
      },
      {
        "user": "babakks",
        "created_at": "2019-06-01T18:33:33Z",
        "body": "Since I saw no changes going on, I made a fix (PR #74723). Hope it helps."
      }
    ]
  },
  {
    "number": 72640,
    "title": "Opening image file from source control is broken",
    "created_at": "2019-04-20T08:34:53Z",
    "closed_at": "2019-08-07T15:30:30Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "git",
      "good first issue"
    ],
    "url": "https://github.com/microsoft/vscode/issues/72640",
    "body": "Issue Type: <b>Bug</b>\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a png file in a folder with git source control.\r\n2. Click the \"Open file\" icon next to the file name in source control view.\r\n\r\n### Actual results\r\nA dialog appears \"Git: cannot open ... Detail: File seems to be binary and cannot be opened as text\"\r\n\r\n### Expected results\r\nThe file is opened as if it was opened from the explorer view.\r\n\r\nVS Code version: Code - Insiders 1.34.0-insider (750680d2f7ae563529501f8ec419d83ccf8ec325, 2019-04-19T19:59:19.092Z)\r\nOS version: Darwin x64 18.5.0\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i7-4870HQ CPU @ 2.50GHz (8 x 2500)|\r\n|GPU Status|2d_canvas: enabled<br>checker_imaging: disabled_off<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: enabled<br>rasterization: unavailable_off<br>surface_synchronization: enabled_on<br>video_decode: enabled<br>webgl: enabled<br>webgl2: enabled|\r\n|Load (avg)|4, 3, 2|\r\n|Memory (System)|16.00GB (0.05GB free)|\r\n|Process Argv|-psn_0_770236|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n</details>Extensions: none\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/72640/comments",
    "author": "rasmusgo",
    "comments": [
      {
        "user": "ALDamico",
        "created_at": "2019-05-11T21:49:31Z",
        "body": "Is anyone working on this? I'd like to contribute to this bugfix."
      },
      {
        "user": "darshkpatel",
        "created_at": "2019-05-21T14:11:11Z",
        "body": "@rasmusgo Seems to work for me for formats like jpg, jpeg. It gave the error message for .tiff format although."
      }
    ]
  },
  {
    "number": 71497,
    "title": "Automatically show changes side-by-side if there's only one group, otherwise show changes inline",
    "created_at": "2019-03-31T03:05:59Z",
    "closed_at": "2020-11-11T14:51:50Z",
    "labels": [
      "help wanted",
      "feature-request",
      "scm",
      "*out-of-scope"
    ],
    "url": "https://github.com/microsoft/vscode/issues/71497",
    "body": "<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\n\r\nPlease add an option to automatically show Git diff changes side-by-side, if there's only one group, and inline, if there's two or more groups. Since the side-by-side changes is too narrow if there are two or more groups, so I always manually change it anyway. But it would be very useful to have this automated.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/71497/comments",
    "author": "garyking",
    "comments": [
      {
        "user": "mkolm",
        "created_at": "2019-04-11T01:13:14Z",
        "body": "Hi, I would like to attempt to fix this issue. @joaomoreno how do I know which files I should edit?"
      }
    ]
  },
  {
    "number": 70494,
    "title": "SCM: Add repo actions in panel header",
    "created_at": "2019-03-14T15:21:08Z",
    "closed_at": "2020-10-07T17:08:52Z",
    "labels": [
      "help wanted",
      "feature-request",
      "scm"
    ],
    "url": "https://github.com/microsoft/vscode/issues/70494",
    "body": "Issue Type: <b>Bug</b>\r\n\r\n~~In the SCM sidebar the behavior of repo multi-select has seem to change in the recent insiders. Previously in 1.32.2, the order of the repo multi-select would determine the order of the repos shown. Now the order seems to always be the same (almost alphabetic but not) which feels like a step backward. If the desire it to be more consistent and deterministic, I would suggest using the same order they are in the \"master\" view as that is the order of the workspace folders (which is controllable by the user).~~\r\n\r\n~~I do like that is now remembers the multi-selection when reloading a workspace now though.~~\r\n\r\nI just wish each repo view had the branch/status info in its title. It would also be great if there was a way to have an auto-collapse/expand mode on each repo -- like a 3rd state (not expanded or collapsed) which would stay collapsed while there were no changes in the repo but would auto-expand when there were.\r\n\r\n\r\nVS Code version: Code - Insiders 1.33.0-insider (7258b995f63827ff1b179f47722e500296d64c35, 2019-03-14T06:19:44.881Z)\r\nOS version: Windows_NT x64 10.0.18356\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i7-6700K CPU @ 4.00GHz (8 x 4008)|\r\n|GPU Status|2d_canvas: enabled<br>checker_imaging: disabled_off<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: disabled_software<br>rasterization: enabled<br>surface_synchronization: enabled_on<br>video_decode: enabled<br>webgl: enabled<br>webgl2: enabled|\r\n|Memory (System)|31.93GB (19.30GB free)|\r\n|Process Argv||\r\n|Screen Reader|no|\r\n|VM|0%|\r\n\r\n</details>\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/70494/comments",
    "author": "eamodio",
    "comments": [
      {
        "user": "eamodio",
        "created_at": "2019-03-14T15:27:06Z",
        "body": "After playing around with this more -- I see now that the order of the \"details\" can be rearranged just like any other view (and preserved). This is great! So now given the new remembering of which repos should be shown and their order (position), I can almost get rid of the \"Source Control Providers\" view altogether.\r\n\r\nI just wish each repo view had the branch/status info in its title. It would also be great if there was a way to have an auto-collapse/expand mode on each repo -- like a 3rd state (not expanded or collapsed) which would stay collapsed while there were no changes in the repo but would auto-expand when there were."
      },
      {
        "user": "joaomoreno",
        "created_at": "2019-03-18T10:44:18Z",
        "body": "@eamodio The SCM views now behave like all other views, they can easily be resorted and that will be preserved. Is the multi select order really critical for you?"
      },
      {
        "user": "eamodio",
        "created_at": "2019-03-18T14:52:45Z",
        "body": "@joaomoreno nope -- I think this can either be closed or changed into a feature request for:\r\n\r\n> I just wish each repo view had the branch/status info in its title. It would also be great if there was a way to have an auto-collapse/expand mode on each repo -- like a 3rd state (not expanded or collapsed) which would stay collapsed while there were no changes in the repo but would auto-expand when there were.\r\n\r\nAs I'd love to ultimately hide the \"Source Control Providers\" view altogether."
      },
      {
        "user": "eamodio",
        "created_at": "2020-10-07T17:08:52Z",
        "body": "I think this is basically addressed with the recent SCM changes"
      }
    ]
  },
  {
    "number": 70029,
    "title": "Can't open a new window on different desktop/screen.",
    "created_at": "2019-03-08T09:01:29Z",
    "closed_at": "2019-03-29T07:16:42Z",
    "labels": [
      "bug",
      "help wanted",
      "info-needed"
    ],
    "url": "https://github.com/microsoft/vscode/issues/70029",
    "body": "Issue Type: <b>Bug</b>\r\n\r\n1. Open MSVSC on Mac screen §1\r\n2. Open a second window and move it to §2\r\n3. Close the window on screen §2 - you now have no windows, but still have focus of the menu bar.\r\n4. Go \"File\" > \"New Window\" ... nothing happens.\r\n\r\nNotes: \r\n@2. NB. At this point, on either screen you can successfully open more windows...\r\n@4. NB. You can go to screen §1 (where there is an existing window), open a new window and that works...\r\n\r\nVS Code version: Code 1.31.1 (1b8e8302e405050205e69b59abb3559592bb9e60, 2019-02-12T02:16:38.656Z)\r\nOS version: Darwin x64 18.0.0\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i7-3770 CPU @ 3.40GHz (8 x 3400)|\r\n|GPU Status|2d_canvas: enabled<br>checker_imaging: disabled_off<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: enabled<br>rasterization: unavailable_off<br>surface_synchronization: enabled_on<br>video_decode: enabled<br>webgl: enabled<br>webgl2: enabled|\r\n|Load (avg)|3, 3, 3|\r\n|Memory (System)|16.00GB (0.03GB free)|\r\n|Process Argv||\r\n|Screen Reader|no|\r\n|VM|0%|\r\n\r\n</details><details><summary>Extensions (13)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nhtmltagwrap|bra|0.0.7\r\nvscode-eslint|dba|1.8.1\r\nvscode-html-css|ecm|0.2.0\r\nphp-debug|fel|1.13.0\r\nphp-intellisense|fel|2.3.10\r\nauto-close-tag|for|0.5.6\r\nauto-rename-tag|for|0.0.15\r\nvue-snippets|hol|0.1.11\r\nmysql-syntax|jak|1.3.1\r\nvue|liu|0.1.5\r\nphp-docblocker|nei|1.7.0\r\nvetur|oct|0.16.2\r\nphp-formatter|Sop|0.2.4\r\n\r\n\r\n</details>\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/70029/comments",
    "author": "jimbomorrison",
    "comments": [
      {
        "user": "bpasero",
        "created_at": "2019-03-11T10:34:58Z",
        "body": "If this reproduces, I would be happy for someone to look into this and possibly provide a fix or explanation 👍 "
      },
      {
        "user": "ginoheusdens",
        "created_at": "2019-03-15T21:48:48Z",
        "body": "> If this reproduces, I would be happy for someone to look into this and possibly provide a fix or explanation 👍\r\n\r\nI can reproduce this also on my machine. Build the vscode codebase but nothing obvious found in the logs so far.\r\nWhen I use the new window command in the context menu of the dock icon it creates a new window properly. \r\nI'm not familiar with the code base, tried to set break points but nothing get's triggered when I click on the New window command.\r\nIf someone can give some advise where to start searching/debugging I can give it an other go?"
      },
      {
        "user": "bpasero",
        "created_at": "2019-03-17T07:36:02Z",
        "body": "@ginoheusdens `src/vs/platform/menubar/electron-main/menubar.ts` is what gets used for any usage of the menu on macOS, maybe go from there. Thanks."
      },
      {
        "user": "bpasero",
        "created_at": "2019-03-25T11:03:58Z",
        "body": "@jimbomorrison I cannot reproduce this, here are my steps:\r\n* have 2 monitors\r\n* start Code and it opens on the primary monitor\r\n* open a new empty window and move it to the second monitor\r\n* close that window via the close button in the window toolbar\r\n* at this point the menu on the second monitor shows up dimmed to me (almost disabled) and the first window on the primary monitor becomes active\r\n* I can click on the menu in the second monitor (even though it shows up disabled) and select \"New Window\" and that opens a new window on that monitor\r\n\r\nWhat is different?"
      },
      {
        "user": "AmirS",
        "created_at": "2019-03-28T23:24:20Z",
        "body": "@bpasero no need for 2 monitors. \r\n\r\nCreate multiple macOS desktops in one monitor, move a second VSCode to the second desktop and then close second VSCode window. \r\n\r\nIt seems like there is no active VSCode window at that point. But menu is not updated to use fallback handlers bacause the last window is not closed yet: \r\n\r\n`(this.windowsMainService.getWindowCount() === 0 && this.closedLastWindow)`\r\n\r\nDuplicate of #63959."
      },
      {
        "user": "bpasero",
        "created_at": "2019-03-29T07:16:38Z",
        "body": "Duplicate of #63959"
      }
    ]
  },
  {
    "number": 69729,
    "title": "Source Control - Diff View Cursor Position Resets to Top of Diff Section",
    "created_at": "2019-03-03T07:18:25Z",
    "closed_at": "2020-11-11T15:18:33Z",
    "labels": [
      "bug",
      "help wanted",
      "git",
      "diff-editor",
      "wont-fix"
    ],
    "url": "https://github.com/microsoft/vscode/issues/69729",
    "body": "Issue Type: <b>Bug</b>\r\n\r\nSteps:\r\n- Start editing two different files in a source controlled project\r\n- Add a large section to one of the files that spans more than one screen height\r\n- Make any change to the other file so it will appear in the source control panel\r\n- Open the source control panel and click the file with the large added section\r\n- Scroll down partway through the large add section, take note of the cursor position\r\n- Click on the other file in the source control panel\r\n- Now click back on the file with the large added section again\r\n- Observe that the cursor position will have jumped up towards the top of the add section, losing the previous cursor position\r\n\r\nExpected result:\r\n- Switching to an already open diff view for a file should not reset the cursor position\r\n- If the diff view was never closed, the last cursor position should be maintained, like any other editor tab\r\n- When a diff view is opened for the first time it should still jump to the first different section (as it already does)\r\n\r\nMotivation:\r\nUsing the Source Control panel with \"Toggle Side by Side View\" off as a replacement for the Explorer panel as a workflow for focusing on currently modified files only. The cursor position being reset when switching back and forth between files diff views is disruptive to this workflow.\r\n\r\nVS Code version: Code 1.31.1 (1b8e8302e405050205e69b59abb3559592bb9e60, 2019-02-12T02:16:38.656Z)\r\nOS version: Darwin x64 18.2.0\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i5-5350U CPU @ 1.80GHz (4 x 1800)|\r\n|GPU Status|2d_canvas: enabled<br>checker_imaging: disabled_off<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: enabled<br>rasterization: enabled<br>surface_synchronization: enabled_on<br>video_decode: enabled<br>webgl: enabled<br>webgl2: enabled|\r\n|Load (avg)|2, 2, 2|\r\n|Memory (System)|8.00GB (0.25GB free)|\r\n|Process Argv||\r\n|Screen Reader|no|\r\n|VM|0%|\r\n\r\n</details><details><summary>Extensions (5)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nvscode-eslint|dba|1.8.0\r\ngithistory|don|0.4.6\r\nautoconf|mae|0.0.7\r\nprettify-json|moh|0.0.3\r\ncpptools|ms-|0.21.0\r\n\r\n\r\n</details>\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/69729/comments",
    "author": "nteymory",
    "comments": [
      {
        "user": "jmbockhorst",
        "created_at": "2019-04-08T13:11:45Z",
        "body": "I was not able to repro this. What I found was that when switching between diff editors, the cursor position was maintained (if both editors stayed open), but the cursor was not always in view. So the cursor would be at the end of the document, I would switch to another, then switch back, and the view had shifted up to the middle of the document, where the cursor was not in view.\r\n\r\n@nt85 Maybe this is what you were trying to describe?"
      },
      {
        "user": "nteymory",
        "created_at": "2019-04-10T03:31:03Z",
        "body": "Yes, that might be right. The end result is switching back and forth between tabs causes you to lose your position"
      }
    ]
  },
  {
    "number": 68962,
    "title": "Splitview: Support customizable sash width",
    "created_at": "2019-02-19T08:52:44Z",
    "closed_at": "2020-05-12T09:43:36Z",
    "labels": [
      "help wanted",
      "feature-request",
      "on-testplan",
      "splitview-widget",
      "web",
      "on-release-notes"
    ],
    "url": "https://github.com/microsoft/vscode/issues/68962",
    "body": "Issue Type: <b>Feature Request</b>\r\n\r\ncurrently i am facing  a lot of trouble while resizing the spit-windows as the resize cursor only appears on the tiny border of the window. I would like to have a wider target for the resize cursor. it could be the tabless entire tabless part of the tab-bar.\r\n\r\nVS Code version: Code - Insiders 1.32.0-insider (a75cf6e4b4317de0bf38284af255bdf0089deb68, 2019-02-19T06:18:01.215Z)\r\nOS version: Windows_NT x64 10.0.15063\r\n\r\n\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/68962/comments",
    "author": "sanket-bhalerao",
    "comments": [
      {
        "user": "w9jds",
        "created_at": "2019-10-23T16:56:14Z",
        "body": "I have been looking into this and already created a setting for it, as well as modified the sash to take in a size option and apply it, and default to the `4px` that is currently used. Is there any suggestions on how I get the setting down to the sash? Everything that creates a sash doesn't get passed in a `IConfigurationService`"
      }
    ]
  },
  {
    "number": 68713,
    "title": "Control scroll in file explorer",
    "created_at": "2019-02-14T15:25:21Z",
    "closed_at": "2019-10-08T16:30:47Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "verification-needed",
      "list-widget"
    ],
    "url": "https://github.com/microsoft/vscode/issues/68713",
    "body": "This is a minor feature request, I happened to notice it missing.\r\n\r\nIn the editor window, control + arrow keys scrolls down instead of moves your cursor down. The same action in the file explorer doesn't do anything.\r\n\r\nAs someone who uses keyboard shortcuts for the majority of their workflow, it would be a nice to have.\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/68713/comments",
    "author": "alexrosenfeld10",
    "comments": [
      {
        "user": "isidorn",
        "created_at": "2019-02-18T14:25:51Z",
        "body": "This should work for all our trees in case we want to add it. Forwarding to @joaomoreno "
      },
      {
        "user": "YisraelV",
        "created_at": "2019-03-03T16:59:00Z",
        "body": "I will look into this (if someone else is already working on it please let me know thanks!)"
      },
      {
        "user": "YisraelV",
        "created_at": "2019-03-03T17:00:55Z",
        "body": "Dear members: If there are other issues which are more important to the project right now please let me know."
      }
    ]
  },
  {
    "number": 66676,
    "title": "Screen cast mode - move the location of the displayed text",
    "created_at": "2019-01-17T16:17:21Z",
    "closed_at": "2019-08-07T14:36:48Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "verification-needed",
      "screencast-mode"
    ],
    "url": "https://github.com/microsoft/vscode/issues/66676",
    "body": "<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\nit may be helpful to move the location of where the text is displayed based on the screen, layout of the code, and other factors. I would love to see a setting for this at least giving a y coordinate.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/66676/comments",
    "author": "johnpapa",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2019-01-18T11:49:47Z",
        "body": "@johnpapa Feel free to submit PR."
      },
      {
        "user": "mattkwiecien",
        "created_at": "2019-02-15T15:23:29Z",
        "body": "I'd like to tackle this one if it's still available @joaomoreno "
      },
      {
        "user": "mattkwiecien",
        "created_at": "2019-02-24T17:20:42Z",
        "body": "@joaomoreno Just submitted a PR for this one.  Sorry for the delay!"
      },
      {
        "user": "isidorn",
        "created_at": "2019-08-27T16:23:15Z",
        "body": "Vertical offset works fine -> verified.\r\nAlso feels like bloat."
      }
    ]
  },
  {
    "number": 66674,
    "title": "Screencast mode - settings for what to show",
    "created_at": "2019-01-17T16:12:28Z",
    "closed_at": "2019-08-07T15:15:18Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "verification-needed",
      "screencast-mode"
    ],
    "url": "https://github.com/microsoft/vscode/issues/66674",
    "body": "<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\nIt would be nice to have control in settings to show non character (control keys) only vs show all. For example, showing CMD, CTRL, SHIFT, ESC, ENTER only vs showing all a, b, c, d .... z etc.\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/66674/comments",
    "author": "johnpapa",
    "comments": [
      {
        "user": "alber70g",
        "created_at": "2019-02-18T15:09:48Z",
        "body": "Would be great to have settings for the size and location as well. Maybe some custom css that can modify it to the users' liking?"
      },
      {
        "user": "EmmanuelDemey",
        "created_at": "2019-02-20T13:42:29Z",
        "body": "Definitely . Without the possibility to filter characters, I wont use this very fun feature. "
      },
      {
        "user": "mkenigs",
        "created_at": "2019-02-23T23:20:56Z",
        "body": "I'll work on this!"
      },
      {
        "user": "EricCoteReact",
        "created_at": "2019-06-11T19:55:12Z",
        "body": "What is stopping this from happening? The pull request was succesfully completed in February, and we are now in June. \r\n\r\nI'd love for this to merge."
      },
      {
        "user": "texastoland",
        "created_at": "2019-06-11T21:40:14Z",
        "body": "The PR was only started not completed."
      },
      {
        "user": "mkenigs",
        "created_at": "2019-06-11T21:51:14Z",
        "body": "Yeah I think @joaomoreno marked it as backlog. But as I wrote it I'd also love for it to merge :)"
      },
      {
        "user": "texastoland",
        "created_at": "2019-06-12T05:52:23Z",
        "body": "@mkenigs I sent you a code review in March."
      },
      {
        "user": "mkenigs",
        "created_at": "2019-06-12T06:07:17Z",
        "body": "Sorry I missed that - don't see it, is it on the PR?"
      },
      {
        "user": "joaomoreno",
        "created_at": "2019-08-07T15:15:30Z",
        "body": "Added new setting `screencastMode.onlyKeyboardShortcuts`\t"
      },
      {
        "user": "isidorn",
        "created_at": "2019-08-27T16:04:44Z",
        "body": "Works nice. \r\nBloaaaat"
      }
    ]
  },
  {
    "number": 66296,
    "title": "git.promptToSaveFilesBeforeCommit should not warn on unstaged files.",
    "created_at": "2019-01-09T17:04:35Z",
    "closed_at": "2019-08-08T09:32:59Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "git",
      "good first issue"
    ],
    "url": "https://github.com/microsoft/vscode/issues/66296",
    "body": "Issue Type: <b>Feature Request</b>\r\n\r\nThis new feature is over-eager and triggers on unsaved files that are not part of the commit, which I don't think makes sense. If I have staged file `A.js` and am committing only file `A.js`, I should not receive a warning that `B.js` is unsaved. Ideally it will only consider staged files unless I am committing all staged and unstaged.\r\n\r\nVS Code version: Code 1.30.2 (61122f88f0bf01e2ac16bdb9e1bc4571755f5bd8, 2019-01-07T22:54:13.295Z)\r\nOS version: Windows_NT x64 10.0.17763\r\n\r\n\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/66296/comments",
    "author": "maslade",
    "comments": [
      {
        "user": "flurmbo",
        "created_at": "2019-01-15T22:08:47Z",
        "body": "Hi, can I work on this one?"
      },
      {
        "user": "joaomoreno",
        "created_at": "2019-01-16T08:19:09Z",
        "body": "@flurmbo Sure!"
      },
      {
        "user": "rkeithhill",
        "created_at": "2019-03-20T23:23:28Z",
        "body": "I'm not in favor of changing this.  Or if it is changed, perhaps give finer grain control over when it prompts.  I always want a prompt because I'm a bit lazy and usually let VSCode add the files to staging for me when I commit."
      },
      {
        "user": "maslade",
        "created_at": "2019-03-24T19:58:26Z",
        "body": "@rkeithhill I see the value in your use case, but I don't think it makes sense in this feature. If you committed with a file that was untracked but *saved* this warning wouldn't help you. I think it would make more sense as a separate feature that warns on commit if there are untracked files regardless of save state."
      },
      {
        "user": "diablodale",
        "created_at": "2019-07-01T13:29:56Z",
        "body": "Experienced this today. I had to loop on this experience 3 times before I finally groked what was occurring and my choices in the dialog. I believe there are two issues here:\r\n\r\n1. The rules triggering the dialog\r\n2. The dialog itself\r\n\r\n### Rules triggering dialog\r\n\r\nIn my scenario today, this was triggered by me having an _untracked file_ named `badges.md` open in VSCode. Badges.md was previously saved to disk. It continues to be _untracked_. I had made some more changes to this file, but not yet saved those to disk. The key concern here for me is that this is an _untracked_ file. I do not want to have any dialogs given to me by VSCode for untracked files when I attempt to commit.\r\n\r\n### Dialog itself\r\n\r\nThis is the dialog I was presented:\r\n\r\n```\r\nThe following file is unsaved: badges.md\r\nWould you like to save it before committing?\r\n(save all & commit)  (commit anyway)  (cancel)\r\n```\r\n\r\nI kept clicking cancel. Because I equated `cancel` with `no`. I wanted to answer `no` to the question `Would you like to save it?`. On my 3rd time, I read again the dialog and every choice. I finally clicked `commit anyway` and got the effect I desired.\r\n\r\nThis dialog is poorly designed. The question proposed is a yes/no question \"Would you like to save it before committing?\". Unfortunately, the three buttons are not `yes` or `no`. Instead they are answers to a question not asked...something like \"What would you like to do now?\". Naturally, that's a poor question and instead, this dialog needs to be reworked.\r\n\r\n### Setup\r\n\r\n```\r\nVersion: 1.36.0-insider (user setup)\r\nCommit: fe0c3e785c22c3ed2d5caa7178488c92d62bdb08\r\nDate: 2019-06-28T12:34:35.956Z\r\nElectron: 4.2.5\r\nChrome: 69.0.3497.128\r\nNode.js: 10.11.0\r\nV8: 6.9.427.31-electron.0\r\nOS: Windows_NT x64 10.0.18362\r\n```"
      },
      {
        "user": "joaomoreno",
        "created_at": "2019-08-08T09:31:17Z",
        "body": "@diablodale I've rephrased it to `The following staged file is unsaved and will not be included in the commit if you proceed`.\r\n\r\n@maslade Changed the `git.promptToSaveFilesBeforeCommit` to support `staged` for your use case."
      },
      {
        "user": "diablodale",
        "created_at": "2019-08-08T10:22:25Z",
        "body": "@joaomoreno , The text you proposed doesn't address the situation. Referencing the post I made, the file in question was _unstaged_. Therefore the text you propose doesn't address the unstaged files that are triggering this dialog box.\r\n\r\nYou could change the text to `The following staged and/or unstaged file(s) are unsaved and...` but that's messy. Having two dialog boxes (one for unsaved staged, one for unsaved unstaged) is also messy. And one dialog box for each file is equally messy.\r\n\r\nAll of this suggests to me that the feature itself needs rethinking, not just text in the dialog box. Personally (as a focus group of one), I don't want the feature. But someone somewhere though this feature was cool. So exploring with that group can perhaps surface a better mechanism to address their needs.\r\n"
      },
      {
        "user": "joaomoreno",
        "created_at": "2019-08-08T10:43:27Z",
        "body": "I see what you mean now. I simply removed the `staged` qualification for now. Thanks for the ping. I don't really think this small feature warrants such a big investment as a user study group, though."
      },
      {
        "user": "roblourens",
        "created_at": "2019-08-28T23:52:11Z",
        "body": "One more small thing, the warning says\r\n\r\n> The following file is unsaved and will not be included in the commit if you proceed: file.ts.\r\n\r\nBut if the file has saved changes and also some unsaved changes, then the file will be included, it's just the unsaved changes that won't be included. This seems like it would be a common case so maybe it could say \"will be incomplete in the commit\" or \"is unsaved and those changes will not be included\" or \"has unsaved changed that won't be included in the commit\" something."
      },
      {
        "user": "joaomoreno",
        "created_at": "2019-08-29T07:07:46Z",
        "body": "Changed to `The following file has unsaved changes which won't be included in the commit if you proceed`."
      }
    ]
  },
  {
    "number": 64041,
    "title": "[API] Update ParameterInformation constructor with new label type",
    "created_at": "2018-11-30T00:47:56Z",
    "closed_at": "2018-12-03T17:23:43Z",
    "labels": [
      "help wanted",
      "feature-request",
      "api",
      "good first issue"
    ],
    "url": "https://github.com/microsoft/vscode/issues/64041",
    "body": "The `ParameterInformation.label` type was updated for #56337. Unfortunately, the constructor was not updated, so this would require that you still construct the object with a `string` and subsequently update the `label` with the tuple.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/64041/comments",
    "author": "KamasamaK",
    "comments": [
      {
        "user": "skprabhanjan",
        "created_at": "2018-12-03T15:40:09Z",
        "body": "@jrieken , looking into this :)"
      }
    ]
  },
  {
    "number": 63127,
    "title": "Git: Disable smart commit bessage box",
    "created_at": "2018-11-14T13:25:21Z",
    "closed_at": "2019-08-05T15:30:58Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "git",
      "good first issue"
    ],
    "url": "https://github.com/microsoft/vscode/issues/63127",
    "body": "I don't want to commit all the files if no changes are staged. This was implemented many moons ago. Thank you.\r\n\r\nNow whenever I commit and miss staging files I get a warning and to be honest, getting rather annoyed at that warning..\r\n\r\nSo my request is to be able to disable this messagebox and keep enableSmartCommit set to false.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/63127/comments",
    "author": "rogermartensson",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2018-11-15T09:09:38Z",
        "body": "So, in that case (Ctrl Enter when there are no staged changes and `enableSmartCommit` is false) you'd like Code to not do anything at all?"
      },
      {
        "user": "rogermartensson",
        "created_at": "2018-11-15T11:29:52Z",
        "body": "Yes, exactly. I tend to forget to stage changes quite often and do not want to enable commit all changes. I think that \"no action\" is the correct way. \r\n\r\nThe UI (the V) maybe should greyed out (not clickable). "
      },
      {
        "user": "skprabhanjan",
        "created_at": "2018-11-20T10:33:58Z",
        "body": "@joaomoreno , I would like to work on this :)\r\nAny Starter points would be helpful.\r\nThanks :)"
      },
      {
        "user": "joaomoreno",
        "created_at": "2018-11-22T10:21:15Z",
        "body": "You'll want to check in `commands.ts`. Find a nice configuration setting name for skipping the message altogether."
      },
      {
        "user": "herecydev",
        "created_at": "2018-11-28T21:12:44Z",
        "body": "I didn't even see that @skprabhanjan had put in a PR (although I started this a few days ago), I did also add in my PR a \"Don't remind me\" button so that this behavior can be toggled off permanently from the UI.\r\n\r\nI was also going to raise a query about a visual change to the commit tick to clarify why a user can't commit."
      },
      {
        "user": "mIkhail-zaretsky",
        "created_at": "2018-11-28T22:18:39Z",
        "body": "Btw, to keep things simple and do not introduce a new setting maybe it is possible to extend states for existing 'git.enableSmartCommit' setting with something like 'not sure, ask me later', so it will be enum ['true', 'false', 'ask']. Then the same scenario with \"Always/Never\" choice.\r\nNot sure is it too hard to migrate setting type from boolean to enum..."
      },
      {
        "user": "skprabhanjan",
        "created_at": "2018-11-29T06:23:11Z",
        "body": "> Btw, to keep things simple and do not introduce a new setting maybe it is possible to extend states for existing 'git.enableSmartCommit' setting with something like 'not sure, ask me later', so it will be enum ['true', 'false', 'ask']. Then the same scenario with \"Always/Never\" choice.\r\n> Not sure is it too hard to migrate setting type from boolean to enum...\r\n\r\n@joaomoreno , @V-ed , Doesn't this look more reasonable ?\r\nIt will be @joaomoreno decision on which idea to finally implement :)"
      },
      {
        "user": "aeschli",
        "created_at": "2019-08-28T09:23:42Z",
        "body": "Verified new setting `git.suggestSmartCommit`"
      }
    ]
  },
  {
    "number": 61410,
    "title": "Search in folder when Cmd/Ctrl+Shift+F is invoked on a folder in sidebar ",
    "created_at": "2018-10-20T21:06:02Z",
    "closed_at": "2018-12-22T15:55:10Z",
    "labels": [
      "bug",
      "help wanted",
      "search"
    ],
    "url": "https://github.com/microsoft/vscode/issues/61410",
    "body": "When I press Cmd/Ctrl+Shift+F and a focus is currently on some folder in the Explorer sidebar, it would be nice to automatically scope the search to that folder. It's currently achievable by putting this to `keybindings.json`:\r\n\r\n```\r\n    {\r\n        \"key\": \"cmd+shift+f\",\r\n        \"command\": \"filesExplorer.findInFolder\",\r\n        \"when\": \"explorerViewletVisible && filesExplorerFocus\"\r\n    },\r\n```\r\n\r\nbut I think it would be a nice little improvement to do that automatically.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/61410/comments",
    "author": "borekb",
    "comments": [
      {
        "user": "roblourens",
        "created_at": "2018-10-22T04:47:06Z",
        "body": "I think cmd+shift+f should just focus the viewlet in that case. Imagine if you press cmd+shift+e, then cmd+shift+f - you would be stuck searching in a folder, unless you grab the mouse to move the focus off a folder.\r\n\r\nBut, I would take a PR that adds this keybinding for cmd+alt+f (or something else reasonable) and something reasonable for windows."
      },
      {
        "user": "skprabhanjan",
        "created_at": "2018-10-23T07:16:48Z",
        "body": "@roblourens , can i work on this ?\r\nIf yes then some starter points would be helpful :)"
      },
      {
        "user": "roblourens",
        "created_at": "2018-10-23T18:13:22Z",
        "body": "There is already a PR in progress, see just above your comment."
      }
    ]
  },
  {
    "number": 60472,
    "title": "Clone in VS Code from AzureDevops fails for project names containing spaces",
    "created_at": "2018-10-10T08:33:39Z",
    "closed_at": "2019-03-08T09:06:26Z",
    "labels": [
      "bug",
      "help wanted",
      "git"
    ],
    "url": "https://github.com/microsoft/vscode/issues/60472",
    "body": "\r\nIssue Type: <b>Bug</b>\r\n\r\nCreate a repo with a name that contains one or more spaces. Put something in it eg a readme.md and then attempt to clone it via VS Code.\r\n\r\nVS Code fails to URL encode the URL, and fails to quote the folder name that it creates. \r\n\r\nI copied the generated git command and did those things to it and then it worked as expected.\r\n\r\nVS Code version: Code 1.28.0 (431ef9da3cf88a7e164f9d33bf62695e07c6c2a9, 2018-10-05T14:58:53.203Z)\r\nOS version: Windows_NT x64 10.0.17763\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i5-2500K CPU @ 3.30GHz (4 x 3293)|\r\n|GPU Status|2d_canvas: enabled<br>checker_imaging: disabled_off<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: disabled_software<br>rasterization: unavailable_software<br>video_decode: enabled<br>video_encode: enabled<br>webgl: enabled<br>webgl2: enabled|\r\n|Memory (System)|7.87GB (1.79GB free)|\r\n|Process Argv||\r\n|Screen Reader|no|\r\n|VM|0%|\r\n\r\n</details><details><summary>Extensions (11)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nvscode-css-formatter|aes|1.0.1\r\naurelia|Aur|1.0.3\r\nxml|Dot|2.3.2\r\ngitlens|eam|8.5.6\r\nvscode-test-explorer|hbe|2.0.9\r\nreg|ion|0.0.2\r\nmssql|ms-|1.4.0\r\ncsharp|ms-|1.16.2\r\nPowerShell|ms-|1.9.0\r\nvsliveshare|ms-|0.3.735\r\nteam|ms-|1.136.0\r\n\r\n\r\n</details>\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/60472/comments",
    "author": "PeterWone",
    "comments": [
      {
        "user": "PeterWone",
        "created_at": "2018-10-10T08:44:57Z",
        "body": "The reason I removed the Windows from the bug title is I suspect the problem will take much the same form with the same solution on all platforms."
      },
      {
        "user": "Glober777",
        "created_at": "2019-02-08T16:41:54Z",
        "body": "Are there any news on this? I am hitting this issue quite often"
      }
    ]
  },
  {
    "number": 59544,
    "title": "Git: Clone with network drive",
    "created_at": "2018-09-27T12:00:21Z",
    "closed_at": "2019-08-05T15:08:35Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "git"
    ],
    "url": "https://github.com/microsoft/vscode/issues/59544",
    "body": "- VSCode Version: 1.27.2\r\n- OS Version: Windows 10\r\n\r\nSteps to Reproduce:\r\n\r\n1. Have a git repo on a network drive.\r\n2. Ctrl+Shift+P > Git: Clone and hit enter\r\n3. Paste the URL of the repo on the network drive. Hit enter\r\n4. Select the folder for the repo location and click Select Repository Location.\r\n5. Receive a 'Git fatal: could not create leading directories of...'\r\n\r\nDoes this issue occur when all extensions are disabled?: Yes\r\n\r\nI'm not sure if this is working as designed or not, but I guess it's relative obvious as to what is going on.\r\nI know it says URL, but I was hoping the integrated commands should work if the equivalent terminal commands do.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/59544/comments",
    "author": "Anti-Distinctlyminty",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2018-09-28T07:08:25Z",
        "body": "Can you show me an example URL?"
      },
      {
        "user": "Anti-Distinctlyminty",
        "created_at": "2018-09-28T10:51:47Z",
        "body": "The 'URL' in my case was a mapped network drive, so in step 3 I would paste\r\n`T:\\__SharedAssets\\Assets_Houdini_Dev\\houdini16.5\\python2.7libs`\r\nI'm guessing that it only expects something like a github URL, but the equivalent git command in the terminal does work. So it would be good if this worked."
      },
      {
        "user": "OneThatWalks",
        "created_at": "2018-10-17T02:06:46Z",
        "body": "```\r\nlet baseFolderName = decodeURI(url).replace(/^.*\\//, '').replace(/\\.git$/, '') || 'repository';\r\nlet folderName = baseFolderName;\r\nlet folderPath = path.join(parentPath, folderName);\r\n```\r\nWhen Just passing 'T:\\__SharedAssets\\Assets_Houdini_Dev\\houdini16.5\\python2.7libs' the base folder name cannot be determined.  Using file:\\\\ before that works.\r\n\r\nI am trying to get into contributing, if this is worth looking into further I would like to pick this up.  The fix could be determining if this is a drive first in the uri.\r\n\r\nEdit: See #61112 for potential fix.  Use path to determine the base directory for the git repo."
      },
      {
        "user": "OnorioCatenacci",
        "created_at": "2019-01-08T15:49:06Z",
        "body": "Just for the reference of anyone else that may see this: It's not \"file:\\\\\" that is a workaround for this.  It's \"file://\" that works around this issue. "
      },
      {
        "user": "aeschli",
        "created_at": "2019-08-28T09:18:52Z",
        "body": "Verified by cloning a git repo on a UNC path."
      }
    ]
  },
  {
    "number": 58177,
    "title": "Ignore empty string argument when starting Code",
    "created_at": "2018-09-07T09:52:15Z",
    "closed_at": "2019-08-05T15:20:55Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "verification-needed",
      "workbench-cli"
    ],
    "url": "https://github.com/microsoft/vscode/issues/58177",
    "body": "- VSCode Version: 1.26.0\r\n- OS Version: macOS\r\n\r\nSteps to Reproduce:\r\n\r\n1. run `code ''` in command line.\r\n2. VS Code seems opened a workspace of current directory folder, like `code .`\r\n\r\nDoes this issue occur when all extensions are disabled?: Yes\r\n\r\n### Reason the above behavior is improper\r\nWhen I run some command like `code \"$(some command to get the file)\"` (e.g. `code \"$(which \"$1\")\"` in Linux), if the inner command failed, it return empty string as argument.  VSCode shouldn't open current directory and replace the workspace (which is annoying), but should just open or focus the application instead.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/58177/comments",
    "author": "johnnytemp",
    "comments": [
      {
        "user": "johnnytemp",
        "created_at": "2018-09-07T10:21:47Z",
        "body": "Note: Neither Notepad++ or Sublime Text will open a folder wrongly with empty string argument."
      },
      {
        "user": "bpasero",
        "created_at": "2018-09-07T18:12:58Z",
        "body": "@johnnytemp what would you expect to happen, open an empty window?"
      },
      {
        "user": "johnnytemp",
        "created_at": "2018-09-07T23:03:41Z",
        "body": "Yes.  Or focus existing window only.  Just like running `code`."
      },
      {
        "user": "johnnytemp",
        "created_at": "2018-09-10T01:27:41Z",
        "body": "Wrong press \"close\""
      },
      {
        "user": "Ragnoroct",
        "created_at": "2018-10-05T12:37:40Z",
        "body": "Can I be assigned to this? I'd like to take a stab at it."
      },
      {
        "user": "Ragnoroct",
        "created_at": "2018-10-27T18:40:26Z",
        "body": "@bpasero I've added code that should do the trick. I've tested that it removes an empty `''` argument. I wasn't able to test the actual functionality though because both `./scripts/code.bat` and `./scripts/code-cli.bat` change the current directory. I couldn't figure out how to mimic production without hacking the startup scripts. "
      },
      {
        "user": "johnnytemp",
        "created_at": "2018-11-08T08:50:23Z",
        "body": "I just edited the main description to add an example usage - `code \"$(which \"$1\")\"` - which open a script file in environment PATH by VS Code to edit it.\r\n\r\n### Reason worth a fix\r\n\r\nIf the argument \"$1\" (for the script name) have typo, VS Code open a big slow workspace folder annoyingly.  The existing behavior has no use, and it put the burden to user to write extra lines of if-else to avoid it, resulting in a big command & more typings."
      }
    ]
  },
  {
    "number": 57507,
    "title": "Make \"Modified in\" navigable",
    "created_at": "2018-08-29T13:16:22Z",
    "closed_at": "2018-10-06T04:15:18Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "verification-needed",
      "settings-editor"
    ],
    "url": "https://github.com/microsoft/vscode/issues/57507",
    "body": "Issue Type: <b>Feature Request</b>\r\n\r\nTesting #57304 \r\n\r\nJust a thought: When I see \"Modified in: Workspace\" I might want to go there and check. I'd keep font and color as they are and add an underline and pointer cursor to \"Workspace\" on hover.\r\n\r\nVS Code version: Code - Insiders 1.27.0-insider (47d0584301d16d4efd6618f6f33ef14099c92561, 2018-08-29T05:12:15.247Z)\r\nOS version: Darwin x64 17.7.0\r\n\r\n\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/57507/comments",
    "author": "chrmarti",
    "comments": [
      {
        "user": "roblourens",
        "created_at": "2018-08-29T17:55:55Z",
        "body": "Good idea!"
      },
      {
        "user": "roblourens",
        "created_at": "2018-09-24T05:04:59Z",
        "body": "I would take a PR for this\r\n\r\n- \"Modified in: Workspace\" - the word Workspace is underlined\r\n- When clicked, it switches to the Workspace scope, and copies the setting key into the search bar, so the view is filtered to just that one setting"
      },
      {
        "user": "w9jds",
        "created_at": "2018-10-01T18:28:52Z",
        "body": "I'm interested in looking into this if that is alright."
      }
    ]
  },
  {
    "number": 57289,
    "title": "Settings UI should remember its search upon reload",
    "created_at": "2018-08-27T18:37:29Z",
    "closed_at": "2018-10-06T04:38:49Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "verification-needed",
      "settings-editor"
    ],
    "url": "https://github.com/microsoft/vscode/issues/57289",
    "body": "Issue Type: <b>Feature Request</b>\r\n\r\nSome settings require reload and this may be in the middle of the user modifying settings. It would be cool if the settings UI could remember the search through reload.\r\n\r\n\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/57289/comments",
    "author": "sbatten",
    "comments": [
      {
        "user": "roblourens",
        "created_at": "2018-09-24T04:53:22Z",
        "body": "#58499\r\n\r\n> I would say \"the search should be persisted when reloading with the settings editor open\".\r\n\r\n"
      },
      {
        "user": "roblourens",
        "created_at": "2018-09-24T04:58:33Z",
        "body": "PR welcome.\r\n\r\n- Use `getEditorMemento` to cache the search string of the settings editor (settingsEditor2.ts)\r\n- Implement `setVisible`, the state should only be cached or restored if the settings editor was visible when the window reloaded."
      },
      {
        "user": "roblourens",
        "created_at": "2018-09-24T05:01:52Z",
        "body": "Besides the search string, this should also cover the scroll position of the settings list per #57365. If that turns out to be hard, it can be a separate PR..."
      }
    ]
  },
  {
    "number": 56735,
    "title": "markdown syntax highlight not correct",
    "created_at": "2018-08-18T10:13:50Z",
    "closed_at": "2018-08-20T14:25:15Z",
    "labels": [
      "bug",
      "help wanted",
      "upstream",
      "verified",
      "markdown",
      "grammar"
    ],
    "url": "https://github.com/microsoft/vscode/issues/56735",
    "body": "Issue Type: <b>Bug</b>\r\n\r\n- Try `text**bold**` and `text **bold**`. The first one **is not** highlighted and the second one is highlighted. But in preview mode, the first **is** bold and the second is bold too.\r\n- Try `text**$0**` , `text **$0**` and `text **a$0**`. The first one **is not** highlighted, the second one **is not** highlighted and the third one is highlighted. But in preview mode, the first one **is not** bold, the second one **is** bold and the third one is bold.\r\nSo there must be some problem in markdown syntax highlight. Please fix it. Thanks.\r\n\r\nVS Code version: Code 1.26.1 (493869ee8e8a846b0855873886fc79d480d342de, 2018-08-16T18:34:20.517Z)\r\nOS version: Linux x64 4.15.0-32-generic\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i5-4210U CPU @ 1.70GHz (4 x 1880)|\r\n|GPU Status|2d_canvas: enabled<br>checker_imaging: disabled_off<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: disabled_software<br>rasterization: disabled_software<br>video_decode: unavailable_software<br>video_encode: unavailable_software<br>webgl: enabled<br>webgl2: enabled|\r\n|Load (avg)|0, 0, 0|\r\n|Memory (System)|5.72GB (2.26GB free)|\r\n|Process Argv|/usr/share/code/code --unity-launch|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n\r\n</details><details><summary>Extensions (15)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nbracket-pair-colorizer|Coe|1.0.59\r\noutput-colorizer|IBM|0.1.2\r\nvsc-prolog|art|0.8.17\r\ndakara-foldplus|dak|1.3.1\r\nvscode-eslint|dba|1.4.12\r\ntranslation|dus|0.0.4\r\ngitlens|eam|8.5.4\r\ncode-runner|for|0.9.4\r\nvscode-language-pack-zh-hans|MS-|1.26.3\r\npython|ms-|2018.7.1\r\ncpptools|ms-|0.18.1\r\njava|red|0.29.0\r\npartial-diff|ryu|1.3.0\r\ncode-settings-sync|Sha|3.0.0\r\nrewrap|stk|1.9.1\r\n\r\n\r\n</details>\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/56735/comments",
    "author": "LambdaAlpha",
    "comments": [
      {
        "user": "mjbvz",
        "created_at": "2018-08-20T14:25:15Z",
        "body": "This issue was moved to Microsoft/vscode-markdown-tm-grammar#26"
      }
    ]
  },
  {
    "number": 55554,
    "title": "select all doesn't work in extension description page",
    "created_at": "2018-08-01T03:47:50Z",
    "closed_at": "2020-08-12T05:11:04Z",
    "labels": [
      "help wanted",
      "feature-request",
      "*out-of-scope"
    ],
    "url": "https://github.com/microsoft/vscode/issues/55554",
    "body": "Testing #54892\r\n\r\nSelect All does nothing in Extension description page. I tried some of my webview extensions and select all doesn't work as well.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/55554/comments",
    "author": "rebornix",
    "comments": [
      {
        "user": "mjbvz",
        "created_at": "2018-08-02T08:37:20Z",
        "body": "Extensions description page is expected. What other webviews did you try?"
      },
      {
        "user": "mjbvz",
        "created_at": "2020-08-12T05:11:04Z",
        "body": "Closing this as out of scope since there has been limited interest over the past two years"
      }
    ]
  },
  {
    "number": 54459,
    "title": "Tests frequently hang on Linux Travis before invoking test script",
    "created_at": "2018-07-17T08:32:09Z",
    "closed_at": "2018-08-06T13:33:02Z",
    "labels": [
      "help wanted",
      "info-needed"
    ],
    "url": "https://github.com/microsoft/vscode/issues/54459",
    "body": "Recently I've started seeing my test runs hanging on Linux and are killed by Travis due to no output. It's intermittent, but only seems to happen on Linux. I have 6 or 7 test suites, and sometimes it happens on the first one, sometimes it happens on another. The hang *appears* to be before any of my test code has run.\r\n\r\nHere's an example log:\r\n\r\n```\r\n### VS Code Extension Test Run ###\r\nCurrent working directory: /home/travis/build/Dart-Code/Dart-Code\r\nRunning extension tests: /home/travis/build/Dart-Code/Dart-Code/.vscode-test/stable/VSCode-linux-x64/code /home/travis/build/Dart-Code/Dart-Code/test/test_projects/projects.code-workspace --extensionDevelopmentPath=/home/travis/build/Dart-Code/Dart-Code --extensionTestsPath=/home/travis/build/Dart-Code/Dart-Code/out/test/multi_root\r\nXlib:  extension \"RANDR\" missing on display \":99.0\".\r\nXlib:  extension \"RANDR\" missing on display \":99.0\".\r\n[main 8:02:59 AM] update#setState idle\r\nbash: cannot set terminal process group (-1): Inappropriate ioctl for device\r\nbash: no job control in this shell\r\nnvm is not compatible with the \"npm_config_prefix\" environment variable: currently set to \"/home/travis/.nvm/versions/node/v8.11.3\"\r\nRun `unset npm_config_prefix` to unset it.\r\nProcess is still going after 300s.\r\nWaiting another 300s before terminating\r\n    [\"node_modules/vscode/bin/test\"]\r\nTerminating process for taking too long after 600s!\r\n    [\"node_modules/vscode/bin/test\"]\r\nTerminating test run due to hung process.\r\n```\r\n\r\nThe text at the top is from VS Code's `test` script. The text from `Process is still going after 300s.` onwards comes from my own code which terminates the `node` process if it's still going after 600 seconds (with a warning at 30s). The text in between, I'm not sure if it's coming from Travis or VS Code.\r\n\r\nAt the very top (even before imports) of the test runner file (before even the imports), I added:\r\n\r\n```\r\nconsole.log(\"Starting test runner...\");\r\n```\r\n\r\nHowever this text is never output, which leads me to believe VS Code is never invoking it (or for some reason the output isn't making it back).\r\n\r\nI'll see if I can get a Linux VM and repro there, but I'm opening this now in case anyone has ideas in the meantime - for ex, is there a way to get VS Code to print more debug info about what it's doing that might narrow down where it's getting to?",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/54459/comments",
    "author": "DanTup",
    "comments": [
      {
        "user": "DanTup",
        "created_at": "2018-07-17T08:43:12Z",
        "body": "I've copied the test script so I can modify it and added `--log debug` to the args when invoking Code, but I can't figure out how I can easily get the paths so I can dump those logs when this happens.?"
      },
      {
        "user": "DanTup",
        "created_at": "2018-07-17T09:30:47Z",
        "body": "Ok, I found I can set the `VSCODE_LOGS` env variable. Setting up the CI to upload these somewhere if the process gets terminated and I'll post back when I have them."
      },
      {
        "user": "DanTup",
        "created_at": "2018-07-17T10:47:39Z",
        "body": "Ok, I got logs; but there's not a lot in them.\r\n\r\nmain.log\r\n```\r\n[2018-07-17 10:12:28.370] [main] [debug] Starting VS Code\r\n[2018-07-17 10:12:28.370] [main] [debug] from: /home/travis/build/Dart-Code/Dart-Code/.vscode-test/stable/VSCode-linux-x64/resources/app\r\n[2018-07-17 10:12:28.374] [main] [debug] args: {\"_\":[\"/home/travis/build/Dart-Code/Dart-Code/test/test_projects/flutter_hello_world\"],\"help\":false,\"h\":false,\"version\":false,\"v\":false,\"wait\":false,\"w\":false,\"diff\":false,\"d\":false,\"add\":false,\"a\":false,\"goto\":false,\"g\":false,\"new-window\":false,\"n\":false,\"unity-launch\":false,\"reuse-window\":false,\"r\":false,\"open-url\":false,\"performance\":false,\"p\":false,\"prof-startup\":false,\"verbose\":false,\"logExtensionHostCommunication\":false,\"disable-extensions\":false,\"disableExtensions\":false,\"list-extensions\":false,\"show-versions\":false,\"nolazy\":false,\"issue\":false,\"skip-getting-started\":false,\"skip-release-notes\":false,\"sticky-quickopen\":false,\"disable-restore-windows\":false,\"disable-telemetry\":false,\"disable-updates\":false,\"disable-crash-reporter\":false,\"skip-add-to-recently-opened\":false,\"status\":false,\"s\":false,\"file-write\":false,\"file-chmod\":false,\"driver-verbose\":false,\"log\":\"trace\",\"extensionDevelopmentPath\":\"/home/travis/build/Dart-Code/Dart-Code\",\"extensionTestsPath\":\"/home/travis/build/Dart-Code/Dart-Code/out/test/flutter_only\"}\r\n[2018-07-17 10:12:28.374] [main] [trace] Resolving machine identifier...\r\n[2018-07-17 10:12:28.375] [main] [trace] Resolved machine identifier: 6ed5dc36f232c028b87d6a6ccaf13525bd454cb7b5288fe4f3e4377844129cec\r\n[2018-07-17 10:12:28.380] [main] [info] update#setState idle\r\n[2018-07-17 10:12:31.310] [main] [trace] windowsService#whenSharedProcessReady\r\n[2018-07-17 10:12:31.343] [main] [trace] windowsService#startCrashReporter\r\n[2018-07-17 10:12:31.390] [main] [trace] windowsService#getRecentlyOpened 1\r\n[2018-07-17 10:12:31.526] [main] [trace] windowsService#getWindowCount\r\n[2018-07-17 10:12:31.532] [main] [trace] windowsService#getRecentlyOpened 1\r\n```\r\n\r\nrenderer1.log\r\n```\r\n[2018-07-17 10:12:31.284] [renderer1] [trace] openWorkbench configuration {\"_\":[\"/home/travis/build/Dart-Code/Dart-Code/test/test_projects/flutter_hello_world\"],\"help\":false,\"h\":false,\"version\":false,\"v\":false,\"wait\":false,\"w\":false,\"diff\":false,\"d\":false,\"add\":false,\"a\":false,\"goto\":false,\"g\":false,\"new-window\":false,\"n\":false,\"unity-launch\":false,\"reuse-window\":false,\"r\":false,\"open-url\":false,\"performance\":false,\"p\":false,\"prof-startup\":false,\"verbose\":false,\"logExtensionHostCommunication\":false,\"disable-extensions\":false,\"disableExtensions\":false,\"list-extensions\":false,\"show-versions\":false,\"nolazy\":false,\"issue\":false,\"skip-getting-started\":false,\"skip-release-notes\":false,\"sticky-quickopen\":false,\"disable-restore-windows\":false,\"disable-telemetry\":false,\"disable-updates\":false,\"disable-crash-reporter\":false,\"skip-add-to-recently-opened\":false,\"status\":false,\"s\":false,\"file-write\":false,\"file-chmod\":false,\"driver-verbose\":false,\"log\":\"trace\",\"extensionDevelopmentPath\":\"/home/travis/build/Dart-Code/Dart-Code\",\"extensionTestsPath\":\"/home/travis/build/Dart-Code/Dart-Code/out/test/flutter_only\",\"appRoot\":\"/home/travis/build/Dart-Code/Dart-Code/.vscode-test/stable/VSCode-linux-x64/resources/app\",\"machineId\":\"6ed5dc36f232c028b87d6a6ccaf13525bd454cb7b5288fe4f3e4377844129cec\",\"execPath\":\"/home/travis/build/Dart-Code/Dart-Code/.vscode-test/stable/VSCode-linux-x64/code\",\"userEnv\":{\"VSCODE_IPC_HOOK\":\"/home/travis/.config/Code/1.25.1-main.sock\",\"VSCODE_NLS_CONFIG\":\"{\\\"locale\\\":\\\"en-us\\\",\\\"availableLanguages\\\":{}}\",\"VSCODE_LOGS\":\"/home/travis/build/Dart-Code/Dart-Code/.dart_code_test_logs/flutter_only_dev_stable\"},\"isInitialStartup\":true,\"folderPath\":\"/home/travis/build/Dart-Code/Dart-Code/test/test_projects/flutter_hello_world\",\"filesToOpen\":[],\"filesToCreate\":[],\"filesToDiff\":[],\"nodeCachedDataDir\":\"/home/travis/.config/Code/CachedData/1dfc5e557209371715f655691b1235b6b26a06be\",\"windowId\":1,\"logLevel\":0,\"fullscreen\":false,\"highContrast\":false,\"accessibilitySupport\":false,\"baseTheme\":\"vs-dark\",\"backgroundColor\":\"#1e1e1e\",\"maximized\":false,\"perfEntries\":[\"mark\",\"main:started\",1531822348022,0,\"mark\",\"main:appReady\",1531822348111,0,\"mark\",\"main:loadWindow\",1531822348510,0],\"perfStartTime\":1531822348025,\"perfWindowLoadTime\":1531822348510}\r\n[2018-07-17 10:12:31.342] [renderer1] [trace] lifecycle: starting up (startup kind: 1)\r\n[2018-07-17 10:12:31.364] [renderer1] [trace] lifecycle: phase changed (value: 2)\r\n[2018-07-17 10:12:31.516] [renderer1] [trace] lifecycle: phase changed (value: 3)\r\n```\r\n\r\nAnd there are two 0 byte files at `output_1_20180717T101231/extensions.log` and `output_1_20180717T101231/tasks.log`.\r\n\r\nHere's my console output from the Travis build:\r\n\r\n```\r\n    Spawning test run:\r\n        Command: node test/test\r\n        CWD: /home/travis/build/Dart-Code/Dart-Code\r\n        ENV: {\r\n                \"DART_PATH_OVERRIDE\": \"/home/travis/build/Dart-Code/Dart-Code/with spaces/dart-sdk/bin:/home/travis/build/Dart-Code/Dart-Code/with spaces/flutter/bin\",\r\n                \"CODE_VERSION\": \"*\",\r\n                \"DART_CODE_IS_TEST_RUN\": true,\r\n                \"MOCHA_FORBID_ONLY\": true,\r\n                \"CODE_TESTS_WORKSPACE\": \"/home/travis/build/Dart-Code/Dart-Code/test/test_projects/flutter_hello_world\",\r\n                \"CODE_TESTS_PATH\": \"/home/travis/build/Dart-Code/Dart-Code/out/test/flutter_only\",\r\n                \"VSCODE_LOGS\": \"/home/travis/build/Dart-Code/Dart-Code/.dart_code_test_logs/flutter_only_dev_stable\",\r\n                \"DC_TEST_LOGS\": \"/home/travis/build/Dart-Code/Dart-Code/.dart_code_test_logs/flutter_only_dev_stable\",\r\n                \"COVERAGE_OUTPUT\": \"/home/travis/build/Dart-Code/Dart-Code/.nyc_output/flutter_only_dev_stable.json\",\r\n                \"TEST_XML_OUTPUT\": \"/home/travis/build/Dart-Code/Dart-Code/.test_results/flutter_only_dev_stable.xml\"\r\n              }\r\n### VS Code Extension Test Run ###\r\nCurrent working directory: /home/travis/build/Dart-Code/Dart-Code\r\nRunning extension tests: /home/travis/build/Dart-Code/Dart-Code/.vscode-test/stable/VSCode-linux-x64/code --log trace /home/travis/build/Dart-Code/Dart-Code/test/test_projects/flutter_hello_world --extensionDevelopmentPath=/home/travis/build/Dart-Code/Dart-Code --extensionTestsPath=/home/travis/build/Dart-Code/Dart-Code/out/test/flutter_only\r\nXlib:  extension \"RANDR\" missing on display \":99.0\".\r\nXlib:  extension \"RANDR\" missing on display \":99.0\".\r\n[main 10:12:28 AM] Starting VS Code\r\n[main 10:12:28 AM] from: /home/travis/build/Dart-Code/Dart-Code/.vscode-test/stable/VSCode-linux-x64/resources/app\r\n[main 10:12:28 AM] args: { _: [ '/home/travis/build/Dart-Code/Dart-Code/test/test_projects/flutter_hello_world' ],\r\n  help: false,\r\n  h: false,\r\n  version: false,\r\n  v: false,\r\n  wait: false,\r\n  w: false,\r\n  diff: false,\r\n  d: false,\r\n  add: false,\r\n  a: false,\r\n  goto: false,\r\n  g: false,\r\n  'new-window': false,\r\n  n: false,\r\n  'unity-launch': false,\r\n  'reuse-window': false,\r\n  r: false,\r\n  'open-url': false,\r\n  performance: false,\r\n  p: false,\r\n  'prof-startup': false,\r\n  verbose: false,\r\n  logExtensionHostCommunication: false,\r\n  'disable-extensions': false,\r\n  disableExtensions: false,\r\n  'list-extensions': false,\r\n  'show-versions': false,\r\n  nolazy: false,\r\n  issue: false,\r\n  'skip-getting-started': false,\r\n  'skip-release-notes': false,\r\n  'sticky-quickopen': false,\r\n  'disable-restore-windows': false,\r\n  'disable-telemetry': false,\r\n  'disable-updates': false,\r\n  'disable-crash-reporter': false,\r\n  'skip-add-to-recently-opened': false,\r\n  status: false,\r\n  s: false,\r\n  'file-write': false,\r\n  'file-chmod': false,\r\n  'driver-verbose': false,\r\n  log: 'trace',\r\n  extensionDevelopmentPath: '/home/travis/build/Dart-Code/Dart-Code',\r\n  extensionTestsPath: '/home/travis/build/Dart-Code/Dart-Code/out/test/flutter_only' }\r\n[main 10:12:28 AM] Resolving machine identifier...\r\n[main 10:12:28 AM] Resolved machine identifier: 6ed5dc36f232c028b87d6a6ccaf13525bd454cb7b5288fe4f3e4377844129cec\r\n[main 10:12:28 AM] update#setState idle\r\nbash: cannot set terminal process group (-1): Inappropriate ioctl for device\r\nbash: no job control in this shell\r\nnvm is not compatible with the \"npm_config_prefix\" environment variable: currently set to \"/home/travis/.nvm/versions/node/v8.11.3\"\r\nRun `unset npm_config_prefix` to unset it.\r\n[main 10:12:31 AM] windowsService#whenSharedProcessReady\r\n[main 10:12:31 AM] windowsService#startCrashReporter\r\n[main 10:12:31 AM] windowsService#getRecentlyOpened 1\r\n[main 10:12:31 AM] windowsService#getWindowCount\r\n[main 10:12:31 AM] windowsService#getRecentlyOpened 1\r\nProcess is still going after 300s.\r\nWaiting another 300s before terminating\r\n    [\"test/test\"]\r\nTerminating process for taking too long after 600s!\r\n    [\"test/test\"]\r\nTerminating test run due to hung process.\r\n```"
      },
      {
        "user": "bpasero",
        "created_at": "2018-08-06T12:28:45Z",
        "body": "@DanTup again I have to ask for a standalone test example to reproduce"
      },
      {
        "user": "DanTup",
        "created_at": "2018-08-06T13:15:09Z",
        "body": "I hoped this might've been a common issue when I raised it and you might've seen it in your own builds, but I guess not. I'll try and get a small sample and run it repeatedly on Travis to see and let you know.\r\n\r\nI'm away for a bit now though, so may be a while - feel free to close and I'll re-open/re-raise when I have better info."
      }
    ]
  },
  {
    "number": 53604,
    "title": "Rename 'Open in Command Prompt' to 'Open in Terminal'",
    "created_at": "2018-07-05T17:17:49Z",
    "closed_at": "2018-07-06T17:19:38Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "terminal"
    ],
    "url": "https://github.com/microsoft/vscode/issues/53604",
    "body": "<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Describe the feature you'd like. -->\r\nOn Windows 10, when you right click a folder/file there is an option to open in command prompt, this may may be confusing for users as it actually opens in the Terminal in VS Code, the expected behavior may be that an actual Command Prompt window would open. It can also be misleading if the user set up WSL as their Terminal.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/53604/comments",
    "author": "isiah-lloyd",
    "comments": [
      {
        "user": "jlbeard84",
        "created_at": "2018-07-06T02:56:37Z",
        "body": "Opened PR #53636 to make this more consistent."
      }
    ]
  },
  {
    "number": 53555,
    "title": "Wrong monitor being used if window is fullscreen",
    "created_at": "2018-07-04T20:20:45Z",
    "closed_at": "2018-09-25T16:22:18Z",
    "labels": [
      "bug",
      "help wanted",
      "info-needed",
      "workbench-window"
    ],
    "url": "https://github.com/microsoft/vscode/issues/53555",
    "body": "OSX HighSierra (10.13.6 Beta)   VSCode - Version 1.24.1 (1.24.1)\r\n\r\nRecently quite frequently vs code has got into a state where it is opening things in the \"wrong\" window. For example I have two windows open, click on a recent link in the Welcome tab in one window and it opens in the other.. Another symptom when it is in this state is that launching via new window from the dock doesn't create a new window but reuses one already open. When this happens I have to close all windows to recover normal behaviour. I cannot remember ever seeing this happen before the last update. I also haven't seen it happen on ubuntu, only OSX. Has anyone else had window strangeness recently?",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/53555/comments",
    "author": "monkeygroover",
    "comments": [
      {
        "user": "monkeygroover",
        "created_at": "2018-07-04T20:30:18Z",
        "body": "Update, so I think i found reproducible steps.\r\n\r\nOpen first window, drag it to second monitor and full screen it.\r\n\r\nthen go back to first monitor and try to open a second window. (it will reuse the first fullscreen window)\r\n\r\nIf I don't fullscreen the first window all works ok."
      },
      {
        "user": "bpasero",
        "created_at": "2018-07-05T09:00:37Z",
        "body": "@monkeygroover so all of this only reproduces if one window is fullscreen, is that right?"
      },
      {
        "user": "monkeygroover",
        "created_at": "2018-07-05T09:10:41Z",
        "body": "Yes I think that appears to be the case. I can't get it to happen if no windows are in fullscreen mode. Not sure if it being on a second monitor is relevant or not, i'll test that when i get a moment."
      },
      {
        "user": "monkeygroover",
        "created_at": "2018-07-05T09:24:16Z",
        "body": "Yes It does require multiple displays. If i have a window fullscreen on a single display I see no issues. As soon as i drag that fullscreen window onto a second display then the problem occurs."
      },
      {
        "user": "bpasero",
        "created_at": "2018-07-05T09:49:22Z",
        "body": "Open for help if someone wants to look into this. It could be an upstream issue too."
      },
      {
        "user": "bpasero",
        "created_at": "2018-09-25T05:11:56Z",
        "body": "@monkeygroover your steps:\r\n\r\n> Open first window, drag it to second monitor and full screen it.\r\n> \r\n> then go back to first monitor and try to open a second window. (it will reuse the first fullscreen window)\r\n\r\nThis is expected, VSCode does not really know on which monitor you are, so it will open a new window on the monitor of the last active VSCode window. If you have a window opened in the first monitor which is most recently used and try this, the window should open correctly on that monitor."
      },
      {
        "user": "monkeygroover",
        "created_at": "2018-09-25T15:04:23Z",
        "body": "Yes in full-screen that matches what I see. However in windowed mode the new window always opens on the desktop of the dock that I launched new window from no matter what order I do it in or what has focus. This has recently changed though. It used to open full screen on the \"wrong\" monitor replacing the previously open full screen window, now it just opens a new tab within the previously full screen window, so i suspect this is \"by design\" when working full screen. I will close this now as I don't think vs code layer can influence this behaviour much?"
      },
      {
        "user": "bpasero",
        "created_at": "2018-09-25T15:51:26Z",
        "body": "@monkeygroover are you maybe using sierra native window tabs?"
      },
      {
        "user": "monkeygroover",
        "created_at": "2018-09-25T16:22:18Z",
        "body": "It appears I am (didn't even know about the option!) however with that off + whatever changed a month or so back this is now working as I would expect.\r\n\r\nThanks! "
      }
    ]
  },
  {
    "number": 53465,
    "title": "Support opening text document with provided visible ranges from diff editor",
    "created_at": "2018-07-02T22:20:33Z",
    "closed_at": "2018-09-12T10:22:28Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "git",
      "good first issue"
    ],
    "url": "https://github.com/microsoft/vscode/issues/53465",
    "body": "Issue Type: <b>Bug</b>\r\n\r\nWhen viewing a Source Code Management (git) diff editor, I scroll to the interesting areas. But when I click \"Open File\" to be rid of the left-side view, I'm reset to the top of the file. \r\n\r\nThough minor, its impact is significant: I'm usually thinking about the change to be made, not about file navigation. This causes confusion by kicking me out of the solution mindset and into trying to re-discover the code area.\r\n\r\nVS Code version: Code 1.24.1 (24f62626b222e9a8313213fb64b10d741a326288, 2018-06-13T17:41:50.128Z)\r\nOS version: Darwin x64 17.5.0\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i7-4980HQ CPU @ 2.80GHz (8 x 2800)|\r\n|GPU Status|2d_canvas: enabled<br>flash_3d: enabled<br>flash_stage3d: enabled<br>flash_stage3d_baseline: enabled<br>gpu_compositing: enabled<br>multiple_raster_threads: enabled_on<br>native_gpu_memory_buffers: enabled<br>rasterization: enabled<br>video_decode: enabled<br>video_encode: enabled<br>vpx_decode: enabled<br>webgl: enabled<br>webgl2: enabled|\r\n|Load (avg)|2, 16, 23|\r\n|Memory (System)|16.00GB (0.80GB free)|\r\n|Process Argv|/Applications/Visual Studio Code.app/Contents/MacOS/Electron -psn_0_2826930|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n\r\n</details><details><summary>Extensions (13)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nng-template|Ang|0.1.9\r\nvscode-docker|Pet|0.0.27\r\nvscode-database|baj|1.5.1\r\ngitlens|eam|8.4.1\r\nAngular2|joh|6.1.1\r\nvscode-sshfs|Kel|1.9.2\r\natom-keybindings|ms-|3.0.4\r\nGo|ms-|0.6.84\r\nvetur|oct|0.12.5\r\nremote-vscode|raf|1.1.0\r\nvscode-redis|vit|1.2.0\r\nvscode-todo-highlight|way|0.5.12\r\nvscode-proto3|zxh|0.2.1\r\n\r\n\r\n</details>\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/53465/comments",
    "author": "ajackson-cpi",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2018-07-03T07:59:18Z",
        "body": "Does this work for you if you set a cursor/selection before switching editors?"
      },
      {
        "user": "ajackson-cpi",
        "created_at": "2018-07-03T21:26:37Z",
        "body": "Yes, Setting a cursor location does resolve it."
      },
      {
        "user": "mnikn",
        "created_at": "2018-07-06T03:43:21Z",
        "body": "want to contribute on this issue, has someone handled it before?"
      },
      {
        "user": "mnikn",
        "created_at": "2018-07-08T01:28:57Z",
        "body": "@ajackson-cpi what if you set a cursor location first, then you scroll to another area, which position you expect when you open this file? the cursor location or the scroll area?"
      },
      {
        "user": "ajackson-cpi",
        "created_at": "2018-07-09T16:26:24Z",
        "body": "My preference is that both the cursor and the scroll location are preserved thereby resembling the left-side of the diff being closed and the right side being unchanged. \r\nToday only the cursor position is preserved and the scroll is re-centered onto it. "
      },
      {
        "user": "joaomoreno",
        "created_at": "2018-09-12T10:22:23Z",
        "body": "Fixed by #54867"
      }
    ]
  },
  {
    "number": 52787,
    "title": "Git conflict resolution when remote file is deleted",
    "created_at": "2018-06-25T10:03:03Z",
    "closed_at": "2018-09-19T13:49:04Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "git",
      "verification-needed"
    ],
    "url": "https://github.com/microsoft/vscode/issues/52787",
    "body": "I'm using Code for my merges these days and it's brilliant apart from deleted files.\r\n\r\nWhen you've modified a file locally but it's been deleted remotely then there is no way to accept the remote change in Code.\r\nYou can copy changes into your local and commit if you wanted to keep the file.\r\nIf you want to accept the remote delete then you need to do a git remove locally.\r\n\r\nIt would be great to support git remove when you right click on the file (in the context menu with open file and stage changes)\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/52787/comments",
    "author": "ThetaSinner",
    "comments": [
      {
        "user": "maxmilton",
        "created_at": "2018-09-06T02:49:29Z",
        "body": "I tend to run into this a lot. In an active projects with a decent size team of devs it's a common occurrence.\r\n\r\nWould be great to have some way to decide quickly in the UI. A note like \"This file was removed in the remote repository, what would you like to do? [Keep] / [Remove]\"."
      },
      {
        "user": "joaomoreno",
        "created_at": "2018-09-19T13:46:41Z",
        "body": "Good news guys, just implemented handling `Deleted By Them` and `Deleted By Us` conflicts!"
      }
    ]
  },
  {
    "number": 51575,
    "title": "Interactive Playground Refactoring via Extraction does not work",
    "created_at": "2018-06-11T06:55:35Z",
    "closed_at": "2019-08-22T01:04:01Z",
    "labels": [
      "bug",
      "help wanted",
      "typescript",
      "verified",
      "workbench-welcome"
    ],
    "url": "https://github.com/microsoft/vscode/issues/51575",
    "body": "<!-- Please search existing issues to avoid creating duplicates. -->\r\n\r\n<!-- Use Help > Report Issue to prefill these. -->\r\n- Version 1.24.0\r\n- Commit 6a6e02cef0f2122ee1469765b704faf5d0e0d859\r\n- Datum 2018-06-06T17:35:40.560Z\r\n- Shell 1.7.12\r\n- Renderer 58.0.3029.110\r\n- Node 7.9.0\r\n- Architektur x64\r\n- OS Version: Microsoft Windows 10 Enterprise 10.0.15063\r\n\r\nSteps to Reproduce:\r\n\r\n1. Open Interactive Playground\r\n2. Scroll down to the Refactoring via Extraction example (All Examples before this one worked)\r\n3. Select rows 3 to 5\r\n4. Press CRTL+. shows \"no codeactions available\"(translated from german text: 'keine Codeaktionen verfügbar')\r\n5. Press right mouse button select refactorings -> no refactorings available \r\n\r\n<!-- Launch with `code --disable-extensions` to check. -->\r\nDoes this issue occur when all extensions are disabled?: Yes",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/51575/comments",
    "author": "TclasenITVT",
    "comments": [
      {
        "user": "chrmarti",
        "created_at": "2018-06-27T09:09:18Z",
        "body": "This might be a limitation of what the TypeScript service offers for extraction."
      },
      {
        "user": "TclasenITVT",
        "created_at": "2018-06-27T09:55:21Z",
        "body": "Then you should change the example code to work around the limitation or just throw this example out of the interactive playground? I just used the extraction feature with js yesterday. Extracting into a global function, that worked fine."
      },
      {
        "user": "ghost",
        "created_at": "2018-10-14T12:53:08Z",
        "body": "Same issue here on OS X 1.28.1 with all extensions disabled.  The Interactive Playground example states:\r\n\r\nRefactoring via Extraction\r\nSometimes you want to refactor already written code into a separate function or constant to reuse it later. Select the lines you want to refactor out and press ⌘. or click the little light bulb and choose one of the respective Extract to... options. Try it by selecting the code inside the if-clause on line 3 or any other common code you want to refactor out.\r\n\r\nSelecting typeof el === 'number' && el % 2 === 0 indeed presents the \"lightbulb\" and ⌘. brings context menu to Extract to inner function, global space or constant.  None of the 3 options produce a result."
      },
      {
        "user": "jsejcksn",
        "created_at": "2019-02-06T18:02:53Z",
        "body": "This is quite important for onboarding, yes?\r\n\r\nI'm here because I experienced the same behavior described in #55101. My output:\r\n\r\n```\r\n[renderer1] [error] Error: Failed to create file walkThroughSnippet:/Applications/Visual%20Studio%20Code.app/Contents/Resources/app/out/vs/workbench/parts/welcome/walkThrough/electron-browser/editor/vs_code_editor_walkthrough.md#4.js\r\n    at new t (file:///Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/workbench.main.js:1474:150)\r\n    at file:///Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/workbench.main.js:3446:577\r\n    at <anonymous>\r\n    at process._tickCallback (internal/process/next_tick.js:188:7)\r\n```"
      },
      {
        "user": "kdkd",
        "created_at": "2019-03-30T15:45:50Z",
        "body": "This is still occurring in 1.32.3 on MacOS, but the error has slightly changed:\r\n\r\n```\r\nERR m: Failed to create file walkThroughSnippet:/Applications/Visual%20Studio%20Code.app/Contents/Resources/app/out/vs/workbench/contrib/welcome/walkThrough/electron-browser/editor/vs_code_editor_walkthrough.md#4.js\r\n    at t.scheme.l.Schemas.file._withProvider.then.then.then.e (file:///Applications/Visual Studio Code.app/Contents/Resources/app/out/vs/workbench/workbench.main.js:3300:573)\r\n    at process._tickCallback (internal/process/next_tick.js:68:7)\r\n```\r\n\r\n\r\n"
      },
      {
        "user": "themotu",
        "created_at": "2019-04-11T02:21:20Z",
        "body": "Occurs in latest insiders version also"
      },
      {
        "user": "mjbvz",
        "created_at": "2019-08-22T00:59:38Z",
        "body": "I'm just going to remove this section from the interactive playground. Our normal documentation covers refactoring in much more detail. I don't think fixing the interactive playground for this case would be simple and we should not highlight a feature that doesn't work properly"
      }
    ]
  },
  {
    "number": 50627,
    "title": "Split terminal multiple times very slugish",
    "created_at": "2018-05-29T09:15:04Z",
    "closed_at": "2018-06-25T01:12:17Z",
    "labels": [
      "help wanted",
      "terminal",
      "*as-designed"
    ],
    "url": "https://github.com/microsoft/vscode/issues/50627",
    "body": "Refs: #50499\r\n\r\nI do not think this is conected to dom rendering of the terminal.\r\nOpen terminal:\r\nClick on the split termianl like 10 times very fast -> whole vscode is slugish for the next minute and there are some visual glitches.\r\nIf this action is so heavy I would expect that it gets disabled while a new terminal is initatialising",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/50627/comments",
    "author": "isidorn",
    "comments": [
      {
        "user": "Tyriar",
        "created_at": "2018-05-29T13:13:00Z",
        "body": "I can't seem to repro a particular perf problem on mac or Windows, there's a slow down for a few seconds which is expected but everything is fine after that. I do notice some glitches on mac which might be worth looking into though."
      },
      {
        "user": "isidorn",
        "created_at": "2018-05-29T13:17:13Z",
        "body": "This might also be connected to the fact that I use zshell"
      },
      {
        "user": "Tyriar",
        "created_at": "2018-05-29T14:19:52Z",
        "body": "@isidorn oh-my-zsh?"
      },
      {
        "user": "Tyriar",
        "created_at": "2018-05-29T14:20:52Z",
        "body": "That shouldn't affect perf while idle though 😕 "
      },
      {
        "user": "isidorn",
        "created_at": "2018-05-29T14:22:25Z",
        "body": "@Tyriar yes"
      },
      {
        "user": "Tyriar",
        "created_at": "2018-06-25T01:12:17Z",
        "body": "Closing this as there isn't really a fix that I'd want to do apart from improving the speed of the terminal (which is something that's always being looked into). Disabling the action while split is happening would be annoying as I often quickly hit ctrl+shift+5 twice to split twice."
      }
    ]
  },
  {
    "number": 50008,
    "title": "Grammar error in update text",
    "created_at": "2018-05-16T23:37:01Z",
    "closed_at": "2018-05-18T00:57:48Z",
    "labels": [
      "help wanted",
      "verified",
      "verification-needed"
    ],
    "url": "https://github.com/microsoft/vscode/issues/50008",
    "body": "Issue Type: <b>Bug</b>\r\n\r\n**Repro steps:**\r\n1. Click the gear icon and click \"Install update\"\r\n\r\n**Notice:**\r\nVisual Studio Code 1.23.1 is being installed in the background, we'll let you know when it's done.\r\n\r\n**Problem:**\r\nGrammar error.\r\n\r\n**Expect:**\r\nAfter the word \"background\" should be a period or a semicolon.  A comma does not make sense in that context.\r\n\r\nVS Code version: Code 1.23.0 (7c7da59c2333a1306c41e6e7b68d7f0caa7b3d45, 2018-05-03T16:44:55.614Z)\r\nOS version: Windows_NT x64 10.0.17134\r\n\r\nExtensions: none\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/50008/comments",
    "author": "TravisSpomer",
    "comments": [
      {
        "user": "mjbvz",
        "created_at": "2018-05-17T05:40:50Z",
        "body": "Please submit a PR"
      },
      {
        "user": "mjbvz",
        "created_at": "2018-05-18T00:57:48Z",
        "body": "Fixed by #50063"
      }
    ]
  },
  {
    "number": 49044,
    "title": "\"WithProgress\" notifications disappear after around 10 seconds",
    "created_at": "2018-05-02T10:56:40Z",
    "closed_at": "2018-05-09T06:24:55Z",
    "labels": [
      "bug",
      "help wanted",
      "verified"
    ],
    "url": "https://github.com/microsoft/vscode/issues/49044",
    "body": "Progress notifications seem to disappear after around 10 seconds even if their promise is not completed or cancelled.\r\n\r\nFor example, put this in your extensions `activate` method:\r\n\r\n```\r\nvs.window.withProgress(\r\n\t{ location: vs.ProgressLocation.Notification, title: \"30 second task\" },\r\n\t(_) => new Promise((resolve) => setTimeout(resolve, 30000)),\r\n);\r\n```\r\n\r\nThe notification vanishes after around 10 seconds. I can't see anything in the docs to suggest this is deliberate (if so, it's very short for using on an external process that might be downloading something that you can't easily monitor).",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/49044/comments",
    "author": "DanTup",
    "comments": [
      {
        "user": "bpasero",
        "created_at": "2018-05-03T04:06:33Z",
        "body": "PR welcome"
      },
      {
        "user": "ihalip",
        "created_at": "2018-05-04T10:05:07Z",
        "body": "Reproduced, looking into this."
      },
      {
        "user": "bpasero",
        "created_at": "2018-05-09T06:25:21Z",
        "body": "**Verify:** while showing progress we do not remove the notification, but we do when the progress is done after a timeout."
      }
    ]
  },
  {
    "number": 49041,
    "title": "Views: clicking on the \"...\" only works the first time",
    "created_at": "2018-05-02T10:03:50Z",
    "closed_at": "2018-05-09T06:31:48Z",
    "labels": [
      "bug",
      "help wanted",
      "verified"
    ],
    "url": "https://github.com/microsoft/vscode/issues/49041",
    "body": "Steps to Reproduce:\r\n\r\n1. click on the \"...\" menu (e.g. in a diff editor to stage changes)\r\n2. select an entry or ESC\r\n3. click on the \"...\" again\r\n\r\n=> does not work until you try a second time\r\n\r\nI see this in stable already, which seems weird if it was not reported. @joaomoreno @isidorn do you reproduce this too?\r\n\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/49041/comments",
    "author": "bpasero",
    "comments": [
      {
        "user": "isidorn",
        "created_at": "2018-05-02T10:20:05Z",
        "body": "@bpasero yes I can also reproduce both in stable and insiders"
      },
      {
        "user": "bpasero",
        "created_at": "2018-05-03T04:06:37Z",
        "body": "PR welcome"
      },
      {
        "user": "gabrieljacobsen",
        "created_at": "2018-05-04T02:23:52Z",
        "body": "I am able to reproduce this. Will try to open a PR over the weekend."
      }
    ]
  },
  {
    "number": 48589,
    "title": "Source action context menu feels weird",
    "created_at": "2018-04-24T18:31:56Z",
    "closed_at": "2024-12-10T07:58:25Z",
    "labels": [
      "help wanted",
      "feature-request",
      "editor-code-actions",
      "under-discussion"
    ],
    "url": "https://github.com/microsoft/vscode/issues/48589",
    "body": "#48455\r\n\r\nIt's essentially an overflow menu inside a context menu but it's worse as it needs a click and to then move the mouse to the new menu. Why don't we open a quick pick with the source actions instead?",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/48589/comments",
    "author": "Tyriar",
    "comments": [
      {
        "user": "mjbvz",
        "created_at": "2018-04-25T17:40:46Z",
        "body": "Any opinion on this one @jrieken? We don't support sub context menus but using a quick pick would be doable.\r\n\r\nI personally like the context menu does because it shows in the document and I often miss quick picks that appear at the top of the screen"
      },
      {
        "user": "jrieken",
        "created_at": "2018-04-26T07:32:22Z",
        "body": "I'd say this will be much nicer once we have support for submenus. Also, Format should go in there"
      },
      {
        "user": "justschen",
        "created_at": "2024-12-10T07:58:25Z",
        "body": "this one is pretty old but we've had conversation on this with the action list menu. i think the general consensus was that we decided not to do flyouts/submenus"
      }
    ]
  },
  {
    "number": 46860,
    "title": "Git: Delete branch notification should be modal",
    "created_at": "2018-03-28T15:42:13Z",
    "closed_at": "2018-04-03T07:04:33Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "git",
      "good first issue"
    ],
    "url": "https://github.com/microsoft/vscode/issues/46860",
    "body": "The new notifications pop open at the lower right corner of the editor.  Some command palette actions pop these up with a button that I need to click on to proceed.  In these cases, I have to move my mouse from the top center of the window down to the bottom right corner of the window.\r\n\r\nOne such example is the \"Git: Delete branch\" command.  I have to click on the branch I want to delete from the drop down selector, then click the notification button far away in the corner to confirm the delete.  If I am deleting multiple branches at a time (because I'm finally cleaning up my local state 😜) I have to move the mouse back and forth a ton of times so now I use a terminal for this task instead.\r\n\r\nIt would be nice to have an option that lets me decide where I want the notifications to appear.  I would choose the top right corner to reduce mouse movement.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/46860/comments",
    "author": "bobbrow",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2018-03-28T16:36:01Z",
        "body": "I'll narrow this issue down to make the delete branch popup a modal one, which it should be anyways."
      },
      {
        "user": "brightsquare",
        "created_at": "2018-03-30T11:34:56Z",
        "body": "I'm trying to repro, but don't get any such popup after selecting a branch to delete. The branch is instantly deleted. I'm on Mac OS X 10.11.16, vscode version 1.21.1"
      }
    ]
  },
  {
    "number": 46754,
    "title": "macOS: reckless ownership change of /usr/local/bin",
    "created_at": "2018-03-27T18:58:25Z",
    "closed_at": "2018-07-06T08:04:04Z",
    "labels": [
      "help wanted",
      "install-update",
      "macos"
    ],
    "url": "https://github.com/microsoft/vscode/issues/46754",
    "body": "Issue Type: <b>Bug</b>\r\n\r\nInstalling command line tool changes ownership of `/usr/local/bin` away from `root:wheel` to `$USER:staff`. Also, `code` symlink is created as owned by `$USER:staff`.\r\n\r\nPlease don't do that: not everyone is using Homebrew.\r\n\r\nVS Code version: Code 1.21.1 (79b44aa704ce542d8ca4a3cc44cfca566e7720f1, 2018-03-14T14:39:09.335Z)\r\nOS version: Darwin x64 17.4.0\r\n\r\n<details>\r\n<summary>System Info</summary>\r\n\r\n|Item|Value|\r\n|---|---|\r\n|CPUs|Intel(R) Core(TM) i5-3230M CPU @ 2.60GHz (4 x 2600)|\r\n|Load (avg)|2, 2, 2|\r\n|Memory (System)|8.00GB (0.57GB free)|\r\n|Process Argv|/Applications/Visual Studio Code.app/Contents/MacOS/Electron|\r\n|Screen Reader|no|\r\n|VM|0%|\r\n\r\n</details><details><summary>Extensions (4)</summary>\r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nsolargraph|cas|0.13.0\r\nRuby|reb|0.17.0\r\nslim|sia|0.1.2\r\nayu|tea|0.14.0\r\n\r\n\r\n</details>\r\nReproduces without extensions\r\n<!-- generated by issue reporter -->",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/46754/comments",
    "author": "lloeki",
    "comments": [
      {
        "user": "dbaeumer",
        "created_at": "2018-03-28T10:08:53Z",
        "body": "@lloeki how did you install VS Code ?"
      },
      {
        "user": "lloeki",
        "created_at": "2018-03-28T11:31:19Z",
        "body": "Straight from the official `VSCode-darwin-stable.zip`, on a fresh new (re)install of macOS. Since I knew about the behaviour beforehand I checked the status at each step so as to open this issue:\r\n\r\n- unzip `VSCode-darwin-stable.zip`\r\n- move `Visual Studio Code.app` to `/Applications`\r\n- start `Visual Studio Code.app`\r\n- at this point there are no changes: `/usr/local/bin` is still `root:wheel`\r\n- `CMD`+`P` then `Shell Command: Install 'code' command in PATH`\r\n- a warning dialog shows up about launching an AppleScript through `osascript` which will need elevated privileges, hence ask for authentication\r\n- provide authentication when asked\r\n- at this point, `/usr/local/bin/code` has been installed and `/usr/local/bin` ownership has been altered\r\n\r\nExpected behaviour:\r\n\r\n- preserve `/usr/local/bin` ownership\r\n- install `/usr/local/bin/code` inheriting ownership of `/usr/local/bin`\r\n"
      },
      {
        "user": "joaomoreno",
        "created_at": "2018-03-28T16:34:12Z",
        "body": "It's a good catch, though I was expecting this issue to come up much much earlier. This has been working this way for 2 years and I believe it's the first time someone has mentioned it. I'll accept a PR to fix it."
      },
      {
        "user": "lloeki",
        "created_at": "2018-03-29T19:48:42Z",
        "body": "Not surprising since I suppose most people use Homebrew on Darwin, and of those who do not, many won't go and randomly check ownership of that folder, which typically occurs only once since as soon as the symlink is there no further operation is required, and the manual fix is thus a one-shot job. I merely happen to care about such things as programs requiring me to enter admin credentials and so have noticed the behaviour some time ago but was only faced with it due to a reinstall, so thought I might as well bring it up.\r\n\r\nAnyway, PR opened."
      }
    ]
  },
  {
    "number": 45678,
    "title": "Limit splitting terminals to a max value ",
    "created_at": "2018-03-13T16:26:34Z",
    "closed_at": "2018-09-24T20:25:01Z",
    "labels": [
      "help wanted",
      "feature-request",
      "ux",
      "terminal",
      "on-testplan"
    ],
    "url": "https://github.com/microsoft/vscode/issues/45678",
    "body": "With latest release (1.21) you can split terminal infinitely. This breaks badly the terminal area.\r\n\r\nProbably the IDE should limit this to a defined maximum or something? \r\n\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/45678/comments",
    "author": "diegofal",
    "comments": [
      {
        "user": "Tyriar",
        "created_at": "2018-03-22T18:54:45Z",
        "body": "I considered adding a max value but you would always be able to break it then by sizing down. As a mitigation we could disallow creating terminals if the desired room isn't there but the real fix is proper overflow behavior."
      },
      {
        "user": "diegofal",
        "created_at": "2018-03-22T19:02:56Z",
        "body": "Thanks @Tyriar , I would agree that proper overflow behaviour is the way to go. Thanks! "
      },
      {
        "user": "Tyriar",
        "created_at": "2018-09-12T22:58:44Z",
        "body": "I think the easiest way to improve this is to only allow terminals to be created if there's a reasonable amount of room. This can exist with our current lack of overflow behavior as it's an improvement on the current and will prevent 100 terminals from being created.."
      },
      {
        "user": "Tumiz",
        "created_at": "2018-11-07T07:26:04Z",
        "body": "Some terminal can be resized to a small size if they are not important. In some case, showing multiple terminals is just to notify the user whether they are running. Currently the minimum size of terminal is too large.\r\n"
      },
      {
        "user": "Tumiz",
        "created_at": "2018-11-07T07:39:08Z",
        "body": "I suggest the minimum size of a terminal should be an option in Settings."
      }
    ]
  },
  {
    "number": 45266,
    "title": "Make a setting out of the submodule git repository discovery limit",
    "created_at": "2018-03-08T09:15:36Z",
    "closed_at": "2018-03-19T13:31:17Z",
    "labels": [
      "bug",
      "help wanted",
      "git",
      "good first issue"
    ],
    "url": "https://github.com/microsoft/vscode/issues/45266",
    "body": "Related to #43528",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/45266/comments",
    "author": "joaomoreno",
    "comments": [
      {
        "user": "shobhitchittora",
        "created_at": "2018-03-08T10:02:08Z",
        "body": "On it!"
      }
    ]
  },
  {
    "number": 43140,
    "title": "Additional date-based snippet variables",
    "created_at": "2018-02-07T22:07:09Z",
    "closed_at": "2018-03-20T15:04:31Z",
    "labels": [
      "help wanted",
      "feature-request",
      "snippets"
    ],
    "url": "https://github.com/microsoft/vscode/issues/43140",
    "body": "I'm happy to see the new date-based snippet variables in v1.20.0. I would love to see some additional ones since I wanted to use this for generating journal templates. Something like this:\r\n\r\n- **CURRENT_DAYNAME:** Monday, Tuesday, ...\r\n- **CURRENT_DAYNAME_SHORT:** Mon, Tue, ...\r\n- **CURRENT_MONTHNAME:** January, February, ...\r\n- **CURRENT_MONTHNAME_SHORT:** Jan, Feb, ...\r\n\r\nThank you.\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/43140/comments",
    "author": "twwilliams",
    "comments": [
      {
        "user": "jrieken",
        "created_at": "2018-02-26T15:41:36Z",
        "body": "A little more tricky because you might want to consider localisation settings..."
      }
    ]
  },
  {
    "number": 37983,
    "title": "Allow arrow keys to close terminal",
    "created_at": "2017-11-09T19:32:36Z",
    "closed_at": "2017-12-27T14:46:08Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "good first issue",
      "terminal"
    ],
    "url": "https://github.com/microsoft/vscode/issues/37983",
    "body": "- VSCode Version: Code 1.18.0 (dcee2202709a4f223185514b9275aa4229841aa7, 2017-11-08T21:22:49.932Z)\r\n- OS Version: Windows_NT x64 10.0.15063\r\n\r\nSteps to Reproduce:\r\n\r\n1. Run a task which uses terminal\r\n2. `Terminal will be reused by tasks, press any key to close it`\r\n3. Press arrow keys (pressing up arrow because I want to reused last command)\r\n4. Terminal doesn't close\r\n\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/37983/comments",
    "author": "CoenraadS",
    "comments": [
      {
        "user": "moguzozcan",
        "created_at": "2017-11-11T13:44:34Z",
        "body": "Hello @Tyriar , \r\nIs this issue assigned to anyone, if it is ok, I can work on this topic. Also, some hints would be great. Thank you."
      },
      {
        "user": "ychi",
        "created_at": "2017-11-12T06:48:28Z",
        "body": "Arrows don't work on Mac either. Looks like keys with ascii code between 32 and 126 will work."
      }
    ]
  },
  {
    "number": 36787,
    "title": "Terminal cannot print all output.",
    "created_at": "2017-10-24T01:07:23Z",
    "closed_at": "2018-05-14T16:05:04Z",
    "labels": [
      "bug",
      "help wanted",
      "upstream",
      "terminal",
      "windows"
    ],
    "url": "https://github.com/microsoft/vscode/issues/36787",
    "body": "- VSCode Version: 1.17.2\r\n- OS Version: Windows 10 Education / 1709 / 16299.19\r\n\r\nSteps to Reproduce:\r\n\r\n1. write a C++ program like this, actually I think all programs with heavy output requirements can reproduce this.\r\n```\r\n#include <iostream>\r\nint main() {\r\n    for (int i=0; i<256; ++i) {\r\n        std::cout << \"hello, world \" << i << std::endl;\r\n    }\r\n    return 0;\r\n}\r\n```\r\n2. compile and run in VSC's terminal.\r\n(in my case, three different shells (cmd, PowerShell and Git Bash) produce similar results)\r\n```\r\nPS root\\to\\file> g++ -o vsc.exe -O2 -Wall vsc.cpp\r\nPS root\\to\\file> ./vsc.exe\r\nhello, world 0\r\nhello, world 1\r\nhello, world 2\r\nhello, world 3\r\nhello, world 4\r\nhello, world 5\r\nhello, world 6\r\nhello, world 7\r\nhello, world 8\r\nhello, world 9\r\nhello, world 10\r\nhello, world 11\r\nhello, world 12\r\nhello, world 13\r\nhello, world 14\r\nh\r\nPS root\\to\\file>\r\n```\r\nPlease notice that the output stream is not fully printed.\r\n\r\n+ The compile step can be simplified as `g++ vsc.cpp` and still produce same result.\r\n+ Where the terminal stops varies. Sometimes it works properly and print all output.\r\n+ If I add an extra line after the print line like\r\n    `someFileStream << \"hello, world \" << i << std::endl;`\r\nthe output file is perfectly generated, and the terminal output is still incomplete. So I assume the problem is about VSC's terminal.\r\n\r\nReproduces without extensions: Yes\r\n\r\n---\r\n## update\r\n\r\n<del>Still reproduce on Windows 10 (1709, 16299.371), VSCode Version 1.22.2</del>\r\nSeems fixed on Windows 10 1803 (17134.48), VSC 1.23.0.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/36787/comments",
    "author": "gwy15",
    "comments": [
      {
        "user": "Summon528",
        "created_at": "2017-10-29T05:39:39Z",
        "body": "I also have the problem. Terminal cannot print all output if using Cmd or Powershell. It does behave well if using WSL though."
      },
      {
        "user": "Summon528",
        "created_at": "2017-10-30T13:12:55Z",
        "body": "Further information, If you wrote that code in python, the terminal behave just fine."
      },
      {
        "user": "xlebec",
        "created_at": "2017-12-10T04:39:53Z",
        "body": "Further information: When I compile a similar program with Cygwin g++ it works just fine, but when I use cl to compile it it has the exact same problem as above."
      },
      {
        "user": "hail-caesar155",
        "created_at": "2018-02-04T14:30:47Z",
        "body": "+1\r\nSame issue here\r\nVSCode Version : 1.19.3\r\nOS:  Windows 10/ 1709 /16299.19"
      },
      {
        "user": "malciin",
        "created_at": "2018-03-12T19:17:23Z",
        "body": "+1 Same issue"
      },
      {
        "user": "glebec",
        "created_at": "2018-03-12T19:21:37Z",
        "body": "GitHub has reaction emoji (upper-right corner of each comment). Please refrain from posting \"+1\" comments and instead show your support using a reaction, as otherwise subscribers to the issue get emails full of unwanted \"+1\" notifications. Thanks for understanding! 😃"
      },
      {
        "user": "ihalip",
        "created_at": "2018-04-17T19:48:34Z",
        "body": "I can't reproduce this on Windows 7."
      },
      {
        "user": "yulon",
        "created_at": "2018-04-20T20:36:52Z",
        "body": "Can use `std::ios_base::sync_with_stdio(false)`  to solve this problem. 😂"
      },
      {
        "user": "FlandiaYingman",
        "created_at": "2018-05-03T10:17:40Z",
        "body": "+1\r\nSame issue here\r\nVSCode Version : 1.22.2\r\nOS: Windows 10/ 1709 /16299.19"
      },
      {
        "user": "Summon528",
        "created_at": "2018-05-14T15:57:42Z",
        "body": "Is this fixed? I'm not able to reproduce on the newer version (Windows 10 Build 17666, VSCode 1.23.1)."
      },
      {
        "user": "gwy15",
        "created_at": "2018-05-14T16:05:04Z",
        "body": "@Summon528 I've retried just now and can't reproduce as well on Windows 10 1803 (17134.48), VSC 1.23.0. I believe this bug is fixed.\r\nI'm closing this issue for now."
      }
    ]
  },
  {
    "number": 36785,
    "title": "VSCode gives wrong push error message",
    "created_at": "2017-10-23T23:29:41Z",
    "closed_at": "2017-11-23T14:09:09Z",
    "labels": [
      "bug",
      "help wanted",
      "git"
    ],
    "url": "https://github.com/microsoft/vscode/issues/36785",
    "body": "- VSCode Version: 1.17.1\r\n- OS Version: Windows 10\r\n\r\nSteps to Reproduce:\r\n\r\n1. Set GitHub private email setting to true\r\n2. Open repo through vscode\r\n3. Push to repo\r\n\r\nVSCode returns : Can't push refs to remove. Run \"Pull\" first to integrate your changes.\r\n\r\nHowever the issue as visible from the git log is infact \r\n`[remote rejected] master -> master (push declined due to email privacy restrictions)`\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/36785/comments",
    "author": "eskalVAR",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2017-11-23T14:09:09Z",
        "body": "Changed the message to more tentative suggestion."
      }
    ]
  },
  {
    "number": 35186,
    "title": "Commit All (Amend) asks if it should stage changes",
    "created_at": "2017-09-26T22:20:00Z",
    "closed_at": "2017-11-27T18:25:55Z",
    "labels": [
      "bug",
      "help wanted",
      "git",
      "good first issue"
    ],
    "url": "https://github.com/microsoft/vscode/issues/35186",
    "body": "- VSCode Version: Code - Insiders 1.17.0-insider (a5210bcbda97166904ce4c08ee296cb98fccfcd9, 2017-09-26T05:24:48.911Z)\r\n- OS Version: Windows_NT x64 10.0.15063\r\n- Extensions: none\r\n---\r\n\r\nTesting #34963\r\n\r\nSteps to Reproduce:\r\n\r\n1. Have some unstaged changes, none staged\r\n2. Commit All (Amend)\r\n3. 🐛 A dialog asks me if I want to stage changes.\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/35186/comments",
    "author": "chrmarti",
    "comments": [
      {
        "user": "pradeepmurugesan",
        "created_at": "2017-09-29T13:54:41Z",
        "body": "@joaomoreno so whats the expected behaviour? Should skip the dialog and commit (amend) directly ?\r\n\r\n"
      },
      {
        "user": "chrmarti",
        "created_at": "2017-09-29T14:03:32Z",
        "body": "That is what I expected. Since I already chose to commit *all* changes I did not expect a dialog asking me the same question."
      },
      {
        "user": "samir-majhi",
        "created_at": "2017-09-30T11:54:36Z",
        "body": "@chmarti This looks like it was intentionally kept there as a reminder so that you'd stage it first before you'd commit."
      },
      {
        "user": "chmarti",
        "created_at": "2017-09-30T15:25:06Z",
        "body": "You're looking for @chrmarti. I'm not the right person."
      },
      {
        "user": "samir-majhi",
        "created_at": "2017-10-01T20:06:47Z",
        "body": "Sorry. I meant @chrmarti "
      },
      {
        "user": "dKab",
        "created_at": "2017-10-06T10:52:10Z",
        "body": "so, @joaomoreno, what would be a correct behavior here? Is this issue valid and there shouldn't be a confirmation popup?"
      },
      {
        "user": "joaomoreno",
        "created_at": "2017-10-09T07:33:15Z",
        "body": "Changes should be staged and then committed."
      },
      {
        "user": "pradeepmurugesan",
        "created_at": "2017-10-09T09:14:36Z",
        "body": "@joaomoreno so we can ignore the pop up alerting the user ?"
      },
      {
        "user": "pradeepmurugesan",
        "created_at": "2017-10-09T09:47:57Z",
        "body": "@joaomoreno  I could see that the pop up is ignored from next time when the user selects \"always\", Which is also available as a config option (enableSmartCommit).\r\n\r\nI would like to keep the dialog as its just the first time and the user has an option to say \"always\" and override the behaviour"
      },
      {
        "user": "joaomoreno",
        "created_at": "2017-10-09T11:51:51Z",
        "body": "@pradeepmurugesan That makes sense."
      },
      {
        "user": "roblourens",
        "created_at": "2017-11-27T18:25:55Z",
        "body": "This seems fixed"
      }
    ]
  },
  {
    "number": 35185,
    "title": "Commit Staged (Amend) asks to stage changes and then fails",
    "created_at": "2017-09-26T22:15:16Z",
    "closed_at": "2017-12-11T16:31:23Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "git",
      "good first issue"
    ],
    "url": "https://github.com/microsoft/vscode/issues/35185",
    "body": "- VSCode Version: Code - Insiders 1.17.0-insider (a5210bcbda97166904ce4c08ee296cb98fccfcd9, 2017-09-26T05:24:48.911Z)\r\n- OS Version: Windows_NT x64 10.0.15063\r\n- Extensions: none\r\n---\r\n\r\nTesting #34963\r\n\r\nSteps to Reproduce:\r\n\r\n1. Have some unstaged changes, none staged\r\n2. Commit Staged (Amend)\r\n3. Dialog asks if I want to stage the changes\r\n4. Click Yes\r\n5. 🐛 Message telling me that there are no changes to commit\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/35185/comments",
    "author": "chrmarti",
    "comments": [
      {
        "user": "dKab",
        "created_at": "2017-09-29T14:28:30Z",
        "body": "Hi, I'm working on it. The PR will be ready shortly!"
      },
      {
        "user": "joaomoreno",
        "created_at": "2017-12-11T16:31:36Z",
        "body": "For repro: make sure you have `\"git.enableSmartCommit\": false`."
      }
    ]
  },
  {
    "number": 33857,
    "title": "Feature request: git.clone command parameter",
    "created_at": "2017-09-05T18:17:55Z",
    "closed_at": "2017-10-02T12:58:28Z",
    "labels": [
      "help wanted",
      "feature-request",
      "git"
    ],
    "url": "https://github.com/microsoft/vscode/issues/33857",
    "body": "I would love to use the `git.clone` command. My UseCase is to fork a github project first (via API) and then clone the fork. For the user this could be just a simple task and he should not mess around with the URLs.\r\n\r\nRight now the `git.clone` command does not allow to give an existing URL to clone but always asks for a url to input.\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/33857/comments",
    "author": "KnisterPeter",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2017-09-07T08:27:17Z",
        "body": "Wanna submit a PR? This seems like a pretty simple one."
      },
      {
        "user": "KnisterPeter",
        "created_at": "2017-09-07T09:20:35Z",
        "body": "Sure, thanks :+1: "
      }
    ]
  },
  {
    "number": 31665,
    "title": "[languages] Set up a webhook for updating grammars",
    "created_at": "2017-07-28T13:47:27Z",
    "closed_at": "2017-11-27T10:44:45Z",
    "labels": [
      "help wanted",
      "feature-request"
    ],
    "url": "https://github.com/microsoft/vscode/issues/31665",
    "body": "- VSCode Version: Code - Insiders 1.15.0-insider (0e7546c978fa1b62dbf36f07a77d1b9a4241d6f7, 2017-07-28T11:23:06.089Z)\r\n- OS Version: Windows_NT x64 10.0.15063\r\n- Extensions: \r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\nBookmarks|ale|0.15.2\r\nnpm-intellisense|chr|1.3.0\r\npath-intellisense|chr|1.4.2\r\nregex|chr|0.1.0\r\ngitignore|cod|0.5.0\r\nvscode-dash|dee|1.7.0\r\nvscode-npm-source|dku|1.0.0\r\npython|don|0.6.9\r\ngitlens|eam|4.3.2\r\ntslint|eg2|0.17.0\r\nvscode-npm-script|eg2|0.2.0\r\nLogFileHighlighter|emi|1.1.1\r\nvscode-reveal|evi|0.0.9\r\nphp-debug|fel|1.11.1\r\nphp-intellisense|fel|1.5.0\r\nauto-close-tag|for|0.4.3\r\nauto-rename-tag|for|0.0.14\r\ngc-excelviewer|Gra|1.1.15\r\ncomposer|ika|0.5.0\r\nsmarty|imp|0.2.0\r\ncode-guid|jam|1.0.1\r\nStretchTimer|jpa|0.0.1\r\njson-to-ts|Mar|1.5.2\r\nRunner|mat|0.1.14\r\nvscode-apache|mrm|1.1.1\r\ncpptools|ms-|0.12.1\r\ngithub-issues-prs|ms-|0.3.1\r\nphp-docblocker|nei|1.2.0\r\nemoji|Per|0.0.3\r\nvscode-versionlens|pfl|0.19.1\r\ndatetime|rid|1.0.5\r\nvscode-icons|rob|7.12.0\r\nsharecode|Rol|0.4.1\r\ntodotasks|san|0.5.0\r\ncode-settings-sync|Sha|2.8.2\r\nvscode-spotify|shy|2.0.0\r\npackagelinker|sin|0.0.3\r\ncode-spell-checker|str|1.3.2\r\npdf|tom|0.2.0\r\nlorem-ipsum|Tyr|1.0.0\r\nvscode-arduino|vsc|0.2.4\r\nvscode-todo-highlight|way|0.5.8\r\nhighlight-trailing-white-spaces|yba|0.0.2\r\n\r\n(2 theme extensions excluded)\r\n\r\n\r\n---\r\n\r\nI'd like it that you automatically update your grammar files when it has been updated in the origin repository, so we (the community) does not need to ask whether you can update the grammar.\r\n\r\nReproduces without extensions: Yes",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/31665/comments",
    "author": "jens1o",
    "comments": [
      {
        "user": "aeschli",
        "created_at": "2017-08-03T07:12:40Z",
        "body": "When updating a grammar, most of the time we have to review the changes to the test inputs we have. We would have to refine that and probably can't avoid manual work."
      },
      {
        "user": "aeschli",
        "created_at": "2017-11-27T10:44:45Z",
        "body": "As metioned, there's still some reviewing needed. Also we want to pick good times for the update, e.g. not in an endgame or right before the release.\r\nSo, cool idea, bit not planed right now."
      }
    ]
  },
  {
    "number": 30683,
    "title": "Double clicking a file in Unity to open VSCode always show update note",
    "created_at": "2017-07-14T09:08:43Z",
    "closed_at": "2017-11-23T14:58:09Z",
    "labels": [
      "bug",
      "help wanted",
      "release-notes"
    ],
    "url": "https://github.com/microsoft/vscode/issues/30683",
    "body": "- VSCode Version: Code 1.14.0 (b8cd5b9556d8b70ea560d35b903422363f6c5c40, 2017-07-10T18:24:22.120Z)\r\n- OS Version: Darwin x64 16.6.0\r\n- Extensions: \r\n\r\nExtension|Author (truncated)|Version\r\n---|---|---\r\ncode-settings-sync|Sha|2.8.2\r\nunity-debug|Uni|1.2.1\r\ncode-runner|for|0.6.26\r\ndocomment|k--|0.0.17\r\ngraphql-for-vscode|kum|1.4.2\r\nHTMLHint|mka|0.3.3\r\ncpptools|ms-|0.12.0\r\ncsharp|ms-|1.11.0\r\njava|red|0.7.0\r\nPostCSS|ric|1.0.1\r\nstylelint|shi|0.27.0\r\nink|tom|0.1.0\r\nvim|vsc|0.9.0\r\nvscode-proto3|zxh|0.1.1\r\n\r\n(1 theme extensions excluded)\r\n\r\n\r\n---\r\n\r\nSteps to Reproduce:\r\n\r\n1. Wait for a new update\r\n2. Double clicking a file in Unity to open VSCode always show update note.\r\n3. To make the release note stop automatically popping up, you have to open VSCode manually. (not by double clicking file)\r\n\r\nTo fix : Make the double click open have the same \"already read the release note\" effect as manually open VSCode.\r\n\r\n<!-- Launch with `code --disable-extensions` to check. -->\r\nReproduces without extensions: Yes/No",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/30683/comments",
    "author": "5argon",
    "comments": [
      {
        "user": "bpasero",
        "created_at": "2017-07-14T10:22:51Z",
        "body": "I think the release notes should open in the background if other files are opening in the workbench..."
      },
      {
        "user": "joaomoreno",
        "created_at": "2017-11-23T14:58:08Z",
        "body": "To keep the number of issues in our inbox on a manageable level, we're closing issues that have been on the backlog for a long time but haven't gained traction: We look at the number of votes the issue has received and the number of duplicates issues filed.\r\n\r\nThanks for your understanding. Happy coding!"
      }
    ]
  },
  {
    "number": 30058,
    "title": "Task>Presentation should allow to clear the terminal output.",
    "created_at": "2017-07-03T14:39:53Z",
    "closed_at": "2018-10-22T07:58:18Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "tasks",
      "verification-needed"
    ],
    "url": "https://github.com/microsoft/vscode/issues/30058",
    "body": "",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/30058/comments",
    "author": "dbaeumer",
    "comments": [
      {
        "user": "SE2Dev",
        "created_at": "2017-09-05T18:57:10Z",
        "body": "Does this issue refer to automatically clearing the terminal output when a task begins? I've been searching for a way to do that."
      },
      {
        "user": "dbaeumer",
        "created_at": "2017-09-06T09:28:19Z",
        "body": "Yes, this is the feature request."
      },
      {
        "user": "sanny-io",
        "created_at": "2018-05-23T12:54:04Z",
        "body": "I really wish this was a thing."
      },
      {
        "user": "SSmokWawelski",
        "created_at": "2018-05-25T13:07:28Z",
        "body": "+1"
      },
      {
        "user": "leNEKO",
        "created_at": "2018-06-01T08:04:45Z",
        "body": "+1"
      },
      {
        "user": "philipedwards",
        "created_at": "2018-06-05T06:30:37Z",
        "body": "+1"
      },
      {
        "user": "mateuszuram",
        "created_at": "2018-07-01T19:56:12Z",
        "body": "Hi,\r\nOne way to do that is to add clear command before actual task command like below.\r\n\"command\": \"clear;ninja\",\r\nI'm using tcsh shell and ninja to build.\r\nRegards,\r\nMat"
      },
      {
        "user": "Geobert",
        "created_at": "2018-07-01T19:59:04Z",
        "body": "Does not work for me, VSCode on Win10."
      },
      {
        "user": "mateuszuram",
        "created_at": "2018-07-01T20:57:16Z",
        "body": "Windows doesn't have clear command, but you can try cls:\r\n\"command\": \"cls;ninja\","
      },
      {
        "user": "Geobert",
        "created_at": "2018-07-02T07:18:54Z",
        "body": "No luck neither :( \r\n```\r\nTerminal will be reused by tasks, press any key to close it.\r\n\r\n> Executing task in folder cobalt.rs: cls;cargo check <\r\n```"
      },
      {
        "user": "rookiezn",
        "created_at": "2018-07-06T06:41:56Z",
        "body": "It works for me by just adding a \"clear\" command before my real task command. Like this\r\n```json\r\n      \"command\":[\r\n        \"clear;\",\r\n        \"clang++ -g -O0 a.cpp\"\r\n      ],\r\n```\r\nDo NOT miss the semicolon after \"clear\""
      },
      {
        "user": "Geobert",
        "created_at": "2018-07-06T14:39:14Z",
        "body": "Still no luck on Windows 10. using 1.25.\r\n\r\nFunny enough, without the the semicolon, I lose all the command output:\r\n```\r\n> Executing task: cls cargo check <\r\n\r\nTerminal will be reused by tasks, press any key to close it.\r\n```"
      },
      {
        "user": "WSLUser",
        "created_at": "2018-07-06T14:44:38Z",
        "body": "@Geobert Try using WSL. The workaround will work there (on Linux side ofc) plus plenty of benefits to using it. "
      },
      {
        "user": "Geobert",
        "created_at": "2018-07-06T14:46:54Z",
        "body": "I can't, Win 7 :( "
      },
      {
        "user": "anssilap",
        "created_at": "2018-07-18T11:45:34Z",
        "body": "+1\r\n\r\nI've tried so many workarounds for this it is starting to wear me out. Even a build task that depends on another task that clears the terminal doesn't work. I suppose because clearing uses \"type\": \"process\" and my gcc build task uses \"type\": \"shell\". I am either stuck periodically deleting all the new terminal instances created for each build or spending time figuring out where output of latest build ends and old one begins."
      },
      {
        "user": "mmatrosov",
        "created_at": "2018-08-23T08:45:09Z",
        "body": "Any progress on the issue? Any workaround working on Windows 10?"
      },
      {
        "user": "dbaeumer",
        "created_at": "2018-08-23T13:39:26Z",
        "body": "As always a PR will help to speed things up. "
      },
      {
        "user": "mikbal54",
        "created_at": "2018-09-01T11:37:35Z",
        "body": "cls command in task runner does not work. I dont like scrolling to the bottom to check the error messages."
      },
      {
        "user": "konstk1",
        "created_at": "2018-10-16T17:36:13Z",
        "body": "+1 Also looking for this functionality."
      },
      {
        "user": "dbaeumer",
        "created_at": "2018-10-17T08:36:31Z",
        "body": "@alexr00 This would actually be a good first feature-request. Only limited changes."
      },
      {
        "user": "junglie85",
        "created_at": "2018-10-17T10:58:52Z",
        "body": "As a workaround, try creating a composite task, where the actual task you want to execute depends on the task to clear the terminal. For example:\r\n\r\n```\r\n{\r\n  \"version\": \"2.0.0\",\r\n  \"tasks\": [\r\n    {\r\n      \"label\": \"clear terminal\",\r\n      \"type\": \"shell\",\r\n      \"command\":\"clear\",\r\n      \"presentation\": {\r\n        \"echo\": false,\r\n        \"reveal\": \"always\",\r\n        \"focus\": false,\r\n        \"panel\": \"shared\",\r\n        \"showReuseMessage\": false\r\n      }\r\n    },\r\n    {\r\n      \"label\": \"mix test\",\r\n      \"dependsOn\":[\"clear terminal\"],\r\n      \"type\": \"shell\",\r\n      \"command\":\"mix\",\r\n      \"args\": [\"test\", \"--color\", \"--trace\"],\r\n      \"options\": {\r\n        \"cwd\": \"${workspaceRoot}\",\r\n        \"requireFiles\": [\r\n          \"test/**/test_helper.exs\",\r\n          \"test/**/*_test.exs\"\r\n        ],\r\n      },\r\n      \"problemMatcher\": \"$mixTestFailure\",\r\n      \"presentation\": {\r\n        \"echo\": false,\r\n        \"reveal\": \"always\",\r\n        \"focus\": false,\r\n        \"panel\": \"shared\",\r\n        \"showReuseMessage\": false\r\n      }\r\n    }\r\n  ]\r\n}\r\n```"
      },
      {
        "user": "Geobert",
        "created_at": "2018-10-17T13:09:23Z",
        "body": "> \r\n> \r\n> As a workaround, try creating a composite task, where the actual task you want to execute depends on the task to clear the terminal. \r\n\r\nAt first I thought it worked, but it only \"hides above\" the previous launch (at least on Windows). If you scroll up, you'll see the previous launches output\r\n\r\n"
      },
      {
        "user": "junglie85",
        "created_at": "2018-10-17T15:07:57Z",
        "body": "So it does. I hadn't noticed that. What's even more interesting is that if (in my example) I bin the `Task - mix test` terminal and run the task, then it only sometimes exhibits that behaviour, whilst at other times it \"hides above\".\r\n\r\nFor my example, it seems to be if I run a passing test suite then the behaviour is as I would expect, whether that is from the command pallet or a custom key binding. If I run a failing test suite at any time, it reverts to the \"hide above\" behaviour until I bin the terminal. I wonder why that would be?\r\n\r\nVery frustrating. Is there perhaps a way to run a shell task, e.g. `echo \"\"`  which takes the focus and then simulate a keypress to terminate the shell? This could then be run as a predecessor task. Or is there some way to execute the `workbench.action.terminal.kill` command from a task?\r\n\r\nAnother workaround, broadly similar to the above is to change the task to give the shell the focus. Rebind `cmd+k` or equivalent from `workbench.action.terminal.clear` to `workbench.action.terminal.kill` and then make this a step in the workflow (not great if the task runs for more than a second or so). It's another keypress but it's a step closer.\r\n\r\n```\r\n{\r\n  \"key\": \"cmd+k\",\r\n  \"command\": \"workbench.action.terminal.kill\"\r\n}\r\n```"
      },
      {
        "user": "Geobert",
        "created_at": "2018-10-17T15:34:48Z",
        "body": "At home with my gaming mouse (with buttons on thumb side), I've done this exactly: focus term, press space, run task. But at work I don't have such mouse ^^'"
      }
    ]
  },
  {
    "number": 30055,
    "title": "Disallow staging of files with unresolved conflicts",
    "created_at": "2017-07-03T13:47:59Z",
    "closed_at": "2017-08-28T08:58:43Z",
    "labels": [
      "help wanted",
      "feature-request",
      "git",
      "good first issue"
    ],
    "url": "https://github.com/microsoft/vscode/issues/30055",
    "body": "Requesting to disallow staging of files with unresolved conflicts. Or at least show a warning message if a user is trying to stage a file with unresolved conflicts.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/30055/comments",
    "author": "Deilan",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2017-07-03T14:28:16Z",
        "body": "This is a cool idea actually, want to attempt a PR?"
      },
      {
        "user": "ferreus",
        "created_at": "2017-07-10T05:32:13Z",
        "body": "It's not that simple.\r\nThere are various types of conflicts possible, for example for conflict of types: (deleted by them / deleted by us) staging the file (git add), is a way to resole the conflict and keep the file.\r\nIn that case, refusing to stage the file, will prevent the user from resolving the conflict, and force the user to use alternative GIT client, to resole the conflict.\r\n\r\nIn such cases we can show a warning with: add/rm options. Or maybe show X,V buttons in the sidebar? But then, we need to show an indication of what actually happend , and a way to undo the operation before the actual commit. And it get's complicated.\r\n\r\nFor example, let's take this git conflict:\r\n1. master modify file foo\r\n2. branch fix delete file foo\r\n3. merge fix to master\r\n4. conflict: deleted by them\r\n\r\nIn this state, doing: git rm foo && git status\r\nShows:\r\nChanges to be committed:\r\ndeleted foo\r\nAnd this has a nice indication in VSCode\r\n\r\nBut if instead, i would do: git add foo && git status (Or stage the file from within VSCode)\r\nI would see in terminal:\r\n```\r\nAll conflicts fixed but you are still merging.\r\n(use \"git commit\" to conclude merge)\r\n```\r\n\r\nWithout any indication of our actions, and no way to undo the action.\r\nVSCode shows the git repository as clean, without the need to commit at all. (Probably another issue)\r\n\r\n\r\nI would be happy to work on this issue, but i don't know in what direction this should go.\r\n"
      },
      {
        "user": "marckassay",
        "created_at": "2017-07-10T16:09:16Z",
        "body": "I see your concern.  What I observe in VSCode when there is a 'deleted by them' conflict in the SCM viewlet under the 'Merge Changes', is that the file has a strike-through style.  I find that there are 2 options:\r\n- Upon mouse rollover, a '+' icon appears with the following tooltip: 'Stage Changes'.  If I click on this icon, Git will resolve the conflict which will make the branch updated with nothing to commit.  And that behavior is correct.  Git simply negated the deletion that \"_by them_\" did.   However that tooltip message is misleading, it didn’t stage the file, it simply resolved the conflict.\r\n \r\n- If I don’t click on the '+' icon and attempt to commit, the following notification appears that prevents a successful commit:  'Error: Git: Committing is not possible because you have unmerged files.'\r\n\r\nIn a 'deleted by us' scenario, the difference when compared from the scenario above is that when the '+' icon is clicked, it is indeed staged as an new file (Index added).  So for the record, the only thing I see that needs to be fixed in a 'deleted by them' and 'deleted by us' scenario is the misleading tooltip message during a 'deleted by them' as mentioned above.\r\n\r\nAll other conflicts that contains conflict-markers (===, >>>, <<<) which are attempted to be added/staged should raise a warning as the OP suggested. "
      },
      {
        "user": "BuraChuhadar",
        "created_at": "2017-07-13T04:44:48Z",
        "body": "@joaomoreno this is my first try. Please review when you have the chance #30568. Thank you."
      },
      {
        "user": "joaomoreno",
        "created_at": "2017-07-13T08:52:32Z",
        "body": "@BuraChuhadar @ferreus Let me introduce you guys to one another: #30568 #30529. 😆 "
      },
      {
        "user": "Deilan",
        "created_at": "2017-08-21T12:55:49Z",
        "body": "Sadly, both of the PRs still couldn't pass CI. :("
      },
      {
        "user": "joaomoreno",
        "created_at": "2017-08-28T08:58:43Z",
        "body": "Fixed by #30568"
      }
    ]
  },
  {
    "number": 29927,
    "title": "[Feature Request] Drag & droping a folder/file onto the integrated terminal",
    "created_at": "2017-06-30T09:33:21Z",
    "closed_at": "2017-10-28T08:20:58Z",
    "labels": [
      "help wanted",
      "feature-request",
      "terminal"
    ],
    "url": "https://github.com/microsoft/vscode/issues/29927",
    "body": "Right now it's possible to drag and drop a folder from the explorer/finder onto the VSCode window: it will attempt to open the folder into VSCode.\r\n\r\nIt would be great if the user dropped a folder onto the integrated terminal, the path would be copied into the terminal instead of opening the folder into VSCode.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/29927/comments",
    "author": "warpdesign",
    "comments": [
      {
        "user": "FredrikFolkesson",
        "created_at": "2017-10-16T11:50:45Z",
        "body": "I would like to try my hand at this if that is okay?"
      },
      {
        "user": "Tyriar",
        "created_at": "2017-10-18T19:47:20Z",
        "body": "@FredrikFolkesson sure! To get you started, look in terminalPanel.ts for 'DragEvent' to see what is currently happening."
      },
      {
        "user": "FredrikFolkesson",
        "created_at": "2017-10-23T14:55:59Z",
        "body": "@Tyriar This feature seem to have already been implemented.\r\n\r\nBoth on my insider edition of vscode, and the one I built myself from source.\r\n\r\nIt works as it should on at least on windows with git-bash. And powershell.\r\n\r\nSo I think this issue can be closed.\r\n"
      }
    ]
  },
  {
    "number": 29217,
    "title": "Optionally enable --prune while git fetch'ing",
    "created_at": "2017-06-21T22:13:05Z",
    "closed_at": "2017-06-26T15:34:05Z",
    "labels": [
      "help wanted",
      "feature-request",
      "git",
      "good first issue"
    ],
    "url": "https://github.com/microsoft/vscode/issues/29217",
    "body": "Since it is now possible to delete local git branches the remaining problem is that remote-tracking refs are accumulated over time and clutter the checkout and other menus. I think it would make sense if one could enable the `--prune` flag when vscode does it's periodic `git fetch` so that refs which don't exist anymore on the server are automatically cleaned.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/29217/comments",
    "author": "letmaik",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2017-06-22T08:04:33Z",
        "body": "This could be a setting: `git.autofetchPrune`. Want to create a PR for it?"
      },
      {
        "user": "letmaik",
        "created_at": "2017-06-22T09:02:51Z",
        "body": "Done :)"
      },
      {
        "user": "letmaik",
        "created_at": "2017-06-22T17:25:08Z",
        "body": "Note that I just found out you can also enable this via a git config setting: `git config --global fetch.prune true`. Considering this, should my PR still be merged?"
      },
      {
        "user": "letmaik",
        "created_at": "2017-06-24T10:53:52Z",
        "body": "The more I think about it... I don't think this PR is the right way. However in the future there could be some git config editor which would let you change options like that. Should we abandon this?"
      },
      {
        "user": "joaomoreno",
        "created_at": "2017-06-26T15:34:05Z",
        "body": "Absolutely right, let's leave it up to git config. 👍 "
      }
    ]
  },
  {
    "number": 28090,
    "title": "Feature: Expand button in search",
    "created_at": "2017-06-06T07:23:40Z",
    "closed_at": "2019-12-13T23:54:47Z",
    "labels": [
      "help wanted",
      "feature-request",
      "search"
    ],
    "url": "https://github.com/microsoft/vscode/issues/28090",
    "body": "Hi all,\r\n\r\nCurrently when I search for a string and there are lots of results in lots of files, files with less than 10 results are automatically expanded. There is also a button \"Collapse\" that collapses all the files, but I can't seem to find a button to do the exact opposite - to expand all the files in search results. Could we get an \"Expand\" button please? It wouldn't even take up extra space - it could be shown instead of \"Collapse\" button when all files in search results are collapsed, and vice versa.\r\n\r\nThanks in advance, I use VSCode daily at work for half a year now and I'm really enjoying it!!",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/28090/comments",
    "author": "bakasmarius",
    "comments": [
      {
        "user": "WilliamHolmes",
        "created_at": "2018-07-05T11:52:25Z",
        "body": "@sandy081 Is this Feature Request still on the radar?"
      },
      {
        "user": "sandy081",
        "created_at": "2018-07-06T07:42:05Z",
        "body": "@roblourens FYI"
      },
      {
        "user": "roblourens",
        "created_at": "2019-10-08T23:53:06Z",
        "body": "This has come up before and I think we could investigate this now that search uses the new faster tree.\r\n\r\nThe main question is still, will expanding 10,000 files cause vscode to grind to a halt?\r\n\r\nSomeone could investigate this. I would consider having the \"collapse\" button actually toggle collapse/expand such that if _everything_ is collapsed, it would switch to \"expand all\""
      },
      {
        "user": "JacksonKearl",
        "created_at": "2019-11-06T23:46:53Z",
        "body": "@roblourens can confirm that expanding 10,000 results (either in a couple files or across many) doesnt have a noticeable performance impact. Tested in Mac and Windows"
      },
      {
        "user": "roblourens",
        "created_at": "2019-11-11T15:51:46Z",
        "body": "Cool! It might still be useful to have this:\r\n\r\n> having the \"collapse\" button actually toggle collapse/expand such that if everything is collapsed, it would switch to \"expand all\""
      }
    ]
  },
  {
    "number": 27655,
    "title": "Second time proposal is selected it is not read in VoiceOver",
    "created_at": "2017-05-30T22:14:12Z",
    "closed_at": "2018-08-14T19:05:29Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "accessibility",
      "suggest"
    ],
    "url": "https://github.com/microsoft/vscode/issues/27655",
    "body": "- VSCode Version: Code - Insiders 1.13.0-insider (afe47dc84467b487ce0079ff72f55e7ef4f7ebca, 2017-05-30T10:34:18.253Z)\r\n- OS Version: Darwin x64 15.6.0\r\n- Extensions: none\r\n---\r\n\r\nTesting #27315\r\n\r\nSteps to Reproduce:\r\n\r\n1. Enable VoiceOver\r\n2. Open content assist\r\n3. First proposal is selected and read\r\n4. Close content assist\r\n5. Open content assist with same proposals\r\n6. First proposal is selected, but not read\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/27655/comments",
    "author": "chrmarti",
    "comments": [
      {
        "user": "ramya-rao-a",
        "created_at": "2017-05-30T22:36:58Z",
        "body": "Between closing and opening of content assist, does the suggestion list go away or remain?"
      },
      {
        "user": "chrmarti",
        "created_at": "2017-05-30T22:39:07Z",
        "body": "It goes away."
      },
      {
        "user": "ramya-rao-a",
        "created_at": "2017-06-02T23:36:52Z",
        "body": "I also see this for suggestion list items that have already been visited"
      },
      {
        "user": "JacksonKearl",
        "created_at": "2018-08-01T00:01:07Z",
        "body": "It reads it out every other time it shows up. Interesting."
      },
      {
        "user": "mjbvz",
        "created_at": "2018-08-03T09:01:07Z",
        "body": "I'm still seeing this issue when manually triggering suggestions on 0c2d71e2bb9a020995729ab7d5d5f8e4e897e657\r\n\r\nSteps:\r\n\r\n1. In JS file, trigger suggestions using ctrl+space on a blank line\r\n1. press esc\r\n1. Trigger suggestions manually again without moving the cursor\r\n\r\nThe first selected suggestions iis not read out again when you do this\r\n"
      },
      {
        "user": "isidorn",
        "created_at": "2018-08-03T14:38:16Z",
        "body": "I do not think this is ciritcal, since this was behaving like this for a couple of releases\r\n@JacksonKearl feel free to postpone to August"
      },
      {
        "user": "JacksonKearl",
        "created_at": "2018-08-03T16:52:36Z",
        "body": "@mjbvz unable to replicate with NVDA. Is this Voiceover? Can you check if 1.25.1 is the same?"
      },
      {
        "user": "JacksonKearl",
        "created_at": "2018-08-03T16:59:53Z",
        "body": "Unable to replicate with Voiceover as well. Could you take another look? This is on 4fa62b246"
      },
      {
        "user": "JacksonKearl",
        "created_at": "2018-08-04T00:10:59Z",
        "body": "Note that not reading suggestions when the editor loses then regains focus is a separate bug, tracked at #53719. @sbatten says he was able to verify this bug."
      },
      {
        "user": "joaomoreno",
        "created_at": "2018-08-06T08:15:34Z",
        "body": "@JacksonKearl Moving to August"
      },
      {
        "user": "JacksonKearl",
        "created_at": "2018-08-14T19:05:29Z",
        "body": "Note to verifiers: this issue is about the alert not being read twice in the same \"context\". The issue of alerts not being read when code loses focus then regains it is separate and tracked at #53719."
      }
    ]
  },
  {
    "number": 27281,
    "title": "Allow Zooming on Small Images",
    "created_at": "2017-05-25T16:22:26Z",
    "closed_at": "2017-11-03T20:34:05Z",
    "labels": [
      "help wanted",
      "feature-request",
      "*duplicate"
    ],
    "url": "https://github.com/microsoft/vscode/issues/27281",
    "body": "I am working on a repository that contains very small images (10x10 pixel .png files). I would like to view these images contained in my repository before and after running code to modify them. However, they are much too small, and I am forced to use a 3rd party application. This is rather tedious when modifying multiple images at once. ",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/27281/comments",
    "author": "pmartindev",
    "comments": [
      {
        "user": "mjbvz",
        "created_at": "2017-11-03T20:34:05Z",
        "body": "Duplicate of #18987"
      }
    ]
  },
  {
    "number": 26957,
    "title": "\"Stage changes\" command doesn't work on Merge Changes",
    "created_at": "2017-05-19T18:24:03Z",
    "closed_at": "2017-11-23T13:44:15Z",
    "labels": [
      "bug",
      "help wanted",
      "git",
      "good first issue"
    ],
    "url": "https://github.com/microsoft/vscode/issues/26957",
    "body": "- Have a merge conflict in a git repo, file is in the \"Merge Changes\" section of the scm viewlet\r\n- Hover the + button on the file in \"Merge Changes\", it says \"Stage changes cmd+shift+S\" with my keybinding\r\n- Press that shortcut, or use the command via command palette - nothing happens\r\n- It works as expected when the file is not staged",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/26957/comments",
    "author": "roblourens",
    "comments": [
      {
        "user": "BuraChuhadar",
        "created_at": "2017-05-24T12:32:17Z",
        "body": "@joaomoreno I can work on this one if possible."
      },
      {
        "user": "marckassay",
        "created_at": "2017-06-03T03:00:34Z",
        "body": "I believe this is directly related to #24919, which has a pull-request pending.  I wasn't able to receive the tooltip keybinding as @roblourens explained.  So that may be an issue, I don't know at this point.\r\n\r\nSomething to be mindful about, this ticket was created a day after the 'extensions/merge-conflicts' was added to master.  I don't think that should of changed the lack of behavior as @roblourens mentioned but again, just be mindful about it. "
      },
      {
        "user": "BuraChuhadar",
        "created_at": "2017-06-04T01:15:42Z",
        "body": "@roblourens are you choosing a file and then press the shortcut? If you don't do that then nothing will happen. Stage changes only looks for the files that are selected then adds it to the stage. Please let me know if that works for you. "
      },
      {
        "user": "pabloazurduy",
        "created_at": "2017-09-08T12:58:10Z",
        "body": "same error here! its there a workaround?"
      },
      {
        "user": "joaomoreno",
        "created_at": "2017-11-23T13:44:15Z",
        "body": "To keep the number of issues in our inbox on a manageable level, we're closing issues that have been on the backlog for a long time but haven't gained traction: We look at the number of votes the issue has received and the number of duplicates issues filed.\r\n\r\nThanks for your understanding. Happy coding!"
      }
    ]
  },
  {
    "number": 26361,
    "title": "'About Visual Studio Code' window can't be closed with ⌘W",
    "created_at": "2017-05-10T08:11:48Z",
    "closed_at": "2017-05-20T06:06:22Z",
    "labels": [
      "help wanted",
      "upstream",
      "*duplicate"
    ],
    "url": "https://github.com/microsoft/vscode/issues/26361",
    "body": "- VSCode Version: Code 1.12.1 (f6868fce3eeb16663840eb82123369dec6077a9b, 2017-05-04T21:18:32.269Z)\r\n- OS Version: Darwin x64 16.5.0\r\n- Extensions: \r\n\r\n|Extension|Author|Version|\r\n|---|---|---|\r\n|vscode-dash|deerawan|1.5.0|\r\n|php-intellisense|felixfbecker|1.2.1|\r\n|VS-code-drupal|marcostazi|0.0.12|;\r\n\r\n---\r\nThis is a super-tiny issue, barely worth reporting… :)\r\n\r\nSteps to Reproduce:\r\n\r\n1. With the MacOS version of vscode, open the menu item \"Code\" and select \"About Visual Studio Code\" \r\n2. Try to close the window using ⌘W, you can't.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/26361/comments",
    "author": "NiklasBr",
    "comments": [
      {
        "user": "wangweixuan",
        "created_at": "2017-05-13T06:09:59Z",
        "body": "Is this a duplicate of #25907?"
      },
      {
        "user": "NiklasBr",
        "created_at": "2017-05-15T08:18:25Z",
        "body": "@wangweixuan I think it might be."
      }
    ]
  },
  {
    "number": 26011,
    "title": "UI: Use em dash (—) as window title separator on macOS",
    "created_at": "2017-05-05T09:42:33Z",
    "closed_at": "2017-05-15T21:12:41Z",
    "labels": [
      "help wanted",
      "feature-request"
    ],
    "url": "https://github.com/microsoft/vscode/issues/26011",
    "body": "Most macOS apps (like Terminal.app) use em dash (`—`) instead of en dash (`-`) as window title separator. I suggest VS Code use em dash for better consistency.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/26011/comments",
    "author": "wangcheng",
    "comments": [
      {
        "user": "bpasero",
        "created_at": "2017-05-05T15:26:35Z",
        "body": "PR welcome."
      },
      {
        "user": "hamxabaig",
        "created_at": "2017-05-06T12:33:18Z",
        "body": "Can anyone explain a bit about it ? Thanks"
      }
    ]
  },
  {
    "number": 25936,
    "title": "Bring back ahead/behind counts while git syncing",
    "created_at": "2017-05-04T21:57:28Z",
    "closed_at": "2017-05-05T10:56:21Z",
    "labels": [
      "bug",
      "help wanted",
      "git",
      "good first issue"
    ],
    "url": "https://github.com/microsoft/vscode/issues/25936",
    "body": "- VSCode Version: 1.12.0\r\n- OS Version: Win 10\r\n\r\nSteps to Reproduce:\r\n\r\n1. Create a commit and click on the sync icon in the bottom left\r\n2. Observe how the ahead/behind counts disappear immediately before the operation is done\r\n\r\nThis change was done in fab6f8871ad234ffe0123265f313458590535119 (@joaomoreno) and it really annoyed me when it was released and still does. It just seems wrong to me and I found it much nicer before. With 1.12.0 the sync icon spins again, but now removing the ahead/behind counts immediately feels weird as the spinning sync operation \"works\" on pushing/pulling those two things and only when it's done spinning the counts should disappear as well. I hereby vote for reverting that change, especially since now the icon is spinning again. Thanks! :)",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/25936/comments",
    "author": "letmaik",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2017-05-05T06:27:56Z",
        "body": "PR? 👍 "
      }
    ]
  },
  {
    "number": 25541,
    "title": "Add partial staging actions to diff editor context menu",
    "created_at": "2017-04-27T12:04:12Z",
    "closed_at": "2018-03-19T13:27:35Z",
    "labels": [
      "help wanted",
      "feature-request",
      "git",
      "good first issue"
    ],
    "url": "https://github.com/microsoft/vscode/issues/25541",
    "body": "",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/25541/comments",
    "author": "joaomoreno",
    "comments": [
      {
        "user": "anirudhrb",
        "created_at": "2017-08-10T14:19:25Z",
        "body": "Is this still open? I would like to work on this. I am new to the code and would probably need some help."
      },
      {
        "user": "coldacid",
        "created_at": "2017-09-07T18:54:42Z",
        "body": "@anirudhrb sure looks like it is."
      }
    ]
  },
  {
    "number": 25529,
    "title": "Closing a tab using middle mouse button on the 'x' causes the tab to the right to also be clsosed",
    "created_at": "2017-04-27T08:33:26Z",
    "closed_at": "2017-05-02T08:31:19Z",
    "labels": [
      "bug",
      "help wanted",
      "verified"
    ],
    "url": "https://github.com/microsoft/vscode/issues/25529",
    "body": "- VSCode Version: Code 1.11.2 (6eaebe3b9c70406d67c97779468c324a7a95db0e, 2017-04-13T08:03:11.395Z)\r\n- OS Version: Windows_NT ia32 10.0.15063\r\n- Extensions: \r\n\r\n|Extension|Author|Version|\r\n|---|---|---|\r\n|gitlens|eamodio|3.4.5|\r\n|cpptools|ms-vscode|0.11.0|\r\n|PowerShell|ms-vscode|0.12.2|\r\n|trailing-spaces|shardulm94|0.2.11|\r\n|vscode-todo-highlight|wayou|0.4.18|;\r\n\r\n\r\n---\r\n\r\nSteps to Reproduce:\r\n\r\n1. Have 2 or more tabs open\r\n2. Press the middle mouse button (scroll wheel) on the 'x' of a tab which has a neighboring tab to its right\r\n3. Both tabs will be closed",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/25529/comments",
    "author": "Morten242",
    "comments": [
      {
        "user": "bpasero",
        "created_at": "2017-04-27T08:55:35Z",
        "body": "Nice catch 👍 "
      },
      {
        "user": "stefangabos",
        "created_at": "2017-04-27T09:56:23Z",
        "body": "While we're at it, is it also possible to close a tab by double-clicking it?"
      },
      {
        "user": "bpasero",
        "created_at": "2017-04-27T10:07:32Z",
        "body": "No, currently not."
      },
      {
        "user": "bpasero",
        "created_at": "2017-04-27T10:07:43Z",
        "body": "Btw PR welcome."
      },
      {
        "user": "jportela",
        "created_at": "2017-04-30T10:48:51Z",
        "body": "@bpasero I'm tackling this one, I can confirm it also happens on MacOS"
      }
    ]
  },
  {
    "number": 23774,
    "title": "Extensions: can not open via touch interaction",
    "created_at": "2017-03-31T23:28:04Z",
    "closed_at": "2017-06-28T13:53:45Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "good first issue",
      "extensions"
    ],
    "url": "https://github.com/microsoft/vscode/issues/23774",
    "body": "This seems like a regression from stable:\r\n* use a surface book\r\n* open extensions view many many\r\n* try to click on one with touch\r\n=> does not open",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/23774/comments",
    "author": "bpasero",
    "comments": [
      {
        "user": "juliannojungle",
        "created_at": "2017-04-15T00:53:17Z",
        "body": "Can also confirm the bug in other touch devices, such as HP Detachable PC.\r\n\r\nWorkaround to see the extension details:\r\n1 - Enable the full touch keyboard: On \"Windows 10, All Settings, Devices, Typing\", enable \"Add the standard keyboard layout as a touch keyboard option\";\r\n2 - Open the touch keyboard, tap on the language icon (lower right) and select the full layout keyboard (this way you get the up/down arrows); \r\n3 - On VsCode, tap on the extensions icon, search for the desired extension, on the touch keyboard use the arrow down/up to navigate and press enter to view the details.\r\n\r\nThis way you can open the details panel, but sadly the touch scroll doesn't work on this panel as well..."
      },
      {
        "user": "bristy",
        "created_at": "2017-06-06T19:06:11Z",
        "body": "I am new to this VS code and want to contribute. I can take this bug up if help is provided. I need some pointers to starts with though."
      }
    ]
  },
  {
    "number": 23011,
    "title": "[Feature request] Capability to open old version of file in Git side bar",
    "created_at": "2017-03-22T11:55:43Z",
    "closed_at": "2017-06-26T14:15:40Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "git",
      "good first issue",
      "verification-needed"
    ],
    "url": "https://github.com/microsoft/vscode/issues/23011",
    "body": "There are currently two options available which are displayed after right-clicking at a file in Git side bar:\r\n\r\n1. Open Change (the comparison of the old and the new versions)\r\n2. Open File (the new version of the file)\r\n\r\nIt is requested to have the third option: Open Old File (the old version of the file).",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/23011/comments",
    "author": "Deilan",
    "comments": [
      {
        "user": "eamodio",
        "created_at": "2017-03-22T19:25:34Z",
        "body": "@Deilan while not exactly what you are asking for here (as a menu choice), but the GitLens extension can provide this behavior by doing the following:\r\n\r\nUsing the command palette run `GitLens: Show File History` or press `alt+h` when you have the file opened.\r\nThen from the quick pick menu that opens, choose the commit you want (the most recent one in this case) and then choose `Open File` and it will open that version of the file\r\n\r\nI would love to be able to add commands to the git file menu, but that currently isn't supported"
      },
      {
        "user": "Duroktar",
        "created_at": "2017-05-15T01:45:35Z",
        "body": "@Deilan I thought I'd take a crack a this one and got it working pretty much exactly like you requested.  #26629 \r\n\r\nI'd love to hear what everybody thinks :smile: \r\nCheers."
      },
      {
        "user": "joaomoreno",
        "created_at": "2017-06-26T14:15:39Z",
        "body": "Fixed by #26629, thanks @Duroktar "
      }
    ]
  },
  {
    "number": 22866,
    "title": "Show enabled extensions only in the extension viewlet",
    "created_at": "2017-03-20T02:23:50Z",
    "closed_at": "2017-09-28T07:18:32Z",
    "labels": [
      "help wanted",
      "feature-request",
      "good first issue",
      "extensions"
    ],
    "url": "https://github.com/microsoft/vscode/issues/22866",
    "body": "Hope that the default extension list only shows the active plugin.\r\n\r\n- VSCode Version: latest\r\n- OS Version: OS X 10.11.5\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/22866/comments",
    "author": "gatspy",
    "comments": [
      {
        "user": "BuraChuhadar",
        "created_at": "2017-05-18T21:22:15Z",
        "body": "Can I work on this if gonzofish is not working on it anymore?"
      },
      {
        "user": "joaomoreno",
        "created_at": "2017-05-19T09:51:41Z",
        "body": "Give him a bit more time."
      },
      {
        "user": "leocaseiro",
        "created_at": "2017-06-16T04:07:05Z",
        "body": "That's a nice feature! (ping)"
      },
      {
        "user": "martellaj",
        "created_at": "2017-08-19T16:22:08Z",
        "body": "Looks like this issue can be closed."
      },
      {
        "user": "leocaseiro",
        "created_at": "2017-09-28T07:10:07Z",
        "body": "Hi @joaomoreno, perhaps you could close this issue. This feature has been released."
      }
    ]
  },
  {
    "number": 22768,
    "title": "Add clear recent projects from file menu to commands [ ctrl + shift + p ]",
    "created_at": "2017-03-17T00:17:38Z",
    "closed_at": "2017-03-24T13:57:31Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "good first issue",
      "verification-needed"
    ],
    "url": "https://github.com/microsoft/vscode/issues/22768",
    "body": "Add shortcut from (File -> Open Recent -> clear items) to commands  [ ctrl + shift + p ]",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/22768/comments",
    "author": "pixieaka",
    "comments": [
      {
        "user": "Tyriar",
        "created_at": "2017-03-17T20:12:56Z",
        "body": "@bpasero would you accept a PR that implemented this?"
      },
      {
        "user": "bpasero",
        "created_at": "2017-03-17T20:25:22Z",
        "body": "@Tyriar sure, I think this is actually trivial because we have a windows service method `clearRecentPathsList` that we just need to wire up to a command."
      },
      {
        "user": "misoguy",
        "created_at": "2017-03-21T12:43:09Z",
        "body": "I'll try to make a PR for this if no one is on it yet :)"
      },
      {
        "user": "cristianhosu",
        "created_at": "2017-03-21T12:44:50Z",
        "body": "@misoguy You beat me to the punch... Just wanted to start testing it :)"
      },
      {
        "user": "misoguy",
        "created_at": "2017-03-21T13:00:10Z",
        "body": "@cristianhosu You can start it if you want :) I haven't done anything yet :)"
      },
      {
        "user": "cristianhosu",
        "created_at": "2017-03-21T13:24:09Z",
        "body": "@misoguy this was one of the only beginner tasks :)\r\nHow do i assign it to myself?"
      },
      {
        "user": "misoguy",
        "created_at": "2017-03-21T13:27:14Z",
        "body": "@cristianhosu I think making a PR for this issue and referencing it to this issue should be enough :)"
      },
      {
        "user": "Tyriar",
        "created_at": "2017-03-21T21:47:38Z",
        "body": "@cristianhosu we can't assign outside of the GH organization unfortunately, a comment as you've done is perfect :smiley: "
      },
      {
        "user": "cristianhosu",
        "created_at": "2017-03-23T05:09:23Z",
        "body": "@bpasero I've created a PR for this task, PR#23049."
      },
      {
        "user": "cristianhosu",
        "created_at": "2017-03-24T17:56:59Z",
        "body": "Yaaaaay! My first contribution :)"
      },
      {
        "user": "Tyriar",
        "created_at": "2017-03-24T18:46:10Z",
        "body": "@cristianhosu awesome, thanks a bunch :smiley: "
      }
    ]
  },
  {
    "number": 22645,
    "title": "Allow to resize views with keybindings only",
    "created_at": "2017-03-15T05:18:59Z",
    "closed_at": "2017-03-25T16:35:01Z",
    "labels": [
      "help wanted",
      "feature-request",
      "accessibility"
    ],
    "url": "https://github.com/microsoft/vscode/issues/22645",
    "body": "Provide commands to resize the active view using keyboard only.\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/22645/comments",
    "author": "bpasero",
    "comments": [
      {
        "user": "cleidigh",
        "created_at": "2017-03-15T05:34:23Z",
        "body": "perfect, thanks\r\n\r\nif I can get my debug working across repositories I can get onto this...\r\n"
      },
      {
        "user": "bpasero",
        "created_at": "2017-03-15T06:06:05Z",
        "body": "@cleidigh what is the issue you are seeing?"
      },
      {
        "user": "cleidigh",
        "created_at": "2017-03-15T06:14:28Z",
        "body": "see #22642 \r\nI've been working on it/confused as hell for the last three days\r\njust concluded fresh check out/direct clone does not dbg but no error output\r\nthe executable just launches"
      },
      {
        "user": "cleidigh",
        "created_at": "2017-03-15T06:24:18Z",
        "body": "@bpasero \r\nyou can sign me up for this officially..."
      },
      {
        "user": "bpasero",
        "created_at": "2017-03-15T09:09:01Z",
        "body": "@cleidigh looks like the workaround for you is to debug from one workspace to work on this."
      },
      {
        "user": "cleidigh",
        "created_at": "2017-03-19T21:31:24Z",
        "body": "@bpasero \r\nand now back to our regularly scheduled programming...\r\n\r\nSorry, the debug problem and SCM/keyboard issues sidetracked me tremendously\r\nbut I learned a lot - that's a good thing the nature of the beast.\r\n\r\nI got a cleaned up branch of my first resize implementation. I think it's\r\nready for a pull. I want to make sure I get feedback before I go too far\r\ngiven this is my first pull. Note: it's also my first git project ,\r\nit wasn't around when I was doing my work before (shows my age ;-)\r\n\r\nThis prototype works on the sidebar, the panel and one editor.\r\nI'll comment more in the pull\r\n"
      },
      {
        "user": "bpasero",
        "created_at": "2017-03-20T02:40:42Z",
        "body": "Ok, lets discuss further inside the PR."
      }
    ]
  },
  {
    "number": 21812,
    "title": "Touch support can be improved in webviews",
    "created_at": "2017-03-02T18:24:35Z",
    "closed_at": "2022-02-02T22:02:16Z",
    "labels": [
      "bug",
      "help wanted",
      "webview",
      "touch/pointer"
    ],
    "url": "https://github.com/microsoft/vscode/issues/21812",
    "body": "- VSCode Version: Insider 1.11.0\r\n- OS Version: Windows 10, Build 15046\r\n- Machine: Surface Pro 3, with latest drivers\r\n\r\nThere are several places where touch support needs improvement:\r\n\r\n1. In extension description pages, scrolling by touch does not work. \r\n2. In markdown preview, scrolling by touch does not work\r\n3. When there is a split view, or when I just closed a tab, there is a possibility where tapping the tabs does not work. This is not reproducible every time. \r\n\r\nTouch is an essential functionality in many senarios. I often find it easier to scroll through webpages (like markdown previews) by touch than using the trackpad. There are also times people might use VS Code without a trackpad or mouse. It would be great help if touch support can be improved.\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/21812/comments",
    "author": "PowerSnail",
    "comments": [
      {
        "user": "sandy081",
        "created_at": "2017-03-03T11:39:09Z",
        "body": "Not sure where and who owns the touch related functionality. Hence starting with you @bpasero ."
      },
      {
        "user": "bpasero",
        "created_at": "2017-03-03T11:54:06Z",
        "body": "I suspect an issue with touch support in our webviews. As for the issue around tabs I suggest to file a separate bug."
      },
      {
        "user": "mjbvz",
        "created_at": "2017-03-10T22:50:31Z",
        "body": "@bpasero I somewhat fixed touch support in the html preview (markdown preview) with d9de64e. This change applied absolute positioning to the `webview` element\r\n\r\nHowever I'm not sure why touch support did not work in the first place. Also, on my Surface 3, the touch support was somewhat flaky. It would sometimes refuse for work for a few seconds when first loading the html preview and I'm not sure if this was specific to my Surface 3 or not.\r\n\r\n@mousetraps Can you please do a quick test of the latest insiders builds on your Surface Book? Just try opening up a markdown preview and interacting with it on the touch screen. Let me know if you also see any odd behavior. \r\n\r\nIf anyone else with a touch screen computer has a chance, please test out the markdown preview in the latest VSCode insiders builds and let me know what works and what doesn't"
      },
      {
        "user": "mousetraps",
        "created_at": "2017-03-10T23:48:16Z",
        "body": "@mjbvz I'm running into the same flaky behavior. A few observations:\r\n* the issue only occurs when multiple markdown previews have been opened in the session.\r\n* tapping a few times on the webview seems to unlock it sometimes. \r\n* when the issue does occur, touch sometimes also stops working momentarily in the tab well (tapping another tab does not switch tabs as expected). This might be a totally unrelated issue, however. Touch continues working fine everywhere else as far as I can tell. \r\n* scrolling by touching the scrollbar in the webview also stops working"
      },
      {
        "user": "codefoster",
        "created_at": "2017-12-09T00:15:10Z",
        "body": "Any motion on this? Willing to help test. I have a Surface Book."
      },
      {
        "user": "mjarkk",
        "created_at": "2019-05-01T08:00:16Z",
        "body": "It's also not possible to move the window via the custom title bar with touch.  \r\n\r\nSystem:  \r\n- OS: Solus 4.0 (linux)\r\n- Desktop env: Budgie\r\n- VSCode version: 1.33.1"
      },
      {
        "user": "wmertens",
        "created_at": "2020-07-23T16:56:42Z",
        "body": "I don't see this mentioned, but you also can't scroll the editors with touch, a very natural gesture."
      },
      {
        "user": "wmertens",
        "created_at": "2020-11-27T14:57:44Z",
        "body": "In the most recent VSCode, scrolling editors with touch works :tada:.\r\n\r\nSelecting doesn't but I think that's probably quite hard to get right anyway."
      },
      {
        "user": "Yamilquery",
        "created_at": "2021-06-29T15:45:53Z",
        "body": "The selection through touch is still not working. It would be great to have this feature soon"
      },
      {
        "user": "wmertens",
        "created_at": "2021-06-30T15:31:58Z",
        "body": "@Yamilquery how would you propose it should work? double-tap, long-tap, and then drag markers?"
      },
      {
        "user": "Yamilquery",
        "created_at": "2021-06-30T15:38:04Z",
        "body": "@wmertens it would be great with long-tap + drag markers, I think so! 🙌"
      },
      {
        "user": "mjbvz",
        "created_at": "2022-02-02T22:02:16Z",
        "body": "I think this issue needs to be split out into individual cases that don't work with the latest VS Code build\r\n\r\nIf you are seeing issues with touch and webviews::\r\n\r\n- First test to make sure it is not specific to a single type of webview. Some extension webview may not be touched enabled. \r\n\r\n    If the issue is specific to single extension's webview, file an issue against them instead \r\n\r\n- If it seems like a generic webview issue, please open a new issue describing the problem and the hardware you are using  (iPad, surface, ...) so we can investigate this\r\n"
      }
    ]
  },
  {
    "number": 21413,
    "title": "Feature Request: OpenTextDocument with content",
    "created_at": "2017-02-25T08:39:58Z",
    "closed_at": "2017-03-07T06:44:14Z",
    "labels": [
      "help wanted",
      "feature-request",
      "api",
      "verified",
      "verification-needed"
    ],
    "url": "https://github.com/microsoft/vscode/issues/21413",
    "body": "#12283 added an api overload to open a new, untitled text document with an optional language mode.\r\n\r\nIt would be great if this could be augmented to accept content.\r\n\r\nUse case: I have an extension that ships with examples. Currently I have to do one of the following:\r\n\r\n- Open the \"source\" file directly which would allow users to clobber it\r\n- Copy the file to a temp file and open that and then remember to clean it up. Users would still have to \"save as\" to save it in a location that is useful to them\r\n- Use the new overload to open an untitled, empty text document and then use an edit to populate the contents.\r\n\r\nThe last one is the most viable but seems unnecessary. I would like to see `openTextDocument(options?: {language: id, content: text})` so I could do something like \r\n\r\n```\r\nopenTextDocument(exampleUri).then(exampleDocument => { const exampleText = exampleDocument.getText(); openTextDocument({language: LANG_ID, content: exampleText})\r\n```",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/21413/comments",
    "author": "hoovercj",
    "comments": [
      {
        "user": "bpasero",
        "created_at": "2017-02-25T09:26:21Z",
        "body": "@hoovercj why are steps 1 and 2 needed if all you need is the content of a file?"
      },
      {
        "user": "hoovercj",
        "created_at": "2017-02-25T09:30:55Z",
        "body": "Sorry @bpasero for the poorly worded issue, I've updated it to clarify that those were 3 distinct options."
      },
      {
        "user": "bpasero",
        "created_at": "2017-02-25T16:52:15Z",
        "body": "@hoovercj nothing prevents you from opening an untitled file and then setting the content, right?"
      },
      {
        "user": "hoovercj",
        "created_at": "2017-02-27T15:55:17Z",
        "body": "@bpasero I didn't see a way to set the content without doing an insert textedit which would allow the user to `undo` the text which goes against the spirit of the \"open example\" command that I've exposed and the \"open untitled document with content\" that I've  proposed.\r\n\r\nFrom the user perspective, \"open example\" should be a discrete step. If they make some modifications and want to quickly get back to the original document they can't blindly press \"undo\" right now because they would get back to a blank page and then have to press \"redo\" and hope they don't accidentally press a key and then lose the document and need to \"open example\" again.\r\n\r\nOf course, if there is a different way that I've missed to set the document content that doesn't result in an undo, I might be able to use that instead"
      },
      {
        "user": "bpasero",
        "created_at": "2017-02-27T16:00:59Z",
        "body": "Ok, good point about the undo."
      },
      {
        "user": "bpasero",
        "created_at": "2017-02-27T16:01:28Z",
        "body": "@jrieken fyi\r\n\r\nI think we would be open to a PR here if you are willing to look into it."
      },
      {
        "user": "jrieken",
        "created_at": "2017-02-27T16:42:59Z",
        "body": "Yeah, would be straight forward to pass on a string when calling the open function"
      },
      {
        "user": "isidorn",
        "created_at": "2017-03-28T09:26:50Z",
        "body": "@jrieken please verify"
      }
    ]
  },
  {
    "number": 21370,
    "title": "expandLineSelection is not a command",
    "created_at": "2017-02-24T15:27:30Z",
    "closed_at": "2021-11-22T21:31:57Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "good first issue",
      "verification-needed",
      "editor-core",
      "insiders-released"
    ],
    "url": "https://github.com/microsoft/vscode/issues/21370",
    "body": "While verifying #14485 I realized that expandLineSelection is not in the command window (F1).\r\nWould be good to have it as command to use programmatically.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/21370/comments",
    "author": "aeschli",
    "comments": [
      {
        "user": "alexdima",
        "created_at": "2017-02-27T15:28:33Z",
        "body": "@aeschli It can be used programmatically. It doesn't show up in F1, just like moveLeft doesn't show up in F1. I agree it should be a proper action, so :+1: "
      }
    ]
  },
  {
    "number": 20769,
    "title": "Ctrl-C kills VSCode if started from command prompt",
    "created_at": "2017-02-16T22:41:00Z",
    "closed_at": "2017-11-23T14:52:47Z",
    "labels": [
      "bug",
      "help wanted",
      "windows",
      "workbench-os-integration"
    ],
    "url": "https://github.com/microsoft/vscode/issues/20769",
    "body": "- VSCode Version: 1.9.1\r\n- OS Version: Windows 10 Anniversary Update\r\n\r\nSteps to Reproduce:\r\n\r\n1. From the command prompt, run \"C:\\Program Files (x86)\\Microsoft VS Code\\Code.exe\". \r\n2. Press Ctrl-C from command prompt, VSCode exits immediately",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/20769/comments",
    "author": "wm1",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2017-02-17T10:06:38Z",
        "body": "This is as expected."
      },
      {
        "user": "wm1",
        "created_at": "2017-02-17T17:46:33Z",
        "body": "Why such a behavior is expected? A child process (at least on Windows) started from cmd.exe is not supposed to be killed when the parent process receives a Ctrl-C.\r\n\r\nI work from command line all the time, and start Code there. Ctrl-C killing the editor is not a great experience for me."
      },
      {
        "user": "joaomoreno",
        "created_at": "2017-02-17T20:19:42Z",
        "body": "What should Ctrl C do, then?"
      },
      {
        "user": "wm1",
        "created_at": "2017-02-17T21:06:27Z",
        "body": "Depends on whether the child process shares the console with the parent cmd process or not.\r\n- For child console process that shares console, Ctrl-C would likely kill the running child process;\r\n- For child GUI process that does not have a console at all, Ctrl-C on the parent cmd process should have no impact on it."
      },
      {
        "user": "joaomoreno",
        "created_at": "2017-02-18T07:37:26Z",
        "body": "Code.exe **is** a child console process. That's just how Chromium works.\r\n\r\nIf you don't want that, I suggest to use what we put in the `PATH`: simply type `code`. It should point to `...\\Microsoft VS Code\\bin\\code.cmd`. This will get you a detached Code."
      },
      {
        "user": "wm1",
        "created_at": "2017-02-18T16:06:27Z",
        "body": "Before replying last time I did check that code.exe is a gui process:\r\n\r\n`link.exe /dump /headers \"C:\\Program Files (x86)\\Microsoft VS Code\\Code.exe\" | findstr subsystem\r\n               2 subsystem (Windows `**GUI**`)`\r\n\r\nAnyhow, code.cmd solves my problem. And I guess that is why nobody complains about this issue. I was not aware of this script as I never allow programs to update PATH.\r\n\r\nIn the meantime, I figure out that \"start **/b** <path-to-code.exe>\" also works, which basically sets CREATE_NEW_PROCESS_GROUP and thus the new process won't receive Ctrl-C targeting the original group."
      },
      {
        "user": "joaomoreno",
        "created_at": "2017-11-23T14:52:47Z",
        "body": "To keep the number of issues in our inbox on a manageable level, we're closing issues that have been on the backlog for a long time but haven't gained traction: We look at the number of votes the issue has received and the number of duplicates issues filed.\r\n\r\nThanks for your understanding. Happy coding!"
      }
    ]
  },
  {
    "number": 18467,
    "title": "Maximized panel should stay maximized after a zoom",
    "created_at": "2017-01-12T19:33:45Z",
    "closed_at": "2017-01-20T11:48:39Z",
    "labels": [
      "help wanted",
      "feature-request"
    ],
    "url": "https://github.com/microsoft/vscode/issues/18467",
    "body": "Steps to Reproduce:\r\n\r\n1. Maximize panel, *maximizes the panel*\r\n2. Zoom out, *the panel is no longer maximized but still much larger than usual*\r\n3. Maximize panel, *maximizes the panel*\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/18467/comments",
    "author": "Tyriar",
    "comments": [
      {
        "user": "isidorn",
        "created_at": "2017-01-20T11:48:39Z",
        "body": "Fixed by #18820"
      }
    ]
  },
  {
    "number": 16771,
    "title": "insertCursorAtEndOfEachLineSelected does not work with multiple selections",
    "created_at": "2016-12-06T23:34:24Z",
    "closed_at": "2017-01-23T15:56:53Z",
    "labels": [
      "help wanted",
      "feature-request",
      "editor-contrib"
    ],
    "url": "https://github.com/microsoft/vscode/issues/16771",
    "body": "- VSCode Version: Code - Insiders 1.8.0-insider (c425cd159bd389844e9400be801675f54f2443c7, 2016-12-06T16:53:46.634Z)\r\n- OS Version: Darwin x64 15.6.0\r\n\r\nIt seems to only work on the primary selection.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/16771/comments",
    "author": "chrmarti",
    "comments": [
      {
        "user": "alexdima",
        "created_at": "2017-01-23T15:56:53Z",
        "body": "Implemented via #17698"
      }
    ]
  },
  {
    "number": 16613,
    "title": "Ability to select and start a launch using keyboard",
    "created_at": "2016-12-06T10:37:03Z",
    "closed_at": "2017-02-21T11:21:39Z",
    "labels": [
      "help wanted",
      "feature-request",
      "debug"
    ],
    "url": "https://github.com/microsoft/vscode/issues/16613",
    "body": "Ability to select and start a launch using keyboard",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/16613/comments",
    "author": "sandy081",
    "comments": [
      {
        "user": "isidorn",
        "created_at": "2016-12-06T10:47:32Z",
        "body": "We can look into this in january. PRs are also welcome :)"
      },
      {
        "user": "isidorn",
        "created_at": "2016-12-09T13:10:18Z",
        "body": "Actually working now"
      },
      {
        "user": "isidorn",
        "created_at": "2016-12-09T13:10:34Z",
        "body": "Forgot that you wanted to contribute a global action for this -> reopening"
      },
      {
        "user": "isidorn",
        "created_at": "2017-02-15T08:43:09Z",
        "body": "ping @michelkaporin "
      }
    ]
  },
  {
    "number": 15671,
    "title": "Git: Support stashing before sync/pull",
    "created_at": "2016-11-17T19:54:38Z",
    "closed_at": "2019-01-04T14:00:45Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "git",
      "verification-needed"
    ],
    "url": "https://github.com/microsoft/vscode/issues/15671",
    "body": "- VSCode Version: 1.7.1\r\n- OS Version: MacOS Sierra\r\n\r\nSteps to Reproduce:\r\n\r\nBe able to use shelving or stashing when syncing so if we have uncomited changes we can update from origin, this is how intelliJ does it and is very useful.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/15671/comments",
    "author": "scgm11",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2019-02-01T10:48:27Z",
        "body": "**Verification**\r\n\r\n1. Enable `git.autoStash`\r\n2. Make sure changes get stashed before pull/sync and restored afterwards"
      }
    ]
  },
  {
    "number": 15234,
    "title": "Add command to 'Switch to Changes View' and 'Switch to Editor View'",
    "created_at": "2016-11-09T09:23:57Z",
    "closed_at": "2016-11-11T10:02:29Z",
    "labels": [
      "help wanted",
      "feature-request",
      "good first issue"
    ],
    "url": "https://github.com/microsoft/vscode/issues/15234",
    "body": "Feature request: Add a keyboard bind-able command for the actions 'Switch to Changes View' and 'Switch to Editor View'.\r\n\r\nFrom what I can see, these actions are only accessible by mouse in the top tight corner of the file being edited. In order to see the changes view for the file being edited with the keyboard only, one must open the git bar, then use tab, arrows and enter to switch to the 'Changes View' for the certain file.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/15234/comments",
    "author": "sskogen",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2016-11-09T11:02:47Z",
        "body": "This makes for a great PR!\n"
      },
      {
        "user": "sskogen",
        "created_at": "2016-11-09T12:22:09Z",
        "body": "The OpenInEditorAction ('Switch to Editor View') does not seem to have a keyboard bind-able command.\nHowever, the GlobalOpenChangeAction  ('Git: Open Change'), which has a keyboard command, seems to open a diff view similar to OpenInDiffAction ('Switch to Editor View'). Is there any difference in these views?\nIf not, I only need a keyboard command for 'Switch to Editor View'.\n"
      },
      {
        "user": "nicot",
        "created_at": "2016-11-10T01:05:37Z",
        "body": "Does the `workbench.action.git.globalOpenFile` action (`Git: Open File` command) do this?\n"
      },
      {
        "user": "sskogen",
        "created_at": "2016-11-10T21:53:09Z",
        "body": "@nicot: thanks, I should have noticed that earlier! Unless there are any difference between the GIT commands 'Open Change' / 'Open File' and the buttons for 'Switch to Changes View' / 'Switch to Editor View', this feature request can be closed 😃 \n"
      },
      {
        "user": "joaomoreno",
        "created_at": "2016-11-11T10:02:36Z",
        "body": "Well spotted!\n"
      }
    ]
  },
  {
    "number": 15043,
    "title": "Format Selection default to current line if no selection made",
    "created_at": "2016-11-05T16:29:48Z",
    "closed_at": "2018-10-23T07:41:44Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "verification-needed",
      "formatting",
      "release-notes"
    ],
    "url": "https://github.com/microsoft/vscode/issues/15043",
    "body": "- VSCode Version: 1.7.1\r\n- OS Version: 10.12.1\r\n\r\nSteps to Reproduce:\r\n\r\n1. Place cursor on a line without selecting a range\r\n2. Choose Format Selection with keyboard shortcut\r\n\r\nIt would be nice if the current line is formatted instead of having to select the whole current line first.\r\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/15043/comments",
    "author": "kinergy",
    "comments": [
      {
        "user": "jrieken",
        "created_at": "2016-11-07T08:09:49Z",
        "body": "I like the feature (format line) but I am not so sure if this should be automagic or explicit.\n"
      }
    ]
  },
  {
    "number": 14985,
    "title": "Feature request: allow disabling experimentalDecorators warnings from user settings",
    "created_at": "2016-11-04T14:00:37Z",
    "closed_at": "2017-10-27T01:11:42Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "javascript",
      "verification-needed"
    ],
    "url": "https://github.com/microsoft/vscode/issues/14985",
    "body": "I work primarily on JS projects, not typescript projects. I use decorators almost in all apps I work on, so it would be hard to add `tsconfig` to all of them. Could we have a user setting to surpress the warning globally?",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/14985/comments",
    "author": "capaj",
    "comments": [
      {
        "user": "waderyan",
        "created_at": "2016-11-07T16:39:13Z",
        "body": "@capaj this is an interesting idea. We don't have support for something like this in our model currently. \n\n@dbaeumer can I get your thoughts here. Adding a setting to supress a warning may be something that would be helpful in multiple scenarios. \n"
      },
      {
        "user": "dbaeumer",
        "created_at": "2016-11-08T15:24:02Z",
        "body": "@waderyan since 2.0.3 we can control this for virtual projects. But if users do have a `jsconfig.json` we can't. So what would be a need idea is to set some jsconfig defaults on startup which are merged with some real settings retrieved from a jsconfig.json or tsconfig.json. But his requires support from TS.\n"
      },
      {
        "user": "mjbvz",
        "created_at": "2017-10-30T20:31:29Z",
        "body": "The most recent code insiders builds adds a new setting: `\"javascript.implicitProjectConfig.experimentalDecorators\"` to control this for implicit projects only. We do not attempt to set this when you already have a `jsconfig`.\r\n\r\nWhen VS Code creates a `jsconfig.json` for you however, it will automatically set `experimentalDecorators` in the jsconfig  based on `javascript.implicitProjectConfig.experimentalDecorators`"
      }
    ]
  },
  {
    "number": 14935,
    "title": "Plugin installation stalls when /tmp is full",
    "created_at": "2016-11-03T20:25:03Z",
    "closed_at": "2017-11-16T20:40:57Z",
    "labels": [
      "bug",
      "help wanted",
      "good first issue",
      "extensions"
    ],
    "url": "https://github.com/microsoft/vscode/issues/14935",
    "body": "- VSCode Version: 1.7.1 02611b4\r\n- OS Version: Arch\r\n\r\nSteps to Reproduce:\r\n\r\n1. Fill /tmp so that it has 0 bytes left\r\n2. Try installing a plugin\r\n\r\nExpected:\r\n\r\nA message about being unable to install a plugin due to /tmp being full.\r\n\r\nActual:\r\n\r\nPlugin installation stalls with button in `Installing` state without any progress or other feedback.",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/14935/comments",
    "author": "janisozaur",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2016-11-04T07:42:22Z",
        "body": "What other behaviour did you expect?\n"
      },
      {
        "user": "janisozaur",
        "created_at": "2016-11-04T07:47:38Z",
        "body": "> Expected:\n> \n> A message about being unable to install a plugin due to /tmp being full.\n"
      },
      {
        "user": "joaomoreno",
        "created_at": "2016-11-04T09:27:26Z",
        "body": "Doh! Sorry. 👍 \n"
      },
      {
        "user": "joaomoreno",
        "created_at": "2017-11-16T20:40:57Z",
        "body": "Closing as won't fix."
      }
    ]
  },
  {
    "number": 14464,
    "title": "Preserve editor relative sizes when switching layouts",
    "created_at": "2016-10-25T17:34:22Z",
    "closed_at": "2017-01-05T15:09:13Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "ux",
      "good first issue",
      "verification-needed"
    ],
    "url": "https://github.com/microsoft/vscode/issues/14464",
    "body": "Testing #14016\n- VSCode Version: Code - Insiders 1.7.0-insider (5bafcdb3d67b29b1f4667a3f497ac05a41dde667, 2016-10-25T06:19:07.301Z)\n- OS Version: Linux x64 4.4.0-45-generic, Ubuntu 16.04\n- Extensions:\n\n| Extension | Author | Version |\n| --- | --- | --- |\n| EditorConfig | EditorConfig | 0.3.4 |\n| lorem-ipsum | Tyriar | 1.0.0 |\n| sort-lines | Tyriar | 1.1.0 |\n| terminal-tabs | Tyriar | 0.0.6 |\n| theme-glacier | Tyriar | 0.0.10 |\n| vscode-icontheme-nomo-dark | be5invis | 1.1.5 |\n| vscode-svgviewer | cssho | 1.2.0 |\n| vscode-eslint | dbaeumer | 1.0.8 |\n| git-project-manager | felipecaputo | 0.1.15 |\n| Theme-Wombat | gerane | 0.0.2 |\n| csharp | ms-vscode | 1.4.1 |\n| typescript-javascript-grammar | ms-vscode | 0.0.6 |\n| nova | rebornix | 0.0.5 |\n| sass-indented | robinbentley | 1.1.0 |\n| annotator | ryu1kn | 0.10.1 |\n\nSteps to Reproduce:\n1. Open 2 editor groups\n2. \"Minimize\" one to enable snapping\n3. Toggle editor group layout, the editor groups will both be the default sizes.\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/14464/comments",
    "author": "Tyriar",
    "comments": [
      {
        "user": "rebornix",
        "created_at": "2016-10-25T17:52:07Z",
        "body": "After the third step @Tyriar mentioned above, if you do a fourth step `Toggle editor group layout` which switches back the previous layout, snapping state should be retained at least.\n"
      },
      {
        "user": "charlespierce",
        "created_at": "2016-12-22T16:33:56Z",
        "body": "I'm interested in tackling this feature request. From a quick look, it appears to be relatively straightforward, but I'm curious if there are any potential pitfalls that immediately jump out to be aware of?"
      },
      {
        "user": "bpasero",
        "created_at": "2017-01-23T17:57:16Z",
        "body": "* [ ] **To verify:** \r\nSwitch the editor layout and verify the editor dimensions are kept relatively."
      }
    ]
  },
  {
    "number": 14453,
    "title": "Allow to use middle mouse click to open from viewlets pinned",
    "created_at": "2016-10-25T16:48:59Z",
    "closed_at": "2016-12-14T10:36:40Z",
    "labels": [
      "help wanted",
      "feature-request",
      "file-explorer",
      "good first issue"
    ],
    "url": "https://github.com/microsoft/vscode/issues/14453",
    "body": "- VSCode Version:1.6.1\n- OS Version:Windows 10 Pro x64\n\nSteps to Reproduce:\n1. open left sidebar\n2. click on file item with middle mouse button\n\n...would be nice if it opened those files in new tabs\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/14453/comments",
    "author": "nine-2-five",
    "comments": [
      {
        "user": "bpasero",
        "created_at": "2016-10-26T08:26:16Z",
        "body": "@isvaljek I just tried this with Sublime and it just seems to open the file like a normal left click. Would you expect in this case to not open the file in preview mode but pinned as real tab? Is that the difference to normal left click?\n"
      },
      {
        "user": "nine-2-five",
        "created_at": "2016-10-26T11:19:50Z",
        "body": "@bpasero in my case when I click on a file in sidebar in most cases the file that opens reuses the active tab, that's what I'd like to avoid, if possible with middle click.\n"
      },
      {
        "user": "bpasero",
        "created_at": "2016-10-26T11:28:56Z",
        "body": "@isvaljek right, you know that you can configure this via `\"workbench.editor.enablePreview\": false`\n"
      },
      {
        "user": "nine-2-five",
        "created_at": "2016-10-26T13:12:22Z",
        "body": "didm't know that, thanks, and sorry for the noise\n"
      },
      {
        "user": "bpasero",
        "created_at": "2016-10-26T14:14:01Z",
        "body": "I still think we should do something on middle mouse, even if we just open a file. Currently we seem to do nothing.\n"
      },
      {
        "user": "bpasero",
        "created_at": "2016-10-28T15:00:06Z",
        "body": "This actually applies to all our trees, not just the explorer. I think we should be consistent and support this for any tree. I like the idea of pinning the file when opening like that. This is something where contributors could chime in for a PR 👍 \n"
      },
      {
        "user": "hun1ahpu",
        "created_at": "2016-12-11T21:57:22Z",
        "body": "@bpasero I would like to work on this issue.\r\n\r\nAs I am new to the project would appreciate any help. Here are some questions to start with:\r\n- I've noticed that Search and Changes viewlets use 'selection' event instead of 'click','mousedown' events used by Debug, Explorer to open editor. Is it intented choice or we should try to be consistent across all the Trees?\r\n- I would expect Expand/Collapse to still happen on middle mouse click. What do you think?\r\n- Extensions seems to not support pin at all. Don't know if it's only on my version/environment. Opened an issue #17048 \r\n- I've seen a comment in treeDefaults.ts where we do not handle middle button event: \"Give contents of the item a chance to handle this (e.g. open link in new tab)\". I wonder if it's still a valid comment.\r\n- I'm on Windows and i'm wondering if we expect the same behavior on Mac or we should have some Mac-specific treatment of middle button (Command button or smth?)\r\n\r\nThanks."
      },
      {
        "user": "bpasero",
        "created_at": "2016-12-12T06:00:29Z",
        "body": "> - I've noticed that Search and Changes viewlets use 'selection' event instead of 'click','mousedown' events used by Debug, Explorer to open editor. Is it intented choice or we should try to be consistent across all the Trees?\r\n\r\nI think middle-click should be translated into a selection event from the tree so that down stream components do not have to do anything special. I also think middle click should not opened pinned, but just normal.\r\n\r\n> - I would expect Expand/Collapse to still happen on middle mouse click. What do you think?\r\n\r\n👍 \r\n\r\n> - Extensions seems to not support pin at all. Don't know if it's only on my version/environment. Opened an issue #10748\r\n\r\nCan you explain?\r\n\r\n> - I've seen a comment in treeDefaults.ts where we do not handle middle button event: \"Give contents of the item a chance to handle this (e.g. open link in new tab)\". I wonder if it's still a valid comment.\r\n\r\nI would try to convert it to a selection event and see how that behaves.\r\n\r\n> - I'm on Windows and i'm wondering if we expect the same behavior on Mac or we should have some Mac-specific treatment of middle button (Command button or smth?)\r\n\r\nI am fine with making this work the same on all OS. \r\n"
      },
      {
        "user": "hun1ahpu",
        "created_at": "2016-12-12T23:26:33Z",
        "body": "@bpasero : Sorry my comment about Extensions was actually referring #17048. Specifically you cannot open more than one editor tab with extension.\r\n\r\nSubmitter a PR fix for this issue.\r\nThanks."
      }
    ]
  },
  {
    "number": 14314,
    "title": "Exporting and importing of breakpoints",
    "created_at": "2016-10-24T18:54:44Z",
    "closed_at": "2017-05-01T02:47:17Z",
    "labels": [
      "help wanted",
      "*question",
      "feature-request",
      "debug"
    ],
    "url": "https://github.com/microsoft/vscode/issues/14314",
    "body": "Does VSCode support exporting and importing of breakpoints? If so, how to export and import breakpoints.\n- VSCode Version: 1.6.1\n- OS Version: Ubuntu 14.04 LTS\n\nSteps to Reproduce:\n1. \n2. \n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/14314/comments",
    "author": "dhiraj113",
    "comments": [
      {
        "user": "weinand",
        "created_at": "2016-10-24T22:05:55Z",
        "body": "@dhiraj113 export/import of breakpoints is not yet possible.\n"
      },
      {
        "user": "dhiraj113",
        "created_at": "2016-10-26T17:31:59Z",
        "body": "Okay. Would love to see the feature implemented soon. Thanks.\n"
      },
      {
        "user": "weinand",
        "created_at": "2016-10-26T17:33:19Z",
        "body": "Okay, then please submit a pull request. Thanks. ;-)\n"
      }
    ]
  },
  {
    "number": 13706,
    "title": "Disable GPU (--disable-gpu) option missing in command line help",
    "created_at": "2016-10-13T21:43:07Z",
    "closed_at": "2016-10-14T13:56:26Z",
    "labels": [
      "help wanted",
      "feature-request",
      "good first issue"
    ],
    "url": "https://github.com/microsoft/vscode/issues/13706",
    "body": "The command line help (code --help) does not show the option for disabling GPU rendering (--disable-gpu)\n- VSCode Version: 1.6.0\n- OS Version: Debian Jessie\n\nSteps to Reproduce:\n1. Open Terminal\n2. Type \"code --help\"\n\nOutput on my system:\n\n```\nVisual Studio Code 1.6.0\nUsage: code [options] [paths...]\n\nOptions:\n  -d, --diff                  Open a diff editor. Requires to pass two file paths as arguments.\n  -g, --goto                  Open the file at path at the line and column (add :line[:column] to path).\n  --locale <locale>           The locale to use (e.g. en-US or zh-TW).\n  -n, --new-window            Force a new instance of Code.\n  -p, --performance           Start with the 'Developer: Startup Performance' command enabled.\n  -r, --reuse-window          Force opening a file or folder in the last active window.\n  --user-data-dir <dir>       Specifies the directory that user data is kept in, useful when running as root.\n  --verbose                   Print verbose output (implies --wait).\n  -w, --wait                  Wait for the window to be closed before returning.\n  --extensionHomePath         Set the root path for extensions.\n  --list-extensions           List the installed extensions.\n  --install-extension <ext>   Installs an extension.\n  --uninstall-extension <ext> Uninstalls an extension.\n  --disable-extensions        Disable all installed extensions.\n  -v, --version               Print version.\n  -h, --help                  Print usage.\n```\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/13706/comments",
    "author": "jrast",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2016-10-14T09:52:50Z",
        "body": "Care to submit a PR?\n"
      },
      {
        "user": "joaomoreno",
        "created_at": "2016-10-14T13:56:26Z",
        "body": "Fixed by #13760\n"
      }
    ]
  },
  {
    "number": 13506,
    "title": "Option to exclude items from Git branch checkout list",
    "created_at": "2016-10-11T13:19:11Z",
    "closed_at": "2016-12-13T08:47:06Z",
    "labels": [
      "bug",
      "help wanted",
      "git"
    ],
    "url": "https://github.com/microsoft/vscode/issues/13506",
    "body": "- VSCode Version: Version 1.7.0-insider \n- OS Version: 10.12\n\nWhen I click the \"git branch\" item at the left of the status bar, a popup appear with all the branches I might want to switch to, which is expected.\n\nHowever, this menu lists all of our tags first, and we have dozens of tags on remote releases of our app.  It also lists the remote branches of the repo.\n\nI always just want to switch between LOCAL branches I have already tracked.  This is the way the \"git plus\" extension for Atom works.  I find it hard to find the branch I am looking for in the list, even with type-ahead.  \n\nI realize some people may want the current setup, so how about a prefs setting for \"checkout shows local branches only\" or something similar?  Or preference line items to exclude tags and/or remote branches?\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/13506/comments",
    "author": "smlombardi",
    "comments": [
      {
        "user": "Krzysztof-Cieslak",
        "created_at": "2016-11-02T22:23:46Z",
        "body": "Hey, @joaomoreno what would be desirable solution for this? I can take a look at it in some free time\n"
      },
      {
        "user": "joaomoreno",
        "created_at": "2016-11-03T09:02:17Z",
        "body": "@Krzysztof-Cieslak We could introduce a `git.checkout` setting with the values of `all` or `local`.\n"
      },
      {
        "user": "joaomoreno",
        "created_at": "2016-12-13T08:47:06Z",
        "body": "Fixed by #16792"
      }
    ]
  },
  {
    "number": 13053,
    "title": "Maintain cursor position when toggle Open Markdown Preview",
    "created_at": "2016-09-29T23:29:01Z",
    "closed_at": "2017-12-04T23:21:00Z",
    "labels": [
      "help wanted",
      "feature-request",
      "markdown"
    ],
    "url": "https://github.com/microsoft/vscode/issues/13053",
    "body": "Open a markdown file. Have the cursor somewhere. Move it somewhere else with the arrow keys, then press cmd+shift+v to 'open markdown preview'. Press cmd+shift+v again. Now the cursor is in a different place. Similar to the bugs like #11727 I guess.\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/13053/comments",
    "author": "roblourens",
    "comments": [
      {
        "user": "bpasero",
        "created_at": "2016-09-30T06:04:22Z",
        "body": "Part of the problem is that imho the markdown extension executes the \"Go back in history\" command when toggling from the preview back to its source file which in some cases can go wrong badly if another file was opened meanwhile ( @kieferrm to confirm if that is still true).\n"
      },
      {
        "user": "mjbvz",
        "created_at": "2017-12-04T23:21:00Z",
        "body": "We no longer enable the `open markdown preview` command when in the preview, so I don't think this scenario can be hit anymore"
      }
    ]
  },
  {
    "number": 12817,
    "title": "Update: Support disabling auto updates",
    "created_at": "2016-09-27T19:20:33Z",
    "closed_at": "2019-01-04T15:48:20Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "install-update",
      "good first issue",
      "verification-needed"
    ],
    "url": "https://github.com/microsoft/vscode/issues/12817",
    "body": "- VSCode Version: 1.5.3\n- OS Version: macOS Sierra 10.12\n\nSteps to Reproduce:\n1. in \"User Settings\" set parameter \"update.channel\" to \"none\"\n2. restart VSCode\n3. check main menu \"Code\", item listed as \"Check For Update\" will be hidden\n\nIt seems that when you opt out of VS Code auto-updates there is no ability to check for updates manually, and I think there should be ability to check for updates manually.\n\nDo not know is it bug or \"feature\"😏\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/12817/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2016-09-28T07:27:44Z",
        "body": "As designed\n"
      },
      {
        "user": "joaomoreno",
        "created_at": "2018-10-12T11:59:38Z",
        "body": "@fzzr- Correctly points out that users want to disable auto updates, but keep the update functionality manual.\r\n\r\nLet's have it behind a setting."
      },
      {
        "user": "dhulwells",
        "created_at": "2018-12-07T18:09:34Z",
        "body": "Is this issue still open? If so, I'll take it... "
      }
    ]
  },
  {
    "number": 12333,
    "title": "Add command id for exiting VS Code to bind shortcut to",
    "created_at": "2016-09-20T17:41:18Z",
    "closed_at": "2017-01-04T14:11:12Z",
    "labels": [
      "help wanted",
      "feature-request",
      "keybindings"
    ],
    "url": "https://github.com/microsoft/vscode/issues/12333",
    "body": "- VSCode Version: 1.5.2\n- OS Version: Ubuntu 16.04\n\nSteps to Reproduce:\n1. I have two windows open. If I click File/Exit, both windows are closed instantly. If I use alt+f4, only one is closed. Why do I need to have them both closed simultaneously and VS Code exiting? So that when I open VS Code again, both windows will be reloaded.\n2. \n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/12333/comments",
    "author": "ghost",
    "comments": [
      {
        "user": "michaeljota",
        "created_at": "2016-09-20T17:50:53Z",
        "body": "I think the title is mislabel, but I can reproduce this in Windows as well.\n\nIs this a bug or a feature? \n\nAlso: On Windows only open one window. \n"
      },
      {
        "user": "ghost",
        "created_at": "2016-09-20T18:00:52Z",
        "body": "It's a feature request. I usually have two windows open and the only way I can have them both reloaded when I reopen VS Code is to click File/Exit (of course, I made the necessary adjustments in ~/.config/Code/User/settings.json).\n"
      },
      {
        "user": "michaeljota",
        "created_at": "2016-09-20T18:10:01Z",
        "body": "Oh! I misunderstood then. Ok. It's a weird behavior anyway.\n"
      },
      {
        "user": "bpasero",
        "created_at": "2017-01-04T14:11:12Z",
        "body": "Since 1.8.x we have the `workbench.action.quit` command that a key can be bound to."
      }
    ]
  },
  {
    "number": 12043,
    "title": "Crash prompt to reload window does not work in all cases",
    "created_at": "2016-09-14T19:26:26Z",
    "closed_at": "2017-05-15T05:05:51Z",
    "labels": [
      "help wanted",
      "upstream"
    ],
    "url": "https://github.com/microsoft/vscode/issues/12043",
    "body": "- VSCode Version: 1.5.2\n- OS Version: Windows 10 (AU)\n\nSteps to Reproduce:\n1. Hangs VS somewho (see #12042 for example)\n2. Wait until the promp window ask you what to do. \n3. Select \"restart\" editor.\n\nThe editor doesn't restart itself. Have to close it manually, and open again. \n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/12043/comments",
    "author": "michaeljota",
    "comments": [
      {
        "user": "bpasero",
        "created_at": "2016-09-15T04:51:23Z",
        "body": "I noticed this too but it seems to depend on what kind of crash you are ending up with.\n"
      },
      {
        "user": "michaeljota",
        "created_at": "2016-11-22T12:57:50Z",
        "body": "It appears to be fixed in lastes insider. At least it did reload the windows. I don't know if, as you said, it's still reproducible with other scenarios. "
      }
    ]
  },
  {
    "number": 10970,
    "title": "Windows: possible to have drag overlay stick around",
    "created_at": "2016-08-25T18:54:49Z",
    "closed_at": "2017-05-15T05:05:31Z",
    "labels": [
      "bug",
      "help wanted"
    ],
    "url": "https://github.com/microsoft/vscode/issues/10970",
    "body": "- VSCode \n  Version 1.5.0-insider\n  Commit 435df14a684df718c5ec523f9d674e63d1662c37\n  Date 2016-08-22T08:10:56.602Z\n  Shell 0.37.6\n  Renderer 49.0.2623.75\n  Node 5.10.0\n- OS Version: Windows 7\n\nSteps to Reproduce:\n1. Open Code to a folder with lots of folders and files\n2. Open 2 explorer windows and place them in front of Code leaving the tree view visible between them\n3. Click and drag a folder between the 2 explorer windows and over the tree view.\n4. Drag back and fourth fairly quickly watching Code gray out and return to normal.\n5. Watch for it to not restore back to normal.\n6. Bring Code into focus.\n7. See that you cannot interact with the Code editor window.\n8. The File Menu bar does continue to work.\n9. Drag a file or folder back over Code to restore functionality.\n\nSometimes it will reproduce very nicely and other times hardly at all. I think the folder/file structure in the tree view makes a difference. I can only do this with folders and not files and the motion has to be fairly fast. As if it misses the mouse leaving the window event or something like that.\n\n[OK]\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/10970/comments",
    "author": "KevinMarquette",
    "comments": [
      {
        "user": "bpasero",
        "created_at": "2016-08-26T10:17:49Z",
        "body": "Thanks much for the steps, I was waiting for steps to reproduce. Unfortunately I am not able to find a good fix to prevent the gray from showing up in this scenario but I pushed a fix so that the workbench removes the overlay when the mouse moves into the workbench. This fixes the issue with having a non-functional workbench around.\n"
      },
      {
        "user": "bpasero",
        "created_at": "2017-05-15T05:05:31Z",
        "body": "I cannot reproduce anymore."
      }
    ]
  },
  {
    "number": 10268,
    "title": "[request] allow ignoring git untracked files at the git icon summary count",
    "created_at": "2016-08-07T13:04:58Z",
    "closed_at": "2016-08-15T12:49:10Z",
    "labels": [
      "help wanted",
      "feature-request",
      "git"
    ],
    "url": "https://github.com/microsoft/vscode/issues/10268",
    "body": "- VSCode Version: 1.4\n- OS Version: All (Windows 8.1)\n\nSteps to Reproduce:\n1. At an existing git directory/repository which is opened in VSCode, which has no modified files, create a new file (which is not ignored at `.gitignore`) without staging it.\n\nCurrent behavior: At the left side, the git modifications icon will have a (1) number to indicate one change to the repository.\n\nPreferred new behavior as an option: don't count untracked files for this summary icon.\n\nSometimes there are legitimate reasons to have untracked files which are not part of `.gitignore` within a git dir. Maybe it's a temporary test, or a todo list, etc - it really depends on personal workflows.\n\nOn such cases, and especially if there are few such untracked files, the icon summary number becomes much less useful because it's always displaying some number, and it makes it quite harder, or even impractical, to glance and infer how many actual changes there are to files which _are_ tracked.\n\nObviously, depending on workflow, some may also prefer that the summary number does count untracked files.\n\nTherefore, I suggest to add an option to control if they're counted or not, and up to you if you want to generalize it further to control counting of other kinds of modifications.\n\nAs an example of an unrelated summary which ignores untracked files by default: git's own `git-prompt` (at the `contrib` dir) will only have the prompt \"modified\" indicator for untracked files if the user specifically set  `GIT_PS1_SHOWUNTRACKEDFILES=1`, but by default it will ignore untracked files.\n\nI think it would be useful to allow such behavior for VSCode's summary icon too.\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/10268/comments",
    "author": "avih",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2016-08-08T12:06:03Z",
        "body": "A setting is fine by me. Want to contribute a PR?\n"
      },
      {
        "user": "avih",
        "created_at": "2016-08-08T14:44:35Z",
        "body": "I don't have enough time now to familiarize myself with VSCode development. So if you feel it's at a reasonable place at the project's TODO list then I'd leave it to you (or anyone else who wants to have a go).\n\nOn the other hand, if it's a low priority and nobody handles it for weeks, then maybe at some stage I'd give it a go myself.\n"
      },
      {
        "user": "FabianLauer",
        "created_at": "2016-08-11T18:01:50Z",
        "body": "@avih @joaomoreno Mind if I give this a try?\n"
      },
      {
        "user": "avih",
        "created_at": "2016-08-11T19:25:53Z",
        "body": "Enjoy :)\n"
      },
      {
        "user": "FabianLauer",
        "created_at": "2016-08-11T19:57:11Z",
        "body": "I will, thanks 😉 \n"
      },
      {
        "user": "avih",
        "created_at": "2016-08-15T11:44:42Z",
        "body": "With the latest insiders build, I can confirm that using `\"git.countBadge\": \"tracked\",` works as expected (I guess the name/behavior was improved after the merge. I like it).\n\nThis issue can be closed as far as I'm concerned. Thanks!\n\nI know it should probably be a new issue or issues, but it's a similar subject so I'll post it here first.\n\nI think the git \"status\"(?) string at the bottom left at the status bar could also benefit from similar control. Possibly even more control since it allows more than just a number. Here, too, I'd think `git-prompt` and its behavior and configuration variables could serve as a useful example. It looks like it already offers a fixed simple version of it, though here too it seems to unconditionally count untracked files as changes (I'm assuming that's what the `*` is).\n\nIt could probably also be useful to have a tooltip which could contain info such as \"2 commit behind, 3 commits ahead of upstream, 2 staged files/deletions, 3 unstaged modified files, [5 untracked files]\". Maybe the same info could also be added to the git badge tootip.\n\nFWIW, with `git-prompt` it could (depending on config) be displayed as `my-branch *+ u+3-2` (if HEAD is the same as upstream it would be `u=`)\n\nI'm not sure to what extent you want to allow such control, so let me know which of those should be filed as a new issue, if at all.\n"
      },
      {
        "user": "joaomoreno",
        "created_at": "2016-08-15T12:50:02Z",
        "body": "Not sure... would you configure it if given the chance?\n"
      },
      {
        "user": "avih",
        "created_at": "2016-08-15T14:36:23Z",
        "body": "I probably would. I have configured `git-prompt` and find it very useful when working with git from the command line.\n\nBut that's me, and I realize different people have different priorities. Most would just use whatever defaults are provided. That's why I asked first if you want an issue filed for it.\n\nWhat I can suggest, if others want to check if they find this kind of summary useful, is to enable `git-prompt` in their bash prompt, by adding this to `~/.bashrc` (this is pretty much the default prompt of git for windows, with the added git summary configured to my liking):\n\n``` bash\nGIT_PS1_SHOWDIRTYSTATE=1\nGIT_PS1_SHOWUPSTREAM=\"verbose\"\nGIT_PS1_SHOWCOLORHINTS=1\n\n# These are also supported:\n#GIT_PS1_SHOWSTASHSTATE=1\n#GIT_PS1_SHOWUNTRACKEDFILES=1\n\n# this might be elsewhere on other systems, or possibly not even required\nsource /mingw64/share/git/completion/git-prompt.sh\n\nPROMPT_COMMAND='__git_ps1 \"\\[\\033]0;$TITLEPREFIX:${PWD//[^[:ascii:]]/?}\\007\\]\\n\\[\\033[32m\\]\\u@\\h \\[\\033[35m\\]$MSYSTEM \\[\\033[33m\\]\\w\\[\\033[36m\\]\\033[m\" \"\\[\\033[0m\\]\\n$ \"'\n```\n\nAnd judge for themselves.\n"
      },
      {
        "user": "paulirish",
        "created_at": "2016-09-14T03:30:15Z",
        "body": "Thanks for this! `\"git.countBadge\": \"tracked\",` is great. :D \n"
      }
    ]
  },
  {
    "number": 10182,
    "title": "Support character based diff",
    "created_at": "2016-08-05T10:15:06Z",
    "closed_at": "2018-09-17T14:51:55Z",
    "labels": [
      "help wanted",
      "feature-request",
      "git"
    ],
    "url": "https://github.com/microsoft/vscode/issues/10182",
    "body": "- VSCode Version:1.4.0\n- OS Version:ubuntu 16.4\n\nvscode colors the changed deleted or edited lines but it could be great then you click on those colors to see actually what happened to that line \n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/10182/comments",
    "author": "ta3pks",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2018-09-17T14:51:55Z",
        "body": "This has been implemented!"
      }
    ]
  },
  {
    "number": 9657,
    "title": "Markdown extension enhancement (update on css change)",
    "created_at": "2016-07-23T22:28:12Z",
    "closed_at": "2017-08-08T01:19:38Z",
    "labels": [
      "help wanted",
      "feature-request",
      "markdown",
      "*duplicate"
    ],
    "url": "https://github.com/microsoft/vscode/issues/9657",
    "body": "In addition to rerendering the markdown preview of a markdown file when the contents of the document change, it should also rerender when any of the associated styles (from `\"markdown.styles\"`) are modified. If I get time, I will attempt to take a stab at this.\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/9657/comments",
    "author": "stevensona",
    "comments": [
      {
        "user": "stevensona",
        "created_at": "2016-07-24T23:48:22Z",
        "body": "Because the markdown preview is an HTML document that is referencing the stylesheet, it really only makes sense to update the view when the CSS file is saved, not edited.\n"
      },
      {
        "user": "mjbvz",
        "created_at": "2017-08-08T01:19:38Z",
        "body": "Rolling this into #32111, which tracks adding a refresh command for the markdown preview. "
      }
    ]
  },
  {
    "number": 9387,
    "title": "HTML tag matching in php (template) files",
    "created_at": "2016-07-16T12:08:39Z",
    "closed_at": "2017-05-06T01:39:27Z",
    "labels": [
      "help wanted",
      "feature-request",
      "php",
      "*duplicate"
    ],
    "url": "https://github.com/microsoft/vscode/issues/9387",
    "body": "I do not really know if this is a bug or a missing feature but the one thing that keeps me from switching to VS Code is html tag matching in php/template files such as laravel blade files. Please add this feature or fix it if this is a bug, thank you!\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/9387/comments",
    "author": "hblaise",
    "comments": [
      {
        "user": "hblaise",
        "created_at": "2016-09-09T14:05:46Z",
        "body": "Please, if someone could help with this issue that would be greatly appreciated, this is literally the only thing preventing me from using vscode :s\n"
      },
      {
        "user": "roblourens",
        "created_at": "2017-05-06T01:39:27Z",
        "body": "#2915"
      },
      {
        "user": "ssagga",
        "created_at": "2017-06-27T23:09:16Z",
        "body": "A work around I follow is manually switch the language mode at the bottom right toolbar to HTML when HTML tag matching is needed"
      }
    ]
  },
  {
    "number": 7989,
    "title": "Git integration fails to see merged file as staged if I reject all incoming edits",
    "created_at": "2016-06-22T09:49:27Z",
    "closed_at": "2020-11-05T10:44:18Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "git",
      "insiders-released"
    ],
    "url": "https://github.com/microsoft/vscode/issues/7989",
    "body": "VS Code Version 1.2.1\nCommit fe7f407b95b7f78405846188259504b34ef72761\nDate 2016-06-14T13:00:22.146Z\nShell 0.37.6\nRenderer 49.0.2623.75\nNode 5.10.0\nWindows 10 Enterprise x64, latest non-Insider\ngit version 2.9.0.windows.1\n\nDescription: during a Git merge process, VSCode can sometimes show no pending changes and refuse to let me commit, while command-line Git believes a merge is in progress and lets me commit. This occurs if the changed file contains no changes (after merge) that came from the commit that I am merging into my local state.\n\nSteps to Reproduce:\n1. Create Git repository (e.g. on GitHub).\n2. Clone to working folder A.\n3. In working folder A, commit a file with some arbitrary text. Commit and sync\n4. Clone to working folder B.\n5. In working folder B, change some part of the file. Commit and sync.\n6. In working folder A, change some part of the file, conflicting with previous. Commit and sync.\n\nThis will result in a merge conflict due to the change from working folder B getting pulled.\n\nResolve the conflict by removing all changes pulled form working folder B - the file should be the same as the committed state that existed in working folder A. Stage the file to mark the file as resolved.\n\nExpected result: file is staged and VSCode lets you commit the merge.\n\nActual result: file disappears from Git tab and VSCode says cannot commit as there are no pending changes.\n\n`git commit` from the command line works fine to finish the merge, only VSCode refuses to cooperate here.\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/7989/comments",
    "author": "sandersaares",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2016-06-22T20:56:13Z",
        "body": "This is a bit unfortunate and a not so common real world case. It happens when:\n- There are no changes other than conflicting changes\n- The conflict resolution for **all** changes is to take `A` version\n\nThe command line `git` will create an _empty_ commit, since there is nothing to be done on the merge commit. Code will just not let you do a commit since it doesn't support empty commits.\n\nWe should maybe make Code aware that a merge is in progress, thus allowing the completion of the merge to follow.\n"
      },
      {
        "user": "joaomoreno",
        "created_at": "2016-07-06T10:38:17Z",
        "body": "Related to #6403. Fix could be done regarding both.\n"
      },
      {
        "user": "yaroslavsadin",
        "created_at": "2019-07-05T00:41:12Z",
        "body": "Any update here?"
      },
      {
        "user": "quhsi",
        "created_at": "2020-08-24T09:31:03Z",
        "body": "#88034 is probably a duplicate."
      },
      {
        "user": "LitKnd",
        "created_at": "2020-11-04T16:57:19Z",
        "body": "I also recently came across this. I think it's not necessarily a rare thing for beginners who are experimenting with a simple repo and simple conflicts. It is very confusing with the way this just disappears in the UI even though the merge isn't complete. \r\n\r\nA fix would be very helpful."
      },
      {
        "user": "joaomoreno",
        "created_at": "2020-11-05T10:44:02Z",
        "body": "Fixed by adding an action to `Create Empty Commit` to the notification"
      },
      {
        "user": "sbatten",
        "created_at": "2020-12-03T22:46:59Z",
        "body": "@joaomoreno this totally works and is clearly a corner case, but its not the most intuitive notification. i wish I could see that I did something with the merge conflicts and create empty commit changes to something like \"ignore all incoming merge conflicts\". i imagine anything more custom is not trivial so I do not reopen this."
      }
    ]
  },
  {
    "number": 7984,
    "title": "Hover obscures previous code",
    "created_at": "2016-06-22T09:28:46Z",
    "closed_at": "2017-11-23T14:48:12Z",
    "labels": [
      "bug",
      "help wanted",
      "suggest"
    ],
    "url": "https://github.com/microsoft/vscode/issues/7984",
    "body": "- VSCode Version: 1.2.1\n- OS Version: Windows 10\n\nSteps to Reproduce: \n1. write function name followed by open paren `(` character\n\nWhen typing in the parameters to a function, I want to see the code I just wrote, but the automatic Parameter Hinting pop-up box often covers up the previous lines, sometimes hiding up to the previous 4 lines of code! This can be especially annoying when the parameters I am typing span multiple lines.\nTo fix this problem I have been adding the following custom CSS style to the VSCode Developer Tools:\n`.editor-widget:hover { opacity: .15; }` \nHowever, it would be nice if there was a way that I could disable the Parameter Hinting so I don't have to press `ESC` each time I am typing parameters and want to get rid of the hinting box. A different fix to this problem would be if the parameter hinting was out of the way, by being below the current line of code for example.\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/7984/comments",
    "author": "ozyman42",
    "comments": [
      {
        "user": "dbaeumer",
        "created_at": "2016-06-22T20:16:28Z",
        "body": "May be @joaomoreno as well.\n"
      },
      {
        "user": "joaomoreno",
        "created_at": "2016-07-06T10:35:42Z",
        "body": "There is a setting to disable it altogether: `editor.parameterHints`. It's not ideal but does address the issue.\n\nWe can also make it that if you hold a key, eg <kbd>Shift</kbd>, we'd just fade both parameter hints and intellisense away and bring them back once the key is released.\n"
      },
      {
        "user": "ozyman42",
        "created_at": "2016-07-06T16:50:25Z",
        "body": "The <kbd>Shift</kbd> solution could work, but might that cause people to accidentally disable the parameter hinting if they are just trying to capitalize something?\n"
      },
      {
        "user": "joaomoreno",
        "created_at": "2016-07-07T07:13:00Z",
        "body": "We'd simply fade it, not hide it. We can also introduce a `500ms` delay on that, would help in reducing flickering.\n"
      },
      {
        "user": "ozyman42",
        "created_at": "2016-07-08T00:44:29Z",
        "body": "Could the box remained faded as I type in more parameters? One of the biggest annoyances about the way the parameter hinting currently works is that when I get rid of it by pressing <kbd>Esc</kbd> then move on to the next parameter by pressing <kbd>,</kbd>,  the box then reappears, meaning that if I am calling a function with some 5+ parameters I need to press <kbd>Esc</kbd> 5+ times, once between each param.\n"
      },
      {
        "user": "joaomoreno",
        "created_at": "2016-07-08T07:56:30Z",
        "body": "When would it fade back in?\n"
      },
      {
        "user": "ozyman42",
        "created_at": "2016-07-08T16:42:45Z",
        "body": "By pressing a button to fade it back in. So for example if <kbd>Shift</kbd> is the key for this, holding down left shift could fade it out indefinitely, and holding down right shift could fade it back in indefinitely. Alternatively, a different key such as <kbd>Alt</kbd> could be used for this as well.\n"
      },
      {
        "user": "ghost",
        "created_at": "2016-08-15T20:42:52Z",
        "body": "This is especially problematic when using extensions that hijack the Esc key (the up and coming vim plugin for instance), where there is no way to hide the pop-up without resorting to the mouse.\n\nJust adding my 2p.\n"
      },
      {
        "user": "joaomoreno",
        "created_at": "2016-08-16T05:21:12Z",
        "body": "Thanks for the insights, @oheard. That is bad, if true. But not the same issue, is it? If vim eats up the <kbd>Escape</kbd> key, it will block the widget from closing altogether. This issue talks about being able to look at the code that's behind the widget, without closing it.\n"
      },
      {
        "user": "bobmagicii",
        "created_at": "2016-08-23T23:47:17Z",
        "body": "opacity won't be enough and just be as annoying. it needs to be repositioned.\n"
      },
      {
        "user": "jaredly",
        "created_at": "2017-01-20T23:44:16Z",
        "body": "I would much rather it be offset horizontally by, for example, 300px, or stuck to the right of the editor. Also, I'd like it to stay in one place, vertically, ideally with the bottom of the box flush with the top of the line of the function call.\r\nBecause now it is just about unusable."
      },
      {
        "user": "bobmagicii",
        "created_at": "2017-01-24T20:03:37Z",
        "body": "for that matter, in response to @jaredly, we can pretend its a system tray notification and cram it into a corner of the window always that could be a nice optional choice.\r\n\r\nmaybe they can provide a json option that is just like \"give us a object that looks like css\" do wtf you want with it. they'd have to add a css feature that doesnt exist: `position: cursor`, but fixed, relative, and absolute could still be things. or relative could always mean relative to the cursor."
      },
      {
        "user": "offero",
        "created_at": "2017-03-20T20:34:06Z",
        "body": "It would also be nice to have some transparency for it. I would also prefer to be able to exit out of it somehow, which I can't seem to figure out how to do."
      },
      {
        "user": "ozyman42",
        "created_at": "2017-03-20T20:40:28Z",
        "body": "@offero Try pressing the escape key"
      },
      {
        "user": "offero",
        "created_at": "2017-03-20T23:33:37Z",
        "body": "@AlexLeung I did, but it didn't work. It was probably the vim plugin interfering."
      },
      {
        "user": "joaomoreno",
        "created_at": "2017-11-23T14:48:12Z",
        "body": "To keep the number of issues in our inbox on a manageable level, we're closing issues that have been on the backlog for a long time but haven't gained traction: We look at the number of votes the issue has received and the number of duplicates issues filed.\r\n\r\nThanks for your understanding. Happy coding!"
      }
    ]
  },
  {
    "number": 7703,
    "title": "[loc][Query][DevDiv] Please clarify \"running\"",
    "created_at": "2016-06-15T08:59:05Z",
    "closed_at": "2016-06-16T10:53:45Z",
    "labels": [
      "help wanted",
      "verified"
    ],
    "url": "https://github.com/microsoft/vscode/issues/7703",
    "body": "Hi,w e have a query from our translator and I was hoping you could help. Thanks!\n\nsource:\nrunning\n\nFile Name:\nsrc\\vs\\workbench\\parts\\debug\\browser\\debugViewer.nls.resx\n\nResource ID:\n\".resx\", 0; \"running\"\n\nQuery:\nDoes it indicate progress or state? Cristina Carrasco   6/9/2016 9:16:18 AM\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/7703/comments",
    "author": "mkyjakova",
    "comments": [
      {
        "user": "isidorn",
        "created_at": "2016-06-16T10:54:16Z",
        "body": "'running' indicates state in this case - I have added a comment to the nls.call to make this clearer in the future\n"
      }
    ]
  },
  {
    "number": 7701,
    "title": "[loc][Query][DevDiv] Translatability of Code",
    "created_at": "2016-06-15T08:45:45Z",
    "closed_at": "2016-06-17T08:42:20Z",
    "labels": [
      "help wanted"
    ],
    "url": "https://github.com/microsoft/vscode/issues/7701",
    "body": "Hi, we have a question from our translator. Can you help please?\n\nSource:\nPlease restart Code before reinstalling {0}.\n\nFile Name:\nsrc\\vs\\platform\\extensionManagement\\node\\extensionManagementService.nls.resx\n\nResource ID:\n\".resx\", 0; \"restartCode\"\n\nQuery:\nIs Code translatable?   Cristina Carrasco   6/9/2016 9:18:45 AM\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/7701/comments",
    "author": "mkyjakova",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2016-06-16T08:34:06Z",
        "body": "No, it's not. Should we extract it?\n"
      },
      {
        "user": "mkyjakova",
        "created_at": "2016-06-17T08:39:05Z",
        "body": "Hi, thanks for your reply. I think it's fine for the moment. I let the translators know.\n"
      }
    ]
  },
  {
    "number": 6637,
    "title": "--reuse-window and OS X fullscreen window switching",
    "created_at": "2016-05-22T19:23:30Z",
    "closed_at": "2017-01-23T19:44:56Z",
    "labels": [
      "help wanted",
      "upstream",
      "*not-reproducible"
    ],
    "url": "https://github.com/microsoft/vscode/issues/6637",
    "body": "- VSCode Version: 1.1.1\n- OS Version: OS X 10.11.5 (15F34)\n\nSteps to Reproduce:\n1. Open VSCode and Terminal\n2. Make them both fullscreen (either split screen or same screen)\n3. In the fullscreen Terminal, run `code --reuse-window`\n4. Observe that OS X snaps you back to the original Desktop that you opened the two apps in, then back to VSCode.\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/6637/comments",
    "author": "mwillsey",
    "comments": [
      {
        "user": "bpasero",
        "created_at": "2016-05-23T04:59:32Z",
        "body": "I can reproduce. Weird!\n"
      },
      {
        "user": "bpasero",
        "created_at": "2016-05-24T10:07:31Z",
        "body": "My feeling is that this happens because the main process of VS Code is associated with the first desktop and the second window talks to the main process to bring up the window. I am not sure how to change this.\n"
      },
      {
        "user": "bpasero",
        "created_at": "2017-01-23T13:00:29Z",
        "body": "@mwillsey I think I cannot reproduce this anymore with 1.8. Can you try?"
      },
      {
        "user": "mwillsey",
        "created_at": "2017-01-23T19:44:56Z",
        "body": "@bpasero Me neither. I guess it got fixed!"
      }
    ]
  },
  {
    "number": 6403,
    "title": "Git: When resolving a merge conflict allow accepting the default commit message",
    "created_at": "2016-05-16T20:43:01Z",
    "closed_at": "2019-10-15T15:47:28Z",
    "labels": [
      "help wanted",
      "feature-request",
      "verified",
      "git",
      "verification-needed"
    ],
    "url": "https://github.com/microsoft/vscode/issues/6403",
    "body": "- VSCode Version: 1.1.1\n- OS Version: OS X\n\nSteps to Reproduce:\n1. get into a merge conflict \n2. Try accepting Git's default message. It's equal to `git commit --no-edit`\n3. There is no way to do that! \n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/6403/comments",
    "author": "mohsen1",
    "comments": [
      {
        "user": "suan",
        "created_at": "2017-06-01T22:14:05Z",
        "body": "Will mention that it's also equivalent to `git commit` and saving the default message that shows up in your editor - hence a very common workflow"
      },
      {
        "user": "borekb",
        "created_at": "2018-10-05T08:52:25Z",
        "body": "My workaround is to invoke `git commit` from a terminal. Maybe if the commit message field is empty, VSCode could just call `git commit` as well and leave it up to user's configuration what happens (in my case, it would open a text editor from my `EDITOR` system variable, which is fine)."
      },
      {
        "user": "cbryan-risklens",
        "created_at": "2019-06-12T19:48:58Z",
        "body": "Has the pull request #66522 been reviewed yet?  Can it be pulled in?"
      },
      {
        "user": "joaomoreno",
        "created_at": "2019-10-28T15:14:13Z",
        "body": "**Verification:**\r\n\r\nWhen having a merge commit, VS Code should now automatically populate the input box with the default git merge commit message, so the user can just accept it."
      }
    ]
  },
  {
    "number": 5862,
    "title": "Git integration crashes once you upload a big file",
    "created_at": "2016-04-26T20:03:13Z",
    "closed_at": "2016-08-29T08:41:34Z",
    "labels": [
      "help wanted",
      "git"
    ],
    "url": "https://github.com/microsoft/vscode/issues/5862",
    "body": "- VSCode Version: 1.0.0\n- OS Version: 10.11.4\n\nSteps to Reproduce:\n1. Commit and push a big file like a psd (around 40 megabytes).\n2. Git will push it but it will stay like constantly uploading the file when already has finished and will not refresh new changes to files to make others commits or push.\n3. You will have to reset VSC in order to make the Git Integration works again.\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/5862/comments",
    "author": "lndgalante",
    "comments": [
      {
        "user": "skl131313",
        "created_at": "2016-08-29T08:33:40Z",
        "body": "Can't reproduce with current version of VSCode (1.4.0), tried pushing a ~100 MB random file with and without git-lfs support. Was able to do both.\n"
      },
      {
        "user": "joaomoreno",
        "created_at": "2016-08-29T08:41:34Z",
        "body": "Thanks for letting us know!\n\n@Fenwil Let us know if this is still a problem.\n"
      }
    ]
  },
  {
    "number": 4101,
    "title": "[html] Why editor.action.smartSelect is not working in html file?",
    "created_at": "2016-03-14T08:06:27Z",
    "closed_at": "2016-05-10T19:56:09Z",
    "labels": [
      "help wanted",
      "html",
      "good first issue"
    ],
    "url": "https://github.com/microsoft/vscode/issues/4101",
    "body": "I can not use `editor.action.smartSelect.grow` and `editor.action.smartSelect.shrink` functions to working on html file. I don't think the develop team have any reason to disable them on html file. It's should be working on any file!! Any body know why?\nPlease fix it!\nThanks!\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/4101/comments",
    "author": "pokakhoaitay",
    "comments": [
      {
        "user": "vsaroopchand",
        "created_at": "2016-03-17T22:33:46Z",
        "body": "I tracked this down to line 58 in editor\\contrib\\smartSelect\\common\\smartSelect.ts\nWhen the code uses model.getModel().logicalSelectionSupport it does not work\n    var selectionSupport = model.getMode().logicalSelectionSupport || this._tokenSelectionSupport;\n// but works with _tokenSelectionSupport\nvar selectionSupport = this._tokenSelectionSupport;\n\nI just don’t know enough about the VS Code APIs to know if this is the right fix\n"
      },
      {
        "user": "hinogi",
        "created_at": "2016-03-19T13:17:39Z",
        "body": "I think the problem lies somewhere in the languages\\html\\common\\htmlWorker.ts. For me it seems as if the getRangesToPosition implementation doesn't return the appropriate Position but returns undefined. I do not know how to debug the worker thoug :( but it really aint't \"effort easy\" I think.\n"
      },
      {
        "user": "vsaroopchand",
        "created_at": "2016-03-21T16:54:35Z",
        "body": "Agree, did some more digging and getRangesToPosition in (\\languages\\html\\common\\html.ts) essentially an empty implementation. \n\nTokenSelectionSupport (contrib\\smartSelect\\common\\tokenSelectionSupport.ts) has an implementation that is used by all other languages. \n\nThe empty implementation in html.ts is being used because in html.ts, line 311 we have \nthis.logicalSelectionSupport = this;\n\nwhich causes the below line in editor\\contrib\\smartSelect\\common\\smartSelect.ts to use the empty implementation which returns undefined as you noted\n\nvar selectionSupport = model.getMode().logicalSelectionSupport || this._tokenSelectionSupport;\n\nSeems this needs some refactoring - perhaps check if <Language>Mode implements ILogicalSelectionSupport before attempting to use it.\n"
      },
      {
        "user": "jrieken",
        "created_at": "2016-03-21T17:48:41Z",
        "body": "@aeschli Any reason the html implementation is a noop?\n"
      }
    ]
  },
  {
    "number": 3613,
    "title": "Markdown styles: Can't use style sheet that contains \"#\" in the local path",
    "created_at": "2016-03-02T07:09:02Z",
    "closed_at": "2017-04-11T22:16:59Z",
    "labels": [
      "bug",
      "help wanted",
      "verified",
      "markdown"
    ],
    "url": "https://github.com/microsoft/vscode/issues/3613",
    "body": "Can't use style sheet that contains \"#\" in the local path.\n\nOK\n\n```\n{\n    \"markdown.styles\": [\"file://C:/CSharp/user.css\"]\n}\n```\n\nNG (net::ERR_FILE_NOT_FOUND)\n\n```\n{\n    \"markdown.styles\": [\"file://C:/C#/user.css\"]\n}\n```\n\nOK\n\n```\n{\n    \"markdown.styles\": [\"file://C:/C%23/user.css\"]\n}\n```\n\nIs this by design or a bug?\n\n---\n\nVersion 0.10.8\nCommit db71ac615ddf9f33b133ff2536f5d33a77d4774e\nDate 2016-02-05T10:10:11.194Z\nShell 0.35.6\nRenderer 45.0.2454.85\nNode 4.1.1\nWIndows 7\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/3613/comments",
    "author": "kurehajime",
    "comments": [
      {
        "user": "bpasero",
        "created_at": "2016-03-02T11:36:29Z",
        "body": "Might be a bug when we inject the stylesheet into the markdown preview.\n"
      },
      {
        "user": "bpasero",
        "created_at": "2016-03-02T11:40:02Z",
        "body": "@kurehajime does it work with \"C:\\C#\\user.css\"\n"
      },
      {
        "user": "kurehajime",
        "created_at": "2016-03-03T00:24:36Z",
        "body": "> @kurehajime does it work with \"C:\\C#\\user.css\"\n\nIt was the same.\n\n---\n\nOK\n\n```\n{\n    \"markdown.styles\": [\"C:/CSharp/user.css\"]\n}\n```\n\n```\n{\n    \"markdown.styles\": [\"C:\\\\CSharp\\\\user.css\"]\n}\n```\n\nNG (net::ERR_FILE_NOT_FOUND)\n\n```\n{\n    \"markdown.styles\": [\"C:/C#/user.css\"]\n}\n```\n\n```\n{\n    \"markdown.styles\": [\"C:\\\\C#\\\\user.css\"]\n}\n```\n\nOK\n\n```\n{\n    \"markdown.styles\": [\"C:/C%23/user.css\"]\n}\n```\n\n```\n{\n    \"markdown.styles\": [\"C:\\\\C%23\\\\user.css\"]\n}\n```\n"
      },
      {
        "user": "bpasero",
        "created_at": "2016-06-20T12:38:02Z",
        "body": "@kieferrm fyi this might be fixed now?\n"
      }
    ]
  },
  {
    "number": 2453,
    "title": "Introduce status bar indentation switcher",
    "created_at": "2016-01-27T14:18:12Z",
    "closed_at": "2016-03-02T11:08:04Z",
    "labels": [
      "help wanted",
      "feature-request",
      "important"
    ],
    "url": "https://github.com/microsoft/vscode/issues/2453",
    "body": "I really liked the auto indentation discovery mechanism and not having it sometimes screws the indentation of files that have only tabs.\n\nIt would be cool to have a status bar widget that tells me which mode I am on. Even cooler would be to bring back the auto detection as a default and use the widget to communicate its detection.\n\nClicking it would bring quick open with a picker to switch modes.\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/2453/comments",
    "author": "joaomoreno",
    "comments": [
      {
        "user": "joaomoreno",
        "created_at": "2016-01-27T14:18:44Z",
        "body": "ping @alexandrudima @chrisdias @egamma \n"
      },
      {
        "user": "bpasero",
        "created_at": "2016-03-01T19:48:08Z",
        "body": "Done/duplicate?\n"
      },
      {
        "user": "chrisdias",
        "created_at": "2016-03-01T20:49:58Z",
        "body": "i believe so with #1228 \n"
      }
    ]
  },
  {
    "number": 2091,
    "title": "Ctrl-Up and Ctrl-Down don't advance cursor when hits page limit",
    "created_at": "2016-01-18T17:03:05Z",
    "closed_at": "2017-11-22T15:12:33Z",
    "labels": [
      "help wanted",
      "feature-request",
      "editor-core"
    ],
    "url": "https://github.com/microsoft/vscode/issues/2091",
    "body": "I use the Ctrl-Up and Ctrl-Down feature very often, so I can scroll a limited amount of distance without losing my place. This has the advantage of allowing me to use the mouse less for view adjustment.\n\nI've noticed that there is a difference between how this behaves in the full Visual Studio and in Code. In Visual Studio, when you use Ctrl-Up/Down and the view moves such that the cursor is at the limit of the screen, then the editor will advance the cursor such that it remains on the last line visible. Code, however, does not do this, so the next time you hit a key (e.g. a cursor key without pressing Ctrl) then the view resets back to the line you were originally on which is quite jarring.\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/2091/comments",
    "author": "fractos",
    "comments": [
      {
        "user": "rob3c",
        "created_at": "2016-02-19T17:12:10Z",
        "body": "First of all, I just wanted to say it's great to finally have keyboard scrolling in VS Code! That said, this unexpected behavior can be quite frustrating for some of us as it breaks your flow when coding in addition to not matching the feature in other editors.\n\nHowever, I can see how others might like the current behavior so they can scroll a bit to see some code for reference and then snap back to the original context that's possibly offscreen (maybe that's why the original author did it that way?)\n\nPerhaps this is best made into a configuration flag instead of just 'fixing' it as a bug?\n"
      },
      {
        "user": "Tyriar",
        "created_at": "2016-02-19T19:05:52Z",
        "body": "I agree it would be good to have this configurable, I prefer the current method.\n"
      },
      {
        "user": "rob3c",
        "created_at": "2016-03-31T16:10:28Z",
        "body": "I think it should still be labeled a bug, as the current behavior doesn't allow for you to remain in the newly-scrolled screen without using the mouse to put focus in the new position. This is because the cursor stays put even when it completely scrolls out of view. Since this is all about keyboard navigation, then requiring the mouse seems counter to the spirit of it.\n\nMost editors have the cursor follow along at the top or bottom of the screen (depending on scroll direction) when scrolling beyond the current view. In that way, there's no jarring snap back to another location off-screen when you start moving the cursor with arrow keys again or start typing.\n\nHowever, some editors additionally allow you to hit ESC to snap back to the original position in the cases where you're scrolling just to take a peek instead of wanting to stay in the new location.\n"
      },
      {
        "user": "rob3c",
        "created_at": "2016-05-10T17:25:56Z",
        "body": "@alexandrudima I can understand this may not be a high priority item and hasn't been addressed yet, even though it's quite frustrating for some of us on a daily basis. However, would you mind explaining why you removed the bug label in light of my previous comment?\n"
      },
      {
        "user": "Tyriar",
        "created_at": "2016-05-12T06:16:21Z",
        "body": "@rob3c it's not a bug as it's working as intended currently, making this configurable would be adding functionality rather than fixing it.\n\nThis is probably the sort of thing we'd accept a PR for because of the priority of it, @alexandrudima do you want to add the help wanted label?\n"
      },
      {
        "user": "jkristia",
        "created_at": "2016-06-07T13:38:33Z",
        "body": "+1 for adding this functionality and have it configurable (or enabled).\nThis will provide same behavior as in Visual Studio, and will allow you to stay on the keyboard and not use the mouse.\n"
      },
      {
        "user": "rob3c",
        "created_at": "2016-06-07T19:48:09Z",
        "body": "In addition to Visual Studio, it would also provide the same behavior as in many other editors like Sublime Text, Notepad++, etc.\n\nJetBrains editors (IntelliJ IDEA, WebStorm, etc.) use the current VSCode behavior by default. It's clear that they've recognized it as non-obvious and disorienting for many users since they attempt to make it less jarring by leading the eye with a smooth reverse scrolling animation back to the offscreen cursor position. They also offer separate \"move if necessary\" versions of each up/down scroll command to get the behavior desired in this thread.\n"
      },
      {
        "user": "Bill-Stewart",
        "created_at": "2016-09-19T21:42:50Z",
        "body": "I like that we now have `editorScroll` function for scrolling up and down with `revealCursor` parameter set to `true`. However I would like to disable the behavior of how the cursor jumps to the first non-whitespace character of the next line when scrolling down or previous line when scrolling up. I will open a separate issue for my idea.\n"
      },
      {
        "user": "alexdima",
        "created_at": "2017-11-22T15:12:33Z",
        "body": "To keep the number of issues in our inbox at a manageable level, we're closing issues that have been on the backlog for a long time but haven't gained traction: we look at the number of votes the issue has received and the number of duplicate issues filed. Thank you for your time and understanding.\r\n\r\nP.S. If you disagree and feel that this issue is crucial: we're happy to listen and to reconsider.\r\n\r\n---\r\n\r\nFor this particular issue, the following \"workaround\" exists (in `keybindings.json`). e.g. for going down:\r\n\r\n```\r\n    {\r\n        \"key\": \"ctrl+down\",\r\n        \"command\": \"editorScroll\",\r\n        \"args\": {\r\n            \"to\": \"down\",\r\n            \"by\": \"line\",\r\n            \"revealCursor\": true\r\n        }\r\n    }\r\n```\r\n"
      },
      {
        "user": "fractos",
        "created_at": "2017-11-22T15:15:23Z",
        "body": "@alexandrudima Ah! I didn't know there was a workaround. Will try that and feedback. Thanks."
      },
      {
        "user": "fractos",
        "created_at": "2017-11-22T15:19:20Z",
        "body": "@alexandrudima Pretty much ideal with the workaround, for me (although when scrolling up the cursor stays on the penultimate line for some reason). Anyway - thanks for posting that!"
      },
      {
        "user": "jkristia",
        "created_at": "2017-11-22T15:24:08Z",
        "body": "Thank you so much for the work around. I have been waiting for this 'fix'"
      },
      {
        "user": "ghost",
        "created_at": "2017-11-23T22:14:47Z",
        "body": "Just tried the workaround:\r\n\r\n```\r\n\t{\r\n\t\t\"key\": \"ctrl+up\",\r\n\t\t\"command\": \"editorScroll\",\r\n\t\t\"when\": \"editorTextFocus\",\r\n\t\t\"args\": \r\n\t\t{\r\n\t\t\t\"to\": \"up\",\r\n\t\t\t\"by\": \"line\",\r\n\t\t\t\"revealCursor\": true\r\n\t\t}\r\n\t},\r\n\t{\r\n\t\t\"key\": \"ctrl+down\",\r\n\t\t\"command\": \"editorScroll\",\r\n\t\t\"when\": \"editorTextFocus\",\r\n\t\t\"args\": \r\n\t\t{\r\n\t\t\t\"to\": \"down\",\r\n\t\t\t\"by\": \"line\",\r\n\t\t\t\"revealCursor\": true\r\n\t\t}\r\n\t}\r\n```\r\n\r\nUp works fine; down sometimes scrolls several lines than stops as if it has reached the end of the file; most of the time down does not respond at all.\r\n\r\nVisual Studio Code version: 1.18.1, 2017-11-16\r\n\r\n* Happens in a js file with folded functions; without folding seems to work fine."
      }
    ]
  },
  {
    "number": 527,
    "title": "Support ctrl+up/ctrl+down to scroll without moving the caret",
    "created_at": "2015-11-24T04:08:05Z",
    "closed_at": "2015-12-10T22:06:26Z",
    "labels": [
      "help wanted",
      "feature-request"
    ],
    "url": "https://github.com/microsoft/vscode/issues/527",
    "body": "Like other editors, VS Code should support Control + Up / Down arrows to scroll the current viewport without moving the caret\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/527/comments",
    "author": "RyanCavanaugh",
    "comments": [
      {
        "user": "alisabzevari",
        "created_at": "2015-11-24T10:17:32Z",
        "body": "+1 for this feature.\n"
      },
      {
        "user": "nielslbeck",
        "created_at": "2015-11-24T18:07:59Z",
        "body": "+1\n"
      },
      {
        "user": "Ivan171",
        "created_at": "2015-11-24T18:38:41Z",
        "body": "+1. Use this lot on Sublime.\n"
      },
      {
        "user": "jaygeek",
        "created_at": "2015-11-25T02:19:22Z",
        "body": "+1 :+1: ++1\n`for (i = 0; i < success; i++) { \n    vote.post(i);\n}`\n"
      },
      {
        "user": "alexdima",
        "created_at": "2015-12-10T22:06:26Z",
        "body": "Thanks to @spellizzari this is now in! :+1: \n"
      },
      {
        "user": "RyanCavanaugh",
        "created_at": "2015-12-10T22:59:21Z",
        "body": "Thank you @spellizzari ! :trophy: Can't wait to set up a local build and start using this.\n"
      },
      {
        "user": "jaygeek",
        "created_at": "2015-12-11T21:34:17Z",
        "body": "Awsm! Can't wait. Thanks.\n"
      },
      {
        "user": "alexdima",
        "created_at": "2015-12-12T10:58:24Z",
        "body": "@RyanCavanaugh fyi we plan to release on the insiders channel on Monday 14th\n"
      },
      {
        "user": "ericsciple",
        "created_at": "2015-12-22T16:09:12Z",
        "body": "Really happy to see this feature made it in! Thanks!\n"
      }
    ]
  },
  {
    "number": 51,
    "title": "Fix add selection above and add selection below hotkey on Ubuntu",
    "created_at": "2015-11-18T16:18:25Z",
    "closed_at": "2015-11-27T11:09:47Z",
    "labels": [
      "bug",
      "help wanted",
      "verified"
    ],
    "url": "https://github.com/microsoft/vscode/issues/51",
    "body": "I'm used to `alt+shift+up` and `alt+shift+down` expanding the selection above and below the current anchor, as far as I can see this is not implemented in core or an extension.\n\nEdit: This is actually implemented and working fine, the hotkey ctrl+alt+up/down just conflicts with the Ubuntu OS hotkey to change workspace.\n",
    "comments_url": "https://api.github.com/repos/microsoft/vscode/issues/51/comments",
    "author": "Tyriar",
    "comments": [
      {
        "user": "jel-massih",
        "created_at": "2015-11-22T21:18:13Z",
        "body": "Is this different than the current add cursor above/below with `ctrl+alt+up` and `ctrl+alt+down`?\n"
      },
      {
        "user": "pali88",
        "created_at": "2015-11-22T21:20:04Z",
        "body": "Try\n"
      },
      {
        "user": "Tyriar",
        "created_at": "2015-11-23T18:36:05Z",
        "body": "`alt+shift+up` actually conflicts as well, which conflicts on atom's defaults.\n"
      },
      {
        "user": "alexdima",
        "created_at": "2015-11-24T08:37:30Z",
        "body": "@Tyriar I only use Linux in a VM. I think for me some keybindings are lost due to the VM runner.\n\nIf you run Linux natively, I would love some help to figure out what would be better default keybindings for `editor.action.insertCursorAbove` and `editor.action.insertCursorBelow`:\n\n```\n{ \"key\": \"ctrl+meta+up\",          \"command\": \"editor.action.insertCursorAbove\",\n                                     \"when\": \"editorTextFocus\" },\n{ \"key\": \"ctrl+meta+down\",        \"command\": \"editor.action.insertCursorBelow\",\n                                     \"when\": \"editorTextFocus\" },\n```\n"
      },
      {
        "user": "Tyriar",
        "created_at": "2015-11-24T09:34:53Z",
        "body": "@alexandrudima I'm used to alt+shift+down as the default for down (as on atom) and I guess I don't use the insert up because alt+shift+up conflicts as well. This is specific to Ubuntu, not sure about other distros. It would seem that we're running out of modifier key combinations. I'll see what Sublime uses by default tomorrow.\n"
      },
      {
        "user": "Tyriar",
        "created_at": "2015-11-24T18:33:54Z",
        "body": "@alexandrudima `alt+shift+down/up` is the default on Atom and Sublime, makes sense to follow suite.\n"
      },
      {
        "user": "alexdima",
        "created_at": "2015-11-27T11:09:47Z",
        "body": "I've pushed the following change to the defaults in c96af39 (tried on ubuntu and lubuntu):\n- move lines: from `ctrl+down/up` to `alt+down/up` (aligns with default on windows)\n- add cursor: from `ctrl+win+down/up` to `shift+alt+down/up` and also `ctrl+shift+down/up`\n\nThis frees up `ctrl+up/down` also on linux (it is already free on windows) for a future scroll viewport commands.\n"
      }
    ]
  }
]