[
  {
    "number": 383,
    "title": "Fatal error during conversion",
    "created_at": "2025-02-05T16:59:40Z",
    "closed_at": "2025-02-05T17:11:24Z",
    "labels": [
      "Conversion Bug"
    ],
    "url": "https://github.com/HiveGamesOSS/Chunker/issues/383",
    "body": "### Chunker Version\n\n1.4.5-main-9b61a6d\n\n### Input World Version\n\nBedrock 1.21.50\n\n### Output World Version\n\nJava 1.21.4\n\n### Platform / Operating System\n\nwin32-x64-10.0.26100\n\n### Issue Description\n\nError Displayed: `A fatal error occurred during conversion.`\nStack Trace: \n```\njava.util.concurrent.CompletionException: com.google.common.util.concurrent.ExecutionError: java.lang.OutOfMemoryError: Java heap space\r\n\tat java.base/java.util.concurrent.CompletableFuture.encodeThrowable(Unknown Source)\r\n\tat java.base/java.util.concurrent.CompletableFuture.completeThrowable(Unknown Source)\r\n\tat java.base/java.util.concurrent.CompletableFuture.uniHandle(Unknown Source)\r\n\tat java.base/java.util.concurrent.CompletableFuture$UniHandle.tryFire(Unknown Source)\r\n\tat java.base/java.util.concurrent.CompletableFuture.postComplete(Unknown Source)\r\n\tat java.base/java.util.concurrent.CompletableFuture.completeExceptionally(Unknown Source)\r\n\tat com.hivemc.chunker.scheduling.task.Environment.cancel(Environment.java:85)\r\n\tat com.hivemc.chunker.conversion.WorldConverter.cancel(WorldConverter.java:609)\r\n\tat com.hivemc.chunker.conversion.WorldConverter.logFatalException(WorldConverter.java:441)\r\n\tat com.hivemc.chunker.scheduling.task.executor.TaskExecutor.handleException(TaskExecutor.java:109)\r\n\tat com.hivemc.chunker.scheduling.task.WrappedTask.lambda$setupFuture$0(WrappedTask.java:57)\r\n\tat java.base/java.util.concurrent.CompletableFuture.uniHandle(Unknown Source)\r\n\tat java.base/java.util.concurrent.CompletableFuture$UniHandle.tryFire(Unknown Source)\r\n\tat java.base/java.util.concurrent.CompletableFuture.postComplete(Unknown Source)\r\n\tat java.base/java.util.concurrent.CompletableFuture.completeExceptionally(Unknown Source)\r\n\tat com.hivemc.chunker.scheduling.task.executor.TaskExecutorSupplier.run(TaskExecutorSupplier.java:44)\r\n\tat com.hivemc.chunker.scheduling.task.executor.TaskExecutor.threadLoop(TaskExecutor.java:178)\r\n\tat java.base/java.lang.Thread.run(Unknown Source)\r\nCaused by: com.google.common.util.concurrent.ExecutionError: java.lang.OutOfMemoryError: Java heap space\r\n\tat com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2084)\r\n\tat com.google.common.cache.LocalCache.get(LocalCache.java:4017)\r\n\tat com.google.common.cache.LocalCache$LocalManualCache.get(LocalCache.java:4898)\r\n\tat org.iq80.leveldb.util.LRUCache.load(LRUCache.java:56)\r\n\tat org.iq80.leveldb.table.Table.readBlock(Table.java:164)\r\n\tat org.iq80.leveldb.table.Table.openBlock(Table.java:137)\r\n\tat org.iq80.leveldb.table.Table.internalGet(Table.java:226)\r\n\tat org.iq80.leveldb.impl.TableCache.get(TableCache.java:101)\r\n\tat org.iq80.leveldb.impl.Level.get(Level.java:125)\r\n\tat org.iq80.leveldb.impl.Version.get(Version.java:144)\r\n\tat org.iq80.leveldb.impl.DbImpl.get(DbImpl.java:837)\r\n\tat org.iq80.leveldb.impl.DbImpl.get(DbImpl.java:806)\r\n\tat com.hivemc.chunker.conversion.encoding.bedrock.v1_17_30.reader.ColumnReader.readBiomeHeightMap(ColumnReader.java:26)\r\n\tat com.hivemc.chunker.scheduling.function.ThrowableConsumer.invoke(ThrowableConsumer.java:20)\r\n\tat com.hivemc.chunker.scheduling.function.ThrowableConsumer.invoke(ThrowableConsumer.java:8)\r\n\tat com.hivemc.chunker.scheduling.task.WrappedTask.apply(WrappedTask.java:84)\r\n\tat com.hivemc.chunker.scheduling.task.WrappedTask$WrappedTaskConstant.apply(WrappedTask.java:129)\r\n\tat com.hivemc.chunker.scheduling.task.WrappedTask.get(WrappedTask.java:77)\r\n\tat com.hivemc.chunker.scheduling.task.executor.TaskExecutorSupplier.run(TaskExecutorSupplier.java:42)\r\n\t... 2 more\r\nCaused by: java.lang.OutOfMemoryError: Java heap space\r\n\tat java.base/java.nio.HeapByteBuffer.<init>(Unknown Source)\r\n\tat java.base/java.nio.ByteBuffer.allocate(Unknown Source)\r\n\tat org.iq80.leveldb.util.ZLib.uncompress(ZLib.java:49)\r\n\tat org.iq80.leveldb.table.Table.readRawBlock(Table.java:202)\r\n\tat org.iq80.leveldb.table.Table.lambda$readBlock$1(Table.java:164)\r\n\tat org.iq80.leveldb.table.Table$$Lambda$419/0x0000000100214800.call(Unknown Source)\r\n\tat com.google.common.cache.LocalCache$LocalManualCache$1.load(LocalCache.java:4903)\r\n\tat com.google.common.cache.LocalCache$LoadingValueReference.loadFuture(LocalCache.java:3574)\r\n\tat com.google.common.cache.LocalCache$Segment.loadSync(LocalCache.java:2316)\r\n\tat com.google.common.cache.LocalCache$Segment.lockedGetOrLoad(LocalCache.java:2190)\r\n\tat com.google.common.cache.LocalCache$Segment.get(LocalCache.java:2080)\r\n\tat com.google.common.cache.LocalCache.get(LocalCache.java:4017)\r\n\tat com.google.common.cache.LocalCache$LocalManualCache.get(LocalCache.java:4898)\r\n\tat org.iq80.leveldb.util.LRUCache.load(LRUCache.java:56)\r\n\tat org.iq80.leveldb.table.Table.readBlock(Table.java:164)\r\n\tat org.iq80.leveldb.table.Table.openBlock(Table.java:137)\r\n\tat org.iq80.leveldb.table.Table.internalGet(Table.java:226)\r\n\tat org.iq80.leveldb.impl.TableCache.get(TableCache.java:101)\r\n\tat org.iq80.leveldb.impl.Level.get(Level.java:125)\r\n\tat org.iq80.leveldb.impl.Version.get(Version.java:144)\r\n\tat org.iq80.leveldb.impl.DbImpl.get(DbImpl.java:837)\r\n\tat org.iq80.leveldb.impl.DbImpl.get(DbImpl.java:806)\r\n\tat com.hivemc.chunker.conversion.encoding.bedrock.v1_17_30.reader.ColumnReader.readBiomeHeightMap(ColumnReader.java:26)\r\n\tat com.hivemc.chunker.conversion.encoding.bedrock.base.reader.BedrockColumnReader$$Lambda$563/0x00000001002ac1a0.accept(Unknown Source)\r\n\tat com.hivemc.chunker.scheduling.function.ThrowableConsumer.invoke(ThrowableConsumer.java:20)\r\n\tat com.hivemc.chunker.scheduling.function.ThrowableConsumer.invoke(ThrowableConsumer.java:8)\r\n\tat com.hivemc.chunker.scheduling.task.WrappedTask.apply(WrappedTask.java:84)\r\n\tat com.hivemc.chunker.scheduling.task.WrappedTask$WrappedTaskConstant.apply(WrappedTask.java:129)\r\n\tat com.hivemc.chunker.scheduling.task.WrappedTask.get(WrappedTask.java:77)\r\n\tat com.hivemc.chunker.scheduling.task.executor.TaskExecutorSupplier.run(TaskExecutorSupplier.java:42)\r\n\tat com.hivemc.chunker.scheduling.task.executor.TaskExecutor.threadLoop(TaskExecutor.java:178)\r\n\tat com.hivemc.chunker.scheduling.task.executor.TaskExecutor$$Lambda$364/0x00000001001d4430.run(Unknown Source)\r\n```\n",
    "comments_url": "https://api.github.com/repos/HiveGamesOSS/Chunker/issues/383/comments",
    "author": "Cuboctus",
    "comments": [
      {
        "user": "FormallyMyles",
        "created_at": "2025-02-05T17:11:24Z",
        "body": "The error you're seeing is because Chunker doesn't have enough memory to convert your world, this is usually because the world is quite big, or you don't have enough available memory (RAM). Chunker by default uses 75% of your available memory, so you might find that closing other applications before converting your world allows it to use the memory it needs.\n\nYou can also tell Chunker how much memory you want it to use, you need to run it from command-line in the form of `Chunker.exe -Xmx8G` to tell Chunker to use a maximum of 8 gigabytes of memory.\n\nWe can look further, but in most cases a large world does require more memory (especially with compression of the files), if you'd like us to we would need:\n- The world size\n- How much memory your computer has\n- A copy of the world"
      }
    ]
  }
]