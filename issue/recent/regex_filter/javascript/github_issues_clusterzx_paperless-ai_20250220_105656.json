[
  {
    "number": 357,
    "title": "Add more Debug information to LLM response errors",
    "created_at": "2025-02-18T06:54:43Z",
    "closed_at": "2025-02-18T07:14:48Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/357",
    "body": "**Is your feature request related to a problem? Please describe.**\nSometimes, the LLM does not return the expected JSON format, and I can't see the entire content to debug it.\n\n**Describe the solution you'd like**\nI would like a way to see what message was sent and what the response was. Ideally, there should be more detailed debug information when the LLM response contains errors. I know that the logs contain a small message indicating that the LLM returned an incorrect JSON, but I don't think that shows the entire response. Additionally, I am unable to see the message that paperless-ai sent. It would be helpful to have a more comprehensive log that includes both the request and the full response for better debugging.\n\n**Describe alternatives you've considered**\nNone\n\n**Additional context**\nRepsonse from AI service: {\n  document: { tags: [], correspondent: null },\n  metrics: null,\n  error: 'Invalid API response structure'\n}\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/357/comments",
    "author": "leon3011",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-02-18T07:15:24Z",
        "body": "Oh boy der zweite issue ohne Sinn. \nSchau doch einfach in den Logs \n\n/app/logs"
      },
      {
        "user": "leon3011",
        "created_at": "2025-02-18T07:28:43Z",
        "body": "Was denkst du was ich getan hab? Da steht genau das drin was ich im additional context angegeben habe. Da steht aber nicht was für eine response direkt zurückgegeben wurde das einzige was ich jetzt sehe ist das meine Dokumente nicht analysiert werden können weil das LLM keine richtige Response gegeben hat. Aber welche Response? Keine Ahnung.\n\nAber alles gut merke schon das macht kein Sinn mit dir zu diskutieren. Danke dir trotzdem für das Tool."
      }
    ]
  },
  {
    "number": 352,
    "title": "[Bug]:",
    "created_at": "2025-02-16T22:27:18Z",
    "closed_at": "2025-02-18T07:17:40Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/352",
    "body": "### 🔍 Bug Summary\n\nMobile Website Problem with iOS\n\n### 📖 Description\n\nIn iOS (with Safari) there seems to be a Problem with scrolling to the end of a page. At the Settings page this could be quite annoying because the Save Changes Button is Not clickable. \nThis behavior is also on other Pages/Views from P.Ai\nI also tried different Browsers on iPhone and with Chrome it is the Same behavior but with DuckDuckGo, opera or brave I could scroll to the end. \nSo maybe it could be a WebKit Problem. \n\n### 🔄 Steps to Reproduce\n\nGo with iPhone on the Settings Web Page with Safari and Try to scroll to the end. \n\n### ✅ Expected Behavior\n\nScrolling to the end of the page\n\n### ❌ Actual Behavior\n\nPulled back After scrolled to the end. \n\n### 📜 Docker Logs\n\n```shell\n\n```\n\n### 📜 Paperless-ngx Logs\n\n```shell\n\n```\n\n### 🖼️ Screenshots of your settings page\n\n_No response_\n\n### 🖥️ Desktop Environment\n\nOther\n\n### 💻 OS Version\n\n_No response_\n\n### 🌐 Browser\n\nSafari\n\n### 🔢 Browser Version\n\n_No response_\n\n### 🌐 Mobile Browser\n\n_No response_\n\n### 📝 Additional Information\n\n- [x] I have checked existing issues and this is not a duplicate\n- [x] I am sure that this problem is affecting everyone, not only me\n- [ ] I have tried debugging this issue on my own\n- [ ] I can provide a fix and submit a PR\n\n### 📌 Extra Notes\n\n_No response_",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/352/comments",
    "author": "maumi",
    "comments": [
      {
        "user": "Stiesel",
        "created_at": "2025-02-17T04:00:11Z",
        "body": "This problem also occurs on Android in Chrome, you only see one millimeter of the actual bars"
      },
      {
        "user": "clusterzx",
        "created_at": "2025-02-18T07:17:35Z",
        "body": "The app was not designed to be mobile friendly. \n\nGonna update it maybe in the future. But not planned now. "
      }
    ]
  },
  {
    "number": 348,
    "title": "Unable to upload documents.",
    "created_at": "2025-02-16T13:12:49Z",
    "closed_at": "2025-02-16T18:01:00Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/348",
    "body": "I have set it up, but I am unable to upload the documents for analysis.",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/348/comments",
    "author": "zonrghua88",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-02-16T13:25:21Z",
        "body": "What do you mean by upload? You don't upload any documents to paperless-ai. "
      },
      {
        "user": "MephistoJB",
        "created_at": "2025-02-16T16:52:50Z",
        "body": "I think he means on playground or manual. Documents apear there only if they are tagged accordingly to the settings menu or if in the settings the dropdown of \"Process only specific pre tagged documents?\" is set to No.\n\nPlease choose a correct tagging or choose the dropdown \"Process only specific pre tagged documents?\" to no"
      }
    ]
  },
  {
    "number": 345,
    "title": "How to get API Token of the setting？",
    "created_at": "2025-02-16T10:18:33Z",
    "closed_at": "2025-02-16T10:23:50Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/345",
    "body": "I am a biginner. I want to know How to get API Token of the Connection Settings？\nThanks!",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/345/comments",
    "author": "zonrghua88",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-02-16T10:23:49Z",
        "body": "In paperless-ngx -> top right click your profile -> My Profile -> API Key"
      }
    ]
  },
  {
    "number": 330,
    "title": "Dark theme is not very readable in some places",
    "created_at": "2025-02-12T14:07:50Z",
    "closed_at": "2025-02-14T17:49:42Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/330",
    "body": "**Describe the bug**\nThe dark theme seems to be forgotten in some places\n\n**To Reproduce**\nSteps to reproduce the behavior:\n1. Switch to dark theme\n2. browse the page\n\nI believe it does not need any additional information.\n\nOtherwise thank you for the nice tool! <3",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/330/comments",
    "author": "woozar",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-02-12T15:04:01Z",
        "body": "I just stumbled over the dashboard in the Task Runner. Is there anything else you have seen?"
      },
      {
        "user": "bat1939",
        "created_at": "2025-02-12T16:48:26Z",
        "body": "Under Settings and AI Function Limits, the titles for the check boxes are in black and hard to read."
      },
      {
        "user": "Analog4Lyfe",
        "created_at": "2025-02-12T18:03:47Z",
        "body": "in dark mode that white box background is very hard to read"
      },
      {
        "user": "woozar",
        "created_at": "2025-02-12T20:35:10Z",
        "body": "Task runner status and black text in the settings are the two things, that draw my attention in the first place.\n\nAlso I just realised, that the theme trigger (that button in the top right corner) on the \"Manual\" page is not working.\n\nI also found some \"minor\" stuff (I would not have created a ticket for that).\n* would be awesome if the box with the text \"The application is already configured. You can update the configuration below.\" was also darker in dark mode. \n* the background of the pie chart in \"Document Type Distribution\"\n* paperless itself has a dark mode for its pdf preview tiles. is it somehow possible to use that in the Playground in paperless-ai in dark mode? (that is probably more of a feature request)"
      },
      {
        "user": "clusterzx",
        "created_at": "2025-02-12T20:56:54Z",
        "body": "> Task runner status and black text in the settings are the two things, that draw my attention in the first place.\n> \n> Also I just realised, that the theme trigger (that button in the top right corner) on the \"Manual\" page is not working.\n> \n> I also found some \"minor\" stuff (I would not have created a ticket for that).\n> \n> * would be awesome if the box with the text \"The application is already configured. You can update the configuration below.\" was also darker in dark mode.\n> * the background of the pie chart in \"Document Type Distribution\"\n> * paperless itself has a dark mode for its pdf preview tiles. is it somehow possible to use that in the Playground in paperless-ai in dark mode? (that is probably more of a feature request)\n\nThanks for the specific information. Funny how I never realized that the switch on the manual page is not working. 😆 "
      },
      {
        "user": "woozar",
        "created_at": "2025-02-12T23:27:14Z",
        "body": "A pleasure to work with people, who react on bug reports. Happy to help with my reports."
      },
      {
        "user": "clusterzx",
        "created_at": "2025-02-14T17:49:41Z",
        "body": "Fixed the issues + also added the invert of documents in playground for better visibility. \nWill be available with the next release."
      }
    ]
  },
  {
    "number": 324,
    "title": "Ownership of created tags and correspondents",
    "created_at": "2025-02-11T17:59:34Z",
    "closed_at": "2025-02-11T23:13:21Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/324",
    "body": "## **Is your feature request related to a problem? Please describe.**\nI am facing a recurring issue (#243 ) related to automatic ownership of tags and correspondents created by the dedicated user for AI analysis in Paperless. The problem is that these objects are automatically assigned to the dedicated user as the owner, which causes them to be marked as \"Private\" and, therefore, inaccessible to other users. This is a barrier to proper collaboration and usability.\n\n**Describe the solution you'd like**\nI would like to request a feature where the tags and correspondents created by the AI (or through the API) are not automatically assigned to the dedicated user as the owner. Instead, they could be created with open ownership by default, allowing other users to access them without restrictions. Furthermore, it would be nice if there was a setting that allows to define the permissions (ownership, user´s and groups) for these objects in advance, providing more control over access and collaboration.\n\n**Describe alternatives you've considered**\nCurrently, the only alternative is manually changing the ownership of the tags and correspondents after they are created, which is time-consuming and not an ideal solution for workflow efficiency.\n\n**Additional context**\nI'm not sure if the Paperless API supports these functions and whether it's feasible in terms of effort, as it seems that relatively few people are facing this issue.",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/324/comments",
    "author": "WernerWhite",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-02-11T23:13:15Z",
        "body": "This is not in the scope right now, maybe I will add a solution for this.\nClosing and converting to idea."
      }
    ]
  },
  {
    "number": 316,
    "title": "OpenAI API Key is not valid. Please check the key.",
    "created_at": "2025-02-10T20:59:29Z",
    "closed_at": "2025-02-10T22:01:15Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/316",
    "body": "Hey Clusterzx,\n I'm just about to set up paperless-ai, now it only fails because of the OpenAI key \"OpenAI API Key is not valid. Please check the key.\" The key is 100% correct... Do you have any idea what else I'm doing wrong?",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/316/comments",
    "author": "UncleCCC",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-02-10T21:08:44Z",
        "body": "Do you have positive balance on this key? Free-Tier does not work."
      },
      {
        "user": "UncleCCC",
        "created_at": "2025-02-10T21:23:15Z",
        "body": "Ohhh sorry... That was the mistake, I have little experience with OpenAI... I have a ChatGPT license, I thought this also applies to OpenAI. Now it works thanks for your quick help"
      }
    ]
  },
  {
    "number": 309,
    "title": "Rescan after Prompt Description change.",
    "created_at": "2025-02-09T17:00:39Z",
    "closed_at": "2025-02-09T19:39:54Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/309",
    "body": "Hi,\n\nThanks for this great tool.\n\nI have one question regarding understanding.\n\nToday I set up paperless-ai and successfully scanned over 400 documents. Tags and types are working fine, and all documents have an \"ai-processed\" tag.\n\nNow I decided to change many settings in the \"Prompt Description\" to optimize the output. I thought I could simply rescan everything and that the optimized prompts would be applied to all documents, but it's not working.\n\nHow can I rescan all documents with the new Prompt Description?\n\nThanks a lot.\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/309/comments",
    "author": "kolossboss",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-02-09T17:03:10Z",
        "body": "You could easily go to History and delete the documents you want to reprocess. "
      },
      {
        "user": "kolossboss",
        "created_at": "2025-02-09T19:22:58Z",
        "body": "Thx a lot.\n\nWorks great👍"
      }
    ]
  },
  {
    "number": 297,
    "title": "Failed to get own user ID.  Abort scanning.",
    "created_at": "2025-02-07T19:10:11Z",
    "closed_at": "2025-02-07T19:21:06Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/297",
    "body": "\nI am setting up Paperless-AI for the first time, and after configuration I get \"Failed to get own user ID.  Abort scanning.\"\n\nWhat does that mean and how do I fix it?\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/297/comments",
    "author": "Tarpon907",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-02-07T19:14:59Z",
        "body": "You have to set there the login username of the user that is also the owner of the api key. "
      },
      {
        "user": "Tarpon907",
        "created_at": "2025-02-07T19:15:49Z",
        "body": "It is.\n"
      },
      {
        "user": "clusterzx",
        "created_at": "2025-02-07T19:17:19Z",
        "body": "Does the user have the rights to access the api and also the /api/users endpoint ?"
      },
      {
        "user": "Tarpon907",
        "created_at": "2025-02-07T19:19:53Z",
        "body": "My API URL had a trailing slash.  It worked when I removed that.\n"
      },
      {
        "user": "clusterzx",
        "created_at": "2025-02-07T19:20:59Z",
        "body": "Ok glad it works now. "
      }
    ]
  },
  {
    "number": 284,
    "title": "Limit prompt size for limited amount of ram",
    "created_at": "2025-02-05T09:53:00Z",
    "closed_at": "2025-02-11T00:06:49Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/284",
    "body": "I frequently get for huge documents a warning that the input prompt is truncated:\n\n```\n[GIN] 2025/02/05 - 09:19:55 | 200 |         3m22s |    172.175.1.32 | POST     \"/api/generate\"\n[GIN] 2025/02/05 - 09:21:58 | 200 |          2m1s |    172.175.1.32 | POST     \"/api/generate\"\ntime=2025-02-05T09:21:59.623Z level=WARN source=runner.go:129 msg=\"truncating input prompt\" limit=1274 prompt=7386 keep=5 new=1274\n[GIN] 2025/02/05 - 09:26:05 | 200 |          4m5s |    172.175.1.32 | POST     \"/api/generate\"\ntime=2025-02-05T09:26:07.135Z level=WARN source=runner.go:129 msg=\"truncating input prompt\" limit=1274 prompt=6475 keep=5 new=1274\n[GIN] 2025/02/05 - 09:30:09 | 200 |          4m2s |    172.175.1.32 | POST     \"/api/generate\"\ntime=2025-02-05T09:30:13.298Z level=WARN source=runner.go:129 msg=\"truncating input prompt\" limit=1274 prompt=11214 keep=5 new=1274\n```\nThis is currently running with gemma2:9b (I get these errors also with gemma2:2b, llama2, llama3.2, ..)\nCreating a derived model with /set parameter num_ctx 16384 doesn't help either.\n\nWould it be possible to add a option to limit paperless ai to hand over just the first page of the document (or a fixed number of words) to ollama?\n\nUsually the title can be found by looking into the first ~300-400 words, so i would really appreciate if the prompt can be shortened which is handed over to ollama. \n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/284/comments",
    "author": "winnieXY",
    "comments": [
      {
        "user": "winnieXY",
        "created_at": "2025-02-10T10:49:15Z",
        "body": "Any news on that? I would really appreciate if it would be possible to limit the prompt size for local models  (e.g. by just cutting the text). "
      },
      {
        "user": "clusterzx",
        "created_at": "2025-02-11T00:05:28Z",
        "body": "Short update:\nIn the NEXT release you are able to limit the content max length via manuall editing the .env file under /app/data/.env\n\nCONTENT_MAX_LENGTH=200\n\nBut you have to add that every time after you changed some settings as this is only a manual feature. \nI dont know if I want to make a real option out of that in the settings page as this can really hurt (if wrongly configured) the app and all features later on."
      }
    ]
  },
  {
    "number": 283,
    "title": "Self signed certificate not accepted",
    "created_at": "2025-02-04T16:00:22Z",
    "closed_at": "2025-02-11T00:08:39Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/283",
    "body": "**Describe the bug**\nCannot setup with self signed certificate on paperless-ngx, even after updating ca-certificates and npm config set strict-ssl false inside container\n\n**To Reproduce**\nsetup paperless-ai with a paperless-ngx instance, which has a self-signed certificate\n\n**Expected behavior**\nunfortunately looks like node does not use the system wide ca-certificates so even after adding my root ca cert to /usr/local/share/ca-certificates/ and issuing update-ca-certificates, it would still fail to validate the cert, i would have assumed that after this it would be able to validate the cert of paperless-ngx as a valid cert\n\n**Additional context/workaround**\nthe error log inside the container states: Paperless validation error: unable to get local issuer certificate\n\ni got it to work with disabling certificate verification in nodejs, with adding the below line to my docker-compose file:\n```\n    environment:\n      - \"NODE_TLS_REJECT_UNAUTHORIZED=0\"\n```\n\nor if you have the root cert of the ca that signed your cert (you are your own ca and are self signing certs) then you can add your root ca cert like so:\n\n```\n    environment:\n      - \"NODE_EXTRA_CA_CERTS=</path/to/file>\"\n```\n\nnot sure what the solution could be, mostly created the report for documentation purposes, i am not experienced in nodejs development in the slightest",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/283/comments",
    "author": "blue212121",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-02-11T00:08:35Z",
        "body": "Sorry that is not reproducable for me so I can not make a workarround. "
      }
    ]
  },
  {
    "number": 274,
    "title": "[Feature Request] Show raw ollama output in logs",
    "created_at": "2025-02-03T05:03:45Z",
    "closed_at": "2025-02-03T10:29:37Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/274",
    "body": "I understand that OpenAI is expected to work much better than Ollama, but I still want to attempt to use Ollama. I believe one simple change could really help a lot. \n\nRight now, when an inference is made, I see something like this in the logs:\n```\nPrompt Token Count: 389\nExpected Response Tokens: 1024\nDynamic calculated num_ctx: 1413\nNo tags or correspondent found in response from Ollama for Document.\nPlease review your prompt or switch to OpenAI for better results.\n```\n\nIf the raw output from ollama was in there, I could see what I'm getting instead of the expcted JSON, and that would be hugely helpful. When I put the same prompt in the document chat, I get JSON that looks exactly right, so I really could use some visibility here.\n\nAs a stretch goal, it would be awesome if the raw output could be shown in the playground, as that seems to fit the intention of the playground.\n\nI am using the latest docker image as of 2025/02/01.",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/274/comments",
    "author": "endotronic",
    "comments": [
      {
        "user": "endotronic",
        "created_at": "2025-02-03T05:24:22Z",
        "body": "I actually just figured out that `<think>` tags were causing my problems. Admittedly, it's a different issue, but it would be awesome to ignore `<think>` tags in the Ollama output."
      },
      {
        "user": "clusterzx",
        "created_at": "2025-02-03T05:35:23Z",
        "body": "You can see the response in the logs. /app/logs"
      }
    ]
  },
  {
    "number": 271,
    "title": "Settings are not saved correctly",
    "created_at": "2025-02-02T11:52:39Z",
    "closed_at": "2025-02-03T10:31:40Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/271",
    "body": "Describe the bug\nInitially, after entering settings into the setup page, all settings were lost after restarting the container, requiring a reconfiguration.\nI resolved this by correctly mounting the .env file. Now, after a restart, the settings fields are correctly populated—except for the System Prompt, which is not saved properly.\n\nWhen entering and saving my prompt in the System Prompt field, the UI displays:\n\n`My Prompt (without closing `)\nAnd the .env file contains:\n\nSYSTEM_PROMPT=`My Prompt\n`\n(The closing backtick appears after a line break.)\n\nThis causes docker compose down to fail with the error:\nfailed to read /home/admin/paperless-ai/data/.env: line 11: unexpected character \"`\" in variable name \"`\"\nwhich is due to the misplaced closing backtick.\n\nManually correcting the .env entry to:\n\nSYSTEM_PROMPT=`My Prompt`\nallows docker compose down and docker compose up to work properly, and the settings page then correctly displays:\n\n`My Prompt`\n\nHowever, saving the settings again reintroduces the issue, breaking the .env file once more.",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/271/comments",
    "author": "intradesign",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-02-02T12:01:50Z",
        "body": "That seems like a user issue as you are the first one mention that. \n\nI can not reproduce that at all. "
      }
    ]
  },
  {
    "number": 253,
    "title": "PUID/PGID Support",
    "created_at": "2025-01-27T20:24:48Z",
    "closed_at": "2025-01-27T21:06:05Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/253",
    "body": "**Is your feature request related to a problem? Please describe.**\nObjective to drop/reduce root priviledges.\n\n**Describe the solution you'd like**\n\ncompose.yaml\n```\nservices:\n  paperless-ai:\n    image: clusterzx/paperless-ai\n    container_name: paperless-ai\n    restart: unless-stopped\n    cap_drop:\n      - ALL\n    security_opt:\n      - no-new-privileges=true\n    environment:\n      - PUID:1000\n      - PGID:1000\n    ports:\n      - 3000:3000\n    volumes:\n      - paperless-ai_data:/app/data\n\nvolumes:\n  paperless-ai_data:\n```",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/253/comments",
    "author": "truthsword",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-27T21:06:05Z",
        "body": "Added your config. Thank you for the good issue.\n"
      },
      {
        "user": "GyroGearl00se",
        "created_at": "2025-01-28T14:48:12Z",
        "body": "services.paperless-ai.environment.[0]: unexpected type map[string]interface {}\n\nenvironment should look like:\n\n\nenvironment:\n      - PUID=1000\n      - PGID=1000\n\n\n"
      },
      {
        "user": "truthsword",
        "created_at": "2025-01-28T15:28:21Z",
        "body": "@clusterzx Remove the space after the PUID/PGID colon (fixed above)\n```\nservices:\n  paperless-ai:\n    image: clusterzx/paperless-ai\n    container_name: paperless-ai\n    restart: unless-stopped\n    cap_drop:\n      - ALL\n    security_opt:\n      - no-new-privileges=true\n    environment:\n      - PUID:1000\n      - PGID:1000\n    ports:\n      - 3000:3000\n    volumes:\n      - paperless-ai_data:/app/data\n\nvolumes:\n```"
      }
    ]
  },
  {
    "number": 248,
    "title": "Prevent updating Tags & Correspondents",
    "created_at": "2025-01-27T14:19:25Z",
    "closed_at": "2025-02-04T09:02:34Z",
    "labels": [
      "stale"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/248",
    "body": "**Describe the bug**\nEven though I explicitly state that I do not want the tags and the correspondent being changed by the model, new correspondents are created and the tags on the document are modified. \n\npaperless ai assigns currently all available tags to the document. \n\nThis is my (slightly modified) prompt:\n\n```\nYou are a personalized document analyzer. Your task is to analyze documents and extract relevant information.\n\nAnalyze the document content and extract the following information into a structured JSON object:\n\n1. title: Create a concise, meaningful title for the document\n2. correspondent: Do not mofiy the correspondent - just analyse them.\n3. tags: Do not modify the tags - just analyse them.\n4. document_date: Extract the document date (format: DD-MM-YYYY)\n5. language: Determine the document language (e.g. \"de\" or \"en\")\n      \nImportant rules for the analysis:\n\nFor tags:\n- Just analyse tags - do not add, delete or modify tags on the document. IMPORTANT!\n\nFor the title:\n- Short and concise, NO ADDRESSES\n- Contains the most important identification features\n- For invoices/orders, mention invoice/order number if available\n- The output language is the one used in the document! IMPORTANT!\n\nFor the correspondent:\n- Do not modify the correspondent! IMPORTANT!\n- Do not add new correspondents. IMPORTANT!\n\nFor the document date:\n- Extract the date of the document\n- Use the format YYYY-MM-DD\n- If multiple dates are present, use the most relevant one\n\nFor the language:\n- Determine the document language\n- Use language codes like \"de\" for German or \"en\" for English\n- If the language is not clear, use \"und\" as a placeholder\n```\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/248/comments",
    "author": "winnieXY",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-27T14:22:06Z",
        "body": "Hey Winnie,\n\nWith the next release there will be a fine tune option to set what will be created, updated or touched. \nStay tuned and thank you for your valuable inputs here.\n\nGreetings from Cologne"
      },
      {
        "user": "clusterzx",
        "created_at": "2025-02-04T00:14:03Z",
        "body": "This issue has been marked as stale due to inactivity. Please respond to keep it open."
      },
      {
        "user": "dadino",
        "created_at": "2025-02-04T08:42:41Z",
        "body": "> Hey Winnie,\n> \n> With the next release there will be a fine tune option to set what will be created, updated or touched. Stay tuned and thank you for your valuable inputs here.\n> \n> Greetings from Cologne\n\nIs the \"update\" present? I can only choose to set the fields or not, I can't find the option to only create missing fields, but disallow updates of existing ones"
      },
      {
        "user": "clusterzx",
        "created_at": "2025-02-04T08:59:30Z",
        "body": "> > Hey Winnie,\n> > With the next release there will be a fine tune option to set what will be created, updated or touched. Stay tuned and thank you for your valuable inputs here.\n> > Greetings from Cologne\n> \n> Is the \"update\" present? I can only choose to set the fields or not, I can't find the option to only create missing fields, but disallow updates of existing ones\n\nThats not what the issue was about. Can you explain more precisely what you want?"
      },
      {
        "user": "clusterzx",
        "created_at": "2025-02-04T09:02:34Z",
        "body": "@winnieXY your wish is fulfilled. "
      },
      {
        "user": "dadino",
        "created_at": "2025-02-04T10:00:18Z",
        "body": "> > > Hey Winnie,\n> > > With the next release there will be a fine tune option to set what will be created, updated or touched. Stay tuned and thank you for your valuable inputs here.\n> > > Greetings from Cologne\n> > \n> > \n> > Is the \"update\" present? I can only choose to set the fields or not, I can't find the option to only create missing fields, but disallow updates of existing ones\n> \n> Thats not what the issue was about. Can you explain more precisely what you want?\n\nA selector for each of the fields (title, tags, etc) with: \"never create\", \"always create\" and \"create only if not already existing\". This way when I have rules to auto-add tags to documents or when I upload a file with the correct name, PaperlessAI won't override the previously set value for that field.\n\nEDIT: right now I've only set PaperlessAI to analyze files uploaded via the \"consume\" directory, which I'm sure have no correct title."
      },
      {
        "user": "clusterzx",
        "created_at": "2025-02-04T10:21:51Z",
        "body": "> > > > Hey Winnie,\n> > > > With the next release there will be a fine tune option to set what will be created, updated or touched. Stay tuned and thank you for your valuable inputs here.\n> > > > Greetings from Cologne\n> > > \n> > > \n> > > Is the \"update\" present? I can only choose to set the fields or not, I can't find the option to only create missing fields, but disallow updates of existing ones\n> > \n> > \n> > Thats not what the issue was about. Can you explain more precisely what you want?\n> \n> A selector for each of the fields (title, tags, etc) with: \"never create\", \"always create\" and \"create only if not already existing\". This way when I have rules to auto-add tags to documents or when I upload a file with the correct name, PaperlessAI won't override the previously set value for that field.\n> \n> EDIT: right now I've only set PaperlessAI to analyze files uploaded via the \"consume\" directory, which I'm sure have no correct title.\n\nThat is not planned for now sorry."
      }
    ]
  },
  {
    "number": 243,
    "title": "Permissions for Tags and Correspondents",
    "created_at": "2025-01-27T07:30:02Z",
    "closed_at": "2025-02-11T00:09:11Z",
    "labels": [
      "stale"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/243",
    "body": "Hi,\n\nI've setup paperless with multiple users in private environment (household). I also created a dedicated API User for paperless-ai. In paperless frontend, I set permissions for newly created tags and correspondents to *no owner* and view and edit rights to my common group all users belong to. Furthermore, all documents are set to the same ownership/permissions by a workflow. With this setup, paperless-ai can process all documents either uploaded by any user or imported from consumption directory.\n\nThe problem now are the tags and correspondents created by paperless-ai. Unfortunately, the default ownership/permissions are only used, if objects are created via the web frontend, not if they are created via the API. Therefore, all newly created objects belong to the paperless-ai API User and the other users can't see them (they are displayed as private).\n\nIt would be great, if paperless-ai can read the ownership/permissions of the current document and uses them also for newly created tags and correspondents. This way, it would be guaranteed, that a user can access all tags and correspondents added to his documents.\n\nAlternatively, paperless-ai can provide settings for ownership/permissions and uses them for all newly created objects.\n\nOther thoughts and tricks are welcome. I just don't want to use one account for all members of our household. I think this will also be an interesting feature for small office groups.\n\nThanks for looking into it.\nStefan",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/243/comments",
    "author": "goldi80",
    "comments": [
      {
        "user": "Daniel15",
        "created_at": "2025-02-02T04:36:54Z",
        "body": "> Unfortunately, the default ownership/permissions are only used, if objects are created via the web frontend, not if they are created via the API\n\nThis sounds like a bug with Paperless? Or maybe it's intentional, I'm not sure."
      },
      {
        "user": "goldi80",
        "created_at": "2025-02-02T06:28:19Z",
        "body": "The permissions tab in the user settings states\n\n> Default Permissions\nSettings apply to this user account for objects (Tags, Mail Rules, etc.) created via the web UI\n\nSo this should be intentionally."
      },
      {
        "user": "clusterzx",
        "created_at": "2025-02-10T00:14:45Z",
        "body": "This issue has been marked as stale due to inactivity. Please respond to keep it open."
      }
    ]
  },
  {
    "number": 238,
    "title": "Search documents... not working on Playground page, console error in playground.js",
    "created_at": "2025-01-26T16:35:52Z",
    "closed_at": "2025-01-26T22:36:42Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/238",
    "body": "**Describe the bug**\nThe \"Search documents...\" functionality on the Playground page does not work. When entering text in the search field, no results are filtered, and an error appears in the JavaScript console.\n\n**To Reproduce**\nSteps to reproduce the behavior:\nGo to the Playground page.\nLocate the \"Search documents...\" field.\nEnter any text into the search field.\nObserve that no results are filtered and check the browser's JavaScript console for errors.\n\n**Expected behavior**\nThe search functionality on the Playground page should filter and display matching documents based on the text entered in the \"Search documents...\" field.\n\n\n**Desktop (please complete the following information):**\n\nOS:  Windows 11\nBrowser: Google Chrome\nVersion: 131.0.6778.265\n\n**Additional context**\nThe following error appears in the JavaScript console when interacting with the search field on the Playground page:\n\n```\nplayground.js:52 Uncaught TypeError: Cannot read properties of null (reading 'textContent')  \n    at playground.js:52:60  \n    at NodeList.forEach (<anonymous>)  \n    at DocumentManager.handleSearch (playground.js:51:15)  \n    at HTMLInputElement.<anonymous> (playground.js:41:64)\n```\n\nThe issue appears to be related to accessing a null or undefined value in playground.js. This bug prevents users from using the search functionality effectively.",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/238/comments",
    "author": "derfloDev",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-26T22:36:42Z",
        "body": "As commented on your PR this feature was removed as not needed anymore."
      }
    ]
  },
  {
    "number": 236,
    "title": "Rate Prompt dialog exceeds visible area for long prompts in Playground",
    "created_at": "2025-01-26T16:15:38Z",
    "closed_at": "2025-01-26T18:50:33Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/236",
    "body": "Describe the bug\nWhen entering a very long prompt on the Playground page and then opening the \"Rate Prompt\" dialog, the dialog exceeds the visible area of the screen, making it difficult to interact with.\n\nTo Reproduce\nSteps to reproduce the behavior:\n\nGo to the Playground page of the application.\nEnter a very long prompt in the input field.\nOpen the \"Rate Prompt\" dialog.\nObserve that the dialog is larger than the visible screen area, creating usability issues.\nExpected behavior\nThe \"Rate Prompt\" dialog should be responsive and fit within the visible screen area, allowing users to interact with it without scrolling or resizing the window manually.\n\nScreenshots\n(If possible, attach screenshots here to visually demonstrate the issue.)\n\nDesktop (please complete the following information):\n\nOS: Windows 11\nBrowser: Google Chrome\nVersion: 131.0.6778.265\n\nAdditional context\nThis issue impacts usability significantly, especially on smaller screens or devices with limited resolution. It would be helpful to ensure that dialogs are dynamically resized or scrollable to maintain accessibility.",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/236/comments",
    "author": "derfloDev",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-26T18:50:33Z",
        "body": "Hey,\n\nthank you for your pull request. This bug is already fixed in my local branch.\nI really appreciate that. \n\n"
      }
    ]
  },
  {
    "number": 234,
    "title": "Prompt Tags and existing Tags not working",
    "created_at": "2025-01-26T11:02:12Z",
    "closed_at": "2025-02-10T22:50:29Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/234",
    "body": "When I set \"Use specific tags in prompt?\" to \"Yes\", I encounter the following error:\n\"Error  \nCannot read properties of null (reading 'replace')\"\n\nI also tried enabling \"Use existing Correspondents and Tags?\" to restrict tag creation, but the issue persists, and new tags are still being created unexpectedly.\n\nVersion 2.3.1",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/234/comments",
    "author": "Sinthos",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-26T22:31:37Z",
        "body": "I can cofirm the bug aswell. Thanks for reporting."
      }
    ]
  },
  {
    "number": 226,
    "title": "Add required paperless permissions to documentation",
    "created_at": "2025-01-24T14:39:41Z",
    "closed_at": "2025-01-24T15:27:39Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/226",
    "body": "**Is your feature request related to a problem? Please describe.**\nThe description does not mention the permissions required by the user used by paperless-ai. Improper setup of permissions let paperless-ai fail.\n\n**Describe the solution you'd like**\nIn some section of the manual, it is described what permissions the paperless-user for paperless-ai does need to have in paperless.\n\n**Describe alternatives you've considered**\nTry&Error. Granted:\n* Documents: read\n* Tags: read and add\n* Correspondents: read\n* Document type: read\n* Storage path: read\n* User: read\n* Custom Field: read\n\nNow, documents are at least processed by paperless-ai, yet they fail _after_ ai-analysis has been applied to them. I am hesitant to grant paperless-ai edit permission on the document itself because I do not know what would be impact.\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/226/comments",
    "author": "bjoernwuest",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-24T14:41:57Z",
        "body": "It needs superadmin rights to use the API. "
      },
      {
        "user": "bjoernwuest",
        "created_at": "2025-01-24T15:02:58Z",
        "body": "Ok, then it would be good to (a) mention that and (b) to explain why this privilege is required. I mean superadmin is quite \"much\". Does it write back to paperless? What it writes back to paperless? Does it delete from paperless (apart tags)? Etc..\n\nPlease understand that some people may rely on paperless doing their paper-stuff paperless :)"
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-24T15:07:50Z",
        "body": "I mean you could easily look into the code what it does. It's mostly commented or has pretty much self explanatory function names. \n\nBut yes of course it needs rights to write back to paperless. How is it supposed to function without these rights?\n\nAlso it needs access to the /users/ api to determine its own userid for a check of the rights to edit a document. \n\nIt deleted nothing at all till now. \n\n"
      },
      {
        "user": "bjoernwuest",
        "created_at": "2025-01-24T15:27:39Z",
        "body": "Sorry, while I understand the concept of open source, I am also used to have documentation from open source. Let me see if I can spend some time next week and I will make a proposal of the documentation.\n\nBTW: how to work without writing back to paperless (except the tag)? Well, paperless-ai has it's own working directory. It could use its own data base. There is a nice SQLite integration with node.js . Actually, if you do not plan to have paperless integrate your solution, this would make your solution more robust since you do not have to rely on the evolution / changes of paperless."
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-24T15:32:32Z",
        "body": "Oh no please don't waste your time into making a documentation. I am working an a major update that will almost change the entire Codebase. With that I will autogenerate a documentation. \n\nThe thing you said to use its own database is already used for statistics, history, users, metrics and so on. \n\nBut it needs the api from paperless for tags, correspondents, dates and document type. There is no way getting around that. "
      }
    ]
  },
  {
    "number": 222,
    "title": "Document has no content, skipping analysis",
    "created_at": "2025-01-24T07:36:07Z",
    "closed_at": "2025-01-26T22:28:58Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/222",
    "body": "**Describe the bug**\nAfter a few hours of operation, a series of PDF documents (originating from emails) appears marked as \"no content,\" causing Paperless AI to get stuck in a loop, repeatedly trying to parse the same documents.\n\n**How to Reproduce**\nJust have around 25 not parsable documents.\n\n**Expected behavior**\nThe documents should be marked as unprocessable and skipped in the next loop.\n\n**Screenshots**\n```\n[DEBUG] Found existing tag \"unprocessed\" via API with ID 40\n[DEBUG] Filtering documents for tag IDs: [ 40 ]\n[DEBUG] Fetched page 1, got 73 documents. [DEBUG] Total so far: 73\n[DEBUG] Fetched page 2, got 100 tags. [DEBUG] Total so far: 200\n[DEBUG] Finished fetching. Found 73 documents.\n[DEBUG] Fetched page 3, got 96 tags. [DEBUG] Total so far: 296\n[DEBUG] Document 2504 has no content, skipping analysis\n[DEBUG] Document 2509 has no content, skipping analysis\n[DEBUG] Document 2516 has no content, skipping analysis\n[DEBUG] Document 2517 has no content, skipping analysis\n[DEBUG] Document 2532 has no content, skipping analysis\n[DEBUG] Document 2552 has no content, skipping analysis\n[DEBUG] Document 2553 has no content, skipping analysis\n[DEBUG] Document 2597 has no content, skipping analysis\n[DEBUG] Document 2598 has no content, skipping analysis\n[DEBUG] Document 2626 has no content, skipping analysis\n[DEBUG] Document 2652 has no content, skipping analysis\n[DEBUG] Document 2653 has no content, skipping analysis\n[DEBUG] Document 2732 has no content, skipping analysis\n[DEBUG] Document 2733 has no content, skipping analysis\n[DEBUG] Document 2788 has no content, skipping analysis\n[DEBUG] Document 2789 has no content, skipping analysis\n[DEBUG] Document 2801 has no content, skipping analysis\n[DEBUG] Document 2893 has no content, skipping analysis\n[DEBUG] Document 2894 has no content, skipping analysis\n[DEBUG] Document 2895 has no content, skipping analysis\n[DEBUG] Document 2924 has no content, skipping analysis\n[DEBUG] Document 2925 has no content, skipping analysis\n[DEBUG] Document 2926 has no content, skipping analysis\n[DEBUG] Document 2946 has no content, skipping analysis\n[INFO] Task completed\n```\n\n**Additional context**\nParsing document incoming from an email. Password-protected or encrypted documents.\n\n\nI just found that after ~500 documents paperless-ai stucked on it for whole night :) ",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/222/comments",
    "author": "Baael",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-24T07:45:43Z",
        "body": "Hmm I mean that check should ony be a matter of few seconds, so reprocessing thesse files will not take minute in my expectation.\nBut the \"problem\" is that regarding doing that I also have to rewrite the whole database structure, the dashboard frontend and the main scanning function. I mean its an edge case right now as this occurres very rarely. \n\nI understand you issue but I dont see it stuck there. Stuck would mean that the application does not do anything after that specific case. But looking at the `[INFO] Task completed` it seems to work as expected.\n\n`I just found that after ~500 documents paperless-ai stucked on it for whole night :)`\nWhat do you mean by 'for a whole night'. \n\n"
      },
      {
        "user": "Baael",
        "created_at": "2025-01-24T07:53:16Z",
        "body": "I have around 1000 documents to process, 480 with tag \"unprocessed\" left. \n\n> I understand you issue but I dont see it stuck there. Stuck would mean that the application does not do anything after that specific case. But looking at the [INFO] Task completed it seems to work as expected.\n\nI will check everything again, cause I have again a feeling that I was too fast and I am the Bug. "
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-26T22:28:58Z",
        "body": "No activity anymore. Closing as stale."
      }
    ]
  },
  {
    "number": 218,
    "title": "Login with correct username but wrong password fails to display 'Invalid credentials' message",
    "created_at": "2025-01-23T08:34:46Z",
    "closed_at": "2025-01-23T10:06:52Z",
    "labels": [
      "bug",
      "investigating"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/218",
    "body": "**Describe the bug**\nWhen attempting to log in with an incorrect username, the user is shown an 'Invalid credentials' message. However, this message does not appear if the username is correct but the password is incorrect.\n\n**To Reproduce**\nSteps to reproduce the behavior:\n1. Go to login page\n2. Enter correct username, wrong password\n3. Click 'Sign in'\n\n**Expected behavior**\nThe user is informed that the password is incorrect.\n\n**Desktop (please complete the following information):**\n - OS: macOS\n - Browser: Brave\n - Version: Version 1.74.48 Chromium: 132.0.6834.83 (Offizieller Build) (arm64)\n\n**Additional context**\nVery small change, but could improve the usability.\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/218/comments",
    "author": "peterlang-p",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-23T10:06:52Z",
        "body": "Thanks for reporting. Found the issue and fixed it. Will be available with the next release."
      }
    ]
  },
  {
    "number": 215,
    "title": "Tried with Ollama and Deepseek-r1",
    "created_at": "2025-01-22T15:22:46Z",
    "closed_at": "2025-01-23T07:43:32Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/215",
    "body": "Hi,\n\nSo I was successful in setting everything up and I can chat with my ollama deepseek-r1 model via the paperless-ai gui.\n\nHowever it has trouble analyzing the provided file (it is a pdf and the ocr from paperless was pretty spot on). It was able to read parts of it but couldn't manage to answer in more detail:\n\n```\nAlright, so I need to figure out what the document is talking about. The user greeted me in German and asked what's going on with it. I responded by saying that without seeing the content, I can't provide a specific answer.\nOkay, since the user is asking about the topic of a document they provided earlier, but now it seems like there might be some confusion because the initial query didn't include an attachment or any specific details. Maybe the user sent the question after sending the document but didn't attach it properly, or perhaps they only included text.\n\nI should make sure to inform them that I can't access external content and ask for more information. It's important to prompt them to provide specifics like headings, keywords, or key points from the document so I can assist better. Also, if there were images or charts, mentioning those would be helpful.\n\nMaybe I'll phrase it in a friendly and supportive way to encourage them to share whatever details they have. That way, I can help them understand how to proceed or what information is needed for an accurate response.\n\nIhr Dokument seems to be about an unspecified topic since no specific content was provided. To assist you effectively, please provide more details such as the main subject, key points, headings, keywords, or any relevant context from your document. This will enable me to offer a more precise and helpful response.\n```\n\nAfter inquiring more I get this response:\n\n```\nOkay, so the user sent me this pretty detailed query about a Kia electric car and then added that they provided a document. Hmm, but when I look at their message, it's all in one block without any separation between their initial question and the additional info.\nWait, maybe they didn't realize how to format their messages properly here. They probably intended to ask something specific about the car details they provided. So my response should acknowledge that they included a document but also make sure I understand what exactly they need help with.\n\nI should check if there's any specific information they want me to focus on, like the electric range, CO2 emissions, or maybe something else from the document. It seems they might be looking for assistance interpreting or analyzing the provided data about their Kia EV9.\n\nAlso, the user mentioned that the CO2 emissions are 0 g/km, which is interesting because traditional combustion engines have high CO2 output. So perhaps they're curious about why this is happening with an electric vehicle and what implications that has on fuel costs over time.\n\nI should also consider if there's any regulatory information or tax benefits since the steuerbefreiung (tax holiday) was mentioned. The user might be looking into whether this car could save them money in taxes or running costs over a few years.\n\nAnother thing to think about is the upfront cost versus the long-term savings with an electric vehicle compared to a traditional one. Maybe they're evaluating if it's worth switching to electric based on their driving habits and budget.\n\nI need to make sure my response is clear, friendly, and open-ended so they know I'm here to help them explore whatever aspects of the document they're interested in.\n\nIt seems you've provided a detailed document about a Kia EV9. However, your message appears to be a bit disjointed and may not have been formatted properly. Could you clarify or provide more specific details about what you'd like me to focus on? For example, are you asking for an interpretation of the data, an analysis, or something else related to this document? Let me know how I can assist!\n```\n\nWith which models was paperless ai tested? Maybe deepseek just doesn't do a good job with it?\nThe response doesn't seem to be very good:\n\nNo tags or correspondent found in response from Ollama for Document.\nPlease review your prompt or switch to OpenAI for better results.\n\nRealizing that Deepseek-r1 might be a bad choice for this I tested llama 3.1 with similar results.\nIt seems that the AI doesn't get the whole ocr'd document as a prompt",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/215/comments",
    "author": "nabbl",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-22T16:39:38Z",
        "body": "I tested all of them and all did pretty well. "
      },
      {
        "user": "gima84",
        "created_at": "2025-01-22T17:19:28Z",
        "body": "Deepseek-r1 is not ready to respond with a structured JSON. So automation won't work with paperless-ai I think (I tried and nothing happened, as expected)."
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-22T18:27:32Z",
        "body": "I used deepseek chat, not r1. "
      },
      {
        "user": "iyoschi",
        "created_at": "2025-01-22T23:45:04Z",
        "body": "Have testet both. But GPT 4o gave significantly better results. For around 100 normal documents without excess length, i paid 5 cents in tokens, absolutely fine! With Ollama: I was wondering, did it include anything at all? :D"
      }
    ]
  },
  {
    "number": 212,
    "title": "Weak password is ignored?",
    "created_at": "2025-01-22T08:56:31Z",
    "closed_at": "2025-02-03T00:14:27Z",
    "labels": [
      "investigating",
      "stale"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/212",
    "body": "**Describe the bug**\nWhen doing the setup and inserting a weak password, it tells me that the password is too weak, then nothing happens and aftzer clicking somewhere on the site it says it is done and will restart.\n\n**To Reproduce**\nSteps to reproduce the behavior:\n1. fresh install\n2. open setup\n3. select weak password\n4. click on finish\n5. click somewhere else after the dialogue\n\n**Expected behavior**\nNot finishing the setup when clicking somewhere on the page.\n\n**Desktop (please complete the following information):**\n - OS: Ubuntu 24.04\n - Browser Vivaldi\n - Version [e.g. 22]",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/212/comments",
    "author": "praetorianer777",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-31T00:13:57Z",
        "body": "This issue has been marked as stale due to inactivity. Please respond to keep it open."
      },
      {
        "user": "clusterzx",
        "created_at": "2025-02-03T00:14:27Z",
        "body": "This issue has been closed due to lack of response."
      }
    ]
  },
  {
    "number": 208,
    "title": "Configurable timeout for \"document analysis failed\"",
    "created_at": "2025-01-21T19:25:42Z",
    "closed_at": "2025-01-21T20:28:17Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/208",
    "body": "**Is your feature request related to a problem? Please describe.**\nThe document analysis failed: timeout of 1200000ms  seems to be fixed.\n\n**Describe the solution you'd like**\nSet the timeout in the config page.\n\n**Describe alternatives you've considered**\nSet the timeout with env.\n\n**Additional context**\n\n[ERROR] processing document 2694: Error: [ERROR] Document analysis failed: timeout of 1200000ms exceeded\n    at processDocument (/app/server.js:122:11)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at listOnTimeout (node:internal/timers:575:9)\n    at process.processTimers (node:internal/timers:549:7)\n    at async scanDocuments (/app/server.js:230:24)\n    at async Task._execution (/app/server.js:308:7)",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/208/comments",
    "author": "jurjevic",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-21T19:29:35Z",
        "body": "I think you do better to fix the error that's causing a 20min timeout not to be enough. \n\nThat's clearly abnormal. "
      },
      {
        "user": "jurjevic",
        "created_at": "2025-01-21T20:09:37Z",
        "body": "> That's clearly abnormal.\n\nWell, you're right - this is abnormal. I'm using Ollama with gemm2 27b on a iGPU. I would not mind even if it runs for 60 min. at night, as long as the results are good.\n\ngemma2:9b works okay, but produces bad results with some documents:\n```\nExtracted JSON String: {\n  \"title\": \"Abfallgebührenbescheid\",\n  \"date\": \"01.01.2025\",\n  \"customer_name\": null,\n  \"customer_address\": null,\n  \"invoice_number\": \"5.XXXX.XXXXXX.1\",\n  \"period\": \"2024-2025\",\n  \"total_amount\": \"XX.XX €\",\n  \"payment_details\": {\n    \"iban\": \"DEXX XXXX XXXX XXXX XXXX XX\",\n    \"bic\": \"PBNKDEFF700\",\n    \"bank\": \"Postbank Ndi der Deutsche Bank\"\n  },\n  \"items\": [\n    {\n      \"description\": \"Müllgrundgebühr\",\n      \"amount\": \"XX.00 €\",\n      \"period\": \"2025\"\n    }\nError parsing JSON from response: Expected ',' or ']' after array element in JSON at position 466 (line 19 column 6)\nAttempting to sanitize the JSON...\nFinal JSON parsing failed after sanitization.\nThis happens when the JSON structure is too complex or invalid.\nThat indicates an issue with the generated JSON string by Ollama.\nSwitch to OpenAI for better results or fine tune your prompt.\nNo tags or correspondent found in response from Ollama for Document.\nPlease review your prompt or switch to OpenAI for better results.```"
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-21T20:28:06Z",
        "body": "Sorry but the 20min timeout is more then enough. Running on a iGPU doesn't make any sense. I will give you the advice to switch your Ollama to use CPU instead of GPU. That will increase your speed already. A too small GPU bottlenecks more then just using CPU + RAM directly as GPU -> VRAM -> CACHE OUT TO RAM -> FILL VRAM - GPU PROCESSING and that in a loop over and over again.\n\nSo tldr:\nIf your GPU cant handle a prompt in under 20min just switch to a Cloud Provider or stock up your hardware.\n\n"
      }
    ]
  },
  {
    "number": 204,
    "title": "Option to ignore ownership",
    "created_at": "2025-01-21T13:19:48Z",
    "closed_at": "2025-01-21T16:26:17Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/204",
    "body": "**Is your feature request related to a problem? Please describe.**\nI made a new paperless-ngx superuser for paperless-ai to work on the documents. This way I can get its own API key and see what changes were done by the AI in the document history. Unfortuately, ai by default works on owned documents only:\n[DEBUG] Document belongs to: 5, skipping analysis\n[DEBUG] Document 511 not owned by user, skipping analysis\n[INFO] Task completed\n\n**Describe the solution you'd like**\nAdd an option to ignore ownership or add instructions for which users to process otherwise. \n\n**Describe alternatives you've considered**\nI logged in with my credentials, obviously. Anyway I organize the documents for multiple users ans like to have them processed as well.\n\nI'd be happy if you consider this option. \nBtw. great docker/app and exactly what I was thinking of previously. \nBest regards",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/204/comments",
    "author": "Kosmoshn",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-21T15:30:45Z",
        "body": "Sorry to disappoint you regarding your wishes. But the thing is if the user does not own the document and paperless ai still processes it, it will get back errors over paperless-ngx api. \n\nIt is not possible unless the document is owned by the user or specially adjusted in the backend of Django. "
      }
    ]
  },
  {
    "number": 199,
    "title": "How about enabling discussions on this project?",
    "created_at": "2025-01-21T10:52:19Z",
    "closed_at": "2025-01-21T11:38:08Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/199",
    "body": "That would be the right place for posting “questions” and not dilute your issues here.\n\nPoint in case, I am here to ask what/how exactly this feature of “Use specific tags in prompt?\" works.",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/199/comments",
    "author": "ovizii",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-21T11:08:25Z",
        "body": "Already enabled or am I missing something ? "
      },
      {
        "user": "ovizii",
        "created_at": "2025-01-21T11:38:08Z",
        "body": "I'm sorry, I must have had a blonde moment 🙈"
      }
    ]
  },
  {
    "number": 198,
    "title": "Configuration via variables",
    "created_at": "2025-01-21T08:36:39Z",
    "closed_at": "2025-01-23T07:46:19Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/198",
    "body": "Almost all, if not all, options during the first time configuration could be set via docker env variables instead of through the WebUI. I would much prefer this.",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/198/comments",
    "author": "ThisIsTenou",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-21T16:18:28Z",
        "body": "I considered, then threw it off, reconsidered it and ultimately I will not enable that by default. \n\nReasons why:\nEven with the more as self explaining Web Setup and all informations of how the functions work, what to consider regarding networking between docker and localhost, there are plenty Issues opened with users complaining that paperless-ai can not connect to whatever. Everytime it was a user produced issue. \nWithout these pre checks that paperless-ai does when hitting \"save\" on the initial setup, there would be x-times more here. \nI will and can not support everybody not understanding how docker and tcp works. \n\nSecondly the Web Setup creates the user and password, sets up the database and so on. That would be all overthrown when I have to implement multiple ways of installing. "
      }
    ]
  },
  {
    "number": 196,
    "title": "Ollama connection with basic authentication",
    "created_at": "2025-01-20T20:02:15Z",
    "closed_at": "2025-01-23T07:46:53Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/196",
    "body": "Hello, is it possible to integrate Ollama, which requires basic user and password authentication?\n\nMfg\n\nMathias",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/196/comments",
    "author": "mathschut",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-23T07:46:53Z",
        "body": "Not at the moment, sorry. Maybe in the future."
      }
    ]
  },
  {
    "number": 194,
    "title": "Chat feature not working with Custom AI agents",
    "created_at": "2025-01-20T18:51:42Z",
    "closed_at": "2025-01-20T19:30:20Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/194",
    "body": "**Describe the bug**\nChat not working with \"Custom\" agents.\n\n**To Reproduce**\nSteps to reproduce the behavior:\n1. Configure a Custom provider, in my case local llama.cpp.\n2. Process a document.\n3. Open a chat for it, from any access.\n\n**Expected behavior**\nChat to start using the custom provider.\n\n\n**Desktop (please complete the following information):**\n - OS: Any\n - Browser: Any\n - Version: 2.30\n\n**Additional context**\nI can see in the logs that the chat feature seems to expect OpenAI:\npaperless-ai           | [ERRO] initializing chat: Error: OpenAI client not initialized\npaperless-ai           |     at ChatService.initializeChat (/app/services/chatService.js:64:15)\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/194/comments",
    "author": "chwoa",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-20T19:25:16Z",
        "body": "You are right! Forgot to implement it there. Pushing an update today!\nThank you very much for reporting."
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-20T19:30:20Z",
        "body": "Fixed :)"
      },
      {
        "user": "chwoa",
        "created_at": "2025-01-20T19:57:23Z",
        "body": "That was quick! Confirmed it is working in 2.3.1. Thank you very much!"
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-20T20:04:05Z",
        "body": "You are very welcome 👍 "
      }
    ]
  },
  {
    "number": 191,
    "title": "Problem setting the tags",
    "created_at": "2025-01-20T16:08:38Z",
    "closed_at": "2025-02-01T00:14:57Z",
    "labels": [
      "stale"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/191",
    "body": "Hy,\n\nWhat does the prompt look like if I don't want to have the tags filled out by paperless. \nIf I customize the prompt with \"3.tags: Do not make any changes to the tags. Only report back the existing ones.\" \nHe then sets all the tags created in paperless for each document.",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/191/comments",
    "author": "denon2002",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-20T16:10:34Z",
        "body": "I will implement a way that even when the LLM doesnt do what you want, only tags or correspondents are added.\nComing in the next days :)"
      },
      {
        "user": "denon2002",
        "created_at": "2025-01-20T16:12:50Z",
        "body": "Hey, thanks. That sounds great. Additionally, it would be great to just allow the document name to be customized."
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-20T16:16:28Z",
        "body": "Noted, so a mix-of-3 or 1-of-3"
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-28T00:14:19Z",
        "body": "This issue has been marked as stale due to inactivity. Please respond to keep it open."
      },
      {
        "user": "clusterzx",
        "created_at": "2025-02-01T00:14:56Z",
        "body": "This issue has been closed due to lack of response."
      }
    ]
  },
  {
    "number": 190,
    "title": "Possibility to edit all existing documents at once with one Prompt",
    "created_at": "2025-01-20T15:46:17Z",
    "closed_at": "2025-01-20T16:48:21Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/190",
    "body": "Currently, you can only edit a certain number of documents manually or individually via the Playground.\n\nIt would also be useful to be able to edit all documents in Paperless.\nCurrently, I have to go through all 900 documents individually to be able to edit them via the API.",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/190/comments",
    "author": "MedPlex98",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-20T15:50:22Z",
        "body": "I quite dont understand that to be honest. You could just turn on that all documents will be processed automatically? \nWhat do you mean by go through all 900 documents. \n\nCan you clarify that and also give me a hint how this would work in your imagination? Thx 😺 "
      },
      {
        "user": "MedPlex98",
        "created_at": "2025-01-20T15:53:13Z",
        "body": "At the moment, I only have the option of reprocessing all documents in Paperless itself.\nDoes this also trigger Paperless AI?\n\nBecause I can't find such an option for all documents in the AI web interface."
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-20T15:55:58Z",
        "body": "You can in fact go to history -> reset all. \nThat will trigger paperless-ai to reprocess all documents. But that does not clear them in paperless-ngx."
      },
      {
        "user": "MedPlex98",
        "created_at": "2025-01-20T16:03:25Z",
        "body": "The “Clear all” function only resets the documents to the original status, as the message says:\n“Are you sure you want to reset all documents to their original values?”\n\nWhat I mean is that I can have all existing documents edited by Paperless-AI. So that the tool goes through all documents and makes the changes."
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-20T16:08:48Z",
        "body": "What you are talking about is the main and most intended use of paperless-ai.\nWhen setting it up and you do not specify that only documents with tag \"xyz\" gets processed, it will instantly start to process all documents under you useraccount automatically.\n\nAber nochmal auf Deutsch:\nDas was du da beschreibst ist die Grundfunktion die Paperless-AI schon hat. Wenn du nichts außer der Reihe konfigurierst wie \"verarbeite nur Dokuemente mit Tag xyz\" dann wird sofort alles durch die KI gejagt und getaggt. \nDeshalb verstehe ich deine Frage nicht 😆 Nicht böse gemeint aber ich bin mir nicht sicher ob wir an einander vorbei sprechen."
      },
      {
        "user": "MedPlex98",
        "created_at": "2025-01-20T16:11:38Z",
        "body": "Ah perfekt, dann schreib ich mal auf Deutsch xD\nVll. liegts auch an Deepl xDD\n\nIch weiß, was die Funktion von Paperless-AI ist und was das Tool so kann. Allerdings hab ich das Problem, dass aktuell kein Dokument automatisch verarbeitet wird.\nDie History ist leer, unter Playground werden maximal 16 angezeigt und sonst find ich halt keine Option alle Dokumente auf einmal verarbeiten zu können.\nDer Cronjob ist auf alle 5 Minuten mittlerweile eingestellt, passieren tut aber nichts.\nWenn du Discord hast, können wir das gern da auch mal durch gehen."
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-20T16:13:01Z",
        "body": "Klar, gerne in Discord :) \n@clusterzx"
      },
      {
        "user": "MedPlex98",
        "created_at": "2025-01-20T16:48:21Z",
        "body": "Configuration mistake"
      }
    ]
  },
  {
    "number": 182,
    "title": "Improving the History Page",
    "created_at": "2025-01-18T05:32:48Z",
    "closed_at": "2025-01-23T07:59:01Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/182",
    "body": "**Is your feature request related to a problem? Please describe.**\nThe history page could be improved.\n\n**Describe the solution you'd like**\n\n1. Show the date on the history page.\n2. Wrap the pagination at the bottom.\n3. Allow search by date.\n4. Allow to sort by the headers.\n\n\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/182/comments",
    "author": "grosejon",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-23T07:59:01Z",
        "body": "A complete rework of the History and Chat site is on its way 😆 \nJust give me some couple more days.\n\nThanks for your contribution. "
      }
    ]
  },
  {
    "number": 171,
    "title": "2.2.0 - JSON not completed. Correspondent / Tag not updated.",
    "created_at": "2025-01-17T08:41:09Z",
    "closed_at": "2025-01-17T09:11:37Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/171",
    "body": "Hi, I am not sure if it's a bug. Testing with 2.2.0. (and different mistral-large models) \n\nFor several documents (5 out of 14) the JSON is not completed / closed:\n\n```\nExtracted JSON String: {\n  \"title\": \"Netzanschluss und Betrieb einer Stromerzeugungsanlage\",\n  \"sender\": {\n    \"name\": \"SachsenNetze HS.HD GmbH\",\n    \"address\": \"Friedrich-List-Platz 2, 01069 Dresden\",\n    \"contact\": {\n      \"phone\": null,\n      \"email\": null,\n      \"website\": \"www.sachsennetze.de\"\n    }\n  },\n  \"recipient\": {\n    \"name\": null,\n    \"address\": null\n  },\n  \"date\": null,\n  \"subject\": \"Netzanschluss und Betrieb einer Stromerzeugungsanlage\",\n  \"body\": [\n    {\n      \"type\": \"paragraph\",\n      \"content\": \"Sehr geehrte Damen und Herren,\"\n    }\nError parsing JSON from response: Expected ',' or ']' after array element in JSON at position 534 (line 22 column 6)\nAttempting to sanitize the JSON...\nFinal JSON parsing failed after sanitization.\n\n```\n\nFor that example the correspondent and tags are not filled. \n\nIs it a bug or related to the Ollama Modell? Any Idea?",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/171/comments",
    "author": "gima84",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-17T09:10:38Z",
        "body": "It is related to the Ollama response. "
      }
    ]
  },
  {
    "number": 166,
    "title": "Official Discord",
    "created_at": "2025-01-16T21:14:45Z",
    "closed_at": "2025-01-17T22:13:49Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/166",
    "body": "**Is your feature request related to a problem? Please describe.**\nI'd love to have a public discord channel for this. i have a lot of tiny questions, suggestions and would just generell love to see what people do with this. \n\n**Describe the solution you'd like**\nCreate a Discord Channel and link it here\n\n**Describe alternatives you've considered**\nCreating issues i guess would be an option. but thats more like spam and a lot of people would not do this for simpler setup or feature questions. this is discouraging.\n\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/166/comments",
    "author": "martinjuhasz",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-16T21:20:45Z",
        "body": "That's a great idea 😇\nI will create a discord the next days. \n\nLove this community and this will be a super nice way to keep in touch. "
      },
      {
        "user": "martinjuhasz",
        "created_at": "2025-01-17T07:58:47Z",
        "body": "absolutely. thanks for this!"
      }
    ]
  },
  {
    "number": 156,
    "title": "Login failing",
    "created_at": "2025-01-14T21:10:53Z",
    "closed_at": "2025-01-14T21:41:57Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/156",
    "body": "**Describe the bug**\r\nAfter finalizing the setup I am not able to log back into the dashboard.\r\n\r\n**To Reproduce**\r\n- finalize setup with user name and password\r\n- save settings\r\n- once restarted, log in through the UI\r\n\r\nlog shows:\r\nLogin attempt for user: PaperlessAI\r\nPassword validation result: false\r\n\r\nI have tried removing the .env (and config) files.\r\nremoved the whole container\r\n\r\nPlease let me know if there is more information I can provide.\r\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/156/comments",
    "author": "CreekDuzz",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-14T21:37:11Z",
        "body": "You could look into the database what is stored in the \"users\" table. But the password is bcrypt encrypted. \n\nYou can go to any website you want where you can generate a bcrypt hash and paste it the generated hash over the Old one. \n\nBut normally there is no bug or issue known regarding your description. "
      },
      {
        "user": "CreekDuzz",
        "created_at": "2025-01-14T21:41:57Z",
        "body": "That was it. I did not think about the DB containing the login info. I removed the old DB and once the new were created, its working. Thank you!"
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-14T21:45:47Z",
        "body": "Maybe you entered only some false login credentials thinking of a different password or capslock. I don't know 😅\n\nBut there is no bug currently known, the login page is present since some versions now. If there was then there would be more people with the same issue. \n\nSo who knows what it was, luckily it works now! Have a great day ❤️"
      }
    ]
  },
  {
    "number": 153,
    "title": "Add option for the ollama server to not be online all the time",
    "created_at": "2025-01-14T13:20:04Z",
    "closed_at": "2025-01-28T00:14:22Z",
    "labels": [
      "stale"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/pull/153",
    "body": "Hi,\r\n\r\nI have the problem that the Ollama server i am running is on my gaming PC and therefor not online all the time but the paperless and paperless-ai are running on my home server and therefor are always online.\r\n\r\nThat's why I added the OLLAMA_SKIP_VALIDATION env variable to only check the availability of the Ollama server when it is needed. This is when doing the configuration, when running the initial scan and when manually running the scan and for the scan intervals (Hope I got all the points)",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/153/comments",
    "author": "sebbi08",
    "comments": [
      {
        "user": "DushanthaS",
        "created_at": "2025-01-14T15:57:39Z",
        "body": "Plus one for this change: Most of the self-hosted community will not trust Open AI with their documents, and not many people have GPUs in their servers. This will be a nice addition in a privacy standpoint. "
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-14T17:26:53Z",
        "body": "> Hi,\r\n> \r\n> I have the problem that the Ollama server i am running is on my gaming PC and therefor not online all the time but the paperless and paperless-ai are running on my home server and therefor are always online.\r\n> \r\n> That's why I added the OLLAMA_SKIP_VALIDATION env variable to only check the availability of the Ollama server when it is needed. This is when doing the configuration, when running the initial scan and when manually running the scan and for the scan intervals (Hope I got all the points)\r\n\r\nThats a good addition. Will be implemented."
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-14T17:28:31Z",
        "body": "> Plus one for this change: Most of the self-hosted community will not trust Open AI with their documents, and not many people have GPUs in their servers. This will be a nice addition in a privacy standpoint.\r\n\r\nI dont know what your comment has to do with OpenAI and how this PR is related to even something you mentioned here. But I agree on your statement regardless 😆 "
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-25T00:13:26Z",
        "body": "This pull request has been marked as stale due to inactivity. Please update it to keep it open."
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-28T00:14:21Z",
        "body": "This pull request has been closed due to lack of response."
      }
    ]
  },
  {
    "number": 140,
    "title": "ollama only: [ERROR] processing document 26142: Error: [ERROR] Document analysis failed: ENAMETOOLONG: name too long",
    "created_at": "2025-01-13T17:17:18Z",
    "closed_at": "2025-01-13T18:11:43Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/140",
    "body": "**Describe the bug**\r\nreset history, launched version 2.17, got this error in question and in docker log a long list of tags and correspondents, which i cannot paste here, because of privacy issues.\r\nAfter the list of tags and correspondents i get this:\r\n`at async open (node:internal/fs/promises:639:25)\r\nat async Object.writeFile (node:internal/fs/promises:1213:14)\r\nat async OllamaService.analyzeDocument (/app/services/ollamaService.js:34:17)\r\nat async processDocument (/app/server.js:94:20)\r\nat async scanInitial (/app/server.js:170:24)\r\nat async startScanning (/app/server.js:279:5) {\r\nerrno: -36,\r\ncode: 'ENAMETOOLONG',\r\nsyscall: 'open',`\r\n\r\nDocuments in paperless-ngx are not tagged. History in Paperless-AI is empty\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. select ollama and llama3.2\r\n2. ust reset history and let it run\r\n3. check docker logs\r\n\r\n\r\n**Expected behavior**\r\nanalyzing documents without error\r\n\r\n**Screenshots**\r\n\r\n**Additional context**\r\nGreat release! First version which run error free a whole batch with openai. But please give ollama more love. :-)\r\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/140/comments",
    "author": "mamema",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-13T17:40:51Z",
        "body": "> Great release! First version which run error free a whole batch with openai. But please give ollama more love. :-)\r\n\r\nYou are like godspeed on that new version 😆 First of all : GOOD to hear that the OpenAI batch ran through the first time without any issues. \r\n\r\nBut oh boy I found the error.... Gonna push an update ASAP!\r\n\r\n\r\n"
      },
      {
        "user": "paradizelost",
        "created_at": "2025-01-13T17:50:00Z",
        "body": "my #143  is the same as this one"
      },
      {
        "user": "mamema",
        "created_at": "2025-01-13T17:58:43Z",
        "body": "> my #143 is the same as this one\r\n\r\nyes but i won!. You were 30 minutes late. :-)"
      }
    ]
  },
  {
    "number": 116,
    "title": " Invalid date format - Error receiveed date",
    "created_at": "2025-01-13T07:55:07Z",
    "closed_at": "2025-01-13T16:21:16Z",
    "labels": [
      "bug",
      "investigating"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/116",
    "body": "**Describe the bug**\r\nwith openai (ollama not tested), the document gets processed and gets referenced as tagged and with correspondent in history, but actually isn't tagged in paperless. I have the feeling i have this since several versions....\r\n\r\n`\t\t  [DEBUG] Thumbnail already cached\r\n\t\t\t\t  [DEBUG] [13.01.25, 07:45] OpenAI request sent\r\n\t\t\t\t  [DEBUG] [13.01.25, 07:45] Total tokens: 13224\r\n\t\t\t\t  [DEBUG] Refreshing tag cache...\r\n\t\t\t\t  [DEBUG] Tag cache refreshed. Found 25 tags.\r\n\t\t\t\t  [DEBUG] Found tag \"2023\" in cache with ID 630\r\n\t\t\t\t  [DEBUG] Successfully created tag \"Wertpapierdepot\" with ID 660\r\n\t\t\t\t  [DEBUG] Successfully created tag \"Depotführung\" with ID 661\r\n\t\t\t\t  [DEBUG] Found existing tag \"Finanzdienstleistungen\" via API with ID 654\r\n\t\t\t\t  [DEBUG] Found existing tag \"ai-processed\" via API with ID 656\r\n\t\t\t\t  [DEBUG] Response Correspondent Search:  { id: 117, name: 'Postbank - eine Niederlassung der Deutsche Bank AG' }\r\n\t\t\t\t  [DEBUG] Found existing correspondent \"Postbank - eine Niederlassung der Deutsche Bank AG\" with ID 117\r\n\t\t\t\t  [DEBUG] Original data for document Produktantrag- PostbankDepot saved\r\n\t\t\t\t  [DEBUG] Document Eröffnung Depotverbindung bei Postbank added to processed_documents\r\n\t\t\t\t  [DEBUG] Metrics added for document 26136\r\n\t\t\t\t  [DEBUG] Document Eröffnung Depotverbindung bei Postbank added to history\r\n\t\t\t\t  [DEBUG] Current tags for document 26136: [ 38, 20 ]\r\n\t\t\t\t  [DEBUG] Adding new tags: [ 630, 660, 661, 654, 656 ]\r\n\t\t\t\t  [DEBUG] Current correspondent: 79\r\n\t\t\t\t  [DEBUG] New correspondent: 117\r\n\t\t\t\t  [DEBUG] Combined tags: [\r\n\t\t\t\t     38,  20, 630,\r\n\t\t\t\t    660, 661, 654,\r\n\t\t\t\t    656\r\n\t\t\t\t  ]\r\n\t\t\t\t  [DEBUG] Document already has a correspondent, keeping existing one: 79\r\n\t\t\t\t  [ERROR] updating document 26136: Invalid date format: 21-11-2023\r\n\t\t\t\t  [DEBUG-ERROR] Received Date: {\r\n\t\t\t\t  \u0002������\r\n\t\t\t\t  [\r\n\t\t\t\t       38,  20, 630,\r\n\t\t\t\t      660, 661, 654,\r\n\t\t\t\t      656\r\n\t\t\t\t    ],\r\n\t\t\t\t    title: 'Eröffnung Depotverbindung bei Postbank',\r\n\t\t\t\t    created: '21-11-2023',\r\n\t\t\t\t    language: 'de'\r\n\t\t\t\t  }`\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\njust let it run with automated processing\r\n\r\n**Expected behavior**\r\ndocument should be tagged and saved in paperless-ngx\r\n\r\n**Additional context**\r\nIn 2.13 i guess i discovered this the first time, back then, the error in the logs was:\r\n`[DEBUG] Metrics added for document 26133\r\n[DEBUG] Current tags for document 26133: [ 588, 38, 608, 6, 607 ]\r\n[ERROR] updating document 26133: Invalid time value`\r\n\r\nadditional it is interesting (for me), the logs above tell us: \"found existing tag a-processed\". where does paperless-ngx found this? As \"existing\" when:\r\n1.) i've deleted this document from history\r\n2.) this document hasn't this tag in paperless-ngx",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/116/comments",
    "author": "mamema",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-13T07:58:33Z",
        "body": "Yep that's a weird thing I try to counter since several versions. Latest version has an additional layer to protect against invalid date formats but apparently it doesn't help. \n\nI think the best way is that I then update the document without an date in paperless and do only title, tags and correspondent. "
      },
      {
        "user": "mamema",
        "created_at": "2025-01-13T08:03:29Z",
        "body": "oh thats bad then, i find it quite helpful to have the date and work with that.  of course i'm not that deep into this as you are, but paperless ngx is able to resolve correctly: \"Vorschläge:  [21.11.2023][01.01.2025] when i view the document. Perhaps their code can help here. Additionally perhaps linking the date resolution to the document language and or timezone the user is in?"
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-13T08:06:40Z",
        "body": "Ah sorry I mean I don't update the date in paperless when my backend already threw that error. So when everything is fine it will be also added to paperless. \n\nBut only in specific scenarios where OCR may screw up the date there will be then no update or the llm produced an invalid date. "
      }
    ]
  },
  {
    "number": 115,
    "title": "saving found tags in manual mode (ollama and openai) - Error updating tags: document.getElementById(...) is null",
    "created_at": "2025-01-13T07:36:10Z",
    "closed_at": "2025-01-13T16:21:17Z",
    "labels": [
      "bug",
      "investigating"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/115",
    "body": "**Describe the bug**\r\nin 2.16, there is some improvment, that ollama now finds tags more often, in 2.15 sometimes, ollama never found something. But then adding those tags with the \"+\" button and then \"save\" lrad to the error \"Error updating tags: document.getElementById(...) is null\"\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. go to manual\r\n2. select document\r\n3. analyze\r\n4. press + for found tags\r\n5. press save\r\n\r\n**Expected behavior**\r\ntags should be saved without error\r\n\r\n**Additional context**\r\nalso i see (reseted before 2.16 launch) all documents in history (automated run) as proceesed with no contributor and no tags which ONLY occurs with active ollama. With openai, the automated run has values in history\r\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/115/comments",
    "author": "mamema",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-13T07:45:44Z",
        "body": "We are getting there. \nI will rebuild the whole application backend when everything works fine. With all insights I now gathered this will be the best solution. \n\nI did locate the error already, thanks for opening up the issue. \n\nQuite get the feeling needing to pay you here 😂"
      },
      {
        "user": "mamema",
        "created_at": "2025-01-13T07:49:02Z",
        "body": "no! I'm happy to help, let's make this a flying, great, implementation. next bug already found..."
      }
    ]
  },
  {
    "number": 113,
    "title": "Save settings even though the test failed",
    "created_at": "2025-01-12T23:32:47Z",
    "closed_at": "2025-01-13T16:27:54Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/113",
    "body": "Configuring Paperless-ai requires a few moving parts to be setup and running.  When you are having trouble and need to go work on one of the external pieces and come back to the config you are required to setup the config all over again.  Personally I still have not goten any external AI engines to work.  But every time I go back to to try something I have to start from scratch, and or print out what my settings were.  Keys are a nightmare.\r\n\r\nThe Save button refusing to save if not all tests are passed is maddening.  The system needs to save the config as entered even if it does not function so users can go back and tweak without being required to start from scratch.  ",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/113/comments",
    "author": "mjh2901",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-13T15:55:56Z",
        "body": "I dont know what you mean? \r\n\r\nFirst of all your wish to accept all values without checking does not give an benefits, instead it creates much more frustration when the user have to check the container logs to get a hint where a problem is! \r\nSo this is an absolutly no for me.....\r\n\r\nSecond, if you try to setup/or edit settings, hit save and there is a problem then nothing will be cleared. Everything you have entered is still available or just stop closing your tab?\r\n\r\nThird I dont know what users want to \"tweak\" regarding the API Keys or the Ollama URL, what can be tweaked there aside from the prompt of course."
      }
    ]
  },
  {
    "number": 112,
    "title": "Chat dark/light mode switch not working",
    "created_at": "2025-01-12T20:58:24Z",
    "closed_at": "2025-01-12T21:04:16Z",
    "labels": [
      "not-a-bug"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/112",
    "body": "**Describe the bug**\r\nThe button to switch modes isn't working in chat.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to chat\r\n2. Click on the mode switch\r\n3. watch it not work\r\n\r\n**Expected behavior**\r\nI would expect it to switch between light and dark mode.\r\n\r\n**Screenshots**\r\nN/A\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows 10\r\n - Browser: Firefox\r\n - Version: 134.0\r\n\r\n**Smartphone (please complete the following information):**\r\n - Device: [e.g. iPhone6]\r\n - OS: [e.g. iOS8.1]\r\n - Browser [e.g. stock browser, safari]\r\n - Version [e.g. 22]\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/112/comments",
    "author": "NightHawkATL",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-12T21:03:54Z",
        "body": "Thank you for reporting again an issue. Much appreciated as always, but unfortunately this is not a bug, the chat is just a test and beta. It will be completely reworked later on. So right now not a bug more a preview. "
      }
    ]
  },
  {
    "number": 111,
    "title": "[Feature Request] Deep link Paperless-ngx docs from History",
    "created_at": "2025-01-12T14:58:26Z",
    "closed_at": "2025-01-12T19:43:37Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/111",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nI can't easily view a document from Paperless-AI. It'd be nice if I could click on the document in the History tab and it'd open the view document page for the document in Paperless. \r\n\r\n**Describe the solution you'd like**\r\nJust a deep link to my Paperless instance that my Paperless-AI is ingesting from.\r\n\r\n**Describe alternatives you've considered**\r\nPR'ing a template change. 😅 \r\n\r\n**Additional context**\r\nn/a\r\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/111/comments",
    "author": "joestump",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-12T15:34:57Z",
        "body": "I really like your ideas 😆 that will definitly implemented soon! "
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-12T19:43:35Z",
        "body": "Added :)"
      }
    ]
  },
  {
    "number": 106,
    "title": "Unable to remove tags ",
    "created_at": "2025-01-11T17:42:02Z",
    "closed_at": "2025-01-12T19:41:38Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/106",
    "body": "**Describe the bug**\r\nUnable to remove tags \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to Configuration\r\n2. Click on Tags\r\n3. Remove any existing tags\r\n4. Save\r\n5. See the error (Tags not removed after restart) \r\n\r\n**Expected behavior**\r\nWhen saved after removing tags and restart removed tags should not be there. \r\n\r\n\r\n**Desktop (please complete the following information):**\r\n - Browser chrome\r\n - Version 2.1.3\r\n\r\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/106/comments",
    "author": "DushanthaS",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-11T20:19:57Z",
        "body": "Can you explain wich Tags you mean? "
      },
      {
        "user": "DushanthaS",
        "created_at": "2025-01-11T22:30:08Z",
        "body": "I'm sorry if this wasn't very clear. This is about Tags you can specify under Advanced Settings. After the tags had been added, I couldn't remove them, they will still be there after restart. "
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-11T22:36:14Z",
        "body": "Ok, I will investigate this. \r\nYou could meanwhile edit the .env file /app/data/.env manually and remove then and set it to no.\r\n"
      }
    ]
  },
  {
    "number": 105,
    "title": "AI Model API key and Url should be saved until changed",
    "created_at": "2025-01-11T17:06:50Z",
    "closed_at": "2025-01-13T16:50:38Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/105",
    "body": "**Describe the solution you'd like**\r\nI switch a lot between different instances of ollama and online AI solutions.\r\nEvery time i need to enter my api key again. Would be nice if those values are saved until i change them.\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/105/comments",
    "author": "mamema",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-11T22:41:12Z",
        "body": "Accpeted. Good point, I will implement it."
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-13T16:50:35Z",
        "body": "Added with 646b8c9\r\n"
      }
    ]
  },
  {
    "number": 100,
    "title": "Question: With 2.1.2 I need to provide a \"paperless username\". Documents from other owners not scanned. How to overcome?",
    "created_at": "2025-01-11T08:42:50Z",
    "closed_at": "2025-01-12T19:38:42Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/100",
    "body": "Hi there, thanks a lot for this awesome work! \r\nAfter the update of 2.1.2 there is now a field in configuration for \"paperless username\" which is the document owner. I have multiple owners (Family members). Earlier it was working fine for all documents for all owners. I had a \"main admin / super admin\" with API-Token with full access to paperless-ngx / all documents from all owners.\r\n\r\nI am thinking now how to overcome:\r\nIdea 1: Add a feature request to pull owners from paperless-ngx.\r\nIdea 2: Setup 4 paperless-ai instances (each per family member).\r\n\r\nI am thinking about idea 2. With that I have also the possiblibility to play around with a \"test-user\".\r\n\r\nAny comments, concerns, things to have in mind, ideas?",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/100/comments",
    "author": "gima84",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-11T09:23:49Z",
        "body": "Congrats 🎉 as you are the first person I encounter who setup the rights correctly or moreover you gave the superuser access to every document.\n\nThe thing is here in the issues section were so many people with a setup where the superuser do not have the rights for other documents. The result was paperless ai throwing Error 500 and stopping from processing. \n\nMaybe you downgrade to the version you used before until I figure out a solution everyone can use. \n\nBut I really appreciate your input und the awesome community work here of you. \n\nCheers 🥂 "
      }
    ]
  },
  {
    "number": 99,
    "title": "Error during analysis: Unexpected token 'S', \"Something broke!\" is not valid JSON",
    "created_at": "2025-01-11T08:29:06Z",
    "closed_at": "2025-01-12T19:41:38Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/99",
    "body": "**Describe the bug**\r\nwhen large documents are processed, the error in question occurs\r\n\r\n`PayloadTooLargeError: request entity too large\r\nat readStream (/app/node_modules/raw-body/index.js:163:17)\r\nat getRawBody (/app/node_modules/raw-body/index.js:116:12)\r\nat read (/app/node_modules/body-parser/lib/read.js:79:3)\r\nat jsonParser (/app/node_modules/body-parser/lib/types/json.js:138:5)\r\nat Layer.handle [as handle_request] (/app/node_modules/express/lib/router/layer.js:95:5)\r\nat trim_prefix (/app/node_modules/express/lib/router/index.js:328:13)\r\nat /app/node_modules/express/lib/router/index.js:286:9\r\nat Function.process_params (/app/node_modules/express/lib/router/index.js:346:12)\r\nat next (/app/node_modules/express/lib/router/index.js:280:10)\r\nat cors (/app/node_modules/cors/lib/index.js:188:7)`\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n- select a large document (eg 100 pages)\r\n- analyze it in the manual area\r\n\r\n**Expected behavior**\r\ndocument gets processed\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Desktop (please complete the following information):**\r\n - latest docker with app version 2.1.3\r\n - Firefox\r\n\r\ni guess this is because of the char limitation of the AI models.\r\nBut it is not even needed to feed whole documents to AI, because 99% of the documents have the distinct information of suitable tags, correspondents or title on the first two pages, so \"just\" feed only this into AI\r\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/99/comments",
    "author": "mamema",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-11T09:32:29Z",
        "body": "I will add a content limit to the manual page aswell. \n\nThanks for reporting. "
      }
    ]
  },
  {
    "number": 97,
    "title": "[Feature request] Allow option to disable authentication or support SAML/OIDC etc SSO",
    "created_at": "2025-01-10T22:48:04Z",
    "closed_at": "2025-01-13T16:33:15Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/97",
    "body": "As i'm the only person who uses my system and I already use nginx proxy manager forward auth to sign in, i don't need authentication at the application level and it just adds additional overhead. ",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/97/comments",
    "author": "paradizelost",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-10T22:59:07Z",
        "body": "I will add a settings option that is reachable from within the Webapp where you can disable it once and forever.\r\nBut it will take me 48 hours as I am away the next 2 days.\r\n\r\nBut I think for the next 48 hours it will be ok for you?"
      },
      {
        "user": "paradizelost",
        "created_at": "2025-01-10T22:59:56Z",
        "body": "Definitely not a rush!"
      }
    ]
  },
  {
    "number": 96,
    "title": "[Feature request] Add confident score (Tag and/or number + dual AI?)",
    "created_at": "2025-01-10T21:46:23Z",
    "closed_at": "2025-01-13T16:33:09Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/96",
    "body": "**Describe the solution you'd like**\r\nInclude a function that will Tag low confident returned data from the AI on the document. Allowing to manually review any document that the AI was not confident about. Or, once it is possible to have data added to custom fields, add a score value in a custom field.\r\n\r\nThis prompt seems to return reasonable interesting data: _Provide a score of 1-100 indicating the confidence level in the accuracy of the analyzed data from the document_\r\n\r\n**Describe alternatives you've considered**\r\nAn alternative or addition could be to work two AI. Primary is OLlama but if the score is low, re-run with an Open AI advanced model. Or simpler Open AI model as primary and a more advanced Open AI model as secondary. Keeping cost low for most documents but using stronger AI for more complex items.\r\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/96/comments",
    "author": "CreekDuzz",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-10T21:48:14Z",
        "body": "Interesting Idea :) I will look into it as I have this version stable 👍 "
      }
    ]
  },
  {
    "number": 94,
    "title": "No latest tag on hub.docker.com ;-)",
    "created_at": "2025-01-10T19:44:32Z",
    "closed_at": "2025-01-10T23:48:21Z",
    "labels": [
      "should-be-fixed-recheck-please"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/94",
    "body": "A really minor thingy, there is no latest tag. ;-)\r\nI am grabbing `2.0.0` now.",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/94/comments",
    "author": "frankhommers",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-10T19:58:32Z",
        "body": "That's unfortunately correct as the latest latest version had a major bug. Maybe v2.0.0 also...\nStill investigating "
      },
      {
        "user": "frankhommers",
        "created_at": "2025-01-10T20:19:02Z",
        "body": "Maybe introduce a stable tag as well ;-)"
      }
    ]
  },
  {
    "number": 86,
    "title": "[Feature Request] Support for SQL databases (e.g. MySQL or PostgreSQL)",
    "created_at": "2025-01-10T07:48:51Z",
    "closed_at": "2025-01-13T16:32:56Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/86",
    "body": "It would be awesome to have support for SQL databases, in addition to SQLite, as it would allow for more easily/reliably running this without persistent local disks (e.g. NFS mounts).\r\n\r\nBut I also recognize this is a nice-to-have for such an awesomely scrappy app! (:",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/86/comments",
    "author": "lgo",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-10T07:50:47Z",
        "body": "Going to add it to the roadmap :)\r\n"
      }
    ]
  },
  {
    "number": 85,
    "title": "[Bug] document blocks paperless-ai process",
    "created_at": "2025-01-09T19:41:52Z",
    "closed_at": "2025-01-10T23:48:20Z",
    "labels": [
      "should-be-fixed-recheck-please"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/85",
    "body": "I'm running paperless-ai V2.0.0 in standard configuration with slightly modified prompt.\r\n\r\nTwo different causes, same symptom.\r\n\r\nSpecific document reproducable block paperless-ai process. After deleting the document in ngx and restarting, paperless-ai continues to run smoothly.\r\n\r\n1) What is specific about the first sort of blocking (pdf) documents is that 5 letters with 5 different correspondents are saved in one single pdf.\r\n\r\nThe same document split into 5 individual documents is processed cleanly.\r\n\r\nExpected behaviour:\r\nEither process the document correctly or at least skip the error and process the next document.\r\n\r\n```\r\nFinished fetching. Found 1198 documents.\r\nProcessing new document: Betriebskostenabrechnung 2023 für mehrere Wohnungen\r\n[DEBUG] Thumbnail already cached\r\n[DEBUG] [09.01.25, 18:51] OpenAI request sent\r\n[DEBUG] [09.01.25, 18:51] Used tokens: 2758, Total tokens: 6100\r\nFailed to analyze document: Error: Invalid response structure: missing tags array or correspondent string\r\n    at OpenAIService.analyzeDocument (/app/services/openaiService.js:154:15)\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\r\n    at async scanInital (/app/server.js:78:26)\r\n    at async startScanning (/app/server.js:258:5)\r\nError during document scan: ReferenceError: result is not defined\r\n    at scanInital (/app/server.js:80:54)\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\r\n    at async startScanning (/app/server.js:258:5)\r\nError in startScanning: TypeError: Cannot read properties of undefined (reading 'replace')\r\n    at convertMonthName (/app/node_modules/node-cron/src/convert-expression/month-names-conversion.js:10:37)\r\n    at interprete (/app/node_modules/node-cron/src/convert-expression/month-names-conversion.js:16:27)\r\n    at interprete (/app/node_modules/node-cron/src/convert-expression/index.js:54:26)\r\n    at validate (/app/node_modules/node-cron/src/pattern-validation.js:117:32)\r\n    at new TimeMatcher (/app/node_modules/node-cron/src/time-matcher.js:14:9)\r\n    at new Scheduler (/app/node_modules/node-cron/src/scheduler.js:9:28)\r\n    at new ScheduledTask (/app/node_modules/node-cron/src/scheduled-task.js:22:27)\r\n    at createTask (/app/node_modules/node-cron/src/node-cron.js:36:12)\r\n    at Object.schedule (/app/node_modules/node-cron/src/node-cron.js:25:18)\r\n    at startScanning (/app/server.js:261:10)\r\n2025-01-09T18:52:13: PM2 log: [PM2][WORKER] Reset the restart delay, as app paperless-ai has been up for more than 30000ms\r\n```\r\n\r\n2) This also happens reproducibly for documents in which NGX text recognition has extracted exactly zero text (e.g. pdf with a photo without text).\r\nError message in this case:\r\n\r\n```\r\nProcessing new document: Personalausweis xxxxx yyyyyyy\r\nThumbnail not cached, fetching from Paperless\r\n[DEBUG] [09.01.25, 20:16] OpenAI request sent\r\n[DEBUG] [09.01.25, 20:16] Used tokens: 226, Total tokens: 879\r\nFailed to parse JSON response: SyntaxError: Unexpected token 'E', \"Es scheint\"... is not valid JSON\r\n    at JSON.parse (<anonymous>)\r\n    at OpenAIService.analyzeDocument (/app/services/openaiService.js:146:31)\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\r\n    at async scanInital (/app/server.js:78:26)\r\n    at async startScanning (/app/server.js:258:5)\r\nFailed to analyze document: Error: Invalid JSON response from API\r\n    at OpenAIService.analyzeDocument (/app/services/openaiService.js:149:15)\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\r\n    at async scanInital (/app/server.js:78:26)\r\n    at async startScanning (/app/server.js:258:5)\r\nError during document scan: ReferenceError: result is not defined\r\n    at scanInital (/app/server.js:80:54)\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\r\n    at async startScanning (/app/server.js:258:5)\r\nError in startScanning: TypeError: Cannot read properties of undefined (reading 'replace')\r\n    at convertMonthName (/app/node_modules/node-cron/src/convert-expression/month-names-conversion.js:10:37)\r\n    at interprete (/app/node_modules/node-cron/src/convert-expression/month-names-conversion.js:16:27)\r\n    at interprete (/app/node_modules/node-cron/src/convert-expression/index.js:54:26)\r\n    at validate (/app/node_modules/node-cron/src/pattern-validation.js:117:32)\r\n    at new TimeMatcher (/app/node_modules/node-cron/src/time-matcher.js:14:9)\r\n    at new Scheduler (/app/node_modules/node-cron/src/scheduler.js:9:28)\r\n    at new ScheduledTask (/app/node_modules/node-cron/src/scheduled-task.js:22:27)\r\n    at createTask (/app/node_modules/node-cron/src/node-cron.js:36:12)\r\n    at Object.schedule (/app/node_modules/node-cron/src/node-cron.js:25:18)\r\n    at startScanning (/app/server.js:261:10)\r\n```",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/85/comments",
    "author": "thorschtn",
    "comments": [
      {
        "user": "thorschtn",
        "created_at": "2025-01-11T00:54:03Z",
        "body": "Can confirm: Both issues fixed! Thanks @clusterzx "
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-11T01:13:36Z",
        "body": "You are very welcome"
      }
    ]
  },
  {
    "number": 80,
    "title": "Enable streaming for Chat",
    "created_at": "2025-01-09T03:07:51Z",
    "closed_at": "2025-01-13T16:32:50Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/80",
    "body": "I am using Ollama as the endpoint and was wondering if there's a way to enable streaming of the responses instead of having to wait for the full responses.",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/80/comments",
    "author": "davy1337",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-10T15:21:46Z",
        "body": "I will look into it. Thank you for the Idea."
      }
    ]
  },
  {
    "number": 79,
    "title": "Allow to only update tags",
    "created_at": "2025-01-09T02:00:15Z",
    "closed_at": "2025-01-13T16:32:45Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/79",
    "body": "Would it be possible to have a selection in the settings which fields the tool updates? Title, Correspondent, Tags.\r\n\r\nI would not like to chance Correspondent because I manage those tightly, but even removing this from the prompt still generates them.",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/79/comments",
    "author": "davy1337",
    "comments": [
      {
        "user": "itsthejb",
        "created_at": "2025-01-09T08:37:16Z",
        "body": "I believe the idea is that you edit the prompt description to tell it to edit only what you want"
      },
      {
        "user": "mamema",
        "created_at": "2025-01-09T12:32:31Z",
        "body": "which doesn't work, even with wordings like \" don't change in ANY case....\" the change happens"
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-09T14:05:20Z",
        "body": "That won't work because the prompt does not change the code logic. \n\nI will implement many requests later on. Also this one here 🙏🏻"
      },
      {
        "user": "davy1337",
        "created_at": "2025-01-09T16:34:04Z",
        "body": "> That won't work because the prompt does not change the code logic. \n> \n> I will implement many requests later on. Also this one here 🙏🏻\n\nThanks, that's what I figured. A simple checkbox for each field would be great to disable or enable updating them. "
      }
    ]
  },
  {
    "number": 76,
    "title": "Add ability to select a different model in the playground than the server itself is configured for",
    "created_at": "2025-01-08T20:02:11Z",
    "closed_at": "2025-01-08T20:12:09Z",
    "labels": [
      "done"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/76",
    "body": "it would be nice to be able to play with alternate ollama models besides the one configured specifically in the settings screen when using the playground. ",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/76/comments",
    "author": "paradizelost",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-08T20:12:09Z",
        "body": "This would mean a massive re-structure of the codebase.\r\nIt is a good idea, but right now not a feature on my list. \r\nThough I will note it aside and when I rework the whole project I will add it from the start.\r\n\r\nSorry bud :/  but thanks for your continues engagement here."
      }
    ]
  },
  {
    "number": 74,
    "title": "[Feature Request] A way to see generated prompt and response",
    "created_at": "2025-01-08T19:15:40Z",
    "closed_at": "2025-01-13T16:32:21Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/74",
    "body": "I was trying to restrict to prompt to certain correspondents only but so far failed in preventing it from generating new correspondent entries. It would be easier if I am able to see the final prompt generated and the raw response, in a log somewhere.\n\nAs far as I can see there is no logging to files, or logs to console do not include request/response to LLM. An option to log all LLM interactions to a file would be great in these cases.",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/74/comments",
    "author": "BertanAygun",
    "comments": [
      {
        "user": "paradizelost",
        "created_at": "2025-01-08T19:18:36Z",
        "body": "@BertanAygun from what i'm seeing it looks like most of that is there if you do \"docker logs conatinername -f\""
      },
      {
        "user": "BertanAygun",
        "created_at": "2025-01-08T19:22:55Z",
        "body": "I can try to update but the document data and below is all I am seeing for the AI requests in the logs:\n\n[DEBUG] [08.01.25, 19:21] OpenAI request sent\n[DEBUG] [08.01.25, 19:21] Used tokens: 244, Total tokens: 1516"
      },
      {
        "user": "paradizelost",
        "created_at": "2025-01-08T19:28:45Z",
        "body": "actually, what i was seeing was the source document data not the prompt/response, sorry"
      }
    ]
  },
  {
    "number": 73,
    "title": "Playground does not appear to actually reprocess documents that were previously analyzed without refreshing the page completely",
    "created_at": "2025-01-08T18:56:15Z",
    "closed_at": "2025-01-08T19:01:51Z",
    "labels": [
      "done",
      "not-a-bug"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/73",
    "body": "on V2, the playground will process documents and tag them, any documents that didn't apply tags will get reprocessed, but to have the tags reprocessed with the updated prompt i'm having to fully refresh the page and put the prompt back in.",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/73/comments",
    "author": "paradizelost",
    "comments": [
      {
        "user": "ravenspeak",
        "created_at": "2025-01-08T19:00:15Z",
        "body": "Afaik, the playground will not process documents. It's for people to test prompts and analyze."
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-08T19:01:26Z",
        "body": "The playground does not process any documents at all. Or better said it shouldn't. \n\nIt's just for testing prompts without updating them on paperless "
      },
      {
        "user": "paradizelost",
        "created_at": "2025-01-08T19:14:38Z",
        "body": "I'm saying the tags it shows  as a result of the analysis don't update, in fact, once you've clicked the \"analyze\" button and green tags show on a document, if you change the prompt and click \"analyze\" again, it doesn't even make a call to ollama at all for the changed prompt. I have to refresh the whole page and put the prompt in again for the analyze button to do anything besides pretend to re-analyze\r\n@clusterzx  just to make sure you see this, this really is a bug in my view."
      },
      {
        "user": "paradizelost",
        "created_at": "2025-01-09T14:17:16Z",
        "body": "@clusterzx just wanted to make sure you saw my comments, this should be re-opened"
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-09T15:31:20Z",
        "body": "If I implement a refresh of the page after a second click this would be a fix for you? "
      },
      {
        "user": "paradizelost",
        "created_at": "2025-01-09T16:26:59Z",
        "body": "If it maintains what is in the prompt dialog i would feel that is sufficient"
      }
    ]
  },
  {
    "number": 65,
    "title": "{Feature Request} Allow environmental variable to change internal port number",
    "created_at": "2025-01-08T12:38:59Z",
    "closed_at": "2025-01-13T16:31:50Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/65",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nNo\r\n**Describe the solution you'd like**\r\nEnable an environmental variable in the compose to change the internal port from 3000 to anything as this will help users running the project in host networking mode.\r\n**Describe alternatives you've considered**\r\nNone. Please Advise if this is already possible in host networking mode.\r\n**Additional context**\r\nCreate an environmental variable for the compose such as INTERNAL_PORT=3000 so we can change it.\r\n\r\nThanks. Amazing project!",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/65/comments",
    "author": "AmIBeingObtuse",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-08T12:48:02Z",
        "body": "You can change it right at the command? \r\n\r\n  \r\n`docker run -d --name paperless-ai --network bridge -v paperless-ai_data:/app/data -p 3000:3000 --restart unless-stopped clusterzx/paperless-ai`\r\n\r\n```services:\r\n  paperless-ai:\r\n    image: clusterzx/paperless-ai\r\n    container_name: paperless-ai\r\n    network_mode: bridge\r\n    volumes:\r\n      - paperless-ai_data:/app/data\r\n    ports:\r\n      - \"3000:3000\"\r\n    restart: unless-stopped\r\n\r\nvolumes:\r\n  paperless-ai_data:\r\n  "
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-08T12:50:27Z",
        "body": "Ah sorry, I misread your issue. You can manually edit the server.js at the bottom."
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-08T12:51:17Z",
        "body": "```const startServer = async () => {\r\n  try {\r\n    await initializeDataDirectory();\r\n    app.listen(3000, () => {\r\n      console.log('Server running on port 3000');\r\n      startScanning();\r\n    });\r\n  } catch (error) {\r\n    console.error('Failed to initialize server:', error);\r\n    process.exit(1);\r\n  }\r\n};"
      },
      {
        "user": "AmIBeingObtuse",
        "created_at": "2025-01-08T13:25:55Z",
        "body": "Thanks for the info. If it could still be put on the roadmap I think it would be easier for config especially inexperienced users. Thanks."
      }
    ]
  },
  {
    "number": 62,
    "title": "Add ",
    "created_at": "2025-01-08T08:37:59Z",
    "closed_at": "2025-01-08T17:59:20Z",
    "labels": [
      "done"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/62",
    "body": "Currently the code support only openapi. would be possible to define other LLM api by setting the api url? I would like to use deepseek api.\r\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/62/comments",
    "author": "parotech123",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-08T09:09:30Z",
        "body": "That's not true, it supports Ollama where can self decide wich of these countless models you would like to run."
      }
    ]
  },
  {
    "number": 54,
    "title": "Error during document scan: TypeError: Cannot read properties of undefined (reading 'tags')",
    "created_at": "2025-01-07T18:50:48Z",
    "closed_at": "2025-01-08T17:58:49Z",
    "labels": [
      "bug",
      "investigating",
      "done"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/54",
    "body": "**Describe the bug**\r\nMid-processing, the tool stopped processing documents (after 256). I restarted the app and see the following error:\r\n`Error during document scan: TypeError: Cannot read properties of undefined (reading 'tags')\r\n    at scanInital (/app/server.js:77:89)\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\r\n    at async startScanning (/app/server.js:244:5)`\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\nUnsure, as I did not implement any changes to my knowledge\r\n\r\n**Additional context**\r\nI created a second superuser account in Paperless (token only auth), and changed the token to the new superuser to no avail. I am also receiving the following notice:\r\n`2025-01-07T18:47:09: PM2 log: [PM2][WORKER] Reset the restart delay, as app paperless-ai has been up for more than 30000ms`",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/54/comments",
    "author": "brandonjones24",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-07T19:07:08Z",
        "body": "The message is a good message if you read again. 😇\n\nIt says that the process did not crash in a given time and is healthy. \n\nThe other problem I will investigate further. \n\nI get back to you. "
      },
      {
        "user": "brandonjones24",
        "created_at": "2025-01-07T19:35:06Z",
        "body": "Thanks! Is the first error saying no tags found, so just calling that out? "
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-07T19:43:52Z",
        "body": "Yeah, could be a paperless issue. Sometimes the API does not respond or hang up. \r\nJust proceed and look if it happens more often."
      },
      {
        "user": "ravenspeak",
        "created_at": "2025-01-07T22:26:41Z",
        "body": "I encountered the same error when using Ollama. I was using OpenAI API earlier without issues.\r\n\r\n```\r\nError during document scan: TypeError: Cannot read properties of undefined (reading 'tags')\r\n    at scanInital (/app/server.js:77:89)\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\r\n    at async startScanning (/app/server.js:244:5)\r\n```"
      },
      {
        "user": "brandonjones24",
        "created_at": "2025-01-07T22:29:32Z",
        "body": "Yes, I am using ollama"
      },
      {
        "user": "ravenspeak",
        "created_at": "2025-01-07T22:33:45Z",
        "body": "Ok, another weird behavior. When I saved the configuration again, it processed the documents successfully after restart.\r\n```\r\nDocument 35 added to processed_documents\r\n2025-01-07T22:29:30: PM2 log: [PM2][WORKER] Reset the restart delay, as app paperless-ai has been up for more than 30000ms\r\n```"
      },
      {
        "user": "DefiantTurtle",
        "created_at": "2025-01-08T01:18:03Z",
        "body": "I've also had this issue crop up. Tried removing the specific document that hung the process, and it would continue for a few more documents before erroring again. "
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-08T17:58:49Z",
        "body": "Solved with da45b7cd8116a097c65eea79849487d4dc64a9e0"
      }
    ]
  },
  {
    "number": 53,
    "title": "Correspondent search failing to match multiple correspondents",
    "created_at": "2025-01-07T18:33:07Z",
    "closed_at": "2025-01-08T17:55:28Z",
    "labels": [
      "done"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/53",
    "body": "**Describe the bug**\r\nMultiple correspondents are failing to be matched, even though they exist in Paperless. Paperless AI appears to correctly identify the correspondent, however when trying to retrieve the ID from the correspondent API, a 400 error is being returned.\r\n\r\n**To Reproduce**\r\n\r\n**Example 1:**\r\nCorrespondent name: \"Virgin Media\"\r\nPaperless AI log entries:\r\n - Failed to process correspondent \"Virgin Media\": Request failed with status code 400\r\n - Error processing correspondent \"Virgin Media\": Request failed with status code 400\r\n\r\nPaperless log entry:\r\n - [WARNING] [django.request] Bad Request: /api/correspondents/\r\n\r\nIf I query the Paperless API directly, the correct corespondent is found:\r\n`GET /api/correspondents/?id__in=&id=&name__istartswith=&name__iendswith=&name__icontains=&name__iexact=Virgin+Media`\r\n\r\nReturns:\r\n\r\n````\r\nHTTP 200 OK\r\nAllow: GET, POST, HEAD, OPTIONS\r\nContent-Type: application/json\r\nVary: Accept\r\n\r\n{\r\n    \"count\": 1,\r\n    \"next\": null,\r\n    \"previous\": null,\r\n    \"all\": [\r\n        97\r\n    ],\r\n    \"results\": [\r\n        {\r\n            \"id\": 97,\r\n            \"slug\": \"virgin-media\",\r\n            \"name\": \"Virgin Media\",\r\n            \"match\": \"\",\r\n            \"matching_algorithm\": 6,\r\n            \"is_insensitive\": true,\r\n            \"document_count\": 4,\r\n            \"owner\": null,\r\n            \"user_can_change\": true\r\n        }\r\n    ]\r\n}\r\n````\r\n\r\n**Example 2:**\r\nCorrespondent name: \"Petplan\"\r\nPaperless AI log entries:\r\n - Failed to process correspondent \"Petplan\": Request failed with status code 400\r\n - Error processing correspondent \"Petplan\": Request failed with status code 400\r\n\r\nPaperless log entry:\r\n - [WARNING] [django.request] Bad Request: /api/correspondents/\r\n\r\nIf I query the Paperless API directly, the correct corespondent is found:\r\n`GET /api/correspondents/?id__in=&id=&name__istartswith=&name__iendswith=&name__icontains=&name__iexact=Petplan`\r\n\r\nReturns:\r\n\r\n````\r\nHTTP 200 OK\r\nAllow: GET, POST, HEAD, OPTIONS\r\nContent-Type: application/json\r\nVary: Accept\r\n\r\n{\r\n    \"count\": 1,\r\n    \"next\": null,\r\n    \"previous\": null,\r\n    \"all\": [\r\n        125\r\n    ],\r\n    \"results\": [\r\n        {\r\n            \"id\": 125,\r\n            \"slug\": \"petplan\",\r\n            \"name\": \"Petplan\",\r\n            \"match\": \"\",\r\n            \"matching_algorithm\": 6,\r\n            \"is_insensitive\": true,\r\n            \"document_count\": 1,\r\n            \"owner\": 2,\r\n            \"user_can_change\": true\r\n        }\r\n    ]\r\n}\r\n````\r\n\r\nThe correspondent is then not set for affected documents.\r\n\r\n**Expected behavior**\r\nI would expect the ID for the found correspondent to be returned, so that it can be passed through to the updated document.\r\n\r\n**Additional context**\r\nI have provided 2 examples above, but there are several more exhibiting the same behaviour. I can provide more details if required.\r\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/53/comments",
    "author": "Lumpybd",
    "comments": [
      {
        "user": "rknightion",
        "created_at": "2025-01-07T18:49:23Z",
        "body": "Also seeing this myself - a malformed request is being given to paperless that triggers the 400?\r\n\r\n```\r\nwebserver-1   | [2025-01-07 18:40:52,254] [WARNING] [django.request] Bad Request: /api/correspondents/\r\npaperless-ai  | Failed to process correspondent \"Cloudflare Inc\": Request failed with status code 400\r\npaperless-ai  | Error processing correspondent \"Cloudflare, Inc.\": Request failed with status code 400\r\nwebserver-1   | [2025-01-07 18:40:47,514] [WARNING] [django.request] Bad Request: /api/correspondents/\r\npaperless-ai  | Failed to process correspondent \"Wake Up Reykjavik\": Request failed with status code 400\r\npaperless-ai  | Error processing correspondent \"Wake Up Reykjavik\": Request failed with status code 400\r\n```\r\n\r\nPaperless version: 2.13.5\r\nPaperless-AI version: 1.4.6"
      },
      {
        "user": "thorschtn",
        "created_at": "2025-01-08T09:50:50Z",
        "body": "The same thing happens to me: with a complete re-indexing in 584 cases of 1200 documents - so significantly often.\r\n\r\nOpenAI returns a correct correspondent (both in manual mode and in service), but paperless-ai cannot write it to PaperlessNGX.\r\n\r\nThe error is reproducible and also occurs when the same document is scanned again. If you delete the correspondent (already in the list) in Paperless, it will be written correctly the next time you scan the document.\r\n\r\nBut not anymore on the next scan.\r\n\r\nAlso with me:\r\nWhat is striking is the different spelling of the correspondent with each scanning process and it happens only if there is a \".\" dot in the correspondent - reproducible, even though the correspondent was only edited by paperless-ai and never manually: \r\n\r\n```\r\nFailed to process correspondent \"NBB Netzgesellschaft Berlin-Brandenburg mbH & Co KG\": Request failed with status code 400\r\n\r\nError processing correspondent \"NBB Netzgesellschaft Berlin-Brandenburg mbH & Co. KG\": Request failed with status code 400\r\n\r\n```\r\n\r\n```\r\n[DEBUG] [08.01.25, 09:44] Used tokens: 355, Total tokens: 2598\r\n\r\nRefreshing tag cache...\r\n\r\nTag cache refreshed. Found 25 tags.\r\n\r\nFound existing tag \"Gasversorgung\" via API with ID 462\r\n\r\nFound existing tag \"Datenschutz\" via API with ID 212\r\n\r\nFound existing tag \"Vertrag\" via API with ID 68\r\n\r\nFound existing tag \"Energie\" via API with ID 58\r\n\r\nFound existing tag \"ai-processed\" via API with ID 905\r\n\r\nFailed to process correspondent \"NBB Netzgesellschaft Berlin-Brandenburg mbH & Co KG\": Request failed with status code 400\r\n\r\nError processing correspondent \"NBB Netzgesellschaft Berlin-Brandenburg mbH & Co. KG\": Request failed with status code 400\r\n\r\nCurrent tags for document 1238: []\r\n\r\nAdding new tags: [ 462, 212, 68, 58, 905 ]\r\n\r\nCombined tags: [ 462, 212, 68, 58, 905 ]\r\n\r\nUpdated document 1238 with: {\r\n\r\n  tags: [ 462, 212, 68, 58, 905 ],\r\n\r\n  title: 'Information über Gasnetzanschluss und Datenschutz',\r\n\r\n  created: '2025-01-01T00:00:00.000Z',\r\n\r\n  language: 'de'\r\n\r\n}\r\n\r\nDocument 1238 added to processed_documents\r\n\r\nMetrics added for document 1238\r\n\r\nError in startScanning: TypeError: Cannot read properties of undefined (reading 'replace')\r\n\r\n    at convertMonthName (/app/node_modules/node-cron/src/convert-expression/month-names-conversion.js:10:37)\r\n\r\n    at interprete (/app/node_modules/node-cron/src/convert-expression/month-names-conversion.js:16:27)\r\n\r\n    at interprete (/app/node_modules/node-cron/src/convert-expression/index.js:54:26)\r\n\r\n    at validate (/app/node_modules/node-cron/src/pattern-validation.js:117:32)\r\n\r\n    at new TimeMatcher (/app/node_modules/node-cron/src/time-matcher.js:14:9)\r\n\r\n    at new Scheduler (/app/node_modules/node-cron/src/scheduler.js:9:28)\r\n\r\n    at new ScheduledTask (/app/node_modules/node-cron/src/scheduled-task.js:22:27)\r\n\r\n    at createTask (/app/node_modules/node-cron/src/node-cron.js:36:12)\r\n\r\n    at Object.schedule (/app/node_modules/node-cron/src/node-cron.js:25:18)\r\n\r\n    at startScanning (/app/server.js:247:10)\r\n```\r\n\r\n"
      }
    ]
  },
  {
    "number": 52,
    "title": "Document Processing Stops After Error",
    "created_at": "2025-01-07T13:28:13Z",
    "closed_at": "2025-01-07T13:59:01Z",
    "labels": [
      "done"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/52",
    "body": "**Describe the bug**\r\nError occurs and stops the processing of other documents.\r\n\r\nError message is:\r\n\"This model's maximum context length is 128000 tokens. However, your messages resulted in 128649 tokens. Please reduce the length of the messages.\"\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Setup Paperless AI as normal\r\n2. Have a bad document or something in Paperless-NGX\r\n3. Have Paperless AI scan documents\r\n4. See error\r\n\r\n**Expected behavior**\r\nProcessing continues even if the error occurs.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Linux/Unraid/Docker\r\n\r\n**Additional context**\r\nRestart of the Paperless-AI service just ends up dying at the same spot.\r\n\r\n`[DEBUG] [07.01.25, 08:18] OpenAI request sent\r\nFailed to analyze document: BadRequestError: 400 This model's maximum context length is 128000 tokens. However, your messages resulted in 128649 tokens. Please reduce the length of the messages.\r\n    at APIError.generate (/app/node_modules/openai/error.js:45:20)\r\n    at OpenAI.makeStatusError (/app/node_modules/openai/core.js:293:33)\r\n    at OpenAI.makeRequest (/app/node_modules/openai/core.js:337:30)\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\r\n    at async OpenAIService.analyzeDocument (/app/services/openaiService.js:74:24)\r\n    at async scanInital (/app/server.js:71:26)\r\n    at async startScanning (/app/server.js:244:5) {\r\n  status: 400,\r\n  headers: {\r\n    'access-control-expose-headers': 'X-Request-ID',\r\n    'alt-svc': 'h3=\":443\"; ma=86400',\r\n    'cf-cache-status': 'DYNAMIC',\r\n    'cf-ray': '8fe43c031aabe14e-STL',\r\n    connection: 'keep-alive',\r\n    'content-length': '284',\r\n    'content-type': 'application/json',\r\n    date: 'Tue, 07 Jan 2025 13:18:34 GMT',\r\n    'openai-organization': 'user-<XXXXXXXXX>',\r\n    'openai-processing-ms': '259',\r\n    'openai-version': '2020-10-01',\r\n    server: 'cloudflare',\r\n    'set-cookie': '<XXXXXXXXXXXXX>',\r\n    'strict-transport-security': 'max-age=31536000; includeSubDomains; preload',\r\n    'x-content-type-options': 'nosniff',\r\n    'x-ratelimit-limit-requests': '10000',\r\n    'x-ratelimit-limit-tokens': '200000',\r\n    'x-ratelimit-remaining-requests': '9998',\r\n    'x-ratelimit-remaining-tokens': '93201',\r\n    'x-ratelimit-reset-requests': '14.696s',\r\n    'x-ratelimit-reset-tokens': '32.039s',\r\n    'x-request-id': 'req_3d0b.....'\r\n  },\r\n  request_id: 'req_3d0b.....',\r\n  error: {\r\n    message: \"This model's maximum context length is 128000 tokens. However, your messages resulted in 128649 tokens. Please reduce the length of the messages.\",\r\n    type: 'invalid_request_error',\r\n    param: 'messages',\r\n    code: 'context_length_exceeded'\r\n  },\r\n  code: 'context_length_exceeded',\r\n  param: 'messages',\r\n  type: 'invalid_request_error'\r\n}`\r\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/52/comments",
    "author": "nblomquist",
    "comments": [
      {
        "user": "nblomquist",
        "created_at": "2025-01-07T13:53:37Z",
        "body": "It looks like it finally pushed on through.\r\nNot sure why."
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-07T13:58:46Z",
        "body": " OpenAI request sent Failed to analyze document: BadRequestError: 400 This model's maximum context length is 128000 tokens. However, your messages resulted in 128649 tokens.\r\n \r\n Your document was too big to be processed by OpenAI"
      },
      {
        "user": "nblomquist",
        "created_at": "2025-01-07T14:03:25Z",
        "body": "Right, can they be split and sent?\r\nThe other issued seemed that processing just stopped and didn't continue on to the next documents.\r\nThis seemed to resolve, since it finally did get through all of my documents. I need to see if it actually got through the \"big\" document or not."
      }
    ]
  },
  {
    "number": 40,
    "title": "tagNames is not iterable",
    "created_at": "2025-01-06T21:20:12Z",
    "closed_at": "2025-01-06T23:55:28Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/40",
    "body": "Processing new document: 2024-02-24  Dienstleistungsrechnung RE-204213644\r\n\r\n[DEBUG] [06.01.25, 21:16] OpenAI request sent\r\n\r\nError during document scan: TypeError: tagNames is not iterable\r\n\r\n    at PaperlessService.processTags (/app/services/paperlessService.js:117:27)\r\n\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\r\n\r\n    at async scanDocuments (/app/server.js:130:36)\r\n\r\n    at async Task._execution (/app/server.js:245:7)\r\n\r\n\r\n\r\n\r\nDocker:\r\nNODE_VERSION | 23.5.0\r\nPATH | /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin\r\nYARN_VERSION | 1.22.22\r\n.image.version | 1.4.5\r\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/40/comments",
    "author": "STL2020",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-06T21:54:37Z",
        "body": "Ich weiß nicht was das Problem ist bei dir :D du hast ja nur Fehler dauerhaft.\r\nDa kann ich nur rätsel raten"
      },
      {
        "user": "STL2020",
        "created_at": "2025-01-06T23:32:58Z",
        "body": "Ja sorry ich habe schon wieder was neues.\r\nIch setzte morgen mal alles neu auf ,, danke aber  trotzdem. \r\n\r\n\r\n\r\nnode:18) [DEP0040] DeprecationWarning: The `punycode` module is deprecated. Please use a userland alternative instead.\r\n(Use `node --trace-deprecation ...` to show where the warning was created)\r\nServer running on port 3000\r\n[DEBUG] [06.01.25, 23:28] OpenAI request sent\r\nConfigured scan interval: */15* * * *\r\nStarting initial scan at 2025-01-06T23:28:11.483Z\r\nRefreshing tag cache...\r\nTag cache refreshed. Found 25 tags.\r\nFiltering documents for tags: [ 'ai' ]\r\nFetched page 1, got 18 matching documents. Total so far: 18\r\nFinished filtering. Found 18 documents matching the predefined tags.\r\nError in startScanning: TypeError: Cannot read properties of undefined (reading 'replace')\r\n    at convertMonthName (/app/node_modules/node-cron/src/convert-expression/month-names-conversion.js:10:37)\r\n    at interprete (/app/node_modules/node-cron/src/convert-expression/month-names-conversion.js:16:27)\r\n    at interprete (/app/node_modules/node-cron/src/convert-expression/index.js:54:26)\r\n    at validate (/app/node_modules/node-cron/src/pattern-validation.js:117:32)\r\n    at new TimeMatcher (/app/node_modules/node-cron/src/time-matcher.js:14:9)\r\n    at new Scheduler (/app/node_modules/node-cron/src/scheduler.js:9:28)\r\n    at new ScheduledTask (/app/node_modules/node-cron/src/scheduled-task.js:22:27)\r\n    at createTask (/app/node_modules/node-cron/src/node-cron.js:36:12)\r\n    at Object.schedule (/app/node_modules/node-cron/src/node-cron.js:25:18)\r\n    at startScanning (/app/server.js:243:10)"
      }
    ]
  },
  {
    "number": 38,
    "title": "[Feature Request] Adding new tags",
    "created_at": "2025-01-06T15:34:49Z",
    "closed_at": "2025-01-13T16:31:10Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/38",
    "body": "Really liking the new interface and dashboard for 1.4!\r\n\r\nI would like to see the ability to make new tags on the fly for the documents if there isn't one I have already made from the Paperless interface. Maybe a simple \"add new\" button that will open a drop-down area with a name field and a color picker?",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/38/comments",
    "author": "NightHawkATL",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-06T15:47:28Z",
        "body": "Thanks happy to hear that you like the new interface.\r\n\r\nFrom wich point of entrance you would see this Button? Under the /manual route or the dashboard? "
      },
      {
        "user": "NightHawkATL",
        "created_at": "2025-01-06T15:52:12Z",
        "body": "> Thanks happy to hear that you like the new interface.\r\n> \r\n> From wich point of entrance you would see this Button? Under the /manual route or the dashboard?\r\n\r\nEither would be fine but it makes more sense to have it on the /manual page for me to quickly edit what the AI has done."
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-06T16:18:57Z",
        "body": "I sign that! Manual page makes the most sense."
      }
    ]
  },
  {
    "number": 37,
    "title": "[Feature Request] Only use Existing Correspondents",
    "created_at": "2025-01-06T14:41:29Z",
    "closed_at": "2025-01-08T17:56:52Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/37",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nIf the AI is free to pick the correspondent, in some cases it will make small variations of the correspondent's name. E.g. [Apple] vs [Apple Inc]. This makes grouping the documents later much more difficult.\r\n\r\n**Describe the solution you'd like**\r\nLike with the existing tags function, limit the AI to only use and consider the existing correspondents. If it cannot be found, allow for the option to add it to the title.\r\n\r\n**Describe alternatives you've considered**\r\nI have tested with sending a full list of the correspondents with the Prompt. It seems to help but it is not a full match.\r\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/37/comments",
    "author": "CreekDuzz",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-06T14:44:26Z",
        "body": "Will implement this till the weekend including existing Tags. \n\nBut bear in mind:\nIf you have thousands of correspondents and thousands of tags then the cost will explode tremendously. "
      },
      {
        "user": "CreekDuzz",
        "created_at": "2025-01-06T14:49:40Z",
        "body": "Yes, you are right. I expect it will not reach those numbers in many cases. I have about 2700 documents collected since 2004 and have 90 correspondents. Yes, I did not include some of the one-off correspondents.\r\n\r\nNevertheless, I would pick higher quality output over a bit more cost.\r\n\r\nThank you!"
      },
      {
        "user": "thorschtn",
        "created_at": "2025-01-06T16:01:22Z",
        "body": "@CreekDuzz \r\n\r\nYou can already significantly improve the generation of corredpondents by expanding the prompt:\r\n\r\n`When generating the corredpondent, always create the shortest possible form of the company name (e.g. \"Amazon\" instead of \"Amazon EU SARL, German branch\", [add further examples]).`\r\n\r\nThis already improves the accuracy immensely. \r\n\r\nAlternatively, you can specify the complete list of all allowed cortrdpondents in the prompt.\r\n"
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-06T16:06:30Z",
        "body": "Thats a great tip! @thorschtn "
      },
      {
        "user": "Lumpybd",
        "created_at": "2025-01-07T15:29:15Z",
        "body": "I'll second this. My list of correspondents is very carefully curated. Letting OpenAI loose on creating new correspondents has created quite a large mess, duplicates etc. I'd prefer to be able to restrict Paperless AI to only select from existing correspondents when populating this field. Perhaps allow for adding new or suggested correspondents when manually processing files?"
      }
    ]
  },
  {
    "number": 36,
    "title": "Assign title and correspondent in manual mode",
    "created_at": "2025-01-06T06:20:18Z",
    "closed_at": "2025-01-06T08:30:03Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/36",
    "body": "Assign title and correspondent via /manual endpoint like it's possible with the tags. \r\nThe AI response already contains this information but the gui has no possibility to assign them.",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/36/comments",
    "author": "kolle86",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-06T08:27:54Z",
        "body": "You are quite right, but not completely. In fact the manual mode also suggests a correspondent as you can see when you analyze a file. But it is not changeable. \r\n\r\nThe title is missing, thats correct. \r\n\r\nI will enhance the version in the next days.\r\n\r\nThanks for your input again! 👍 "
      }
    ]
  },
  {
    "number": 32,
    "title": "First Startup - AI-Requests and Fetching?",
    "created_at": "2025-01-05T13:24:58Z",
    "closed_at": "2025-01-06T14:24:28Z",
    "labels": [
      "done"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/32",
    "body": "**Describe the bug**\r\n\r\nHello,\r\nI came across this extension for Paperless on Reddit and was very excited about it.\r\nAfter a few initial issues with the API, the container (running in Portainer) is now working quite well.\r\n\r\nIt has now been running for about an hour.\r\n\r\nThere are constant requests through the API, but currently, there should be nothing to process.\r\nMy Paperless instance is continuously under high load, and the log file for the AI container contains the following entries:\r\n\r\n`Fetched page 34, got 0 matching documents. Total so far: 1\r\n\r\nFetched page 12, got 0 matching documents. Total so far: 1\r\n\r\nError fetching tag text for ID 2: socket hang up\r\n\r\nFetched page 14, got 0 matching documents. Total so far: 1\r\n\r\nFetched page 13, got 0 matching documents. Total so far: 1\r\n\r\nFetched page 15, got 0 matching documents. Total so far: 1\r\n\r\nError fetching tag text for ID 33: read ECONNRESET\r\n\r\nFetched page 37, got 0 matching documents. Total so far: 1\r\n\r\nFetched page 41, got 0 matching documents. Total so far: 1\r\n\r\nError fetching tag text for ID 26: socket hang up\r\n\r\nError fetching tag text for ID 26: socket hang up\r\n\r\nError fetching tag text for ID 26: socket hang up\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nFetched page 42, got 0 matching documents. Total so far: 1\r\n\r\nFetched page 43, got 0 matching documents. Total so far: 1\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 3: read ECONNRESET\r\n\r\nFetched page 16, got 0 matching documents. Total so far: 1\r\n\r\nFetched page 15, got 0 matching documents. Total so far: 1\r\n\r\nError fetching tag text for ID 28: socket hang up\r\n\r\nFetched page 5, got 0 matching documents. Total so far: 1\r\n\r\nFetched page 1, got 1 matching documents. Total so far: 1\r\n\r\nError fetching tag text for ID 4: socket hang up\r\n\r\nError fetching tag text for ID 2: socket hang up\r\n\r\nError fetching tag text for ID 33: read ECONNRESET\r\n\r\nError fetching tag text for ID 20: read ECONNRESET\r\n\r\nError fetching tag text for ID 59: read ECONNRESET\r\n\r\nFetched page 35, got 0 matching documents. Total so far: 1\r\n\r\nFetched page 13, got 0 matching documents. Total so far: 1\r\n\r\nFetched page 15, got 0 matching documents. Total so far: 1\r\n\r\nFetched page 14, got 0 matching documents. Total so far: 1\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 3: read ECONNRESET\r\n\r\nError fetching tag text for ID 3: read ECONNRESET\r\n\r\nError fetching tag text for ID 3: read ECONNRESET\r\n\r\nError fetching tag text for ID 22: read ECONNRESET\r\n\r\nError fetching tag text for ID 75: read ECONNRESET\r\n\r\nError fetching tag text for ID 28: read ECONNRESET\r\n\r\nError fetching tag text for ID 58: read ECONNRESET\r\n\r\nFetched page 16, got 0 matching documents. Total so far: 1\r\n\r\nError fetching tag text for ID 28: read ECONNRESET\r\n\r\nFetched page 42, got 0 matching documents. Total so far: 1\r\n\r\nError fetching tag text for ID 25: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 34: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 28: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 16: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 28: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nFetched page 38, got 0 matching documents. Total so far: 1\r\n\r\nFetched page 43, got 0 matching documents. Total so far: 1\r\n\r\nFetched page 3, got 0 matching documents. Total so far: 1\r\n\r\nError fetching tag text for ID 3: socket hang up\r\n\r\nError fetching tag text for ID 26: socket hang up\r\n\r\nError fetching tag text for ID 3: socket hang up\r\n\r\nError fetching tag text for ID 3: socket hang up\r\n\r\nError fetching tag text for ID 4: socket hang up\r\n\r\nError fetching tag text for ID 3: read ECONNRESET\r\n\r\nFetched page 44, got 0 matching documents. Total so far: 1\r\n\r\nFetched page 16, got 0 matching documents. Total so far: 1\r\n\r\nFetched page 17, got 0 matching documents. Total so far: 1\r\n\r\nError fetching tag text for ID 69: socket hang up\r\n\r\nError fetching tag text for ID 4: socket hang up\r\n\r\nError fetching tag text for ID 28: read ECONNRESET\r\n\r\nFetched page 6, got 0 matching documents. Total so far: 1\r\n\r\nFetched page 2, got 0 matching documents. Total so far: 1\r\n\r\nFetched page 36, got 0 matching documents. Total so far: 1\r\n\r\nError fetching tag text for ID 26: socket hang up\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nError fetching tag text for ID 26: read ECONNRESET\r\n\r\nFetched page 14, got 0 matching documents. Total so far: 1\r\n\r\nFetched page 16, got 0 matching documents. Total so far: 1\r\n\r\nFetched page 15, got 0 matching documents. Total so far: 1\r\n\r\nFetched page 17, got 0 matching documents. Total so far: 1\r\n\r\nError fetching tag text for ID 28: read ECONNRESET\r\n\r\nFetched page 43, got 0 matching documents. Total so far: 1`\r\n\r\nMy Paperless Container sometimes wrote:\r\ncurl: (28) Operation timed out after 2001 milliseconds with 0 bytes received\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\nFirst Startup of Paperless AI\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: [e.g. iOS]\r\n - Browser [e.g. chrome, safari]\r\n - Version [e.g. 22]\r\n\r\n**Smartphone (please complete the following information):**\r\n - Device: [e.g. iPhone6]\r\n - OS: [e.g. iOS8.1]\r\n - Browser [e.g. stock browser, safari]\r\n - Version [e.g. 22]\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/32/comments",
    "author": "tttuntcloud",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-05T19:45:11Z",
        "body": "Wow, never seen these error messages before. I think it has to do something with the Paperless-API?\r\nHow many documents do you have in Paperless itself?"
      },
      {
        "user": "tttuntcloud",
        "created_at": "2025-01-06T08:31:34Z",
        "body": "I currently have around 11,000 documents in Paperless, approximately 90 tags, and a few hundred correspondents.\r\nWhen I ran the AI, there were 120 documents in the inbox — but only one document had the tag that should trigger the AI processing.\r\nThe Paperless API works well with Paperless-GPT, and documents are processed correctly.\r\nHowever, when I ran the container with your program, my Paperless instance was constantly under 150-200% load.\r\nThe AI UI did not load, except for the \"special panels\" (Health, Debug, and Manual). I tagged a document to have it processed by AI, and it was indeed displayed under Manual (though everything took a very long time, and the log contained the errors mentioned above)."
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-06T08:42:48Z",
        "body": "Maybe I see the issue. Do you have the ability to change out files inside the docker container? So we can investigate it now together."
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-06T08:45:37Z",
        "body": "Update the file under /app/services/paperlessService.js with that new version. (complete override)\r\n\r\n```js\r\n\r\n// services/paperlessService.js\r\nconst axios = require('axios');\r\nconst config = require('../config/config');\r\n\r\nclass PaperlessService {\r\n  constructor() {\r\n    this.client = null;\r\n    this.tagCache = new Map();\r\n    this.lastTagRefresh = 0;\r\n    this.CACHE_LIFETIME = 30000; // 30 Sekunden\r\n  }\r\n\r\n  initialize() {\r\n    if (!this.client && config.paperless.apiUrl && config.paperless.apiToken) {\r\n      this.client = axios.create({\r\n        baseURL: config.paperless.apiUrl,\r\n        headers: {\r\n          'Authorization': `Token ${config.paperless.apiToken}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  // Aktualisiert den Tag-Cache, wenn er älter als CACHE_LIFETIME ist\r\n  async ensureTagCache() {\r\n    const now = Date.now();\r\n    if (this.tagCache.size === 0 || (now - this.lastTagRefresh) > this.CACHE_LIFETIME) {\r\n      await this.refreshTagCache();\r\n    }\r\n  }\r\n\r\n  // Lädt alle existierenden Tags\r\n  async refreshTagCache() {\r\n    try {\r\n      console.log('Refreshing tag cache...');\r\n      const response = await this.client.get('/tags/');\r\n      this.tagCache.clear();\r\n      response.data.results.forEach(tag => {\r\n        this.tagCache.set(tag.name.toLowerCase(), tag);\r\n      });\r\n      this.lastTagRefresh = Date.now();\r\n      console.log(`Tag cache refreshed. Found ${this.tagCache.size} tags.`);\r\n    } catch (error) {\r\n      console.error('Error refreshing tag cache:', error.message);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async findExistingTag(tagName) {\r\n    const normalizedName = tagName.toLowerCase();\r\n    \r\n    // 1. Zuerst im Cache suchen\r\n    const cachedTag = this.tagCache.get(normalizedName);\r\n    if (cachedTag) {\r\n      console.log(`Found tag \"${tagName}\" in cache with ID ${cachedTag.id}`);\r\n      return cachedTag;\r\n    }\r\n\r\n    // 2. Direkte API-Suche\r\n    try {\r\n      const response = await this.client.get('/tags/', {\r\n        params: {\r\n          name__iexact: normalizedName  // Case-insensitive exact match\r\n        }\r\n      });\r\n\r\n      if (response.data.results.length > 0) {\r\n        const foundTag = response.data.results[0];\r\n        console.log(`Found existing tag \"${tagName}\" via API with ID ${foundTag.id}`);\r\n        this.tagCache.set(normalizedName, foundTag);\r\n        return foundTag;\r\n      }\r\n    } catch (error) {\r\n      console.warn(`Error searching for tag \"${tagName}\":`, error.message);\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  async createTagSafely(tagName) {\r\n    const normalizedName = tagName.toLowerCase();\r\n    \r\n    try {\r\n      // Versuche zuerst, den Tag zu erstellen\r\n      const response = await this.client.post('/tags/', { name: tagName });\r\n      const newTag = response.data;\r\n      console.log(`Successfully created tag \"${tagName}\" with ID ${newTag.id}`);\r\n      this.tagCache.set(normalizedName, newTag);\r\n      return newTag;\r\n    } catch (error) {\r\n      if (error.response?.status === 400) {\r\n        // Bei einem 400er Fehler könnte der Tag bereits existieren\r\n        // Aktualisiere den Cache und suche erneut\r\n        await this.refreshTagCache();\r\n        \r\n        // Suche nochmal nach dem Tag\r\n        const existingTag = await this.findExistingTag(tagName);\r\n        if (existingTag) {\r\n          return existingTag;\r\n        }\r\n      }\r\n      throw error; // Wenn wir den Tag nicht finden konnten, werfen wir den Fehler weiter\r\n    }\r\n  }\r\n\r\n  // Hauptfunktion für die Tag-Verarbeitung\r\n  async processTags(tagNames) {\r\n    this.initialize();\r\n    await this.ensureTagCache();\r\n\r\n    const tagIds = [];\r\n    const errors = [];\r\n    const processedTags = new Set(); // Verhindert Duplikate\r\n\r\n    // Verarbeite zuerst die normalen Tags\r\n    for (const tagName of tagNames) {\r\n      if (!tagName || typeof tagName !== 'string') {\r\n        console.warn(`Skipping invalid tag name: ${tagName}`);\r\n        continue;\r\n      }\r\n\r\n      const normalizedName = tagName.toLowerCase().trim();\r\n      \r\n      // Überspringe leere oder bereits verarbeitete Tags\r\n      if (!normalizedName || processedTags.has(normalizedName)) {\r\n        continue;\r\n      }\r\n\r\n      try {\r\n        // Suche zuerst nach existierendem Tag\r\n        let tag = await this.findExistingTag(tagName);\r\n        \r\n        // Wenn kein existierender Tag gefunden wurde, erstelle einen neuen\r\n        if (!tag) {\r\n          tag = await this.createTagSafely(tagName);\r\n        }\r\n\r\n        if (tag && tag.id) {\r\n          tagIds.push(tag.id);\r\n          processedTags.add(normalizedName);\r\n        }\r\n\r\n      } catch (error) {\r\n        console.error(`Error processing tag \"${tagName}\":`, error.message);\r\n        errors.push({ tagName, error: error.message });\r\n      }\r\n    }\r\n\r\n    // Füge AI-Processed Tag hinzu, wenn aktiviert\r\n    if (process.env.ADD_AI_PROCESSED_TAG === 'yes' && process.env.AI_PROCESSED_TAG_NAME) {\r\n      try {\r\n        const aiTagName = process.env.AI_PROCESSED_TAG_NAME;\r\n        let aiTag = await this.findExistingTag(aiTagName);\r\n        \r\n        if (!aiTag) {\r\n          aiTag = await this.createTagSafely(aiTagName);\r\n        }\r\n\r\n        if (aiTag && aiTag.id) {\r\n          tagIds.push(aiTag.id);\r\n        }\r\n      } catch (error) {\r\n        console.error(`Error processing AI tag \"${process.env.AI_PROCESSED_TAG_NAME}\":`, error.message);\r\n        errors.push({ tagName: process.env.AI_PROCESSED_TAG_NAME, error: error.message });\r\n      }\r\n    }\r\n\r\n    return { \r\n      tagIds: [...new Set(tagIds)], // Entferne eventuelle Duplikate\r\n      errors \r\n    };\r\n  }\r\n\r\n  async getTags() {\r\n    this.initialize();\r\n    try {\r\n      const response = await this.client.get('/tags/');\r\n      return response.data.results;\r\n    } catch (error) {\r\n      console.error('Error fetching tags:', error.message);\r\n      return [];\r\n    }\r\n  }\r\n\r\n  async getAllDocuments() {\r\n    this.initialize();\r\n    if (!this.client) {\r\n      console.error('Client not initialized');\r\n      return [];\r\n    }\r\n\r\n    let documents = [];\r\n    let page = 1;\r\n    let hasMore = true;\r\n    const shouldFilterByTags = process.env.PROCESS_PREDEFINED_DOCUMENTS === 'yes';\r\n    let predefinedTags = [];\r\n\r\n    // Vorverarbeitung der Tags, wenn Filter aktiv ist\r\n    if (shouldFilterByTags) {\r\n      if (!process.env.TAGS) {\r\n        console.warn('PROCESS_PREDEFINED_DOCUMENTS is set to yes but no TAGS are defined');\r\n        return [];\r\n      }\r\n      // Initialen Tag-Cache aufbauen\r\n      await this.ensureTagCache();\r\n      predefinedTags = process.env.TAGS.split(',').map(tag => tag.trim().toLowerCase());\r\n      console.log('Filtering documents for tags:', predefinedTags);\r\n    }\r\n\r\n    while (hasMore) {\r\n      try {\r\n        const response = await this.client.get('/documents/', {\r\n          params: {\r\n            page: page,\r\n            page_size: 100,\r\n            fields: 'id,title,created,created_date,added,tags,correspondent'\r\n          }\r\n        });\r\n\r\n        // Überprüfe die API-Antwort auf Gültigkeit\r\n        if (!response || !response.data) {\r\n          console.error(`Invalid API response on page ${page}:`, response);\r\n          break;\r\n        }\r\n\r\n        // Überprüfe, ob results ein Array ist\r\n        if (!Array.isArray(response.data.results)) {\r\n          console.error(`Invalid results format on page ${page}. Expected array, got:`, typeof response.data.results);\r\n          break;\r\n        }\r\n        \r\n        let pageDocuments = response.data.results;\r\n\r\n        // Filter nach Tags, wenn aktiviert\r\n        if (shouldFilterByTags && pageDocuments.length > 0) {\r\n          // Verarbeite Dokumente parallel für bessere Performance\r\n          const filteredDocuments = await Promise.all(\r\n            pageDocuments.map(async doc => {\r\n              if (!doc || !Array.isArray(doc.tags)) return null;\r\n\r\n              // Prüfe Tags des Dokuments\r\n              if (doc.tags.length === 0) return null;\r\n\r\n              // Hole alle Tag-Namen für die Tag-IDs des Dokuments\r\n              const docTagNames = await Promise.all(\r\n                doc.tags.map(async tagId => {\r\n                  try {\r\n                    // Versuche zuerst im Cache nachzusehen\r\n                    for (const [tagName, tagData] of this.tagCache) {\r\n                      if (tagData.id === tagId) return tagName;\r\n                    }\r\n                    // Wenn nicht im Cache, hole von API\r\n                    const tagText = await this.getTagTextFromId(tagId);\r\n                    return tagText ? tagText.toLowerCase() : null;\r\n                  } catch (error) {\r\n                    console.error(`Error fetching tag ${tagId}:`, error.message);\r\n                    return null;\r\n                  }\r\n                })\r\n              );\r\n\r\n              // Prüfe, ob mindestens ein Tag übereinstimmt\r\n              const hasMatchingTag = docTagNames.some(tagName => \r\n                tagName && predefinedTags.includes(tagName)\r\n              );\r\n\r\n              return hasMatchingTag ? doc : null;\r\n            })\r\n          );\r\n\r\n          // Filtere null-Werte heraus\r\n          pageDocuments = filteredDocuments.filter(doc => doc !== null);\r\n        }\r\n        \r\n        documents = documents.concat(pageDocuments);\r\n        \r\n        // Prüfe auf weitere Seiten\r\n        hasMore = response.data.next !== null;\r\n        page++;\r\n        \r\n        console.log(\r\n          `Fetched page ${page-1}, got ${pageDocuments.length} ` +\r\n          `${shouldFilterByTags ? 'matching ' : ''}documents. ` +\r\n          `Total so far: ${documents.length}`\r\n        );\r\n\r\n        // Optional: Füge eine kleine Verzögerung ein, um die API nicht zu überlasten\r\n        await new Promise(resolve => setTimeout(resolve, 100));\r\n        \r\n      } catch (error) {\r\n        console.error(`Error fetching documents page ${page}:`, error.message);\r\n        if (error.response) {\r\n          console.error('Response data:', error.response.data);\r\n          console.error('Response status:', error.response.status);\r\n        }\r\n        // Bei einem Fehler brechen wir die Schleife ab und geben die bisher gesammelten Dokumente zurück\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (shouldFilterByTags) {\r\n      console.log(`Finished filtering. Found ${documents.length} documents matching the predefined tags.`);\r\n    }\r\n    return documents;\r\n  }\r\n  \r\n  // Aktualisierte getDocuments Methode\r\n  async getDocuments() {\r\n    return this.getAllDocuments();\r\n  }\r\n\r\n  async getDocumentContent(documentId) {\r\n    this.initialize();\r\n    const response = await this.client.get(`/documents/${documentId}/`);\r\n    return response.data.content;\r\n  }\r\n\r\n  async getDocument(documentId) {\r\n    this.initialize();\r\n    try {\r\n      const response = await this.client.get(`/documents/${documentId}/`);\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(`Error fetching document ${documentId}:`, error.message);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getOrCreateCorrespondent(name) {\r\n    this.initialize();\r\n    const normalizedName = name.toLowerCase();\r\n  \r\n    try {\r\n      // Zuerst versuchen, den Korrespondenten zu finden\r\n      const response = await this.client.get('/correspondents/', {\r\n        params: { name: name }\r\n      });\r\n  \r\n      const existingCorrespondent = response.data.results.find(\r\n        c => c.name.toLowerCase() === normalizedName\r\n      );\r\n  \r\n      if (existingCorrespondent) {\r\n        console.log(`Found existing correspondent \"${name}\" with ID ${existingCorrespondent.id}`);\r\n        return existingCorrespondent;\r\n      }\r\n  \r\n      // Wenn nicht gefunden, erstelle neuen Korrespondenten\r\n      try {\r\n        // remove spaces from name and fill with - to get a valid name, remove . and , as well\r\n        name = name.replace(/ /g, '-').replace(/\\./g, '').replace(/,/g, '');\r\n        const createResponse = await this.client.post('/correspondents/', { name });\r\n        console.log(`Created new correspondent \"${name}\" with ID ${createResponse.data.id}`);\r\n        return createResponse.data;\r\n      } catch (createError) {\r\n        if (createError.response?.status === 400 && \r\n            createError.response?.data?.error?.includes('unique constraint')) {\r\n          \r\n          // Falls der Korrespondent in der Zwischenzeit erstellt wurde\r\n          const retryResponse = await this.client.get('/correspondents/', {\r\n            params: { name: name }\r\n          });\r\n          \r\n          const justCreatedCorrespondent = retryResponse.data.results.find(\r\n            c => c.name.toLowerCase() === normalizedName\r\n          );\r\n          \r\n          if (justCreatedCorrespondent) {\r\n            console.log(`Retrieved correspondent \"${name}\" after constraint error with ID ${justCreatedCorrespondent.id}`);\r\n            return justCreatedCorrespondent;\r\n          }\r\n        }\r\n        throw createError;\r\n      }\r\n    } catch (error) {\r\n      console.error(`Failed to process correspondent \"${name}\":`, error.message);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async removeUnusedTagsFromDocument(documentId, keepTagIds) {\r\n    this.initialize();\r\n    if (!this.client) return;\r\n  \r\n    try {\r\n      console.log(`Removing unused tags from document ${documentId}, keeping tags:`, keepTagIds);\r\n      \r\n      // Hole aktuelles Dokument\r\n      const currentDoc = await this.getDocument(documentId);\r\n      \r\n      // Finde Tags die entfernt werden sollen (die nicht in keepTagIds sind)\r\n      const tagsToRemove = currentDoc.tags.filter(tagId => !keepTagIds.includes(tagId));\r\n      \r\n      if (tagsToRemove.length === 0) {\r\n        console.log('No tags to remove');\r\n        return currentDoc;\r\n      }\r\n  \r\n      // Update das Dokument mit nur den zu behaltenden Tags\r\n      const updateData = {\r\n        tags: keepTagIds\r\n      };\r\n  \r\n      // Führe das Update durch\r\n      await this.client.patch(`/documents/${documentId}/`, updateData);\r\n      console.log(`Successfully removed ${tagsToRemove.length} tags from document ${documentId}`);\r\n      \r\n      return await this.getDocument(documentId);\r\n    } catch (error) {\r\n      console.error(`Error removing unused tags from document ${documentId}:`, error.message);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  async getTagTextFromId(tagId) {\r\n    this.initialize();\r\n    try {\r\n      const response = await this.client.get(`/tags/${tagId}/`);\r\n      return response.data.name;\r\n    } catch (error) {\r\n      console.error(`Error fetching tag text for ID ${tagId}:`, error.message);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  async updateDocument(documentId, updates) {\r\n    this.initialize();\r\n    if (!this.client) return;\r\n  \r\n    try {\r\n      // Hole aktuelles Dokument mit existierenden Tags\r\n      const currentDoc = await this.getDocument(documentId);\r\n      \r\n      // Wenn das Update Tags enthält, füge sie zu den existierenden hinzu\r\n      if (updates.tags) {\r\n        console.log(`Current tags for document ${documentId}:`, currentDoc.tags);\r\n        console.log(`Adding new tags:`, updates.tags);\r\n        \r\n        // Kombiniere existierende und neue Tags\r\n        const combinedTags = [...new Set([...currentDoc.tags, ...updates.tags])];\r\n        updates.tags = combinedTags;\r\n        \r\n        console.log(`Combined tags:`, combinedTags);\r\n      }\r\n  \r\n      // Bereite die Update-Daten vor\r\n      const updateData = {\r\n        ...updates,\r\n        // Wenn ein Datum vorhanden ist, formatiere es korrekt für die API\r\n        ...(updates.created && {\r\n          created: new Date(updates.created).toISOString()\r\n        })\r\n      };\r\n  \r\n      // Führe das Update durch\r\n      await this.client.patch(`/documents/${documentId}/`, updateData);\r\n      console.log(`Updated document ${documentId} with:`, updateData);\r\n      \r\n      return await this.getDocument(documentId); // Optional: Gib das aktualisierte Dokument zurück\r\n    } catch (error) {\r\n      console.error(`Error updating document ${documentId}:`, error.message);\r\n      return null; // Oder eine andere geeignete Rückgabe\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = new PaperlessService();"
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-06T08:53:07Z",
        "body": "I heavily think that has something to do that I do not exclude the 'content' key while fetching all documents. So it basically fetched every document including the ocr text from the api at once. Looking at 11k docs this could overwhelm the api and server."
      },
      {
        "user": "tttuntcloud",
        "created_at": "2025-01-06T10:57:11Z",
        "body": "Just to be sure – the changes are required in the AI container and not in the regular Paperless, right?"
      },
      {
        "user": "ChiliChonka",
        "created_at": "2025-01-06T11:49:34Z",
        "body": "> I heavily think that has something to do that I do not exclude the 'content' key while fetching all documents. So it basically fetched every document including the ocr text from the api at once. Looking at 11k docs this could overwhelm the api and server.\r\n\r\nI saw the implementation. You may have the option, to pickup chunks, and/or by creation date to reduce the paperless-ngx API.\r\n\r\nDo you think, this would be an option?"
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-06T12:12:48Z",
        "body": "Yes in the AI container. Try it out, it should reduce the load. *hopefully* :D"
      },
      {
        "user": "ChiliChonka",
        "created_at": "2025-01-06T12:23:16Z",
        "body": "As soon as I will find some time. :)"
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-06T13:01:20Z",
        "body": "> As soon as I will find some time. :)\r\n\r\nAh sorry I meant @tttuntcloud with my previous answer. I think this solution will already reduce the load."
      }
    ]
  },
  {
    "number": 30,
    "title": "Display Version Number in /setup or Similar Interface",
    "created_at": "2025-01-05T11:01:00Z",
    "closed_at": "2025-01-05T11:38:38Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/30",
    "body": "**Description**\r\n\r\nIt would be highly beneficial to display the current version number of clusterzx/paperless-ai directly within the /setup page or a similar configuration/interface section. This feature would make it easier to identify the installed version without requiring command-line access or manual inspection of container logs.\r\n\r\n**Proposed Feature**\r\n\t•\tAdd the current version number of the application to the /setup page or another easily accessible location within the web interface.\r\n\t•\tEnsure that the version number updates automatically with each new release.\r\n\r\n**Benefits**\r\n\t•\tSimplifies version tracking for administrators and users.\r\n\t•\tFacilitates troubleshooting by allowing quick verification of the installed version.\r\n\t•\tHelps ensure that users are running the latest version without unnecessary guesswork.\r\n\r\n**Additional Notes**\r\n\r\nThis feature could be implemented as a small addition to the /setup or a dedicated “About” page, making it non-intrusive yet highly effective.\r\n\r\n**Thank you for the great work on this project! Your efforts are highly appreciated, and features like this will make an already excellent tool even better.**",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/30/comments",
    "author": "MagnusHL",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-05T11:18:24Z",
        "body": "A great idea and I fully agree. \nI will add a version number in the next release. \n\nThank you so much for your words and also for your valuable input and ideas. "
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-05T19:47:47Z",
        "body": "Added with commit 3ef1bca"
      }
    ]
  },
  {
    "number": 24,
    "title": "Feature Request: Add Custom Tag to Processed Documents",
    "created_at": "2025-01-03T15:21:16Z",
    "closed_at": "2025-01-04T16:32:23Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/24",
    "body": "**Description**\r\n\r\nCurrently, clusterzx/paperless-ai processes new documents as expected. However, it is difficult to track which documents have already been processed by the tool. To improve oversight and control, I would like to request a feature where processed documents are assigned a user-definable tag.\r\n\r\n**Proposed Feature**\r\n\t•\tAdd the ability to define a custom tag in the configuration.\r\n\t•\tAutomatically apply the tag to documents once they have been processed by the clusterzx/paperless-ai tool.\r\n\r\n**Benefits**\r\n\t•\tProvides clear visibility into which documents have been processed.\r\n\t•\tSimplifies document management and avoids duplicate processing.\r\n\t•\tEnables users to create workflows or filters based on the assigned tag.\r\n\r\n**Example Use Case**\r\n\t1.\tA document is processed by clusterzx/paperless-ai.\r\n\t2.\tThe tool applies a tag, e.g., ai-processed, to the document in PaperlessNGX.\r\n\t3.\tUsers can filter documents in PaperlessNGX to see which have been processed and which have not.\r\n\r\n**Additional Notes**\r\nThis feature could be implemented as an optional setting, allowing users to enable or disable it based on their preferences.",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/24/comments",
    "author": "MagnusHL",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-03T15:27:12Z",
        "body": "Added to Roadmap"
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-04T16:32:23Z",
        "body": "Done as you wished, Thanks for the input. 👍 "
      },
      {
        "user": "MagnusHL",
        "created_at": "2025-01-05T11:00:13Z",
        "body": "Great, thank you very much!!! <3"
      }
    ]
  },
  {
    "number": 21,
    "title": "Feature Request: Support for additional (custom) fields.",
    "created_at": "2025-01-03T11:31:58Z",
    "closed_at": "2025-01-04T16:21:31Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/issues/21",
    "body": "I would like to have additional metadata extracted and stored in the documenttype or in customfields.\r\n\r\nThis could be, for example\r\n\r\ncustomfield\r\n- contract duration\r\n- invoice total\r\nor\r\ndocumenttype\r\n- invoice\r\n- contract\r\n\r\nA first attempt with test data and a corresponding manual prompt in OpenAI already produced very good results for contract duration and invoice total - the only thing I'm missing is transferring the results to Paperless.\r\n\r\nCustomfield could be defined in the Prompt and filled in if can be determined.",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/21/comments",
    "author": "thorschtn",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-03T21:55:28Z",
        "body": "Can you point me to the correct API Route or which payload items are suitable for that (in paperless-ngx itself)"
      },
      {
        "user": "thorschtn",
        "created_at": "2025-01-04T14:26:35Z",
        "body": "> Can you point me to the correct API Route or which payload items are suitable for that (in paperless-ngx itself)\r\n\r\na) `/api/document_types/` - which has same structure and methods as `/api/tags/` and `/api/correspondents/`\r\n\r\nb) `/api/custom_fields/` - which contains [0..n] user defined key:value pairs:\r\n`GET /api/custom_fields/`\r\n\r\n```\r\n{\r\n    \"count\": 3,\r\n    \"next\": null,\r\n    \"previous\": null,\r\n    \"all\": [\r\n        4,\r\n        3,\r\n        2\r\n    ],\r\n    \"results\": [\r\n        {\r\n            \"id\": 4,\r\n            \"name\": \"Ansprechpartner\",\r\n            \"data_type\": \"string\",\r\n            \"extra_data\": {\r\n                \"select_options\": [\r\n                    null\r\n                ],\r\n                \"default_currency\": null\r\n            },\r\n            \"document_count\": 1\r\n        },\r\n        {\r\n            \"id\": 3,\r\n            \"name\": \"Laufzeit\",\r\n            \"data_type\": \"string\",\r\n            \"extra_data\": {\r\n                \"select_options\": [\r\n                    null\r\n                ],\r\n                \"default_currency\": null\r\n            },\r\n            \"document_count\": 0\r\n        },\r\n        {\r\n            \"id\": 2,\r\n            \"name\": \"Gesamtsumme\",\r\n            \"data_type\": \"monetary\",\r\n            \"extra_data\": {\r\n                \"select_options\": [\r\n                    null\r\n                ],\r\n                \"default_currency\": \"EUR\"\r\n            },\r\n            \"document_count\": 0\r\n        }\r\n    ]\r\n}\r\n```\r\n"
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-04T16:21:31Z",
        "body": "Will add this to the roadmap. \r\n\r\nDanke für den Input 👍 "
      }
    ]
  },
  {
    "number": 14,
    "title": "[Feature Request] Only use existing tags",
    "created_at": "2025-01-02T18:16:38Z",
    "closed_at": "2025-01-02T21:36:51Z",
    "labels": [
      "enhancement",
      "done"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/14",
    "body": "Hi, thanks for this project! \r\n\r\nI've meticulously curated my set of tags, and I'm not necessarily looking to add new ones. It would be great to have an ENV var along the lines of `ONLY_USE_EXISTING_TAGS` at which point these could be injected in the (default) system prompt instructing the model to only consider this list of existing tags: `<query them from paperless api>`. \r\n\r\nLet me know what you think!\r\n",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/14/comments",
    "author": "madmath",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-02T18:20:22Z",
        "body": "You are very welcome, glad that you like it.\r\nMaybe you will like it much more in the future as I have this already in development. 😄 \r\n\r\nI will let you know here when the feature is implemented."
      },
      {
        "user": "Se7enair",
        "created_at": "2025-02-11T13:19:38Z",
        "body": "Do I understand this correct, that I have to add every Tag I want to use manually in there?\n\nOr other way round, I want that only tags which are already created should be used. How can I achieve that? This new feature seems not the right one."
      },
      {
        "user": "jg-development",
        "created_at": "2025-02-15T12:01:10Z",
        "body": "the feature, that ai should not add new tags, document_types, correspondents is imho a must have feature (would be awesome).\nI have created everything in paperless-ngx and I do not want ai to add something, rather then try to match to existing.\nis this a possible feature in the future? can we open this issue again plz?\ngreetings "
      }
    ]
  },
  {
    "number": 9,
    "title": "chore: update setup.js",
    "created_at": "2025-01-02T14:05:27Z",
    "closed_at": "2025-01-02T14:49:38Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/pull/9",
    "body": "occured -> occurred",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/9/comments",
    "author": "eltociear",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2025-01-02T14:50:01Z",
        "body": "Thank you :) "
      }
    ]
  },
  {
    "number": 4,
    "title": "Feature Request: Exclude documents based on user needs.",
    "created_at": "2024-12-27T14:49:57Z",
    "closed_at": "2024-12-29T17:32:49Z",
    "labels": [
      "enhancement",
      "done"
    ],
    "url": "https://github.com/clusterzx/paperless-ai/issues/4",
    "body": "Hello,\r\ndoes this only do tagging and correspondent or can it also do document title?",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/4/comments",
    "author": "beber-msft",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2024-12-27T15:30:13Z",
        "body": "It also does the title. "
      },
      {
        "user": "beber-msft",
        "created_at": "2024-12-27T16:25:17Z",
        "body": "thanks, this is great.\r\nlooking at it now in more detail.\r\ntwo more qq.\r\na) setup seems to always failback to GPT4.5T and not accepting my switch to 4o-mini.\r\nb) is there a way to have it look only at inbox tagged items?"
      },
      {
        "user": "clusterzx",
        "created_at": "2024-12-28T12:56:51Z",
        "body": "Thank you for your questions:\r\n\r\nA) I will look this issue up and try to reproduce it.\r\nB) Currently it looks for all documents that are not already processed by paperless-ai. Though it might be a neat feature request for upcoming versions to declare which documents gonna be processed. "
      },
      {
        "user": "clusterzx",
        "created_at": "2024-12-28T14:22:06Z",
        "body": "I can't reproduce the issue with fallback to a different OpenAI Model. Also the setup process does not include GPT4 Turbo. \r\nPlease verify something for me:\r\n\r\n1. Do a fresh install process of paperless-ai\r\n2. Select for example GTP-4o-mini\r\n3. Finish the installation\r\n4. Look into the created .env file and verify what model is saved there\r\n\r\nThen please get back here and tell me your findings. "
      },
      {
        "user": "beber-msft",
        "created_at": "2024-12-29T17:26:39Z",
        "body": "thank you. \r\nregarding a) this would be fantastic as I have thousands of documents already that I dont want to send all to AI, only new ones.\r\nb) looks like it did save the correct model but did switch setup screen for selection back to default."
      },
      {
        "user": "clusterzx",
        "created_at": "2024-12-29T17:30:04Z",
        "body": "Yeah regarding the switch back is because if you reload or reopen the setup process it will alway preselect the first entry from the drop down. So its just a visual thing. \r\n\r\nI assume I can close the issue here?"
      },
      {
        "user": "beber-msft",
        "created_at": "2024-12-29T17:33:15Z",
        "body": "appreciate your work and help!"
      },
      {
        "user": "clusterzx",
        "created_at": "2024-12-29T17:34:11Z",
        "body": "I will tag you here in the next days when the new feature is implemented.\r\nYou are most welcome 👍 "
      },
      {
        "user": "clusterzx",
        "created_at": "2025-01-01T21:14:54Z",
        "body": "Done! You can now predefine in the setup process wich pretagged documents will be processed."
      }
    ]
  },
  {
    "number": 3,
    "title": "Add Document content to ollama prompt",
    "created_at": "2024-12-26T21:14:44Z",
    "closed_at": "2024-12-26T21:31:41Z",
    "labels": [],
    "url": "https://github.com/clusterzx/paperless-ai/pull/3",
    "body": "I've found that ollama came up with nonsensical correspondent names (akin to ACME Corp, ABC Industries etc).\r\nUpon inspection it seems like the document information is not appended to the prompt at all so in retrospective the behaviour does make sense. \r\n\r\nFun fact, no errors were seen in the logs when using mistral as a model. After switching to llama3.2, the LLM's reply actually mentions it's not able to build the requested output since the input is missing. ",
    "comments_url": "https://api.github.com/repos/clusterzx/paperless-ai/issues/3/comments",
    "author": "fstolba",
    "comments": [
      {
        "user": "clusterzx",
        "created_at": "2024-12-26T21:31:36Z",
        "body": "Oh wow you are absolutely right with that. \n\nI forgot to add the content part to the prompt after reworking the ollamaService. \n\nThanks for your valuable input. I really appreciate that. "
      }
    ]
  }
]