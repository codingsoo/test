[
  {
    "number": 595,
    "title": "Commit `package-lock.json` with new `universal-user-agent` dependency",
    "created_at": "2025-02-04T13:17:39Z",
    "closed_at": "2025-02-10T11:49:29Z",
    "labels": [],
    "url": "https://github.com/modelcontextprotocol/servers/pull/595",
    "body": "This fixes the build, after the merge of #592, by committing an updated `/package-lock.json` file with the new `universal-user- agent` dependency.",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/595/comments",
    "author": "timrogers",
    "comments": [
      {
        "user": "dsp-ant",
        "created_at": "2025-02-10T11:49:29Z",
        "body": "Thank you"
      }
    ]
  },
  {
    "number": 465,
    "title": "feat: add weekly release automation",
    "created_at": "2025-01-03T00:01:00Z",
    "closed_at": "2025-01-13T11:37:21Z",
    "labels": [],
    "url": "https://github.com/modelcontextprotocol/servers/pull/465",
    "body": "This PR adds weekly release automation for both NPM and Python packages. The automation will run every Monday at 9:00 UTC and will:\n\n- Detect changes in packages since last Monday\n- Bump versions based on conventional commits\n- Generate changelogs\n- Create GitHub releases\n- Publish to NPM and PyPI\n\nTest plan:\n- [ ] Run workflow manually to verify it works\n- [ ] Check that both NPM and Python packages are detected\n- [ ] Verify version bumping logic\n- [ ] Verify changelog generation\n- [ ] Verify GitHub release creation\n- [ ] Verify package publishing",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/465/comments",
    "author": "dsp-ant",
    "comments": [
      {
        "user": "punkpeye",
        "created_at": "2025-01-03T18:46:17Z",
        "body": "Why weekly as opposed to every time a change is made to the package?"
      }
    ]
  },
  {
    "number": 340,
    "title": "Add Riza's MCP server to README",
    "created_at": "2024-12-13T19:23:30Z",
    "closed_at": "2025-02-08T05:06:14Z",
    "labels": [],
    "url": "https://github.com/modelcontextprotocol/servers/pull/340",
    "body": "## Description\r\n\r\nUpdating the list of third-party MCP implementations in the README to include Riza's MCP server.\r\n\r\n## Types of changes\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to change)\r\n- [x] Documentation update\r\n",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/340/comments",
    "author": "andrewmbenton",
    "comments": [
      {
        "user": "andrewmbenton",
        "created_at": "2024-12-23T18:03:18Z",
        "body": "@jspahrsummers Comments addressed, ready for another look."
      },
      {
        "user": "jerome3o-anthropic",
        "created_at": "2025-02-07T00:34:34Z",
        "body": "this looks really neat @andrewmbenton - I'd love to merge it but there are conflicts. I usually do a quick driveby fix in the gh ui but for some reason this PR isn't letting me - do you mind updating it and we can üö¢ it?"
      },
      {
        "user": "andrewmbenton",
        "created_at": "2025-02-07T01:03:07Z",
        "body": "Forgot that this hadn't shipped, I'll take a look real quick. Thanks for bumping."
      },
      {
        "user": "andrewmbenton",
        "created_at": "2025-02-07T01:09:24Z",
        "body": "OK @jerome3o-anthropic I think this should be mergeable now."
      },
      {
        "user": "andrewmbenton",
        "created_at": "2025-02-07T01:35:59Z",
        "body": "Ah yes, alphabetized now.\r\n\r\nWe also have been working on an MCP server framework in Go but I will submit that as a separate PR."
      },
      {
        "user": "andrewmbenton",
        "created_at": "2025-02-07T22:03:49Z",
        "body": "@jerome3o-anthropic gentle ping to see if this is merge-worthy now?"
      }
    ]
  },
  {
    "number": 313,
    "title": "Add missing servers to README",
    "created_at": "2024-12-11T15:35:21Z",
    "closed_at": "2024-12-13T13:19:49Z",
    "labels": [],
    "url": "https://github.com/modelcontextprotocol/servers/pull/313",
    "body": null,
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/313/comments",
    "author": "maheshmurag",
    "comments": [
      {
        "user": "jsutaria",
        "created_at": "2024-12-20T18:46:44Z",
        "body": "Wow thank you so much for this üôèüôèüôè\r\n\r\nLife saving üôá‚Äç‚ôÇÔ∏è"
      }
    ]
  },
  {
    "number": 303,
    "title": "git-server doesn't provide git_checkout tool",
    "created_at": "2024-12-11T02:25:50Z",
    "closed_at": "2024-12-13T13:24:38Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/modelcontextprotocol/servers/issues/303",
    "body": "**Describe the bug**\r\ngit server document write about git_checkout feature but list_tools() does not return this tool.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. create simple mcp-client which can connect mcp-server-git\r\n2. after connecting session, call session.list_tools()\r\n3. git_checkout is not included in response\r\n\r\n**Expected behavior**\r\ngit server should return git_checkout tool info for list_tools().\r\n\r\n**Logs**\r\nIf applicable, add logs to help explain your problem.\r\n\r\nprint( session.list_tools()) is bellow:\r\n```\r\nnextCursor=None tools=[Tool(name='git_status', description='Shows the working tree status', inputSchema={'properties': {'repo_path': {'title': 'Repo Path', 'type': 'string'}}, 'required': ['repo_path'], 'title': 'GitStatus', 'type': 'object'}), Tool(name='git_diff_unstaged', description='Shows changes in the working directory that are not yet staged', inputSchema={'properties': {'repo_path': {'title': 'Repo Path', 'type': 'string'}}, 'required': ['repo_path'], 'title': 'GitDiffUnstaged', 'type': 'object'}), Tool(name='git_diff_staged', description='Shows changes that are staged for commit', inputSchema={'properties': {'repo_path': {'title': 'Repo Path', 'type': 'string'}}, 'required': ['repo_path'], 'title': 'GitDiffStaged', 'type': 'object'}), Tool(name='git_commit', description='Records changes to the repository', inputSchema={'properties': {'repo_path': {'title': 'Repo Path', 'type': 'string'}, 'message': {'title': 'Message', 'type': 'string'}}, 'required': ['repo_path', 'message'], 'title': 'GitCommit', 'type': 'object'}), Tool(name='git_add', description='Adds file contents to the staging area', inputSchema={'properties': {'repo_path': {'title': 'Repo Path', 'type': 'string'}, 'files': {'items': {'type': 'string'}, 'title': 'Files', 'type': 'array'}}, 'required': ['repo_path', 'files'], 'title': 'GitAdd', 'type': 'object'}), Tool(name='git_reset', description='Unstages all staged changes', inputSchema={'properties': {'repo_path': {'title': 'Repo Path', 'type': 'string'}}, 'required': ['repo_path'], 'title': 'GitReset', 'type': 'object'}), Tool(name='git_log', description='Shows the commit logs', inputSchema={'properties': {'repo_path': {'title': 'Repo Path', 'type': 'string'}, 'max_count': {'default': 10, 'title': 'Max Count', 'type': 'integer'}}, 'required': ['repo_path'], 'title': 'GitLog', 'type': 'object'}), Tool(name='git_create_branch', description='Creates a new branch from an optional base branch', inputSchema={'properties': {'repo_path': {'title': 'Repo Path', 'type': 'string'}, 'branch_name': {'title': 'Branch Name', 'type': 'string'}, 'base_branch': {'anyOf': [{'type': 'string'}, {'type': 'null'}], 'default': None, 'title': 'Base Branch'}}, 'required': ['repo_path', 'branch_name'], 'title': 'GitCreateBranch', 'type': 'object'})]\r\n```\r\n\r\n**Additional context**\r\ngithub server have similar bug. it return only 9 tools.\r\ngit server also return only 9 tools. It seems mcp servers (in general) return only 9 tools in list_tools().\r\nIt may be able to return more tools info if I pass something to list_tools() but I don't know how.\r\n'Cursor' is None, so it seems no more data there.\r\n\r\nI NEED MORE DOCUMENTS AND SAMPLE CODE!\r\n\r\n",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/303/comments",
    "author": "kzmszk",
    "comments": [
      {
        "user": "jspahrsummers",
        "created_at": "2024-12-13T13:24:38Z",
        "body": "Sounds like this is an SDK issue (thanks for filing the bug there!) so will close this one out."
      }
    ]
  },
  {
    "number": 300,
    "title": "Brave search mcp server error: fetch is not defined",
    "created_at": "2024-12-10T23:16:32Z",
    "closed_at": "2024-12-11T00:30:53Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/modelcontextprotocol/servers/issues/300",
    "body": "**Describe the bug**\r\nI have configured the brave search mcp server on my mac, but when Claude tried to used got **Error: fetch is not defined**\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Configure the brave search mcp server like this\r\n\"brave-search\": {\r\n        \"command\": \"npx\",\r\n        \"args\": [\r\n          \"-y\",\r\n          \"@modelcontextprotocol/server-brave-search\"\r\n        ],\r\n        \"env\": {\r\n          \"BRAVE_API_KEY\": \"BSASaoHXXXXXXXXXXXX\"\r\n        }\r\n      }\r\n2. Restart Claude Desktop app\r\n3. look for the MCP available tools\r\n4. got the brave_web_search tools listed\r\n5. ask about something like: look something about steve jobs \r\n6. Claude tried to do\r\n{\r\n  `count`: 5,\r\n  `query`: `Steve Jobs biography achievements Apple history`\r\n}\r\n\r\n**Expected behavior**\r\nTo use the results from the brave search API\r\n\r\n**Logs**\r\nIf applicable, add logs to help explain your problem.\r\n\r\n**Additional context**\r\nMy current Claude Desktop version is Version 0.7.5 (0.7.5)\r\n",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/300/comments",
    "author": "juanmacedan1co",
    "comments": [
      {
        "user": "juanmacedan1co",
        "created_at": "2024-12-11T00:31:49Z",
        "body": "the fix was to include the correct node version in the ENV \r\nPATH=/Users/username/.nvm/versions/node/v20.18.0/bin:/usr/local/bin:/usr/bin:/bin"
      },
      {
        "user": "wolf019",
        "created_at": "2025-01-07T09:26:50Z",
        "body": "Thanks for reporting this issue! I encountered the same \"Error: fetch is not defined\" problem on my mac.\r\n\r\nThe solution that worked for me was updating the Node version in the PATH environment variable in the claude_desktop_config.json:\r\n\r\n```\r\n{\r\n  \"mcpServers\": {\r\n    \"brave-search\": {\r\n      \"command\": \"npx\",\r\n      \"args\": [\r\n        \"-y\",\r\n        \"@modelcontextprotocol/server-brave-search\"\r\n      ],\r\n      \"env\": {\r\n        \"BRAVE_API_KEY\": \"your-api-key\",\r\n        \"PATH\": \"/Users/username/.nvm/versions/node/v20.18.0/bin:/usr/local/bin:/usr/bin:/bin\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nKey points:\r\n1. Make sure to use a recent Node version (I updated from v16 to v20)\r\n2. Include the full PATH with all system directories\r\n3. Restart Claude Desktop after making these changes\r\n\r\nThis resolved the fetch not defined error and now the Brave search functionality works perfectly!"
      }
    ]
  },
  {
    "number": 290,
    "title": "Add GitLab server implementation",
    "created_at": "2024-12-10T03:32:46Z",
    "closed_at": "2024-12-10T14:17:37Z",
    "labels": [],
    "url": "https://github.com/modelcontextprotocol/servers/pull/290",
    "body": "This PR adds GitLab server implementation with the following features:\n\n- File upload/update endpoint\n- File listing endpoint\n- File download endpoint\n- File deletion endpoint\n\nIncludes comprehensive test coverage.\n\nDependencies:\n- @gitbeaker/node for GitLab API interactions",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/290/comments",
    "author": "vlcosent",
    "comments": [
      {
        "user": "dsp-ant",
        "created_at": "2024-12-10T14:17:37Z",
        "body": "There is already a Gitlab server implementation."
      }
    ]
  },
  {
    "number": 285,
    "title": "Tavily search link is broken",
    "created_at": "2024-12-09T19:15:17Z",
    "closed_at": "2024-12-13T13:17:37Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/modelcontextprotocol/servers/issues/285",
    "body": "**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\nlink to tavily search repo is bogus\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. click on link\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\na valid repo with instructions to install tavily search mpc\r\n\r\n\r\n**Logs**\r\nIf applicable, add logs to help explain your problem.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/285/comments",
    "author": "1of13",
    "comments": [
      {
        "user": "jspahrsummers",
        "created_at": "2024-12-10T10:10:04Z",
        "body": "It appears there's a simple typo in the URL. If you want to submit a PR fixing it, we'd be happy to review!"
      }
    ]
  },
  {
    "number": 271,
    "title": "Node based Git Server",
    "created_at": "2024-12-08T22:14:06Z",
    "closed_at": "2024-12-09T13:26:43Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/modelcontextprotocol/servers/issues/271",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nThe current Git server is implemented in Python, which requires complicated set-up to run and manual download.\r\nAll other servers seem to be implemented based on Node, which is very conveniant.\r\n\r\n**Describe the solution you'd like**\r\nSwitch to Node :-)\r\n\r\n**Additional context**\r\nThank you for MCP and the available servers, really great initiative!\r\n",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/271/comments",
    "author": "JonasHelming",
    "comments": [
      {
        "user": "jspahrsummers",
        "created_at": "2024-12-09T13:26:43Z",
        "body": "Thanks for the feedback! We're purposely demonstrating the use of different languages to build MCP servers in this repo. As these are meant as examples and reference implementations, we'd like to keep it as-is."
      }
    ]
  },
  {
    "number": 260,
    "title": "fix: Improve pull request creation with better validation and error handling",
    "created_at": "2024-12-07T08:07:19Z",
    "closed_at": "2025-02-07T00:22:12Z",
    "labels": [],
    "url": "https://github.com/modelcontextprotocol/servers/pull/260",
    "body": "## Problem\nWhen creating pull requests using the GitHub MCP server, users frequently encounter \\\"Unprocessable Entity\\\" errors without clear indication of the underlying cause.\n\n## Solution\nThis PR improves the pull request creation process by:\n1. Adding branch validation to verify both base and head branches exist\n2. Checking for commit differences between branches before attempting PR creation\n3. Implementing detailed error handling with full GitHub API error messages\n4. Adding helpful console logging for debugging\n\n## Changes\n- Added `validateBranch` function to verify branch existence\n- Added `getCommitDifference` function to check for mergeable changes\n- Enhanced `createPullRequest` with step-by-step validation\n- Improved error messages with detailed GitHub API responses\n\n## Testing\nThe implementation has been tested with:\n- Non-existent branches\n- Branches without commit differences\n- Valid branch combinations\n- Various GitHub API error scenarios\n\n## Related Issues\nCloses #259 - GitHub MCP Server Pull Request Creation Error\n\n## Notes\nThis change makes the PR creation process more robust and provides clearer error messages when something goes wrong.",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/260/comments",
    "author": "ivarvd-hldng",
    "comments": [
      {
        "user": "jerome3o-anthropic",
        "created_at": "2025-02-07T00:22:12Z",
        "body": "I'm going to close this for now as it looks like it needs a lot of work and has been dormant for a while - if you want to pick this back up @ivarvd-hldng then just reopen"
      }
    ]
  },
  {
    "number": 213,
    "title": "[FileSystem] directory_tree base implementation",
    "created_at": "2024-12-03T21:55:51Z",
    "closed_at": "2024-12-11T12:15:44Z",
    "labels": [],
    "url": "https://github.com/modelcontextprotocol/servers/pull/213",
    "body": "## Description\r\nAdd directory_tree function to filesystem server to provide hierarchical visualization of directory structures. This provides a clear, formatted tree view with ASCII characters for structure and distinguishes between files and directories with [F] and [D] prefixes.\r\n\r\n## Server Details\r\n- Server: filesystem\r\n- Changes to: tools (added directory_tree function)\r\n\r\n## Motivation and Context\r\nThe existing list_directory function only shows contents of a single directory level. When analyzing project structures or complex directory hierarchies, users need a recursive view of the entire directory tree. This addition allows LLMs to quickly understand and reason about complete directory structures in a single query.\r\n\r\n## Breaking Changes\r\nNo breaking changes. Adds new functionality while maintaining existing behavior.\r\n\r\n## Types of changes\r\n- [ ] Bug fix\r\n- [x] New feature\r\n- [ ] Breaking change\r\n- [ ] Documentation update\r\n\r\n## Checklist\r\n- [ ] I have read the MCP Protocol Documentation (not read)\r\n- [ ] My changes follows MCP security best practices (not checked the best practices)\r\n- [ ] I have updated the server's README accordingly \r\n- [x] I have tested this with an LLM client\r\n- [x] My code follows the repository's style guidelines\r\n- [ ] New and existing tests pass locally\r\n- [x] I have added appropriate error handling\r\n- [x] I have documented all environment variables and configuration options\r\n\r\n## Additional context\r\nImplementation follows similar pattern to list_directory:\r\n- Uses same path validation mechanism\r\n- Maintains consistent error handling\r\n- Returns same response format\r\n- Uses standardized ASCII characters (‚îÇ ‚îú ‚îî ‚îÄ) for tree structure\r\n- Prefixes entries with [F] for files and [D] for directories\r\n\r\nExample output:\r\n```\r\n‚îú‚îÄ‚îÄ [D] src\r\n‚îÇ   ‚îú‚îÄ‚îÄ [D] main\r\n‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ [F] index.ts\r\n‚îÇ   ‚îî‚îÄ‚îÄ [D] test\r\n‚îÇ       ‚îî‚îÄ‚îÄ [F] test.ts\r\n‚îî‚îÄ‚îÄ [F] package.json\r\n```",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/213/comments",
    "author": "lamemind",
    "comments": [
      {
        "user": "lamemind",
        "created_at": "2024-12-06T13:36:55Z",
        "body": "> Tool results are meant for consumption by the model, rather than the end user. I'm not sure this visualization will help the model, compared to more structured forms of information (e.g., JSON or XML).\r\n> \r\n> Can you share more about the use case you have in mind?\r\n\r\nHello @jspahrsummers ,\r\n\r\nI didn't focus on the use cases.\r\nI adhered to the format of the `list_directory` function, which returns text decorated with `[FILE]` and `[DIR]` depending on the entry. Claude was OK with this format.\r\n\r\nAnyway, I can change the implementation as you prefer.\r\n\r\nThanks"
      },
      {
        "user": "jspahrsummers",
        "created_at": "2024-12-09T13:41:45Z",
        "body": "I think the `list_directory` case is a bit different, in that it's just adding _tags_ describing each entry, which the model can easily interpret. However, using ASCII art basically relies on the model's _visual understanding of text_, which can vary a lot depending on model‚Äîand in any case, almost certainly won't be as strong as one of these alternatives:\r\n1. A JSON or XML representation of the same information\r\n2. An actual image\r\n\r\nArguably, even a bulleted list with nesting would probably work better. Can you update to one of those, and we can get this merged?"
      },
      {
        "user": "lamemind",
        "created_at": "2024-12-09T20:08:31Z",
        "body": "@jspahrsummers it's done.\r\nI preferred to use an output in JSON format\r\nsorry for the _noise_ in the diff view\r\n\r\nThanks"
      }
    ]
  },
  {
    "number": 211,
    "title": "Unsupported URL Type \"postgresql:\"",
    "created_at": "2024-12-03T20:44:55Z",
    "closed_at": "2024-12-12T18:07:16Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/modelcontextprotocol/servers/issues/211",
    "body": "**Describe the bug**\r\nGetting \r\n```\r\n/opt/homebrew/lib/node_modules/npx/node_modules/npm-package-arg/npa.js:258\r\n      throw unsupportedURLType(urlparse.protocol, res.rawSpec)\r\n      ^\r\n\r\nError: Unsupported URL Type \"postgresql:\": postgresql://plex_user:plex@localhost/plex_db_dev\r\n    at unsupportedURLType (/opt/homebrew/lib/node_modules/npx/node_modules/npm-package-arg/npa.js:200:15)\r\n    at fromURL (/opt/homebrew/lib/node_modules/npx/node_modules/npm-package-arg/npa.js:258:13)\r\n    at resolve (/opt/homebrew/lib/node_modules/npx/node_modules/npm-package-arg/npa.js:77:12)\r\n    at npa (/opt/homebrew/lib/node_modules/npx/node_modules/npm-package-arg/npa.js:52:10)\r\n    at Function.parseArgs (/opt/homebrew/lib/node_modules/npx/node_modules/libnpx/parse-args.js:48:23)\r\n    at Object.<anonymous> (/opt/homebrew/lib/node_modules/npx/index.js:8:20)\r\n    at Module._compile (node:internal/modules/cjs/loader:1469:14)\r\n    at Module._extensions..js (node:internal/modules/cjs/loader:1548:10)\r\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\r\n    at Module._load (node:internal/modules/cjs/loader:1104:12) {\r\n  code: 'EUNSUPPORTEDPROTOCOL'\r\n}\r\n\r\nNode.js v20.18.1\r\n```\r\nin `mcp-server-postgres.log` when starting claude desktop.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Configure postgres\r\n```json\r\n{\r\n  \"mcpServers\": {\r\n    \"postgres\": {\r\n      \"command\": \"npx\",\r\n      \"args\": [\r\n        \"-y\",\r\n        \"@modelcontextprotocol/server-postgres\",\r\n        \"postgresql://plex_user:plex@localhost/plex_db_dev\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n2. (Re)start  Claude\r\n3. Look at `~/Library/Logs/Claude/mcp-server-postgres.log`\r\n\r\n**Expected behavior**\r\nNo error and the postgres should be usable\r\n\r\n**Logs**\r\nsee above\r\n\r\n**Additional context**\r\n- OS\r\n```\r\nOS X 14.5\r\nApple M1\r\n```\r\n- When going through the inspector everything works fine: `npx @modelcontextprotocol/inspector npx -d -y @modelcontextprotocol/server-postgres postgresql://plex_user:plex@localhost/plex_db_dev`\r\n\r\n",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/211/comments",
    "author": "jzillmann",
    "comments": [
      {
        "user": "jspahrsummers",
        "created_at": "2024-12-04T11:17:39Z",
        "body": "It looks like `npx` is interpreting the `postgresql://` argument. Can you try the following config instead:\r\n\r\n```json\r\n{\r\n  \"mcpServers\": {\r\n    \"postgres\": {\r\n      \"command\": \"npx\",\r\n      \"args\": [\r\n        \"-y\",\r\n        \"@modelcontextprotocol/server-postgres\",\r\n        \"--\",\r\n        \"postgresql://plex_user:plex@localhost/plex_db_dev\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n```"
      },
      {
        "user": "jzillmann",
        "created_at": "2024-12-04T13:00:13Z",
        "body": "Having now \r\n```\r\n{\r\n  \"mcpServers\": {\r\n    \"postgres\": {\r\n      \"command\": \"npx\",\r\n      \"args\": [\r\n        \"-y\",\r\n        \"@modelcontextprotocol/server-postgres\",\r\n        \"--\",\r\n        \"postgresql://plex_user:plex@localhost/plex_db_dev\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nbut It doesn't make a difference, still getting `Error: Unsupported URL Type \"postgresql:\"`\r\n\r\n"
      },
      {
        "user": "jzillmann",
        "created_at": "2024-12-10T13:48:39Z",
        "body": "Think this was caused by an old `npx` installation.\r\nLinking npx `sudo ln -s /opt/homebrew/opt/node@20/bin/npx /usr/local/bin/npx` fixed things for me!"
      }
    ]
  },
  {
    "number": 196,
    "title": "Add Tinybird MCP server to official integrations",
    "created_at": "2024-12-03T13:09:22Z",
    "closed_at": "2024-12-03T13:09:48Z",
    "labels": [],
    "url": "https://github.com/modelcontextprotocol/servers/pull/196",
    "body": "<!-- Provide a brief description of your changes -->\r\n\r\nAdd Tinybird MCP to the list of MCP servers under Official Integrations",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/196/comments",
    "author": "sdairs",
    "comments": [
      {
        "user": "jspahrsummers",
        "created_at": "2024-12-03T13:09:45Z",
        "body": "Awesome, thank you!"
      }
    ]
  },
  {
    "number": 195,
    "title": "Adds Neon MCP Server to the Community Servers list",
    "created_at": "2024-12-03T12:10:17Z",
    "closed_at": "2024-12-03T12:54:09Z",
    "labels": [],
    "url": "https://github.com/modelcontextprotocol/servers/pull/195",
    "body": null,
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/195/comments",
    "author": "davidgomes",
    "comments": [
      {
        "user": "jspahrsummers",
        "created_at": "2024-12-03T12:54:06Z",
        "body": "Awesome, thank you!"
      }
    ]
  },
  {
    "number": 191,
    "title": "Linux version of claude desktop",
    "created_at": "2024-12-03T09:00:28Z",
    "closed_at": "2024-12-03T14:01:16Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/modelcontextprotocol/servers/issues/191",
    "body": "the app seems to be mostly react anyways. I think the number of people interested in MCP on linux is probably pretty high. I would like to be able to use the desktop app / mcp on linux\r\n",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/191/comments",
    "author": "sirus20x6",
    "comments": [
      {
        "user": "jspahrsummers",
        "created_at": "2024-12-03T14:01:16Z",
        "body": "Closing this out, as this isn't related to the reference server implementations in this repo."
      }
    ]
  },
  {
    "number": 183,
    "title": "Filesystem could use an edit_file capability",
    "created_at": "2024-12-02T23:16:29Z",
    "closed_at": "2024-12-05T23:43:36Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/modelcontextprotocol/servers/issues/183",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nwrite_file is awesome, but it doesn't isn't trustworthy for existing files, especially when they are large or the response is just small targeted changes.\r\n\r\n**Describe the solution you'd like**\r\nI'd like to see an edit_file capability working on smaller portions of the file.",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/183/comments",
    "author": "robotdad",
    "comments": [
      {
        "user": "dhodun",
        "created_at": "2024-12-05T16:42:01Z",
        "body": "Even a `str_replace` tool would be helpful here. Cuts down on output tokens as well."
      }
    ]
  },
  {
    "number": 158,
    "title": "Update the UA in fetch",
    "created_at": "2024-12-01T15:33:12Z",
    "closed_at": "2024-12-03T14:00:03Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/modelcontextprotocol/servers/issues/158",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nWhen using the fetch function, some websites, especially those in Chinese, cannot be opened.\r\n\r\n**Describe the solution you'd like**\r\n# Modify these two constants for a more general browser UA\r\nDEFAULT_USER_AGENT_AUTONOMOUS = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36\"\r\nDEFAULT_USER_AGENT_MANUAL = \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36\"\r\n\r\n**Describe alternatives you've considered**\r\nOr the author provides an optional box\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/158/comments",
    "author": "flyfox666",
    "comments": [
      {
        "user": "jspahrsummers",
        "created_at": "2024-12-03T14:00:03Z",
        "body": "We intentionally do not emulate a browser User-Agent, in order to be responsible web citizens with the example here."
      }
    ]
  },
  {
    "number": 155,
    "title": "Github connection is not working",
    "created_at": "2024-12-01T11:23:54Z",
    "closed_at": "2024-12-03T14:06:52Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/modelcontextprotocol/servers/issues/155",
    "body": "I have tried connecting with Claude and Github using MCP for windows\r\nI tried the first method given by the Anthropic but couldn't connect.\r\n\r\nNow I have tried the second method using the following method and this Sql lite is connected but other servers are not getting connected.\r\n\r\n\"Step-by-Step Guide:\r\n1. Locate Node.js and npm paths\r\nOpen Command Prompt (CMD) as administrator and run:\r\n\r\nwhere node\r\nThis will show your Node.js executable path. Example output:\r\n\r\nD:\\Program\\nvm\\node.exe\r\nThen find your global npm packages location:\r\n\r\nnpm root -g\r\nExample output:\r\n\r\nD:\\Program\\nvm\\node_modules\r\n2. Install Required Packages Globally\r\nRun these commands in CMD:\r\n\r\nnpm install -g @modelcontextprotocol/server-filesystem\r\nnpm install -g @modelcontextprotocol/server-github\r\nnpm install -g @modelcontextprotocol/server-memory\r\nnpm install -g @modelcontextprotocol/server-puppeteer\r\nnpm install -g @modelcontextprotocol/server-brave-search\r\nnpm install -g @modelcontextprotocol/server-google-maps\r\nnpm install -g @modelcontextprotocol/server-postgres\r\n3. Verify Installations\r\nCheck each package installation:\r\n\r\nnpm list -g @modelcontextprotocol/server-filesystem\r\nnpm list -g @modelcontextprotocol/server-github\r\nnpm list -g @modelcontextprotocol/server-memory\r\nnpm list -g @modelcontextprotocol/server-puppeteer\r\nnpm list -g @modelcontextprotocol/server-brave-search\r\nnpm list -g @modelcontextprotocol/server-google-maps\r\nnpm list -g @modelcontextprotocol/server-postgres\r\nExpected output format:\r\n\r\nD:\\Program\\nvm -> .\\\r\n`-- @modelcontextprotocol/server-[package-name]@0.5.1\r\n4. Update Configuration File\r\nModify your claude_desktop_config.json with the following content (adjust paths according to your system):\r\n\r\n{\r\n  \"mcpServers\": {\r\n    \"sqlite\": {\r\n      \"command\": \"uvx\",\r\n      \"args\": [\r\n        \"mcp-server-sqlite\",\r\n        \"--db-path\",\r\n        \"D:\\\\github_repository\\\\test.db\"\r\n      ]\r\n    },\r\n    \"filesystem\": {\r\n      \"command\": \"D:\\\\Program\\\\nvm\\\\node.exe\",\r\n      \"args\": [\r\n        \"D:\\\\Program\\\\nvm\\\\node_modules\\\\@modelcontextprotocol\\\\server-filesystem\\\\dist\\\\index.js\",\r\n        \"D:\\\\github_repository\",\r\n        \"D:\\\\github_repository\\\\image-generator\"\r\n      ]\r\n    },\r\n    \"github\": {\r\n      \"command\": \"D:\\\\Program\\\\nvm\\\\node.exe\",\r\n      \"args\": [\r\n        \"D:\\\\Program\\\\nvm\\\\node_modules\\\\@modelcontextprotocol\\\\server-github\\\\dist\\\\index.js\"\r\n      ],\r\n      \"env\": {\r\n        \"GITHUB_PERSONAL_ACCESS_TOKEN\": \"\"\r\n      }\r\n    },\r\n    \"postgres\": {\r\n      \"command\": \"D:\\\\Program\\\\nvm\\\\node.exe\",\r\n      \"args\": [\r\n        \"D:\\\\Program\\\\nvm\\\\node_modules\\\\@modelcontextprotocol\\\\server-postgres\\\\dist\\\\index.js\",\r\n        \"postgresql://localhost/mydb\"\r\n      ]\r\n    },\r\n    \"memory\": {\r\n      \"command\": \"D:\\\\Program\\\\nvm\\\\node.exe\",\r\n      \"args\": [\r\n        \"D:\\\\Program\\\\nvm\\\\node_modules\\\\@modelcontextprotocol\\\\server-memory\\\\dist\\\\index.js\"\r\n      ]\r\n    },\r\n    \"puppeteer\": {\r\n      \"command\": \"D:\\\\Program\\\\nvm\\\\node.exe\",\r\n      \"args\": [\r\n        \"D:\\\\Program\\\\nvm\\\\node_modules\\\\@modelcontextprotocol\\\\server-puppeteer\\\\dist\\\\index.js\"\r\n      ]\r\n    },\r\n    \"brave-search\": {\r\n      \"command\": \"D:\\\\Program\\\\nvm\\\\node.exe\",\r\n      \"args\": [\r\n        \"D:\\\\Program\\\\nvm\\\\node_modules\\\\@modelcontextprotocol\\\\server-brave-search\\\\dist\\\\index.js\"\r\n      ],\r\n      \"env\": {\r\n        \"BRAVE_API_KEY\": \"\"\r\n      }\r\n    },\r\n    \"google-maps\": {\r\n      \"command\": \"D:\\\\Program\\\\nvm\\\\node.exe\",\r\n      \"args\": [\r\n        \"D:\\\\Program\\\\nvm\\\\node_modules\\\\@modelcontextprotocol\\\\server-google-maps\\\\dist\\\\index.js\"\r\n      ],\r\n      \"env\": {\r\n        \"GOOGLE_MAPS_API_KEY\": \"\"\r\n      }\r\n    },\r\n    \"fetch\": {\r\n      \"command\": \"uvx\",\r\n      \"args\": [\r\n        \"mcp-server-fetch\"\r\n      ]\r\n    }\r\n  },\r\n  \"globalShortcut\": \"Ctrl+Q\"\r\n}\r\n\"\r\n\r\nI have been trying it for more than 2 days but couldn't get it connected.\r\n",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/155/comments",
    "author": "experienceswithanish",
    "comments": [
      {
        "user": "hemangjoshi37a",
        "created_at": "2024-12-02T01:55:16Z",
        "body": "This is similar to my issue in #152 that is solved in #40"
      },
      {
        "user": "experienceswithanish",
        "created_at": "2024-12-02T09:47:24Z",
        "body": "> This is similar to my issue in #152 that is solved in #40\r\n\r\nI have just used your config file and it worked.\r\nI don't know how to thank you, seriously I have been trying to get it worked for more than 3 days and finally got it\r\nThank you"
      }
    ]
  },
  {
    "number": 138,
    "title": "added star history",
    "created_at": "2024-11-30T07:07:54Z",
    "closed_at": "2024-12-03T13:17:26Z",
    "labels": [],
    "url": "https://github.com/modelcontextprotocol/servers/pull/138",
    "body": "added star history in the readme page",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/138/comments",
    "author": "hemangjoshi37a",
    "comments": [
      {
        "user": "jspahrsummers",
        "created_at": "2024-12-03T13:17:26Z",
        "body": "Thank you for the suggestion. I don't think we need to add this to the README, though."
      }
    ]
  },
  {
    "number": 127,
    "title": "Same server, different languages?",
    "created_at": "2024-11-29T12:05:31Z",
    "closed_at": "2024-11-29T18:10:52Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/modelcontextprotocol/servers/issues/127",
    "body": "Hello!\r\n\r\nCurrently, most servers are provided in JavaScript/TypeScript and some in Python.\r\n\r\nWould it make sense to have any/some server(s) in both languages? (*)\r\n\r\nIf so, how should we differenciate the versions in the code tree structure?\r\n\r\nThanks!\r\n\r\n(*) And maybe even more some day, to suit users' needs and environments.",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/127/comments",
    "author": "LaurentAjdnik",
    "comments": [
      {
        "user": "dsp-ant",
        "created_at": "2024-11-29T18:10:52Z",
        "body": "Our goal is to provide examples for both languages. I think maintaining the same server in two languages would be too much overhead without any particular benefit. I am sorry, but I think we will continue to accept only unique servers and not have the same server in multiple languages."
      }
    ]
  },
  {
    "number": 118,
    "title": "Cannot connect to filesystem on Mac",
    "created_at": "2024-11-29T03:22:13Z",
    "closed_at": "2024-11-29T16:59:44Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/modelcontextprotocol/servers/issues/118",
    "body": "**Describe the bug**\r\nThe Claude Mac client connects to the SQLite db but cannot connect to the file system. \r\n\r\nHere is what the json looks like:\r\n\r\n{\r\n  \"mcpServers\": {\r\n    \"sqlite\": {\r\n      \"command\": \"uvx\",\r\n      \"args\": [\"mcp-server-sqlite\", \"--db-path\", \"/Users/user/tech-stuff/testing-claude-mcp/test.db\"]\r\n    },\r\n    \"filesystem\": {\r\n      \"command\": \"npx\",\r\n      \"args\": [\"-y\", \"@modelcontextprotocol/server-filesystem\", \"/Users/user/folder-1\"]\r\n    }\r\n  }\r\n}\r\n\r\nI know a similar  issue on Windows has been reported and closed. Does anyone have any issues with this on Mac or any suggestions how to solve this?\r\n",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/118/comments",
    "author": "mmirza1",
    "comments": [
      {
        "user": "mmirza1",
        "created_at": "2024-11-29T04:16:55Z",
        "body": "#121 - can someone else verify as well ?"
      },
      {
        "user": "teamgroove",
        "created_at": "2024-11-29T14:52:17Z",
        "body": "> **Describe the bug** The Claude Mac client connects to the SQLite db but cannot connect to the file system.\r\n> \r\n> Here is what the json looks like:\r\n> \r\n> { \"mcpServers\": { \"sqlite\": { \"command\": \"uvx\", \"args\": [\"mcp-server-sqlite\", \"--db-path\", \"/Users/user/tech-stuff/testing-claude-mcp/test.db\"] }, \"filesystem\": { \"command\": \"npx\", \"args\": [\"-y\", \"@modelcontextprotocol/server-filesystem\", \"/Users/user/folder-1\"] } } }\r\n> \r\n> I know a similar issue on Windows has been reported and closed. Does anyone have any issues with this on Mac or any suggestions how to solve this?\r\n\r\nIs the name of your user really: user?\r\n\r\nThe bug around windows is, that it somehow doesn't work using: npx to instantly install and use the node-module to contrary installing ist with: \"npm i -g @modelcontextprotocol/server-filesystem\" and then using it by referncing the index.js file in the location it landed.\r\n\r\nI dont know your system, but the prerequisite is having nodejs installed. if you have it installed you could use the same workaround as for windows and try that.\r\n"
      },
      {
        "user": "mmirza1",
        "created_at": "2024-11-29T16:59:44Z",
        "body": "> > **Describe the bug** The Claude Mac client connects to the SQLite db but cannot connect to the file system.\r\n> > Here is what the json looks like:\r\n> > { \"mcpServers\": { \"sqlite\": { \"command\": \"uvx\", \"args\": [\"mcp-server-sqlite\", \"--db-path\", \"/Users/user/tech-stuff/testing-claude-mcp/test.db\"] }, \"filesystem\": { \"command\": \"npx\", \"args\": [\"-y\", \"@modelcontextprotocol/server-filesystem\", \"/Users/user/folder-1\"] } } }\r\n> > I know a similar issue on Windows has been reported and closed. Does anyone have any issues with this on Mac or any suggestions how to solve this?\r\n> \r\n> Is the name of your user really: user?\r\n> \r\n> The bug around windows is, that it somehow doesn't work using: npx to instantly install and use the node-module to contrary installing ist with: \"npm i -g @modelcontextprotocol/server-filesystem\" and then using it by referncing the index.js file in the location it landed.\r\n> \r\n> I dont know your system, but the prerequisite is having nodejs installed. if you have it installed you could use the same workaround as for windows and try that.\r\n\r\nyes, npx was indeed the problem. the updated paths I added in response to the #121 work fine. "
      },
      {
        "user": "TiansuYu",
        "created_at": "2024-12-01T13:23:27Z",
        "body": "I am having the same issue as well (on MacOS), using both the filesystem and github MCP sever, this is the conversation i had with the lastest claude-sonnet-3.5:\r\n\r\n> Hi could you have a look at what folders i have under ~/Projects\r\n\r\n> I apologize, but I don't have direct access to your local file system or ability to see what folders you have under ~/Projects. I can only interact with files and folders through GitHub using the provided API functions, or help you with information you directly share with me.\r\nIf you'd like to explore what's in your Projects directory, you'll need to:\r\n>\r\n> Look at it directly on your computer, or\r\nShare the contents with me in our conversation\r\n>\r\n> Is there something specific you're trying to do with your Projects folder that I can help with?\r\n\r\nThis is the MCP server config I am using \r\n```json\r\n{\r\n    \"mcpServers\": {\r\n      \"filesystem\": {\r\n        \"command\": \"npx\",\r\n        \"args\": [\"-y\", \"@modelcontextprotocol/server-filesystem\", \"~/Projects/\"]\r\n      },\r\n      \"github\": {\r\n        \"command\": \"npx\",\r\n        \"args\": [\"-y\", \"@modelcontextprotocol/server-github\"],\r\n        \"env\": {\r\n          \"GITHUB_PERSONAL_ACCESS_TOKEN\": \"lalalala\" (my token) \r\n        }\r\n      }\r\n    }\r\n  }\r\n```\r\nI can verify that the github server works perfectly fine, i can fetch my private repos. \r\n\r\nFYI, the npm global install on filesystem server does not solve this problem. \r\n"
      }
    ]
  },
  {
    "number": 110,
    "title": "Does he support otherllms? Such as openai.",
    "created_at": "2024-11-28T17:32:41Z",
    "closed_at": "2024-11-29T10:45:47Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/modelcontextprotocol/servers/issues/110",
    "body": "Does he support otherllms? Such as openai.",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/110/comments",
    "author": "phpmac",
    "comments": [
      {
        "user": "dsp-ant",
        "created_at": "2024-11-29T10:45:47Z",
        "body": "The protocol is model agnostic. Any client can implement it and choose a model they want to use. MCP does not define a model that must be used."
      }
    ]
  },
  {
    "number": 106,
    "title": "Better error messages in the claud MCP developer log",
    "created_at": "2024-11-28T10:00:59Z",
    "closed_at": "2024-12-03T13:44:26Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/modelcontextprotocol/servers/issues/106",
    "body": "It would be great if failing mcp server invocations would show up in the developer log.\r\n\r\nCurrently even if the UI reports \"error connecting to MCP server xxxx\" there is nothing in the logs.\r\nI know because there were bugs in the implementation, which I found by running the server manually, which is a bit frustrating.\r\n\r\n```2024-11-28T09:27:43.719Z [info] Attempting to connect to MCP server neo4j...\r\n2024-11-28T09:27:43.720Z [info] Attempting to connect to MCP server sqlite...\r\n2024-11-28T09:27:43.720Z [info] Attempting to connect to MCP server memory...\r\n2024-11-28T09:27:43.731Z [info] Connected to MCP server sqlite!\r\n2024-11-28T09:27:43.732Z [info] Connected to MCP server neo4j!\r\n2024-11-28T09:27:43.734Z [info] Connected to MCP server memory!\r\n2024-11-28T09:27:50.648Z [info] Attempting to connect to MCP server neo4j...\r\n2024-11-28T09:27:50.649Z [info] Attempting to connect to MCP server sqlite...\r\n2024-11-28T09:27:50.649Z [info] Attempting to connect to MCP server memory...\r\n2024-11-28T09:27:50.657Z [info] Connected to MCP server neo4j!\r\n2024-11-28T09:27:50.657Z [info] Connected to MCP server sqlite!\r\n2024-11-28T09:27:50.658Z [info] Connected to MCP server memory!```",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/106/comments",
    "author": "jexp",
    "comments": [
      {
        "user": "jspahrsummers",
        "created_at": "2024-12-03T13:44:26Z",
        "body": "Thank you for flagging. You can check individual servers' logs rather than the main `mcp.log` file to see more information.\r\n\r\nI'm going to close this out, as it's about the Claude Desktop integration rather than these reference servers."
      }
    ]
  },
  {
    "number": 104,
    "title": "python version of all default servers?",
    "created_at": "2024-11-28T09:13:06Z",
    "closed_at": "2024-11-28T11:08:40Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/modelcontextprotocol/servers/issues/104",
    "body": "Sorry if stupid question. But documentation is not clear - does such thing exist?\r\n```\r\n uvx mcp-server-filesystem\r\n uvx mcp-server-memory\r\netc..\r\n```\r\n\r\n\r\n uvx mcp-server-sqlite \r\n\r\nRuns fine, but not any other option.\r\nThanks!",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/104/comments",
    "author": "aicorreia",
    "comments": [
      {
        "user": "dsp-ant",
        "created_at": "2024-11-28T11:06:57Z",
        "body": "These are Typescript servers. We usually offer servers in either typescript or python in the servers repository."
      }
    ]
  },
  {
    "number": 85,
    "title": "feat: Add PR merging capability to GitHub server",
    "created_at": "2024-11-27T13:41:34Z",
    "closed_at": "2024-11-27T21:32:24Z",
    "labels": [],
    "url": "https://github.com/modelcontextprotocol/servers/pull/85",
    "body": "This PR adds the capability to merge pull requests on the GitHub server implementation.\n\nChanges:\n- Added `MergePullRequest` method to the GitHub server\n- Uses GitHub API to perform merge operation\n- Supports custom commit title and message\n- Returns detailed error information if merge fails\n\nThe implementation uses the standard merge strategy and includes proper error handling.",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/85/comments",
    "author": "AllAboutAI-YT",
    "comments": [
      {
        "user": "dsp-ant",
        "created_at": "2024-11-27T21:32:24Z",
        "body": "Sorry this PR does not seem to be related. "
      }
    ]
  },
  {
    "number": 79,
    "title": "Timeout in client while connecting to MCP server on Windows",
    "created_at": "2024-11-27T07:03:00Z",
    "closed_at": "2025-01-02T19:33:23Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/modelcontextprotocol/servers/issues/79",
    "body": "I see\r\n\r\n```\r\n693-110d9774cbce8f0f.js:18 Could not attach to MCP server sqlite: eE: MCP error -2: Request timed out\r\n693-110d9774cbce8f0f.js:18 Could not attach to MCP server filesystem: eE: MCP error -2: Request timed out\r\n```\r\n\r\nDespite MCP logs with\r\n\r\n```\r\n2024-11-27T07:00:20.484Z [info] Attempting to connect to MCP server sqlite...\r\n2024-11-27T07:00:20.487Z [info] Attempting to connect to MCP server filesystem...\r\n2024-11-27T07:00:20.507Z [info] Connected to MCP server sqlite!\r\n2024-11-27T07:00:20.514Z [info] Connected to MCP server filesystem!\r\n```\r\n\r\nI ran the inspector fine but that didn't really add much clarity. Seems like a client issue? Posting for visibility in case other folks are seeing the same thing.\r\n",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/79/comments",
    "author": "michaelfromyeg",
    "comments": [
      {
        "user": "michaelfromyeg",
        "created_at": "2024-11-27T07:13:08Z",
        "body": "I can successfully call \"list tools\" from the inspector so everything seems OK on the server end! Here's my setup for the `sqlite` tool\r\n\r\nHere's my config. At `C:\\Users\\username\\AppData\\Roaming\\Claude\\claude_desktop_config.json`\r\n\r\n```\r\n{\r\n  \"mcpServers\": {\r\n    \"sqlite\": {\r\n      \"command\": \"C:\\\\ProgramData\\\\chocolatey\\\\bin\\\\uvx.exe\",\r\n      \"args\": [\r\n        \"mcp-server-sqlite\",\r\n        \"--db-path\",\r\n        \"C:\\\\Users\\\\username\\\\test.db\"\r\n      ]\r\n    },\r\n    \"filesystem\": {\r\n      \"command\": \"C:\\\\Program Files\\\\nodejs\\\\node.exe\",\r\n      \"args\": [\r\n        \"C:\\\\Users\\\\username\\\\AppData\\\\Roaming\\\\npm\\\\node_modules\\\\@modelcontextprotocol\\\\server-filesystem\\\\dist\\\\index.js\",\r\n        \"~\"\r\n      ]\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThe servers show up in the app fine."
      },
      {
        "user": "ChaseSwaggart",
        "created_at": "2024-11-29T20:08:47Z",
        "body": "+1, able to replicate here as well for any servers in windows that rely on node. "
      },
      {
        "user": "jaydealo7",
        "created_at": "2024-12-01T15:03:55Z",
        "body": "windows??\r\ndouble‚Äú\\‚Äù change to single‚Äú/‚Äù Ôºåtry it!\r\nI fix it by this way"
      },
      {
        "user": "jspahrsummers",
        "created_at": "2024-12-03T13:48:14Z",
        "body": "Does this issue still occur for you with Claude Desktop v0.7.5?"
      },
      {
        "user": "michaelfromyeg",
        "created_at": "2025-01-02T19:33:23Z",
        "body": "Hi @jspahrsummers, I think this is fixed! I'm using this config on Claude Desktop (latest? can't figure out how to see the version...) and it's working just fine. Note the servers are running on Windows, but I do most of my work on WSL (hence the weird file path).\r\n\r\n```\r\n{\r\n    \"mcpServers\": {\r\n        \"filesystem\": {\r\n            \"command\": \"npx\",\r\n            \"args\": [\r\n                \"-y\",\r\n                \"@modelcontextprotocol/server-filesystem\",\r\n                \"\\\\\\\\wsl.localhost\\\\Ubuntu\\\\home\"\r\n            ]\r\n        },\r\n        \"memory\": {\r\n            \"command\": \"npx\",\r\n            \"args\": [\r\n                \"-y\",\r\n                \"@modelcontextprotocol/server-memory\"\r\n            ]\r\n        },\r\n        \"brave-search\": {\r\n            \"command\": \"npx\",\r\n            \"args\": [\r\n                \"-y\",\r\n                \"@modelcontextprotocol/server-brave-search\"\r\n            ],\r\n            \"env\": {\r\n                \"BRAVE_API_KEY\": \"\"\r\n            }\r\n        }\r\n    }\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 74,
    "title": "APIs of other search services",
    "created_at": "2024-11-27T03:00:03Z",
    "closed_at": "2024-11-27T11:39:51Z",
    "labels": [],
    "url": "https://github.com/modelcontextprotocol/servers/issues/74",
    "body": "If enabling VPN cannot use Brave Search, can other search services be used, such as: Bing, Google, etc.",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/74/comments",
    "author": "Rainismer",
    "comments": [
      {
        "user": "dsp-ant",
        "created_at": "2024-11-27T11:39:51Z",
        "body": "The functionality in the brave MCP Server is limited to brave search. If you need other search, you would have to build a respective MCP server."
      }
    ]
  },
  {
    "number": 52,
    "title": "[Windows] MCP Server (Brave Search) fails to connect - environment variable issues",
    "created_at": "2024-11-26T05:33:44Z",
    "closed_at": "2024-11-26T14:38:03Z",
    "labels": [],
    "url": "https://github.com/modelcontextprotocol/servers/issues/52",
    "body": "## Description\r\nTrying to set up Brave Search MCP integration on Windows 11 with Claude desktop app v0.7.1. While the server appears to start successfully (\"Brave Search MCP Server running on stdio\"), the app shows \"could not attach to MCP server brave-search\".\r\n\r\n## Configuration\r\nThe following config was used:\r\n\r\n```json\r\n{\r\n  \"mcpServers\": {\r\n    \"brave-search\": {\r\n      \"command\": \"npx\",\r\n      \"args\": [\"-y\", \"@modelcontextprotocol/server-brave-search\"],\r\n      \"env\": {\r\n        \"BRAVE_API_KEY\": \"[key removed]\"\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n## Environment\r\n- OS: Windows 11 (22631)\r\n- Claude Desktop App: v0.7.1\r\n- Node.js: v22.7.0\r\n- npm: v10.8.2\r\n\r\n## Behavior\r\n1. npm installs packages successfully\r\n2. Server appears to start (\"Brave Search MCP Server running on stdio\")\r\n3. Claude app shows \"could not attach to MCP server brave-search\"\r\n4. npm logs show ENOENT errors related to environment variable path resolution\r\n\r\n## Error Logs\r\n```\r\nverbose stack Error: ENOENT: no such file or directory, lstat 'C:\\Users\\[username]\\AppData\\Local\\AnthropicClaude\\app-0.7.1\\${APPDATA}'\r\n```\r\n\r\n## Attempted Solutions\r\n1. Using full paths instead of environment variables\r\n2. Using different shell commands (cmd vs powershell)\r\n3. Different stdio configurations\r\n4. Setting explicit NPM_CONFIG_PREFIX\r\n5. Using @latest version of the package\r\n\r\nNone of these resolved the connection issue between the app and the server.\r\n\r\n## Additional Notes\r\n- The server starts successfully when run directly in PowerShell\r\n- The issue appears to be specific to how the Claude app spawns and connects to the MCP server process on Windows\r\n- Environment variable resolution (${APPDATA} vs %APPDATA%) seems to be a key issue\r\n\r\n## Question\r\nIs there a recommended way to set up MCP servers on Windows? The current setup seems to have issues with Windows-specific path handling and environment variables.",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/52/comments",
    "author": "nebooz",
    "comments": [
      {
        "user": "jspahrsummers",
        "created_at": "2024-11-26T14:38:03Z",
        "body": "Sorry about this! I think this is the same root cause as #40, so merging with that issue."
      }
    ]
  },
  {
    "number": 48,
    "title": "[new feature request] Is it possible to support screenshot as a server or resource?",
    "created_at": "2024-11-26T02:37:43Z",
    "closed_at": "2024-12-03T13:35:11Z",
    "labels": [],
    "url": "https://github.com/modelcontextprotocol/servers/issues/48",
    "body": "I want LLM to read screenshot as a input, like what computer use do, but MCP can have a better permission control management.\r\n\r\nIs it possible? or is there some clue or suggestion that can help me to contribute it.",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/48/comments",
    "author": "wa008",
    "comments": [
      {
        "user": "jspahrsummers",
        "created_at": "2024-11-26T03:16:55Z",
        "body": "You could definitely build an MCP server for this. The server could offer one tool which takes a screenshot, and returns it as an image.\r\n\r\nDoes that help?"
      },
      {
        "user": "deksden",
        "created_at": "2024-11-28T14:49:05Z",
        "body": "> Is it possible?\r\n\r\nPuppeteer server sample have tool:\r\n\r\n\r\n **puppeteer_screenshot**\r\n  - Capture screenshots of the entire page or specific elements\r\n  - Inputs:\r\n    - `name` (string, required): Name for the screenshot\r\n    - `selector` (string, optional): CSS selector for element to screenshot\r\n    - `width` (number, optional, default: 800): Screenshot width\r\n    - `height` (number, optional, default: 600): Screenshot height\r\n"
      },
      {
        "user": "rmensing",
        "created_at": "2024-11-29T00:57:36Z",
        "body": "Not sure if this is within the scope here.\r\n\r\nWe know that the Claude desktop app, through MCP, has access to images using the screenshot tool in the puppeteer server, although the image is available to Claude in base64 encoded format.\r\n\r\nWe could probably modify the filesystem server to also make images available to Claude also.\r\n\r\nThe question is, though, how can we actually give it to Claude so he can view it the same as if we uploaded an image directly in chat?"
      },
      {
        "user": "deksden",
        "created_at": "2024-11-30T19:52:27Z",
        "body": "@rmensing I m sure you have to serve it base64 encoded, same as for any API request. \r\n\r\nMCP server only provides some data ( context, prompt, tools) to host/client, and its up to you how you communicate with LLM. No difference where you get data: from MCP server or just performing generic API call to LLM. "
      },
      {
        "user": "rmensing",
        "created_at": "2024-12-01T01:04:45Z",
        "body": "@deksden In chat it cannot directly use the base64 formatted image. Although it could write code to convert it back to the image format, it still does not have the ability to view it. The only reason base64 is used in the API is so it can be sent in a text format. once it is received it is converted back to an image more than likely.\r\n\r\nThere would need to be the functionality in the Claude desktop app MCP client implementation for it to attach the image, or other documents for that matter, the same as you do in the chat interface. Unfortunately we don't have any documentation on the interface between the MCP client code and the desktop app as far as what the desktop app can or can't do. My guess is that they could probably code it to accept the images and view them, it's only a matter of will they. It could be a case of them having a reason to not implement it."
      },
      {
        "user": "jspahrsummers",
        "created_at": "2024-12-03T13:35:11Z",
        "body": "As this is supported in MCP, and demonstrated in the examples, I'm going to close this out as resolved. Please start a discussion if you have other questions."
      }
    ]
  },
  {
    "number": 20,
    "title": "Update README.md for filesystem",
    "created_at": "2024-11-21T16:28:11Z",
    "closed_at": "2024-11-21T16:31:53Z",
    "labels": [],
    "url": "https://github.com/modelcontextprotocol/servers/pull/20",
    "body": "removed duplicate argument",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/20/comments",
    "author": "zckly",
    "comments": [
      {
        "user": "maheshmurag",
        "created_at": "2024-11-21T16:31:43Z",
        "body": "good catch, thanks!"
      }
    ]
  },
  {
    "number": 16,
    "title": "Add Filesystem Server",
    "created_at": "2024-11-21T03:32:47Z",
    "closed_at": "2024-11-21T05:36:07Z",
    "labels": [],
    "url": "https://github.com/modelcontextprotocol/servers/pull/16",
    "body": "Compared to last time, this includes Zod + only allows operations on allowlisted folders.\r\n\r\nAlso includes a tool for Claude to know which folders are allowlisted. This tends to help its performance.",
    "comments_url": "https://api.github.com/repos/modelcontextprotocol/servers/issues/16/comments",
    "author": "maheshmurag",
    "comments": [
      {
        "user": "Skirano",
        "created_at": "2024-11-21T05:08:13Z",
        "body": "Looks good to me! "
      }
    ]
  }
]