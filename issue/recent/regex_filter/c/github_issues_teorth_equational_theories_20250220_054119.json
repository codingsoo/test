[
  {
    "number": 1080,
    "title": "Change scripts to use JSON output from export_equations",
    "created_at": "2025-02-15T00:05:31Z",
    "closed_at": "2025-02-15T04:50:01Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/1080",
    "body": "Updates the extraction process to read from full_entries.json (produced by export_equations)\r\n\r\nRemoved the Batteries imports since Lean’s core now covers the required functionality.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/1080/comments",
    "author": "guangyusong",
    "comments": [
      {
        "user": "vlad902",
        "created_at": "2025-02-15T06:52:15Z",
        "body": "I don't think we want this change: it does not update in the future once we add new implications so extract_implications now no longer gets new updates. In fact `full_entries.json` is outdated, so the dashboard is now broken."
      },
      {
        "user": "teorth",
        "created_at": "2025-02-15T15:04:05Z",
        "body": "Ah, I did not appreciate that the dashboard did not run through the JSON output.  (If the project still had some ways go to, I would recommend documenting these sorts of back-end architectures, but I guess we soon won't need to update the dashboard much further, so the issue is largely moot.)"
      }
    ]
  },
  {
    "number": 1055,
    "title": "Write the rewriting background + confluence bits",
    "created_at": "2025-01-20T23:52:05Z",
    "closed_at": "2025-02-01T20:10:28Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/1055",
    "body": "WIP for some of the rewriting bits. Needs feedback and polish.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/1055/comments",
    "author": "codyroux",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2025-01-24T20:38:54Z",
        "body": "Thanks for writing this.  I was wondering if one could supply a simple example of a rewriting system to illustrate the concepts.  Not every concept needs an example (we can defer to the cited references and/or the blueprint for an in depth discussion), but perhaps one or two examples, preferably related to an equational law, would be helpful."
      },
      {
        "user": "codyroux",
        "created_at": "2025-01-25T18:57:13Z",
        "body": "Sure! I can do the KB completion for the theory of groups. That's usually a crowd pleaser.\r\n\r\nNot sure I know how to do the 1 equation version though."
      },
      {
        "user": "teorth",
        "created_at": "2025-01-25T19:11:23Z",
        "body": "That's probably good enough.  Even just a single example can help correct any misconceptions that a reader may have if they misread the definition somehow."
      },
      {
        "user": "codyroux",
        "created_at": "2025-01-26T19:06:39Z",
        "body": "Wait no I have a better example 😄 : The equation `x * (y * x) = y` (equation 14), the completion of this as a rewrite rule solves the Putnam problem I now see is associated to it. That's kind of cute!"
      },
      {
        "user": "teorth",
        "created_at": "2025-02-01T20:10:07Z",
        "body": "Looks good to merge now!"
      }
    ]
  },
  {
    "number": 1011,
    "title": "Prove-1133-implications",
    "created_at": "2024-12-10T06:41:08Z",
    "closed_at": "2024-12-10T07:24:11Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/1011",
    "body": "null\n\nCloses #985",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/1011/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "vlad902",
        "created_at": "2024-12-10T06:42:28Z",
        "body": "Could we rename this file and its namespace to be 1133 instead of 1113"
      }
    ]
  },
  {
    "number": 963,
    "title": "Add the original Austin law",
    "created_at": "2024-11-30T21:23:07Z",
    "closed_at": "2024-12-01T16:05:30Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/963",
    "body": "Just for fun, I added Austin's original law from [1], and also included the proof that it has no finite models. The proof that it has satisfying infinite models is not done.\r\n\r\n[1] A. K. Austin. A note on models of identities. Proc. Amer. Math. Soc., 16:522–523, 1965.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/963/comments",
    "author": "vlad902",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-12-01T00:16:40Z",
        "body": "Are you planning to add the infinite model case to this PR in due course, or would you prefer that this PR be merged as is?"
      },
      {
        "user": "vlad902",
        "created_at": "2024-12-01T06:49:00Z",
        "body": "I think it should be merged now. I'm not sure if I'll get to the infinite case, and I think it's a nice historical identity to have regardless of that proof."
      }
    ]
  },
  {
    "number": 952,
    "title": "Refute 1289",
    "created_at": "2024-11-29T14:14:32Z",
    "closed_at": "2024-11-29T18:40:27Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/952",
    "body": "null\n\nCloses #937",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/952/comments",
    "author": "b-reinke",
    "comments": [
      {
        "user": "mjtb49",
        "created_at": "2024-11-29T15:20:38Z",
        "body": "This is failing because the seed is the one for 713, and not for 1289. The seed for 1289 is \r\n```\r\n0 2 1 _ 1\r\n2 1 _ _ _\r\n3 _ 2 _ _\r\n4 _ _ 3 _\r\n_ _ _ _ 4\r\n```\r\nand it falsifies laws 4435 and 3116, not 817,1426,3862,4065.\r\n\r\nI also notice that the \\leanok currently points to the wrong theorem. \r\n"
      },
      {
        "user": "b-reinke",
        "created_at": "2024-11-29T17:57:31Z",
        "body": "Oops, somehow I didn't include these changes in my commit, should be ok now!"
      }
    ]
  },
  {
    "number": 939,
    "title": "Refactor common code of greedy constructions",
    "created_at": "2024-11-27T23:10:50Z",
    "closed_at": "2024-11-28T17:55:46Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/939",
    "body": "The greedy methods for 1076, 1722, 3308 share a lot of similarities, so we could try to reduce the code doubling.\n\nCloses #771",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/939/comments",
    "author": "b-reinke",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-11-28T17:43:00Z",
        "body": "Are you still working on this PR, or is it ready to merge?"
      },
      {
        "user": "b-reinke",
        "created_at": "2024-11-28T17:53:04Z",
        "body": "Refactoring I would say is finished, I might do 1289 next, in principle it could also go in here (or in a new PR, as you prefer)"
      },
      {
        "user": "teorth",
        "created_at": "2024-11-28T17:55:41Z",
        "body": "OK, if all tasks that were started here are completed then I'll merge and you can upload 1289 separately at your leisure."
      }
    ]
  },
  {
    "number": 932,
    "title": "Refute 1076 implications",
    "created_at": "2024-11-27T12:00:14Z",
    "closed_at": "2024-11-27T14:42:08Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/932",
    "body": "null\n\nCloses #506",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/932/comments",
    "author": "b-reinke",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-11-27T15:48:21Z",
        "body": "It seems the implications 1076 -> 614, 4380 were not refuted properly for some reason"
      }
    ]
  },
  {
    "number": 930,
    "title": "Text on proof automation",
    "created_at": "2024-11-27T07:49:42Z",
    "closed_at": "2024-12-09T18:47:56Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/930",
    "body": "See #920 \n\nThe current structure (and even title modification) are just suggestions, happy to discuss them in this PR of course!\n\nCloses #920",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/930/comments",
    "author": "goens",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-12-06T22:31:26Z",
        "body": "I have directly fixed a bunch of typos I have found together with all those found by @vlad902 and resolved the relevant review comments. "
      },
      {
        "user": "goens",
        "created_at": "2024-12-09T11:27:04Z",
        "body": "I think I've addressed all the suggestions now. Happy to have either a second round of reviews/suggestions or merge this and continue expanding with more PRs."
      },
      {
        "user": "teorth",
        "created_at": "2024-12-09T18:47:53Z",
        "body": "I think it's good to merge for now.  If anyone wants to work on the section more, they can say so in the Zulip chat, and I'll open a new issue for it."
      }
    ]
  },
  {
    "number": 925,
    "title": "Nontranslation-invariant method for 1722",
    "created_at": "2024-11-26T07:49:40Z",
    "closed_at": "2024-11-26T17:48:17Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/925",
    "body": "This follows the non-translation invariant greedy construction and shows the final refutations for 1722. The translation invariant construction is in fact now obsolete. Should it be removed?\n\nCloses #659",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/925/comments",
    "author": "b-reinke",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-11-26T15:13:28Z",
        "body": "Thanks for your efficient work on this!\r\n\r\nWe've been removing redundant implications from the Lean codebase elsewhere to improve compile times, so I'd say it makes sense to remove the redundant code here (it can always be found in the revision history if for some reason we ever need it again)."
      },
      {
        "user": "b-reinke",
        "created_at": "2024-11-26T16:50:51Z",
        "body": "Ok, I have removed them for now"
      }
    ]
  },
  {
    "number": 921,
    "title": "WRITING: Write a section of the paper describing user interfaces and visualizations",
    "created_at": "2024-11-25T23:29:52Z",
    "closed_at": "2025-01-02T13:22:47Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/921",
    "body": "Equation Explorer, Finite Magma Explorer, Graphiti, maybe also the dashboard, and any other interesting visualizations.  Very useful both for broader outreach, for looking up existing results, and testing finite examples.  (This need not be a very long section, but could have some illustrative screenshots.)",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/921/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "vlad902",
        "created_at": "2024-12-12T20:46:43Z",
        "body": "claim"
      },
      {
        "user": "carlini",
        "created_at": "2024-12-22T04:47:47Z",
        "body": "@vlad902 I don't have much insight into the other tools, but if it would be helpful I could prepare some initial text about the equation explorer if there's something you think I could write about it."
      },
      {
        "user": "vlad902",
        "created_at": "2024-12-22T08:37:33Z",
        "body": "I think it's going to be pretty high-level, so I don't think you have to prepare anything but I would be very happy for a review!"
      },
      {
        "user": "vlad902",
        "created_at": "2025-01-02T10:59:02Z",
        "body": "propose PR #1035"
      },
      {
        "user": "vlad902",
        "created_at": "2025-01-02T10:59:08Z",
        "body": "@carlini Please take a look!"
      }
    ]
  },
  {
    "number": 915,
    "title": "Adapt 1526 refutation to 73",
    "created_at": "2024-11-25T10:01:13Z",
    "closed_at": "2024-11-25T18:44:50Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/915",
    "body": "null\n\nCloses #516",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/915/comments",
    "author": "b-reinke",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-11-25T18:44:46Z",
        "body": "Looks like it was a smooth adaptation! Thanks!"
      }
    ]
  },
  {
    "number": 871,
    "title": "refactoring fresh generators",
    "created_at": "2024-11-21T15:00:22Z",
    "closed_at": "2024-11-24T16:21:45Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/871",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/871/comments",
    "author": "madvorak",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-11-21T15:54:55Z",
        "body": "@b-reinke Are there any interactions between this PR and your current formalizations that one should be aware of?"
      },
      {
        "user": "b-reinke",
        "created_at": "2024-11-22T07:42:12Z",
        "body": "No, I am working on 3308, but using the proof that is not translation invariant"
      },
      {
        "user": "b-reinke",
        "created_at": "2024-11-22T07:48:58Z",
        "body": "There is also 1516 that hasn't been refactored to depend on `FreshGenerator.lean` yet, but probably it would be nicer to do this from scratch, also getting rid of the dependence on `Finmap`"
      },
      {
        "user": "madvorak",
        "created_at": "2024-11-22T08:19:10Z",
        "body": "I am happy to close it now and refactor it later. What is easier for you?"
      },
      {
        "user": "b-reinke",
        "created_at": "2024-11-22T14:59:14Z",
        "body": "For me now would be ok."
      },
      {
        "user": "teorth",
        "created_at": "2024-11-22T16:08:35Z",
        "body": "@b-reinke To clarify, by \"now would be ok\" you mean that you have no objection with the current PR being merged?"
      },
      {
        "user": "b-reinke",
        "created_at": "2024-11-24T06:52:02Z",
        "body": "Yes, from my perspective it can be merged"
      }
    ]
  },
  {
    "number": 846,
    "title": "Formalize finite implications from 3342",
    "created_at": "2024-11-18T13:03:17Z",
    "closed_at": "2024-11-18T20:44:24Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/846",
    "body": "Two small notes to the reviewers:\r\n- This is my first time using `\\lean` and `\\leanok` in the blueprint, it seems straightforward but please check that I'm using it correctly.\r\n- `Finite.fn_eventually_periodic` (and maybe `fn_periodic`) will probably be moved to somewhere common for use in #809, I included it with the proofs for 3342 for now since I'm not done with that proof yet and not sure what it will look like in the end.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/846/comments",
    "author": "vlad902",
    "comments": [
      {
        "user": "madvorak",
        "created_at": "2024-11-18T13:52:15Z",
        "body": "Congratulations!"
      },
      {
        "user": "vlad902",
        "created_at": "2024-11-18T13:58:46Z",
        "body": "Thank you for the feedback!"
      },
      {
        "user": "madvorak",
        "created_at": "2024-11-18T14:55:15Z",
        "body": "LGTM, somebody just check the `leanok` which I don't know how to use either."
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-11-18T15:36:13Z",
        "body": "Thank you @vlad902. Please adopt the following template: \r\n\r\n```lean\r\n\\begin{latex_decl}[Name] \\label{label} \\lean{lean_decl} \\leanok\r\n  text\r\n\\end{latex_decl}\r\n\r\n\\begin{proof} \\uses{list_of_labels} \\leanok \r\n  text\r\n\\end{proof}\r\n```"
      },
      {
        "user": "vlad902",
        "created_at": "2024-11-18T19:29:16Z",
        "body": "I've made the mentioned updates but I've been stuck making the build work. My limited understanding is that the recent mathlib/lean bump is responsible for it, but I don't fully understand it. Previously, e.g. in the following example:\r\n```\r\nexample {G : Type*} [Finite G] (f : G → G) : False := by\r\n  obtain ⟨p₁, p₂, ne, heq⟩ := Finite.exists_ne_map_eq_of_infinite (Nat.iterate f ·)\r\n```\r\n[Finite G -> G] was automatically synthesized, and now it's not. Perhaps this is due to lean4#6024 (EDIT: The lean version hasn't actually been updated, so it's not this), I'm trying to debug."
      },
      {
        "user": "vlad902",
        "created_at": "2024-11-18T19:54:52Z",
        "body": "The cause was much more prosaic: I believe mathlib 9a9cb1894400637ebac1c1c8ac2702c23412ee5e simply split some imports I was previously transitively depending on, and I no longer imported the instance I needed."
      }
    ]
  },
  {
    "number": 840,
    "title": "Updates available but manual intervention required",
    "created_at": "2024-11-16T08:22:59Z",
    "closed_at": "2024-11-18T15:26:26Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/840",
    "body": "Try `lake update` and then investigate why this update causes the lean build to fail.\nFiles changed in update: \n",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/840/comments",
    "author": "github-actions[bot]",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-11-18T14:24:20Z",
        "body": "claim"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-11-18T14:24:36Z",
        "body": "propose #847 "
      }
    ]
  },
  {
    "number": 831,
    "title": "Translation invariant version of 1516 !=> 1489",
    "created_at": "2024-11-13T22:38:37Z",
    "closed_at": "2024-11-16T14:23:55Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/831",
    "body": "see #675\n\nCloses #675",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/831/comments",
    "author": "b-reinke",
    "comments": [
      {
        "user": "b-reinke",
        "created_at": "2024-11-13T22:39:01Z",
        "body": "At the moment the proof is complete, but I still have to clean up the file. Some of the lemmas are also useful for other translation invariant approaches / facts about the free group. Maybe they can be collected somewhere else?"
      },
      {
        "user": "teorth",
        "created_at": "2024-11-14T18:27:35Z",
        "body": "There doesn't seem to be a strong push right now to refactor the code, so if you could update `ManuallyProved.lean` and `Conjectures.lean` we can merge to at least make progress on the dashboard, and if some of the code here ends up being useful later (or conversely if some other formalized proof code is useful to golf the one here) we can do that in a future PR."
      },
      {
        "user": "b-reinke",
        "created_at": "2024-11-15T11:56:29Z",
        "body": "Ok, I did these changes, but I also started refactoring"
      },
      {
        "user": "teorth",
        "created_at": "2024-11-15T14:57:46Z",
        "body": "OK, if you are still actively working on the code then I won't merge yet until you are done with refactoring for the time being."
      },
      {
        "user": "b-reinke",
        "created_at": "2024-11-16T13:41:14Z",
        "body": "I have extracted some statement about general free groups, in particular, there is now a statement that nontrivial elements of free groups have infinite order (in particular, they are not equal to their inverse). That was a bigger file (but I guess still of general interest), so I put it in the ForMathlib folder. Smaller lemmas that are needed by this discussion are in the Mathlib folder.\r\n\r\nThe statements for fresh generators I haven't extracted yet, not sure where to put them and if they are of sufficient general interest.\r\n\r\nI also adapted the construction so that it can work as a basis for 1516 !=> 255."
      }
    ]
  },
  {
    "number": 817,
    "title": "Updates available but manual intervention required",
    "created_at": "2024-11-10T08:21:45Z",
    "closed_at": "2024-11-10T13:39:22Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/817",
    "body": "Try `lake update` and then investigate why this update causes the lean build to fail.\nFiles changed in update: \n",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/817/comments",
    "author": "github-actions[bot]",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-11-10T12:30:29Z",
        "body": "claim"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-11-10T12:31:52Z",
        "body": "propose #818 "
      }
    ]
  },
  {
    "number": 790,
    "title": "Updates available but manual intervention required",
    "created_at": "2024-11-04T08:02:40Z",
    "closed_at": "2024-11-06T00:15:27Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/790",
    "body": "Try `lake update` and then investigate why this update causes the lean build to fail.\nFiles changed in update: \n",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/790/comments",
    "author": "github-actions[bot]",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-11-05T14:15:06Z",
        "body": "claim"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-11-05T14:15:26Z",
        "body": "propose #793 "
      }
    ]
  },
  {
    "number": 775,
    "title": "Updates available but manual intervention required",
    "created_at": "2024-11-01T08:11:18Z",
    "closed_at": "2024-11-03T11:47:31Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/775",
    "body": "Try `lake update` and then investigate why this update causes the lean build to fail.\nFiles changed in update: \n",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/775/comments",
    "author": "github-actions[bot]",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-11-01T23:30:40Z",
        "body": "claim"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-11-01T23:30:59Z",
        "body": "propose #778 "
      }
    ]
  },
  {
    "number": 756,
    "title": "EQUATION EXPLORER: Integrate the #741 script",
    "created_at": "2024-10-29T23:52:28Z",
    "closed_at": "2024-11-02T15:08:32Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/756",
    "body": "We have a script at #741 to display the details of any given implication or anti-implication, assuming that a suitable JSON file has been built.  One could integrate this functionality into EE, for instance by adding a \"Proof\" link to any implication, anti-implication, or equivalence.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/756/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "amirlb",
        "created_at": "2024-10-31T09:02:37Z",
        "body": "claim"
      },
      {
        "user": "amirlb",
        "created_at": "2024-10-31T09:33:19Z",
        "body": "propose #766 "
      }
    ]
  },
  {
    "number": 738,
    "title": "feat: weak central groupoids",
    "created_at": "2024-10-25T21:50:11Z",
    "closed_at": "2024-10-26T21:48:25Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/738",
    "body": "Adds the results from Chapter 11 up to lemma 11.4.\n\nCloses #737",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/738/comments",
    "author": "digama0",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-25T23:04:04Z",
        "body": "Sorry I think I caused a blueprint collision by fixing the typos you pointed out earlier"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-26T20:39:39Z",
        "body": "@teorth The conflict was caused by the presence of `blueprint/src/print.pdf` that has been updated, but should not have been there in the first place. I will `.gitignore` it.\r\n"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-26T21:47:52Z",
        "body": "This PR can be merged now. "
      }
    ]
  },
  {
    "number": 737,
    "title": "GRAPH_GREEDY: Refute 1485 -> 3457, 2124, 2087, 3511",
    "created_at": "2024-10-25T19:01:23Z",
    "closed_at": "2024-10-27T14:16:00Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/737",
    "body": "Proof is in the \"weak central groupoid\" chapter of blueprint, uploaded in #735.\n\nWhen done, add \\lean and \\leanok tags to the appropriate theorems. Feel free to refactor the blueprint proof (and add \\uses tags) as appropriate.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/737/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "digama0",
        "created_at": "2024-10-25T19:24:22Z",
        "body": "claim"
      },
      {
        "user": "digama0",
        "created_at": "2024-10-25T21:50:25Z",
        "body": "propose #738"
      },
      {
        "user": "teorth",
        "created_at": "2024-10-26T22:51:31Z",
        "body": "Moving this back to \"claimed tasks\" since there is still work to be done (and Mario is working on it)."
      },
      {
        "user": "digama0",
        "created_at": "2024-10-27T09:04:27Z",
        "body": "propose #744"
      }
    ]
  },
  {
    "number": 734,
    "title": "Fix bump",
    "created_at": "2024-10-25T09:57:13Z",
    "closed_at": "2024-10-26T19:31:42Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/734",
    "body": "null\n\nCloses #733",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/734/comments",
    "author": "pitmonticone",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-26T17:54:24Z",
        "body": "@pitmonticone , ready to merge?"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-26T18:32:23Z",
        "body": "@teorth Yes, I've just merged `main` so let's wait for CI. "
      }
    ]
  },
  {
    "number": 733,
    "title": "Updates available but manual intervention required",
    "created_at": "2024-10-25T08:17:18Z",
    "closed_at": "2024-10-26T19:31:43Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/733",
    "body": "Try `lake update` and then investigate why this update causes the lean build to fail.\nFiles changed in update: \n",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/733/comments",
    "author": "github-actions[bot]",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-25T09:57:29Z",
        "body": "claim"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-25T09:58:08Z",
        "body": "propose #734"
      }
    ]
  },
  {
    "number": 727,
    "title": "More ruff fixes",
    "created_at": "2024-10-23T19:19:07Z",
    "closed_at": "2024-10-24T12:54:18Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/727",
    "body": "I'm attempting to improve the readability and general tidiness of the python part of the code base.\r\n\r\nI did a new python linter run with ruff, this time generating fixes considered slightly unsafe for various reasons. You can run ` uvx ruff check --unsafe-fixes --fix` to replicate these results.\r\n\r\nI did a manual review of all the proposed fixes, making sure they were sound. I made some minor corrections here and there, but nothing big.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/727/comments",
    "author": "harahu",
    "comments": [
      {
        "user": "euprunin",
        "created_at": "2024-10-23T19:28:53Z",
        "body": "Looks great! 👍 Thanks for taking the time to carefully review and improve the codebase!"
      }
    ]
  },
  {
    "number": 719,
    "title": "Rerun generate_lean.py",
    "created_at": "2024-10-22T18:19:06Z",
    "closed_at": "2024-10-23T05:13:22Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/719",
    "body": "Ensure that the refutation is added.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/719/comments",
    "author": "dsm054",
    "comments": [
      {
        "user": "vlad902",
        "created_at": "2024-10-22T18:21:09Z",
        "body": "You're missing the new `Refutation745.lean` file."
      },
      {
        "user": "dsm054",
        "created_at": "2024-10-23T01:06:56Z",
        "body": "Oops.  Well, that's what squashing is for! :muscle: "
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-23T02:15:28Z",
        "body": "LGTM. Do you confirm, @vlad902?"
      },
      {
        "user": "vlad902",
        "created_at": "2024-10-23T04:50:30Z",
        "body": "> LGTM. Do you confirm, @vlad902?\r\n\r\nLGTM"
      }
    ]
  },
  {
    "number": 696,
    "title": "AD_HOC: Formalize the proof of 1437 !=> 4269",
    "created_at": "2024-10-21T04:05:04Z",
    "closed_at": "2024-10-21T04:44:41Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/696",
    "body": "null\n\nCloses #690",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/696/comments",
    "author": "Command-Master",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-21T04:11:48Z",
        "body": "Wow simp does a lot of heavy lifting here. Unfortunately the merge of your other pr caused a conflict here"
      },
      {
        "user": "Command-Master",
        "created_at": "2024-10-21T04:26:24Z",
        "body": "Yep. Fixed the merge conflict"
      }
    ]
  },
  {
    "number": 695,
    "title": " LINEAR: Formalize the proof of 1117 !=> 2441",
    "created_at": "2024-10-21T03:43:53Z",
    "closed_at": "2024-10-21T04:08:33Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/695",
    "body": "The construction can be simplified to `ℤ`, using floor division and multiplication by 2.\n\nCloses #691",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/695/comments",
    "author": "Command-Master",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-21T04:08:23Z",
        "body": "Slick!"
      }
    ]
  },
  {
    "number": 682,
    "title": "Prove nonimplications from equation 3342",
    "created_at": "2024-10-20T13:59:13Z",
    "closed_at": "2024-10-20T14:21:10Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/682",
    "body": "null\n\nCloses #662",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/682/comments",
    "author": "Command-Master",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-20T14:09:59Z",
        "body": "Nice simplification from polynomials to `Option (ℕ × ℕ)`.  The operations I had of multiplication by 2 and multiplication by t indeed could just as well have been the two standard shifts on `Option (ℕ × ℕ)`."
      }
    ]
  },
  {
    "number": 649,
    "title": "blueprint: minor corrections",
    "created_at": "2024-10-19T08:33:40Z",
    "closed_at": "2024-10-19T13:44:03Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/649",
    "body": "In section 7.4.2 (Modified base models) I believe there is a minor error: the final corrected magma equation is a copy-and-paste of the previous equation that fails to satisfy Equation 1659. I fix it with the logic from the lean proof:\r\n\r\n```math\r\nx * y = \\begin{cases} 0 & \\text{if } x=0,\\: x,y \\text{ do not have the same parity} \\\\  x+1 & \\text{if } x,y \\text{ have the same parity} \\\\ x -1 & \\text{otherwise} \\end{cases}\r\n```\r\n\r\nI also fix one typo and a small clarification on the equation being referenced.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/649/comments",
    "author": "vlad902",
    "comments": [
      {
        "user": "vlad902",
        "created_at": "2024-10-19T08:34:34Z",
        "body": "@zaklogician I think I got it right, but would you please verify the correction above?"
      },
      {
        "user": "zaklogician",
        "created_at": "2024-10-19T13:40:20Z",
        "body": "**BLUF**: Your edit is correct. In fact, line `333` should get the same treatment, then this'll be ready to merge. Thanks a lot!\r\n\r\n---\r\n\r\n**I.** Let's think step-by-step. :)\r\n\r\nI will use the verified Lean as reference.\r\n\r\n```\r\n  match x with\r\n  | 0 =>\r\n    if y % 2 = 0\r\n    then 1 else 0\r\n  | n + 1 =>\r\n    if x % 2 = y % 2\r\n    then n + 2 else n\r\n```\r\n\r\nThis says that if $x=0$ and $y$ have the same parity, the result should be $1$. Otherwise, it should be $0$. So if \r\n$x$ and $y$ do not have the same parity, the result should be $0$ as your edit says, not the other way around as my original version says!\r\n\r\nYeah, your edited version is correct.\r\n\r\n**II.** Line 333 and Line 366 should be the same. Line 333 is meant as signposting; basically I state that I will eventually modify the definition of Line 330 (which does satisfy both 1659 and 4315) to Line 333 (which still satisfies the former but not the latter). The rest is explanation about how one would come up with this particular modification."
      },
      {
        "user": "vlad902",
        "created_at": "2024-10-21T15:30:02Z",
        "body": "> Line 333 and Line 366 should be the same. Line 333 is meant as signposting\r\n\r\nAh, I hadn't understood that while reading it. #699 is this last change."
      }
    ]
  },
  {
    "number": 631,
    "title": "DASHBOARD: Enhance the dashboard to include links to various formats of the implication table",
    "created_at": "2024-10-18T15:38:22Z",
    "closed_at": "2024-12-05T16:10:12Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/631",
    "body": "For instance, links could be made to compressed JSON or CSV versions of the table, generated automatically during CI (possibly only once a day, for instance, if compilation time is excessive).  The individual entries of the dashboad table could also be linked to custom files; for instance, the \"explicitly true\" entry could link to a file of explicitly true implications, in some suitable format (e.g., JSON or raw text).\n\nIniitally proposed in the comments to #626.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/631/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "vlad902",
        "created_at": "2024-12-03T08:02:34Z",
        "body": "claim"
      },
      {
        "user": "vlad902",
        "created_at": "2024-12-05T07:16:12Z",
        "body": "propose PR #973"
      },
      {
        "user": "vlad902",
        "created_at": "2024-12-05T07:16:44Z",
        "body": "I forgot to link this, this can now be closed."
      }
    ]
  },
  {
    "number": 624,
    "title": "Obelix =!=> Asterix, formal proof",
    "created_at": "2024-10-17T22:42:29Z",
    "closed_at": "2024-10-24T04:00:46Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/624",
    "body": "Working on #543. Still a draft! :) \n\nCloses #543",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/624/comments",
    "author": "Timeroot",
    "comments": [
      {
        "user": "Shreyas4991",
        "created_at": "2024-10-21T15:11:11Z",
        "body": "Feel free to propose the PR to resolve the issue. Once you are done and we merge it, the issue will be automatically closed"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-21T16:13:37Z",
        "body": "Thank you @Timeroot for your contribution! \r\n\r\nCould you please fix the merge conflicts? "
      },
      {
        "user": "Timeroot",
        "created_at": "2024-10-21T16:23:42Z",
        "body": "I will! It's not 100% done yet (I would like to finish the Lean proof, which I want to say is < 1 day of work left), I definitely will fix the merge conflicts once that's ready.\r\n\r\n(I interpreted Shreyas's comment as saying I should 'propose' it now even though it's not done yet, if that was a misreading I apologize)"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-21T16:32:15Z",
        "body": "> (I interpreted Shreyas's comment as saying I should 'propose' it now even though it's not done yet, if that was a misreading I apologize)\r\n\r\nYou interpreted it correctly. Feel free to propose this PR in the related issue."
      },
      {
        "user": "teorth",
        "created_at": "2024-10-23T18:44:39Z",
        "body": "\"Obelisk\" shoud be \"Obelix\" in the lean import files.  \r\n\r\n~~Also, if you would like to update the blueprint to make LaTeX version of the proof (in the Asterix chapter, presumably) with \\lean and \\leanok tags, that would be great.  The proof can simply link to the Zulip discussion or pdf version of the proof if you are following that proof closely, but if you have any interesting deviations from that proof to report, that can also be mentioned there.~~ Never mind, I see you already did this, great!"
      },
      {
        "user": "Timeroot",
        "created_at": "2024-10-23T19:41:58Z",
        "body": "Haha, yeah not sure where \"Obelisk\" snuck into my head there. :)\r\nI'll fix that -- the LaTeX is a bit outdated (it describes a \"bifurcation tree\" strategy that turned out not to work), so I'm going to fix that up to be correct tonight. And fix the merge conflict."
      },
      {
        "user": "Timeroot",
        "created_at": "2024-10-23T21:34:47Z",
        "body": "Alright, it's actually ready to merge now.\r\nI don't really know how \\lean and \\leanok work well enough to use those tags."
      },
      {
        "user": "teorth",
        "created_at": "2024-10-23T23:21:56Z",
        "body": "There's a blueprint build error: ! LaTeX Error: \\begin{definition} on input line 212 ended by \\end{document}.\r\n\r\nYou can try compiling print.tex locally, or using the `push_before_run` script, before uploading, though one way or another we should get this build to work..."
      },
      {
        "user": "Timeroot",
        "created_at": "2024-10-24T01:48:53Z",
        "body": "I've had trouble getting blueprint to install (on a Mac, graphviz errors) so I was hoping I could write the LaTeX 'blind' and it would at least compile. Turns out my shooting accuracy for that is lower than expected. Think it's okay now though"
      }
    ]
  },
  {
    "number": 599,
    "title": "tree-based proof that 206 anti-implies 1648",
    "created_at": "2024-10-16T00:52:41Z",
    "closed_at": "2024-10-16T10:45:33Z",
    "labels": [
      "awaiting-review"
    ],
    "url": "https://github.com/teorth/equational_theories/pull/599",
    "body": "this fixes #596\n\nCloses #596",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/599/comments",
    "author": "nomeata",
    "comments": [
      {
        "user": "nomeata",
        "created_at": "2024-10-16T00:56:08Z",
        "body": "I really shouldn't start working on fun little things at the evening. It’s 3am now…\r\n\r\nI chose to made it self-contained, so there is 300 lines to develop the reduction function to construct the free product of three cyclic groups of order 2, and then 30 lines for the construction of the magma. Probably could have saved work by searching through mathlib… but where is the fun in that.\r\n\r\nWill clean up tomorrow."
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-16T09:44:02Z",
        "body": "Thanks @nomeata! Let me know when you're finished. "
      },
      {
        "user": "nomeata",
        "created_at": "2024-10-16T09:46:39Z",
        "body": "awaiting-review"
      },
      {
        "user": "nomeata",
        "created_at": "2024-10-16T09:46:52Z",
        "body": "I think it is, thanks for the ping."
      }
    ]
  },
  {
    "number": 595,
    "title": "revert: add back `requirements.txt`",
    "created_at": "2024-10-15T18:01:19Z",
    "closed_at": "2024-10-15T18:37:26Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/595",
    "body": "Follow-up to #588.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/595/comments",
    "author": "euprunin",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-15T18:37:24Z",
        "body": "Ops, sorry. Thanks!"
      }
    ]
  },
  {
    "number": 585,
    "title": "Update blueprint action path filters",
    "created_at": "2024-10-15T07:36:47Z",
    "closed_at": "2024-10-15T13:07:44Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/585",
    "body": "I noticed that after #582 landed the equation explorer dashboard didn't update. This should fix that and also add a missing filter for the graphiti data script.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/585/comments",
    "author": "vlad902",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-15T11:36:17Z",
        "body": "Thank you @vlad902. We should probably remove the \"home\" path, right? "
      },
      {
        "user": "vlad902",
        "created_at": "2024-10-15T12:21:07Z",
        "body": "Added."
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-15T13:07:40Z",
        "body": "Thanks a lot! Merged. "
      }
    ]
  },
  {
    "number": 580,
    "title": "Requirements.txt files and Python virtual environment setup scripts",
    "created_at": "2024-10-14T18:12:35Z",
    "closed_at": "2024-10-15T04:25:42Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/580",
    "body": "Created requirements.txt files to keep all python dependencies in one place.\r\n\r\nNormally all packages are thrown into a `requirements.txt` file and treated equally, regardless of whether they are project dependencies or sub-dependencies. The usage of `pip-config` to generate this requirements file allows us to see exactly where certain sub-dependencies are coming from. As such the logic is as follows\r\n\r\n`requirements.in` lists off all python requirements that are imported within scripts explicitly. The command `pip-config` uses this file to generate the full `requirements.txt` file. \r\n\r\n_Note_: I have not included `pygraphviz` nor `leanblueprint` as of now in the `requirements.in` file as wasn't sure if that was necessary for local user setup. Could be discussed in comments \r\n\r\n_Second Note_: I have preemptively added `pandas` and `matplotlib` as project dependencies. As we move into stats and visualizations of data I feel these will be relevant and useful\r\n\r\n---\r\n\r\nAdditionally setup scripts have been created for Unix and Windows environments to create virtual environments and activate them for new users, with some checks to make sure the user is utilizing them properly (ie correct directory). \r\n\r\nCloses #572",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/580/comments",
    "author": "Joe-McCann",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-14T18:56:43Z",
        "body": "Thanks for your contribution @Joe-McCann. \n\nRegarding note 1: you just need to include `leanblueprint` which has `pygraphviz` as dependency.\n\nRegarding note 2:  it's better not to add non-dependencies / unused libraries. \n\n"
      },
      {
        "user": "teorth",
        "created_at": "2024-10-14T18:57:42Z",
        "body": "A small request: can you update the \"Scripts\" section of CONTRIBUTING.md with a link to this new text file and some guidance for contributors?  Thanks!"
      },
      {
        "user": "Joe-McCann",
        "created_at": "2024-10-14T19:31:33Z",
        "body": "> Regarding note 1: you just need to include `leanblueprint` which has `pygraphviz` as dependency.\r\n\r\nYeah for `pygraphviz` I was concerned about this additional piece in specifying the build \r\n```\r\n--global-option=build_ext --global-option=\"-L/usr/lib/graphviz/\" --global-option=\"-R/usr/lib/graphviz/\"\r\n```\r\nas I wasn't sure what the equivalent windows variation would be, and then it would just making dual compatibility a hassle. Making it work on the docker image + any user setup seemed like overkill so I assumed that if it wasn't needed for user devices to just leave it for the blueprint run. Can be changed if you think we should include\r\n\r\n> Regarding note 2: it's better not to add non-dependencies / unused libraries.\r\n\r\nFair point! Will remove. \r\n\r\n> A small request: can you update the \"Scripts\" section of CONTRIBUTING.md with a link to this new text file and some guidance for contributors? Thanks!\r\n\r\nWill do. Heading to teach soon so will do when I get back home tonight"
      },
      {
        "user": "Joe-McCann",
        "created_at": "2024-10-15T04:05:00Z",
        "body": "Updated PR addressing comments, let me know if there is anything else you'd like adjusted"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-15T04:25:04Z",
        "body": "LGTM. Thanks. "
      }
    ]
  },
  {
    "number": 577,
    "title": "[PARTIAL] Functional equational approach based on Pace Nielsen's proof",
    "created_at": "2024-10-14T16:56:52Z",
    "closed_at": "2024-11-29T22:13:47Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/577",
    "body": "I have formalized everything except the case 1 check and constructing the final function based on extensions, but don't have time to finish it, so posting this so someone can maybe finish it.\r\n\r\nIt's designed to constructively create the counterexample and represents the free abelian group using DFinsupp; it would be nice to cut down on that setup code, but I'm not sure if there is a shorter way of doing it especially constructively.\r\n\r\nThe partial sets are E are defined as partial functions, again using DFinsupp going to an Option type; the \"fup\" def lifts them to Option -> Option functions that are none on none.\r\n\r\nThe construction follows the paper and there are some additional notes on why Case 1 holds, which may help in designing its proof.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/577/comments",
    "author": "lyphyser",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-14T17:13:26Z",
        "body": "I'm inclined to leave this PR unmerged for now until someone reclaims #506, and they can decide to what extent they will build off of this one.  (Though one argument in favor of merging now is that it will avoid merge conflicts and build issues later on.  So perhaps one can revisit this issue in a few days if nobody ends up reclaiming #506.)"
      },
      {
        "user": "Shreyas4991",
        "created_at": "2024-10-16T14:02:47Z",
        "body": "> I'm inclined to leave this PR unmerged for now until someone reclaims #506, and they can decide to what extent they will build off of this one. (Though one argument in favor of merging now is that it will avoid merge conflicts and build issues later on. So perhaps one can revisit this issue in a few days if nobody ends up reclaiming #506.)\r\n\r\nIn that case I will mark it as  a draft PR "
      },
      {
        "user": "teorth",
        "created_at": "2024-11-29T22:13:47Z",
        "body": "No longer required since 1076 has been formalized by other means."
      }
    ]
  },
  {
    "number": 570,
    "title": "Solve remaining anti-implications of 1648",
    "created_at": "2024-10-14T15:37:28Z",
    "closed_at": "2024-10-14T16:20:47Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/570",
    "body": "@vlad902  has a general proof that settles multiple anti-implications of 1648.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/570/comments",
    "author": "Shreyas4991",
    "comments": [
      {
        "user": "vlad902",
        "created_at": "2024-10-14T15:38:29Z",
        "body": "claim"
      },
      {
        "user": "vlad902",
        "created_at": "2024-10-14T16:08:56Z",
        "body": "propose PR #574"
      }
    ]
  },
  {
    "number": 563,
    "title": "State and prove the universal property of the free magma quotiented by a theory.",
    "created_at": "2024-10-13T22:09:59Z",
    "closed_at": "2024-10-13T23:15:39Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/563",
    "body": "null\n\nCloses #412",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/563/comments",
    "author": "codyroux",
    "comments": [
      {
        "user": "codyroux",
        "created_at": "2024-10-14T00:01:47Z",
        "body": "Thanks Pietro!"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-14T00:57:50Z",
        "body": "Thank you @codyroux for your contribution!"
      }
    ]
  },
  {
    "number": 552,
    "title": "style improvements and a bit of golf in FreeSemigroup",
    "created_at": "2024-10-13T09:01:10Z",
    "closed_at": "2024-10-13T13:27:36Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/552",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/552/comments",
    "author": "madvorak",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-13T13:27:33Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 547,
    "title": "EQUATION_EXPLORER: boldface those equations that contain commentary",
    "created_at": "2024-10-13T02:55:22Z",
    "closed_at": "2024-10-13T15:06:02Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/547",
    "body": "This request is to replace the (no longer functional) feature to boldface equations that are listed in `Basic.lean`.  ",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/547/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "vlad902",
        "created_at": "2024-10-13T14:42:24Z",
        "body": "claim"
      },
      {
        "user": "vlad902",
        "created_at": "2024-10-13T14:45:23Z",
        "body": "propose PR #556 "
      }
    ]
  },
  {
    "number": 546,
    "title": "EQUATION_EXPLORER: Add option to hide fully solved equations in the main table",
    "created_at": "2024-10-13T02:54:04Z",
    "closed_at": "2024-10-13T17:05:20Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/546",
    "body": "\"Fully solved\" means that there are 0 unknown equations that the equation either implies, or is implied by.\n\nThis will make it easier to search for interesting remaining equations, now that the number of outstanding implications has dropped to the mid hundreds.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/546/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "vlad902",
        "created_at": "2024-10-13T14:42:31Z",
        "body": "claim"
      },
      {
        "user": "vlad902",
        "created_at": "2024-10-13T16:37:52Z",
        "body": "propose PR #560"
      }
    ]
  },
  {
    "number": 537,
    "title": "FRONTEND: \"Anti-Implies\" or rather \"Not implies\"",
    "created_at": "2024-10-12T18:45:33Z",
    "closed_at": "2024-10-13T02:24:41Z",
    "labels": [
      "project-task"
    ],
    "url": "https://github.com/teorth/equational_theories/issues/537",
    "body": "A friend of mine was confused by the wording \"Anti-Implies\" in the equation explorer. Maybe we should call it \"Not implies\".\r\n\r\nEven more so, \"Anti-Implied By\" sounds less clear to me than \"Not implied by\".",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/537/comments",
    "author": "madvorak",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-12T20:47:46Z",
        "body": "I guess the grammatically correct options are \"Does not imply\" for \"Anti-implies\", and \"Not implied by\" by \"Anti-implied by\"."
      },
      {
        "user": "madvorak",
        "created_at": "2024-10-12T20:49:41Z",
        "body": "claim"
      },
      {
        "user": "madvorak",
        "created_at": "2024-10-12T21:01:06Z",
        "body": "propose #542"
      }
    ]
  },
  {
    "number": 532,
    "title": "graphiti: Add checkbox for sporadic equations",
    "created_at": "2024-10-12T14:07:49Z",
    "closed_at": "2024-10-12T14:41:58Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/532",
    "body": "I noticed that sometimes graphiti can generate spurious vertices for sporadic equations. Add a checkbox to allow displaying them, otherwise explicitly filter them (in the correct way.)\r\n\r\nAlso, clean-up the generate graph script and trivially optimize the closure computation.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/532/comments",
    "author": "vlad902",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-12T14:41:53Z",
        "body": "Thanks! "
      }
    ]
  },
  {
    "number": 531,
    "title": "style improvements in InfModel",
    "created_at": "2024-10-12T14:07:29Z",
    "closed_at": "2024-10-12T14:41:14Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/531",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/531/comments",
    "author": "madvorak",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-12T14:41:12Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 526,
    "title": "Lifting magma families",
    "created_at": "2024-10-11T22:00:17Z",
    "closed_at": "2024-10-12T23:39:42Z",
    "labels": [
      "awaiting-review"
    ],
    "url": "https://github.com/teorth/equational_theories/pull/526",
    "body": "This PR formalizes the theory of Chapter 8 and uses it to generate several non-implications with formal proofs.\n\nThe relevant files are in `equational_theories/Generated/InvariantMetatheoremNonimplications`.\n\nCloses #377",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/526/comments",
    "author": "0art0",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-12T02:14:12Z",
        "body": "Roughly how many implications are being added here?  The main Lean codebase is being transitively reduced to reduce compilation times, so we would likely only add implications to the main folders if they settle new implications or anti-implications (after taking transitive completion), but I don't see harm in adding a lot of redundant implications so long as they are not placed in the main codebase but in another directory (e.g., in the data directory)."
      },
      {
        "user": "0art0",
        "created_at": "2024-10-12T08:27:03Z",
        "body": "The counts for the files are\r\n\r\n```\r\n6070 - instLiftingMagmaFamilyLeftProj_counterexamples.lean\r\n30 - instLiftingMagmaFamilyList_counterexamples.lean\r\n160 - instLiftingMagmaFamilyMultiset_counterexamples.lean\r\n6070 - instLiftingMagmaFamilyRightProj_counterexamples.lean\r\n```\r\n\r\nWhile generating these files, I am also filtering to make sure that the results are not already contained in the closure of the established equational results. However, these counts are still much higher than I would expect after filtering, so I can take another look at my code to see if I am generating the closure correctly (if I don't manage to figure out the reason for these high numbers, I'd be happy for these files to go in the `data` directory instead)."
      },
      {
        "user": "0art0",
        "created_at": "2024-10-12T11:29:42Z",
        "body": "After pulling in the latest changes from `main`, it seems like the code produces no results that haven't already been established (I've added a bit of code to ensure that if this script is run twice consecutively, the results from the previous run don't block out results from the new run). I would still like to go ahead with merging this PR since the general framework here is likely to be useful in settling other kinds of non-implications."
      },
      {
        "user": "0art0",
        "created_at": "2024-10-12T11:49:20Z",
        "body": "Strangely, running the script yet again (after pulling in the most recent changes) gives the same results as before with the same frequencies (my hunch is that the results from the first run of the script were blocking the ones from the second)."
      },
      {
        "user": "0art0",
        "created_at": "2024-10-12T12:28:48Z",
        "body": "awaiting-review"
      },
      {
        "user": "0art0",
        "created_at": "2024-10-12T12:34:42Z",
        "body": "Looking more closely at the outputs, they seem to mainly involve equations from `Equations/Basic.lean`, about which fewer results have been established in general (presumably). It's likely that none of these results are among the 700 or so remaining open implications/non-implications, which (if I recall correctly) are about the initial set of 4694 equations. "
      },
      {
        "user": "0art0",
        "created_at": "2024-10-12T12:44:35Z",
        "body": "Apologies for the series of messages above, here is a summary:\r\n\r\nThe counts of the results in the generated files are\r\n```\r\n6070 - instLiftingMagmaFamilyLeftProj_counterexamples.lean\r\n30 - instLiftingMagmaFamilyList_counterexamples.lean\r\n160 - instLiftingMagmaFamilyMultiset_counterexamples.lean\r\n6070 - instLiftingMagmaFamilyRightProj_counterexamples.lean\r\n```\r\n\r\nWhile generating these files, I am also filtering to make sure that the results are not already contained in the closure of the established equational results.\r\n\r\nThe reason these counts seem higher than one would expect from the current status of the project is likely because the script is also considering the sporadic equations defined in `Equations/Basic.lean` which are not among the initial set of 4694 equations."
      },
      {
        "user": "teorth",
        "created_at": "2024-10-12T17:58:09Z",
        "body": "It might still be possible to transitively reduce the ~12000 implications you generated because some of them may imply some of the others in combination with the existing implications, even if none of them are in the transitive closure of the existing implications itself.  For instance, if it was already known that A => B, and you establish that A !=> C and B !=> C, then the second anti-implication can be dropped as it already follows from the first, even if both anti-implications are new.  I think there are already transitive reduction scripts that can be applied to the union of the existing implications and your new ones which should see if there are significant reductions to be made here.  "
      },
      {
        "user": "0art0",
        "created_at": "2024-10-12T21:24:57Z",
        "body": "@teorth Thank you for the suggestion, I've implemented this kind of transitive reduction and it has reduced the sizes significantly. Here are the updated counts:\r\n```\r\n45 - instLiftingMagmaFamilyLeftProj_counterexamples.lean\r\n\r\n10 - instLiftingMagmaFamilyList_counterexamples.lean\r\n\r\n60 - instLiftingMagmaFamilyMultiset_counterexamples.lean\r\n\r\n55 - instLiftingMagmaFamilyRightProj_counterexamples.lean\r\n```\r\n"
      }
    ]
  },
  {
    "number": 505,
    "title": "FME: fix the unknown version bug in the manual build script (#504)",
    "created_at": "2024-10-11T04:59:49Z",
    "closed_at": "2024-10-11T13:08:29Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/505",
    "body": "This fixes one half of the issue described in #504.\r\n\r\nThe other half is the equivalent change in the CI actions of the blueprint (pinging @pitmonticone, sorry to bother you with this, my bad).",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/505/comments",
    "author": "zaklogician",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-11T07:50:27Z",
        "body": "I'll take a look at it later today. "
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-11T12:50:52Z",
        "body": "Ok @zaklogician, it would be enough to push the exact same change in the relevant FME step of the blueprint.yml workflow script. \n\nCan you do it, please? I'm from mobile now and I'll be for many hours."
      }
    ]
  },
  {
    "number": 496,
    "title": "DATA: Add examples to smallest_magma.txt",
    "created_at": "2024-10-10T16:34:25Z",
    "closed_at": "2024-10-11T19:25:33Z",
    "labels": [
      "awaiting-review"
    ],
    "url": "https://github.com/teorth/equational_theories/pull/496",
    "body": "This fixes #475 by \r\n\r\na) Modifying `data/smallest_magma.txt` to include an example of a magma of smallest size\r\nb) Introducing `data/small_magma.txt` for examples of small magmas where it is not known if the magma has the smallest possible size\r\nc) Introducing `scripts/gather_small_magmas.py` that can read various files to extract small magma examples and add them to `data/smallest_magma.txt` or `data/small_magma.txt`\r\n\r\nCurrently `equational_theories/Generated/All4x4Tables/data/` and `equational_theories/Generated/VampireProven/` are read. The two examples in `data/small_magma.txt` come from the first folder.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/496/comments",
    "author": "few",
    "comments": [
      {
        "user": "few",
        "created_at": "2024-10-10T16:36:42Z",
        "body": "awaiting-review"
      },
      {
        "user": "teorth",
        "created_at": "2024-10-11T00:09:42Z",
        "body": "Would it be possible to still keep the original text file that just has the size of the smallest magma in its current location, and add an additional file that also has the smallest magma itself?  The original text file might still be useful for some applications, and easier to use, even if it contains strictly less information."
      },
      {
        "user": "few",
        "created_at": "2024-10-11T14:58:14Z",
        "body": "I have renamed the files to `data/smallest_magma_examples.txt` and `data/small_magma_examples.txt` and kept the old one. The script updates the old files as well (that's causing the reordering there)."
      }
    ]
  },
  {
    "number": 493,
    "title": "Investigate transitively reducing the current set of implications on main",
    "created_at": "2024-10-10T15:48:19Z",
    "closed_at": "2024-10-11T06:41:28Z",
    "labels": [
      "project-task"
    ],
    "url": "https://github.com/teorth/equational_theories/issues/493",
    "body": "Currently, about 2/3rd of implications on main are \"vestigial\" (e.g. no longer in the transitive reduction.) It would be good to see how much removing them 1) improves build times, and 2) improves graph operation times, e.g. generating the extract_implications --closure.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/493/comments",
    "author": "vlad902",
    "comments": [
      {
        "user": "vlad902",
        "created_at": "2024-10-10T15:49:08Z",
        "body": "(I've begun taking a look at this already and I'd like to claim it if/once it lands on the unclaimed tasks.)"
      },
      {
        "user": "teorth",
        "created_at": "2024-10-10T17:04:11Z",
        "body": "This is a good idea, and I've added it as a project task, but just wanted to make one comment for posterity (also added to the \"plan of paper\" document): when we write the paper and review the performance of various automated implication tactics, we will probably need to run these tactics on the whole implication set from scratch to obtain the required metrics, rather than rely on whatever the state of the reduced implication set is at the time of the paper writing process, because these pruning procedures could severely undercount the performance of any given tactic."
      },
      {
        "user": "vlad902",
        "created_at": "2024-10-10T19:12:08Z",
        "body": "Yes, and this is already actually the case, since e.g. the vampire run was pruned to avoid overlap with the elements already in transitive closure as it was at the time it was committed, so every step has already had reduction applied relative to what came before it (except for perhaps some of the very first commits.)"
      },
      {
        "user": "vlad902",
        "created_at": "2024-10-10T19:12:15Z",
        "body": "claim"
      },
      {
        "user": "vlad902",
        "created_at": "2024-10-10T21:09:50Z",
        "body": "propose PR #500 "
      }
    ]
  },
  {
    "number": 485,
    "title": "Thousands separators for dashboard tables",
    "created_at": "2024-10-10T07:44:20Z",
    "closed_at": "2024-10-10T12:24:24Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/485",
    "body": "The dashboard tables contain some big numbers. I though they would be easier to read if they were formatted with thousands separators. This PR addresses that.\r\n\r\nThis change was so small that I hope I can get it though without creating a corresponding issue for it.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/485/comments",
    "author": "harahu",
    "comments": [
      {
        "user": "dwrensha",
        "created_at": "2024-10-10T12:17:21Z",
        "body": "looks good to me!"
      }
    ]
  },
  {
    "number": 481,
    "title": "Restore equation 953 to AllEquations; make build break if it happens again",
    "created_at": "2024-10-10T05:11:40Z",
    "closed_at": "2024-10-10T14:29:54Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/481",
    "body": "Fixes #480\n\nCloses #480",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/481/comments",
    "author": "carlini",
    "comments": [
      {
        "user": "goens",
        "created_at": "2024-10-10T05:51:32Z",
        "body": "Please see comment in #480 before trying to merge this."
      },
      {
        "user": "carlini",
        "created_at": "2024-10-10T14:22:40Z",
        "body": "Every other equation that has been removed from AllEquations.lean were commented out in this way."
      },
      {
        "user": "carlini",
        "created_at": "2024-10-10T14:29:54Z",
        "body": "Closing this to submit a simpler PR that just raises an error if this happens again."
      }
    ]
  },
  {
    "number": 474,
    "title": "update home page to match readme",
    "created_at": "2024-10-09T17:55:11Z",
    "closed_at": "2024-10-09T18:10:57Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/474",
    "body": "The home page was somewhat out of date and in particular contained some bad links.  Updating it to synchronize it with README.md\n\nCloses #456",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/474/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-09T18:10:55Z",
        "body": "Thanks! Merged. "
      }
    ]
  },
  {
    "number": 459,
    "title": "Lift implications laws",
    "created_at": "2024-10-09T10:40:09Z",
    "closed_at": "2024-10-12T11:16:24Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/459",
    "body": "Lift implications on Equations to Laws in Meta code.\r\n\r\nThis is part of #174 ",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/459/comments",
    "author": "goens",
    "comments": [
      {
        "user": "goens",
        "created_at": "2024-10-09T12:44:12Z",
        "body": "Depends on #460 "
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-11T21:50:32Z",
        "body": "Thanks @goens. Could you resolve this merge conflicts please?"
      },
      {
        "user": "goens",
        "created_at": "2024-10-12T11:14:11Z",
        "body": "@pitmonticone merge conflicts resolved, thanks!"
      }
    ]
  },
  {
    "number": 458,
    "title": "Universe-generalize completeness thm",
    "created_at": "2024-10-09T09:33:21Z",
    "closed_at": "2024-10-09T18:33:28Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/458",
    "body": "This adds the following new theorems:\r\n```lean\r\ntheorem models_def' {α β} {Γ : Ctx α} {E : MagmaLaw β} :\r\n    Γ ⊧ E ↔ ∀ (G : Type*) [Magma G], G ⊧ Γ → G ⊧ E\r\n\r\ntheorem Completeness' {α β} {Γ : Ctx α} {E : MagmaLaw β} (h : Γ ⊧ E) : Nonempty (Γ ⊢' E)\r\n```\r\nThe `Completeness'` thereorem was there before, but the type parameters are now unconstrained. The `models_def'` function permits using the `Γ ⊧ E` relation regardless of what universe the type `G` lives in.\r\n\r\nThis involves formalizing \"compactness\", in the form that any `MagmaLaw A`, even when there are uncountably many generators `A`, is equivalent to a `MagmaLaw` over `Fin n`, or `Nat`, so it suffices to quantify over the lowest universe to capture all behavior exhibited by magma equations.\r\n\r\nIt also required setting up a bunch of missing general theory about mapping and partial mapping for `FreeMagma`.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/458/comments",
    "author": "digama0",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-09T09:36:36Z",
        "body": "Thank you very much @digama0! Could you please resolve the merge conflicts? "
      }
    ]
  },
  {
    "number": 457,
    "title": "consistent `equation` spacing",
    "created_at": "2024-10-09T09:17:39Z",
    "closed_at": "2024-10-09T10:33:09Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/457",
    "body": "Most declarations that use the keyword `equation` have two spaces on each side of `:=` so I put it everywhere consistently.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/457/comments",
    "author": "madvorak",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-09T09:31:52Z",
        "body": "I think it's better to adopt the usual convention of one spaces everywhere. "
      },
      {
        "user": "madvorak",
        "created_at": "2024-10-09T10:09:15Z",
        "body": "I like people started putting double spaces around `:=` as it makes it more readable."
      }
    ]
  },
  {
    "number": 456,
    "title": "FRONTEND: broken link \"smallest magma\"",
    "created_at": "2024-10-09T08:49:20Z",
    "closed_at": "2024-10-09T18:10:58Z",
    "labels": [
      "project-task"
    ],
    "url": "https://github.com/teorth/equational_theories/issues/456",
    "body": "We have a broken link \"The smallest magma obeying a given equation (up to N=5), if it exists\" on the homepage.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/456/comments",
    "author": "madvorak",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-09T17:55:55Z",
        "body": "claim"
      },
      {
        "user": "teorth",
        "created_at": "2024-10-09T17:56:36Z",
        "body": "propose PR #474 "
      }
    ]
  },
  {
    "number": 455,
    "title": "the same typo was actually in three places",
    "created_at": "2024-10-09T08:26:51Z",
    "closed_at": "2024-10-09T09:12:47Z",
    "labels": [
      "do-not-merge"
    ],
    "url": "https://github.com/teorth/equational_theories/pull/455",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/455/comments",
    "author": "madvorak",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-09T08:54:17Z",
        "body": "I'll merge in a few minutes."
      }
    ]
  },
  {
    "number": 454,
    "title": "subgraph style",
    "created_at": "2024-10-09T07:59:24Z",
    "closed_at": "2024-10-09T09:12:38Z",
    "labels": [
      "do-not-merge"
    ],
    "url": "https://github.com/teorth/equational_theories/pull/454",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/454/comments",
    "author": "madvorak",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-09T08:54:46Z",
        "body": "Thanks! I'll merge it in a few minutes. "
      }
    ]
  },
  {
    "number": 451,
    "title": "Prove 3588 !-> ... and 115 !-> ... via confluence",
    "created_at": "2024-10-09T01:23:00Z",
    "closed_at": "2024-10-10T03:30:06Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/451",
    "body": "This adds a confluence proof for 3588 !-> ..., which is interesting since it is turned by Vampire and kbcv into a system of two confluent rules, which are then implemented using Joachim Breitner's Confluence system (with some enhancements).\r\n\r\nNot sure if it should be merged as is because it is quite slow to compile, due to the massive automated case splitting through the custom \"sledgehammer\" tactic that it employs (it's somewhat fine to have it alone, but if 10-100 more like this would probably be a problem).\r\n\r\nPerhaps someone who is more experienced at Lean elaboration performance optimization can find a way to speed it up (and also automate it more ideally); otherwise it's possible that some other strategy for making confluence proofs needs to be found, or possibly a build system change where some proofs are not compiled by default.\r\n\r\nEDIT: I rewrote the proof and now it's fast and good and all these problems are solved\r\n",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/451/comments",
    "author": "lyphyser",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-09T08:55:27Z",
        "body": "Thanks @lyphyser! Could you please resolve merge conflicts?"
      },
      {
        "user": "lyphyser",
        "created_at": "2024-10-09T18:59:46Z",
        "body": "I have a much better version that I will push soon."
      },
      {
        "user": "lyphyser",
        "created_at": "2024-10-09T20:05:28Z",
        "body": "OK, so the proof has been rewritten and is now much better: fast, relatively short and simple, human readable, generalizable in principle to other equations (with some work/thought needed, new issues might arise).\r\n\r\nShould be mergeable now.\r\n"
      }
    ]
  },
  {
    "number": 448,
    "title": "improved equation command",
    "created_at": "2024-10-08T23:49:21Z",
    "closed_at": "2024-10-09T12:45:20Z",
    "labels": [
      "awaiting-review"
    ],
    "url": "https://github.com/teorth/equational_theories/pull/448",
    "body": "This makes a few improvements to the docstring and hover behavior of the `equation` command. Specifically, you can now hover on `equation 37`  to see the type of the equation, and the equation itself is also added to the hover for `Equation37` (instead of just the type, which is not particularly useful).",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/448/comments",
    "author": "digama0",
    "comments": [
      {
        "user": "digama0",
        "created_at": "2024-10-08T23:49:30Z",
        "body": "awaiting-review"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-08T23:59:12Z",
        "body": "Thanks @digama0! Can you please resolve the merge conflicts?"
      },
      {
        "user": "Shreyas4991",
        "created_at": "2024-10-09T00:18:39Z",
        "body": "I expect the merging of #427 to create more merge conflicts in this PR."
      }
    ]
  },
  {
    "number": 447,
    "title": "qa: add `lean4lean_check.py` and run as part of `run_before_push.sh` and `pre-push.sh`",
    "created_at": "2024-10-08T22:50:29Z",
    "closed_at": "2024-10-09T21:16:09Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/447",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/447/comments",
    "author": "euprunin",
    "comments": [
      {
        "user": "Shreyas4991",
        "created_at": "2024-10-08T23:18:26Z",
        "body": "This PR is identical to #445 . Is there a reason this is being repeated?"
      },
      {
        "user": "euprunin",
        "created_at": "2024-10-09T05:37:05Z",
        "body": "> This PR is identical to #445 . Is there a reason this is being repeated?\r\n\r\nIt was suggested by teorth in #446: _\"It's probably best to start over with a fresh PR and have it go through the review process.\"_\r\n\r\nThat said, it looks like the alternative PR #421 has really evolved and improved since I submitted this and the earlier PR. Once we have solid `lean4lean` validation in CI—whether through this PR or another one (as is typical in open source, attribution or status isn’t important to me; what matters is the quality of the code)—I’ll be happy to work on any further improvements in a follow-up PR.\r\n\r\nAs I mentioned at the start of our conversation: _\"That said, with some improvements in robustness and adherence to standard Python coding practices, the Python script could work just as well. As long as robust `lean4lean` validation is in place without any additional dependency requirements, I'm fine with either approach—I don't mind if my code is used or not, since this is just a simple five-minute script.\"_"
      }
    ]
  },
  {
    "number": 442,
    "title": "Prove Theorem 3.11",
    "created_at": "2024-10-08T20:53:32Z",
    "closed_at": "2024-10-20T01:45:06Z",
    "labels": [
      "awaiting-review"
    ],
    "url": "https://github.com/teorth/equational_theories/pull/442",
    "body": "Closes #374\r\n\r\n* Introduce and prove `Finite.two_variable_laws` formalizing Theorem 3.11\r\n* Add `\\leanok` and the reference of the theorem in the blueprint\r\n* Add missing `\\leanok` and reference of another theorem in the blueprint (#202)\r\n\r\nNote: the proof is that of Austin (1966)",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/442/comments",
    "author": "jscanvic",
    "comments": [
      {
        "user": "jscanvic",
        "created_at": "2024-10-19T23:41:28Z",
        "body": "awaiting-review"
      },
      {
        "user": "teorth",
        "created_at": "2024-10-20T01:45:11Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 429,
    "title": "Export equations",
    "created_at": "2024-10-08T11:21:06Z",
    "closed_at": "2024-10-09T01:02:44Z",
    "labels": [
      "awaiting-review"
    ],
    "url": "https://github.com/teorth/equational_theories/pull/429",
    "body": "Exports the equations defined in `Equations.lean` and `AllEquations.lean` to a JSON file `data/magma_equations.json`.\r\n\r\nDepends on PR #427.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/429/comments",
    "author": "0art0",
    "comments": [
      {
        "user": "0art0",
        "created_at": "2024-10-08T11:25:11Z",
        "body": "I was also considering adding the generated JSON file to the PR, but I haven't done that yet since it's a sizeable file."
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-08T13:27:12Z",
        "body": "Thank you @0art0! Please make sure the project builds correctly by locally running `scripts/run_before_push.sh`. "
      },
      {
        "user": "0art0",
        "created_at": "2024-10-08T23:00:16Z",
        "body": "awaiting-review"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-09T01:02:51Z",
        "body": "Thanks again @0art0 "
      }
    ]
  },
  {
    "number": 415,
    "title": "EQUATION_EXPLORER: Generalize the \"Prove this!\" link to a \"Try this!\" link for proven (or conjectured) implications/anti-implications",
    "created_at": "2024-10-07T19:35:26Z",
    "closed_at": "2024-10-11T00:11:02Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/415",
    "body": "Of course, in these cases only one of the two statements should be presented in the playground: if for instance an implication is proven, the playground should only list the implication, and similarly for anti-implications.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/415/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "carlini",
        "created_at": "2024-10-08T05:25:37Z",
        "body": "To clarify what you're thinking: every implication in the page should have a link next to it. Any one that's in the proven/(anti-) columns will have a \"try this\", anything on the unknown will be \"prove this\"?"
      },
      {
        "user": "Command-Master",
        "created_at": "2024-10-08T08:59:51Z",
        "body": "I think conjectures should also have \"prove this\""
      },
      {
        "user": "teorth",
        "created_at": "2024-10-08T16:29:09Z",
        "body": "So, to summarize:\r\n\r\n* Proven implication/anti-implication: \"Try this\" button -> playground just displays the implication or anti-implication\r\n* Conjectured implication/anti-implication: \"Prove this\" button -> playground just displays the implication or anti-implication\r\n* Unknown: \"Prove this\" button ->playground displays *both* the implication and anti-implication"
      },
      {
        "user": "carlini",
        "created_at": "2024-10-09T01:01:32Z",
        "body": "claim"
      },
      {
        "user": "carlini",
        "created_at": "2024-10-09T01:01:41Z",
        "body": "propose PR #450 "
      },
      {
        "user": "carlini",
        "created_at": "2024-10-10T15:42:15Z",
        "body": "I believe this can be closed now."
      },
      {
        "user": "carlini",
        "created_at": "2024-10-10T15:42:38Z",
        "body": "(Am I doing something wrong with the commands that it's not closing automatically?)"
      },
      {
        "user": "Command-Master",
        "created_at": "2024-10-10T15:45:09Z",
        "body": "I think because you did \"propose PR\" before it proceeded the \"claim\" it didn't link it to the PR. Try to propose the PR again?"
      },
      {
        "user": "carlini",
        "created_at": "2024-10-10T17:40:45Z",
        "body": "propose PR #450"
      },
      {
        "user": "teorth",
        "created_at": "2024-10-11T00:11:02Z",
        "body": "Not sure why it didn't auto-close, but I will manually close it. Thanks for completing the task!"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-11T15:31:08Z",
        "body": "It's an issue with unescaped special characters. I'm going to work on it soon. "
      }
    ]
  },
  {
    "number": 405,
    "title": "move 953 implies 2 as it was not found by lean-egg",
    "created_at": "2024-10-07T13:31:52Z",
    "closed_at": "2024-10-07T13:41:09Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/405",
    "body": "moving it just to keep track of things properly (not to unfairly claim this nice proof for the automated tactic)",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/405/comments",
    "author": "goens",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-07T13:41:14Z",
        "body": "Thanks! "
      }
    ]
  },
  {
    "number": 399,
    "title": "Extract implications: unknowns subcommands --duality flag",
    "created_at": "2024-10-07T09:39:21Z",
    "closed_at": "2024-10-07T17:31:20Z",
    "labels": [
      "awaiting-review"
    ],
    "url": "https://github.com/teorth/equational_theories/pull/399",
    "body": "Also add the current results, and correct the data of yesterday's files\n\nCloses #397",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/399/comments",
    "author": "amirlb",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-07T11:39:35Z",
        "body": "Thanks a lot! \r\n\r\nIs this PR ready to be merged or are you still working on it? \r\n\r\nIf it's ready to be merged, please write `awaiting-review`. "
      },
      {
        "user": "amirlb",
        "created_at": "2024-10-07T12:00:05Z",
        "body": "awaiting-review"
      },
      {
        "user": "amirlb",
        "created_at": "2024-10-07T12:00:30Z",
        "body": "Thanks, I totally forgot about this step"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-07T12:53:57Z",
        "body": "Thank you @amirlb. \r\n\r\nI merged `main`. I will for the CI and then I'll merge. "
      }
    ]
  },
  {
    "number": 396,
    "title": "better description for getting a random open problem",
    "created_at": "2024-10-07T07:10:05Z",
    "closed_at": "2024-10-07T07:39:33Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/396",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/396/comments",
    "author": "madvorak",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-07T07:29:47Z",
        "body": "Was the deletion of `yourself` intended? "
      },
      {
        "user": "madvorak",
        "created_at": "2024-10-07T07:31:12Z",
        "body": "Yes. Should it stay there?"
      },
      {
        "user": "madvorak",
        "created_at": "2024-10-07T07:31:50Z",
        "body": "We might as well say:\r\n\"Why not try proving a random open problem?\""
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-07T07:39:26Z",
        "body": "I think your \"Why not try proving a random unknown implication?\" is good.\r\n\r\nThanks! Merged."
      }
    ]
  },
  {
    "number": 389,
    "title": "Invariant-based counter-example files",
    "created_at": "2024-10-07T01:20:15Z",
    "closed_at": "2024-10-08T08:49:20Z",
    "labels": [
      "do-not-merge"
    ],
    "url": "https://github.com/teorth/equational_theories/pull/389",
    "body": "These are automatically generated counter-example files based on invariants of the syntax (following chapter 8 of the blueprint).\r\n\r\nIt should soon be possible to also generate proofs for these claims automatically.\n",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/389/comments",
    "author": "0art0",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-07T01:42:44Z",
        "body": "These are quite large files, and may significantly increase the total compilation time if they are added to the Lean codebase.  Is it possible to perform transitive reduction on them?  Or extract only those implications that are not already established as a separate file, and only import the latter into the codebase (the former can be in a non-Lean format, such as a JSON).\r\n\r\nAlso, for the purpose of replication and documentation, it would be good if you could supply the code you used to generate these files, as well as a description of exactly what metatheorems you are using here, and how you are applying them to generate the files."
      }
    ]
  },
  {
    "number": 387,
    "title": "Fix_links",
    "created_at": "2024-10-06T23:19:12Z",
    "closed_at": "2024-10-06T23:38:08Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/387",
    "body": "Make links in README.md global for benefit of web page; also fix up some blueprint tags",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/387/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-06T23:28:08Z",
        "body": "If you want to make them global for the webpage, then you need to change the `home_page/index.md` file instead. "
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-06T23:30:41Z",
        "body": "I'm currently keeping the index.md updated copy-pasting the README.md, but I know it's not at all ideal. \n\nI'll write a script to automate the copy-pasting of the relevant text in the README.md to the index.md. "
      }
    ]
  },
  {
    "number": 386,
    "title": "Fix second half of proof of Theorem 3.4 in infinite_models.tex",
    "created_at": "2024-10-06T22:27:28Z",
    "closed_at": "2024-10-06T23:03:42Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/386",
    "body": "This PR is a continuation of #347 which was fixing issues in the blueprint presentation of Theorem 3.4. In this PR, I move on to fixing a logic error in the argument that the presented magma is indeed a model of the law being considered. The logic error lies in the claim that `(1 \\op x) \\op w = x` whenever `w` is a power of two. This claim does not hold for the magma under consideration, since `(1 \\op 1) \\op 2 = 4` rather than `1` as claimed. Fortunately a weaker claim suffices. While working on this, I observed that the choice of magma is not unique and if one wished to optimize for proof elegance, there may be other magmas that admit simpler proofs. However, I did not pursue this because the benefit appears to be less than the cost of introducing clashes with the other places this specific magma is used (such as in the Lean implementation and in the literature).",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/386/comments",
    "author": "avi-levy",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-06T23:03:39Z",
        "body": "Thanks!  (This is a good example of why we formalize our proofs :).)"
      }
    ]
  },
  {
    "number": 381,
    "title": "add --extra flag to extract_implications",
    "created_at": "2024-10-06T19:02:28Z",
    "closed_at": "2024-10-06T19:23:53Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/381",
    "body": "Adds logic to ignore equations outside of the core set of 4694. The filtering is by default enabled in `extract_implications`. The old behavior can still be accessed via a new `--extra` flag.\r\n\r\nThis will make the dashboard display information only about the core set.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/381/comments",
    "author": "dwrensha",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-06T19:23:49Z",
        "body": "One could perhaps add a second page to the dashboard folder to hold the \"extra\" statistics, and have a link from the \"main\" dashboard to the \"extra\" dashboard.  But this is low priority."
      }
    ]
  },
  {
    "number": 379,
    "title": "FRONTEND: Have the dashboard default to listing \"core\" implication statistics between the 4694 equations, but also mention \"expanded\" statistics",
    "created_at": "2024-10-06T17:51:36Z",
    "closed_at": "2024-10-06T21:16:42Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/379",
    "body": "In particular, completion percentages should be tied to the core equations.  Expanded equations can be listed lower down in the dashboard page and generally made not as prominent as the core statistics.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/379/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-06T17:53:00Z",
        "body": "This may require first resolving #142."
      },
      {
        "user": "dwrensha",
        "created_at": "2024-10-06T18:09:11Z",
        "body": "claim\r\n"
      },
      {
        "user": "dwrensha",
        "created_at": "2024-10-06T19:03:39Z",
        "body": "Addressed in #381. Currently the \"expanded\" statistics will not be shown in the dashboard, but adding them in the future would be straightforward if desired."
      },
      {
        "user": "teorth",
        "created_at": "2024-10-06T21:16:42Z",
        "body": "Essentially resolved for now."
      }
    ]
  },
  {
    "number": 374,
    "title": "INFINITE: Prove Theorem 3.11 (laws with at most two variables have nontrivial finite models)",
    "created_at": "2024-10-06T17:09:48Z",
    "closed_at": "2024-10-20T01:45:07Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/374",
    "body": "A result of Austin. Proven by considering linear models `x ◇ y = a * x + b * y`.  Some field theory may be required to formalize the proof properly.\n\n`InfModel.lean` is the most logical place to place this theorem.\n\nWhen done, mark the statement and proof of the theorem in the blueprint with `\\leanok`s, and the statement with a `\\lean{}` tag.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/374/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "jscanvic",
        "created_at": "2024-10-07T23:34:14Z",
        "body": "claim"
      },
      {
        "user": "jscanvic",
        "created_at": "2024-10-08T20:54:05Z",
        "body": "propose #442"
      }
    ]
  },
  {
    "number": 373,
    "title": "Add conjectures produced by Vampire",
    "created_at": "2024-10-06T17:05:13Z",
    "closed_at": "2024-10-06T17:19:32Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/373",
    "body": "These conjectures are created from implications which are proven to be false by saturation, which we don't know how to formalize in Lean yet.\r\nSeeing as `Equation3964_not_implies_Equation3456` from #362 was originally in here, I don't think an off-by-one situation like occurred previously is likely (these are also transitively consistent with all existing results).",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/373/comments",
    "author": "Command-Master",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-06T17:20:22Z",
        "body": "One can also check to see if these conjectures are approximately symmetric with respect to duality as an additional \"unit test\"."
      }
    ]
  },
  {
    "number": 369,
    "title": "FRONTEND: go to a random open problem",
    "created_at": "2024-10-06T15:08:22Z",
    "closed_at": "2024-10-07T04:33:48Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/369",
    "body": "I suggest adding a button that will take the visitor to the Lean web editor pre-filled with a random unknown implication.\r\n\r\nI suggest a \"random\" implication, not the \"first\" implication, as I don't want too many casual contributors to work on the same problem.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/369/comments",
    "author": "madvorak",
    "comments": [
      {
        "user": "carlini",
        "created_at": "2024-10-07T04:06:48Z",
        "body": "claim"
      },
      {
        "user": "carlini",
        "created_at": "2024-10-07T04:26:26Z",
        "body": "propose PR #393"
      }
    ]
  },
  {
    "number": 358,
    "title": "chore: make remaining scripts executable and update documentation",
    "created_at": "2024-10-06T10:09:30Z",
    "closed_at": "2024-10-06T14:40:41Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/358",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/358/comments",
    "author": "euprunin",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-06T11:25:53Z",
        "body": "Thanks. I'll review it later. "
      },
      {
        "user": "euprunin",
        "created_at": "2024-10-06T14:39:55Z",
        "body": "Note that `chmod +x` is performed where necessary (as seen by `100644 → 100755`)."
      }
    ]
  },
  {
    "number": 341,
    "title": "Metatheorem resolving all consequences of Equation1571",
    "created_at": "2024-10-05T23:02:21Z",
    "closed_at": "2024-10-07T07:09:05Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/341",
    "body": "This is some intermediate work as I work towards #221, which involves a special case of commutative semigroups. But it also includes some metatheorems that could be generally useful for working with associativity.\r\n\r\nIncludes:\r\n- a convenience function for fully right-associating any operation tree when the operation is associative\r\n- definition and `Magma` instance of a free semigroup\r\n- proof that evaluation in any semigroup is a homomorphism\r\n- proof that the variable names can be sorted in a free semigroup expression without affecting the evaluated value, so long as the codomain semigroup is commutative\r\n- all of this is combined to write a metatheorem `ProveEquation1571Consequence` that *should be* capable of automatically proving any consequence of `Equation1571`\r\n\r\nAny revisions to shorten my proofs or make the naming/notation more convenient is welcome :-)",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/341/comments",
    "author": "franklindyer",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-07T05:59:22Z",
        "body": "Thanks! I will review it later. "
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-07T06:32:40Z",
        "body": "Thanks @franklindyer! I have just golfed the new proofs in Subgraph.lean. \r\n\r\nLet's wait for the CI and then I'll merge. "
      }
    ]
  },
  {
    "number": 330,
    "title": "All4x4Tables: 2531 does not impy 1075",
    "created_at": "2024-10-05T19:30:29Z",
    "closed_at": "2024-10-05T19:53:28Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/330",
    "body": "I give a 13x13 counterexample showing that neither of the dual pair 1076/2531 imply 1075. The constructed magma ends up resolving over 1% of the remaining unknowns.\r\n\r\nThis dual pair had by far the highest unknown count, and is among those equations that are not implied by anything else (except for x=y).",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/330/comments",
    "author": "zaklogician",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-05T19:47:58Z",
        "body": "Fascinating!  Was the 13x13 example constructed by hand, or created by Z3, or some mix of both?"
      }
    ]
  },
  {
    "number": 325,
    "title": "Make equations link to a 'prove this' link.",
    "created_at": "2024-10-05T18:01:51Z",
    "closed_at": "2024-10-05T18:09:21Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/325",
    "body": "The web UI now has links next to every unknown proof that you can click that will drop you into a lean prover.\r\n\r\nFixes #316",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/325/comments",
    "author": "carlini",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-05T18:04:54Z",
        "body": "Wow that was a lot quicker than I expected!"
      }
    ]
  },
  {
    "number": 305,
    "title": "Display Hasse diagram for the Subgraph",
    "created_at": "2024-10-05T08:04:42Z",
    "closed_at": "2024-10-06T15:30:17Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/305",
    "body": "Also update the script to generate such graphs.\n\nCloses #183",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/305/comments",
    "author": "vlad902",
    "comments": [
      {
        "user": "vlad902",
        "created_at": "2024-10-05T08:07:51Z",
        "body": "I forgot to update the blueprint, will do that now."
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-05T17:24:15Z",
        "body": "Thanks a lot, @vlad902! \r\n\r\n`leanblueprint pdf` returns an error regarding the image we're including.\r\n\r\nPlease consider running the executable script `scripts/run_before_push.sh` to avoid this risk. "
      },
      {
        "user": "vlad902",
        "created_at": "2024-10-06T06:07:06Z",
        "body": "Ah, of course. It builds successfully locally, because I have the PNG, but it fails in CI, because I forgot to git add it."
      }
    ]
  },
  {
    "number": 304,
    "title": "chore: make all Python scripts in `scripts/` executable",
    "created_at": "2024-10-05T07:57:00Z",
    "closed_at": "2024-10-05T14:05:32Z",
    "labels": [
      "do-not-merge"
    ],
    "url": "https://github.com/teorth/equational_theories/pull/304",
    "body": "Fixes this issue:\r\n\r\n```\r\n% scripts/find_equation_id.py\r\nzsh: permission denied: scripts/find_equation_id.py\r\n```",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/304/comments",
    "author": "euprunin",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-05T13:14:23Z",
        "body": "Thanks. I’ll review it later."
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-05T13:45:21Z",
        "body": "@euprunin Are you sure that it's enough to add the shebang line at the top of the script to make it executable? \r\n\r\nI think the file permissions need to be changed too via \r\n\r\n```\r\nchmod +x your_script_name.py\r\n```"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-05T13:47:25Z",
        "body": "Yes, I have just tested it and it's not executable locally for me. "
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-05T14:04:48Z",
        "body": "Ok, now they should be really executable for all contributors pulling the changes. "
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-05T14:05:42Z",
        "body": "Thanks @euprunin, merged."
      }
    ]
  },
  {
    "number": 302,
    "title": "Add documentation about the Vampire proofs",
    "created_at": "2024-10-05T06:32:58Z",
    "closed_at": "2024-10-05T13:42:44Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/302",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/302/comments",
    "author": "Command-Master",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-05T13:42:40Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 301,
    "title": "A simple web UI to view equations and their implications",
    "created_at": "2024-10-05T05:54:32Z",
    "closed_at": "2024-10-05T17:01:34Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/301",
    "body": "This PR adds the web UI for the equations and their implications. The code is pretty awful, 90%+ of it was written by Claude/ChatGPT but it works.\r\n\r\nThe main thing I'm unsure about is the CI component of this. I've never tried to do that before, and while I think it works, I'm not actually sure. So if someone who understands that would be able to take a look at that before merging that'd be great.\r\n\r\nIt also does not link from the home page yet. I'll add that link once we confirm that everything is working properly.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/301/comments",
    "author": "carlini",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-05T15:52:49Z",
        "body": "Assuming there are no CI issues I would say this is pretty ready to merge.  Could you update README.md to change the link to the old explorer tool to the new one (and remove most of the text around that link)?"
      },
      {
        "user": "carlini",
        "created_at": "2024-10-05T16:48:42Z",
        "body": "I was going to play it safe and leave the README as-is just until I can verify that the page works with the CI build, and then submit a second PR linking to it from the project page and from the README. (But if you'd rather just give it a shot all at once I can make the changes now.)"
      },
      {
        "user": "teorth",
        "created_at": "2024-10-05T17:01:57Z",
        "body": "OK, let's try merging it and seeing if it works, then you can send a second PR to link it up to the documentation."
      },
      {
        "user": "carlini",
        "created_at": "2024-10-05T17:21:16Z",
        "body": "Looks like it's all working. Will update the documentation now."
      }
    ]
  },
  {
    "number": 300,
    "title": "chore: remove duplicate script (`test.sh` is a copy of `run_before_push.sh`)",
    "created_at": "2024-10-05T05:44:44Z",
    "closed_at": "2024-10-05T13:07:06Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/300",
    "body": "```sh\r\n% shasum scripts/run_before_push.sh scripts/test.sh\r\n37446c80674bac6359691eea8fb8a536417a2109  scripts/run_before_push.sh\r\n37446c80674bac6359691eea8fb8a536417a2109  scripts/test.sh\r\n% git grep run_before_push.sh\r\nCONTRIBUTING.md:>   source scripts/run_before_push.sh\r\nREADME.md:        - [`run_before_push`](scripts/run_before_push.sh) - performs some of the CI checks, suitable for running just before pushing a new PR\r\n% git grep test.sh\r\n%\r\n```",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/300/comments",
    "author": "euprunin",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-05T13:07:02Z",
        "body": "Thanks! Merged. "
      }
    ]
  },
  {
    "number": 299,
    "title": "bug fix: don't write \"🎉 All steps completed successfully!\" after a failing `run_before_push.sh` command",
    "created_at": "2024-10-05T05:37:44Z",
    "closed_at": "2024-10-05T14:16:54Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/299",
    "body": "Fixes the following issue:\r\n\r\n```\r\n% bash ./scripts/run_before_push.sh\r\n…\r\n❌ Error: […]\r\nPress any key to exit...\r\n./scripts/run_before_push.sh: line 70: return: can only `return' from a function or sourced script\r\n🎉 All steps completed successfully! You are ready to push.\r\n```",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/299/comments",
    "author": "euprunin",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-05T12:57:57Z",
        "body": "`exit 1` isn't good in this case because, given the default VS Code setup many users are adopting, it would close the terminal. "
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-05T12:59:45Z",
        "body": "Thank you very much for raising the issue concerning the final message. I'll fix as soon as I find the time. "
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-05T13:02:12Z",
        "body": "@euprunin can you specify which error actually allowed that to happen? I’m not sure there is any issue here. \r\n\r\nIt should just stop, ask you to press any key and then close. "
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-05T14:17:05Z",
        "body": "Thanks @euprunin, merged."
      }
    ]
  },
  {
    "number": 293,
    "title": "fix(equational_theories/Preorder.lean): partial revert of #273 \"reverse pre-order direction\"",
    "created_at": "2024-10-05T00:10:10Z",
    "closed_at": "2024-10-05T01:26:02Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/293",
    "body": "…rder direction\"",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/293/comments",
    "author": "agjftucker",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-05T01:25:59Z",
        "body": "I think it has stabilized in the right orientation now... but certainly it is a good idea to do these sorts of \"unit tests\"!"
      }
    ]
  },
  {
    "number": 291,
    "title": "Add Z3Counterexamples.lean, with a counterexample found by z3",
    "created_at": "2024-10-04T23:33:52Z",
    "closed_at": "2024-10-05T01:25:00Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/291",
    "body": "Resolves a new edge that is still not covered by #281, plus 5 more by transitivity.\r\n\r\nIncludes in a comment the z3 spec that I ran, which involved bit vectors of length 3.\r\nWhen I tried the same thing with bit vectors of length 2, z3 said it was unsatisfiable.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/291/comments",
    "author": "dwrensha",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-04T23:48:07Z",
        "body": "Is it worth adding this counterexample to an existing lists of finite magmas?  "
      },
      {
        "user": "dwrensha",
        "created_at": "2024-10-05T00:15:01Z",
        "body": "The list I am aware of is in SmallMagmas.lean, and this magma did not seem appropriate for there (\"This file defines some trivially small magmas...\").\r\n\r\nYour comment did prompt me to learn about `calculate_facts`, which does indeed find some more edges where this magma helps, but in a highly verbose form that needs reduction. Since I don't have time to reduce the output of `calculate_facts` right now, I just added a TODO here about trying `calculate_facts` on this magma."
      }
    ]
  },
  {
    "number": 286,
    "title": "DATA: Set up a daily recording of current implication graph statistics (and other relevant data files) and output them to the data folder for future time series",
    "created_at": "2024-10-04T16:52:22Z",
    "closed_at": "2024-10-05T19:56:30Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/286",
    "body": "The `/data` folder is currently underutilized right now.  One obvious use for it is to create daily recordings of at least the headline data (explicit implications, etc.) but also perhaps some regular output of the raw data files of the graph (in compressed form if necessary).",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/286/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-05T19:56:30Z",
        "body": "duplicate of #171"
      },
      {
        "user": "euprunin",
        "created_at": "2024-10-06T15:09:47Z",
        "body": "To ensure the time series is fully reproducible, the headline data could be stored on a per-commit basis. This approach would allow one to \"replay\" the Git history and recreate the point-in-time measurements for each commit.\r\n\r\nAdditionally, commits could be mapped to specific pull request (PR) merges, which are timestamped in sequential order, enabling the creation of a time series.\r\n\r\nBy implementing this method, we avoid the issue of relying on external or aggregated data snapshots, which may not reflect the true state at each commit. This also ensures that historical analysis can be consistently reproduced, preserving data integrity across the project's lifetime."
      },
      {
        "user": "teorth",
        "created_at": "2024-10-06T15:43:20Z",
        "body": "Since I closed this issue as a duplicate of #171, maybe you could copy your (useful!) comment over there?"
      }
    ]
  },
  {
    "number": 285,
    "title": "Metatheorem about duals",
    "created_at": "2024-10-04T16:42:17Z",
    "closed_at": "2024-10-05T23:39:05Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/285",
    "body": "Adds some \"metatheorems\" about op and symm, in particular `implies_op` which is the \"duality\" theorem that lets us collect additional \"implied\" implications.\r\n\r\nWill add these implied implications also to the count in a separate PR (as that depends on #147)",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/285/comments",
    "author": "goens",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-05T14:28:12Z",
        "body": "I'll merge this once the `MagmaLaw.lean` conflicts are resolved."
      },
      {
        "user": "goens",
        "created_at": "2024-10-05T18:17:16Z",
        "body": "should be resolved now @teorth "
      }
    ]
  },
  {
    "number": 281,
    "title": "Proofs generated using the Vampire theorem prover",
    "created_at": "2024-10-04T15:23:46Z",
    "closed_at": "2024-10-04T23:57:55Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/281",
    "body": "Reduces the number of unknown implications for 1.1M to 29688. Also add a term elaborator for superposition calculus, which is used for the proofs.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/281/comments",
    "author": "Command-Master",
    "comments": [
      {
        "user": "vlad902",
        "created_at": "2024-10-04T15:42:39Z",
        "body": "Cool! Based on looking at a couple of files, I think this set of proofs maybe reducible? Also one nit: add a .gitattributes as per CONTRIBUTING.md"
      },
      {
        "user": "Command-Master",
        "created_at": "2024-10-04T15:44:54Z",
        "body": "> Cool! Based on looking at a couple of files, I think this set of proofs maybe reducible? Also one nit: add a .gitattributes as per CONTRIBUTING.md\r\n\r\nI used `transitive_reduction.rb` before executing it, so it shouldn't be. I'll update `.gitattributes` :+1: "
      },
      {
        "user": "vlad902",
        "created_at": "2024-10-04T15:56:57Z",
        "body": "I actually pulled your change down to check if any of my local implications that I haven't submitted yet are still necessary, and I found that is reducible. Apologies if I've made a dumb mistake. \r\n\r\n```\r\n# On main *without* your change\r\nlake build\r\nlake exe extract_implications --json equational_theories.Generated equational_theories.Subgraph > main_implications.json\r\ncat main_implications.json | ruby -rjson -e 'JSON.parse($stdin.read)[\"implications\"].each { |s| puts s[\"lhs\"][8,10] + \",\" + s[\"rhs\"][8,10] }' | sort -u > main_implications.csv\r\n\r\ncat Generated/VampireProven/*.lean | ruby -ne 'puts \"#{$1},#{$2}\" if $_ =~ /Equation(\\d+)_implies_Equation(\\d+)/' | sort -u > new_theorems.csv\r\ncat main_implications.csv new_theorems.csv | sort -u > new_state.csv\r\nruby scripts/transitive_reduction.rb new_state.csv | sort -u > new_state.reduced.csv\r\ncomm -13 main_implications.csv new_state.reduced.csv > new_theorems_to_include.csv\r\nwc -l new_theorems_to_include.csv new_theorems.csv\r\n```\r\n\r\nshows 1775 vs 5768"
      },
      {
        "user": "Command-Master",
        "created_at": "2024-10-04T16:00:03Z",
        "body": "Ah, I only did the reduction using the theorems this proves, not using other existing theorems :facepalm: . I'll rerun it doing the reduction properly"
      },
      {
        "user": "teorth",
        "created_at": "2024-10-04T18:51:39Z",
        "body": "Is this ready to merge?  If all the proofs compile in Lean then we are pretty safe, the question is whether there is any further savings in compile time to be made by further reduction.\r\n\r\nIn particular, does this contribution keep the compile time of all the generated Lean files to reasonable levels (i.e., minutes rather than hours)?"
      },
      {
        "user": "teorth",
        "created_at": "2024-10-04T23:57:51Z",
        "body": "I guess if there are size issues we can always refactor later, so I'll push the button now.  Looking forward to seeing the new state of the graph!"
      },
      {
        "user": "teorth",
        "created_at": "2024-10-05T04:06:44Z",
        "body": "I just realized that there is no README.md announcement of the Vampire results that advanced the completion percentage so substantially.  Could you make an addition to that file accordingly?  It would also be good to describe the methodology of the Vampire run in the blueprint."
      },
      {
        "user": "Command-Master",
        "created_at": "2024-10-05T06:33:30Z",
        "body": "> I just realized that there is no README.md announcement of the Vampire results that advanced the completion percentage so substantially. Could you make an addition to that file accordingly? It would also be good to describe the methodology of the Vampire run in the blueprint.\r\n\r\nI made #302 "
      }
    ]
  },
  {
    "number": 280,
    "title": "extract_implications: sort equations in outcomes output",
    "created_at": "2024-10-04T15:20:13Z",
    "closed_at": "2024-10-04T18:49:06Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/280",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/280/comments",
    "author": "amirlb",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-04T18:49:09Z",
        "body": "I guess sorting can't hurt, although it seems that for some applications it is not necessary."
      },
      {
        "user": "dwrensha",
        "created_at": "2024-10-04T18:51:37Z",
        "body": ":+1: I like this change. It cleans up a few things, and it makes the output of `extract_implications outcomes` a bit easier to use."
      }
    ]
  },
  {
    "number": 276,
    "title": "Finite counterexamples generated by the Vampire theorem prover",
    "created_at": "2024-10-04T12:21:20Z",
    "closed_at": "2024-10-05T14:19:58Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/276",
    "body": "Solves ~8,000 unknown implications",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/276/comments",
    "author": "Command-Master",
    "comments": [
      {
        "user": "zaklogician",
        "created_at": "2024-10-04T12:27:06Z",
        "body": "Very nice!\r\n\r\nNote: we had an accidental regression in `All4x4Tables` after #271 (my review wasn't careful enough, so a different, older set of refutations ended up being pushed). So if you ran this in the last 3 hours, some of the anti-implications might already have counterexamples in `All4x4Tables` which will be restored by #275."
      },
      {
        "user": "Command-Master",
        "created_at": "2024-10-04T12:33:00Z",
        "body": "> Very nice!\r\n> \r\n> Note: we had an accidental regression in `All4x4Tables` after #271 (my review wasn't careful enough, so a different, older set of refutations ended up being pushed). So if you ran this in the last 3 hours, some of the anti-implications might already have counterexamples in `All4x4Tables` which will be restored by #275.\r\n\r\nI ran it before that, so it should be fine"
      },
      {
        "user": "zaklogician",
        "created_at": "2024-10-04T12:35:08Z",
        "body": "Btw: having taken a look, it looks like Vampire managed to generate a large number of *different* tables. Is each example constructed independently, or are there some checks to see whether the resulting tables refute any implications apart from the one in the problem statement?\r\n\r\nIf the former, you can create an issue about this after this is merged: I'll eventually get around to recovering the generated tables and putting them into `All4x4Tables` so that we'll know the full set of implications they refute. "
      },
      {
        "user": "Command-Master",
        "created_at": "2024-10-04T13:10:26Z",
        "body": "They are created independently"
      },
      {
        "user": "Command-Master",
        "created_at": "2024-10-04T13:11:02Z",
        "body": "Any idea what might be causing the `(kernel) deterministic timeout`? It didn't happen on my computer"
      },
      {
        "user": "zaklogician",
        "created_at": "2024-10-04T13:37:51Z",
        "body": "I'm not sure how the CI works here, but I'll try to build on mine and report back.\r\n(Report: Alas, inconclusive, since lean got killed by the oom killer during the build.)"
      },
      {
        "user": "nomeata",
        "created_at": "2024-10-04T13:54:34Z",
        "body": "> Any idea what might be causing the `(kernel) deterministic timeout`? It didn't happen on my computer\r\n\r\nProving that a `Fin 10` magma satisfies some equation with a few variables may be too slow to do for the `decideFin!` tactic.\r\n\r\nMaybe try `by native_decide` instead for large magmas and small number of facts (only 2 here).\r\n\r\nThis may need some more engineering to make tractable."
      },
      {
        "user": "Command-Master",
        "created_at": "2024-10-04T13:57:11Z",
        "body": "I've noticed that MemoFinOp is using a base which isn't a power of 2, I could try to change that (and make it use bitshifts and bitwise and) and see if that helps"
      },
      {
        "user": "nomeata",
        "created_at": "2024-10-04T14:00:29Z",
        "body": "I have strong doubts that this is the problem. It's still two operations, so the same deterministic timeout would apply. In fact, with `t << k && (2^n-1)` you still need to do one more step to clamp the result to `Fin n` (or first prove that all these values are in range), whereas `t / n^k % n` that’s guaranteed.\r\n\r\nI think it’s just the sheer number of operations. But happy to be proven wrong :-)\r\n\r\nProfiling first might help maybe.\r\n\r\n"
      },
      {
        "user": "zaklogician",
        "created_at": "2024-10-05T12:01:16Z",
        "body": "Glad the minimization worked, and that this generates so many 5x5s now!"
      },
      {
        "user": "zaklogician",
        "created_at": "2024-10-05T14:20:06Z",
        "body": "I can confirm that the minimization has resolved the OOM issues I experienced earlier, and I am now able to build tihs on my laptop."
      }
    ]
  },
  {
    "number": 272,
    "title": "Inlcude MagmaEgg implications in build (and fix-up application symbol)",
    "created_at": "2024-10-04T09:04:45Z",
    "closed_at": "2024-10-04T14:58:18Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/272",
    "body": "The previous PR adding these implications (#216) did not include the implications in Generated.lean so they haven't gotten picked up by the main build and all the subsequent tooling (dashboards, etc.)\r\n\r\nAdd it to Generated.lean, and fix-up the changed application symbol.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/272/comments",
    "author": "vlad902",
    "comments": [
      {
        "user": "lyphyser",
        "created_at": "2024-10-04T10:40:36Z",
        "body": "Oops, sorry, I think I lost that change when rebasing."
      }
    ]
  },
  {
    "number": 270,
    "title": "A new tool to find \"powerful\" theorems",
    "created_at": "2024-10-04T05:13:29Z",
    "closed_at": "2024-10-04T15:08:04Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/270",
    "body": "This is a tool that will find \"powerful\" theorems. (Theorems that, if proven, would give many free edges on the graph by implications).\r\n\r\nIt is slow the first time it runs, because it has to invoke lean to find all the implications that are proven or conjectured. You can cache the result of this computation, and after that, it takes ~2 seconds to find the next best edge to add. Alternatively, you can also ask it for the top k implications and that takes basically an identical amount of time. You can also ask for only one equation per equivalence class.\r\n\r\nRight now it basically just tells you to prove anything that would imply Equation 2 because that gives you 1000+ edges for free. But in the future it may give more useful outputs when there's not so much low hanging fruit.\r\n\r\nIt works by finding the sizes of all equivalence classes, and then trying, in order, the classes from largest to smallest until it finds one with a missing edge between the two sets. This is fairly fast right now. It may become slow if we prune all the easy stuff, if so I can speed it up later.\r\n\r\n```\r\nusage: find_powerful_theorems.py [-h] [--topk TOPK] [--one-per-equiv] [--load-cache LOAD_CACHE] [--save-cache SAVE_CACHE]\r\n\r\nFind the most useful implications in a matrix.\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  --topk TOPK           Return the k best theorems to prove\r\n  --one-per-equiv       Return only one per equivalence class\r\n  --load-cache LOAD_CACHE\r\n                        Load output from the cache file\r\n  --save-cache SAVE_CACHE\r\n                        Save the output to a cache file\r\n```",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/270/comments",
    "author": "carlini",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-04T05:31:26Z",
        "body": "Nice! Can you also add it to the list of scripts in README.md?"
      }
    ]
  },
  {
    "number": 244,
    "title": "Show implication which is only falsified on infinite model",
    "created_at": "2024-10-03T18:56:48Z",
    "closed_at": "2024-10-03T19:46:47Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/244",
    "body": "The implication `Equation3994 -> Equation3588` (`x ∘ y = (z ∘ (x ∘ y)) ∘ z -> x ∘ y = z ∘ ((x ∘ y) ∘ z)`) is only falsified on an infinite model. It's interesting to compare this to `Equation29 -> Equation14` (`x = (y ∘ x) ∘ y -> x = y ∘ (x ∘ y)`) which is true on all magmas and appeared as a Putnam problem.\r\n\r\nThis was found while working on #230, as there are many implications which Vampire disproved but couldn't produce a finite model for. I suspect that almost all of them are like this, and are only falsified on an infinite model.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/244/comments",
    "author": "Command-Master",
    "comments": [
      {
        "user": "Command-Master",
        "created_at": "2024-10-03T19:01:37Z",
        "body": "I guess I should also add these proofs to the blueprint"
      },
      {
        "user": "teorth",
        "created_at": "2024-10-03T19:02:13Z",
        "body": "Very nice!  Would you be able to add a human readable proof to the blueprint (I guess currently at the bottom of Section 2 is the location for the infinite model stuff, though there are enough results here that it makes sense to spin it off into a separate chapter), and add \\lean and \\leanok's to link the blueprint proof to the Lean proof?"
      }
    ]
  },
  {
    "number": 239,
    "title": "feat: add magma explorer CLI tool (`explore_magma`)",
    "created_at": "2024-10-03T17:15:59Z",
    "closed_at": "2024-10-03T20:31:54Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/239",
    "body": "> [!NOTE]\r\n> `% scripts/explore_magma.py --help`\r\n```\r\nusage: explore_magma.py [-h] [--ids IDS] [--print-only] [--verbose] magma_table\r\n\r\nTest a given magma table against all or a subset of the predefined equations in\r\n`AllEquations.lean`.\r\n\r\npositional arguments:\r\n  magma_table   A JSON-like 2D list representing a magma operation table. Each\r\n                entry represents the result of a binary operation ∘ between two\r\n                elements. Example format: \"[[2, 2, 0, 3], [2, 2, 1, 0], [2, 2, 0,\r\n                3], [2, 3, 1, 0]]\"\r\n\r\noptions:\r\n  -h, --help    show this help message and exit\r\n  --ids IDS     Optional. A comma-separated list of equation IDs to test the\r\n                magma table against. If omitted, all equations in\r\n                `AllEquations.lean` will be tested by default.\r\n  --print-only  Only print the number of equations passed and tested, without\r\n                displaying detailed results.\r\n  --verbose     Enable detailed output. This includes specific counterexamples\r\n                for any failures when checking against specific equation ids\r\n                (specified using --ids).\r\n```\r\n\r\n---\r\n\r\n> [!NOTE]\r\n> `% scripts/explore_magma.py \"[[2, 2, 0, 3], [2, 2, 1, 0], [2, 2, 0, 3], [2, 3, 1, 0]]\" --ids 1,10,100,411 --verbose`\r\n```\r\nMagma table: [[2, 2, 0, 3], [2, 2, 1, 0], [2, 2, 0, 3], [2, 3, 1, 0]]\r\n\r\n|       | **0** | **1** | **2** | **3** |\r\n|-------|-------|-------|-------|-------|\r\n| **0** |   2   |   2   |   0   |   3   |\r\n| **1** |   2   |   2   |   1   |   0   |\r\n| **2** |   2   |   2   |   0   |   3   |\r\n| **3** |   2   |   3   |   1   |   0   |\r\n\r\n0 ∘ 0 = 2     0 ∘ 1 = 2     0 ∘ 2 = 0     0 ∘ 3 = 3\r\n1 ∘ 0 = 2     1 ∘ 1 = 2     1 ∘ 2 = 1     1 ∘ 3 = 0\r\n2 ∘ 0 = 2     2 ∘ 1 = 2     2 ∘ 2 = 0     2 ∘ 3 = 3\r\n3 ∘ 0 = 2     3 ∘ 1 = 3     3 ∘ 2 = 1     3 ∘ 3 = 0\r\n\r\n    1. x = x ✅\r\n       1 = 1 # example with x=1\r\n\r\n   10. x = x ∘ (y ∘ x) ❌\r\n       1 ≠ 1 ∘ (3 ∘ 1) # example with x=1, y=3\r\n       1 ≠ 1 ∘ 3\r\n       1 ≠ 0\r\n\r\n  100. x = x ∘ ((x ∘ x) ∘ y) ❌\r\n       0 ≠ 0 ∘ ((0 ∘ 0) ∘ 2) # example with x=0, y=2\r\n       0 ≠ 0 ∘ (2 ∘ 2)\r\n       0 ≠ 0 ∘ 0\r\n       0 ≠ 2\r\n\r\n  411. x = x ∘ (x ∘ (x ∘ (x ∘ x))) ✅\r\n       1 = 1 ∘ (1 ∘ (1 ∘ (1 ∘ 1))) # example with x=1\r\n       1 = 1 ∘ (1 ∘ (1 ∘ 2))\r\n       1 = 1 ∘ (1 ∘ 1)\r\n       1 = 1 ∘ 2\r\n       1 = 1\r\n\r\nMagma tested against 4 equations:\r\n* 2 passed (50.0%)\r\n* 2 failed (50.0%)\r\n```\r\n\r\n> [!NOTE]\r\n> `% scripts/explore_magma.py \"[[2, 2, 0, 3], [2, 2, 1, 0], [2, 2, 0, 3], [2, 3, 1, 0]]\"`\r\n```\r\nMagma table: [[2, 2, 0, 3], [2, 2, 1, 0], [2, 2, 0, 3], [2, 3, 1, 0]]\r\n\r\n|       | **0** | **1** | **2** | **3** |\r\n|-------|-------|-------|-------|-------|\r\n| **0** |   2   |   2   |   0   |   3   |\r\n| **1** |   2   |   2   |   1   |   0   |\r\n| **2** |   2   |   2   |   0   |   3   |\r\n| **3** |   2   |   3   |   1   |   0   |\r\n\r\n0 ∘ 0 = 2     0 ∘ 1 = 2     0 ∘ 2 = 0     0 ∘ 3 = 3\r\n1 ∘ 0 = 2     1 ∘ 1 = 2     1 ∘ 2 = 1     1 ∘ 3 = 0\r\n2 ∘ 0 = 2     2 ∘ 1 = 2     2 ∘ 2 = 0     2 ∘ 3 = 3\r\n3 ∘ 0 = 2     3 ∘ 1 = 3     3 ∘ 2 = 1     3 ∘ 3 = 0\r\n\r\n    1. x = x ✅\r\n  411. x = x ∘ (x ∘ (x ∘ (x ∘ x))) ✅\r\n  416. x = x ∘ (x ∘ (y ∘ (x ∘ x))) ✅\r\n 4065. x ∘ x = ((x ∘ x) ∘ x) ∘ x ✅\r\n 4090. x ∘ x = ((y ∘ y) ∘ x) ∘ x ✅\r\n 4131. x ∘ y = ((x ∘ y) ∘ y) ∘ y ✅\r\n 4590. (x ∘ x) ∘ x = (y ∘ y) ∘ x ✅\r\n 4622. (x ∘ x) ∘ y = (z ∘ z) ∘ y ✅\r\n\r\nMagma tested against 4694 equations:\r\n* 8 passed (0.2%)\r\n* 4686 failed (99.8%)\r\n```\r\n\r\n---\r\n\r\n> [!NOTE]\r\n> `% scripts/explore_magma.py \"[[2, 2, 0, 3], [2, 2, 1, 0], [2, 2, 0, 3], [2, 3, 1, 0]]\" --print-only`\r\n```\r\n8/4694\r\n```",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/239/comments",
    "author": "euprunin",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-03T19:15:44Z",
        "body": "Nice! Can you update the list of scripts in the project `README.md` file to include a link and description to this tool?"
      },
      {
        "user": "euprunin",
        "created_at": "2024-10-03T19:28:12Z",
        "body": "@teorth Done!"
      }
    ]
  },
  {
    "number": 235,
    "title": "Add progress badge to readme",
    "created_at": "2024-10-03T15:53:19Z",
    "closed_at": "2024-10-03T18:19:29Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/235",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/235/comments",
    "author": "amirlb",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-03T18:19:26Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 219,
    "title": "Revert #206",
    "created_at": "2024-10-03T01:14:16Z",
    "closed_at": "2024-10-03T01:25:04Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/219",
    "body": "Revert #206, as a bug caused it to generate false conjectures",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/219/comments",
    "author": "Command-Master",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-03T01:17:02Z",
        "body": "You need to remove Vampire.tex from content.tex I think"
      }
    ]
  },
  {
    "number": 212,
    "title": "graphviz tool: always perform a closure->reduction",
    "created_at": "2024-10-02T22:23:02Z",
    "closed_at": "2024-10-02T23:12:25Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/212",
    "body": "Generating some graphs, I realized the graphs look far better if they are run with the output of not just a transitive reduction, but a reduction of a closure so that all paths are shortest. It does slow the tool down, but it's still workable.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/212/comments",
    "author": "vlad902",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-02T23:12:25Z",
        "body": "Thanks! "
      }
    ]
  },
  {
    "number": 211,
    "title": "Add explicit implications to Equation 1",
    "created_at": "2024-10-02T22:13:07Z",
    "closed_at": "2024-10-02T23:14:37Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/211",
    "body": "Subgraph.lean has a theorem that proves Equation 1 is unconditionally true; however, many tools don't pick that up. Instead of special casing it everywhere, add explicit implications theorems.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/211/comments",
    "author": "vlad902",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-02T23:14:30Z",
        "body": "I think this is fine to have for now.  Once our visualization and implication extraction software stabilizes, we may have a more elegant approach than this, but this is a quick fix that doesn't really create that much bloat in the grand scheme of things."
      }
    ]
  },
  {
    "number": 210,
    "title": "Add description of some progress using lean-egg",
    "created_at": "2024-10-02T21:30:13Z",
    "closed_at": "2024-10-02T23:39:56Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/210",
    "body": "As requested by @teorth in #200 \r\n\r\nPlease let me know if this is not quite what you had in mind",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/210/comments",
    "author": "goens",
    "comments": [
      {
        "user": "goens",
        "created_at": "2024-10-02T21:32:36Z",
        "body": "This depends on #207 (at least for the `\\leanok` in the blueprint)"
      },
      {
        "user": "teorth",
        "created_at": "2024-10-02T22:03:29Z",
        "body": "This looks great (other than the blueprint not compiling)!  One can capitalize the section headings, but other than that I can merge this once it compiles."
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-02T23:11:38Z",
        "body": "Ok, now the CIs will pass. Checked locally. "
      }
    ]
  },
  {
    "number": 209,
    "title": "FRONTEND: A web tool that, when input an equation number, lists all equations known or conjectured to imply it, and all equations that it is known or conjectured to imply.",
    "created_at": "2024-10-02T19:59:08Z",
    "closed_at": "2024-10-05T17:56:44Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/209",
    "body": "The tool can also describe the equation, as well as all the equations in the lists.\n\nAs an optional expansion, list the implications involving this equation that are still open.\n\n",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/209/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "carlini",
        "created_at": "2024-10-03T03:30:03Z",
        "body": "claim"
      },
      {
        "user": "Command-Master",
        "created_at": "2024-10-03T04:49:54Z",
        "body": "Perhaps equations which both imply it and it implies should be listed separately, as equations which are equivalent to it?"
      },
      {
        "user": "teorth",
        "created_at": "2024-10-03T14:12:36Z",
        "body": "Probably only one representative of each equivalence class should be listed for the strict implications (equation2 in particular has a huge number of equivalents).  Similar to the graphviz graphs we currently have where we have both boxes for single equations and circles for multiple equivalent equations.  If these links are clickable one could explore the graph and find out the full equivalence class."
      },
      {
        "user": "carlini",
        "created_at": "2024-10-05T15:24:22Z",
        "body": "propose PR #301"
      }
    ]
  },
  {
    "number": 206,
    "title": "Use Vampire to resolve almost all unknown implications (without proof)",
    "created_at": "2024-10-02T19:03:23Z",
    "closed_at": "2024-10-02T19:44:13Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/206",
    "body": "Use the Vampire ATP to prove/disprove many implications, transitively resolving almost all implications.\r\nMore work is needed to produce Lean proofs for the results, which are currently marked `conjecture`. After this, the statistics are:\r\nexplicit_proof_true: 23109\r\nimplicit_proof_true: 5295922\r\nexplicit_conjecture_true: 38949\r\nimplicit_conjecture_true: 1223057\r\nunknown: 7999\r\nimplicit_conjecture_false: 1540725\r\nexplicit_conjecture_false: 79635\r\nimplicit_proof_false: 12994633\r\nexplicit_proof_false: 829607",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/206/comments",
    "author": "Command-Master",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-02T19:44:07Z",
        "body": "Wow, 7999 remaining is far better than I expected! (And is this excluding equivalences?)  I'll merge for now due to the outstanding interest, but do consider adding a chapter to the blueprint describing the methodology and results."
      }
    ]
  },
  {
    "number": 196,
    "title": "Prune more counter examples, by fixing transitive closure calculation",
    "created_at": "2024-10-02T10:32:42Z",
    "closed_at": "2024-10-02T11:13:54Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/196",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/196/comments",
    "author": "nomeata",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-02T11:14:04Z",
        "body": "Thanks! Merged."
      }
    ]
  },
  {
    "number": 187,
    "title": "Add all 2x2 and 3x3 magmas via brute force",
    "created_at": "2024-10-02T05:57:06Z",
    "closed_at": "2024-10-03T23:50:45Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/187",
    "body": "This PR adds all all 3x3 and 2x2 magmas.\r\n\r\nI did not deduplicate between magma sizes, for the following reason. Here are the number of equations that are covered if we assume we already have table NxN and then later introduce MxM.\r\n\r\nWhen going from ../data/refutations2x2.txt to ../data/refutations3x3.txt\r\nThe number of solved equtions goes from 12567055 to 13602457 for a delta of 1035402\r\nAnd ../data/refutations3x3.txt has 9 / 299 already covered magmas\r\n\r\nWhen going from ../data/refutations2x2.txt to ../data/refutations4x4.txt\r\nThe number of solved equtions goes from 12567055 to 13732566 for a delta of 1165511\r\nAnd ../data/refutations4x4.txt has 7 / 515 already covered magmas\r\n\r\nWhen going from ../data/refutations3x3.txt to ../data/refutations2x2.txt\r\nThe number of solved equtions goes from 13345053 to 13602457 for a delta of 257404\r\nAnd ../data/refutations2x2.txt has 8 / 10 already covered magmas\r\n\r\nWhen going from ../data/refutations3x3.txt to ../data/refutations4x4.txt\r\nThe number of solved equtions goes from 13345053 to 13760346 for a delta of 415293\r\nAnd ../data/refutations4x4.txt has 100 / 515 already covered magmas\r\n\r\nWhen going from ../data/refutations4x4.txt to ../data/refutations2x2.txt\r\nThe number of solved equtions goes from 13732566 to 13732566 for a delta of 0\r\nAnd ../data/refutations2x2.txt has 10 / 10 already covered magmas\r\n\r\nWhen going from ../data/refutations4x4.txt to ../data/refutations3x3.txt\r\nThe number of solved equtions goes from 13732566 to 13760346 for a delta of 27780\r\nAnd ../data/refutations3x3.txt has 291 / 299 already covered magmas\r\n\r\nWhat this means is that if we included the 2x2 and 3x3 magmas first, we would remove at most 109 (= 100 + 9) of the 515 magmas from the 4x4 table. But if we instead included the 4x4 magmas first, we could cut out *all* of the 2x2 cases, and *291/299* of the 3x3 cases.\r\n\r\nInterestingly, but perhaps not surprisingly, there are 28k cases covered by the 3x3 magmas that are not covered by the 4x4. And going from 3x3 to 4x4 covers an additional 4 million. This gives me hope we could find a lot more by going from 4x4 to 5x5, if we found a way to efficiently enumerate the space. But that's a problem for another day.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/187/comments",
    "author": "carlini",
    "comments": [
      {
        "user": "carlini",
        "created_at": "2024-10-02T07:03:14Z",
        "body": "In writing this PR I've identified what might be a bug in the brute force algorithm that appears to make it skip over some refutations incorrectly. While I investigate please do not merge."
      },
      {
        "user": "nomeata",
        "created_at": "2024-10-02T07:14:10Z",
        "body": "I'd still include it, if only to prevent people from thinking “maybe I should try this 3×3 magma”. And 2×2 magmas are very few (6 up to isomorphisms and duals, right), so even if we include them for no additional results, it’s nice to have them for completeness.\r\n\r\nOr leave out the 2×2 ones, I have them in `SmallMagmas.lean` anyways."
      },
      {
        "user": "carlini",
        "created_at": "2024-10-02T17:59:31Z",
        "body": "Okay false alarm on any problems. The data was right, my counting was wrong.\r\n\r\nTo double check, I've re-written a Python version to enumerate all 3x3 tables and confirmed that I get the exact same number of refutations there. This script is much easier to reason about and I'm confident this is correct now."
      },
      {
        "user": "teorth",
        "created_at": "2024-10-03T19:21:05Z",
        "body": "Is this PR still active, or has it been made redundant with the later developments?  If the edit conflicts can be resolved and this PR is not redundant then I'm happy to merge it."
      },
      {
        "user": "carlini",
        "created_at": "2024-10-03T20:38:58Z",
        "body": "I just checked, and adding the 3x3 counterexamples doesn't contribute any new ones after some of the more recent refutations that have been added. \r\n\r\nBut this PR only updates the code, doesn't add the Lean theorems. It should still be merged because the code here is cleaned up and I will be using it soon in another PR for hopefully larger counterexample searches."
      }
    ]
  },
  {
    "number": 186,
    "title": "TYPE: Show that semantic entailment for Type * is equivalent to semantic entailment for Type",
    "created_at": "2024-10-02T05:35:42Z",
    "closed_at": "2024-10-19T14:27:42Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/186",
    "body": "This is a technical request, inspired by a comment at #36.  It could be useful to have some way within Lean to show that the assertions\r\n\r\n``theorem (G: Type *) [Magma G] (h: EquationX G): EquationY G`\r\n\r\nand\r\n\r\ntheorem (G: Type) [Magma G] (h: EquationX G): EquationY G`\r\n\r\nare equivalent to each other (or to `LawX` implying `LawY`).  Similarly for the counterexamples to such implications.  This type reduction should be achievable through the completeness theorem.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/186/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "codyroux",
        "created_at": "2024-10-04T02:45:16Z",
        "body": "claim"
      },
      {
        "user": "codyroux",
        "created_at": "2024-10-05T18:45:14Z",
        "body": "I am sadly defeated by the universe handling in Lean."
      },
      {
        "user": "codyroux",
        "created_at": "2024-10-05T18:45:20Z",
        "body": "disclaim"
      },
      {
        "user": "teorth",
        "created_at": "2024-10-19T14:27:42Z",
        "body": "Completed in #458"
      }
    ]
  },
  {
    "number": 179,
    "title": "Invariant based metatheorem blueprint",
    "created_at": "2024-10-01T22:22:29Z",
    "closed_at": "2024-10-02T18:01:57Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/179",
    "body": "This chapter provides an overview of metatheorems for disproving certain kinds of implications based on invariants of the syntax. ",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/179/comments",
    "author": "0art0",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-01T23:42:51Z",
        "body": "Can you expand the list example more precisely - what is the space of lists, what is the magma operation, and what are the lifting maps?"
      },
      {
        "user": "HernanIbarraMejia",
        "created_at": "2024-10-02T00:18:59Z",
        "body": "> Can you expand the list example more precisely - what is the space of lists, what is the magma operation, and what are the lifting maps?\r\n\r\nI think Anand has gone to sleep (I should too) but here is what he probably means: \r\n\r\nFor α a type, let G_α be the set (class?) of all (ordered) lists whose elements have type α. The operation is concatenation. Let ι_α : α → G_α be defined by sending x of type α to the singleton list [x]. Then if f : α → G_α is any function then what the lift of f (which is a function sending lists to lists) does is replace every element of the input list with its image under f and then 'flattens' the output, so we do not end up with a list of lists. "
      },
      {
        "user": "teorth",
        "created_at": "2024-10-02T18:01:51Z",
        "body": "I'll merge it for now to add it to the blueprint, but I think some expansion of that particular example can still be added later."
      }
    ]
  },
  {
    "number": 177,
    "title": "Free associative commutative magma model",
    "created_at": "2024-10-01T21:10:29Z",
    "closed_at": "2024-10-02T03:23:33Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/177",
    "body": "We build the model of free associative commutative magmas over a set `A`, which happens to just be `Multiset A`. This should allow us to prove lemma 3.8.\n\nCloses #131",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/177/comments",
    "author": "codyroux",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-02T00:04:27Z",
        "body": "Nice!  Can you update the blueprint with the \\leanok and the slightly modified proof?  (I agree that using the free associative commutative magma is more natural than using the reals.)"
      },
      {
        "user": "codyroux",
        "created_at": "2024-10-02T01:04:08Z",
        "body": "Serendipidity! I just did, didn't rebase though, will fix in the morning if there are issues."
      },
      {
        "user": "codyroux",
        "created_at": "2024-10-02T01:04:59Z",
        "body": "And again for the record, @fpvandoorn devised and proved the crucial lemma."
      }
    ]
  },
  {
    "number": 175,
    "title": "METATHEOREM: Run Theorem 3.8 against the list of unresolved implications",
    "created_at": "2024-10-01T15:03:26Z",
    "closed_at": "2024-10-01T23:05:46Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/175",
    "body": "Run Theorem 3.8 against the latest file available in #173 to see if any additional anti-implications can be generated.  If so, store them as a list of `conjecture`s (if #131 is not yet completed) or `theorem`s (if #131 is completed) to add to the repository.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/175/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "Shiney",
        "created_at": "2024-10-01T20:52:45Z",
        "body": "I may have missed something about the current efforts to use magma search to find anti implcations so possibly still worth dojng this, but wouldn't any of these also (already?) get found if we just use the cyclic group of Z/6 as the magma (because each side of the equation can have at most 5 variables in, so if you equation with unbalanced numbers of variables wlog \"y\" then if you set all the variables except y to 0 and y to 1 then you'll get the counter example)"
      },
      {
        "user": "teorth",
        "created_at": "2024-10-01T23:05:46Z",
        "body": "This is a good point, and we should instead start collecting interesting medium sized magmas to run.  So I am closing this issue and opening #180 instead."
      }
    ]
  },
  {
    "number": 172,
    "title": "Lean proofs for 4×4 magma brute force",
    "created_at": "2024-10-01T14:35:04Z",
    "closed_at": "2024-10-02T07:54:33Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/172",
    "body": "this makes the results from #150 available to lean.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/172/comments",
    "author": "nomeata",
    "comments": [
      {
        "user": "carlini",
        "created_at": "2024-10-01T16:35:59Z",
        "body": "(Do not merge yet. As discussed on zulip, this PR is blocking on me to generate the 2x2 and 3x3 magmas to potentially minimize the number of 4x4s necessary. I will handle this tomorrow.)"
      },
      {
        "user": "carlini",
        "created_at": "2024-10-02T05:57:49Z",
        "body": "#187 is now pending, and we should discuss how to handle duplicates before merging that one."
      }
    ]
  },
  {
    "number": 166,
    "title": "refactoring in Subgraph",
    "created_at": "2024-10-01T13:36:43Z",
    "closed_at": "2024-10-01T13:49:46Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/166",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/166/comments",
    "author": "madvorak",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-01T13:49:44Z",
        "body": "LGTM. Thanks."
      }
    ]
  },
  {
    "number": 165,
    "title": "Magama Op",
    "created_at": "2024-10-01T13:23:42Z",
    "closed_at": "2024-10-01T21:12:02Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/165",
    "body": "Define the \"op magma\" structure, prove the duality theorem (theorem 3.5).\r\n\r\nUses the `⊧` notation in the meantime, waiting for PR #135 to be merged.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/165/comments",
    "author": "codyroux",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-01T13:58:13Z",
        "body": "The error `MagmaLaw is missing` was due to the fact that you added the `namespace Law`, so now the correct lean declaration to provide is `\\lean{Law.Magma}`. \r\n\r\nNow is fixed."
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-01T21:11:56Z",
        "body": "Thanks @codyroux! Merged."
      }
    ]
  },
  {
    "number": 162,
    "title": "fixed a typo",
    "created_at": "2024-10-01T11:39:18Z",
    "closed_at": "2024-10-01T11:50:43Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/162",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/162/comments",
    "author": "madvorak",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-01T11:50:38Z",
        "body": "Thanks! Merged. "
      }
    ]
  },
  {
    "number": 161,
    "title": "fix broken link in CONTRIBUTING.md: EquationalResults -> EquationalResult",
    "created_at": "2024-10-01T11:09:36Z",
    "closed_at": "2024-10-01T12:03:43Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/161",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/161/comments",
    "author": "dwrensha",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-10-01T12:03:40Z",
        "body": "Thanks! Merged. "
      }
    ]
  },
  {
    "number": 158,
    "title": "homomorphisms and isomorphisms",
    "created_at": "2024-10-01T07:26:10Z",
    "closed_at": "2024-10-03T19:17:00Z",
    "labels": [
      "awaiting-review"
    ],
    "url": "https://github.com/teorth/equational_theories/pull/158",
    "body": "null\n\nCloses #114",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/158/comments",
    "author": "madvorak",
    "comments": [
      {
        "user": "madvorak",
        "created_at": "2024-10-01T07:26:49Z",
        "body": "Out of the last four definitions (MagmaHom.toMagmaEquiv), we don't want all of them.\r\nPlease tell me which one or two we should keep."
      },
      {
        "user": "madvorak",
        "created_at": "2024-10-01T12:32:23Z",
        "body": "awaiting-review"
      },
      {
        "user": "teorth",
        "created_at": "2024-10-01T16:03:50Z",
        "body": "I guess we should follow whatever Mathlib does for the analogous [Mul] and [Add] homomorphisms with regards to making equivalences.\r\n\r\nBy the way, if you could also update the top-level `equational_theories.lean` to include your new file, and also add a description of your file to the core lean files listed in CONTRIBUTING.md, that would be great."
      },
      {
        "user": "teorth",
        "created_at": "2024-10-01T20:34:03Z",
        "body": "You could add a poll to the zulip poll thread to see if there are any strong feelings on this issue"
      },
      {
        "user": "madvorak",
        "created_at": "2024-10-01T21:02:52Z",
        "body": "I will add more API tomorrow."
      },
      {
        "user": "teorth",
        "created_at": "2024-10-01T23:38:46Z",
        "body": "Actually with the likely refactor in which Magma may become closer to Mul this PR may become obsolete.  Stay tuned..."
      },
      {
        "user": "teorth",
        "created_at": "2024-10-03T15:48:32Z",
        "body": "There wasn't enough consensus to move from Magma to Mul, so I think we will go ahead with your PR after all.  It looks like you selected a `MagmaHom.toMagmaEquiv`, so all we need to do now is fix the conflict with CONTRIBUTING.md and we are good to merge!"
      },
      {
        "user": "madvorak",
        "created_at": "2024-10-03T16:23:41Z",
        "body": "All right, the PR is ready for review now."
      }
    ]
  },
  {
    "number": 157,
    "title": "Add code used to generate the refutations file",
    "created_at": "2024-10-01T06:18:37Z",
    "closed_at": "2024-10-01T15:56:53Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/157",
    "body": "The FinitePoly refutations have already been added to Lean, but they came from a text file I generated without adding the source that reproduces it. This corrects that, and adds the (relatively simple) script used to generate those polynomials. The script could probably be improved considerably. (I likely will do that at some point.) But for completeness I want to start out by adding the code exactly it was used on the 27th for reproducibility.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/157/comments",
    "author": "carlini",
    "comments": [
      {
        "user": "vlad902",
        "created_at": "2024-10-01T07:32:01Z",
        "body": "Nevermind, just realized I misread filenames."
      },
      {
        "user": "teorth",
        "created_at": "2024-10-01T15:56:49Z",
        "body": "Thanks! You could also consider adding the code to the list of scripts at README.md."
      }
    ]
  },
  {
    "number": 154,
    "title": "SUBGRAPH: Show that 1689 implies (and is in fact equivalent to) 2 (Theorem 4.5)",
    "created_at": "2024-10-01T00:03:45Z",
    "closed_at": "2024-10-01T02:06:24Z",
    "labels": [
      "awaiting-review"
    ],
    "url": "https://github.com/teorth/equational_theories/pull/154",
    "body": "null\n\nCloses #136",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/154/comments",
    "author": "ChienYungChi",
    "comments": [
      {
        "user": "ChienYungChi",
        "created_at": "2024-10-01T00:04:18Z",
        "body": "awaiting-review"
      },
      {
        "user": "Shreyas4991",
        "created_at": "2024-10-01T00:09:37Z",
        "body": "Hey, there's a merge conflict. The main branch needs to be merged into your branch"
      },
      {
        "user": "ChienYungChi",
        "created_at": "2024-10-01T00:10:51Z",
        "body": "OK, I have resolved the conflict."
      }
    ]
  },
  {
    "number": 153,
    "title": "Add more bruteforced implications",
    "created_at": "2024-09-30T20:53:17Z",
    "closed_at": "2024-10-01T20:35:47Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/153",
    "body": "This change introduces some more simple bruteforced implications. By my calculation, this change increases the transitive closure size from 4.5m to 4.75m.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/153/comments",
    "author": "vlad902",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-09-30T22:40:39Z",
        "body": "Can you update the top-level README.md to report these improvements?  Also if you can update the blueprint to report on methodology and results that would also be great."
      },
      {
        "user": "vlad902",
        "created_at": "2024-10-01T07:28:12Z",
        "body": "> Can you update the top-level README.md to report these improvements? Also if you can update the blueprint to report on methodology and results that would also be great.\r\n\r\nDone! Thanks for the reminder on the blueprint."
      },
      {
        "user": "teorth",
        "created_at": "2024-10-01T15:59:16Z",
        "body": "I think I may have caused a conflict with README.md by moving some stuff around.  Could you align your commit with the new version, then this PR can be merged."
      },
      {
        "user": "vlad902",
        "created_at": "2024-10-01T16:03:20Z",
        "body": "Done."
      },
      {
        "user": "vlad902",
        "created_at": "2024-10-01T19:48:21Z",
        "body": "Good god, what in git rebase did I do to this branch."
      }
    ]
  },
  {
    "number": 152,
    "title": "Codyroux/derivation preserves size",
    "created_at": "2024-09-30T18:26:33Z",
    "closed_at": "2024-10-03T02:59:35Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/152",
    "body": "[DO NOT MERGE] Use completeness to prove a simple syntactic meta-theorem about the size of derived equations.\r\n\r\nBasically the only equations derivable from a set of equalities `E` are either \"trivial\", that is of the form `t = t` or the size of each term is larger than the minimum of the terms found in `E`.\n",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/152/comments",
    "author": "codyroux",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-10-03T04:08:38Z",
        "body": "Sorry I had to revert your PR as `OrderMetatheorem.lean` stopped compiling for some reason, you may need to resubmit it"
      },
      {
        "user": "codyroux",
        "created_at": "2024-10-03T15:24:02Z",
        "body": "No biggie, I'll re-create"
      }
    ]
  },
  {
    "number": 144,
    "title": "Update scripts/process_implications.py: use Lean parser, output irreducible implications",
    "created_at": "2024-09-30T14:17:36Z",
    "closed_at": "2024-10-01T20:38:59Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/144",
    "body": "Update scripts/process_implications.py: to process the parsed implications JSON, and figure out the irreducible implications",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/144/comments",
    "author": "amirlb",
    "comments": [
      {
        "user": "vlad902",
        "created_at": "2024-09-30T18:32:19Z",
        "body": "Running this gave me `All implications: 310354` while my own output is millions higher, am I misunderstanding the output or is that the size of the entire closure?"
      },
      {
        "user": "vlad902",
        "created_at": "2024-09-30T18:54:45Z",
        "body": "```\r\nlake exe extract_implications | ruby -rjson -e 'JSON.parse($stdin.read)[\"implications\"].each { |s| puts s[\"lhs\"][8,10] + \",\" + s[\"rhs\"][8,10] }' | sort -u > /tmp/imp.csv\r\nruby scripts/transitive_closure.rb  /tmp/imp.csv | wc -l\r\n```\r\n\r\nGives me 4.5 million, but I would totally believe the error is in `scripts/transitive_closure.rb`"
      },
      {
        "user": "amirlb",
        "created_at": "2024-09-30T20:44:27Z",
        "body": "The figure 310354 is after reducing to the 3557 equivalence classes, without the internal implications in each class and with a single implication between every two related classes. That's probably the source of the difference."
      },
      {
        "user": "teorth",
        "created_at": "2024-09-30T22:30:06Z",
        "body": "Would it be possible to update the README.md to give links to this data and script, possibly with some warning that the data set is provisional and not guaranteed to be 100% accurate yet?  Having a easily accessible initial data set of implications, even if slightly off from the actual truth, may allow a lot of more data analysis / data visualization oriented people to be able to make some interesting contributions and insights.  (One can also think about adding a chapter to the blueprint to give a longer description of the methodology.)"
      },
      {
        "user": "vlad902",
        "created_at": "2024-09-30T22:58:49Z",
        "body": "> The figure 310354 is after reducing to the 3557 equivalence classes, without the internal implications in each class and with a single implication between every two related classes. That's probably the source of the difference.\r\n\r\nAh, that makes sense. Given that there's two different graphs to be considering here, pre- and post-condensation, it's probably good to be explicit about it. I'd maybe say 'condensed implications' or something else you find more descriptive to make it clear to others who may be confused like me."
      }
    ]
  },
  {
    "number": 143,
    "title": "DATA: Add a MagmaLaw associated to each equation in Equations.lean or AllEquations.lean",
    "created_at": "2024-09-30T14:08:32Z",
    "closed_at": "2024-10-06T17:00:41Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/143",
    "body": "For each EquationX `abbrev` in Equations.lean, also add a `LawX` that defines the corresponding element of `MagmaLaw`. (EDIT: this step will no longer be necessary if #290 is completed.)\r\n\r\nModify the `equation` elaborator in EquationCommand.lean to do something similar for AllEquations.lean.\r\n\r\nThis is the first step towards transitioning from having equations as the ground truth of the universe of assertions, to laws.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/143/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "goens",
        "created_at": "2024-10-06T06:19:39Z",
        "body": "claim"
      },
      {
        "user": "goens",
        "created_at": "2024-10-06T09:35:56Z",
        "body": "propose PR #357 "
      },
      {
        "user": "0art0",
        "created_at": "2024-10-06T09:43:25Z",
        "body": "Apologies for the overlap, my PR #356 also does something similar, as a path towards proving non-implications using meta-theorems. I'd be happy to close my PR and make the code depend on your PR."
      }
    ]
  },
  {
    "number": 142,
    "title": "DATA: Create an automated tool to regularly gather the equations from Equations.lean and AllEquations.lean and output them to a text file that is easy for machines to read",
    "created_at": "2024-09-30T14:05:15Z",
    "closed_at": "2024-10-09T19:20:28Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/142",
    "body": "This would presumably already be a byproduct of #29, but is worth isolating separately.  The model here is that `Equations.lean` and `AllEquations.lean` represent the ground truth of the universe of equations/laws under consideration, so that new equations can be added to the universe by updating the lean files accordingly",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/142/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "Command-Master",
        "created_at": "2024-10-01T02:51:23Z",
        "body": "Currently #126 only considers equations that appear in some implications, so this will require some change"
      },
      {
        "user": "teorth",
        "created_at": "2024-10-01T20:37:44Z",
        "body": "It would also be nice to have a separate file that only lists the implications and anti implications on the equations defined just in Equations.lean"
      },
      {
        "user": "vlad902",
        "created_at": "2024-10-06T05:47:52Z",
        "body": "Recently, Equations 28393, 374794, and 5105 have appeared in the output of `lake exe extract_implications` breaking some of my tools as they expected all equations to be in AllEquations.lean (I parse out the ones that are commented there as well.) That's probably a fault of my tooling, but also a good reason to do this to make it easier. Everyone can load a JSON."
      },
      {
        "user": "Command-Master",
        "created_at": "2024-10-06T06:10:26Z",
        "body": "That also broke some of my tools. I could add a Lean script to extract the equations, what would be a good I/O for it?"
      },
      {
        "user": "vlad902",
        "created_at": "2024-10-06T06:26:33Z",
        "body": "If you mean an output format, just a JSON hash seems easy for everyone to consume. Are you thinking of including it in `extract_implications` or somewhere else?"
      },
      {
        "user": "Command-Master",
        "created_at": "2024-10-06T06:32:10Z",
        "body": "I think `extract_implications` already does a lot of things, it's better to make another script.\r\nBy output format I meant how to describe the equations. Is something like `{\"Equation3\": [0, [0, 0]], \"Equation4\": [0, [0, 1]]}` good? Would it be better to have `{\"Equation3\": \"x = x ◇ x\", \"Equation4\": \"x = x ◇ y\"}`? Something else?"
      },
      {
        "user": "teorth",
        "created_at": "2024-10-06T06:34:59Z",
        "body": "As a short term fix one can of course add these equations in commented form to AllEquations.lean, and also add a note sonewhere in CONTRIBUTING.md requesting that one add the commented equation to AllEquations.lean whenever adding a novel equation to Equation.lean as a courtesy."
      },
      {
        "user": "vlad902",
        "created_at": "2024-10-06T09:21:44Z",
        "body": "> I think `extract_implications` already does a lot of things, it's better to make another script. By output format I meant how to describe the equations. Is something like `{\"Equation3\": [0, [0, 0]], \"Equation4\": [0, [0, 1]]}` good? Would it be better to have `{\"Equation3\": \"x = x ◇ x\", \"Equation4\": \"x = x ◇ y\"}`? Something else?\r\n\r\nPersonally, I'd go for the simpler textual form since lots of tools just need to display them, but there's nothing stopping you from having it be `\"Equation3\": { \"text\": \"x = x\", \"ast\": [0, [0, 0]] }`"
      },
      {
        "user": "Command-Master",
        "created_at": "2024-10-06T17:07:56Z",
        "body": "claim"
      },
      {
        "user": "Command-Master",
        "created_at": "2024-10-08T11:00:50Z",
        "body": "disclaim"
      },
      {
        "user": "0art0",
        "created_at": "2024-10-08T11:04:55Z",
        "body": "claim"
      },
      {
        "user": "0art0",
        "created_at": "2024-10-08T11:21:35Z",
        "body": "propose PR #429 "
      },
      {
        "user": "0art0",
        "created_at": "2024-10-08T11:22:25Z",
        "body": "This PR depends on #427."
      },
      {
        "user": "vlad902",
        "created_at": "2024-10-10T15:08:52Z",
        "body": "I get the following build error on `lake exe export_equations` on main:\r\n```\r\nerror: ././././scripts/export_equations.lean:27:39: application type mismatch\r\n  Json.arr fun h ↦ Subtype.map (fun x ↦ ?m.281 x) h laws\r\nargument\r\n  fun h ↦ Subtype.map (fun x ↦ ?m.281 x) h laws\r\nhas type\r\n  (∀ (a : RBNode Name fun x ↦ Unit), RBNode.WellFormed Name.quickCmp a → ?m.273 ((fun x ↦ ?m.281 x) a)) →\r\n    Subtype ?m.273 : Sort (max 1 ?u.261)\r\nbut is expected to have type\r\n  Array Json : Type\r\nerror: ././././scripts/export_equations.lean:27:52: invalid constructor ⟨...⟩, expected type must be an inductive type with only one constructor\r\n  RBNode Name fun x ↦ Unit\r\nerror: Lean exited with code 1\r\nSome required builds logged failures:\r\n- scripts.export_equations\r\nerror: build failed\r\n```"
      }
    ]
  },
  {
    "number": 137,
    "title": "Type*",
    "created_at": "2024-09-30T11:19:50Z",
    "closed_at": "2024-09-30T13:08:19Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/137",
    "body": "If we use `Type*`, we will not have the schisma between `universe u` and variable `u`.\r\n\r\nI also made a tiny change to misplaced whitespaces in `Subgraph.lean`.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/137/comments",
    "author": "madvorak",
    "comments": [
      {
        "user": "nomeata",
        "created_at": "2024-09-30T12:58:16Z",
        "body": "I intentionally un-`Type*`ed some earlier to avoid a dependency on mathlib in the very basic files. Can we somehow avoid the schisma without pulling in mathlibism into basic files that otherwise are stand-alone? Can we simply use `Type _`? Or `universe uu`?"
      },
      {
        "user": "madvorak",
        "created_at": "2024-09-30T13:00:01Z",
        "body": "In this case, do we want to change the naming convention for variables or the names of universes?"
      },
      {
        "user": "madvorak",
        "created_at": "2024-09-30T13:00:54Z",
        "body": "FYI `Mathlib.Tactic.TypeStar` imports next to nothing."
      },
      {
        "user": "nomeata",
        "created_at": "2024-09-30T13:08:00Z",
        "body": "> In this case, do we want to change the naming convention for variables or the names of universes?\r\n\r\nThe universe, I’d say. Would using `Type _` not just work fine?\r\n\r\n> FYI Mathlib.Tactic.TypeStar imports next to nothing.\r\n\r\nIt’s still something :-). Maybe it matter less than I think it does, but it’s nice for example to be able to copy things to live.lean-lang.org for bug reports etc."
      }
    ]
  },
  {
    "number": 136,
    "title": "SUBGRAPH: Show that 1689 implies (and is in fact equivalent to) 2 (Theorem 4.5)",
    "created_at": "2024-09-30T10:45:53Z",
    "closed_at": "2024-10-01T02:06:25Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/136",
    "body": "This is a surprisingly tricky implication.  In 1997, Kisielewicz obtained a computer assisted proof, whose output is as follows:\n\n> The longest deduction my program finds is one showing (yx)((xz)z) x implies x y. It consists of 13 subreductions and it seems to me that there is no shorter way to prove this fact. Here is the corresponding part of the program's report.\n\n> [1] (ab)((bc)c)=b \n> Subreducing [1] in [1] by subterm ab yields:\n> [2] a((((ab)b)c)c)=(ab)b \n> Subreducing [1] in [1] by subterm bc yields: \n> [3] (a(bc))(c((cd)d))=bc \n> Subreducing [1] in [2] by subterm ((ab)b)c yields: \n> [4] a(b((bc)c))=(ab)b \n> Subreducing [3] in [4] by subterm a(b((bc)c)) yields: \n> [5] ((a(bc))c)c=bc \n> Subreducing [5] in [1] by subterm (bc)c yields: \n> [6] (a(b(cd)))(cd)=b(cd) \n> Subreducing [6] in [5] by subterm (a(bc))c yields: \n> [7] (a(bc))(bc)=a(bc) \n> Subreducing [1] in [5] by subterm bc yields: \n> [8] ((ab)((bc)c))((bc)c)=b \n> Subreducing [1] in [7] by subterm a(bc) yields: \n> [9] a((ab)b=a \n> Subreducing [7] in [9] by subterm (ab)b yields: \n> [10] a(a(bc))=a \n> Subreducing [8] in [9] by subterm (ab)b yields: \n> [11] (ab)b=ab \n> Subreducing [4] in [10] by subterm a(a(bc)) yields: \n> [12] (aa)a=a \n> Subreducing [12] in [1] by subterm (bc)c yields: \n> [13] (ab)b=b \n> Subreducing [11] in [13] by subterm (ab)b yields: \n> [14] ab=b Whence, a=b.\n\nThis claim (currently a conjecture in Subgraph.lean) would be a prime target for automated proving tools.\n\nWhen done, mark the statement and proof of Theorem 4.5 with a \\leanok in the blueprint.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/136/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "ChienYungChi",
        "created_at": "2024-09-30T23:59:05Z",
        "body": "claim"
      },
      {
        "user": "ChienYungChi",
        "created_at": "2024-10-01T00:04:01Z",
        "body": "propose PR #154"
      }
    ]
  },
  {
    "number": 135,
    "title": "feat: add preorder on magma laws",
    "created_at": "2024-09-30T10:32:23Z",
    "closed_at": "2024-10-01T17:59:36Z",
    "labels": [
      "awaiting-review"
    ],
    "url": "https://github.com/teorth/equational_theories/pull/135",
    "body": "This builds on the `MagmaLaw` structure defined in #113 and thus depends on it.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/135/comments",
    "author": "goens",
    "comments": [
      {
        "user": "goens",
        "created_at": "2024-09-30T10:34:41Z",
        "body": "awaiting-review"
      },
      {
        "user": "goens",
        "created_at": "2024-09-30T14:10:27Z",
        "body": "This seems to conflict with #123 (which also defines `MagmaLaw`), can also refactor it to use those definitions once that's merged."
      },
      {
        "user": "teorth",
        "created_at": "2024-09-30T22:35:41Z",
        "body": "It seems that #123 is merged now, so what is the status on compatibility?"
      },
      {
        "user": "codyroux",
        "created_at": "2024-10-01T02:14:24Z",
        "body": "It might be worth defining `l ≤ l'` as `{l} ⊧ l'` while we're at it, but it's not critical."
      },
      {
        "user": "goens",
        "created_at": "2024-10-01T06:49:02Z",
        "body": "good idea @codyroux, thanks, I just added that as an equivalent characterization (`l₁ ≤ l₂ ↔ {l₁} ⊧ l₂`), thought the other definition was simpler without having to deal with the singleton\r\n\r\nIt's integrated with #132 now, I'm happy to merge this if you're happy (@teorth)"
      },
      {
        "user": "goens",
        "created_at": "2024-10-01T10:37:09Z",
        "body": "thanks for the review @madvorak, I've made all the style changes you suggested (except the proof change that didn't work)"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-01T14:02:17Z",
        "body": "Please let me know if there are any further review comments @codyroux. If there are not, I will merge it so we can merge #165 too. "
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-01T18:01:33Z",
        "body": "Thanks everyone! Merged. "
      }
    ]
  },
  {
    "number": 133,
    "title": "API: Show that the free magma has the universal property (Definition 1.4)",
    "created_at": "2024-09-30T09:37:59Z",
    "closed_at": "2024-10-05T02:19:16Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/133",
    "body": "Given a map `f : α -> G`, show that `evalInMagma f` is the unique magma homomorphism that extends `f`.  (This requires that #114 is completed.  Additionally, `evalInMagma f` should now have the type `MagmaHom`.)\n\nSimilarly, if `f : α → β`, show that `fmapFreeMagma f` is the unique magma homomorphism that extends `f`.  (One can add some API relating these two operations as necessary.)\n\nWhen done, mark Definition 1.4 with a \\leanok on the blueprint.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/133/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "franklindyer",
        "created_at": "2024-10-01T14:08:00Z",
        "body": "claim"
      }
    ]
  },
  {
    "number": 132,
    "title": "API: Give MagmaLaw the structure of a Preorder (Lemma 3.2)",
    "created_at": "2024-09-30T09:32:42Z",
    "closed_at": "2024-10-01T17:59:37Z",
    "labels": [
      "awaiting-review"
    ],
    "url": "https://github.com/teorth/equational_theories/issues/132",
    "body": "Thus, if `E`, `E'` are laws, then `E ≥ E'` will be true precisely when `E` implies `E'`, that is to say every magma that obeys `E` obeys `E'`.  The axioms of a preorder will need to be verified.\n\nWhen done, mark Lemma 3.2 in the blueprint with a \\leanok in both the statement and proof.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/132/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "goens",
        "created_at": "2024-09-30T09:51:27Z",
        "body": "claim"
      },
      {
        "user": "goens",
        "created_at": "2024-09-30T10:32:56Z",
        "body": "propose PR #135 "
      },
      {
        "user": "goens",
        "created_at": "2024-09-30T10:35:41Z",
        "body": "awaiting-review"
      }
    ]
  },
  {
    "number": 130,
    "title": "Let @[equational_result] handle facts",
    "created_at": "2024-09-30T09:08:10Z",
    "closed_at": "2024-09-30T12:14:42Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/130",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/130/comments",
    "author": "nomeata",
    "comments": [
      {
        "user": "Command-Master",
        "created_at": "2024-09-30T09:15:48Z",
        "body": "This has some collision with #126 "
      },
      {
        "user": "nomeata",
        "created_at": "2024-09-30T09:32:03Z",
        "body": "Thanks for flagging. No bad conflicts, though, luckily, unless I am missing something."
      }
    ]
  },
  {
    "number": 128,
    "title": "add automatically generated proof of 14 implies 29",
    "created_at": "2024-09-30T08:49:58Z",
    "closed_at": "2024-10-01T11:51:45Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/128",
    "body": "null\n\nCloses #120",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/128/comments",
    "author": "shetzl",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-09-30T12:27:09Z",
        "body": "Thank you @madvorak for your review, but at this stage we don't need these kinds of refinements. Don't feel obligated to review and suggest any change of this sort.\r\n\r\nI typically clean and golf the Subgraph file every night or every few nights, but in this specific case (automatically generated proof) I don't know if we want to do that. Any preferences, @teorth?\r\n\r\nThanks again! "
      },
      {
        "user": "shetzl",
        "created_at": "2024-09-30T13:26:15Z",
        "body": "I will adapt the export code to get rid of these aesthetic problems. I should be able to commit an improved version tomorrow."
      },
      {
        "user": "teorth",
        "created_at": "2024-09-30T14:54:33Z",
        "body": "My view is Subgraph.lean is part of the human-curated project space, and so aethestic improvements to autogenerated proofs are completely welcome here.  In contrast, the Generated folder is for the 100% computer generated results, and human cleanup should ideally be avoided in that folder (but maybe some human-written files derived from a generated file can also be created, but outside of the Generated folder).  I'll update the CONTRIBUTING.md file to reflect this."
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-09-30T16:01:15Z",
        "body": "Ok great. Thanks @shetzl and @madvorak "
      },
      {
        "user": "madvorak",
        "created_at": "2024-09-30T17:08:57Z",
        "body": "BTW it can be golfed to:\r\n```\r\ntheorem Equation14_implies_Equation29 (G: Type*) [Magma G] (h: Equation14 G) : Equation29 G :=\r\n  fun x y ↦ (h x (y ∘ x)).trans (congrArg ((y ∘ x) ∘ ·) (h y x).symm)\r\n```"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-10-01T11:51:34Z",
        "body": "Thanks, merged. "
      }
    ]
  },
  {
    "number": 127,
    "title": "Add `@[equational_result]` attribute to generated results",
    "created_at": "2024-09-30T07:58:06Z",
    "closed_at": "2024-09-30T10:22:28Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/127",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/127/comments",
    "author": "Command-Master",
    "comments": [
      {
        "user": "Command-Master",
        "created_at": "2024-09-30T07:59:17Z",
        "body": "I see I somehow missed many files, I'll fix this ASAP"
      },
      {
        "user": "nomeata",
        "created_at": "2024-09-30T08:12:24Z",
        "body": "I’m a bit confused – if these are generated files, shouldn’t there be a script that generates them, and shouldn’t you update (and rerun) that script?"
      },
      {
        "user": "Command-Master",
        "created_at": "2024-09-30T08:14:32Z",
        "body": "> I’m a bit confused – if these are generated files, shouldn’t there be a script that generates them, and shouldn’t you update (and rerun) that script?\r\n\r\nI could update the scripts, but I don't see the point in rerunning them - it won't change what they produce"
      },
      {
        "user": "nomeata",
        "created_at": "2024-09-30T08:20:38Z",
        "body": "> I could update the scripts, but I don't see the point in rerunning them - it won't change what they produce\r\n\r\nIt’s really important that the generated files can always be re-generated from the scripts. Both to do science in a reproducible and transparent way, but also if we need to make more substantial refactorings that you really don’t want to do by editing huge files.\r\n\r\nSo I strongly suggest to *never* edit generated files, and always update them by adjusting the scripts. Ideally the scripts leave a comment in the file to that effect.\r\n"
      },
      {
        "user": "Command-Master",
        "created_at": "2024-09-30T08:32:01Z",
        "body": "I agree, although that might cause a problem once we start to have scripts which take a very long time to run. Hopefully there won't be such changes by them. Where's the code for `Constant.lean`, `Singleton.lean`?"
      },
      {
        "user": "nomeata",
        "created_at": "2024-09-30T09:45:12Z",
        "body": "> I agree, although that might cause a problem once we start to have scripts which take a very long time to run.\r\n\r\nIn that case ideally the scripts return a txt or json file with the “raw data”, and a separate script translates to Lean. This is the idiom that #111 and #19 follow.\r\n\r\n> Hopefully there won't be such changes by them. Where's the code for Constant.lean, Singleton.lean?\r\n\r\nI was wondering about that as well 😨 "
      },
      {
        "user": "nomeata",
        "created_at": "2024-09-30T10:22:22Z",
        "body": "Anyways, looks good and I want that data now, so I’ll merge :-)"
      }
    ]
  },
  {
    "number": 116,
    "title": "Prove some implications taken from old Putnam problems",
    "created_at": "2024-09-29T20:33:01Z",
    "closed_at": "2024-09-29T20:45:35Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/116",
    "body": "Proved a couple of specific implications drawn from old Putnam problems:\r\n\r\n- Putnam 1978, Problem A4 parts (a) and (b)\r\n- Putnam 2001, Problem A1",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/116/comments",
    "author": "franklindyer",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-09-29T20:45:31Z",
        "body": "Putnam questions seem to have been easier in the past :)."
      }
    ]
  },
  {
    "number": 115,
    "title": "Define a proof theory for the equational logic of magmas.",
    "created_at": "2024-09-29T20:18:43Z",
    "closed_at": "2024-09-30T03:14:32Z",
    "labels": [
      "do-not-merge"
    ],
    "url": "https://github.com/teorth/equational_theories/pull/115",
    "body": "For now just soundness.\n\nCloses #104",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/115/comments",
    "author": "codyroux",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-09-29T20:31:23Z",
        "body": "Feel free to update the intro.tex chapter of the blueprint to align it with your new contributions, for instance adding new theorems to the blueprint and linking them to your code using the \\lean{} keywords (and \\uses and \\leanok as appropriate).  I'll add some text to CONTRIBUTING.md to explain these macros now, since I realize that perhaps not all contributors are familiar with blueprint."
      },
      {
        "user": "codyroux",
        "created_at": "2024-09-30T00:03:31Z",
        "body": "Ok proved completeness as well, sadly uses choice. Should be avoidable, but I'm gonna take the win for now."
      },
      {
        "user": "codyroux",
        "created_at": "2024-09-30T00:07:02Z",
        "body": "I'm going to get started on the blueprint modifications, if I can remember how to write LaTeX."
      },
      {
        "user": "codyroux",
        "created_at": "2024-09-30T03:14:32Z",
        "body": "All right this is a mess, and I have compactness in another branch, I'll just re-create a PR."
      }
    ]
  },
  {
    "number": 114,
    "title": "API: Develop an API for homomorphisms and isomorphisms between magmas",
    "created_at": "2024-09-29T20:06:46Z",
    "closed_at": "2024-10-03T19:17:01Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/114",
    "body": "In exact analogy to how Mathlib supports additive homomorphisms (`AddHom`) `φ: G →+ H` between `(G:Type) [Add G]` and `(H:Type) [Add H]`, and multiplicative homomorphisms (`MulHom`) `φ: G →* H` between `(G:Type) [Mul G]` and `(H:Type) [Mul H]`, expand `Magma.lean` to support magma homomorphisms (`MagmaHom`) `φ: G →∘ H` between `(G:Type) [Magma G]` and `(H:Type) [Magma H]`, with all the basic API copied over from Mathlib.  Similarly create support for `MagmaEquiv` analogously to `AddEquiv` and `MulEquiv`. This will help support #104 and #36.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/114/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "madvorak",
        "created_at": "2024-09-30T17:20:47Z",
        "body": "claim"
      },
      {
        "user": "madvorak",
        "created_at": "2024-10-01T12:28:47Z",
        "body": "propose PR #158"
      }
    ]
  },
  {
    "number": 107,
    "title": "chore: fix typos",
    "created_at": "2024-09-29T15:59:37Z",
    "closed_at": "2024-09-29T16:06:31Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/107",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/107/comments",
    "author": "euprunin",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-09-29T16:06:28Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 106,
    "title": " SUBGRAPH: prove implications/anti-implications between 39 and other equations",
    "created_at": "2024-09-29T15:22:09Z",
    "closed_at": "2024-09-29T15:53:05Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/106",
    "body": "null\n\nCloses #43",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/106/comments",
    "author": "Command-Master",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-09-29T15:48:18Z",
        "body": "Thanks @Command-Master. Fixed the issue and now the CI should pass. \r\n\r\nFor the next PR please consider merging `main` to your fork branch before opening the PR. "
      }
    ]
  },
  {
    "number": 102,
    "title": "Add CLI for extract_implications",
    "created_at": "2024-09-29T12:13:57Z",
    "closed_at": "2024-09-30T07:35:02Z",
    "labels": [
      "awaiting-review"
    ],
    "url": "https://github.com/teorth/equational_theories/pull/102",
    "body": "Adds a CLI to `lake exe extract_implications`\r\n\r\n- [ ] depends on: #93",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/102/comments",
    "author": "Command-Master",
    "comments": [
      {
        "user": "Command-Master",
        "created_at": "2024-09-29T12:15:55Z",
        "body": "awaiting-review"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-09-29T12:57:09Z",
        "body": "Please merge from `main` and the CI checks will pass.\r\n\r\nI have just fixed a mistaken blueprint declaration."
      },
      {
        "user": "Command-Master",
        "created_at": "2024-09-29T15:16:51Z",
        "body": "do-not-merge"
      },
      {
        "user": "Command-Master",
        "created_at": "2024-09-30T07:35:02Z",
        "body": "This is now subsumed by #126 "
      }
    ]
  },
  {
    "number": 101,
    "title": "SUBGRAPH: prove implications/anti-implications between 23 and other equations",
    "created_at": "2024-09-29T11:50:21Z",
    "closed_at": "2024-09-29T13:37:34Z",
    "labels": [
      "awaiting-review"
    ],
    "url": "https://github.com/teorth/equational_theories/pull/101",
    "body": "I skipped the step of putting conjectures and directly proved them.\n\nCloses #75",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/101/comments",
    "author": "ChienYungChi",
    "comments": [
      {
        "user": "ChienYungChi",
        "created_at": "2024-09-29T11:52:27Z",
        "body": "awaiting-review"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-09-29T12:56:30Z",
        "body": "Please merge from `main` and the CI checks will pass.\r\n\r\nI have just fixed a mistaken blueprint declaration."
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-09-29T13:37:29Z",
        "body": "LGTM. Thanks!"
      }
    ]
  },
  {
    "number": 99,
    "title": "transitive_reduction: Fix SCC computation bug",
    "created_at": "2024-09-29T07:52:50Z",
    "closed_at": "2024-09-29T21:07:58Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/99",
    "body": "Due to a silly bug (index being a local instead of a global variable here), the SCC computation under-computed SCCs. The previous transitive reduction results were still correct, but slower to compute than necessary.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/99/comments",
    "author": "vlad902",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-09-29T12:57:39Z",
        "body": "Please merge from `main` and the CI checks will pass.\r\n\r\nI have just fixed a mistaken blueprint declaration."
      }
    ]
  },
  {
    "number": 98,
    "title": "Fix README links",
    "created_at": "2024-09-29T07:46:23Z",
    "closed_at": "2024-09-29T13:34:47Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/98",
    "body": "Currently the SVG displays in GitHub's viewer which is broken, link to the raw svg instead.\r\n\r\nAlso change the TrivialBruteforce link to point to the directory with a README instead.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/98/comments",
    "author": "vlad902",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-09-29T12:58:36Z",
        "body": "Please merge from `main` and the CI checks will pass.\r\n\r\nI have just fixed a mistaken blueprint declaration."
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-09-29T13:34:40Z",
        "body": "LGTM! Thanks."
      }
    ]
  },
  {
    "number": 97,
    "title": "Delete transitive_reduction_exact.rb",
    "created_at": "2024-09-29T07:43:41Z",
    "closed_at": "2024-09-29T21:08:44Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/97",
    "body": "I did not intend to upstream this script, it is too slow and it is confusing to have two transitive reduction scripts.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/97/comments",
    "author": "vlad902",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-09-29T12:58:47Z",
        "body": "Please merge from `main` and the CI checks will pass.\r\n\r\nI have just fixed a mistaken blueprint declaration."
      }
    ]
  },
  {
    "number": 94,
    "title": "Simple chaining",
    "created_at": "2024-09-29T02:47:57Z",
    "closed_at": "2024-09-29T03:55:07Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/94",
    "body": "This is another trivial thing, in comparison how you guys think about the problem. I see `Equation46_implies_Equation387` and `Equation387_implies_Equation43` and as such I can produce `Equation46_implies_Equation43`.\r\n\r\nThis is lead me to thinking that maybe this kind of reasoning can be automated.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/94/comments",
    "author": "kant2002",
    "comments": [
      {
        "user": "kant2002",
        "created_at": "2024-09-29T03:32:55Z",
        "body": "Okay. Found `scripts\\transitive_reduction_exact.rb` which seems to be do exactly thing I think about."
      },
      {
        "user": "teorth",
        "created_at": "2024-09-29T03:55:07Z",
        "body": "Our current thinking is to try to minimize the number of implications that are explicitly in the Lean files to keep the compile times fast, and rely on post processing such as the transitive reduction to complete the implication graph afterwards."
      }
    ]
  },
  {
    "number": 93,
    "title": "add `equational_result` attribute for tagging implications and negated implications",
    "created_at": "2024-09-29T00:47:26Z",
    "closed_at": "2024-09-30T04:24:23Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/93",
    "body": "Adds an attribute `@[equational_result]` to be used for tagging theorems that represent proven implications or nonimplications in the graph.\r\n\r\nCollects these results in an environment extension. The idea is that anyone who wants to analyze the data about what's been proven can grab the data from that extension. The data includes the filename where the result lives, and can include any other metadata we want to include.\r\n\r\nPreviously we had discussed getting the same information by scanning through the environment and collecting all theorems that have the correct shape. That approach would have the advantage of allowing the theorems to be more succinct in the source code (no need to add an attribute). However, I prefer the approach taken by this PR, because:\r\n* If a theorem does not quite match the correct shape, the attribute handler can report the error immediately, at the theorem declaration.\r\n* Recording the results (via an environment extension) just once avoids the need to linearly scan the whole environment (could get expensive) at each downstream usage point.\r\n",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/93/comments",
    "author": "dwrensha",
    "comments": [
      {
        "user": "Command-Master",
        "created_at": "2024-09-29T02:31:31Z",
        "body": "Shouldn't `ParseImplications` now be edited to use this instead of iterating over all theorems?"
      },
      {
        "user": "Command-Master",
        "created_at": "2024-09-29T02:35:44Z",
        "body": "Also, there is duplication of `Entry` and `EntryVariant` in `Conjecture` and `Result` which should be extracted to a common definition"
      },
      {
        "user": "dwrensha",
        "created_at": "2024-09-29T02:36:23Z",
        "body": "> Shouldn't ParseImplications now be edited to use this instead of iterating over all theorems?\r\n\r\nYes, it should. There are some details to be worked out about how exactly to organize the shared logic."
      },
      {
        "user": "teorth",
        "created_at": "2024-09-29T02:36:25Z",
        "body": "Just a reminder to modify CONTRIBUTING.md to change the recommended syntax if this proposal gets implemented (it sounds reasonable to me so long as it doesn’t somehow break other Lean functionality concerning theorems)"
      },
      {
        "user": "Command-Master",
        "created_at": "2024-09-29T04:06:08Z",
        "body": "Using `result` instead of `theorem` should also be updated in other files"
      },
      {
        "user": "dwrensha",
        "created_at": "2024-09-29T15:10:09Z",
        "body": "> Shouldn't `ParseImplications` now be edited to use this instead of iterating over all theorems?\r\n\r\ndone."
      },
      {
        "user": "dwrensha",
        "created_at": "2024-09-29T15:11:46Z",
        "body": "> Also, there is duplication of `Entry` and `EntryVariant` in `Conjecture` and `Result` which should be extracted to a common definition\r\n\r\nThe types do have differences and I don't see a benefit to trying to unify them.\r\n\r\nIt's possible that we may later decide to combine the `conjecture` and `equational_result` environment extensions. But for now I think this makes sense as-is."
      },
      {
        "user": "dwrensha",
        "created_at": "2024-09-29T15:12:32Z",
        "body": "> Using `result` instead of `theorem` should also be updated in other files\r\n\r\nIn order to avoid making this PR unwieldy, I think it's best to defer updating the other files to later PRs."
      },
      {
        "user": "Command-Master",
        "created_at": "2024-09-29T15:19:53Z",
        "body": "> > Also, there is duplication of `Entry` and `EntryVariant` in `Conjecture` and `Result` which should be extracted to a common definition\r\n> \r\n> The types do have differences and I don't see a benefit to trying to unify them.\r\n> \r\n> It's possible that we may later decide to combine the `conjecture` and `equational_result` environment extensions. But for now I think this makes sense as-is.\r\n\r\nWhat are the differences? To me they seem like the same thing, except one is missing a proof. The benefit of merging them is that later code, e.g. transitive closure, could use the same interface to process both of them"
      },
      {
        "user": "dwrensha",
        "created_at": "2024-09-29T16:20:09Z",
        "body": "> > > Also, there is duplication of `Entry` and `EntryVariant` in `Conjecture` and `Result` which should be extracted to a common definition\r\n> > \r\n> > \r\n> > The types do have differences and I don't see a benefit to trying to unify them.\r\n> > It's possible that we may later decide to combine the `conjecture` and `equational_result` environment extensions. But for now I think this makes sense as-is.\r\n> \r\n> What are the differences? To me they seem like the same thing, except one is missing a proof. The benefit of merging them is that later code, e.g. transitive closure, could use the same interface to process both of them\r\n\r\n`conjecture` currently has an `other` variant because I wanted to support the ability to make conjectures whose types don't fit the enumerated shapes.\r\n\r\nI could imagine that if we add new variants to support e.g. compactly representing many negated implications at once, that such things might only make sense as fully baked results, not as conjectures.\r\n\r\nI could see it making sense to merge these into one environment extension or to keep them separate. Keeping them separate seems like the less invasive thing right now. We can adapt in the future. I think more important than nailing down this backend interface is putting the frontend in place, i.e. the `conjecture` command and the `equational_result` attribute, so that everyone else working on the project can start using them."
      }
    ]
  },
  {
    "number": 91,
    "title": "CONTRIBUTING: Verbiage to minimize automated implications by transitive reduction",
    "created_at": "2024-09-28T22:47:02Z",
    "closed_at": "2024-10-04T01:04:06Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/91",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/91/comments",
    "author": "vlad902",
    "comments": [
      {
        "user": "Shreyas4991",
        "created_at": "2024-09-28T22:56:55Z",
        "body": "I recommend adding instructions about how to actually run and use the script. Perhaps you could automate the running with a CI action and post suggestions on any given PR as a list of duplicates?"
      },
      {
        "user": "Shreyas4991",
        "created_at": "2024-09-28T22:59:00Z",
        "body": "One possibility is to write a separate markdown file that explains the issue of duplicates and how to use your scripts to triage them in detail and just link to it CONTRIBUTION.md"
      },
      {
        "user": "vlad902",
        "created_at": "2024-09-28T23:03:44Z",
        "body": "> One possibility is to write a separate markdown file that explains the issue of duplicates and how to use your scripts to triage them in detail and just link to it CONTRIBUTION.md\r\n\r\nThat's a good idea, I'll look at doing this tomorrow."
      },
      {
        "user": "vlad902",
        "created_at": "2024-09-30T18:13:56Z",
        "body": "Sorry for the delay on this, the number of implementations of graph algos has seemingly doubled since I opened this change, maybe it makes sense to just mention how to get implications and tell people to ask on Zulip if they need further help? It seems like in ~2 days or so this will probably have a canonical solution."
      },
      {
        "user": "Shreyas4991",
        "created_at": "2024-09-30T19:38:40Z",
        "body": "> Sorry for the delay on this, the number of implementations of graph algos has seemingly doubled since I opened this change, maybe it makes sense to just mention how to get implications and tell people to ask on Zulip if they need further help? It seems like in ~2 days or so this will probably have a canonical solution.\n\nIn that case it would be nice to have a separate zulip thread for this. The link to the topic should be in the contribution file to guide users to the right chat."
      },
      {
        "user": "vlad902",
        "created_at": "2024-10-03T15:05:42Z",
        "body": "So, it's my fault for having let this languish, and I'm reviving this as this exact thing came up in #216 today. I realized was able to actually point them to the EquationSearch tool README since it already specifically calculates this reduction and includes a list of commands.\r\n\r\nIf you think it's still better to have an explicit runbook for automated theorem provers than the current link, I'd be happy to start that--I think I've been loathe to do so because I suspect I am probably the only person using my ruby tooling so I don't want to point to it as being the 'canonical' way; however having a link to \"See how someone else solved this\" seems less like setting the standard of The One True Way™."
      },
      {
        "user": "teorth",
        "created_at": "2024-10-03T15:23:04Z",
        "body": "I think the perfect shouldn't be the enemy of the good.  By all means note your tool on CONTRIBUTING.md and in Zulip as one way to perform transitive reduction, but not claim that it is the canonical solution (though, if it works well enough for all other contributors, it may well become the defacto solution)."
      },
      {
        "user": "Shreyas4991",
        "created_at": "2024-10-03T15:25:18Z",
        "body": "I have a proposal: create a bulletted list of methods to use tools for graph reduction and list yours. Create a folder called `docs` that contains a markdown file explaining how to use your scripts. Link to your docs in one of the bullet items of the list in CONTRIBUTING.md\n\nAs it is I find that file growing rather too large "
      },
      {
        "user": "vlad902",
        "created_at": "2024-10-03T18:06:19Z",
        "body": "I've updated it and left a TODO for reducing non-implications in `docs/graph_operations.md` as I haven't worked with it and I'm not sure the tooling. @nomeata Do you know if there is there scripts or any tooling to reduce non-implications I can point to somewhere?"
      }
    ]
  },
  {
    "number": 83,
    "title": "Code to find dual equations",
    "created_at": "2024-09-28T19:48:58Z",
    "closed_at": "2024-09-28T20:14:39Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/83",
    "body": "Fixes #72.\r\n\r\nIt might be nice to be able to also produce a proof of the duality of each of these equations in Lean. Right now you have to trust in my (and Claude's) coding ability. I believe it to be correct but that's not saying much.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/83/comments",
    "author": "carlini",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-09-28T19:56:45Z",
        "body": "Once we have #36 we should be able to formalize duality in Lean, but for now a numerically generated list should be fine.  We can at least numerically test whether various numerically generated sets of implications are duality-invariant, which presumably they should be if they were generated by a duality-invariant scheme."
      }
    ]
  },
  {
    "number": 75,
    "title": "SUBGRAPH: Add the implications/anti-implications between 23 and the other equations as conjecture statements.",
    "created_at": "2024-09-28T18:28:58Z",
    "closed_at": "2024-09-29T13:37:35Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/75",
    "body": "Note that 23 is dual to 8, so one should be able to adapt the implications involving 8.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/75/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "ChienYungChi",
        "created_at": "2024-09-29T11:39:04Z",
        "body": "claim"
      },
      {
        "user": "ChienYungChi",
        "created_at": "2024-09-29T11:50:59Z",
        "body": "propose PR #101"
      }
    ]
  },
  {
    "number": 74,
    "title": "SUBGRAPH: Prove 39 and 45 are equivalent",
    "created_at": "2024-09-28T18:27:28Z",
    "closed_at": "2024-09-28T21:17:18Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/74",
    "body": "This is dual to the existing equivalence of 38 and 42.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/74/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "Shiney",
        "created_at": "2024-09-28T20:35:00Z",
        "body": "claim"
      },
      {
        "user": "Shiney",
        "created_at": "2024-09-28T20:46:42Z",
        "body": "propose PR #86 "
      },
      {
        "user": "Shreyas4991",
        "created_at": "2024-09-28T21:07:56Z",
        "body": "@pitmonticone the propose action doesn't seem to have worked here. Keeping you in the loop. I'll manually add the PR"
      },
      {
        "user": "Shiney",
        "created_at": "2024-09-28T21:14:30Z",
        "body": "@Shreyas4991  wasn't it already linked because I added it as a comment to the PR?"
      },
      {
        "user": "Shreyas4991",
        "created_at": "2024-09-28T21:33:26Z",
        "body": "It should have been, but much like the rest of the project, the use of automation for this style of task management is an ongoing experiment. Sometimes the CI action doesn't kick in and we have to debug the cause.  It is for this reason that I have noted in the contribution doc that we are stepping in to handle these tasks manually from time to time.\r\n\r\nWhat complicates matters is that github has different ways to build this automation. For example a default workflow takes care of completed tasks, but we have to write some github actions to do other things."
      }
    ]
  },
  {
    "number": 72,
    "title": "TOOL: code to compute the equation number of the dual of an equation",
    "created_at": "2024-09-28T18:17:13Z",
    "closed_at": "2024-09-28T20:14:40Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/72",
    "body": "Example: Equation4564 is `x ∘ (y ∘ z) = (w ∘ y) ∘ z`.  Reversing all operations gives `(z ∘ y) ∘ = z ∘ (y ∘ w)`, which after relabeling and symmetry is Equation 4513, `x ∘ (y ∘ z) = (x ∘ y) ∘ w`.  Thus 4564 and 4513 are duals.  A code to output the dual of any given equation, and/or a table of equations and their duals, would be useful for the project.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/72/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "carlini",
        "created_at": "2024-09-28T19:01:08Z",
        "body": "I think I have a tool that does this, but in another issue (#77) you write \"Note that 4378 is dual to 4522, so one should be able to adapt the proofs of several implications.\"\r\n\r\nBut\r\n`equation 4378 := x ∘ (y ∘ z) = w ∘ (u ∘ z)`\r\nand\r\n`equation 4522 := x ∘ (y ∘ z) = (x ∘ w) ∘ u`\r\n\r\nwhich doesn't match my understanding of dual as you've written it here, because if you flip the first you get `(z ∘ y) ∘ x = (z ∘ u) ∘ w` which doesn't structurally match the second  `x ∘ (y ∘ z) = (x ∘ w) ∘ u`."
      },
      {
        "user": "teorth",
        "created_at": "2024-09-28T19:20:35Z",
        "body": "Oops, you are right, 4522 is dual to 4579, not 4378.  Will fix this ASAP.  (And this is why we need an automated tool to perform duality, rather than doing it by hand!)"
      },
      {
        "user": "carlini",
        "created_at": "2024-09-28T19:26:38Z",
        "body": "If my understanding is right, there are 2305 equations with a corresponding dual which is 98.2%. Here are some duals\r\n\r\n| Equation | Dual |\r\n| ----- | ----- |\r\n| Equation5[(x = (y ∘ x))] | Equation4[(x = (x ∘ y))] |\r\n| Equation23[(x = ((x ∘ x) ∘ x))] | Equation8[(x = (x ∘ (x ∘ x)))] |\r\n| Equation24[(x = ((x ∘ x) ∘ y))] | Equation13[(x = (y ∘ (x ∘ x)))] |\r\n| Equation25[(x = ((x ∘ y) ∘ x))] | Equation10[(x = (x ∘ (y ∘ x)))] |\r\n| Equation26[(x = ((x ∘ y) ∘ y))] | Equation16[(x = (y ∘ (y ∘ x)))] |\r\n| Equation27[(x = ((x ∘ y) ∘ z))] | Equation19[(x = (y ∘ (z ∘ x)))] |\r\n| Equation28[(x = ((y ∘ x) ∘ x))] | Equation9[(x = (x ∘ (x ∘ y)))] |\r\n| Equation29[(x = ((y ∘ x) ∘ y))] | Equation14[(x = (y ∘ (x ∘ y)))] |\r\n| ... | ... |\r\n| Equation4690[(((x ∘ y) ∘ z) = ((w ∘ y) ∘ u))] | Equation4375[((x ∘ (y ∘ z)) = (w ∘ (y ∘ u)))] |\r\n| Equation4691[(((x ∘ y) ∘ z) = ((w ∘ z) ∘ y))] | Equation4363[((x ∘ (y ∘ z)) = (y ∘ (x ∘ w)))] |\r\n| Equation4692[(((x ∘ y) ∘ z) = ((w ∘ z) ∘ u))] | Equation4368[((x ∘ (y ∘ z)) = (y ∘ (w ∘ u)))] |\r\n| Equation4693[(((x ∘ y) ∘ z) = ((w ∘ u) ∘ z))] | Equation4361[((x ∘ (y ∘ z)) = (x ∘ (w ∘ u)))] |\r\n| Equation4694[(((x ∘ y) ∘ z) = ((w ∘ u) ∘ v))] | Equation4379[((x ∘ (y ∘ z)) = (w ∘ (u ∘ v)))] |\r\n\r\nI'll add the script that generates this, where should I dump the full output table? (I'll probably also list the 84 equations that have no dual."
      },
      {
        "user": "teorth",
        "created_at": "2024-09-28T19:32:05Z",
        "body": "Hmm, I guess we can create a top-level `data` directory for this sort of thing (it could also go in `scripts`, but perhaps it is conceptually better to separate the code from the data it generates"
      }
    ]
  },
  {
    "number": 66,
    "title": "[TEST] Propose PR Workflow",
    "created_at": "2024-09-28T16:47:06Z",
    "closed_at": "2024-09-28T17:31:19Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/66",
    "body": "\r\n\r\nCloses #63",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/66/comments",
    "author": "pitmonticone",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-09-28T16:53:16Z",
        "body": "propose PR #63 "
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-09-28T16:57:18Z",
        "body": "propose PR #63 "
      },
      {
        "user": "Shreyas4991",
        "created_at": "2024-09-28T17:01:04Z",
        "body": "We want the PR propose comment to be made on the issue"
      }
    ]
  },
  {
    "number": 63,
    "title": "[TEST] Claim, Disclaim and Link",
    "created_at": "2024-09-28T16:32:56Z",
    "closed_at": "2024-09-28T18:54:09Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/63",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/63/comments",
    "author": "pitmonticone",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-09-28T16:33:14Z",
        "body": "claim"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-09-28T16:38:04Z",
        "body": "disclaim"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-09-28T16:41:11Z",
        "body": "claim"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-09-28T17:22:27Z",
        "body": "propose PR #66 "
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2024-09-28T17:22:36Z",
        "body": "Linking PR #66 to this issue."
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-09-28T17:30:24Z",
        "body": "propose PR #66 "
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-09-28T17:35:24Z",
        "body": "propose PR #70"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-09-28T17:42:30Z",
        "body": "withdraw PR #70"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-09-28T18:53:32Z",
        "body": "propose PR #70"
      }
    ]
  },
  {
    "number": 58,
    "title": " Show there is some implication which is only falsified in an infinite magma",
    "created_at": "2024-09-28T15:54:15Z",
    "closed_at": "2024-09-29T05:18:13Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/58",
    "body": "I'm not sure I edited the blueprint correctly",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/58/comments",
    "author": "Command-Master",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-09-28T16:18:50Z",
        "body": "Looks good to me.  Only minor comments:\r\n\r\n- One should add a \\leanok to the proof as well as to the theorem, since you not only formalized the statements in Lean, but also provided proofs.\r\n- Technically we are supposed to enclose each separate Lean contribution in their own namespace to avoid collisions, though in this case this is unlikely since we don't expect `EquationKis` to show up elsewhere.  (Though we could add it as Equation #4695, I guess, since it has some interest...)"
      },
      {
        "user": "teorth",
        "created_at": "2024-09-28T17:16:44Z",
        "body": "Ah, once you put the Lean implications in a namespace you have to adjust the blueprint \\lean{} references accordingly.  I got caught out by this also.  I'll update CONTRIBUTING.md to warn about this."
      },
      {
        "user": "Command-Master",
        "created_at": "2024-09-28T17:54:04Z",
        "body": "Could you expand on this? I was unable to resolve this without adding `import equational_theories.InfModel` to `equational_theories.lean`."
      },
      {
        "user": "teorth",
        "created_at": "2024-09-28T19:11:43Z",
        "body": "Oh, right, you should do that also."
      }
    ]
  },
  {
    "number": 51,
    "title": "Eq3 implications",
    "created_at": "2024-09-28T13:13:36Z",
    "closed_at": "2024-09-28T14:45:45Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/51",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/51/comments",
    "author": "kant2002",
    "comments": [
      {
        "user": "kant2002",
        "created_at": "2024-09-28T13:16:20Z",
        "body": "Okay. I also should somehow find #33 first 😄 "
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-09-28T14:45:41Z",
        "body": "Thanks @kant2002 "
      }
    ]
  },
  {
    "number": 46,
    "title": "proof of 46 implies 40",
    "created_at": "2024-09-28T07:29:09Z",
    "closed_at": "2024-09-28T09:10:43Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/46",
    "body": "(had a proof_wanted)",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/46/comments",
    "author": "goens",
    "comments": [
      {
        "user": "Shreyas4991",
        "created_at": "2024-09-28T09:00:55Z",
        "body": "Hey, I'll approve this PR for CI, but do please follow the PR claim process mentioned in the Outstanding tasks v2 thread. We don't want people to end up working in parallel and find their work not being used. If there isn't a task on the dashboard that matches your request, do mention it on zulip and I or one of the others will create one. Of course for smaller PRs this might not be the best answer. But we are currently experimenting with organising and automating task management at scale."
      },
      {
        "user": "goens",
        "created_at": "2024-09-28T13:57:11Z",
        "body": "thanks! yes, sorry, I didn't see any task for this ine and it was small, but for anything meaningful I will do in the future! "
      }
    ]
  },
  {
    "number": 44,
    "title": "Auto-generated proofs for all laws trivially implying Eq2 (singleton) and Eq46 (constant)",
    "created_at": "2024-09-28T04:59:30Z",
    "closed_at": "2024-09-28T15:38:03Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/44",
    "body": "This is done with a two large files, not with any kind of introspection on equation structure.\r\n\r\n815 theorems are included for singletons and 85 for constant laws.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/44/comments",
    "author": "amirlb",
    "comments": [
      {
        "user": "teorth",
        "created_at": "2024-09-28T10:35:27Z",
        "body": "Can the code be refactored using the new AllEquations.lean? I guess one should still record the list of constant and singleton equations somewhere, but not necessarily as a redundant list of defs"
      },
      {
        "user": "amirlb",
        "created_at": "2024-09-28T11:23:24Z",
        "body": "> Can the code be refactored using the new AllEquations.lean? I guess one should still record the list of constant and singleton equations somewhere, but not necessarily as a redundant list of defs\r\n\r\nDone"
      },
      {
        "user": "teorth",
        "created_at": "2024-09-28T16:11:27Z",
        "body": "Congrats, this is the first approved automated contribution to the implication graph!  I've announced it on the front page and also made a blueprint chapter (should appear shortly as chapter 6).  If you could update that chapter to describe the process to generate the contributions when you have a chance, that would be great."
      },
      {
        "user": "Command-Master",
        "created_at": "2024-09-30T09:17:27Z",
        "body": "@amirlb Could you please also PR the code used to produce these files?"
      },
      {
        "user": "amirlb",
        "created_at": "2024-10-01T15:28:19Z",
        "body": "> @amirlb Could you please also PR the code used to produce these files?\r\n\r\nWhere would be an appropriate place to put it? These files are still in the main `Generated/` directory, should I move them to a subdirectory and add a generating script there?"
      }
    ]
  },
  {
    "number": 38,
    "title": "SUBGRAPH: Prove that 38 and 42 are equivalent",
    "created_at": "2024-09-28T01:45:41Z",
    "closed_at": "2024-09-28T01:50:59Z",
    "labels": [
      "awaiting-review"
    ],
    "url": "https://github.com/teorth/equational_theories/pull/38",
    "body": "This corresponds to issue \"SUBGRAPH: Prove that 38 and 42 are equivalent.\"",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/38/comments",
    "author": "ChienYungChi",
    "comments": [
      {
        "user": "ChienYungChi",
        "created_at": "2024-09-28T01:47:11Z",
        "body": "awaiting-review"
      },
      {
        "user": "Shreyas4991",
        "created_at": "2024-09-28T01:48:53Z",
        "body": "@ChienYungChi : Can you check and resolve the merge conflicts. In all likelihood, merging the `main` branch into your PR should fix it."
      },
      {
        "user": "Shreyas4991",
        "created_at": "2024-09-28T01:51:38Z",
        "body": "@ChienYungChi was the PR closing accidental? If yes, then it can be re-opened"
      },
      {
        "user": "ChienYungChi",
        "created_at": "2024-09-28T01:57:47Z",
        "body": "Hi, I resolved the conflict and proposed a new PR. I don’t know if the\r\nclosing was accidental. I didn't know about the closing until you told me."
      },
      {
        "user": "Shreyas4991",
        "created_at": "2024-09-28T02:06:24Z",
        "body": "You don't need to close a PR when resolving a merge conflict. I have linked yoir new PR. It is now in the review queue. Since I am manually moving PRs around for now, I apologise for delays in this process."
      },
      {
        "user": "ChienYungChi",
        "created_at": "2024-09-28T02:13:07Z",
        "body": "OK. I didn’t know that I could resolve that in the same PR, so I created another one. I didn’t close the old PR myself. Maybe it was closed because I discarded a commit in my fork before creating the new commit. Next time I will just add commits instead of discarding old ones first. I apologize for this inconvenience."
      }
    ]
  },
  {
    "number": 35,
    "title": "SUBGRAPH: Add the implications/anti-implications between 168 and the other equations as conjecture statements.",
    "created_at": "2024-09-28T01:30:20Z",
    "closed_at": "2024-10-02T18:35:09Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/35",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/35/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "few",
        "created_at": "2024-09-29T19:05:03Z",
        "body": "I'm not sure what exactly should happen here. In #103, I have a number of theorems involving equation 168 and others for which a similar issue exists."
      },
      {
        "user": "teorth",
        "created_at": "2024-09-30T00:26:55Z",
        "body": "If you already have some implications relating 168 with other Subgraph equations, you can import the relevant Lean file into `Subgraph.lean` and maybe make a comment within the `Subgraph.lean` file of the relevant implications that come from imports.  (Eventually, our automated tools should be able to work out what all the available implications are from scraping the relevant Lean files, but in any event a human-readable comment is also useful.)  Any remaining implications involving 168 that you are unsure of can be left as conjectures (if you have a good guess whether the implication is true or false), or as a comment that the implication is open.   You can report all this on this issue and I can then assign further tasks accordingly to resolve the remaining conjectures."
      },
      {
        "user": "teorth",
        "created_at": "2024-10-02T18:35:09Z",
        "body": "Closing due to obsolete workflow now that more automated tools are available."
      }
    ]
  },
  {
    "number": 34,
    "title": "SUBGRAPH: Prove that 38 and 42 are equivalent",
    "created_at": "2024-09-28T01:24:51Z",
    "closed_at": "2024-09-28T04:30:10Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/34",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/34/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "ChienYungChi",
        "created_at": "2024-09-28T01:28:32Z",
        "body": "claim"
      },
      {
        "user": "ChienYungChi",
        "created_at": "2024-09-28T01:46:22Z",
        "body": "propose PR #38"
      },
      {
        "user": "ChienYungChi",
        "created_at": "2024-09-28T01:54:56Z",
        "body": "propose PR #39 (resolved conflict)"
      }
    ]
  },
  {
    "number": 33,
    "title": "SUBGRAPH: Prove that 39 and 42 are equivalent",
    "created_at": "2024-09-28T01:24:47Z",
    "closed_at": "2024-09-28T03:32:14Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/33",
    "body": null,
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/33/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "Command-Master",
        "created_at": "2024-09-28T02:15:21Z",
        "body": "This isn't true---the naturals with `x ∘ y = y` satisfy 39 (`x ∘ x = y ∘ x`) but not 42 (`x ∘ y = x ∘ z`), and the naturals with `x ∘ y = x` satisfy 42 but not 39"
      },
      {
        "user": "teorth",
        "created_at": "2024-09-28T03:32:14Z",
        "body": "Oh, good point, that was silly on my part.  "
      }
    ]
  },
  {
    "number": 30,
    "title": "SUBGRAPH: Add the implications/anti-implications between 8 and the other equations as proof_wanted statements.",
    "created_at": "2024-09-28T01:24:32Z",
    "closed_at": "2024-09-28T19:51:41Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/issues/30",
    "body": "Only a generating set of implications (and anti-implications) needs to be added to Subgraph.lean, of course.  Human-readable sketches of proofs can be added in comments.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/30/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "edegeltje",
        "created_at": "2024-09-28T13:54:18Z",
        "body": "claim"
      },
      {
        "user": "edegeltje",
        "created_at": "2024-09-28T14:13:40Z",
        "body": "fwiw, it seems the implications in the graph have all been added already. i'm looking now if the non-implications are all added..."
      },
      {
        "user": "edegeltje",
        "created_at": "2024-09-28T19:14:22Z",
        "body": "propose PR #81"
      }
    ]
  },
  {
    "number": 29,
    "title": "TOOL: Given one or more Lean files, extract the implication status of all equations appearing in the file",
    "created_at": "2024-09-28T01:24:27Z",
    "closed_at": "2024-10-01T04:57:42Z",
    "labels": [
      "project-task"
    ],
    "url": "https://github.com/teorth/equational_theories/issues/29",
    "body": "Given one or more Lean files as input, extract all the implications and proof_wanted statements from that file.  Then, for any two equations i, j that appear anywhere in these implications, report the status of the implication i => j as one of the following:\n\n- Explicitly proven.  This implication is an explicit theorem in the files.\n- Implicitly proven.  This implication is not explicitly a theorem, but can be derived from the explicit theorems in the files.\n- Explicitly conjectured.  This implication is not proven, but is an explicit proof_wanted in the files.\n- Implicitly conjectured.  This implication is not proven or explicitly conjectured, but follows from the explicit theorems and conjectures in the files.\n- Open.  The implication is not even conjectured to be true or false.\n- Implicitly conjectured false.  The implication is not disproven or explicitly conjectured false, but its falsity follows from the explicit theorems and conjectures in the files.\n- Explicitly conjectured false.  The negation of this implication is an explicit proof_wanted in the files, but this negation does not follow from proven theorems.\n- Implicitly disproven.  The negation of this implication is not an explicit theorem in the files, but follows from these theorems.\n- Explicitly disproven.  The negation of this implication is an explicit theorem in the files.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/29/comments",
    "author": "teorth",
    "comments": [
      {
        "user": "Command-Master",
        "created_at": "2024-09-28T02:19:43Z",
        "body": "claim"
      },
      {
        "user": "Command-Master",
        "created_at": "2024-09-28T02:30:21Z",
        "body": "Should this tool be a metaprogram, or is it fine for it to shallowly parse the files (i.e. search for `(G: Type*) [Magma G] (G: Equation(\\d+) G) : Equation(\\d+) G` and `∃ (G: Type) (_: Magma G), Equation(\\d+) G ∧ ¬ Equation(\\d+) G`, and add special suuport for `Equation1_true`)?"
      },
      {
        "user": "dwrensha",
        "created_at": "2024-09-28T03:05:21Z",
        "body": "#22 demonstrates a starting point for one way to do this kind of analysis directly in Lean."
      },
      {
        "user": "teorth",
        "created_at": "2024-09-28T03:17:30Z",
        "body": "> Should this tool be a metaprogram, or is it fine for it to shallowly parse the files (i.e. search for `(G: Type*) [Magma G] (G: Equation(\\d+) G) : Equation(\\d+) G` and `∃ (G: Type) (_: Magma G), Equation(\\d+) G ∧ ¬ Equation(\\d+) G`, and add special suuport for `Equation1_true`)?\r\n\r\nIn the longer term I think a metaprogram would be the most robust solution (that would also be adaptable for other projects), but a \"quick and dirty\" shallow approach may be faster in the short term.  So it could go either way.  One compromise is to try to write a quick and dirty program, but in a way that many of the components of the code could be refactored into a more robust long-term solution later."
      },
      {
        "user": "Command-Master",
        "created_at": "2024-09-28T03:25:00Z",
        "body": "If #22 could be modified so `Implication` contains whether it's conjectured I could directly process the `Output` structure it produces"
      },
      {
        "user": "Command-Master",
        "created_at": "2024-09-28T05:17:59Z",
        "body": "Isn't this already implemented in `scripts/process_implications.py`?"
      },
      {
        "user": "teorth",
        "created_at": "2024-09-28T19:27:09Z",
        "body": "A feature request: it should be possible to specify a set of equations to restrict to, that may be smaller than the full set of equations considered by the full set of lean imports.  For instance, `Subgraph.lean` may only be interested in the equations from `Equations.lean`, but may also import some large generated files of implications that draw from the much larger `AllEquations.lean`.  Nevertheless one might only be interested in generating a table of implications from the `Equations.lean` list only.\r\n\r\nAlso, one should not assume that the full list of equations under consideration is numbered consecutively.  (There is discussion to include some selected longer equations, which under our standard numbering system, could be assigned a number far larger than 4694.)"
      },
      {
        "user": "dwrensha",
        "created_at": "2024-09-29T01:03:46Z",
        "body": "I believe that #93 and #85 together will provide easy access to all of the data needed to support the queries described above."
      },
      {
        "user": "Command-Master",
        "created_at": "2024-09-29T02:05:40Z",
        "body": "> A feature request: it should be possible to specify a set of equations to restrict to, that may be smaller than the full set of equations considered by the full set of lean imports. For instance, `Subgraph.lean` may only be interested in the equations from `Equations.lean`, but may also import some large generated files of implications that draw from the much larger `AllEquations.lean`. Nevertheless one might only be interested in generating a table of implications from the `Equations.lean` list only.\r\n> \r\n> Also, one should not assume that the full list of equations under consideration is numbered consecutively. (There is discussion to include some selected longer equations, which under our standard numbering system, could be assigned a number far larger than 4694.)\r\n\r\nIn these cases should it contain equations on the restricted set implied by transitivity from equations outside the set, or should it from the start only consider implications about those equations?"
      },
      {
        "user": "teorth",
        "created_at": "2024-09-29T04:50:03Z",
        "body": "I'd say the former; we're interested in maximizing the number of implications available in the set of interest.  (In principle one could try to play some restricted game in which one is somehow \"not allowed\" to use certain equations, but I can't think of any scenario for our project where this would be desirable.)"
      },
      {
        "user": "Command-Master",
        "created_at": "2024-09-29T13:45:32Z",
        "body": "Another feature I found useful in my prototype and plan to add is having \"#check_closure EquationA EquationB\", to output the status of implications between EquationA and EquationB"
      },
      {
        "user": "Command-Master",
        "created_at": "2024-09-30T05:40:47Z",
        "body": "propose PR #126"
      }
    ]
  },
  {
    "number": 26,
    "title": "Update CONTRIBUTING.md",
    "created_at": "2024-09-27T23:17:57Z",
    "closed_at": "2024-09-29T13:56:23Z",
    "labels": [
      "do-not-merge"
    ],
    "url": "https://github.com/teorth/equational_theories/pull/26",
    "body": "This is a PR in response to #25 ",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/26/comments",
    "author": "Shreyas4991",
    "comments": [
      {
        "user": "Shreyas4991",
        "created_at": "2024-09-27T23:56:16Z",
        "body": "awaiting-review"
      },
      {
        "user": "Shreyas4991",
        "created_at": "2024-09-28T00:17:45Z",
        "body": "project-task"
      },
      {
        "user": "pitmonticone",
        "created_at": "2024-09-29T13:32:04Z",
        "body": "Maybe we should close the one, @Shreyas4991? "
      }
    ]
  },
  {
    "number": 20,
    "title": "Prove equations 41 and 46 are equivalent",
    "created_at": "2024-09-27T13:40:34Z",
    "closed_at": "2024-09-27T15:59:40Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/20",
    "body": "I did this as two implications as no other example of equivalence yet ",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/20/comments",
    "author": "Shiney",
    "comments": [
      {
        "user": "pitmonticone",
        "created_at": "2024-09-27T15:59:32Z",
        "body": "Thanks! "
      }
    ]
  },
  {
    "number": 12,
    "title": "Add equations of 1 variable and their implications",
    "created_at": "2024-09-26T22:23:49Z",
    "closed_at": "2024-09-27T10:22:04Z",
    "labels": [],
    "url": "https://github.com/teorth/equational_theories/pull/12",
    "body": "Auto-generated by a very primitive brute force method.",
    "comments_url": "https://api.github.com/repos/teorth/equational_theories/issues/12/comments",
    "author": "vlad902",
    "comments": [
      {
        "user": "vlad902",
        "created_at": "2024-09-26T22:36:30Z",
        "body": "Ah, I'm missing the blueprint updates."
      },
      {
        "user": "teorth",
        "created_at": "2024-09-27T05:20:04Z",
        "body": "Unfortunately there is a merge conflict with the file.  Otherwise it looks good!"
      },
      {
        "user": "vlad902",
        "created_at": "2024-09-27T10:21:51Z",
        "body": "Closing this in favor of a more general solution for all implications solvable by trivial rewrites that I'm working on now."
      }
    ]
  }
]