[
  {
    "number": 58,
    "title": " batch功能支持",
    "created_at": "2025-02-11T03:52:43Z",
    "closed_at": "2025-02-14T08:14:53Z",
    "labels": [],
    "url": "https://github.com/lovemefan/SenseVoice.cpp/pull/58",
    "body": "1. 自用的vad识别+切分方案转移到examples/zcr_main中。\r\n2. batch相关外面的接口新增一套：sense_voice_batch_pcm_to_feature_with_state，sense_voice_batch_full，sense_voice_batch_print_output。以及一个方便使用的接口sense_voice_batch_pcmf。\r\n3. zcr_main中的main.cc简化了main.cc中用不到的参数，并且取消了n_processor的实现。\r\n    1.  n_processor设计上适配于多个CPU，在SenseVoice.cpp和whisper.cpp上均存在。\r\n    2. 在行为上，程序会创建n_processor个模型，每一个CPU各有一个，并且音频切割是极为暴力的平均切分，而没有考虑是否会切断音频的。\r\n    3. 多线程参数-t没有动，设计上是单个CPU中适配多核的参数，只是加速了单次识别的预处理（不过预处理之后就是模型识别了）。\r\n4. sense-voice-encoder中一小段FSMN相关的有2个关于batch的实现。",
    "comments_url": "https://api.github.com/repos/lovemefan/SenseVoice.cpp/issues/58/comments",
    "author": "Ivy233",
    "comments": [
      {
        "user": "lovemefan",
        "created_at": "2025-02-11T05:52:53Z",
        "body": "太棒了👏👏👏，十分感谢"
      }
    ]
  },
  {
    "number": 57,
    "title": "Update main.cc",
    "created_at": "2025-02-10T07:00:12Z",
    "closed_at": "2025-02-10T07:04:30Z",
    "labels": [],
    "url": "https://github.com/lovemefan/SenseVoice.cpp/pull/57",
    "body": "Remove redundant line.",
    "comments_url": "https://api.github.com/repos/lovemefan/SenseVoice.cpp/issues/57/comments",
    "author": "znsoftm",
    "comments": [
      {
        "user": "lovemefan",
        "created_at": "2025-02-10T07:04:33Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 49,
    "title": "功能合并与一些bug修复。",
    "created_at": "2025-01-14T09:24:29Z",
    "closed_at": "2025-01-23T08:32:18Z",
    "labels": [],
    "url": "https://github.com/lovemefan/SenseVoice.cpp/pull/49",
    "body": "单纯的代码合并，合并范围：\r\n1. stream（麦克风输入）功能接入。\r\n2. 新增common-sdl代码相比whisper.cpp同名代码略有修改。\r\n3. 修复“喂喂喂”识别成“喂”，并且与“%%%”识别成一个“%”区分开。\r\n4. 整理输出接口，使printf从语音识别功能中分离开。\r\n5. 部分代码空格对齐强迫症。\r\n6. 没有libsdl2-dev时，不编译sense-voice-stream\r\n未合并功能：\r\n1. main.cc（文件切割）保留原来的处理，除了输出有所修改。",
    "comments_url": "https://api.github.com/repos/lovemefan/SenseVoice.cpp/issues/49/comments",
    "author": "Ivy233",
    "comments": [
      {
        "user": "lovemefan",
        "created_at": "2025-01-23T08:31:40Z",
        "body": "十分感谢"
      }
    ]
  },
  {
    "number": 46,
    "title": "std::filesystem出现链接错误",
    "created_at": "2025-01-13T08:29:26Z",
    "closed_at": "2025-01-21T09:49:47Z",
    "labels": [],
    "url": "https://github.com/lovemefan/SenseVoice.cpp/issues/46",
    "body": "main分支拉下来直接编译可以拿到这样的报错：\r\n```\r\n/usr/bin/ld: ../../lib/libggml.a(ggml-backend-reg.cpp.o): in function `ggml_backend_load_best(char const*, bool) [clone .constprop.148]':\r\nggml-backend-reg.cpp:(.text+0x1a30): undefined reference to `std::filesystem::__cxx11::path::_M_split_cmpts()'\r\n/usr/bin/ld: ggml-backend-reg.cpp:(.text+0x1a3d): undefined reference to `std::filesystem::status(std::filesystem::__cxx11::path const&)'\r\n/usr/bin/ld: ggml-backend-reg.cpp:(.text+0x1e08): undefined reference to `std::filesystem::__cxx11::path::_M_split_cmpts()'\r\n/usr/bin/ld: ggml-backend-reg.cpp:(.text+0x1e15): undefined reference to `std::filesystem::status(std::filesystem::__cxx11::path const&)'\r\n/usr/bin/ld: ggml-backend-reg.cpp:(.text+0x2018): undefined reference to `std::filesystem::__cxx11::path::_M_split_cmpts()'\r\n/usr/bin/ld: ggml-backend-reg.cpp:(.text+0x202e): undefined reference to `std::filesystem::__cxx11::directory_iterator::directory_iterator(std::filesystem::__cxx11::path const&, std::filesystem::directory_options, std::error_code*)'\r\n/usr/bin/ld: ggml-backend-reg.cpp:(.text+0x2136): undefined reference to `std::filesystem::__cxx11::directory_iterator::operator*() const'\r\n/usr/bin/ld: ggml-backend-reg.cpp:(.text+0x226b): undefined reference to `std::filesystem::__cxx11::path::_M_find_extension() const'\r\n/usr/bin/ld: ggml-backend-reg.cpp:(.text+0x235a): undefined reference to `std::filesystem::__cxx11::path::_M_split_cmpts()'\r\n/usr/bin/ld: ggml-backend-reg.cpp:(.text+0x24cf): undefined reference to `std::filesystem::__cxx11::directory_iterator::operator++()'\r\n/usr/bin/ld: ggml-backend-reg.cpp:(.text+0x2644): undefined reference to `std::filesystem::status(std::filesystem::__cxx11::path const&)'\r\ncollect2: error: ld returned 1 exit status\r\n```\r\n环境：g++ 8.3.0\r\n看起来是因为std::filesystem需要使用C++17才可以修复，当前g++是不支持这个的，需要在target_link_libraries最后加一个stdc++fs。\r\n不过这个是不是GGML本身的问题？",
    "comments_url": "https://api.github.com/repos/lovemefan/SenseVoice.cpp/issues/46/comments",
    "author": "Ivy233",
    "comments": [
      {
        "user": "lovemefan",
        "created_at": "2025-01-13T08:46:10Z",
        "body": "可能是的，GGML更新频率太快了。最近到年前因为太忙我应该都没时间更新项目了，如果有解决方案欢迎pr，谢谢"
      },
      {
        "user": "Ivy233",
        "created_at": "2025-01-14T02:50:24Z",
        "body": "还有一个问题想问下，模型支持kv-cache吗？看py版本没有发现对应的细节。"
      },
      {
        "user": "lovemefan",
        "created_at": "2025-01-14T03:22:19Z",
        "body": "sensevoice-small  是非自回归模型，不需要kv-cache"
      },
      {
        "user": "Ivy233",
        "created_at": "2025-01-14T09:28:43Z",
        "body": "> 可能是的，GGML更新频率太快了。最近到年前因为太忙我应该都没时间更新项目了，如果有解决方案欢迎pr，谢谢\r\n\r\n试图加了一下stdc++fs。。。能过linux但是不能过macos，估计windows也悬，要不要我先撤回去这个stdc++fs的提交。"
      },
      {
        "user": "Ivy233",
        "created_at": "2025-01-17T05:52:25Z",
        "body": "已经提pr了，要不要看看，加了麦克风输入的功能"
      }
    ]
  },
  {
    "number": 39,
    "title": "为什么sensevoice模型的输入是NXTX560？",
    "created_at": "2024-12-20T03:14:03Z",
    "closed_at": "2024-12-20T03:55:12Z",
    "labels": [],
    "url": "https://github.com/lovemefan/SenseVoice.cpp/issues/39",
    "body": "很多asr的输入是NXTX80, sensevoice的560是什么含义",
    "comments_url": "https://api.github.com/repos/lovemefan/SenseVoice.cpp/issues/39/comments",
    "author": "dlkht",
    "comments": [
      {
        "user": "lovemefan",
        "created_at": "2024-12-20T03:52:56Z",
        "body": "论文中LFR（lower frame rate）技术将7帧fbank （一帧80维）拼成了一帧，所以维度是560"
      },
      {
        "user": "dlkht",
        "created_at": "2024-12-20T03:53:50Z",
        "body": "谢谢"
      },
      {
        "user": "lovemefan",
        "created_at": "2024-12-20T03:55:12Z",
        "body": "不客气"
      }
    ]
  },
  {
    "number": 33,
    "title": "识别不出数字",
    "created_at": "2024-12-03T01:52:26Z",
    "closed_at": "2024-12-10T06:34:52Z",
    "labels": [],
    "url": "https://github.com/lovemefan/SenseVoice.cpp/issues/33",
    "body": "我在语音中说出1 2 3 4 5 6 7 8 9，只要是含有数字的，都识别不出来，这是咋回事呢",
    "comments_url": "https://api.github.com/repos/lovemefan/SenseVoice.cpp/issues/33/comments",
    "author": "TechManDexiang",
    "comments": [
      {
        "user": "lovemefan",
        "created_at": "2024-12-10T06:40:12Z",
        "body": "请问题解决了吗， 最近忙，还没来及回复"
      },
      {
        "user": "TechManDexiang",
        "created_at": "2024-12-13T07:34:12Z",
        "body": "问题解决了，这应该是我自己的问题，我是改了一下代码，生成了.so库，后来换成.a库就好了"
      },
      {
        "user": "lovemefan",
        "created_at": "2024-12-13T07:37:23Z",
        "body": "新版更新了vad模型，支持长音频了"
      }
    ]
  },
  {
    "number": 29,
    "title": "Fix multi percent",
    "created_at": "2024-11-20T07:04:01Z",
    "closed_at": "2024-11-20T07:10:58Z",
    "labels": [],
    "url": "https://github.com/lovemefan/SenseVoice.cpp/pull/29",
    "body": "多个百分号进行修复。\r\n支持withitn选项。\r\n略为优化下decode之后的输出int*来回复制的次数。",
    "comments_url": "https://api.github.com/repos/lovemefan/SenseVoice.cpp/issues/29/comments",
    "author": "Ivy233",
    "comments": [
      {
        "user": "lovemefan",
        "created_at": "2024-11-20T07:10:43Z",
        "body": "🤗🤗🤗感谢贡献"
      }
    ]
  },
  {
    "number": 28,
    "title": "想把senseVoice集成到qt程序中",
    "created_at": "2024-11-19T08:02:26Z",
    "closed_at": "2024-11-19T10:33:40Z",
    "labels": [],
    "url": "https://github.com/lovemefan/SenseVoice.cpp/issues/28",
    "body": "我把sensevoice集成到了qt中，想实现类似语音输入法的功能，但是我发现sensevoice对音频格式有要求，想知道具体要求是什么，什么样的pcm数据才能被识别。",
    "comments_url": "https://api.github.com/repos/lovemefan/SenseVoice.cpp/issues/28/comments",
    "author": "TechManDexiang",
    "comments": [
      {
        "user": "lovemefan",
        "created_at": "2024-11-19T08:20:51Z",
        "body": "需要16k 采样率， 单通道的wav音频， 最近在研究加入vad切分，将会支持更长音频输入、伪流式输入，会持续更新的"
      },
      {
        "user": "TechManDexiang",
        "created_at": "2024-11-19T08:25:08Z",
        "body": "直接录的pcm数据不行吗，我使用qt采集的pcm原始数据，但是识别不出来，下面是采集pcm的参数。\r\n```\r\nQAudioFormat format;\r\n\r\n    format.setSampleRate(16000);\r\n    format.setChannelCount(1);\r\n    format.setSampleSize(16);\r\n    format.setCodec(\"audio/pcm\");\r\n    format.setByteOrder(QAudioFormat::LittleEndian);\r\n    format.setSampleType(QAudioFormat::SignedInt);\r\n\r\n```"
      },
      {
        "user": "TechManDexiang",
        "created_at": "2024-11-19T09:40:45Z",
        "body": "已经解决了，问题出现在我对采集到的的pcm数据进行转换这里（QBytearray转换成vector<double>）"
      }
    ]
  },
  {
    "number": 27,
    "title": "百分号会输出三个%",
    "created_at": "2024-11-05T10:41:28Z",
    "closed_at": "2024-12-19T01:29:23Z",
    "labels": [],
    "url": "https://github.com/lovemefan/SenseVoice.cpp/issues/27",
    "body": "反馈一个bug，当音频中出现百分号这三个字的时候，有时会输出%%%。。。\r\nwhisper.cpp和原版的SenseVoice没有。",
    "comments_url": "https://api.github.com/repos/lovemefan/SenseVoice.cpp/issues/27/comments",
    "author": "Ivy233",
    "comments": [
      {
        "user": "lovemefan",
        "created_at": "2024-11-19T08:18:58Z",
        "body": "收到，最近较忙，会抽空解决的"
      },
      {
        "user": "lovemefan",
        "created_at": "2024-12-19T01:29:23Z",
        "body": "已解决 #29"
      }
    ]
  },
  {
    "number": 26,
    "title": "长音频识别效果较差",
    "created_at": "2024-10-22T10:43:17Z",
    "closed_at": "2024-12-19T01:29:41Z",
    "labels": [],
    "url": "https://github.com/lovemefan/SenseVoice.cpp/issues/26",
    "body": "个人这边检测发现：\r\n1. 最终state.ids长度只有1000左右时，基本都能识别到，输出也基本可读。\r\n2. 最终state.ids长度有8000左右时（对应的音频有8min），会出现大段大段的id=0的情况，一下子能跳好几百个token。\r\n想问下这种问题是否遇到过，有没有排查过值的原因？",
    "comments_url": "https://api.github.com/repos/lovemefan/SenseVoice.cpp/issues/26/comments",
    "author": "Ivy233",
    "comments": [
      {
        "user": "lovemefan",
        "created_at": "2024-10-24T02:14:49Z",
        "body": "有遇到过，这个是模型问题，#12 中有例子，此非流式模型适合先用vad切分成小段，然后再识别。vad模型得争取抽时间加一下才更加实用"
      },
      {
        "user": "lovemefan",
        "created_at": "2024-12-13T02:18:32Z",
        "body": "已更新vad，可以重新测试啦"
      }
    ]
  },
  {
    "number": 25,
    "title": "MacBook Pro M1 按照说明编译报错",
    "created_at": "2024-10-20T12:56:04Z",
    "closed_at": "2024-10-21T01:49:23Z",
    "labels": [],
    "url": "https://github.com/lovemefan/SenseVoice.cpp/issues/25",
    "body": "`/Users/soulmayon/desktop/ali/SenseVoice.cpp/sense-voice/csrc/sense-voice-decoder.cc:125:13: error: use of undeclared identifier 'ggml_backend_metal_set_n_cb'\r\n            ggml_backend_metal_set_n_cb(backend, n_threads);\r\n            ^\r\n/Users/soulmayon/desktop/ali/SenseVoice.cpp/sense-voice/csrc/sense-voice.cc:120:25: warning: unused variable 'key' [-Wunused-variable]\r\n            const char *key = gguf_get_key(gguf_ctx, i);\r\n                        ^\r\n/Users/soulmayon/desktop/ali/SenseVoice.cpp/sense-voice/csrc/sense-voice.cc:175:22: warning: unused variable 'scale' [-Wunused-variable]\r\n        const size_t scale = sense_voice.hparams.ftype ? 1 : 2;\r\n                     ^\r\n/Users/soulmayon/desktop/ali/SenseVoice.cpp/sense-voice/csrc/sense-voice.cc:262:20: warning: variable 'buffer_size' set but not used [-Wunused-but-set-variable]\r\n            size_t buffer_size = 32*1024; // need some extra room??\r\n                   ^\r\n/Users/soulmayon/desktop/ali/SenseVoice.cpp/sense-voice/csrc/sense-voice.cc:237:21: warning: unused variable 'hparams' [-Wunused-variable]\r\n        const auto &hparams = sense_voice.hparams;\r\n                    ^\r\n/Users/soulmayon/desktop/ali/SenseVoice.cpp/sense-voice/csrc/sense-voice.cc:229:12: warning: unused variable 'ctx_size' [-Wunused-variable]\r\n    size_t ctx_size = 0;\r\n           ^\r\n/Users/soulmayon/desktop/ali/SenseVoice.cpp/sense-voice/csrc/sense-voice.cc:231:21: warning: unused variable 'wtype' [-Wunused-variable]\r\n    const ggml_type wtype = sctx.wtype;\r\n                    ^\r\n/Users/soulmayon/desktop/ali/SenseVoice.cpp/sense-voice/csrc/sense-voice.cc:232:21: warning: unused variable 'vtype' [-Wunused-variable]\r\n    const ggml_type vtype =\r\n                    ^\r\n/Users/soulmayon/desktop/ali/SenseVoice.cpp/sense-voice/csrc/sense-voice-encoder.cc:113:9: error: use of undeclared identifier 'ggml_backend_metal_log_set_callback'\r\n        ggml_backend_metal_log_set_callback(g_state.log_callback,\r\n        ^\r\n/Users/soulmayon/desktop/ali/SenseVoice.cpp/examples/common-ggml.cc:250:17: warning: variable 'nelements' set but not used [-Wunused-but-set-variable]\r\n        int32_t nelements = 1;\r\n                ^\r\n/Users/soulmayon/desktop/ali/SenseVoice.cpp/examples/common-ggml.cc:336:21: warning: variable 'f32_data' is uninitialized when used here [-Wuninitialized]/Users/soulmayon/desktop/ali/SenseVoice.cpp/sense-voice/csrc/sense-voice-encoder.cc:\r\n163:13: error:                     f32_data[i] = ggml_fp16_to_fp32(data_f16[i]);\r\nuse of undeclared identifier 'ggml_backend_metal_set_n_cb'                    ^~~~~~~~\r\n\r\n            ggml_backend_metal_set_n_cb(backend, n_threads);\r\n            ^\r\n/Users/soulmayon/desktop/ali/SenseVoice.cpp/examples/common-ggml.cc:329:29: note: initialize the variable 'f32_data' to silence this warning\r\n            float * f32_data;\r\n                            ^\r\n                             = nullptr\r\n/Users/soulmayon/desktop/ali/SenseVoice.cpp/sense-voice/csrc/sense-voice-encoder.cc:458:17: warning: unused variable 'model' [-Wunused-variable]\r\n    const auto &model = ctx.model;\r\n                ^\r\n/Users/soulmayon/desktop/ali/SenseVoice.cpp/sense-voice/csrc/sense-voice.cc:410:9: error: use of undeclared identifier 'ggml_backend_metal_log_set_callback'\r\n        ggml_backend_metal_log_set_callback(g_state.log_callback, g_state.log_callback_user_data);\r\n        ^\r\n/Users/soulmayon/desktop/ali/SenseVoice.cpp/sense-voice/csrc/sense-voice.cc:763:19: warning: unused variable 'n_ctx' [-Wunused-variable]\r\n        const int n_ctx = state->feature.n_len;\r\n                  ^\r\n`",
    "comments_url": "https://api.github.com/repos/lovemefan/SenseVoice.cpp/issues/25/comments",
    "author": "soulmayon",
    "comments": [
      {
        "user": "lovemefan",
        "created_at": "2024-10-20T14:44:25Z",
        "body": "由于最新ggml的api变化，请更新最新代码"
      },
      {
        "user": "soulmayon",
        "created_at": "2024-10-21T00:01:12Z",
        "body": "已更新，这次只有警告warning: unused variable但不报错了，非常感谢"
      }
    ]
  },
  {
    "number": 18,
    "title": "针对issue第一条的修复。",
    "created_at": "2024-09-26T01:55:58Z",
    "closed_at": "2024-09-26T03:23:47Z",
    "labels": [],
    "url": "https://github.com/lovemefan/SenseVoice.cpp/pull/18",
    "body": "gitignore忽略build\r\n修改norm的实现（多了一个scale\r\ndim_size%WARP_SIZE == 0时不调用norm第一维扩充",
    "comments_url": "https://api.github.com/repos/lovemefan/SenseVoice.cpp/issues/18/comments",
    "author": "Ivy233",
    "comments": [
      {
        "user": "lovemefan",
        "created_at": "2024-09-26T03:21:00Z",
        "body": "非常感谢！"
      }
    ]
  },
  {
    "number": 15,
    "title": "为什么我的编译报错error: ‘strlen’ was not declared in this scope?",
    "created_at": "2024-09-22T11:08:54Z",
    "closed_at": "2024-09-23T11:20:35Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/lovemefan/SenseVoice.cpp/issues/15",
    "body": "debian12 安装的gcc12\r\n\r\n/home/wkitt/SenseVoice.cpp/examples/common-ggml.cc: In function ‘std::string llama_format_tensor_shape(const ggml_tensor*)’:\r\n/home/wkitt/SenseVoice.cpp/examples/common-ggml.cc:44:24: error: ‘strlen’ was not declared in this scope\r\n   44 |         snprintf(buf + strlen(buf), sizeof(buf) - strlen(buf), \", %5\" PRId64, t->ne[i]);\r\n      |                        ^~~~~~\r\n/home/wkitt/SenseVoice.cpp/examples/common-ggml.cc:13:1: note: ‘strlen’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?\r\n   12 | #include <map>\r\n  +++ |+#include <cstring>\r\n   13 |\r\n/home/wkitt/SenseVoice.cpp/examples/common-ggml.cc: In function ‘bool sense_voice_ggml_quantize0(ggml_context*, gguf_context*, const std::string&, const std::string&, ggml_ftype, int, const std::vector<std::__cxx11::basic_string<char> >&, const std::vector<std::__cxx11::basic_string<char> >&)’:\r\n/home/wkitt/SenseVoice.cpp/examples/common-ggml.cc:319:50: error: ‘strcmp’ was not declared in this scope\r\n  319 |                  (new_type == GGML_TYPE_IQ1_M && strcmp(tensor->name, \"embed.weight\") && strcmp(tensor->name, \"ctc.ctc_lo.weight\"))  ||\r\n      |                                                  ^~~~~~\r\n/home/wkitt/SenseVoice.cpp/examples/common-ggml.cc:319:50: note: ‘strcmp’ is defined in header ‘<cstring>’; did you forget to ‘#include <cstring>’?\r\nmake[2]: *** [examples/CMakeFiles/common.dir/build.make:76：examples/CMakeFiles/common.dir/common-ggml.cc.o] 错误 1\r\nmake[1]: *** [CMakeFiles/Makefile2:262：examples/CMakeFiles/common.dir/all] 错误 2\r\nmake: *** [Makefile:136：all] 错误 2",
    "comments_url": "https://api.github.com/repos/lovemefan/SenseVoice.cpp/issues/15/comments",
    "author": "wkitt4",
    "comments": [
      {
        "user": "lovemefan",
        "created_at": "2024-09-23T01:51:20Z",
        "body": "感谢反馈，当前bug已解决"
      }
    ]
  },
  {
    "number": 14,
    "title": "failed to read WAV file 'SenseVoice.cpp/data/test1.wav'",
    "created_at": "2024-09-16T13:16:50Z",
    "closed_at": "2024-10-06T14:46:17Z",
    "labels": [],
    "url": "https://github.com/lovemefan/SenseVoice.cpp/issues/14",
    "body": "Expected subchunk1_id 0x20746d66. Given: 0x4b4e554a\r\nerror: failed to read WAV file 'SenseVoice.cpp/data/test1.wav'\r\n\r\n我电脑上录了一个WAV格式音频，推理的时候提示以上错误，想问下是什么原因呢。\r\n",
    "comments_url": "https://api.github.com/repos/lovemefan/SenseVoice.cpp/issues/14/comments",
    "author": "brisyramshere",
    "comments": [
      {
        "user": "lovemefan",
        "created_at": "2024-09-16T15:41:14Z",
        "body": "确保音频为 16kHz，单通道的wav，可以使用ffmpeg转换\r\n\r\n```\r\nffmpeg -i /path/test1.wav -ar 16000 -ac 1 /path/output.wav\r\n```"
      },
      {
        "user": "brisyramshere",
        "created_at": "2024-09-17T05:11:34Z",
        "body": "> 确保音频为 16kHz，单通道的wav，可以使用ffmpeg转换\r\n> \r\n> ```\r\n> ffmpeg -i /path/test1.wav -ar 16000 -ac 1 /path/output.wav\r\n> ```\r\n\r\n了解了，谢谢"
      }
    ]
  },
  {
    "number": 11,
    "title": "fix tesnor set error",
    "created_at": "2024-09-09T07:09:02Z",
    "closed_at": "2024-09-09T07:26:59Z",
    "labels": [],
    "url": "https://github.com/lovemefan/SenseVoice.cpp/pull/11",
    "body": "ggml_backend_tensor_set would copy data from host to host , replace it with ggml_backend_tensor_copy while using cuda",
    "comments_url": "https://api.github.com/repos/lovemefan/SenseVoice.cpp/issues/11/comments",
    "author": "pockers21",
    "comments": [
      {
        "user": "lovemefan",
        "created_at": "2024-09-09T07:26:51Z",
        "body": "Thank you very much for your contribution. I really appreciate your help."
      }
    ]
  },
  {
    "number": 10,
    "title": "encoder几倍的下采样",
    "created_at": "2024-09-06T04:38:13Z",
    "closed_at": "2024-12-19T01:23:57Z",
    "labels": [],
    "url": "https://github.com/lovemefan/SenseVoice.cpp/issues/10",
    "body": "感谢工作，想请问一下，encoder是几倍的下采样？",
    "comments_url": "https://api.github.com/repos/lovemefan/SenseVoice.cpp/issues/10/comments",
    "author": "leospark",
    "comments": [
      {
        "user": "lovemefan",
        "created_at": "2024-09-06T06:14:32Z",
        "body": "感谢对该工作的关注。\r\n\r\n举个例子，1秒的音频为16000帧数据，经过特征提取fbank变成了97帧，再进过lfr变成了15帧，然后送入encoder，encoder出来还是15帧，最后ctc输出为对应的15个logit，也就是约为66ms/per， 这样算下来是下采样1000多倍了。\r\n\r\n相比于whisper，1秒到音频whisper的encoder输出每秒50帧，sense voice比whisper还要进一步压缩3倍多"
      }
    ]
  },
  {
    "number": 9,
    "title": "CMake Error : build-info.cmake not found",
    "created_at": "2024-09-04T14:03:58Z",
    "closed_at": "2024-09-12T10:13:54Z",
    "labels": [],
    "url": "https://github.com/lovemefan/SenseVoice.cpp/issues/9",
    "body": "```\r\nCMake Error at CMakeLists.txt:63 (include):\r\n  include could not find requested file:\r\n\r\n    /.../SenseVoice.cpp/cmake/build-info.cmake\r\n```\r\n\r\nMaybe the file was somehow ignored? It seems coming from `include(${CMAKE_CURRENT_SOURCE_DIR}/cmake/build-info.cmake)`",
    "comments_url": "https://api.github.com/repos/lovemefan/SenseVoice.cpp/issues/9/comments",
    "author": "cxcxcxcx",
    "comments": [
      {
        "user": "lovemefan",
        "created_at": "2024-09-04T14:11:03Z",
        "body": "Sorry, I forgot to upload the files，please try again. I will add the Git Action as soon as possible."
      }
    ]
  },
  {
    "number": 7,
    "title": "ggml框架在大多数情况下会比onnx快吗？有onnx兼容性强吗？",
    "created_at": "2024-09-02T07:52:39Z",
    "closed_at": "2024-09-02T08:06:20Z",
    "labels": [],
    "url": "https://github.com/lovemefan/SenseVoice.cpp/issues/7",
    "body": "师兄带带",
    "comments_url": "https://api.github.com/repos/lovemefan/SenseVoice.cpp/issues/7/comments",
    "author": "yuyun2000",
    "comments": [
      {
        "user": "lovemefan",
        "created_at": "2024-09-02T08:04:21Z",
        "body": "SenseVoice.cpp 在cpu上速度相对onnx没有太大优势，但是可以尽量保证语音识别的实时性，速度方面需要大量优化工作，但是ggml支持很多后端，例如metal、cuda、vulkan、还有amd、inter的GPU，这些都需要花时间适配"
      },
      {
        "user": "yuyun2000",
        "created_at": "2024-09-02T08:06:20Z",
        "body": "好吧，看来低端设备上还是onnx兼容强一点啊"
      }
    ]
  },
  {
    "number": 5,
    "title": "实现时间戳功能",
    "created_at": "2024-08-23T08:06:06Z",
    "closed_at": "2024-12-19T01:23:40Z",
    "labels": [],
    "url": "https://github.com/lovemefan/SenseVoice.cpp/issues/5",
    "body": "目前一个初步的想法是根据目前分块的每块大小960个samples  按照目前处理的16k的采样率的数据，每块是60ms，最后CTC输出的有序的ids中对应的token的时长就是它所在顺序*60ms，是否是这样理解呢，代码层面我就直接这么写了：\r\n            //对于前处理时每个token的时间以960 samples 60ms 每一块，以此为估算出每个token的所在的位置的时间戳\r\nsense-voice-decoder.cc文件：128行\r\n```\r\n            int i=0, step=60;\r\n            for(int id: state.ids){\r\n                if (id != 0) {\r\n                    SENSE_VOICE_LOG_INFO(\"%s: %s\", to_timestamp(step*(i>3? i-4:i), false).c_str(), ctx.vocab.id_to_token[id].c_str());\r\n                }\r\n                i++;\r\n            }\r\n            SENSEVOICE_LOG_INFO(\"size is %d\", state.ids.size());\r\n```",
    "comments_url": "https://api.github.com/repos/lovemefan/SenseVoice.cpp/issues/5/comments",
    "author": "cerberspace",
    "comments": [
      {
        "user": "lovemefan",
        "created_at": "2024-08-23T08:29:56Z",
        "body": "可以这样理解， 1秒的音频为16000帧数据，经过特征提取fbank变成了97帧，再进过lfr变成了15帧，最后ctc输出为对应的15个logit，也就是60ms/per ，直接按照每60ms每个token其实是可以的，前提是切分的粒度和准确度可以接受。\r\n据我了解，目前较为成熟的对齐算法有两个，分别是dwt(whisper.cpp在使用)和ctc-alignment（torchaudio、wenet在使用），这两个算法输入是ctc出来的概率矩阵，时间戳会更精确。"
      },
      {
        "user": "cerberspace",
        "created_at": "2024-08-23T08:42:23Z",
        "body": "如果不是计算到token-level的时间戳，仅仅是segment断句，只纪录断句start-end时间戳呢？"
      },
      {
        "user": "lovemefan",
        "created_at": "2024-08-23T08:46:09Z",
        "body": "应该可以的，可以验证一下，可以先这样用着，后续我会慢慢地加vad和时间戳功能的"
      },
      {
        "user": "cerberspace",
        "created_at": "2024-08-23T08:49:36Z",
        "body": "thanks，每一个点展开都是一篇文章了，我也边写边学，有机会也贡献一点上来。"
      },
      {
        "user": "lovemefan",
        "created_at": "2024-08-23T08:54:18Z",
        "body": "> thanks，每一个点展开都是一篇文章了，我也边写边学，有机会也贡献一点上来。\r\n\r\n我也是边学边写的，还有很多东西不会😂，共同进步，欢迎贡献"
      },
      {
        "user": "lovemefan",
        "created_at": "2024-12-13T02:22:30Z",
        "body": "配合vad已实现句子级别的时间戳"
      }
    ]
  },
  {
    "number": 4,
    "title": "Can it support Q4 or Q8 quantization?",
    "created_at": "2024-08-21T12:49:09Z",
    "closed_at": "2024-10-06T14:45:37Z",
    "labels": [],
    "url": "https://github.com/lovemefan/SenseVoice.cpp/issues/4",
    "body": null,
    "comments_url": "https://api.github.com/repos/lovemefan/SenseVoice.cpp/issues/4/comments",
    "author": "edisonzf2020",
    "comments": [
      {
        "user": "lovemefan",
        "created_at": "2024-08-21T12:54:36Z",
        "body": "Yes, thanks to the whisper.cpp, more quantized models will be supported in the future, and I’m also looking forward to the  release of SenseVoice-Large"
      },
      {
        "user": "edisonzf2020",
        "created_at": "2024-08-21T14:58:47Z",
        "body": "cool\r\nAnd can support mp3 input first?"
      },
      {
        "user": "lovemefan",
        "created_at": "2024-08-22T01:38:05Z",
        "body": "> cool And can support mp3 input first?\r\n\r\nUse ffmpeg convert mp3 to wav\r\n```bash\r\nffmpeg -i /path/xxx.mp3 -ar 16000 -ac 1 /path/output.wav\r\n```"
      },
      {
        "user": "lovemefan",
        "created_at": "2024-09-02T03:23:43Z",
        "body": "Support Q3, Q4, Q5, Q6, Q8 quantization now."
      }
    ]
  },
  {
    "number": 3,
    "title": "Can't run in macos Apple M2 Ultra",
    "created_at": "2024-08-21T10:16:05Z",
    "closed_at": "2024-08-21T12:48:17Z",
    "labels": [],
    "url": "https://github.com/lovemefan/SenseVoice.cpp/issues/3",
    "body": "build in macos，\r\n\r\nthe log as following：\r\n```\r\n(base) fanmac@M2-Ultra-Lan SenseVoice.cpp % ./build/bin/sense-voice-main -m ./models/gguf-fp32-sense-voice-small.bin ./asr_example_zh.wav -t 4\r\nsense_voice_small_init_from_file_with_params_no_state: loading model from './models/gguf-fp32-sense-voice-small.bin'\r\nsense_voice_init_with_params_no_state: use gpu    = 1\r\nsense_voice_init_with_params_no_state: flash attn = 0\r\nsense_voice_init_with_params_no_state: gpu_device = 0\r\nsense_voice_model_load: version:      3\r\nsense_voice_model_load: alignment:   32\r\nsense_voice_model_load: data offset: 444480\r\nsense_voice_model_load: loading model\r\nsense_voice_model_load: n_vocab = 25055\r\nsense_voice_model_load: n_encoder_hidden_state = 512\r\nsense_voice_model_load: n_encoder_linear_units = 2048\r\nsense_voice_model_load: n_encoder_attention_heads  = 4\r\nsense_voice_model_load: n_encoder_layers = 50\r\nsense_voice_model_load: n_mels  = 80\r\nsense_voice_model_load: ftype  = 1\r\nsense_voice_model_load: vocab[25055] loaded\r\nsense_voice_model_load: Metal total size =   935.21 MB\r\nsense_voice_model_load: n_tensors: 1197\r\nsense_voice_model_load: load SenseVoiceSmall takes 0.317000 second \r\nsense_voice_backend_init_gpu: using Metal backend\r\nggml_metal_init: allocating\r\nggml_metal_init: found device: Apple M2 Ultra\r\nggml_metal_init: picking default device: Apple M2 Ultra\r\nggml_metal_init: using embedded metal library\r\nggml_metal_init: GPU name:   Apple M2 Ultra\r\nggml_metal_init: GPU family: MTLGPUFamilyApple8  (1008)\r\nggml_metal_init: GPU family: MTLGPUFamilyCommon3 (3003)\r\nggml_metal_init: GPU family: MTLGPUFamilyMetal3  (5001)\r\nggml_metal_init: simdgroup reduction support   = true\r\nggml_metal_init: simdgroup matrix mul. support = true\r\nggml_metal_init: hasUnifiedMemory              = true\r\nggml_metal_init: recommendedMaxWorkingSetSize  = 154618.82 MB\r\nsense_voice_init_state: kv pad  size  =    3.67 MB\r\nggml_backend_metal_buffer_type_alloc_buffer: error: failed to allocate buffer, size =     0.00 MiB\r\nggml_gallocr_reserve_n: failed to allocate Metal buffer of size 0\r\nzsh: segmentation fault  ./build/bin/sense-voice-main -m ./models/gguf-fp32-sense-voice-small.bin  -t \r\n```",
    "comments_url": "https://api.github.com/repos/lovemefan/SenseVoice.cpp/issues/3/comments",
    "author": "edisonzf2020",
    "comments": [
      {
        "user": "lovemefan",
        "created_at": "2024-08-21T12:45:18Z",
        "body": "Unfortunately, the Metal GPU backend is not supported yet, only the CPU can be used for now. I’ll do my best to adapt it."
      },
      {
        "user": "edisonzf2020",
        "created_at": "2024-08-21T12:48:12Z",
        "body": "cool work, I run it ok by -ng parameter."
      }
    ]
  }
]