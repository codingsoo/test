[
  {
    "number": 69,
    "title": "Add the RPATH within the CMake setup.",
    "created_at": "2025-02-07T00:41:13Z",
    "closed_at": "2025-02-07T13:25:27Z",
    "labels": [],
    "url": "https://github.com/p4lang/open-p4studio/pull/69",
    "body": "Not entirely sure whether this is the right way to do it. \r\n\r\nFixes #51.",
    "comments_url": "https://api.github.com/repos/p4lang/open-p4studio/issues/69/comments",
    "author": "fruffy",
    "comments": [
      {
        "user": "vgurevich",
        "created_at": "2025-02-07T07:31:11Z",
        "body": "Thanks, @fruffy -- works for me:\r\n\r\n```\r\nubuntu@ip-172-31-32-12:~/open-p4studio$ echo $LD_LIBRARY_PATH    # It is not set\r\n\r\nubuntu@ip-172-31-32-12:~/open-p4studio$ ldd $SDE_INSTALL/bin/p4c-barefoot\r\n\tlinux-vdso.so.1 (0x00007ffe1434b000)\r\n\tlibboost_iostreams.so.1.67.0 => /home/ubuntu/open-p4studio/install/bin/../lib/libboost_iostreams.so.1.67.0 (0x00007fc254daf000)\r\n\tlibprotobuf.so.25.0.0 => /home/ubuntu/open-p4studio/install/bin/../lib/libprotobuf.so.25.0.0 (0x00007fc254562000)\r\n\tlibabsl_log_internal_check_op.so.2308.0.0 => /home/ubuntu/open-p4studio/install/bin/../lib/libabsl_log_internal_check_op.so.2308.0.0 (0x00007fc254558000)\r\n\tlibabsl_status.so.2308.0.0 => /home/ubuntu/open-p4studio/install/bin/../lib/libabsl_status.so.2308.0.0 (0x00007fc25452e000)\r\n\tlibabsl_log_internal_message.so.2308.0.0 => /home/ubuntu/open-p4studio/install/bin/../lib/libabsl_log_internal_message.so.2308.0.0 (0x00007fc25450e000)\r\n\tlibabsl_log_internal_nullguard.so.2308.0.0 => /home/ubuntu/open-p4studio/install/bin/../lib/libabsl_log_internal_nullguard.so.2308.0.0 (0x00007fc254507000)\r\n\tlibdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007fc2544e8000)\r\n...\r\n```"
      }
    ]
  },
  {
    "number": 56,
    "title": "Remove CPython.",
    "created_at": "2025-01-27T22:38:16Z",
    "closed_at": "2025-01-28T23:33:06Z",
    "labels": [],
    "url": "https://github.com/p4lang/open-p4studio/pull/56",
    "body": "Should be merged at the same time as #52.",
    "comments_url": "https://api.github.com/repos/p4lang/open-p4studio/issues/56/comments",
    "author": "fruffy",
    "comments": [
      {
        "user": "fruffy",
        "created_at": "2025-01-28T23:22:01Z",
        "body": "@jafingerhut This is the precursor to #52 "
      },
      {
        "user": "jafingerhut",
        "created_at": "2025-01-28T23:31:46Z",
        "body": "Is there any reason you want me to test installing and running the unit test with this PR by itself?  If so, please let me know and I can do it.\r\n\r\nIf not, I will approve it now and you can go ahead and merge it."
      },
      {
        "user": "fruffy",
        "created_at": "2025-01-28T23:33:03Z",
        "body": "> Is there any reason you want me to test installing and running the unit test with this PR by itself? If so, please let me know and I can do it.\r\n> \r\n> If not, I will approve it now and you can go ahead and merge it.\r\n\r\nNope, building CPython is disabled right now so it should not make a difference. Thanks!"
      }
    ]
  },
  {
    "number": 38,
    "title": "Fixes #33 - Integrate max jobs calculation into p4studio",
    "created_at": "2025-01-21T01:01:32Z",
    "closed_at": "2025-01-27T15:35:28Z",
    "labels": [],
    "url": "https://github.com/p4lang/open-p4studio/pull/38",
    "body": null,
    "comments_url": "https://api.github.com/repos/p4lang/open-p4studio/issues/38/comments",
    "author": "jafingerhut",
    "comments": [
      {
        "user": "jafingerhut",
        "created_at": "2025-01-21T21:41:29Z",
        "body": "I have merged latest master into this PR since the most recent PR merge, and am now testing it on personal Ubuntu 20.04 & 22.04 VMs.  Will update when that is complete, with results."
      },
      {
        "user": "jafingerhut",
        "created_at": "2025-01-22T02:32:34Z",
        "body": "@fruffy @vgurevich This PR removes batch-install.sh, and adds the steps required to the top level README.md to install p4studio (without using sudo) that replace it.\r\n\r\nIt also adds to the behavior of the `p4studio profile apply <profile_name>` command the calculation of a number of jobs that should avoid memory use from exceeding the memory available on the system (as long as you don't run any heavy-memory-use processes while doing the build -- we can't guard against that except by advice to people).\r\n\r\nI have just finished installing and testing the code on two private VMs of mine, freshly installed Ubuntu 20.04 and 22.04 systems, following the new instructions in the top level README.md changed in this PR, and the tests pass on both systems.\r\n\r\nPlease review it, and I would recommend we merge it if you approve."
      },
      {
        "user": "jafingerhut",
        "created_at": "2025-01-22T02:34:40Z",
        "body": "FYI, you can still specify the number of parallel jobs if you want to using the `--jobs <n>` command line option to p4studio.  The new behavior of calculating a reasonable number is only present if you omit that option."
      },
      {
        "user": "fruffy",
        "created_at": "2025-01-27T13:19:52Z",
        "body": "@jafingerhut Ready to merge this? "
      },
      {
        "user": "jafingerhut",
        "created_at": "2025-01-27T14:34:52Z",
        "body": "@fruffy Yes.  I saw you requested a review from Prathima, and it wasn't clear to me whether you wanted to wait for another review, so I was also waiting."
      },
      {
        "user": "fruffy",
        "created_at": "2025-01-27T15:17:44Z",
        "body": "> @fruffy Yes. I saw you requested a review from Prathima, and it wasn't clear to me whether you wanted to wait for another review, so I was also waiting.\r\n\r\nI think 5 days is sufficient time to wait. Otherwise the other dependent PRs are stuck. "
      }
    ]
  },
  {
    "number": 30,
    "title": "Enable Tofino2 in the testing profile.",
    "created_at": "2025-01-17T17:07:23Z",
    "closed_at": "2025-01-17T19:08:13Z",
    "labels": [],
    "url": "https://github.com/p4lang/open-p4studio/pull/30",
    "body": "Fixes #11.",
    "comments_url": "https://api.github.com/repos/p4lang/open-p4studio/issues/30/comments",
    "author": "fruffy",
    "comments": [
      {
        "user": "fruffy",
        "created_at": "2025-01-17T19:23:08Z",
        "body": "Merged a little early, still need to update the P4C submodule reference :)"
      },
      {
        "user": "jafingerhut",
        "created_at": "2025-01-17T22:15:25Z",
        "body": "Sorry for jumping the gun on merging.  I'll be more patient in future."
      }
    ]
  },
  {
    "number": 18,
    "title": "Add missing p4studio/build files",
    "created_at": "2025-01-15T03:35:40Z",
    "closed_at": "2025-01-15T19:46:09Z",
    "labels": [],
    "url": "https://github.com/p4lang/open-p4studio/pull/18",
    "body": null,
    "comments_url": "https://api.github.com/repos/p4lang/open-p4studio/issues/18/comments",
    "author": "jafingerhut",
    "comments": [
      {
        "user": "jafingerhut",
        "created_at": "2025-01-15T03:36:23Z",
        "body": "This p4studio/build directory and the files in it were omitted from the public repository.  WIthout them, attempting to build fails _very_ fast.  WIth them, it gets further, but still needs some other fixes besides adding these files."
      },
      {
        "user": "jafingerhut",
        "created_at": "2025-01-15T18:43:18Z",
        "body": "After 6 commits on this PR, the CI tests are passing.  Cool!\r\n\r\n@pkotikal Perhaps due to an overly agressive contents of .gitignore files, some files that were in the older open-p4studio-old repo did not get committed to this one.  This PR's changes are mostly adding some of those files.  I have verified that none of these files we have added are ones you removed in your old prathima/cleanup branch."
      },
      {
        "user": "pkotikal",
        "created_at": "2025-01-15T21:52:23Z",
        "body": "> After 6 commits on this PR, the CI tests are passing. Cool!\r\n> \r\n> @pkotikal Perhaps due to an overly agressive contents of .gitignore files, some files that were in the older open-p4studio-old repo did not get committed to this one. This PR's changes are mostly adding some of those files. I have verified that none of these files we have added are ones you removed in your old prathima/cleanup branch.\r\n\r\nGreat, thanks a lot Andy!"
      }
    ]
  },
  {
    "number": 2,
    "title": "Fix submodule.",
    "created_at": "2025-01-10T15:31:01Z",
    "closed_at": "2025-01-10T15:35:56Z",
    "labels": [],
    "url": "https://github.com/p4lang/open-p4studio/pull/2",
    "body": "Add the P4 compilers submodule.",
    "comments_url": "https://api.github.com/repos/p4lang/open-p4studio/issues/2/comments",
    "author": "fruffy",
    "comments": [
      {
        "user": "jafingerhut",
        "created_at": "2025-01-10T15:36:08Z",
        "body": "went ahead and merged so I can try building this"
      }
    ]
  },
  {
    "number": 15,
    "title": "Use the system-level Python for bf-python instead of a hardcoded 3.10 cpython.",
    "created_at": "2024-12-20T09:23:39Z",
    "closed_at": "2025-01-29T04:50:38Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/p4lang/open-p4studio/issues/15",
    "body": "Or install the system version of cpython instead of a fixed 3.10. \r\nE.g., 3.8 for Ubuntu 20.04, 3.10 for Ubuntu 22.04, 3.12 for Ubuntu.24.04",
    "comments_url": "https://api.github.com/repos/p4lang/open-p4studio/issues/15/comments",
    "author": "fruffy",
    "comments": [
      {
        "user": "jafingerhut",
        "created_at": "2024-12-20T14:01:11Z",
        "body": "I do not have ready examples to give, but I believe that Python 3.y > Python 3.x sometimes introduces backwards incompatibilities, despite not bumping the major version number (i.e. either they do not use semantic versioning, or they only pay it lip service and don't really follow it).  That combined with Python's dynamic nature means that extensive testing of a large fraction of code paths might be required to ensure that a different version of Python will be suitable for using here.\r\n\r\nI have no problem trying it out, mind you.  Just that by using different versions of Python on different OS's, we could be introducing failures that will be time-consuming to find later."
      },
      {
        "user": "jafingerhut",
        "created_at": "2024-12-20T14:15:10Z",
        "body": "This PEP says that developers are explicitly allowed to introduce backwards incompatible changes if there are warnings for at least 2 minor releases before the change is made, e.g. warnings in python3.8 and python3.9, then backwards incompatible change in python3.10.\r\n\r\nI do _not_ know if those warnings must occur at Python compile time.  Given its dynamic nature, I would bet $100 that some of them only occur when the relevant method or function is actually called at run time, and then only if the warnings are enabled, and then you might not even see them unless you look for them in the right place, e.g. buried in some log file, or redirected to /dev/null.\r\n\r\nThere are actual reasons people pin versions of Python."
      },
      {
        "user": "fruffy",
        "created_at": "2024-12-20T14:57:33Z",
        "body": "It is much easier to maintain a system for a single Python version than for an interleaving of different Python versions. It is also harder to debug system-level Python incompatibilities, e.g, a particular Python versions incompatibility with the OS-level `glibc` etc. \r\n\r\nThe backwards incompatible changes between Python versions are usually manageable and can be addressed in the Python code, the system-level incompatibilities less so. \r\n\r\nUbuntu is also fairly good at sticking with a particular version of Python, which means we can make better guarantees and test for that particular version. If users use a different version than what is tested on CI that is on them. \r\n\r\n\r\nThe best solution is to use a venv. Poetry, or uv, but that requires more invasive changes. "
      },
      {
        "user": "jafingerhut",
        "created_at": "2024-12-20T18:46:55Z",
        "body": "Is this one closable as fixed by p4lang/open-p4studio-old#25 too?"
      },
      {
        "user": "fruffy",
        "created_at": "2024-12-20T19:38:03Z",
        "body": "No, the problem is not resolved. We actually just disabled bf-python to work around the mismatch. It doesn't look like it is needed yet."
      }
    ]
  }
]