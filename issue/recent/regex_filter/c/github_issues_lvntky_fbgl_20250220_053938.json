[
  {
    "number": 9,
    "title": "[FEATURE] Filled and Outlined Circle",
    "created_at": "2024-11-26T21:46:39Z",
    "closed_at": "2024-11-26T22:33:46Z",
    "labels": [],
    "url": "https://github.com/lvntky/fbgl/pull/9",
    "body": "## What's in this PR\r\n\r\n* New efficient functions to draw outlined and filled circles, based on the Midpoint Circle Algorithm, the filled one uses `memset` on the raw buffer for line-by-line rasterization.\r\n* Example files that shows off both functions (and acts as a test suite I guess)\r\n* Simple color utilities macros, so one can write FBGL_RGB(255, 12, 0) without dabbling in hex magic\r\n\r\n\r\n## Why the other changes\r\n\r\nOther slight errors are still being introduced in the repository despite them being detectable by compiler warnings that are already turned on by the `CMakeLists.txt`. \r\n\r\nFor example, various bound checks for the keyboard codes were present that were actually useless:\r\n\r\n```c\r\n\r\nunsigned char c\r\nif (c > 256) {\r\n// do stuff\r\n}\r\n\r\n```\r\n\r\nHere `c` can never be greater than 256 as `c` is byte-sized, therefore it's maximum possible value is 255. This means that if the users enters 300 as a code, it's going to overflow to a correct value again anyway (you can't really catch this error library-side and you have to hope your user is listening to warnings...)\r\n\r\nAnother error that is flagged (and prevents compilation) is in `keyboard.c`, where the `atexit` function is called with the wrong number of parameters. I did not attempt to solve this as this requires a design decision that I am in no position to take.\r\n",
    "comments_url": "https://api.github.com/repos/lvntky/fbgl/issues/9/comments",
    "author": "dario-loi",
    "comments": [
      {
        "user": "lvntky",
        "created_at": "2024-11-26T22:33:40Z",
        "body": "I was about to do that, thank you that was a very good commit üôè "
      }
    ]
  },
  {
    "number": 8,
    "title": "Bugfixes",
    "created_at": "2024-11-24T20:17:17Z",
    "closed_at": "2024-11-24T21:44:07Z",
    "labels": [],
    "url": "https://github.com/lvntky/fbgl/pull/8",
    "body": "## What's in the Pull Request\r\n\r\nA general overview of the changes can be found in the first commit message, which I'll paste down below\r\n\r\n### Commit message\r\n\r\nProvided a working CMakeLists.txt file to build all of the examples,\r\nalso fixed a bunch of bugs (some fixes also depend on personal\r\npreference and should be reviewed by maintainers):\r\n\r\n1. Switched fbgl_t types from size_t to uint32_t as there is no way a\r\n   screen resolution will be more than 2^32, this way we save 4 bytes\r\n   and we have faster comparisons\r\n2. Used int32_t instead of int for better clarity\r\n3. fbgl_point now uses int32_t instead of uint32_t, no more sign\r\n   comparison warnings (for loops that worked with fbgl_point were\r\n   already working with int32_t in practice)\r\n4. line.c now uses usleep(1000) to wait inbetween individual line draws\r\n   instead of an empty for loop, as that was optimized away in release\r\n   builds and led to all the animation being played instantly\r\n5. removed the void fbgl_set_bg() forward declaration as it was\r\n   incorrect w.r.t the actual function definition\r\n6. fbgl_draw_texture specifies a const pointer to the texture resource,\r\n   possibly allowing for compiler optimizations\r\n7. fbgl_set_bg and fbgl_put_pixel now use #ifdef DEBUG to compile away\r\n   checks in release builds, for faster performance (This has been adapted to FBGL_VALIDATE_PUT_PIXEL, according to `master`, I still suggest DEBUG so it can be done automatically by CMake)\r\n8. various const-correctness improvements\r\n9. all required UNIX headers have been imported so that\r\n   fbgl_check_esc_key does not give any more warnings\r\n\r\nAll examples have been tested (on my local machine, so take this with a\r\ngrain of salt)\r\n\r\n### Additional Changes\r\n\r\nThe `example` directory has been renamed into `examples`, files that have not been affected past that in this PR will show in the \"files changed\" tab as if the whole file was rewritten (this is how git sees renaming)\r\n\r\nFormatting has been applied in line with the `.clang-format` so there should not be any more useless diffs from now on.\r\n",
    "comments_url": "https://api.github.com/repos/lvntky/fbgl/issues/8/comments",
    "author": "dario-loi",
    "comments": [
      {
        "user": "dario-loi",
        "created_at": "2024-11-24T20:17:34Z",
        "body": "I promise I will split future features into smaller PRs/commits :)"
      },
      {
        "user": "lvntky",
        "created_at": "2024-11-24T21:44:05Z",
        "body": "Awesome commit, thank you "
      }
    ]
  },
  {
    "number": 6,
    "title": "[FIX] Move all implementation under include guard",
    "created_at": "2024-11-24T13:49:21Z",
    "closed_at": "2024-11-24T18:17:01Z",
    "labels": [],
    "url": "https://github.com/lvntky/fbgl/pull/6",
    "body": "All function implementations are now under the #ifdef FBGL_IMPLEMENTATION guard, in order to prevent bugs as described by #3 (fixes task 3)\r\n\r\nCommit also solves a double `#define` on the `FBGL_MAX_KEYS` marcro. My formatter ran on the code and sorted the includes as well as applied general formattings to everything, if you want I can amend the commit with just the relevant update (and switch the formatter off)",
    "comments_url": "https://api.github.com/repos/lvntky/fbgl/issues/6/comments",
    "author": "dario-loi",
    "comments": [
      {
        "user": "lvntky",
        "created_at": "2024-11-24T17:04:30Z",
        "body": "I think formatter off commit would be better since i could not understand which lines are changed. And i also love linux c style provided by .clang-format üòÇ"
      },
      {
        "user": "dario-loi",
        "created_at": "2024-11-24T17:48:32Z",
        "body": "Ohhh I did not see the .clang-format file there, however, I am now running `clang-format --style=file -i ./example/**` and the resulting files are still different from the ones on the repo. Can you try to format yourself in a commit to see if we can get the diffs to go away?"
      },
      {
        "user": "lvntky",
        "created_at": "2024-11-24T17:52:42Z",
        "body": "> Ohhh I did not see the .clang-format file there, however, I am now running `clang-format --style=file -i ./example/**` and the resulting files are still different from the ones on the repo. Can you try to format yourself in a commit to see if we can get the diffs to go away?\r\n\r\nSure I will open up a formatted pr to your repo"
      },
      {
        "user": "lvntky",
        "created_at": "2024-11-24T17:58:08Z",
        "body": "Apparently, I cannot fork your repo since I already have an fbgl repo. but we can do it this way. I will open a branch called dev for you, not master, and you will assign your commit to the dev branch, and I will format the files in dev and merge them to the master branch. Or you can format it yourself using clang-format.\r\n\r\nhere is the formatting process:\r\n1. you have to download the clang-format first. For arch based systems its: sudo pacman -S clang\r\n2. go to the root dir \r\n3. and just type: clang-format -i fbgl.h\r\n@dario-loi "
      }
    ]
  },
  {
    "number": 5,
    "title": "Fixed example code in README.md",
    "created_at": "2024-11-24T12:44:22Z",
    "closed_at": "2024-11-24T12:52:47Z",
    "labels": [],
    "url": "https://github.com/lvntky/fbgl/pull/5",
    "body": "Example code now correctly declares a fbgl_t buffer and passes it to relevant functions, also, fbgl_get_{width,height} are renamed to the kernel functions fb_get_{width,height} as a library-provided wrapper is non-existent (and probably unnecessary).",
    "comments_url": "https://api.github.com/repos/lvntky/fbgl/issues/5/comments",
    "author": "dario-loi",
    "comments": [
      {
        "user": "lvntky",
        "created_at": "2024-11-24T12:52:25Z",
        "body": "Thanks @dario-loi im merging the commits and also will add you in contributors list in .h file when i log in to my computer, much appreciated üôè "
      }
    ]
  },
  {
    "number": 3,
    "title": "[BUG] Various imprecisions prevent compilation with -Wall -Werror",
    "created_at": "2024-11-24T12:38:54Z",
    "closed_at": "2024-11-24T23:39:16Z",
    "labels": [],
    "url": "https://github.com/lvntky/fbgl/issues/3",
    "body": "By enforcing static type checks, the header library fails compilation due to a variety of common errors:\r\n\r\n- [x] An inconsistent type convention used to represent framebuffer dimensions, sometimes `int` is used, sometimes `size_t` is used. For example in `fbgl_draw_rectangle_outline` `int x` is compared with the result of `fbgl_point_t::x`, which is of type `size_t` (signed and unsigned comparison)\r\n- [x] `abs` is called on `size_t` variables in the fbgl_draw_line function, if one wishes the `x` and `y` points to be used interchangeably, they should be signed types so that the `abs` trick can work without overflows\r\n- [x] Past line 430 (`#endif // FBGL_USE_FREETYPE`), the rest of the implementation is outside of the `FBGL_IMPLEMENTATION` include guard, this may lead to ODR violation.",
    "comments_url": "https://api.github.com/repos/lvntky/fbgl/issues/3/comments",
    "author": "dario-loi",
    "comments": [
      {
        "user": "lvntky",
        "created_at": "2024-11-24T12:59:52Z",
        "body": "These are quite important actually, thank you for reporting. You can assign the issues if you want to fix them! Otherwise i will take a look, i know couple of places are quite sloopy implemented. üòÑ "
      },
      {
        "user": "dario-loi",
        "created_at": "2024-11-24T18:19:35Z",
        "body": "@lvntky I'll use this issue to continue the discussion under #6, it's weird, I used clang-format and it seems to have removed some but not all of the formatting, hope the result is not too messy.\r\n\r\nIf you want to open a dev/staging branch, I'll open another PR to that so we can triage eventual bad formatting errors"
      },
      {
        "user": "lvntky",
        "created_at": "2024-11-24T18:28:11Z",
        "body": "> @lvntky I'll use this issue to continue the discussion under #6, it's weird, I used clang-format and it seems to have removed some but not all of the formatting, hope the result is not too messy.\r\n> \r\n> If you want to open a dev/staging branch, I'll open another PR to that so we can triage eventual bad formatting errors\r\n\r\nI think it's all good now, should we close the other 2 issues ? "
      },
      {
        "user": "dario-loi",
        "created_at": "2024-11-24T23:39:16Z",
        "body": "Yeah we got everything with #8, we can close them."
      }
    ]
  },
  {
    "number": 2,
    "title": "[BUG] Findfbgl.cmake not found",
    "created_at": "2024-11-24T12:22:58Z",
    "closed_at": "2024-11-24T23:38:06Z",
    "labels": [],
    "url": "https://github.com/lvntky/fbgl/issues/2",
    "body": "When configuring the `example` directory's CMakeLists.txt, the Findfbgl.cmake module is not present:\r\n\r\n```\r\ncmake -G Ninja -S . -B build -DCMAKE_EXPORT_COMPILE_COMMANDS=ON\r\n-- The C compiler identification is GNU 14.2.1\r\n-- Detecting C compiler ABI info\r\n-- Detecting C compiler ABI info - done\r\n-- Check for working C compiler: /usr/lib/ccache/bin/cc - skipped\r\n-- Detecting C compile features\r\n-- Detecting C compile features - done\r\nCMake Error at CMakeLists.txt:5 (include):\r\n  include could not find requested file:\r\n\r\n    ../cmake/folders.cmake\r\n\r\n\r\nCMake Error at CMakeLists.txt:8 (find_package):\r\n  By not providing \"Findfbgl.cmake\" in CMAKE_MODULE_PATH this project has\r\n  asked CMake to find a package configuration file provided by \"fbgl\", but\r\n  CMake did not find one.\r\n\r\n  Could not find a package configuration file provided by \"fbgl\" with any of\r\n  the following names:\r\n\r\n    fbglConfig.cmake\r\n    fbgl-config.cmake\r\n\r\n  Add the installation prefix of \"fbgl\" to CMAKE_PREFIX_PATH or set\r\n  \"fbgl_DIR\" to a directory containing one of the above files.  If \"fbgl\"\r\n  provides a separate development package or SDK, be sure it has been\r\n  installed.\r\n\r\n\r\n-- Configuring incomplete, errors occurred!\r\n```\r\n\r\nThis makes it impossible to proceed with building the example directory.",
    "comments_url": "https://api.github.com/repos/lvntky/fbgl/issues/2/comments",
    "author": "dario-loi",
    "comments": [
      {
        "user": "lvntky",
        "created_at": "2024-11-24T12:55:06Z",
        "body": "Yes unfortunately i forgot to remove previous CMakeLists maybe we can remove the entire thing and write simple Makefile or sh to make executables of test programs. I can assigned it to you if you are interested"
      },
      {
        "user": "dario-loi",
        "created_at": "2024-11-24T23:38:06Z",
        "body": "New CMakeLists merged in #8, closing."
      }
    ]
  }
]