[
  {
    "number": 371,
    "title": "getCloudflareContext async",
    "created_at": "2025-02-12T15:45:34Z",
    "closed_at": "2025-02-14T20:04:49Z",
    "labels": [],
    "url": "https://github.com/opennextjs/opennextjs-cloudflare/issues/371",
    "body": "That would be helpful for SSG\n\nBut might get local data (D1) at build time.\n\nNeeds to investigate",
    "comments_url": "https://api.github.com/repos/opennextjs/opennextjs-cloudflare/issues/371/comments",
    "author": "vicb",
    "comments": [
      {
        "user": "dario-piotrowicz",
        "created_at": "2025-02-12T17:06:51Z",
        "body": "> But might get local data (D1) at build time.\n> Needs to investigate\n\nAs we discussed this is probably not a big deal, I think we can just proceed with this and then make sure to properly document these aspects in the docs (potentially in the dev/`getCloudflareContext` how-to guide) 🙂 "
      }
    ]
  },
  {
    "number": 322,
    "title": "Solved",
    "created_at": "2025-02-03T01:58:40Z",
    "closed_at": "2025-02-03T12:54:01Z",
    "labels": [
      "bug",
      "needs repro",
      "waiting for feedback"
    ],
    "url": "https://github.com/opennextjs/opennextjs-cloudflare/issues/322",
    "body": "Solved",
    "comments_url": "https://api.github.com/repos/opennextjs/opennextjs-cloudflare/issues/322/comments",
    "author": "Nopsled",
    "comments": [
      {
        "user": "vicb",
        "created_at": "2025-02-03T07:22:18Z",
        "body": "It looks like a bug.\n\nCould you please add a repro and more information about your environment (OS, versions, ...).\n\nThere is nothing we could do without more info.\n\nThanks!"
      },
      {
        "user": "vicb",
        "created_at": "2025-02-03T12:54:01Z",
        "body": "The problem here is that your dependency on opennextjs/aws is out of date. \nSee the package.json of the cloudflare adapter to see what version we depend on. \nAgreed that's it's not the best DX for now but we will switch to a monorepo at some point."
      }
    ]
  },
  {
    "number": 160,
    "title": "Instrumentation with Next15",
    "created_at": "2024-12-10T08:09:21Z",
    "closed_at": "2024-12-20T15:11:30Z",
    "labels": [],
    "url": "https://github.com/opennextjs/opennextjs-cloudflare/issues/160",
    "body": "Loading instrumentation fails with Next15.\r\n",
    "comments_url": "https://api.github.com/repos/opennextjs/opennextjs-cloudflare/issues/160/comments",
    "author": "vicb",
    "comments": [
      {
        "user": "dario-piotrowicz",
        "created_at": "2024-12-13T10:07:57Z",
        "body": "Closing as resolved in #169 (I'm not sure why gh linking didn't close this automatically 🤷)"
      },
      {
        "user": "vicb",
        "created_at": "2024-12-13T10:10:19Z",
        "body": "Reopening until this is merged to main"
      }
    ]
  },
  {
    "number": 135,
    "title": "[BUG] module.findSourceMap is not implemented yet!",
    "created_at": "2024-11-15T23:16:45Z",
    "closed_at": "2024-11-23T04:20:20Z",
    "labels": [
      "bug",
      "triage"
    ],
    "url": "https://github.com/opennextjs/opennextjs-cloudflare/issues/135",
    "body": "### Describe the bug\n\nWhen I try `dev:worker`, I found these errors:\r\nOn Terminal: ✘ [ERROR] <Formatting threw (Error: [unenv] module.findSourceMap is not implemented yet!\r\n\r\nBrowser:\r\n```bash\r\nError: The script will never generate a response.\r\n    at async Object.fetch (file:///{mypath}/node_modules/miniflare/dist/src/workers/core/entry.worker.js:1029:22)\r\n```\n\n### Steps to reproduce\n\n1. I use Kinde sdk for nextjs in middleware\r\n2. Setup `@opennextjs/cloudflare`\r\n3. Run `dev:worker`\n\n### Expected behavior\n\nOn Terminal: ✘ [ERROR] <Formatting threw (Error: [unenv] module.findSourceMap is not implemented yet!\r\n\r\nBrowser:\r\n```bash\r\nError: The script will never generate a response.\r\n    at async Object.fetch (file:///{mypath}/node_modules/miniflare/dist/src/workers/core/entry.worker.js:1029:22)\r\n```\n\n### @opennextjs/cloudflare version\n\n0.2.1\n\n### Node.js version\n\n20.8.1\n\n### Wrangler version\n\n3.78.10\n\n### next info output\n\n```shell\nSystem:\r\n    OS: macOS 15.0.1\r\n    CPU: (8) arm64 Apple M1 Pro\r\n    Memory: 712.38 MB / 16.00 GB\r\n    Shell: 5.9 - /bin/zsh\r\n  Binaries:\r\n    Node: 20.8.1 - ~/.nvm/versions/node/v20.8.1/bin/node\r\n    Yarn: 1.22.22 - /opt/homebrew/bin/yarn\r\n    npm: 10.1.0 - ~/.nvm/versions/node/v20.8.1/bin/npm\r\n    pnpm: 8.6.10 - ~/Library/pnpm/pnpm\r\n    bun: 1.0.30 - ~/.bun/bin/bun\r\n  Browsers:\r\n    Brave Browser: 131.1.73.89\r\n    Chrome: 130.0.6723.117\r\n    Safari: 18.0.1\n```\n\n\n### Additional context\n\n_No response_",
    "comments_url": "https://api.github.com/repos/opennextjs/opennextjs-cloudflare/issues/135/comments",
    "author": "abel3t",
    "comments": [
      {
        "user": "vicb",
        "created_at": "2024-11-21T06:33:56Z",
        "body": "> I use Kinde sdk for nextjs in middleware\r\n\r\nWhat is your setup - this is not enough information to reproduce.\r\nAlso note that middleware is not yet supported on the main branch - middleware support is being implemented in the experimental branch.\r\n\r\n> `Error: [unenv] module.findSourceMap is not implemented yet!`\r\n\r\n`findSourceMap` is not implemented as source paths (and map paths) do not make sense for workers as we don't have access to the file system. unenv should probably return undefined.\r\n\r\n\r\n"
      }
    ]
  },
  {
    "number": 118,
    "title": "Bug: throw new Error(\"Patch `patchCache` not applied\");",
    "created_at": "2024-11-01T21:06:14Z",
    "closed_at": "2024-11-04T15:52:24Z",
    "labels": [],
    "url": "https://github.com/opennextjs/opennextjs-cloudflare/issues/118",
    "body": "I am using `revalidatePath(\"/search\");` in my nextjs code in a server action and whenever I use this I am getting the `Patch `patchCache` not applied` error.\r\n\r\nOnce I remove this line the build works fine.",
    "comments_url": "https://api.github.com/repos/opennextjs/opennextjs-cloudflare/issues/118/comments",
    "author": "Flo4604",
    "comments": [
      {
        "user": "vicb",
        "created_at": "2024-11-04T15:52:24Z",
        "body": "Cache revalidation is not supported yet.\r\n\r\nWhen reporting issue, it's better to specify what Next version you use and include a repro to make it actionable."
      }
    ]
  },
  {
    "number": 111,
    "title": "Support monorepos",
    "created_at": "2024-10-25T11:59:46Z",
    "closed_at": "2024-11-04T15:53:21Z",
    "labels": [],
    "url": "https://github.com/opennextjs/opennextjs-cloudflare/issues/111",
    "body": "Hello, I couldn't find any discussions on this repo.\r\n\r\nA question I have is regarding monorepo setups. For example there are many projects that use `nrwl/nx` or `lerna` will (is it even possible?) this package be able to support these setups?",
    "comments_url": "https://api.github.com/repos/opennextjs/opennextjs-cloudflare/issues/111/comments",
    "author": "astrodomas",
    "comments": [
      {
        "user": "tadhglewis",
        "created_at": "2024-10-27T08:18:09Z",
        "body": "I'm using a monorepo, works fine."
      },
      {
        "user": "ruqqq",
        "created_at": "2024-10-29T13:27:34Z",
        "body": "@tadhglewis how are you setting up the .npmrc or the workspace? I'm using pnpm and seems to be running issues with `cloudflare` cmd, whilst `next build` works fine.\r\n\r\nSeems to be complaining while it is trying to patch wrangler: `# patchWranglerDeps`"
      },
      {
        "user": "vicb",
        "created_at": "2024-11-04T15:53:21Z",
        "body": "The support for monorepos should be improved when we integrate with OpenNext.\r\n\r\n"
      }
    ]
  },
  {
    "number": 91,
    "title": "Support for Cache Invalidation by Tag",
    "created_at": "2024-10-11T09:38:55Z",
    "closed_at": "2025-01-16T13:21:46Z",
    "labels": [
      "enhancement",
      "planned"
    ],
    "url": "https://github.com/opennextjs/opennextjs-cloudflare/issues/91",
    "body": "## Description\r\nIt appears that `@opennextjs/cloudflare` does not support cache invalidation by tag. Currently, fetch places cache data in a Cloudflare KV store (`NEXT_CACHE_WORKERS_KV`). However, calling tag-based invalidation through @next/cache does not seem to work as expected.\r\n\r\n## Context and Need\r\nIn environments with frequently updated or dynamic content, precise cache control is essential. Using tag-based cache invalidation would allow for targeted, granular cache management, reducing the need for global purges and improving overall performance.\r\n\r\n## Request\r\nPlease add support for cache invalidation by tag. \r\n\r\n## Expected Benefits\r\n\r\n- Improved performance by avoiding full cache purges.\r\n- Granular control over cached content for end-users.\r\n- Enhanced cache management for dynamic content projects with frequent updates.\r\n\r\nThank you for considering this enhancement! I’d be happy to provide additional information or discuss this feature in detail.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/opennextjs/opennextjs-cloudflare/issues/91/comments",
    "author": "Gwemox",
    "comments": [
      {
        "user": "vicb",
        "created_at": "2025-01-16T13:21:46Z",
        "body": "Will be adressed by #105"
      }
    ]
  },
  {
    "number": 56,
    "title": "Build Error: # patchCached",
    "created_at": "2024-10-03T13:44:17Z",
    "closed_at": "2024-10-05T04:25:08Z",
    "labels": [
      "bug",
      "needs repro"
    ],
    "url": "https://github.com/opennextjs/opennextjs-cloudflare/issues/56",
    "body": "@dario-piotrowicz as per your request please! Thank you\r\n\r\nNext.js build correctly without any issues but Cloudflare fails at this level:\r\n\r\n# patchCached\r\nfile:///Users/justindjeumene/WebstormProjects/ixxxxxxxxxxx/node_modules/@opennextjs/cloudflare/dist/cli/index.mjs:6860\r\n    throw new Error(\"Cache patch not applied\");\r\n          ^\r\n\r\nError: Cache patch not applied\r\n\r\n\r\nHere is my wrangler.toml\r\n#:schema node_modules/wrangler/config-schema.json\r\nname = \"xxxxxxxx-clouflare\"\r\nmain = \".worker-next/index.mjs\"\r\n\r\ncompatibility_date = \"2024-09-23\"\r\ncompatibility_flags = [\"nodejs_compat\"]\r\n\r\n# Use the new Workers + Assets to host the static frontend files\r\nassets = { directory = \".worker-next/assets\", binding = \"ASSETS\" }\r\n\r\n[[kv_namespaces]]\r\nbinding = \"NEXT_CACHE_WORKERS_KV\"\r\nid = \"xxxxxxxxxxx1e\"\r\n\r\nHere is the cloudflare that fails:\r\n// src/cli/build/patches/investigated/patch-cache.ts\r\nimport path7 from \"node:path\";\r\nfunction patchCache(code, config) {\r\n  console.log(\"# patchCached\");\r\n  const cacheHandler = path7.join(config.paths.internalPackage, \"cli\", \"cache-handler.mjs\");\r\n  const patchedCode = code.replace(\r\n    \"const { cacheHandler } = this.nextConfig;\",\r\n    `const cacheHandler = null;\r\nCacheHandler = (await import('${cacheHandler}')).default;\r\nCacheHandler.maybeKVNamespace = process.env[\"${config.cache.kvBindingName}\"];\r\n`\r\n  );\r\n  if (patchedCode === code) {\r\n    throw new Error(\"Cache patch not applied\");\r\n  }\r\n  return patchedCode;\r\n}",
    "comments_url": "https://api.github.com/repos/opennextjs/opennextjs-cloudflare/issues/56/comments",
    "author": "justindjeumenet",
    "comments": [
      {
        "user": "vicb",
        "created_at": "2024-10-04T08:03:38Z",
        "body": "What version of Next are you using?\r\nCan you reproduce the issue on a minimal app that you can share?"
      },
      {
        "user": "justindjeumenet",
        "created_at": "2024-10-05T04:21:25Z",
        "body": "Hey @vicb!\r\nI am using next.js v14.0.4, I just started a very minimal project with the latest next.js and that error went away. I was having that error because I was integrating cloudflare in my existing project....I think that is why.\r\nI can close this ticket saying a minimal project works without issues.\r\nThanks"
      }
    ]
  },
  {
    "number": 38,
    "title": "Commerce",
    "created_at": "2024-09-26T11:55:26Z",
    "closed_at": "2024-10-02T12:33:36Z",
    "labels": [],
    "url": "https://github.com/opennextjs/opennextjs-cloudflare/pull/38",
    "body": null,
    "comments_url": "https://api.github.com/repos/opennextjs/opennextjs-cloudflare/issues/38/comments",
    "author": "vicb",
    "comments": [
      {
        "user": "vicb",
        "created_at": "2024-10-02T07:17:58Z",
        "body": "@dario-piotrowicz thanks for fixing the PR.\r\n\r\nLGTM with a few comments:\r\n- I wouldn't update the app more than what is needed to run on workers\r\n- I wouldn't test things depending on the shop content that we don't control"
      },
      {
        "user": "dario-piotrowicz",
        "created_at": "2024-10-02T10:36:45Z",
        "body": "@vicb the tweaks I made to the app were actually necessary to get any e2e to work\r\n\r\nso I've removed the e2es altogether... let me know what you prefer, we can either keep the e2es but re-add some slight tweaks to the app or have the app without any sort of e2e..."
      },
      {
        "user": "vicb",
        "created_at": "2024-10-02T10:41:23Z",
        "body": "@dario-piotrowicz it's becoming hard to review, could you squash your commits in fewer commits to ease the review.\r\n\r\n> the tweaks I made to the app were actually necessary to get any e2e to work\r\n\r\nI'm not sure to understand the root cause here.\r\nIf the CI creates the `.dev.vars` then it should be able to bring up the app?\r\nBut I guess it's not a big deal anyway.\r\n\r\n"
      },
      {
        "user": "dario-piotrowicz",
        "created_at": "2024-10-02T10:49:01Z",
        "body": "> @dario-piotrowicz it's becoming hard to review, could you squash your commits in fewer commits to ease the review.\r\n\r\nsure\r\n\r\n> > the tweaks I made to the app were actually necessary to get any e2e to work\r\n> \r\n> I'm not sure to understand the root cause here.\r\n> If the CI creates the .dev.vars then it should be able to bring up the app?\r\n\r\nI've remove that part, I think that we do not want the e2es to work only when the `.dev.vars` file is fully populated because this would be problematic for external contributors that would be forced to get a shopify key to get the e2es to work (adding a significant friction point in my opinion)\r\n\r\nAnd the `wrangler dev` command without all the `.dev.vars` although works if you view the app with your browser is not getting detected as working properly by playwright (I suspect that playwright is getting some 500s when trying to see if the server is running)"
      },
      {
        "user": "dario-piotrowicz",
        "created_at": "2024-10-02T11:07:21Z",
        "body": "@vicb I've rebased and squashed my commits, please have another look 🙏 "
      },
      {
        "user": "vicb",
        "created_at": "2024-10-02T12:33:34Z",
        "body": "Looks good, thanks for making this work!"
      }
    ]
  },
  {
    "number": 29,
    "title": "Add a basic KV cache handler",
    "created_at": "2024-09-24T09:29:37Z",
    "closed_at": "2024-09-24T13:20:09Z",
    "labels": [],
    "url": "https://github.com/opennextjs/opennextjs-cloudflare/pull/29",
    "body": null,
    "comments_url": "https://api.github.com/repos/opennextjs/opennextjs-cloudflare/issues/29/comments",
    "author": "vicb",
    "comments": [
      {
        "user": "vicb",
        "created_at": "2024-09-24T13:20:05Z",
        "body": "Thanks a lot for the review @dario-piotrowicz \r\nI have skipped some of the minor comments to make progress on the cache implementation.\r\nWe'll revisit later."
      },
      {
        "user": "dario-piotrowicz",
        "created_at": "2024-09-24T13:30:12Z",
        "body": "mine was only a partial review (sorry for not making it clear) I hadn't yet reviewed the most important file 🙈 (the cache impl one)\r\n\r\nbut yeah we can iterate over it later 🙂 "
      },
      {
        "user": "vicb",
        "created_at": "2024-09-24T13:45:28Z",
        "body": "This cache impl is pretty basic - I mostly submitted to get the other changes in.\r\nYou'll get a chance to review a full fledge impl soon"
      }
    ]
  },
  {
    "number": 16,
    "title": "remove no longer necessary aliases in api example's wrangler.toml",
    "created_at": "2024-09-20T16:45:12Z",
    "closed_at": "2024-09-20T16:49:28Z",
    "labels": [],
    "url": "https://github.com/opennextjs/opennextjs-cloudflare/pull/16",
    "body": null,
    "comments_url": "https://api.github.com/repos/opennextjs/opennextjs-cloudflare/issues/16/comments",
    "author": "dario-piotrowicz",
    "comments": [
      {
        "user": "vicb",
        "created_at": "2024-09-20T16:46:28Z",
        "body": "Good catch!"
      }
    ]
  },
  {
    "number": 12,
    "title": "implement webpack chunks file updating using ast manipulation",
    "created_at": "2024-09-20T12:31:38Z",
    "closed_at": "2024-09-20T18:36:11Z",
    "labels": [],
    "url": "https://github.com/opennextjs/opennextjs-cloudflare/pull/12",
    "body": "this allows us not to have to require the use of the `serverMinification: false` option\r\n(as we're no longer relying on known variable names)",
    "comments_url": "https://api.github.com/repos/opennextjs/opennextjs-cloudflare/issues/12/comments",
    "author": "dario-piotrowicz",
    "comments": [
      {
        "user": "vicb",
        "created_at": "2024-09-20T12:51:22Z",
        "body": "That's amazing @dario-piotrowicz \r\n\r\nCould you please update `TODO.md` and `builder/README.md`? (which reminds me that I should remove the URL pkg from there too).\r\n\r\nI need to go for 1h, I'll review after that.\r\n\r\nThanks!\r\n\r\n"
      },
      {
        "user": "dario-piotrowicz",
        "created_at": "2024-09-20T12:57:11Z",
        "body": "> That's amazing @dario-piotrowicz\r\n> \r\n> Could you please update `TODO.md` and `builder/README.md`? (which reminds me that I should remove the URL pkg from there too).\r\n> \r\n> I need to go for 1h, I'll review after that.\r\n> \r\n> Thanks!\r\n\r\nThanks ❤️ \r\n\r\n`TODO.md` and`builder/README.md` updated 🙂 \r\n\r\nI've removed the section regarding updating the config file entirely as I think that that is now totally unnecessary and that we should not bother telling users to set the `standalone` output there, I hope that's fine 🙂 "
      }
    ]
  }
]