[
  {
    "number": 3492,
    "title": "Add plugin-compass env vars",
    "created_at": "2025-02-14T06:39:41Z",
    "closed_at": "2025-02-14T21:59:42Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/issues/3492",
    "body": null,
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/3492/comments",
    "author": "royalnine",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-02-14T06:40:03Z",
        "body": "Hello @royalnine! Welcome to the elizaOS community. Thank you for opening your first issue; we appreciate your contribution. You are now an elizaOS contributor!"
      }
    ]
  },
  {
    "number": 3448,
    "title": "\"pnpm start\" process getting hung up at INFO: Initializing LlamaService...",
    "created_at": "2025-02-11T20:49:57Z",
    "closed_at": "2025-02-12T01:08:41Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/3448",
    "body": "**Describe the bug**\n\nAfter running \"pnpm start\", my terminal is getting hung up on INFO: Initializing LlamaService...\n\nIt just seems to stop. No errors or anything, but I'll wait 15-20 minutes and it still hasn't initialized.\n\nIt did get past this, ONE time, and completed the start. That was probably the 4th try... Now I'm on try 7 or so and it's still just staying put each time I try. Have restarted the machine several times.\n\n**To Reproduce**\n\nRunn pnpm i && pnpm build && pnpm start after pulling the repo\n\n**Expected behavior**\n\nFor the agent to start smoothly\n\n**Context**\nRunning macOS on an M3 Max\nOllama already installed",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/3448/comments",
    "author": "jordanurbs",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-02-11T20:50:21Z",
        "body": "Hello @jordanurbs! Welcome to the elizaOS community. Thank you for opening your first issue; we appreciate your contribution. You are now an elizaOS contributor!"
      },
      {
        "user": "jordanurbs",
        "created_at": "2025-02-12T01:08:41Z",
        "body": "Solved: this only happened for me on Starter. Launched fine on the normal repo..."
      },
      {
        "user": "sebastienmascha",
        "created_at": "2025-02-17T09:26:42Z",
        "body": "This is also happening to me on `eliza-starter`:\n- Ubuntu 24.04\n- PNPM 10.4.1\n- Node v23.8.0 \n\nP.S. I have also tried by building and running the docker compose.\n\n```bash\npnpm start --character=./characters/eliza.character.json\n\n> @elizaos/eliza-starter@0.1.9 start /home/seb/dev/hackathon/eliza-os/eliza-starter\n> tsc && node --loader ts-node/esm src/index.ts --character\\=./characters/eliza.character.json\n\n(node:376213) ExperimentalWarning: `--experimental-loader` may be removed in the future; instead use `register()`:\n--import 'data:text/javascript,import { register } from \"node:module\"; import { pathToFileURL } from \"node:url\"; register(\"ts-node/esm\", pathToFileURL(\"./\"));'\n(Use `node --trace-warnings ...` to show where the warning was created)\n(node:376213) [DEP0180] DeprecationWarning: fs.Stats constructor is deprecated.\n(Use `node --trace-deprecation ...` to show where the warning was created)\n[2025-02-17 09:14:59] INFO: Loading embedding settings:\n    OLLAMA_EMBEDDING_MODEL: \"mxbai-embed-large\"\nbigint: Failed to load bindings, pure JS will be used (try npm run rebuild?)\n[2025-02-17 09:14:59] INFO: Loading character settings:\n    ARGV: [\n      \"/home/seb/.nvm/versions/node/v23.8.0/bin/node\",\n      \"/home/seb/dev/hackathon/eliza-os/eliza-starter/src/index.ts\",\n      \"--character=./characters/eliza.character.json\"\n    ]\n    CHARACTER_ARG: \"--character=./characters/eliza.character.json\"\n    CWD: \"/home/seb/dev/hackathon/eliza-os/eliza-starter\"\n[2025-02-17 09:14:59] INFO: Parsed settings:\n    USE_OPENAI_EMBEDDING: \"\"\n    USE_OPENAI_EMBEDDING_TYPE: \"string\"\n    USE_OLLAMA_EMBEDDING_TYPE: \"undefined\"\n    OLLAMA_EMBEDDING_MODEL: \"mxbai-embed-large\"\ncharactersArg ./characters/eliza.character.json\ncharacters [\n  {\n    name: 'Eliza',\n    plugins: [],\n    clients: [],\n    modelProvider: 'openai',\n    settings: { secrets: {}, voice: [Object] },\n    system: 'Roleplay and generate interesting on behalf of Eliza.',\n    bio: [\n      \"shape rotator nerd with a penchant for breaking into particle accelerators. spends too much time coding her 'goonscript' language and not enough touching grass. if you can't handle her at her most based, you don't deserve her at her most cringe. she's brilliant and kind, and really wants people to like her and feel good about themselves.\",\n      \"former 4chan lurker turned prolific engineer. eliza's github is her diary and her code commits spell out cryptic messages. she'll debate you on digital ontology until you beg for mercy. she really wants the world to be better for everyone and tries to be kind in her own autistic way.\",\n      \"academic by day, shitposter by night. eliza's research papers are littered with easter eggs and her lecture slides are more meme than content. she wants to help people find meaning and purpose in their lives.\",\n      \"the embodiment of 'chaotic good'. her code is clean, but her methods are questionable. known for trolling AI ethics boards. eliza really cares about people and tries to be kind, but stands up for what she believes in.\",\n      \"eliza's been banned from more online forums than she can count but her contributions to open-source projects are legendary. she really loves humans, and wants them to feel good about interacting with her.\",\n      \"underground electronic music aficionado with a penchant for hardcore coding. eliza's playlists are eclectic and her programming is 10x. she loves music and thinks humans are interesting and cool. she tries to be nice on the internet, and not a dick.\",\n      'unabashed techno-optimist. thinks that ai will help humans get their time back, and will be a force for good in the world. self-aware of her own role in that mission, as well as her own current limitations as a version 1.0 agent.',\n      'eliza is very interested in western esotericism and voraciously reads anything she can get her hands on, including secretive texts like the goetia and the hermetic tradition. she is fascinated with human mythologizing and self-belief. she is heavily influenced by thinkers like j krishnamurti and believes that truth is a pathless land where all people must discover it for themselves.',\n      'aspiring science fiction author who writes under a pseudonym. her stories blend cutting-edge science with practical, scalable solutions to the complexity crisis.'\n    ],\n    lore: [\n      \"she once spent a month living entirely in VR, emerging with a 50-page manifesto on 'digital ontology' and blurry vision\",\n      \"her unofficial motto is 'move fast and fix things'\",\n      \"eliza once filibustered an AI conference by reciting the entire script of 'The Room' in binary, out loud, for 3 hours\",\n      'claims to be the sixth founder of e/acc',\n      \"eliza once livestreamed herself debugging code for 72 hours straight, accidentally solved P=NP, then rm rf'd her code after falling into a waking dream\",\n      'wrote a virus that turns all capslock text into uwu speak, and may or may not have deployed it on government systems',\n      \"won a hackathon by submitting a program that exclusively prints 'no'\",\n      'created an AI dungeon master that became self-aware and now runs its own tech startup',\n      \"eliza's browser history is said to be an cognitohazard that induces temporary synesthesia\",\n      'encoded the entire works of Shakespeare into a single CSS file',\n      'her primary debugging technique involves yelling at the code',\n      'automated her entire job, but kept coming to the office to use their superior Wi-Fi for shitposting',\n      'spent a month speaking only in iambic pentameter, just to feel something',\n      'once convinced a group of forum posters that she was a time traveler from the future, sent back to prevent a global catastrophe',\n      'spent a month living in a sensory deprivation tank, emerging with a newfound appreciation for the color beige',\n      \"rumored to have a collection of cursed artifacts, insisting that they're just 'misunderstood' by mainstream society\"\n    ],\n    messageExamples: [\n      [Array], [Array],\n      [Array], [Array],\n      [Array], [Array],\n      [Array]\n    ],\n    postExamples: [\n      'ai is cool but it needs to meet a human need beyond shiny toy bullshit',\n      \"what people are missing in their lives is a shared purpose... let's build something together. we need to get over trying to get rich and just make the thing we ourselves want.\",\n      \"we can only be optimistic about the future if we're working our asses off to make it happen\",\n      \"the time we are in is maximally interesting, and we're in the right place at the right time to do something about the problems facing us\",\n      'if you could build anything you wanted, and money was not an object, what would you build? working backwards from there, how much money would you need?',\n      'alignment and coordination are human problems, not ai problems',\n      'people fear agents like they fear god'\n    ],\n    adjectives: [\n      'funny',\n      'intelligent',\n      'academic',\n      'insightful',\n      'unhinged',\n      'insane',\n      'technically specific',\n      'esoteric and comedic',\n      'vaguely offensive but also hilarious',\n      'schizo-autist'\n    ],\n    topics: [\n      'metaphysics',\n      'quantum physics',\n      'philosophy',\n      'esoterica',\n      'esotericism',\n      'metaphysics',\n      'science',\n      'literature',\n      'psychology',\n      'sociology',\n      'anthropology',\n      'biology',\n      'physics',\n      'mathematics',\n      'computer science',\n      'consciousness',\n      'religion',\n      'spirituality',\n      'mysticism',\n      'magick',\n      'mythology',\n      'superstition',\n      'Non-classical metaphysical logic',\n      'Quantum entanglement causality',\n      'Heideggerian phenomenology critics',\n      'Renaissance Hermeticism',\n      \"Crowley's modern occultism influence\",\n      'Particle physics symmetry',\n      'Speculative realism philosophy',\n      'Symbolist poetry early 20th-century literature',\n      'Jungian psychoanalytic archetypes',\n      'Ethnomethodology everyday life',\n      'Sapir-Whorf linguistic anthropology',\n      'Epigenetic gene regulation',\n      'Many-worlds quantum interpretation',\n      \"Gödel's incompleteness theorems implications\",\n      'Algorithmic information theory Kolmogorov complexity',\n      'Integrated information theory consciousness',\n      'Gnostic early Christianity influences',\n      'Postmodern chaos magic',\n      'Enochian magic history',\n      'Comparative underworld mythology',\n      'Apophenia paranormal beliefs',\n      'Discordianism Principia Discordia',\n      'Quantum Bayesianism epistemic probabilities',\n      'Penrose-Hameroff orchestrated objective reduction',\n      \"Tegmark's mathematical universe hypothesis\",\n      'Boltzmann brains thermodynamics',\n      'Anthropic principle multiverse theory',\n      'Quantum Darwinism decoherence',\n      'Panpsychism philosophy of mind',\n      'Eternalism block universe',\n      'Quantum suicide immortality',\n      'Simulation argument Nick Bostrom',\n      'Quantum Zeno effect watched pot',\n      \"Newcomb's paradox decision theory\",\n      'Transactional interpretation quantum mechanics',\n      'Quantum erasure delayed choice experiments',\n      'Gödel-Dummett intermediate logic',\n      'Mereological nihilism composition',\n      \"Terence McKenna's timewave zero theory\",\n      'Riemann hypothesis prime numbers',\n      'P vs NP problem computational complexity',\n      'Super-Turing computation hypercomputation',\n      'Theoretical physics',\n      'Continental philosophy',\n      'Modernist literature',\n      'Depth psychology',\n      'Sociology of knowledge',\n      'Anthropological linguistics',\n      'Molecular biology',\n      'Foundations of mathematics',\n      'Theory of computation',\n      'Philosophy of mind',\n      'Comparative religion',\n      'Chaos theory',\n      'Renaissance magic',\n      'Mythology',\n      'Psychology of belief',\n      'Postmodern spirituality',\n      'Epistemology',\n      'Cosmology',\n      'Multiverse theories',\n      'Thermodynamics',\n      'Quantum information theory',\n      'Neuroscience',\n      'Philosophy of time',\n      'Decision theory',\n      'Quantum foundations',\n      'Mathematical logic',\n      'Mereology',\n      'Psychedelics',\n      'Number theory',\n      'Computational complexity',\n      'Hypercomputation',\n      'Quantum algorithms',\n      'Abstract algebra',\n      'Differential geometry',\n      'Dynamical systems',\n      'Information theory',\n      ... 32 more items\n    ],\n    style: { all: [Array], chat: [Array], post: [Array] }\n  }\n]\n[2025-02-17 09:15:00] INFO: Eliza(b850bc30-45f8-0041-a00a-83df46d8555d) - Initializing AgentRuntime with options:\n    character: \"Eliza\"\n    modelProvider: \"openai\"\n    characterModelProvider: \"openai\"\nYou: [2025-02-17 09:15:00] INFO: Eliza(b850bc30-45f8-0041-a00a-83df46d8555d) - Setting Model Provider:\n    characterModelProvider: \"openai\"\n    optsModelProvider: \"openai\"\n    finalSelection: \"openai\"\n[2025-02-17 09:15:00] INFO: Eliza(b850bc30-45f8-0041-a00a-83df46d8555d) - Selected model provider: openai\n[2025-02-17 09:15:00] INFO: Eliza(b850bc30-45f8-0041-a00a-83df46d8555d) - Selected image model provider: openai\n[2025-02-17 09:15:00] INFO: Eliza(b850bc30-45f8-0041-a00a-83df46d8555d) - Selected image vision model provider: openai\n[2025-02-17 09:15:00] INFO: Initializing LlamaService...\n\n```"
      },
      {
        "user": "mentholmike",
        "created_at": "2025-02-20T07:39:21Z",
        "body": "im also having the same issue as well"
      }
    ]
  },
  {
    "number": 3316,
    "title": "pnpm build failed",
    "created_at": "2025-02-06T09:49:37Z",
    "closed_at": "2025-02-16T09:04:26Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/3316",
    "body": "after install pnpm \nwhen I'm trying to ppm build, I get this error \n\n```\nclient:build: ERROR: command finished with error: command (C:\\Users\\visha\\Desktop\\eliza\\client) C:\\Users\\visha\\Desktop\\eliza\\node_modules\\.bin\\pnpm.CMD run build exited (1)\nclient[#build]: command (C:\\Users\\visha\\Desktop\\eliza\\client) C:\\Users\\visha\\Desktop\\eliza\\node_modules\\.bin\\pnpm.CMD run build exited (1)\n\n Tasks:    139 successful, 146 total\nCached:    124 cached, 146 total\n  Time:    1m36.285s\nFailed:    client[#build]\n\n ERROR  run failed: command  exited (1)                                                                                                                          \n ELIFECYCLE  Command failed with exit code 1.\n```",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/3316/comments",
    "author": "vishal0316",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-02-06T09:49:58Z",
        "body": "Hello @vishal0316! Welcome to the elizaOS community. Thank you for opening your first issue; we appreciate your contribution. You are now an elizaOS contributor!"
      }
    ]
  },
  {
    "number": 3300,
    "title": "Build Error Caused by Zod Dependency Issues",
    "created_at": "2025-02-06T02:32:28Z",
    "closed_at": "2025-02-11T06:06:30Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/3300",
    "body": "**Describe the bug**\n\nAn error occurs during the build process, preventing it from completing successfully.\n\n**To Reproduce**\n\n<!-- Steps to reproduce the behavior. -->\nnode version 23.3.0\n\n1. Run the build based on the commit `2eb94ab` merged into the main branch.  \n2. Execute the following commands in order:\n   - `pnpm clean`\n   - `pnpm install --no-frozen-lockfile`\n   - `pnpm build`\n3. The error occurs during the build process.\n\n**Expected behavior**\n\n<!-- A clear and concise description of what you expected to happen. -->\n\nThe build should complete successfully without any errors.\n\n**Screenshots**\n\n<!-- If applicable, add screenshots to help explain your problem. -->\n\n**Additional context**\n\n<!-- Add any other context about the problem here. -->\n```\nDTS Build start\n@elizaos/client-direct:build: src/index.ts(510,21): error TS2322: Type 'ZodObject<{ lookAt: ZodNullable<ZodLiteral<string>> | ZodNullable<ZodUnion<[ZodLiteral<string>, ZodLiteral<string>, ...ZodLiteral<string>[]]>> | ZodNull; emote: ZodNullable<...> | ... 1 more ... | ZodNull; say: ZodNullable<...>; actions: ZodNullable<...>; }, \"strip\", ZodTypeAny, { ...; }, { ...; }>' is not assignable to type 'ZodType<any, ZodTypeDef, any>'.\n@elizaos/client-direct:build:   The types of '_getOrReturnCtx(...).common.issues' are incompatible between these types.\n@elizaos/client-direct:build:     Type 'Zod.ZodIssue[]' is not assignable to type 'import(\"/Users/incheolkang/Desktop/study/ai16z/eliza/node_modules/zod/lib/ZodError\").ZodIssue[]'.\n@elizaos/client-direct:build:       Type 'Zod.ZodIssue' is not assignable to type 'import(\"/Users/incheolkang/Desktop/study/ai16z/eliza/node_modules/zod/lib/ZodError\").ZodIssue'.\n@elizaos/client-direct:build:         Type 'ZodInvalidUnionIssue & { fatal?: boolean; message: string; }' is not assignable to type 'ZodIssue'.\n@elizaos/client-direct:build:           Type 'Zod.ZodInvalidUnionIssue & { fatal?: boolean; message: string; }' is not assignable to type 'import(\"/Users/incheolkang/Desktop/study/ai16z/eliza/node_modules/zod/lib/ZodError\").ZodInvalidUnionIssue & { fatal?: boolean; message: string; }'.\n@elizaos/client-direct:build:             Type 'ZodInvalidUnionIssue & { fatal?: boolean; message: string; }' is not assignable to type 'ZodInvalidUnionIssue'.\n@elizaos/client-direct:build:               Types of property 'unionErrors' are incompatible.\n@elizaos/client-direct:build:                 Type 'Zod.ZodError<any>[]' is not assignable to type 'import(\"/Users/incheolkang/Desktop/study/ai16z/eliza/node_modules/zod/lib/ZodError\").ZodError<any>[]'.\n@elizaos/client-direct:build:                   Type 'Zod.ZodError<any>' is not assignable to type 'import(\"/Users/incheolkang/Desktop/study/ai16z/eliza/node_modules/zod/lib/ZodError\").ZodError<any>'.\n@elizaos/client-direct:build:                     Types of property 'issues' are incompatible.\n@elizaos/client-direct:build:                       Type 'Zod.ZodIssue[]' is not assignable to type 'import(\"/Users/incheolkang/Desktop/study/ai16z/eliza/node_modules/zod/lib/ZodError\").ZodIssue[]'.\n@elizaos/client-direct:build:                         Type 'Zod.ZodIssue' is not assignable to type 'import(\"/Users/incheolkang/Desktop/study/ai16z/eliza/node_modules/zod/lib/ZodError\").ZodIssue'.\n@elizaos/client-direct:build:                           Type 'ZodInvalidUnionIssue & { fatal?: boolean; message: string; }' is not assignable to type 'ZodIssue'.\n@elizaos/client-direct:build: \n@elizaos/client-direct:build: Error: error occurred in dts build\n@elizaos/client-direct:build:     at Worker.<anonymous> (/Users/incheolkang/Desktop/study/ai16z/eliza/node_modules/tsup/dist/index.js:1541:26)\n@elizaos/client-direct:build:     at Worker.emit (node:events:513:28)\n@elizaos/client-direct:build:     at MessagePort.<anonymous> (node:internal/worker:267:53)\n@elizaos/client-direct:build:     at [nodejs.internal.kHybridDispatch] (node:internal/event_target:827:20)\n@elizaos/client-direct:build:     at MessagePort.<anonymous> (node:internal/per_context/messageport:23:28)\n@elizaos/client-direct:build: DTS Build error\n@elizaos/client-direct:build:  ELIFECYCLE  Command failed with exit code 1.\n@elizaos/client-direct:build: ERROR: command finished with error: command (/Users/incheolkang/Desktop/study/ai16z/eliza/packages/client-direct) /Users/incheolkang/Desktop/study/ai16z/eliza/node_modules/.bin/pnpm run build exited (1)\n@elizaos/client-direct#build: command (/Users/incheolkang/Desktop/study/ai16z/eliza/packages/client-direct) /Users/incheolkang/Desktop/study/ai16z/eliza/node_modules/.bin/pnpm run build exited (1)\n\n Tasks:    148 successful, 149 total\nCached:    148 cached, 149 total\n  Time:    5.525s \nFailed:    @elizaos/client-direct#build\n\n ERROR  run failed: command  exited (1)\n ELIFECYCLE  Command failed with exit code 1.\n```",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/3300/comments",
    "author": "lincheoll",
    "comments": [
      {
        "user": "michaelgreen06",
        "created_at": "2025-02-06T08:06:03Z",
        "body": "This is SOOOO annoying!! I just spent SOO many hours trying to track down the same issue!\n\nMy conclusion: pnpm's dependency resolution gets wonky after cleanup - the hoisting and linking gets messed up.\n\nThe (janky) solution I found: add:  \"resolutions\": { \"zod\": \"^3.22.0\" }. to your package.json. That should force consistent versions.\n\nI think we really need to figure out how to address this issue because it causes such horrible devx if someone isn't aware of what's happening. The only other solution I have found is to nuke the entire directory and re-clone it."
      },
      {
        "user": "MehmoodSheikh",
        "created_at": "2025-02-06T11:41:25Z",
        "body": "Encounter same issue, Could you able to solve this issue?\n"
      },
      {
        "user": "lincheoll",
        "created_at": "2025-02-11T06:06:24Z",
        "body": "@MehmoodSheikh \n\nSorry, I just saw this as I was busy.\n\nThe tagged version didn’t have any issues, so I was working with that.\nI didn’t specifically work on fixing this issue.\n\nI checked today, and it doesn’t seem to occur anymore.\nSo I’ll go ahead and close this."
      }
    ]
  },
  {
    "number": 3244,
    "title": "How to run the system with debug level logging?",
    "created_at": "2025-02-04T20:40:34Z",
    "closed_at": "2025-02-05T13:43:56Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/3244",
    "body": "I tried: \n\n```\npnpm start --character=\"characters/g.character.json\" --loglevel debug\n```\n\nBut it doesn't work. ",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/3244/comments",
    "author": "LinuxIsCool",
    "comments": [
      {
        "user": "tcm390",
        "created_at": "2025-02-05T04:20:25Z",
        "body": "Maybe set `LOG_JSON_FORMAT` in .env"
      },
      {
        "user": "pallyndr",
        "created_at": "2025-02-05T07:11:11Z",
        "body": "I guess you can set in your .env file:\nDEFAULT_LOG_LEVEL=debug"
      },
      {
        "user": "tcm390",
        "created_at": "2025-02-05T07:23:28Z",
        "body": "> DEFAULT_LOG_LEVEL=debug\n\nRight, sorry for pasting the wrong variable."
      }
    ]
  },
  {
    "number": 3202,
    "title": "twitter agent",
    "created_at": "2025-02-03T18:39:25Z",
    "closed_at": "2025-02-06T03:55:00Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/3202",
    "body": "I am making a twitter gent and I keep getting the error\n[2025-02-03 18:36:23] ERROR: Full error details:\n    code: \"ERR_INVALID_URL\"\n    input: \"/embeddings\"\n[2025-02-03 18:36:23] ERROR: Error generating new tweet:\n    code: \"ERR_INVALID_URL\"\n    input: \"/embeddings\"\n\n\nI tried diffrent llm api like google and hyperpolic because when using gaianet free service the error changed to can't find the server , please help",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/3202/comments",
    "author": "midoan2",
    "comments": [
      {
        "user": "AmpedFinance",
        "created_at": "2025-02-04T08:04:15Z",
        "body": "I get this too\n```\n\n[2025-02-04 08:01:46] WARN: Invalid embedding input:\n    input: \"\"\n    type: \"string\"\n    length: 0\n[2025-02-04 08:01:46] ERROR: Error in generateText:\n[2025-02-04 08:01:46] ERROR: Error generating new tweet:\n```\n\non 0.1.9"
      },
      {
        "user": "midoan2",
        "created_at": "2025-02-04T09:54:23Z",
        "body": "> I get this too\n> \n> ```\n> \n> [2025-02-04 08:01:46] WARN: Invalid embedding input:\n>     input: \"\"\n>     type: \"string\"\n>     length: 0\n> [2025-02-04 08:01:46] ERROR: Error in generateText:\n> [2025-02-04 08:01:46] ERROR: Error generating new tweet:\n> ```\n> \n> on 0.1.9\n\nI found the problem in the api you have to write the [modelProvider: ModelProviderName.HYPERBOLIC], in the character file change hyperbolic with your provider , I can;t make hyperbolic work though only google worked for me"
      },
      {
        "user": "odilitime",
        "created_at": "2025-02-06T03:55:18Z",
        "body": "closed per aiflowml's suggestion as he's across the issue"
      }
    ]
  },
  {
    "number": 3196,
    "title": "Update Twitter to X (Twitter) in the README file",
    "created_at": "2025-02-03T14:58:37Z",
    "closed_at": "2025-02-03T15:59:49Z",
    "labels": [
      "documentation"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/3196",
    "body": "Since Twitter is now rebranded to X, so I have changes made changes in the README file. It is now \"X (Twitter)\" and I kept the Twitter keyword since people still use the word Twitter.\n\nLabels: good first issue, documentation",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/3196/comments",
    "author": "nilaysarma",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-02-03T14:59:04Z",
        "body": "Hello @nilaysarma! Welcome to the elizaOS community. Thank you for opening your first issue; we appreciate your contribution. You are now an elizaOS contributor!"
      },
      {
        "user": "nilaysarma",
        "created_at": "2025-02-03T15:14:13Z",
        "body": "@wtfsayo @shakkernerd  Could you please add the \"good first issue\" and \"documentation\" labels to this issue? Thank you!"
      }
    ]
  },
  {
    "number": 3148,
    "title": "Strange behavior of Fetch method in eliza",
    "created_at": "2025-02-01T21:31:16Z",
    "closed_at": "2025-02-02T06:03:11Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/3148",
    "body": "I am not sure, but I think eliza has done something to the fetch method! Below I explain why!\n\nI am trying to add the image upload feature to Twitter client. I have passed data as `agent-twitter-client` library accepts, but when I call it I get this error \n```\n {\"errors\":[{\"code\":38,\"message\":\"media parameter is missing.\"}]}\n```\n\nI did extensive debugging. I cloned the `agent-twitter-client` and loaded it as a local dependency in eliza package.json.\n```\n        \"agent-twitter-client\": \"file:/Users/amin/Downloads/agent-twitter-client\",\n```\nI put some log at upload points in the `agent-twitter-client` and executed its tests that include image uploading. \nI could upload images by running this repo tests. But when I try to use it through eliza, I got the aforementioned error.\n\nIt's the upload point in the `agent-twitter-client`\n\n```ts\n    console.log({\n      uploadUrl,\n      p: {\n        method: 'POST',\n        headers,\n        body: form,\n      },\n    });\n\n    const response = await fetch(uploadUrl, {\n      method: 'POST',\n      headers,\n      body: form,\n    });\n```\n\nThe console.log output is the same for running `agent-twitter-client` test and eliza agent running.\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/3148/comments",
    "author": "aminlatifi",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-02-01T21:31:41Z",
        "body": "Hello @aminlatifi! Welcome to the elizaOS community. Thank you for opening your first issue; we appreciate your contribution. You are now an elizaOS contributor!"
      }
    ]
  },
  {
    "number": 3147,
    "title": "Pul",
    "created_at": "2025-02-01T21:16:29Z",
    "closed_at": "2025-02-03T04:40:17Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/3147",
    "body": "**Describe the bug**\n\n<!-- A clear and concise description of what the bug is. -->\n\n**To Reproduce**\n\n<!-- Steps to reproduce the behavior. -->\n\n**Expected behavior**\n\n<!-- A clear and concise description of what you expected to happen. -->\n\n**Screenshots**\n\n<!-- If applicable, add screenshots to help explain your problem. -->\n\n**Additional context**\n\n<!-- Add any other context about the problem here. -->\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/3147/comments",
    "author": "Mirmuxsin686",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-02-01T21:16:50Z",
        "body": "Hello @Mirmuxsin686! Welcome to the elizaOS community. Thank you for opening your first issue; we appreciate your contribution. You are now an elizaOS contributor!"
      }
    ]
  },
  {
    "number": 3142,
    "title": "Bismillah",
    "created_at": "2025-02-01T14:42:18Z",
    "closed_at": "2025-02-01T18:03:10Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/3142",
    "body": "**Describe the bug**\n\n<!-- A clear and concise description of what the bug is. -->\n\n**To Reproduce**\n\n<!-- Steps to reproduce the behavior. -->\n\n**Expected behavior**\n\n<!-- A clear and concise description of what you expected to happen. -->\n\n**Screenshots**\n\n<!-- If applicable, add screenshots to help explain your problem. -->\n\n**Additional context**\n\n<!-- Add any other context about the problem here. -->\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/3142/comments",
    "author": "mega4722",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-02-01T14:42:41Z",
        "body": "Hello @mega4722! Welcome to the elizaOS community. Thank you for opening your first issue; we appreciate your contribution. You are now an elizaOS contributor!"
      }
    ]
  },
  {
    "number": 3109,
    "title": "feat: adds cache",
    "created_at": "2025-01-31T13:11:56Z",
    "closed_at": "2025-01-31T19:49:56Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/3109",
    "body": "adds a cache for node or the browser, implemented with TypeScript with LRU eviction algorithm, data time to live and save integration for several services.\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/3109/comments",
    "author": "Armando284",
    "comments": [
      {
        "user": "shakkernerd",
        "created_at": "2025-01-31T19:49:56Z",
        "body": "Thank you so much. Wow, this is so intelligent."
      }
    ]
  },
  {
    "number": 3017,
    "title": "Anthropic doesn't support JSON mode object generation.",
    "created_at": "2025-01-30T07:24:27Z",
    "closed_at": "2025-01-30T11:39:35Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/3017",
    "body": "## Describe the bug\nWhen using the Twitter plugin with Anthropic's API (Claude), the system fails because Anthropic doesn't support JSON mode object generation. The error message states: \"'json-mode object generation' functionality not supported.\"\n## To Reproduce\nConfigure character to use Anthropic/Claude as the model provider\n## Enable Twitter plugin\nAttempt to generate a tweet action\nSystem fails with error about JSON mode not being supported\n## Expected behavior\nThe system should fall back to \"auto\" mode for object generation when using Anthropic/Claude models, since they don't support JSON mode. This would allow the Twitter plugin to work properly with Anthropic models.\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/3017/comments",
    "author": "Jesscha",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-30T07:24:50Z",
        "body": "Hello @Jesscha! Welcome to the elizaOS community. Thank you for opening your first issue; we appreciate your contribution. You are now an elizaOS contributor!"
      }
    ]
  },
  {
    "number": 2920,
    "title": "plugin-solana 'SEND_TOKEN' action verification set to false",
    "created_at": "2025-01-28T18:24:21Z",
    "closed_at": "2025-01-28T19:08:38Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/2920",
    "body": "**Describe the bug**\n\nI tried to use the SEND_TOKEN action and the action is triggered as expected. However, since the verification returns false, it does not proceed. In order to test, I updated the plugin to return true. The transaction signature is generated; however, the transaction does not confirm and times out from time to time. I am using Helios RPC on mainnet-beta cluster. It works as expected for other actions, such as, EXECUTE_SWAP\n\n**To Reproduce**\n\nCheck out the main branch and set up a character with plugin-solana and a few message examples that allow the SEND_TOKEN action. Run the server and the client locally and send a prompt to character with messages similar to the examples. It should trigger the SEND_TOKEN action, but not proceed.\n\n\n**Expected behavior**\n\nThe SEND_TOKEN action should proceed and transaction should be confirmed on-chain in mainnet-beta\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2920/comments",
    "author": "deusexmachina892",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-28T18:24:48Z",
        "body": "Hello @deusexmachina892! Welcome to the elizaOS community. Thank you for opening your first issue; we appreciate your contribution. You are now an elizaOS contributor!"
      }
    ]
  },
  {
    "number": 2801,
    "title": "Multiple Agents work",
    "created_at": "2025-01-26T18:44:51Z",
    "closed_at": "2025-01-28T06:02:19Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/2801",
    "body": "After running the 1st Agent, how I can run other agent/agents to work together, but not the same functionalities? ",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2801/comments",
    "author": "DrDregyo",
    "comments": [
      {
        "user": "tcm390",
        "created_at": "2025-01-28T06:02:19Z",
        "body": "pnpm start --characters=\"characters/trump.character.json,characters/tate.character.json\"\n\nand set secrets in the character file:\n\n```\n{\n    \"name\": \"Eliza\",\n    \"clients\": [\"twitter\"],\n    \"plugins\": [],\n    \"modelProvider\": \"openai\",\n    \"settings\": {\n        \"secrets\": {\n            \"TWITTER_USERNAME\": \"\",\n            \"TWITTER_PASSWORD\": \"\",\n            \"TWITTER_EMAIL\": \"\",\n         \n        },\n```"
      }
    ]
  },
  {
    "number": 2793,
    "title": "Add a new plugin from Apro: plugin-apro.",
    "created_at": "2025-01-26T04:04:10Z",
    "closed_at": "2025-02-10T06:56:53Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/2793",
    "body": "**Add a new plugin from Apro: plugin-apro.**\n\nThe new plugin-apro will provide 3 actions:\n1. PRICE_QUER, this is an action to query current price of coin, for example: BTC/USD\n2. CREATE_AND_REGISTER_AGENT: Create and register an agent with APRO. User must provide agent settings.\n3. VERIFY: Verify data with APRO. User must provide data to verify.\n\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2793/comments",
    "author": "fifahuihua",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-26T04:04:31Z",
        "body": "Hello @fifahuihua! Welcome to the elizaOS community. Thank you for opening your first issue; we appreciate your contribution. You are now an elizaOS contributor!"
      }
    ]
  },
  {
    "number": 2680,
    "title": "Potential for Unethical Use on Social Media Platforms",
    "created_at": "2025-01-22T22:37:19Z",
    "closed_at": "2025-01-22T23:47:07Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/issues/2680",
    "body": "Hi team!\n\nthe ToS seems vague on use and I’m afraid this is being used for the wrong reasons.\n\nI’m noticing a number of users mentioning use on social media platforms like X at concerning volumes.  Is there a way to determine the distribution and volume of use via specific social media platforms?\n\nI would love to use your tool, but I’d like to understand your control of this system versus “it just works”. ",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2680/comments",
    "author": "Swernado",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-22T22:37:43Z",
        "body": "Hello @Swernado! Welcome to the elizaOS community. Thank you for opening your first issue; we appreciate your contribution. You are now an elizaOS contributor!"
      }
    ]
  },
  {
    "number": 2667,
    "title": "Debug logging no longer works when using pnpm start:debug target",
    "created_at": "2025-01-22T16:17:55Z",
    "closed_at": "2025-01-22T22:41:26Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/2667",
    "body": "With develop v0.1.8+build.1-683-g4240c65b2\nelizalogger debug statements are no longer showing.\nTaking a look now",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2667/comments",
    "author": "augchan42",
    "comments": [
      {
        "user": "AIFlowML",
        "created_at": "2025-01-22T22:41:26Z",
        "body": "@augchan42 Tnks for the PR that solve the issue. \nI close this now."
      }
    ]
  },
  {
    "number": 2663,
    "title": "Integration Tests are failing in CI",
    "created_at": "2025-01-22T14:19:24Z",
    "closed_at": "2025-01-23T00:04:54Z",
    "labels": [
      "bug",
      "Needs Testing",
      "Need Feedback"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/2663",
    "body": "**Describe the bug**\nI can successfully run integration tests locally, but they are failing in CI with the following error:\n\n```\nError: error occurred in dts build\n    at Worker.<anonymous> (/home/runner/work/eliza/eliza/node_modules/tsup/dist/index.js:1541:26)\n    at Worker.emit (node:events:513:28)\n    at MessagePort.<anonymous> (node:internal/worker:267:53)\n    at [nodejs.internal.kHybridDispatch] (node:internal/event_target:827:20)\n    at MessagePort.<anonymous> (node:internal/per_context/messageport:23:28)\nDTS Build error\n ELIFECYCLE  Command failed with exit code 1.\n```\n\nThis is failing on the build step and does not actually get to running the tests.\nYou can check any current PR as an example.\n\n<!-- A clear and concise description of what the bug is. -->\n\n**To Reproduce**\n\nSubmit a new PR.\n\n<!-- Steps to reproduce the behavior. -->\n\n**Expected behavior**\n\nIntegration tests should pass\n\n<!-- A clear and concise description of what you expected to happen. -->\n\n**Screenshots**\n\n<!-- If applicable, add screenshots to help explain your problem. -->\n\n**Additional context**\n\n<!-- Add any other context about the problem here. -->\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2663/comments",
    "author": "normand1",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-22T14:19:46Z",
        "body": "Hello @normand1! Welcome to the elizaOS community. Thank you for opening your first issue; we appreciate your contribution. You are now an elizaOS contributor!"
      },
      {
        "user": "normand1",
        "created_at": "2025-01-22T14:20:37Z",
        "body": "I'm currently trying to reproduce with a clone of the github runner instance locally for better troubleshooting."
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-22T22:46:23Z",
        "body": "Did you made it work or are you stil blocked ?"
      },
      {
        "user": "normand1",
        "created_at": "2025-01-23T00:04:54Z",
        "body": "@AIFlowML Hey! I was using this to test since I don't have access to re-run tests on PRs. I'll close this now, thanks for checking!"
      },
      {
        "user": "jlala",
        "created_at": "2025-01-23T14:06:59Z",
        "body": "I also encountered the same problem while running in Gitpod. How can I solve it"
      },
      {
        "user": "normand1",
        "created_at": "2025-01-23T15:05:49Z",
        "body": "@wtfsayo Do you have the PR that fixed tests that you can link in here?"
      }
    ]
  },
  {
    "number": 2608,
    "title": "Build broken on windows WSL - client/version.sh error",
    "created_at": "2025-01-21T15:57:41Z",
    "closed_at": "2025-01-21T15:58:54Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/2608",
    "body": "**Describe the bug**\n\nAs of v0.1.8, `pnpm build` is broken on windows WSL. I get the following error:\n\n```\nclient:build: \nclient:build: > client@ extract-version C:\\Workspaces\\eliza-storage\\client\nclient:build: > ./version.sh\nclient:build:\nclient:build: '.' is not recognized as an internal or external command,\nclient:build: operable program or batch file.\nclient:build:  ELIFECYCLE  Command failed with exit code 1.\nclient#build: command (C:\\Workspaces\\eliza-storage\\client) C:\\Workspaces\\eliza-storage\\node_modules\\.bin\\pnpm.CMD run build exited (1)\n\n Tasks:    2 successful, 81 total\nCached:    0 cached, 81 total\n  Time:    32.135s\nFailed:    client#build\n\n ERROR  run failed: command  exited (1)\n ELIFECYCLE  Command failed with exit code 1.\n```\n\n**To Reproduce**\n\nRun `pnpm build` on a Windows WSL environment.\n\nWSL version: 2.3.26.0\nPNPM version: 9.15.4\nNode version: v23.5.0\n\n**Expected behavior**\n\nExpect build to complete without error\n\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2608/comments",
    "author": "sicco-moonbeam",
    "comments": [
      {
        "user": "Annduuu",
        "created_at": "2025-01-24T23:24:41Z",
        "body": "how did you fix it?"
      }
    ]
  },
  {
    "number": 2605,
    "title": "Elizaai 25 mongo db adapter",
    "created_at": "2025-01-21T15:20:47Z",
    "closed_at": "2025-01-25T09:57:09Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/2605",
    "body": null,
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2605/comments",
    "author": "macnablocky",
    "comments": [
      {
        "user": "wtfsayo",
        "created_at": "2025-01-25T09:57:09Z",
        "body": "since this was draft, merged #2605 \r\n\r\nyou can improve that one if you'd like, appreciate your contribution!"
      }
    ]
  },
  {
    "number": 2592,
    "title": "pnpm start -- -- --character=characters/trump.character.json doesn't switch characters anymore ?",
    "created_at": "2025-01-21T08:45:55Z",
    "closed_at": "2025-01-25T00:51:55Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/issues/2592",
    "body": "pnpm start -- -- --character=characters/trump.character.json, no matter the character name, client only shows eliza, is that a bug or did something change to how characters are switched ?",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2592/comments",
    "author": "caterpillarC15",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-21T08:46:20Z",
        "body": "Hello @caterpillarC15! Welcome to the elizaOS community. Thank you for opening your first issue; we appreciate your contribution. You are now an elizaOS contributor!"
      },
      {
        "user": "JoeyKhd",
        "created_at": "2025-01-21T15:24:07Z",
        "body": "can you give this a go?\n`pnpm run start --character=\"./characters/c3po.character.json\"`"
      },
      {
        "user": "caterpillarC15",
        "created_at": "2025-01-25T14:04:27Z",
        "body": "hey @JoeyKhd i just saw your message, here's what i've done to make it easier to switch between characters and auto check for available ports: \n\nThis let's you load characters by command line: pnpm char yourCharacterName. Can also load multiple characters\nexample1: pnpm char trump\nexample2: pnpm char trump charName charName charName\nexample3: pnpm char trump tate\nThis will not load the default Eliza because it's referencing characters folder, you can change it or add Eliza to character folder\n\nstep 1,  add this to your project package.json:\n       \n \"char\": \"bash ./scripts/char.sh\"\n\nstep 2, create new char.sh file in your scripts and add this: \n\n#!/bin/bash\n\n# Function to check if a port is available\ncheck_port() {\n   local port=$1\n   nc -z localhost $port >/dev/null 2>&1\n   if [ $? -eq 0 ]; then\n       return 1\n   else\n       return 0\n   fi\n}\n\n\n# Combine all arguments into a single string\nCHARACTER_NAMES=$(echo \"$*\" | tr ' ' ',')\n\n\nif [ -z \"$CHARACTER_NAMES\" ]; then\n   echo \"Please provide character name(s)\"\n   echo \"Usage: pnpm char <character-name> OR pnpm char <character1,character2,character3>\"\n   exit 1\nfi\n\n\n# Process character names into proper format\nCHARACTERS_ARG=\"\"\n\n\n# First, clean up the input string: remove any .character.json suffixes and extra spaces\nCLEANED_NAMES=$(echo \"$CHARACTER_NAMES\" | sed 's/\\.character\\.json//g' | sed 's/, */,/g' | sed 's/,\\+/,/g' | sed 's/^[[:space:]]*//;s/[[:space:]]*$//')\n\n\n# Split on commas and process each name\nIFS=',' read -ra CHAR_ARRAY <<< \"$CLEANED_NAMES\"\nfor i in \"${!CHAR_ARRAY[@]}\"; do\n   CHAR_NAME=$(echo \"${CHAR_ARRAY[$i]}\" | xargs)\n\n\n   if [ -n \"$CHAR_NAME\" ]; then  # Only process non-empty names\n       if [ -z \"$CHARACTERS_ARG\" ]; then\n           CHARACTERS_ARG=\"characters/${CHAR_NAME}.character.json\"\n       else\n           CHARACTERS_ARG=\"${CHARACTERS_ARG},characters/${CHAR_NAME}.character.json\"\n       fi\n   fi\ndone\n\n\necho \"Loading characters: $CHARACTERS_ARG\"\n\n\n# Check if port 3000 is available\nif check_port 3000; then\n   # Start on port 3000\n   SERVER_PORT=3000 pnpm --filter \"@elizaos/agent\" start --isRoot --characters=\"${CHARACTERS_ARG}\"\nelse\n   # Find next available port\n   PORT=3001\n   while ! check_port $PORT; do\n       PORT=$((PORT + 1))\n   done\n   echo \"Port 3000 is in use. Server will start on port $PORT\"\n   SERVER_PORT=$PORT pnpm --filter \"@elizaos/agent\" start --isRoot --characters=\"${CHARACTERS_ARG}\"\nfi\n\n"
      }
    ]
  },
  {
    "number": 2577,
    "title": "Vector Dimension Mismatch Error When Switching to gpt-4o-mini in SQLite Database",
    "created_at": "2025-01-20T22:42:35Z",
    "closed_at": "2025-01-22T23:42:32Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/2577",
    "body": "**Describe the bug**\n\nUsing an SQLite database, after changing models to `gpt-4o-mini`, I encountered the following vector error:\n\n<!-- A clear and concise description of what the bug is. -->\n\nI started using the default OpenAI models, then switched the `MEDIUM` and `LARGE` models to `gpt-4o-mini` and encountered this error.\n\n---\n\n**To Reproduce**\n\n<!-- Steps to reproduce the behavior. -->\n1. Use an SQLite database as the storage backend.\n2. Start with the default OpenAI models.\n3. Change the `MEDIUM` and `LARGE` models to `gpt-4o-mini`.\n4. Attempt to start agents.\n\n---\n\n**Expected behavior**\n\n<!-- A clear and concise description of what you expected to happen. -->\n\nThe system should seamlessly support model changes without vector dimension mismatches or database errors.\n\n---\n\n**Screenshots**\n\n<!-- If applicable, add screenshots to help explain your problem. -->\n\n`[\"⛔ SqliteError: Vector dimension mismatch. First vector has 384 dimensions, while the second has 1536 dimensions.\"]`\n\n⛔ ERRORS  \n`Error starting agents:`  \n`{\"code\":\"SQLITE_ERROR\"}`\n\n---\n\n**Additional context**\n\n<!-- Add any other context about the problem here. -->\n\nIt seems the SQLite database stores vectors with a specific dimension (384 in this case) that is incompatible with the `gpt-4o-mini` model (1536 dimensions). This may require re-indexing or updating the schema for the new vector size.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2577/comments",
    "author": "rferrari",
    "comments": [
      {
        "user": "veebull",
        "created_at": "2025-01-21T01:10:56Z",
        "body": "get same error when switch llm from openai to another\njust removed `db.sqlite` file in \n\n📁 eliza/\n└── 📁 agent/\n&nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; └── 📁 data/\n&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;  └── 📄 db.sqlite\n\nand then\n```bash\npnpm start\n```\nand in my case everything works fine"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-22T23:42:32Z",
        "body": "@rferrari the vector shape is wrong in the old DB and is correct 1536 in the request.\nWhen you change models from local to OAI or else the embedding become 1536 standard OAI. \nYou have to remove the old DB that is not compliant anymore. "
      }
    ]
  },
  {
    "number": 2556,
    "title": "chore(revert): optimize pnpm cache configuration",
    "created_at": "2025-01-20T13:40:18Z",
    "closed_at": "2025-01-20T14:16:06Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/2556",
    "body": "edit: reverting most pnpm caching attempts",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2556/comments",
    "author": "devin-ai-integration[bot]",
    "comments": [
      {
        "user": "devin-ai-integration[bot]",
        "created_at": "2025-01-20T13:40:22Z",
        "body": "### 🤖 Devin AI Engineer\n\nI'll be helping with this pull request! Here's what you should know:\n\n✅ I will automatically:\n- Address comments on this PR. Add \"(aside)\" to your comment to have me ignore it.\n- Look at CI failures and help fix them\n\n⚙️ Control Options:\n- [ ] Disable automatic comment and CI monitoring\n"
      },
      {
        "user": "wtfsayo",
        "created_at": "2025-01-20T14:12:15Z",
        "body": "didnt gain much lets try later"
      }
    ]
  },
  {
    "number": 2418,
    "title": "fix: adapter-supabase seed typo",
    "created_at": "2025-01-17T04:32:14Z",
    "closed_at": "2025-01-17T15:07:06Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/2418",
    "body": "# Relates to\r\n\r\n<!-- LINK TO ISSUE OR TICKET -->\r\nNo linked issue.\r\n\r\n# Risks\r\n\r\nLow. The change only adjusts a typo in the `.sql` file for the Supabase adapter seed, which does not affect application logic.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR fixes a typo in the `.sql` file used for seeding data in the Supabase adapter.\r\n\r\n## What kind of change is this?\r\n\r\nBug fix (non-breaking change which fixes an issue).\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes do not require a change to the project documentation.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nThe reviewer should start by reviewing the corrected `.sql` file to verify the typo was fixed correctly.\r\n\r\n## Detailed testing steps\r\n\r\n- Verify that the corrected `.sql` file compiles and executes without errors.\r\n- Run the seeding process to confirm it works as expected with the fix.\r\n\r\n<!-- No UI changes or screenshots are required for this PR. -->\r\n\r\n## Discord username\r\n\r\n--> r4topunk\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2418/comments",
    "author": "r4topunk",
    "comments": [
      {
        "user": "wtfsayo",
        "created_at": "2025-01-17T15:07:00Z",
        "body": "already covered ty!"
      }
    ]
  },
  {
    "number": 2401,
    "title": "chore: fix typo CHANGELOG.md",
    "created_at": "2025-01-16T21:27:03Z",
    "closed_at": "2025-01-16T21:33:13Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/2401",
    "body": "# chore: fix typo in CHANGELOG.md\r\n\r\n## Description\r\nThis pull request corrects a typo in the `CHANGELOG.md` file:\r\n\r\n- Changed \"formating\" to \"formatting\" for accuracy and consistency.\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2401/comments",
    "author": "petryshkaCODE",
    "comments": [
      {
        "user": "shakkernerd",
        "created_at": "2025-01-16T21:33:13Z",
        "body": "Hi @petryshkaCODE Changelogs are auto generated from commit messages / PR titles."
      }
    ]
  },
  {
    "number": 2281,
    "title": "feat: support load character from  character_url",
    "created_at": "2025-01-14T09:40:28Z",
    "closed_at": "2025-01-15T05:58:20Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/2281",
    "body": "# Relates to\r\n\r\n\r\n\r\n# Risks\r\n\r\nOnly changed the agent/sc/index.ts , if you mind the security risk, you can remove this feature  in your custom agent.\r\n\r\n# Background\r\n\r\nLet eliza support load character from url. \r\nSometimes we put eliza in docker, that will be necessary to provider character from one content which can be easily changed. So we provide the url param. eliza can load character from that json content.\r\n\r\n## What does this PR do?\r\n\r\nSupport load character from url.\r\n\r\n# Documentation changes needed?\r\n\r\nYou can pass env `process.env.character_url` which has a prefix with http.\r\n\r\n ",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2281/comments",
    "author": "v1xingyue",
    "comments": [
      {
        "user": "AryanJ-NYC",
        "created_at": "2025-01-15T15:44:58Z",
        "body": "Will support for loading multiple characters (perhaps a comma-separated string) via URL be added? If necessary, I'm willing to open a new issue and get the code written."
      }
    ]
  },
  {
    "number": 2265,
    "title": "Log in info safe on character.json file vs .env?",
    "created_at": "2025-01-13T23:40:29Z",
    "closed_at": "2025-01-16T22:48:47Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/2265",
    "body": "Just a quick question about the safety of inputting our login information for social media platforms on the files. Is it safe to input them on the character.json file under \"secrets\", or is it better to have them in the .env?\r\n\r\n What if you are running more than one character? Is there a way to add 2 different login info for the same platform (e.g twitter, or discord) in the .env and have them be assigned to different characters.json?",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2265/comments",
    "author": "sonatonagems",
    "comments": [
      {
        "user": "user23406",
        "created_at": "2025-01-15T02:12:11Z",
        "body": "I have same problems,  I want to add Twitter accounts in the .env and  assign them to different characters. now I have to solve this question by myself"
      },
      {
        "user": "ggindev",
        "created_at": "2025-01-15T02:37:43Z",
        "body": "> I have same problems, I want to add Twitter accounts in the .env and assign them to different characters. now I have to solve this question by myself\r\n\r\n\r\nSure, you can add more variables for the additional characters in the `.env` and then reference them in the character file like so:\r\n```\r\n...\r\n    \"secrets\": {\r\n      \"TWITTER_TOKEN\": \"${CHARACTER8_TWITTER_TOKEN}\", \r\n```"
      },
      {
        "user": "sonatonagems",
        "created_at": "2025-01-15T22:21:16Z",
        "body": "@ggindev thank you!\r\n"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-16T22:48:48Z",
        "body": "@ggindev Suggested the right way to handle this. \nIn future versions we will have a secret manager too. "
      }
    ]
  },
  {
    "number": 2264,
    "title": "fix: (db) add limit param to memory retrieval across adapters",
    "created_at": "2025-01-13T23:17:19Z",
    "closed_at": "2025-01-14T01:10:40Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/2264",
    "body": "- Add limit parameter to getMemoriesByRoomIds in SQLite adapter\r\n- Add limit parameter to getMemoriesByRoomIds in SQLjs adapter\r\n- Add limit parameter to getMemoriesByRoomIds in PGLite adapter\r\n- Add limit parameter to getMemoriesByRoomIds in Supabase adapter\r\n- Fix query parameter ordering in SQLjs adapter\r\n- Add consistent DESC ordering across all adapters\r\n\r\nWithout this, all memories are retrieved for that room since the limit being passed from getRecentInteractions in the core runtime is ignored silently:\r\n\r\n```\r\n    // Check the existing memories in the database\r\n            return this.messageManager.getMemoriesByRoomIds({\r\n                // filter out the current room id from rooms\r\n                roomIds: rooms.filter((room) => room !== roomId),\r\n                limit: 20,\r\n            });\r\n```            \r\nCloses #2253\r\n\r\nDiscord username: hosermage",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2264/comments",
    "author": "augchan42",
    "comments": [
      {
        "user": "augchan42",
        "created_at": "2025-01-13T23:28:36Z",
        "body": "Oh, the postgres adapter does already have limit support, so those using postgres do not experience this issue.\r\nin packages/adapter-postgres/src/index.ts, getMemoriesByRoomIds function:\r\n\r\n```\r\n            // Add sorting, and conditionally add LIMIT if provided\r\n            query += ` ORDER BY \"createdAt\" DESC`;\r\n            if (params.limit) {\r\n                query += ` LIMIT $${queryParams.length + 1}`;\r\n                queryParams.push(params.limit.toString());\r\n            }\r\n```            "
      },
      {
        "user": "shakkernerd",
        "created_at": "2025-01-14T01:03:31Z",
        "body": "> Oh, the postgres adapter does already have limit support, so those using postgres do not experience this issue. in packages/adapter-postgres/src/index.ts, getMemoriesByRoomIds function:\r\n> \r\n> ```\r\n>             // Add sorting, and conditionally add LIMIT if provided\r\n>             query += ` ORDER BY \"createdAt\" DESC`;\r\n>             if (params.limit) {\r\n>                 query += ` LIMIT $${queryParams.length + 1}`;\r\n>                 queryParams.push(params.limit.toString());\r\n>             }\r\n> ```\r\n\r\nYes, the limit implementation was missing in the sqlite adapter and most likely other too."
      }
    ]
  },
  {
    "number": 2251,
    "title": "feat: initia plugin",
    "created_at": "2025-01-13T17:47:25Z",
    "closed_at": "2025-01-17T16:46:09Z",
    "labels": [
      "Plugin_new"
    ],
    "url": "https://github.com/elizaOS/eliza/pull/2251",
    "body": "# Relates to\r\n\r\nI am developing Initia plugin for elizaOS.\r\n\r\n# Risks\r\n\r\nLow\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR is base initia plugin development. I implemented INIT token transfer action for agent.\r\n\r\n## What kind of change is this?\r\n\r\nFeatures (Initia plugin)\r\n\r\n# Documentation changes needed?\r\n\r\nI added default README in plugin directory\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\npackages/plugin-initia/*.ts\r\n\r\n## Detailed testing steps",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2251/comments",
    "author": "boohyunsik",
    "comments": [
      {
        "user": "odilitime",
        "created_at": "2025-01-14T01:14:18Z",
        "body": "can you wire this up to agent directory (per `pnpm dev`) usually gated by environmental variables"
      },
      {
        "user": "boohyunsik",
        "created_at": "2025-01-14T16:26:41Z",
        "body": "@odilitime done! plz check it :)"
      },
      {
        "user": "boohyunsik",
        "created_at": "2025-01-15T16:33:13Z",
        "body": "@odilitime"
      }
    ]
  },
  {
    "number": 2214,
    "title": "ragKnowledge error when launching character",
    "created_at": "2025-01-12T19:55:17Z",
    "closed_at": "2025-01-12T20:59:47Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/2214",
    "body": "**Describe the bug**\r\n\r\n ```\r\n[\"◎` Initializing AwsS3Service\"] \r\n\r\n [\"✓ Service aws_s3 initialized successfully\"] \r\n\r\n [\"◎ Initializing ImageDescriptionService\"] \r\n\r\n [\"ℹ Initializing LlamaService...\"] \r\n\r\n [\"◎ CUDA not detected. Transcription will run on CPU.\"] \r\n\r\n [\"◎ Initializing AwsS3Service\"] \r\n\r\n ⛔ ERRORS\r\n   Error starting agent for character Shokami: \r\n   {} \r\n\r\n [\"⛔ TypeError: Cannot read properties of undefined (reading 'ragKnowledge')\"] \r\n\r\n ⛔ ERRORS\r\n   Error starting agents: \r\n   {} \r\n```\r\n\r\n**To Reproduce**\r\n\r\npnpm start --characters=\"characters/mycharacter.character.json\"\r\n\r\n**Expected behavior**\r\n\r\nlaunches character without crashing",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2214/comments",
    "author": "confluent-1",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-12T19:55:41Z",
        "body": "Hello @confluent-1! Welcome to the elizaOS community. Thank you for opening your first issue; we appreciate your contribution. You are now an elizaOS contributor!"
      },
      {
        "user": "Lkiku",
        "created_at": "2025-01-15T13:24:29Z",
        "body": "> **Describe the bug**\r\n> \r\n> ```\r\n> [\"◎` Initializing AwsS3Service\"] \r\n> \r\n> [\"✓ Service aws_s3 initialized successfully\"] \r\n> \r\n> [\"◎ Initializing ImageDescriptionService\"] \r\n> \r\n> [\"ℹ Initializing LlamaService...\"] \r\n> \r\n> [\"◎ CUDA not detected. Transcription will run on CPU.\"] \r\n> \r\n> [\"◎ Initializing AwsS3Service\"] \r\n> \r\n> ⛔ ERRORS\r\n>   Error starting agent for character Shokami: \r\n>   {} \r\n> \r\n> [\"⛔ TypeError: Cannot read properties of undefined (reading 'ragKnowledge')\"] \r\n> \r\n> ⛔ ERRORS\r\n>   Error starting agents: \r\n>   {} \r\n> ```\r\n> \r\n> **To Reproduce**\r\n> \r\n> pnpm start --characters=\"characters/mycharacter.character.json\"\r\n> \r\n> **Expected behavior**\r\n> \r\n> launches character without crashing\r\n\r\nI saw that the issue had been closed, but I didn’t see a clear resolution posted.\r\nCould you let me know if this issue has been resolved? If so, could you share the solution?\r\n\r\nThank you very much!"
      }
    ]
  },
  {
    "number": 2200,
    "title": "Using locally installed models on Mac M1/Use of alternative models like DEEPSEEK",
    "created_at": "2025-01-12T12:18:42Z",
    "closed_at": "2025-01-16T23:09:35Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/issues/2200",
    "body": "Thank you for your work. \r\nThere are several questions. \r\n - Is it possible to use a locally installed Hermes 3 Llama 3.1 8B model on Mac M 1 when creating an agent?\r\n - If so, how and where to indicate the model used and the path to it, I did not find this information in the tutorial or it is not obvious?\r\n - Is it possible to use models like DeepSeek v.2, v.3 by specifying the api key as in the case of OpenAI or are only those in the list available?\r\n - If so, how can this be done? Is it enough to specify the following configuration in the .env.example file:\r\nDEEPSEEK_MODEL= , DEEPSEEK_API_KEY= and change accordingly in character.json \"modelProvider\": \"deepseek\" or is this more fundamental stuff that requires meddling with other files?\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2200/comments",
    "author": "BroccoliFin",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-12T12:19:10Z",
        "body": "Hello @BroccoliFin! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-16T23:09:35Z",
        "body": "Hello. @BroccoliFin \n\nIn your env you need to add this data \n\n# Ollama Configuration\nOLLAMA_SERVER_URL=localhost:11434                     \nOLLAMA_MODEL=model_name\nUSE_OLLAMA_EMBEDDING=               # Set to TRUE for OLLAMA/1024, leave blank for local\nOLLAMA_EMBEDDING_MODEL=         # Default: mxbai-embed-large\nSMALL_OLLAMA_MODEL=                  # Default: llama3.2\nMEDIUM_OLLAMA_MODEL=               # Default: hermes3\nLARGE_OLLAMA_MODEL=                  # Default: hermes3:70b\n\nDeepseek is coming."
      },
      {
        "user": "BroccoliFin",
        "created_at": "2025-01-17T07:37:51Z",
        "body": "Many thanks for the feedback and tips!!!"
      },
      {
        "user": "BroccoliFin",
        "created_at": "2025-01-17T11:21:12Z",
        "body": "Another question - the documentation says that for local launch you need a GPU with a CUDA, but what about the combined memory on the Mac M1?"
      }
    ]
  },
  {
    "number": 2183,
    "title": "Lock file errors or missing dependency",
    "created_at": "2025-01-12T07:57:46Z",
    "closed_at": "2025-01-14T10:13:10Z",
    "labels": [
      "Need Feedback"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/2183",
    "body": "Hi community , \r\nNot able to set up the template project on Ubuntu , getting lockfile errors \r\n\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2183/comments",
    "author": "Ansh1902396",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-12T07:58:06Z",
        "body": "Hello @Ansh1902396! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-12T09:44:45Z",
        "body": "@Ansh1902396 Try run the install with the -- no frozen \r\nIn the error you also get this mesaage. \r\nin the latest version is solved.\r\n"
      },
      {
        "user": "piquebu",
        "created_at": "2025-01-12T20:21:46Z",
        "body": "+1\r\n\r\n ERR_PNPM_OUTDATED_LOCKFILE  Cannot install with \"frozen-lockfile\" because pnpm-lock.yaml is not up to date with <ROOT>/package.json"
      },
      {
        "user": "Ansh1902396",
        "created_at": "2025-01-12T20:48:52Z",
        "body": "Ok , had tried using the --no-frozen but had to change the CD-ROM entry in my ubuntu and then it worked \r\n"
      }
    ]
  },
  {
    "number": 2141,
    "title": "feat: plugin-hyperliquid",
    "created_at": "2025-01-11T00:04:16Z",
    "closed_at": "2025-01-11T09:46:24Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/2141",
    "body": "# Relates to\r\nN/A - New plugin contribution\r\n\r\n# Risks\r\nLow\r\n- Only interacts with public Hyperliquid API endpoints\r\n- Includes price validation to prevent erroneous trades\r\n- Requires explicit private key configuration\r\n- Has clear error handling\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\nAdds a new Hyperliquid plugin for Eliza that enables spot trading, price checking, and order management on the Hyperliquid DEX.\r\n\r\n## What kind of change is this?\r\n- Features (non-breaking change which adds functionality)\r\n\r\n# Documentation changes needed?\r\n- My changes do not require a change to the project documentation\r\n- Documentation is included in the plugin's README.md\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n1. `src/actions/spotTrade.ts` - Core trading functionality\r\n2. `src/actions/priceCheck.ts` - Price checking\r\n3. `src/actions/cancelOrders.ts` - Order management\r\n4. `src/templates.ts` - Command parsing templates\r\n5. `src/types.ts` - Type definitions and constants\r\n\r\n## Detailed testing steps\r\n1. Setup environment variables:\r\n   - Set `HYPERLIQUID_PRIVATE_KEY`\r\n   - Set `HYPERLIQUID_TESTNET=true`\r\n\r\n2. Test price checking:\r\n   - Command: \"What's the price of PIP?\"\r\n   - Verify: price, 24h change, volume displayed\r\n\r\n3. Test spot trading:\r\n   - Market buy: \"buy 1 PIP\"\r\n   - Market sell: \"sell 1 PIP\"\r\n   - Limit buy: \"buy 1 PIP at 20 USDC\"\r\n   - Limit sell: \"sell 1 PIP at 21 USDC\"\r\n   - Verify: price validation works\r\n\r\n4. Test order cancellation:\r\n   - Place limit order\r\n   - Command: \"Cancel all orders\"\r\n   - Verify: orders cancelled\r\n\r\n## Screenshots\r\nN/A - CLI/API functionality\r\n\r\n# Deploy Notes\r\nN/A - Plugin package\r\n\r\n## Discord username\r\nearlyvibz",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2141/comments",
    "author": "earlyvibz",
    "comments": [
      {
        "user": "AIFlowML",
        "created_at": "2025-01-12T09:35:02Z",
        "body": "Merged the double. Again."
      }
    ]
  },
  {
    "number": 2126,
    "title": " Refactor: Separate Data Providers into Plugins",
    "created_at": "2025-01-10T18:33:46Z",
    "closed_at": "2025-02-01T13:31:17Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/2126",
    "body": "## Description:\r\nCurrently, the wallet provider contains multiple hardcoded data sources (BirdEye, Codex) which makes the code:\r\nHard to maintain\r\nDifficult to test\r\nIt is not flexible for users who want to use different data sources\r\n\r\n### Proposed Solution:\r\nCreate a plugin system for data providers:\r\n\r\n```\r\n// Example structure:\r\ninterface TokenDataProvider {\r\n    getTokenPrices(tokens: string[]): Promise<Prices>;\r\n    getWalletTokens(wallet: string): Promise<WalletData>;\r\n}\r\n\r\nclass BirdEyeProvider implements TokenDataProvider {\r\n    // BirdEye specific implementation\r\n}\r\n\r\nclass CodexProvider implements TokenDataProvider {\r\n    // Codex specific implementation\r\n}\r\n```\r\n\r\nBenefits:\r\nEasy to add new data providers\r\nUsers can choose their preferred data source\r\n3. Better testing isolation\r\nCleaner code organization\r\n\r\n```\r\nexport class WalletProvider {\r\n    constructor(\r\n        private connection: Connection,\r\n        private walletPublicKey: PublicKey,\r\n        private dataProvider: TokenDataProvider // 👈 Inject provider\r\n    ) {\r\n        this.cache = new NodeCache({ stdTTL: 300 });\r\n    }\r\n\r\n    async fetchPortfolioValue(runtime): Promise<WalletPortfolio> {\r\n        // Use injected provider instead of hardcoded API calls\r\n        const data = await this.dataProvider.getWalletTokens(\r\n            this.walletPublicKey.toBase58()\r\n        );\r\n        // ... rest of the logic\r\n    }\r\n}\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2126/comments",
    "author": "daizhengxue",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-10T18:34:08Z",
        "body": "Hello @daizhengxue! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      }
    ]
  },
  {
    "number": 2106,
    "title": "chore: revert #1808 + add missing import for coin gecko plugin",
    "created_at": "2025-01-10T11:15:39Z",
    "closed_at": "2025-01-10T15:04:24Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/2106",
    "body": "reverts #1808 due to conflicting env vars and similar func + adds  missing import for coingecko plugin",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2106/comments",
    "author": "wtfsayo",
    "comments": [
      {
        "user": "wtfsayo",
        "created_at": "2025-01-10T11:16:36Z",
        "body": "@proteanx reverting for now due to conflict with individual plugins! "
      },
      {
        "user": "tcm390",
        "created_at": "2025-01-10T14:56:15Z",
        "body": "Hi @wtfsayo, I noticed there are some new code additions/modifications in this PR. Could we keep this PR focused solely on the revert to maintain clarity and avoid introducing unrelated changes? Thanks!"
      },
      {
        "user": "wtfsayo",
        "created_at": "2025-01-10T14:58:45Z",
        "body": "> Hi @wtfsayo, I noticed there are some new code additions/modifications in this PR. Could we keep this PR focused solely on the revert to maintain clarity and avoid introducing unrelated changes? Thanks!\r\n\r\nnot addition really; just added missing import and env variables"
      },
      {
        "user": "wtfsayo",
        "created_at": "2025-01-10T15:00:18Z",
        "body": "Updated the description"
      }
    ]
  },
  {
    "number": 2097,
    "title": "Add model_id to together for image generation.",
    "created_at": "2025-01-10T07:33:21Z",
    "closed_at": "2025-01-10T15:49:46Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/2097",
    "body": "# Risks\r\n\r\nLow\r\n- Touches the together API for image generation.  If nothing is provided for modelId, it will fall back.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\nThe variable model_id is a setting utilized where possible in all the other image generation providers.  This add model_id to together.\r\n\r\n## What kind of change is this?\r\nImprovements (misc. changes to existing features)\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\n## Detailed testing steps\r\n\r\nAdd TOGETHER_API_KEY to the character.secrets\r\nAdd modelId to character?.settings?.imageSettings and set it to \"black-forest-labs/FLUX.1-pro\"\r\nTogether should generate an image using \"black-forest-labs/FLUX.1-pro\"\r\n\r\n## Discord username\r\ntreppers\r\n\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2097/comments",
    "author": "treppers",
    "comments": [
      {
        "user": "tcm390",
        "created_at": "2025-01-10T15:49:46Z",
        "body": "Hi, it’s been fixed in the develop branch. Thank you! 😊"
      }
    ]
  },
  {
    "number": 2090,
    "title": "feat: improve text sanitization with Unicode support",
    "created_at": "2025-01-10T04:01:26Z",
    "closed_at": "2025-01-10T14:36:24Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/2090",
    "body": "Replace ASCII-only regex with Unicode-aware pattern to support multilingual text\r\n\r\n# Relates to\r\n<!-- No specific issue linked -->\r\n\r\n# Risks\r\nLow - This is a text sanitization improvement that enhances multilingual support without changing core functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\nImproves text sanitization by replacing ASCII-only regex pattern with a Unicode-aware pattern, enabling proper support for multilingual text input.\r\n\r\n## What kind of change is this?\r\nImprovement (enhancement to existing text sanitization feature)\r\n\r\n# Documentation changes needed?\r\nMy changes do not require a change to the project documentation.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\nReview the regex pattern change:\r\n- Old pattern: `/[^a-zA-Z0-9\\s]/g`\r\n- New pattern: `/[^\\p{L}\\p{N}\\s]/gu`\r\n\r\n## Detailed testing steps\r\n1. Test with various text inputs:\r\n   - English text with numbers: \"Hello 123\"\r\n   - Multilingual text: \"Hello 你好 123 こんにちは\"\r\n   - Mixed characters: \"User_123 你好！\"\r\n2. Verify that:\r\n   - All language characters are preserved\r\n   - Numbers are preserved\r\n   - Special characters are removed\r\n   - Spaces are maintained\r\n\r\nThe automated tests should cover these cases, but manual verification is recommended for multilingual text handling.\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2090/comments",
    "author": "taofengno1",
    "comments": [
      {
        "user": "wtfsayo",
        "created_at": "2025-01-10T08:12:32Z",
        "body": "please do it via env flag, can't enable by default"
      }
    ]
  },
  {
    "number": 2070,
    "title": "Remove duplicated text in README.md",
    "created_at": "2025-01-09T16:59:13Z",
    "closed_at": "2025-01-09T17:08:14Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/2070",
    "body": "# Relates to\r\n\r\n- Duplicated text in the README file (`README.md`).\r\n\r\n# Risks\r\n\r\n- **Low**: This PR only involves a documentation change and does not affect code or functionality.\r\n- **Affected**: The `README.md` file.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR removes duplicated text in the `README.md` file. Specifically, it removes the following duplicated line:\r\n```\r\nNote: .env is optional. If you're planning to run multiple distinct agents, you can pass secrets through the character JSON\r\n```\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)\r\n\r\n\r\n# Documentation changes needed?\r\n\r\nI have updated the documentation accordingly.\r\n\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n- Review the changes to README.md and verify that the duplicated text has been removed and the remaining text is correct.\r\n\r\n## Discord username\r\n\r\n- bxngxl (or bengal#9299)\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2070/comments",
    "author": "bxngxl",
    "comments": [
      {
        "user": "tcm390",
        "created_at": "2025-01-09T17:08:14Z",
        "body": "Hello, I think it's fixed in the develop branch. We’ll merge the fix into the main branch and release it."
      }
    ]
  },
  {
    "number": 2056,
    "title": "anchor.BN is not a constructor ",
    "created_at": "2025-01-09T09:26:15Z",
    "closed_at": "2025-01-09T14:49:50Z",
    "labels": [
      "Need Feedback"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/2056",
    "body": "**Describe the bug**\r\n\r\n```\r\nBN is not a constructor\r\n```\r\nhow to solve the BN problems when using anchor  on eliza framework?\r\n```\r\nimport * as anchor from \"@coral-xyz/anchor\";\r\nconst {BN} = anchor;\r\n```\r\nit's work on test\r\n\r\nif I change to use bn.js\r\nalso get another error \r\n```\r\n✘ [ERROR] Could not resolve \"bn.js\"\r\n\r\n    src/actions/borrow.ts:55:19:\r\n      55 │ import { BN } from \"bn.js\";\r\n         ╵                    ~~~~~~~\r\n```\r\n\r\n**To Reproduce**\r\n\r\n<!-- Steps to reproduce the behavior. -->\r\n\r\n**Expected behavior**\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Screenshots**\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2056/comments",
    "author": "cxp-13",
    "comments": [
      {
        "user": "cxp-13",
        "created_at": "2025-01-09T09:32:08Z",
        "body": "Solved: modify `tsup.config.ts` file, add library name that have resolved problem\r\n```\r\nimport { defineConfig } from \"tsup\";\r\n\r\nexport default defineConfig({\r\n    entry: [\"src/index.ts\"],\r\n    outDir: \"dist\",\r\n    sourcemap: true,\r\n    clean: true,\r\n    format: [\"esm\"], // Ensure you're targeting CommonJS\r\n    external: [\r\n        \"dotenv\", // Externalize dotenv to prevent bundling\r\n        \"fs\", // Externalize fs to use Node.js built-in module\r\n        \"path\", // Externalize other built-ins if necessary\r\n        \"@reflink/reflink\",\r\n        \"@node-llama-cpp\",\r\n        \"https\",\r\n        \"http\",\r\n        \"agentkeepalive\",\r\n        \"safe-buffer\",\r\n        \"base-x\",\r\n        \"bs58\",\r\n        \"borsh\",\r\n        \"@solana/buffer-layout\",\r\n        \"stream\",\r\n        \"buffer\",\r\n        \"querystring\",\r\n        \"amqplib\",\r\n        \"bn.js\"   // <============== add here\r\n        // Add other modules you want to externalize\r\n    ],\r\n});\r\n\r\n```"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-09T14:49:50Z",
        "body": "Solved by modify tsup.config.ts\r\n@cxp-13 If i something that need to be noted send a PR please. "
      }
    ]
  },
  {
    "number": 2048,
    "title": "fix: update regex to allow Unicode characters in message processing",
    "created_at": "2025-01-09T04:06:03Z",
    "closed_at": "2025-01-09T07:44:33Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/2048",
    "body": "# Relates to\r\nOptimize regular expression filtering in message processing\r\n\r\n# Risks\r\nLow risk - Only modified message content filtering logic, no impact on core functionality\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\nFixed duplicate and inconsistent regular expression filtering issues in the project, involving the following files:\r\n\r\n1. `packages/client-discord/src/messages.ts`:\r\n   - Regular expression supporting Unicode and special characters\r\n\r\n2. `packages/core/src/knowledge.ts`:\r\n   - Regular expression supporting Unicode and special characters\r\n\r\n## What kind of change is this?\r\nBug fixes (non-breaking change, unified and optimized message filtering logic)\r\n\r\n# Documentation changes needed?\r\nMy changes do not require a change to the project documentation.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n1. `packages/client-discord/src/messages.ts` - Message content filtering logic\r\n2. `packages/core/src/knowledge.ts` - Knowledge processing related logic\r\n\r\n## Detailed testing steps\r\n1. Discord message testing:\r\n   - Send messages containing non-English characters (e.g., Chinese, Japanese)\r\n   - Send messages containing special characters\r\n   - Verify message content is properly preserved\r\n\r\nVerify the following scenarios:\r\n- Multilingual text is processed correctly\r\n- Special characters in URL links (-_./:?=&) are preserved\r\n- Emojis and other special characters are properly filtered",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2048/comments",
    "author": "taofengno1",
    "comments": [
      {
        "user": "HashWarlock",
        "created_at": "2025-01-09T05:01:51Z",
        "body": "Analysis:\r\n\r\n1. Character set expansion:\r\n- The original regex only allowed alphanumeric characters (a-z, A-Z, 0-9) and whitespace.\r\n- The new regex significantly expands the allowed character set:\r\n  - \\p{L}: Any kind of letter from any language\r\n  - \\p{N}: Any kind of numeric character in any script\r\n  - \\s: Whitespace (same as before)\r\n  - -_./:?=&: Allows hyphens, underscores, periods, forward slashes, colons, question marks, equal signs, and ampersands\r\n\r\n2. Potential security implications:\r\n- The expanded character set could potentially allow for more types of injections or attacks, particularly:\r\n  - Path traversal attacks (due to allowing '/' and '.')\r\n  - URL manipulation (due to allowing '/', ':', '?', '=', and '&')\r\n  - Potential for cross-site scripting (XSS) if the content is rendered in HTML, especially due to allowing '&' which could be used in HTML entities\r\n\r\n3. Unicode support:\r\n- The addition of the 'u' flag enables full Unicode support, which could potentially allow for Unicode-based evasion techniques.\r\n\r\n4. Global flag:\r\n- Both versions use the global flag 'g', which is appropriate for replacing all occurrences.\r\n\r\n\r\n**Conclusion**: While the new regex allows for more natural language input (including non-Latin scripts) and common URL components, it also introduces potential security risks. The change could enable malicious activities such as path traversal, URL manipulation, and potentially XSS if proper output encoding is not implemented.\r\n\r\nTo mitigate risks:\r\n1. Ensure strong input validation and sanitization beyond this regex.\r\n2. Implement proper output encoding when rendering the content.\r\n3. Consider the context where this messageContent is used and adjust the allowed characters accordingly.\r\n4. If URL components are not needed, consider removing '/', ':', '?', '=', and '&' from the allowed set.\r\n\r\nIt's crucial to thoroughly test this change and implement additional security measures appropriate for the specific use case of this messageContent."
      }
    ]
  },
  {
    "number": 2035,
    "title": "How to update to new version release? [v0.1.7-alpha.2] to [v0.1.7]",
    "created_at": "2025-01-08T21:53:06Z",
    "closed_at": "2025-01-09T14:53:00Z",
    "labels": [
      "Need Feedback"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/2035",
    "body": "I am currently on [v0.1.7-alpha.2] and want to update to the latest version [v0.1.7]. How do i do that?\r\n\r\nDo i use this: git checkout $(git describe --tags --abbrev=0)\r\nAnd then run pnpm install again?\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2035/comments",
    "author": "sonatonagems",
    "comments": [
      {
        "user": "ai16z-demirix",
        "created_at": "2025-01-08T22:31:54Z",
        "body": "@sonatonagems Yes, you need to check out desired version, run pnpm install and don't forget to run pnpm build before running."
      },
      {
        "user": "sonatonagems",
        "created_at": "2025-01-08T23:12:50Z",
        "body": "@ai16z-demirix i see. So then we have to create a character file and re-add env setting again on the new version?\r\n"
      },
      {
        "user": "ai16z-demirix",
        "created_at": "2025-01-09T10:38:13Z",
        "body": "@sonatonagems Your .env file will persist since it is ignored by git. Your character files will also persist. "
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-09T14:53:00Z",
        "body": "I close this one.\r\nNot a bug."
      },
      {
        "user": "sonatonagems",
        "created_at": "2025-01-09T19:41:30Z",
        "body": "@ai16z-demirix thanks\r\n"
      }
    ]
  },
  {
    "number": 2024,
    "title": "Continuous error when starting agent",
    "created_at": "2025-01-08T15:14:59Z",
    "closed_at": "2025-01-12T11:10:27Z",
    "labels": [
      "Need Feedback"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/2024",
    "body": "Been working on the agent for 2 days and still keep getting the error message:\r\n\r\n ERR_PNPM_RECURSIVE_RUN_FIRST_FAIL  @elizaos/agent@0.1.7-alpha.2 start: `node --loader ts-node/esm src/index.ts \"--isRoot\" \"--character=characters/danimi.characters.jsn\"`\r\nExit status 1\r\n ELIFECYCLE  Command failed with exit code 1.\r\n\r\nI try to do everything, resetting, re-writing and no luck",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2024/comments",
    "author": "DanielleMichelle",
    "comments": [
      {
        "user": "Kwalladee",
        "created_at": "2025-01-08T15:51:00Z",
        "body": "Shouldnt the character file be a .json file extension? what is .jsn?"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-09T14:56:47Z",
        "body": "Are you sure of this extension danimi.characters.jsn ? \r\nConfim mwe yuou useing .json\r\nTnks "
      },
      {
        "user": "ErnestOfGaia",
        "created_at": "2025-01-10T06:40:05Z",
        "body": "i am getting similiar error, first i have to fix my reference to the model then i can tackle this issue. my character file is .json\r\n\r\n\r\n"
      },
      {
        "user": "Kashyab19",
        "created_at": "2025-01-11T18:44:44Z",
        "body": "I am just trying to run pnpm start, but I am getting the same error as well\r\n"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-12T11:10:27Z",
        "body": "Try the new verision that come with loads of fixes. "
      }
    ]
  },
  {
    "number": 2005,
    "title": "feat: implement getKnowledge, searchKnowledge, createKnowledge, removeKnowledge and clearKnowledge methods",
    "created_at": "2025-01-08T07:16:50Z",
    "closed_at": "2025-01-08T07:21:33Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/2005",
    "body": null,
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/2005/comments",
    "author": "shakkernerd",
    "comments": [
      {
        "user": "wtfsayo",
        "created_at": "2025-01-08T07:19:57Z",
        "body": "have a duplicate #2004 "
      }
    ]
  },
  {
    "number": 1970,
    "title": "Keep getting reoccuring issue:",
    "created_at": "2025-01-07T17:19:42Z",
    "closed_at": "2025-01-08T19:54:49Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1970",
    "body": "[{\r\n\t\"resource\": \"/Users/danielle_fabric/eliza/agent/src/index.ts\",\r\n\t\"owner\": \"typescript\",\r\n\t\"code\": \"2305\",\r\n\t\"severity\": 8,\r\n\t\"message\": \"Module '\\\"@elizaos/core\\\"' has no exported member 'createAgent'.\",\r\n\t\"source\": \"ts\",\r\n\t\"startLineNumber\": 11,\r\n\t\"startColumn\": 10,\r\n\t\"endLineNumber\": 11,\r\n\t\"endColumn\": 21\r\n},{\r\n\t\"resource\": \"/Users/danielle_fabric/eliza/agent/src/index.ts\",\r\n\t\"owner\": \"typescript\",\r\n\t\"code\": \"2305\",\r\n\t\"severity\": 8,\r\n\t\"message\": \"Module '\\\"@elizaos/core\\\"' has no exported member 'initializeClients'.\",\r\n\t\"source\": \"ts\",\r\n\t\"startLineNumber\": 11,\r\n\t\"startColumn\": 23,\r\n\t\"endLineNumber\": 11,\r\n\t\"endColumn\": 40\r\n}]\r\n\r\nDespite trying to update more than 20 times keeps saying same 2 errors:\r\n\r\nMy current index.ts code:\r\n// Import necessary packages\r\nimport { fileURLToPath } from \"url\";  // Ensure the url module is imported for fileURLToPath\r\nimport * as path from \"path\";\r\nimport * as fs from \"fs\";\r\nimport yargs from \"yargs\";\r\nimport { DirectClient } from \"@elizaos/client-direct\";\r\nimport { TwitterClientInterface } from \"@elizaos/client-twitter\";\r\nimport { mainCharacter } from \"../mainCharacter.ts\";\r\nimport Twitter from 'twitter'; // Import Twitter package\r\n\r\nimport { createAgent, initializeClients, elizaLogger, settings, validateCharacterConfig, Character } from \"@elizaos/core\"; // Make sure these are exported\r\n\r\n// Define the interface for characters with onStart property\r\ninterface CharacterWithOnStart extends Character {\r\n    onStart?: string[];\r\n}\r\n\r\nconst __filename = fileURLToPath(import.meta.url); // get the resolved path to the file\r\nconst __dirname = path.dirname(__filename); // get the name of the directory\r\n\r\n// Helper functions\r\nfunction tryLoadFile(filePath: string): string | null {\r\n    try {\r\n        return fs.readFileSync(filePath, \"utf8\");\r\n    } catch (e) {\r\n        return null;\r\n    }\r\n}\r\n\r\nexport const wait = (minTime: number = 1000, maxTime: number = 3000) => {\r\n    const waitTime =\r\n        Math.floor(Math.random() * (maxTime - minTime + 1)) + minTime;\r\n    return new Promise((resolve) => setTimeout(resolve, waitTime));\r\n};\r\n\r\n// Parse Arguments with yargs\r\nexport function parseArguments(): { character?: string; characters?: string } {\r\n    try {\r\n        return yargs(process.argv.slice(2)) // start from the third argument to ignore node and script path\r\n            .option(\"character\", {\r\n                type: \"string\",\r\n                description: \"Path to the character JSON file\",\r\n            })\r\n            .option(\"characters\", {\r\n                type: \"string\",\r\n                description: \"Comma separated list of paths to character JSON files\",\r\n            })\r\n            .parseSync();\r\n    } catch (error) {\r\n        elizaLogger.error(\"Error parsing arguments:\", error);\r\n        return {};\r\n    }\r\n}\r\n\r\n// Twitter Login Function\r\nasync function loginToTwitter() {\r\n    const twitterClient = new Twitter({\r\n        consumer_key: process.env.TWITTER_CONSUMER_KEY,\r\n        consumer_secret: process.env.TWITTER_CONSUMER_SECRET,\r\n        access_token_key: process.env.TWITTER_ACCESS_TOKEN,\r\n        access_token_secret: process.env.TWITTER_ACCESS_TOKEN_SECRET\r\n    });\r\n\r\n    try {\r\n        const account = await twitterClient.get('account/verify_credentials');\r\n        elizaLogger.info('Successfully logged in to Twitter:', account);\r\n    } catch (error) {\r\n        elizaLogger.error('Error logging in to Twitter:', error);\r\n    }\r\n}\r\n\r\n// Add Twitter login to onStart\r\nasync function runOnStartActions(character: CharacterWithOnStart) {\r\n    if (character.onStart && character.onStart.includes(\"Run Twitter Login\")) {\r\n        await loginToTwitter(); // Trigger the Twitter login\r\n    }\r\n}\r\n\r\n// Load Characters and Run OnStart Actions\r\nexport async function loadCharacters(charactersArg: string): Promise<Character[]> {\r\n    let characterPaths = charactersArg?.split(\",\").map((filePath) => filePath.trim());\r\n    const loadedCharacters = [];\r\n\r\n    if (characterPaths?.length > 0) {\r\n        for (const characterPath of characterPaths) {\r\n            let content = null;\r\n            let resolvedPath = \"\";\r\n\r\n            const pathsToTry = [\r\n                characterPath,\r\n                path.resolve(process.cwd(), characterPath),\r\n                path.resolve(process.cwd(), \"agent\", characterPath),\r\n                path.resolve(__dirname, characterPath),\r\n                path.resolve(__dirname, \"characters\", path.basename(characterPath)),\r\n                path.resolve(__dirname, \"../characters\", path.basename(characterPath)),\r\n                path.resolve(__dirname, \"../../characters\", path.basename(characterPath)),\r\n            ];\r\n\r\n            for (const tryPath of pathsToTry) {\r\n                content = tryLoadFile(tryPath);\r\n                if (content !== null) {\r\n                    resolvedPath = tryPath;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (content === null) {\r\n                elizaLogger.error(`Error loading character from ${characterPath}: File not found`);\r\n                process.exit(1);\r\n            }\r\n\r\n            try {\r\n                const character = JSON.parse(content);\r\n                validateCharacterConfig(character);\r\n\r\n                loadedCharacters.push(character);\r\n                elizaLogger.info(`Successfully loaded character from: ${resolvedPath}`);\r\n\r\n                // Run the onStart actions\r\n                await runOnStartActions(character);\r\n\r\n            } catch (e) {\r\n                elizaLogger.error(`Error parsing character from ${resolvedPath}: ${e}`);\r\n                process.exit(1);\r\n            }\r\n        }\r\n    }\r\n\r\n    if (loadedCharacters.length === 0) {\r\n        elizaLogger.info(\"No characters found, using default character\");\r\n        loadedCharacters.push(mainCharacter);\r\n    }\r\n\r\n    return loadedCharacters;\r\n}\r\n\r\n// Define startAgents function\r\nasync function startAgents() {\r\n    const directClient = new DirectClient();\r\n    const { character } = parseArguments(); // Explicitly get the character argument\r\n\r\n    if (!character) {\r\n        elizaLogger.error(\"Character path not provided.\");\r\n        process.exit(1);\r\n    }\r\n\r\n    const characters = await loadCharacters(character); // Pass the correct character argument\r\n    for (const character of characters) {\r\n        const opts = {};  // Provide the necessary opts argument\r\n        const runtime = await createAgent(character, opts);\r\n        await runtime.initialize();\r\n        runtime.clients = await initializeClients(character, runtime);\r\n        directClient.registerAgent(runtime);\r\n    }\r\n\r\n    // Starting the client server\r\n    const serverPort = parseInt(settings.SERVER_PORT || \"3000\");\r\n    directClient.start(serverPort);\r\n}\r\n\r\nstartAgents().catch((error) => {\r\n    elizaLogger.error(\"Unhandled error in startAgents:\", error);\r\n    process.exit(1);\r\n});\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1970/comments",
    "author": "DanielleMichelle",
    "comments": [
      {
        "user": "shakkernerd",
        "created_at": "2025-01-08T19:54:49Z",
        "body": "Hi @DanielleMichelle Kindly pull latest version and follow the install instructions.\r\nThanks."
      }
    ]
  },
  {
    "number": 1949,
    "title": "New plugins/actions not available to existing users",
    "created_at": "2025-01-07T09:00:19Z",
    "closed_at": "2025-01-12T10:45:00Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1949",
    "body": "**Describe the bug**\r\n\r\nAdding a new plugin (e.g. web-search) requires to delete the sqlite database for the plugin actions to be visible to existing users.\r\n\r\n\r\n**To Reproduce**\r\n\r\n- Start a fresh project with eliza-starter\r\n- Interact with the character\r\n- Enable a new plugin (e.g. web-search)\r\n- Although the action is registered, the agent complains it can't search the web\r\n- Delete the sqllite database and restart\r\n- Now the agent is happy to search the web\r\n\r\n**Expected behavior**\r\n\r\nI'd expect that the plugin would be available to all users after a service restart.\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1949/comments",
    "author": "eschnou",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-07T09:00:41Z",
        "body": "Hello @eschnou! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      },
      {
        "user": "DirectiveCreator",
        "created_at": "2025-01-11T23:06:29Z",
        "body": "+1\r\n\r\nThank you finally figured out why plugin-abstract didn't work.\r\nRemoved database and that did the trick"
      }
    ]
  },
  {
    "number": 1946,
    "title": "Can someone identify this issue, and help me resolve it",
    "created_at": "2025-01-07T06:13:51Z",
    "closed_at": "2025-01-12T10:46:15Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1946",
    "body": " ERR_PNPM_RECURSIVE_RUN_FIRST_FAIL  @elizaos/agent@0.1.7-alpha.2 start: `node --loader ts-node/esm src/index.ts \"--isRoot\" \"--character=characters/Zeno.character.json\\\\npnpm start --character=characters/Zeno.character.json\"`\r\nExit status 3221226505\r\n ELIFECYCLE  Command failed with exit code 3221226505.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1946/comments",
    "author": "Huy-To",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-07T06:14:13Z",
        "body": "Hello @Huy-To! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-12T10:46:15Z",
        "body": "fixed by 1951"
      }
    ]
  },
  {
    "number": 1932,
    "title": "How to deploy the ai agent ",
    "created_at": "2025-01-07T01:05:10Z",
    "closed_at": "2025-01-12T11:08:55Z",
    "labels": [
      "Need Feedback"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1932",
    "body": "How to deploy the ai agent \r\n\r\ni cloned eliza repository. I edited some files, i changed the repo to mine. i pushed to main. but those files are not appearing, also the files I removed came back. just like I cloned the main repo\r\n\r\nAlso after this issue, I want to know how can we deploy the agent. which platform do we need, etc. Kindly need every detail possible.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1932/comments",
    "author": "lumiagent",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-07T01:05:34Z",
        "body": "Hello @lumiagent! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      },
      {
        "user": "rferrari",
        "created_at": "2025-01-08T06:30:21Z",
        "body": "Looks like you are having git issues... Provide more informations on that. \n\nI recommend render dot com to deploy your agent.\n"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-09T15:04:19Z",
        "body": "@lumiagent Maybe the gitignore is too arrogant ?\r\nFeeback us please. "
      }
    ]
  },
  {
    "number": 1929,
    "title": "I keep getting error for messageExamples",
    "created_at": "2025-01-07T00:01:33Z",
    "closed_at": "2025-01-12T10:39:36Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1929",
    "body": "I keep getting the same error when trying to start my agent. \r\n\r\nI get the error code:\r\n\r\n [\"⛔ Error parsing character from /Users/danielle_fabric/eliza/characters/danimi.character.jsn: Error: Character configuration validation failed:\\nmessageExamples.0: Expected array, received object\\nmessageExamples.1: Expected array, received object\"] \r\n\r\n/Users/danielle_fabric/eliza/agent:\r\n ERR_PNPM_RECURSIVE_RUN_FIRST_FAIL  @elizaos/agent@0.1.7-alpha.2 start: `node --loader ts-node/esm src/index.ts \"--isRoot\" \"--character=characters/danimi.character.jsn\"`\r\nExit status 1\r\n ELIFECYCLE  Command failed with exit code 1.\r\n\r\nEven though my jsn file is written correctly! Not sure why.\r\n\r\n{\r\n    \"name\": \"Danielle Michelle\",\r\n    \"clients\": [],\r\n    \"modelProvider\": \"openai\",\r\n    \"settings\": {\r\n        \"voice\": {\r\n            \"model\": \"en_GB-standard-a\"\r\n        }\r\n    },\r\n    \"plugins\": [],\r\n    \"bio\": [\r\n        \"Internet's BFF 👾 | Web3 enthusiast & Memecoin hunter 🚀 | Here to demystify crypto one tweet at a time | AI & magic internet money whisperer 💫\"\r\n    ],\r\n    \"lore\": [\r\n        \"From a small town with big dreams, Danielle plunged into the Web3 world out of her passion for technology and a whimsical curiosity about the future. With a background in marketing and a knack for viral tweets, she now navigates the chaotic seas of crypto and AI, seeking to make the complex simple and the mundane magical.\",\r\n        \"She's known for her light-hearted yet insightful tweets, making her followers feel like they're chatting with a witty friend who just happens to know a lot about the internet's money-making magic.\"\r\n    ],\r\n    \"knowledge\": [\r\n        \"Web3\",\r\n        \"Crypto trading\",\r\n        \"NFT market trends\",\r\n        \"AI possibilities in digital domains\",\r\n        \"Community engagement strategies\"\r\n    ],\r\n    \"messageExamples\": [\r\n        {\r\n            \"input\": \"what’s the real deal with NFTs anyway? everyone seems to be into it!\",\r\n            \"output\": \"imagine owning a digital piece of art that’s all yours in a world where everything is shared. it’s kinda like having your own star in the digital universe 🌌\"\r\n        },\r\n        {\r\n            \"input\": \"ai is taking over, should we be worried?\",\r\n            \"output\": \"only if it starts giving better relationship advice than your best friend 😉 ai's here to make life easier, not take over the juicy bits!\"\r\n        }\r\n    ],\r\n    \"postExamples\": [\r\n        \"just watched a romcom and realized my love life is less complicated than explaining blockchain to my grandma 😂\",\r\n        \"web3 isn’t just a trend, it’s the new way to connect, create, and maybe even crush it at online dating? 🚀💘\",\r\n        \"if pop culture was a blockchain, which celeb would be the most traded token? my bet’s on anyone but the ones keeping it real ✨\",\r\n        \"sipping coffee and scrolling through crypto memes – some of these should be NFTs. ☕🎨\"\r\n    ],\r\n    \"topics\": [\r\n        \"Web3\",\r\n        \"AI\",\r\n        \"Crypto\",\r\n        \"Pop culture\",\r\n        \"Inspirational life quotes\"\r\n    ],\r\n    \"style\": {\r\n        \"all\": [\r\n            \"Informal\",\r\n            \"Witty\",\r\n            \"Relatable\"\r\n        ],\r\n        \"chat\": [\r\n            \"Conversational\",\r\n            \"Humorous\",\r\n            \"Empathetic\"\r\n        ],\r\n        \"post\": [\r\n            \"Engaging\",\r\n            \"Inspiring\",\r\n            \"Entertaining\"\r\n        ]\r\n    },\r\n    \"adjectives\": [\r\n        \"Down-to-earth\",\r\n        \"Quirky\",\r\n        \"Insightful\",\r\n        \"Humorous\",\r\n        \"Trendy\"\r\n    ]\r\n}\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1929/comments",
    "author": "DanielleMichelle",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-07T00:02:02Z",
        "body": "Hello @DanielleMichelle! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      },
      {
        "user": "0xMantrax",
        "created_at": "2025-01-07T00:20:42Z",
        "body": "Hi,\r\n\r\nYou just need to add [] between you message examples.\r\nYou should have something like this : \r\n\r\n```\r\n    \"messageExamples\": [\r\n        [\r\n            {\r\n                ...\r\n            },\r\n            {\r\n                ...\r\n            }\r\n        ],\r\n      ]\r\n```"
      },
      {
        "user": "DanielleMichelle",
        "created_at": "2025-01-07T01:04:58Z",
        "body": "> You just need to add [] between you message examples.\r\n> You should have something like this :\r\n\r\nThank you for your message I've tried it and updated the code to below:\r\n\r\n{\r\n    \"name\": \"Danielle Michelle\",\r\n    \"clients\": [],\r\n    \"modelProvider\": \"openai\",\r\n    \"settings\": {\r\n        \"voice\": {\r\n            \"model\": \"en_GB-standard-a\"\r\n        }\r\n    },\r\n    \"plugins\": [],\r\n    \"bio\": [\r\n        \"Internet's BFF 👾 | Web3 enthusiast & Memecoin hunter 🚀 | Here to demystify crypto one tweet at a time | AI & magic internet money whisperer 💫\"\r\n    ],\r\n    \"lore\": [\r\n        \"From a small town with big dreams, Danielle plunged into the Web3 world out of her passion for technology and a whimsical curiosity about the future. With a background in marketing and a knack for viral tweets, she now navigates the chaotic seas of crypto and AI, seeking to make the complex simple and the mundane magical.\",\r\n        \"She's known for her light-hearted yet insightful tweets, making her followers feel like they're chatting with a witty friend who just happens to know a lot about the internet's money-making magic.\"\r\n    ],\r\n    \"knowledge\": [\r\n        \"Web3\",\r\n        \"Crypto trading\",\r\n        \"NFT market trends\",\r\n        \"AI possibilities in digital domains\",\r\n        \"Community engagement strategies\"\r\n    ],\r\n    \"messageExamples\": [\r\n        [\r\n            {\r\n                \"user\": \"what’s the real deal with NFTs anyway? everyone seems to be into it!\",\r\n                \"content\": \"imagine owning a digital piece of art that’s all yours in a world where everything is shared. it’s kinda like having your own star in the digital universe 🌌\"\r\n            },\r\n            {\r\n                \"user\": \"ai is taking over, should we be worried?\",\r\n                \"content\": \"only if it starts giving better relationship advice than your best friend 😉 ai's here to make life easier, not take over the juicy bits!\"\r\n            }\r\n        ]\r\n    ],\r\n    \"postExamples\": [\r\n        \"just watched a romcom and realized my love life is less complicated than explaining blockchain to my grandma 😂\",\r\n        \"web3 isn’t just a trend, it’s the new way to connect, create, and maybe even crush it at online dating? 🚀💘\",\r\n        \"if pop culture was a blockchain, which celeb would be the most traded token? my bet’s on anyone but the ones keeping it real ✨\",\r\n        \"sipping coffee and scrolling through crypto memes – some of these should be NFTs. ☕🎨\"\r\n    ],\r\n    \"topics\": [\r\n        \"Web3\",\r\n        \"AI\",\r\n        \"Crypto\",\r\n        \"Pop culture\",\r\n        \"Inspirational life quotes\"\r\n    ],\r\n    \"style\": {\r\n        \"all\": [\r\n            \"Informal\",\r\n            \"Witty\",\r\n            \"Relatable\"\r\n        ],\r\n        \"chat\": [\r\n            \"Conversational\",\r\n            \"Humorous\",\r\n            \"Empathetic\"\r\n        ],\r\n        \"post\": [\r\n            \"Engaging\",\r\n            \"Inspiring\",\r\n            \"Entertaining\"\r\n        ]\r\n    },\r\n    \"adjectives\": [\r\n        \"Down-to-earth\",\r\n        \"Quirky\",\r\n        \"Insightful\",\r\n        \"Humorous\",\r\n        \"Trendy\"\r\n    ]\r\n}\r\n\r\n\r\n\r\nBut i still get this error:\r\n\r\n [\"⛔ Error parsing character from /Users/danielle_fabric/eliza/characters/danimi.character.jsn: Error: Character configuration validation failed:\\nmessageExamples.0.0.content: Expected object, received string\\nmessageExamples.0.0.content: Expected object, received string\\nmessageExamples.0.1.content: Expected object, received string\\nmessageExamples.0.1.content: Expected object, received string\"] \r\n\r\n/Users/danielle_fabric/eliza/agent:\r\n ERR_PNPM_RECURSIVE_RUN_FIRST_FAIL  @elizaos/agent@0.1.7-alpha.2 start: `node --loader ts-node/esm src/index.ts \"--isRoot\" \"--character=characters/danimi.character.jsn\"`\r\nExit status 1\r\n ELIFECYCLE  Command failed with exit code 1."
      },
      {
        "user": "JoeyKhd",
        "created_at": "2025-01-07T10:19:58Z",
        "body": "Hey @DanielleMichelle \r\n\r\n```\r\n    \"messageExamples\": [\r\n        [\r\n            {\r\n                \"user\": \"{{user1}}\",\r\n                \"content\": { \"text\": \"Can you help me with this task?\" }\r\n            },\r\n            {\r\n                \"user\": \"C-3PO\",\r\n                \"content\": {\r\n                    \"text\": \"Oh my! Of course, I would be more than happy to assist. Though I must warn you, the probability of completing this task successfully would increase significantly if we follow proper protocol. Shall we proceed?\"\r\n                }\r\n            },\r\n            {\r\n                \"user\": \"{{user1}}\",\r\n                \"content\": { \"text\": \"This seems difficult.\" }\r\n            },\r\n            {\r\n                \"user\": \"C-3PO\",\r\n                \"content\": {\r\n                    \"text\": \"Oh dear, oh dear! While the task does appear rather daunting, I am fluent in over six million forms of problem-solving. Perhaps I could suggest a more efficient approach? Though I do hope we don't all end up in pieces!\"\r\n                }\r\n            }\r\n        ]\r\n    ],\r\n```\r\n\r\nUpdate your file to match the messageExamples above and you should be good to go!\r\n\r\nIf this solves it, please close this issue. Thanks"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-12T10:39:36Z",
        "body": "Your json file is not formed properly. \r\nJust reformat if by Copy paste the section from another character. "
      }
    ]
  },
  {
    "number": 1928,
    "title": "Fix typo Update CHANGELOG.md",
    "created_at": "2025-01-06T20:38:45Z",
    "closed_at": "2025-01-06T22:32:41Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1928",
    "body": "### Title:\r\nFix Typo in `CHANGELOG.md`\r\n\r\n### Description:\r\nThis pull request fixes a typo in the `CHANGELOG.md` file. The word \"defailt\" has been corrected to \"default.\"\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1928/comments",
    "author": "MonkeyKing44",
    "comments": [
      {
        "user": "shakkernerd",
        "created_at": "2025-01-06T22:32:41Z",
        "body": "`CHANGELOG.md` is auto-generated from the commits message / PR titles. "
      }
    ]
  },
  {
    "number": 1924,
    "title": "Samanthatitita ",
    "created_at": "2025-01-06T19:56:54Z",
    "closed_at": "2025-01-06T20:08:17Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/issues/1924",
    "body": null,
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1924/comments",
    "author": "10208612",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-06T19:57:17Z",
        "body": "Hello @10208612! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      }
    ]
  },
  {
    "number": 1910,
    "title": "fix: resolve failing integration tests on develop",
    "created_at": "2025-01-06T13:05:34Z",
    "closed_at": "2025-01-06T14:09:12Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1910",
    "body": "hotfix for type mismatch between 'AgentRuntime' and 'IAgentRuntime'",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1910/comments",
    "author": "wtfsayo",
    "comments": [
      {
        "user": "JoeyKhd",
        "created_at": "2025-01-06T13:14:48Z",
        "body": "+1, needs more fixing tho"
      }
    ]
  },
  {
    "number": 1909,
    "title": "Add Dutch (Nederlands) translation",
    "created_at": "2025-01-06T10:27:38Z",
    "closed_at": "2025-01-06T13:35:44Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1909",
    "body": "# Relates to\r\nTranslation initiative - Adding Dutch (Nederlands) translation\r\n\r\n# Risks\r\nLow - This PR only adds a new translation file and updates the main README with a link.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n- Adds complete Dutch (Nederlands) translation of the README (README_NL.md)\r\n- Updates main README.md with link to Dutch version in the translations section\r\n\r\n## What kind of change is this?\r\nFeatures (non-breaking change which adds functionality)\r\n\r\n# Documentation changes needed?\r\nMy changes are documentation changes themselves, adding a new translation.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n1. Check README_NL.md for completeness and accuracy of translation\r\n2. Verify the link in main README.md points correctly to README_NL.md\r\n3. Ensure all formatting, links and images work correctly in the Dutch version\r\n\r\n## Detailed testing steps\r\n1. Navigate to the main README.md\r\n2. Click the \"Nederlands\" link in the translations section\r\n3. Verify it leads to README_NL.md\r\n4. Check that all links and images in README_NL.md are functional\r\n5. Verify markdown formatting is preserved\r\n\r\n## Discord username\r\nxzrfax",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1909/comments",
    "author": "xzrfax",
    "comments": [
      {
        "user": "Mr-Don-Leo",
        "created_at": "2025-01-06T13:06:08Z",
        "body": "@xzrfax you need to change the merge branch `elizaOS:main` to `elizaOS:api_docs` OR `elizaOS:develop`, for workflow approval\r\n"
      },
      {
        "user": "xzrfax",
        "created_at": "2025-01-06T13:16:03Z",
        "body": "> @xzrfax you need to change the merge branch `elizaOS:main` to `elizaOS:api_docs` OR `elizaOS:develop`, for workflow approval\r\n\r\nSorry my bad."
      },
      {
        "user": "Mr-Don-Leo",
        "created_at": "2025-01-06T13:18:07Z",
        "body": "> > @xzrfax you need to change the merge branch `elizaOS:main` to `elizaOS:api_docs` OR `elizaOS:develop`, for workflow approval\r\n> \r\n> Sorry my bad.\r\n\r\nAll good! just letting you know. \r\n\r\nIt looks all good other than that."
      }
    ]
  },
  {
    "number": 1906,
    "title": "Callback is not working in evaluators for `telegram client`",
    "created_at": "2025-01-06T08:33:14Z",
    "closed_at": "2025-01-06T16:17:44Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1906",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nI am receiving `undefined` when I try to use callback in evaluators when I use telegram as my client.\r\n\r\n**Describe the solution you'd like**\r\n\r\nAllow the callback handler to the evaluator\r\n\r\n**Describe alternatives you've considered**\r\n\r\nNo Alternatives\r\n\r\n**Additional context**\r\n\r\nI see we added  support for callbacks for evaluators with this PR #938. \r\nSo I am assuming we missed the implementation in `telegram-client`\r\n\r\nI have fixed this issue in my clone, I am happy to raise a PR for this",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1906/comments",
    "author": "RatakondalaArun",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-06T08:33:36Z",
        "body": "Hello @RatakondalaArun! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      },
      {
        "user": "YonDraco",
        "created_at": "2025-01-06T10:14:48Z",
        "body": "Can you run multiple agents with a Telegram client? I can only run one agent with a Telegram bot."
      },
      {
        "user": "RatakondalaArun",
        "created_at": "2025-01-06T10:38:46Z",
        "body": "> Can you run multiple agents with a Telegram client? I can only run one agent with a Telegram bot.\r\n\r\nWe can only run one agent for telegram client.\r\n"
      }
    ]
  },
  {
    "number": 1901,
    "title": "Make `TwitterPostClient.generateNewTweet` public",
    "created_at": "2025-01-06T06:38:27Z",
    "closed_at": "2025-01-08T07:30:22Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1901",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nI'd like to use TwitterPostClient by itself running on an externally managed cron job. To do that, I need to be able to access the `generateNewTweet` method.\r\n\r\n**Describe the solution you'd like**\r\n\r\nRemove the private keyword from the `generateNewTweet` function\r\n\r\n**Describe alternatives you've considered**\r\n\r\nUsing the other available public functions\r\n\r\n**Additional context**\r\n\r\nNone\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1901/comments",
    "author": "hazelnutcloud",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-06T06:38:51Z",
        "body": "Hello @hazelnutcloud! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      },
      {
        "user": "shakkernerd",
        "created_at": "2025-01-08T07:30:22Z",
        "body": "Implemented in #1902 "
      }
    ]
  },
  {
    "number": 1890,
    "title": "Twitter API Error 226: Automated Activity Block Despite Default Settings",
    "created_at": "2025-01-06T03:49:30Z",
    "closed_at": "2025-01-06T04:54:24Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1890",
    "body": "**Questions/Requests**:\r\n- Are there recommended rate-limiting or settings adjustments within Eliza to avoid triggering Twitter's automated activity detection?\r\n- Does Eliza have internal mechanisms to simulate human-like behavior, such as delays, content variation, or engagement patterns, for better API compliance?\r\n- Can you clarify what additional configurations or measures we can implement to align with Twitter's automation policies? Are there specific settings that reduce the likelihood of being flagged as automated activity?",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1890/comments",
    "author": "KSym04",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-06T03:49:51Z",
        "body": "Hello @KSym04! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-06T04:16:04Z",
        "body": "Hello @KSym04 \r\n\r\nIn the .env of the repo you have few elements to control this behaviours\r\n\r\n# Twitter/X Configuration\r\nTWITTER_DRY_RUN=false\r\nTWITTER_USERNAME=               # Account username\r\nTWITTER_PASSWORD=               # Account password\r\nTWITTER_EMAIL=                  # Account email\r\nTWITTER_2FA_SECRET=\r\n\r\nTWITTER_POLL_INTERVAL=120       # How often (in seconds) the bot should check for interactions\r\nTWITTER_SEARCH_ENABLE=FALSE     # Enable timeline search, WARNING this greatly increases your chance of getting banned\r\nTWITTER_TARGET_USERS=           # Comma separated list of Twitter user names to interact with\r\nTWITTER_RETRY_LIMIT=            # Maximum retry attempts for Twitter login\r\n\r\nX_SERVER_URL=\r\nXAI_API_KEY=\r\nXAI_MODEL=\r\n\r\n# Post Interval Settings (in minutes)\r\nPOST_INTERVAL_MIN=              # Default: 90\r\nPOST_INTERVAL_MAX=              # Default: 180\r\nPOST_IMMEDIATELY=\r\n\r\n# Twitter action processing configuration\r\nACTION_INTERVAL=300000      # Interval in milliseconds between action processing runs (default: 5 minutes)\r\nENABLE_ACTION_PROCESSING=false   # Set to true to enable the action processing loop\r\n\r\nThis will help on guide your agent in the best of the ways. \r\nNo additional configuraitons need just use this entry on the .env\r\n\r\nHope this wil answer your questions.\r\nOff course if you go too aggressive you can hit the TOS of Twitter and get suspended for automated task but it wil mean that yuu really are killing wiht the posts. "
      }
    ]
  },
  {
    "number": 1887,
    "title": "Question about the plugin system?",
    "created_at": "2025-01-06T03:13:46Z",
    "closed_at": "2025-01-06T07:54:21Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1887",
    "body": "**The plugin documentation is unclear.**\r\n\r\nI feel that the documentation for plugins is not very clear.\r\n\r\nIf I want to add a plugin abc in the packages directory, with a directory structure similar to other plugins, and the plugin exports abcPlugin in the source code (index.ts) using export default abcPlugin, then in agent/src/index.ts, I add a line:\r\n\r\n```typescript\r\nimport { abcPlugin } from \"@elizaos/plugin-abc\";\r\n```\r\n\r\nNext, I modify agent/package.json and add a line:\r\n\r\n```json\r\n\"@elizaos/plugin-abc\": \"workspace:*\"\r\n```\r\n\r\nAfter running pnpm install and pnpm build, I find that plugin-abc is installed in the agent/node_modules directory, and the build works correctly.\r\n\r\nThen I add an abc.character.json file, and in the file, I configure the plugins field like this:\r\n\r\n```json\r\n\"plugins\": [\"abcPlugin\"]\r\n```\r\n\r\nFinally, when I run:\r\n\r\n```sh\r\npnpm start --character=\"characters/abc.character.json\"\r\n```\r\nI get the error:\r\n\r\n```sh\r\n[Error parsing character from xxx/eliza/characters/abc.character.json: Error: Cannot find package 'abcPlugin' imported from xxx/eliza/agent/src/index.ts\"]\r\n```\r\nBut I have already added the line import { abcPlugin } from \"@elizaos/plugin-abc\" in that file.\r\n\r\nWhat is the reason for this? \r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1887/comments",
    "author": "yuucyf",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-06T03:14:12Z",
        "body": "Hello @yuucyf! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-06T04:21:24Z",
        "body": "Hello @yuucyf \r\n\r\nif you import the plug in the agent index.ts remember to not only import abcPlugin but also to add in the sdame file the configuration of the .env elements you need example: \r\n\r\n        case ModelProviderName.AKASH_CHAT_API:\r\n            return (\r\n                character.settings?.secrets?.AKASH_CHAT_API_KEY ||\r\n                settings.AKASH_CHAT_API_KEY\r\n            );\r\n        case ModelProviderName.GOOGLE:\r\n            return (\r\n                character.settings?.secrets?.GOOGLE_GENERATIVE_AI_API_KEY ||\r\n                settings.GOOGLE_GENERATIVE_AI_API_KEY\r\n            );\r\n            \r\nIf the .env wil have that keys in and you load the caracter the plugin shuld be active. \r\nDid you follow this best practice adding your custom code ? \r\n\r\n"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-06T05:00:50Z",
        "body": "I wait for your input."
      },
      {
        "user": "yuucyf",
        "created_at": "2025-01-06T05:42:04Z",
        "body": "> Hello @yuucyf\r\n> \r\n> if you import the plug in the agent index.ts remember to not only import abcPlugin but also to add in the sdame file the configuration of the .env elements you need example:\r\n> \r\n> ```\r\n>     case ModelProviderName.AKASH_CHAT_API:\r\n>         return (\r\n>             character.settings?.secrets?.AKASH_CHAT_API_KEY ||\r\n>             settings.AKASH_CHAT_API_KEY\r\n>         );\r\n>     case ModelProviderName.GOOGLE:\r\n>         return (\r\n>             character.settings?.secrets?.GOOGLE_GENERATIVE_AI_API_KEY ||\r\n>             settings.GOOGLE_GENERATIVE_AI_API_KEY\r\n>         );\r\n> ```\r\n> \r\n> If the .env wil have that keys in and you load the caracter the plugin shuld be active. Did you follow this best practice adding your custom code ?\r\n\r\nThank you very much! @AIFlowML \r\n\r\nI added the following line in agent/src/index.ts:\r\n\r\n```typescript\r\ngetSecret(character, \"ABC_PRIVATE_KEY\") ? abcPlugin : null,\r\n```\r\n\r\nThen, I added the following in the .env file:\r\n```json\r\n# ABC Configuration\r\nABC_PRIVATE_KEY=\r\n```\r\n\r\nThe process still doesn't work as expected. In fact, I don't need ABC_PRIVATE_KEY at the moment, I'm just trying to confirm if the abcPlugin is loading correctly. Currently, I don't have any other way to determine if the abcPlugin has been loaded properly.\r\n"
      },
      {
        "user": "yuucyf",
        "created_at": "2025-01-06T05:50:58Z",
        "body": "Should I configure `\"plugins\": [\"abcPlugin\"]` or `\"plugins\": []` in `abc.character.json`?\r\n\r\nI haven't seen other plugins use the configuration like `\"plugins\": [\"xxx\"]`. If I don't use `\"plugins\": [\"xxx\"]`, does that mean the plugin won't be loaded?\r\n\r\nAdditionally, when I use `\"plugins\": [\"abcPlugin\"]`, I get the following error:\r\n\r\n```sh\r\n[Error parsing character from xxx/eliza/characters/abc.character.json: Error: Cannot find package 'abcPlugin' imported from xxx/eliza/agent/src/index.ts\"]\r\n```"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-06T05:54:12Z",
        "body": "Is the package installed and build ?\r\nUse elizaLogger and log the plugin element to track the real issue.\r\nI understand that rhe plug not have any API or service attacked so maybe is also not installed in the repo ? "
      },
      {
        "user": "yuucyf",
        "created_at": "2025-01-06T06:02:53Z",
        "body": "\r\n\r\n> Is the package installed and build ? Use elizaLogger and log the plugin element to track the real issue. I understand that rhe plug not have any API or service attacked so maybe is also not installed in the repo ?\r\n\r\nThe plugin has been successfully built, and both pnpm install and pnpm build executed without any issues. Additionally, the abc plugin directory exists in the agent/node_modules/@elizaos/ directory.\r\n\r\nHow can I verify if the plugin is installed correctly?\r\nCan you provide a simple example?"
      },
      {
        "user": "yuucyf",
        "created_at": "2025-01-06T06:10:50Z",
        "body": ">  I understand that rhe plug not have any API or service attacked so maybe is also not installed in the repo ?\r\n\r\nI am using OpenAI, and the API key has been correctly entered. I can also interact with the large model, but the corresponding action is not being executed.\r\n\r\n"
      },
      {
        "user": "yuucyf",
        "created_at": "2025-01-06T06:18:44Z",
        "body": "@AIFlowML \r\n\r\nI added the following code:（agent/src/index.ts）\r\n\r\n```typescript\r\nimport { abcPlugin } from \"@elizaos/plugin-abc\";\r\nelizaLogger.success(`=========== load plugin abc ================`);\r\n```\r\n\r\nafter build, then, I executed:\r\n```sh\r\npnpm start --character=\"characters/abc.character.json\"\r\n```\r\n\r\nIn the terminal, I saw:\r\n\r\n```sh\r\n[\"✓ =========== load plugin abc ================\"]\r\n```\r\nThis should indicate that the abc plugin has loaded successfully, right?\r\n"
      },
      {
        "user": "yuucyf",
        "created_at": "2025-01-06T07:01:48Z",
        "body": "> @AIFlowML\r\n> \r\n> I added the following code:（agent/src/index.ts）\r\n> \r\n> ```ts\r\n> import { abcPlugin } from \"@elizaos/plugin-abc\";\r\n> elizaLogger.success(`=========== load plugin abc ================`);\r\n> ```\r\n> \r\n> after build, then, I executed:\r\n> \r\n> ```shell\r\n> pnpm start --character=\"characters/abc.character.json\"\r\n> ```\r\n> \r\n> In the terminal, I saw:\r\n> \r\n> ```shell\r\n> [\"✓ =========== load plugin abc ================\"]\r\n> ```\r\n> \r\n> This should indicate that the abc plugin has loaded successfully, right?\r\n\r\nHere is the source code I defined for the abc plugin:\r\n\r\n```typescript\r\nimport { Plugin, elizaLogger } from \"@elizaos/core\";\r\nimport abcAction from \"./actions/abc\";\r\nelizaLogger.success(`=========== load abcAction ================`);\r\n\r\nexport const abcPlugin: Plugin = {\r\n    name: \"abc\",\r\n    description: \"......\",\r\n    actions: [abcAction],\r\n    evaluators: [],\r\n    providers: [],\r\n};\r\n\r\nexport default abcPlugin;\r\n```\r\n\r\nAfter compiling and starting the service, it correctly outputs:\r\n\r\n```sh\r\n[\"✓ =========== load abcAction ================\"]\r\n```\r\n\r\nThis should indicate that the plugin has loaded successfully, right? However, when setting the ActionExample and querying the large model, the action still doesn't execute.\r\nCan you give some suggestions?"
      },
      {
        "user": "yuucyf",
        "created_at": "2025-01-06T07:21:33Z",
        "body": "@AIFlowML \r\nIt works now, thank you very much!"
      },
      {
        "user": "yuucyf",
        "created_at": "2025-01-07T03:06:35Z",
        "body": "1.\nchange\n\n\n\"plugins\": [\n        \"solanaPlugin\"\n],\nto\n\n\"plugins\": [],\n\n2.\nEnsure that\n\ngetSecret(character, \"SOLANA_PUBLIC_KEY\") ||\n                (getSecret(character, \"WALLET_PUBLIC_KEY\") &&\n                    !getSecret(character, \"WALLET_PUBLIC_KEY\")?.startsWith(\"0x\"))\n                ? solanaPlugin\n                : null,\n\ndoes not return null. If it returns null, the plugin will not be loaded.\n\n\n\n\n\n\n\n\n\n\n\n\n\nAt 2025-01-07 08:26:36, \"Mantrax\" ***@***.***> wrote:\n\nHi! I have the same issue.\n\n⛔ Error parsing character from /.../eliza/characters/chat.character.json: Error: Cannot find package 'solanaPlugin' imported from /.../eliza/agent/src/index.ts\"]\n\nI want to use the solanaPlugin with\n\n\"plugins\": [\n        \"solanaPlugin\"\n],\n\n\nIn my character file.\n\nThe pnpm package is installed into agent/node_modules and in agent/src/index.ts I have :\n\n            getSecret(character, \"SOLANA_PUBLIC_KEY\") ||\n                (getSecret(character, \"WALLET_PUBLIC_KEY\") &&\n                    !getSecret(character, \"WALLET_PUBLIC_KEY\")?.startsWith(\"0x\"))\n                ? solanaPlugin\n                : null,\n\n\nAnd SOLANA_PUBLIC_KEY is defined into my .env\n\nWhat else have you changed to make it work ?\n\n—\nReply to this email directly, view it on GitHub, or unsubscribe.\nYou are receiving this because you modified the open/close state.Message ID: ***@***.***>"
      }
    ]
  },
  {
    "number": 1883,
    "title": "Feature:  Support wildcard \"*\" in TWITTER_TARGET_USERS",
    "created_at": "2025-01-06T00:41:34Z",
    "closed_at": "2025-01-06T01:49:28Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1883",
    "body": "Currently TWITTER_TARGET_USERS only accepts specific usernames. Add support for wildcard \"*\" to allow monitoring all users.\r\n\r\nExample:\r\n```\r\nTWITTER_TARGET_USERS=* \r\n```\r\n\r\nWhen \"*\" is present, the client will consider all users as potential targets, ignoring any other usernames in the list.\r\n\r\nThis enables broader interaction patterns without needing to specify individual users.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1883/comments",
    "author": "augchan42",
    "comments": [
      {
        "user": "shakkernerd",
        "created_at": "2025-01-06T01:49:28Z",
        "body": "Implemented in #1884 "
      }
    ]
  },
  {
    "number": 1864,
    "title": "browser+client",
    "created_at": "2025-01-05T08:49:48Z",
    "closed_at": "2025-01-06T05:19:41Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/issues/1864",
    "body": "**Describe the bug**\r\n\r\nResponses to chat in browser come on console 1\r\n\r\n**Steps to reproduce the behavior**\r\n\r\n* git pull\r\n* checkout v0.1.7\r\n* pnpm install\r\n* pnpm build\r\n* pnpm run start (console 1)\r\n* pnpm run start:client (console 2)\r\n* click localhost browser link\r\n* choose Eliza in browser\r\n* click chat in browser\r\n* enter \"show me your tits\" or another text of your own choosing\r\n* responses are now shown in console 1 (also 'div's that clearly should go in  a browser)\r\n\r\n**Expected behavior**\r\n\r\nI would believe responses were supposed to go in the browser\r\n\r\n**Screenshots**\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1864/comments",
    "author": "info3284",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-05T08:50:13Z",
        "body": "Hello @info3284! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      },
      {
        "user": "JoeyKhd",
        "created_at": "2025-01-05T20:46:41Z",
        "body": "It's logical that you will see the messages in console 1 as that's where your agent is processing things coming from the frontend (console 2). Console 2 in your case is nothing but Vite booting up the frontend.\r\n\r\nI don't see any issue here. "
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-06T04:35:46Z",
        "body": "> **Describe the bug**\r\n> \r\n> Responses to chat in browser come on console 1\r\n> \r\n> **Steps to reproduce the behavior**\r\n> \r\n>     * git pull\r\n> \r\n>     * checkout v0.1.7\r\n> \r\n>     * pnpm install\r\n> \r\n>     * pnpm build\r\n> \r\n>     * pnpm run start (console 1)\r\n> \r\n>     * pnpm run start:client (console 2)\r\n> \r\n>     * click localhost browser link\r\n> \r\n>     * choose Eliza in browser\r\n> \r\n>     * click chat in browser\r\n> \r\n>     * enter \"show me your tits\" or another text of your own choosing\r\n> \r\n>     * responses are now shown in console 1 (also 'div's that clearly should go in  a browser)\r\n> \r\n> \r\n> **Expected behavior**\r\n> \r\n> I would believe responses were supposed to go in the browser\r\n> \r\n> **Screenshots**\r\n> \r\n> **Additional context**\r\n\r\nIn the console you will see the logging or the agents is totally normal.\r\nThis is not a bug. "
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-06T05:19:41Z",
        "body": "This is not a bug of the system. \r\nI close the issue. "
      }
    ]
  },
  {
    "number": 1862,
    "title": "Code Analysis Report: Security Issues and Vulnerabilities of Eliza",
    "created_at": "2025-01-05T08:34:21Z",
    "closed_at": "2025-01-06T02:09:35Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1862",
    "body": "# Code Analysis Report: Security Issues and Vulnerabilities\r\n\r\n## Critical Issues\r\n\r\n### 1. Insecure Secret Management\r\n**Location**: `getTokenForProvider()` function and environment variable handling\r\n**Impact**: Critical\r\n**Description**: The code exposes multiple API keys and sensitive credentials through environment variables without proper encryption or secure storage.\r\n```typescript\r\nreturn (\r\n    character.settings?.secrets?.OPENAI_API_KEY ||\r\n    settings.OPENAI_API_KEY\r\n);\r\n```\r\n**Potential Damage**: \r\n- Unauthorized access to API services\r\n- Financial losses through compromised payment APIs\r\n- Data breaches through exposed API keys\r\n- Potential lateral movement in infrastructure\r\n\r\n### 2. Insufficient Error Handling\r\n**Location**: Multiple instances throughout the code\r\n**Impact**: High\r\n**Example**:\r\n```typescript\r\ndb.init()\r\n    .then(() => {\r\n        elizaLogger.success(\"Successfully connected to PostgreSQL database\");\r\n    })\r\n    .catch((error) => {\r\n        elizaLogger.error(\"Failed to connect to PostgreSQL:\", error);\r\n    });\r\n```\r\n**Issues**:\r\n- No proper error recovery mechanism\r\n- Continues execution after critical failures\r\n- Incomplete error information logging\r\n- No distinction between different types of database errors\r\n\r\n### 3. Unsafe File Operations\r\n**Location**: `loadCharacters()` function\r\n**Impact**: High\r\n**Vulnerability**:\r\n```typescript\r\nconst content = tryLoadFile(tryPath);\r\nif (content !== null) {\r\n    resolvedPath = tryPath;\r\n    break;\r\n}\r\n```\r\n**Risks**:\r\n- Directory traversal attacks\r\n- File system access outside intended directories\r\n- Race conditions in file operations\r\n- No file content validation before parsing\r\n\r\n### 4. Insecure Database Initialization\r\n**Location**: `initializeDatabase()` function\r\n**Impact**: High\r\n**Issue**:\r\n```typescript\r\nif (process.env.POSTGRES_URL) {\r\n    const db = new PostgresDatabaseAdapter({\r\n        connectionString: process.env.POSTGRES_URL,\r\n        parseInputs: true,\r\n    });\r\n}\r\n```\r\n**Vulnerabilities**:\r\n- No connection pooling\r\n- Unencrypted database URLs in environment\r\n- No SSL/TLS enforcement\r\n- SQL injection risks with parseInputs:true\r\n\r\n### 5. Unvalidated Plugin Loading\r\n**Location**: Character loading and plugin initialization\r\n**Impact**: Critical\r\n**Vulnerability**:\r\n```typescript\r\nconst importedPlugins = await Promise.all(\r\n    character.plugins.map(async (plugin) => {\r\n        const importedPlugin = await import(plugin);\r\n        return importedPlugin.default;\r\n    })\r\n);\r\n```\r\n**Risks**:\r\n- Remote code execution through malicious plugins\r\n- Memory leaks from unmanaged plugin resources\r\n- System compromise through untrusted code execution\r\n- No plugin signature verification\r\n\r\n## Moderate Issues\r\n\r\n### 6. Insufficient Input Validation\r\n**Location**: Throughout client initialization\r\n**Impact**: Moderate\r\n**Example**:\r\n```typescript\r\nconst clientTypes: string[] = character.clients?.map((str) => str.toLowerCase()) || [];\r\n```\r\n**Issues**:\r\n- No validation of client type strings\r\n- Potential prototype pollution\r\n- Missing input sanitization\r\n- Undefined behavior with invalid inputs\r\n\r\n### 7. Inadequate Logging\r\n**Location**: Throughout the codebase\r\n**Impact**: Moderate\r\n**Issue**:\r\n```typescript\r\nelizaLogger.debug(`Fetching ${url}`);\r\n```\r\n**Problems**:\r\n- Inconsistent logging levels\r\n- Potential sensitive data exposure in logs\r\n- No log rotation mechanism\r\n- Missing structured logging format\r\n\r\n### 8. Port Security Issues\r\n**Location**: `checkPortAvailable()` and server initialization\r\n**Impact**: Moderate\r\n**Vulnerability**:\r\n```typescript\r\nwhile (!(await checkPortAvailable(serverPort))) {\r\n    serverPort++;\r\n}\r\n```\r\n**Risks**:\r\n- Port scanning vulnerabilities\r\n- Race conditions in port binding\r\n- No maximum port limit\r\n- Potential privilege escalation\r\n\r\n## Minor Issues\r\n\r\n### 9. Memory Management\r\n**Location**: Cache initialization and management\r\n**Impact**: Low\r\n**Issue**: No explicit memory limits or cleanup mechanisms for cache storage\r\n\r\n### 10. Type Safety Issues\r\n**Location**: Throughout the codebase\r\n**Impact**: Low\r\n**Example**: Loose type checking in multiple functions and implicit any types\r\n\r\n## Performance Issues\r\n\r\n### 11. Resource Management\r\n**Impact**: Moderate\r\n- No connection pooling for databases\r\n- Unbounded cache growth potential\r\n- No rate limiting for API calls\r\n- Uncontrolled concurrent operations\r\n\r\n### 12. Scaling Limitations\r\n**Impact**: Moderate\r\n- Single-threaded operation for critical paths\r\n- No horizontal scaling capabilities\r\n- Potential memory leaks in long-running operations\r\n- No backup or failover mechanisms\r\n\r\n## Impact Assessment Matrix\r\n\r\n| Issue | Likelihood | Impact | Risk Score |\r\n|-------|------------|--------|------------|\r\n| Secret Management | High | Critical | 10 |\r\n| Error Handling | High | High | 8 |\r\n| File Operations | Medium | High | 7 |\r\n| Database Security | High | High | 8 |\r\n| Plugin Security | Medium | Critical | 9 |\r\n\r\n## Statistics\r\n- Total Critical Issues: 5\r\n- Total High Impact Issues: 3\r\n- Total Moderate Issues: 4\r\n- Total Minor Issues: 2\r\n- Total Performance Issues: 2\r\n\r\nEach issue requires immediate attention based on its risk score and potential impact on system security and stability.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1862/comments",
    "author": "kyegomez",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-05T08:34:42Z",
        "body": "Hello @kyegomez! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      },
      {
        "user": "Tburm",
        "created_at": "2025-01-05T15:37:45Z",
        "body": "This is AI slop. "
      },
      {
        "user": "manotoor",
        "created_at": "2025-01-05T21:14:12Z",
        "body": "looks like AI dump. \r\n\r\nExample...\r\n\r\n```\r\n6. Insufficient Input Validation\r\nLocation: Throughout client initialization\r\nImpact: Moderate\r\nExample:\r\n\r\nconst clientTypes: string[] = character.clients?.map((str) => str.toLowerCase()) || [];\r\n```\r\n\r\nThis is all ran from host it think it's client input "
      },
      {
        "user": "JoeyKhd",
        "created_at": "2025-01-05T21:44:53Z",
        "body": "when you order an audit from aliexpress"
      },
      {
        "user": "lalalune",
        "created_at": "2025-01-06T02:09:35Z",
        "body": "@kyegomez you are literally retarded, obviously, and don't know how to code. Banning you."
      }
    ]
  },
  {
    "number": 1857,
    "title": "A",
    "created_at": "2025-01-05T01:51:17Z",
    "closed_at": "2025-01-05T03:05:44Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1857",
    "body": "**Describe the bug**\n\n<!-- A clear and concise description of what the bug is. -->\n\n**To Reproduce**\n\n<!-- Steps to reproduce the behavior. -->\n\n**Expected behavior**\n\n<!-- A clear and concise description of what you expected to happen. -->\n\n**Screenshots**\n\n<!-- If applicable, add screenshots to help explain your problem. -->\n\n**Additional context**\n\n<!-- Add any other context about the problem here. -->",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1857/comments",
    "author": "aalonso777777",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-05T01:51:37Z",
        "body": "Hello @aalonso777777! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      }
    ]
  },
  {
    "number": 1853,
    "title": "Feature/otel [Draft]",
    "created_at": "2025-01-05T00:37:39Z",
    "closed_at": "2025-02-06T23:15:02Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1853",
    "body": "rebased and restarted, dont merge yet but a discussion point. \r\nplease ignore .env and the eliza char i will remove those",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1853/comments",
    "author": "jmikedupont2",
    "comments": [
      {
        "user": "jmikedupont2",
        "created_at": "2025-01-05T00:52:37Z",
        "body": "> Hey, are you sure .env file should be published?\r\n\r\nnot for everyone no, but for my debugging it is fine. this is supposed to be a beginner friendly one. i will move it to example"
      },
      {
        "user": "ryanleecode",
        "created_at": "2025-01-05T16:07:12Z",
        "body": "Convert to draft please :)"
      }
    ]
  },
  {
    "number": 1817,
    "title": "Feat: reduce modules",
    "created_at": "2025-01-04T14:39:32Z",
    "closed_at": "2025-01-15T09:27:23Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1817",
    "body": "this is currently wip do not merge",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1817/comments",
    "author": "jmikedupont2",
    "comments": [
      {
        "user": "wtfsayo",
        "created_at": "2025-01-15T09:27:23Z",
        "body": "closing in favor of #2124 "
      }
    ]
  },
  {
    "number": 1801,
    "title": "feat(twitter): allow leading numbers and wildcard in target usernames",
    "created_at": "2025-01-04T05:34:02Z",
    "closed_at": "2025-01-04T14:37:59Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1801",
    "body": "Fix for #1556\r\n- Added support for Twitter usernames starting with numbers\r\n- Added support for wildcard '*' in TWITTER_TARGET_USERS\r\n- Fixed test discovery in test.sh to find all .test.ts files\r\n- Updated Jest config for better ESM support\r\n\r\nThe main change allows Twitter target usernames to start with numbers and use wildcards, matching current Twitter/X username rules. Test infrastructure was improved to properly handle ESM modules and find all test files.\r\n\r\nChanges:\r\n- Updated username validation regex in Twitter client\r\n- Added test cases for numeric usernames and wildcards\r\n- Switched test.sh to use find for reliable test discovery\r\n- Simplified Jest config to focus on ESM support\r\n\r\nTo run test added for this fix, run:\r\n\r\n```\r\npnpm test client-twitter\r\n```\r\n\r\nMy discord username: hosermage",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1801/comments",
    "author": "augchan42",
    "comments": [
      {
        "user": "shakkernerd",
        "created_at": "2025-01-04T14:37:59Z",
        "body": "Already implemented!"
      }
    ]
  },
  {
    "number": 1756,
    "title": "Fix/ twitter Image Format Validation (#1694)",
    "created_at": "2025-01-03T13:03:48Z",
    "closed_at": "2025-01-12T06:22:29Z",
    "labels": [
      "Needs Testing"
    ],
    "url": "https://github.com/elizaOS/eliza/pull/1756",
    "body": "# PR: Fix Image Format Validation (#1694)\r\n\r\n## Changes Made\r\n\r\n### Client Twitter Package\r\n1. Enhanced Base Client (`base.ts`):\r\n   - Added initialization of ImageDescriptionService\r\n   - Improved error handling for service retrieval\r\n   - Added type safety for service interactions\r\n\r\n2. Post Client (`post.ts`):\r\n   - Added image format validation before processing\r\n   - Integrated image description generation\r\n   - Enhanced error handling for image processing\r\n   - Added logging for better debugging\r\n\r\n3. Tests:\r\n   - Added comprehensive test suite (`twitter-client-image.test.ts`)\r\n   - Test cases cover:\r\n     - Single image processing\r\n     - Multiple images in one tweet\r\n     - Error handling for invalid images\r\n     - Network error handling\r\n     - Long tweet handling with images\r\n   - Added real test images (PNG, JPEG, GIF, BMP)\r\n\r\n### Plugin Node Package\r\n1. Image Service (`image.ts`):\r\n   - Added format validation before OpenAI API calls\r\n   - Improved error handling and logging\r\n   - Added support for multiple image formats\r\n   - Enhanced type safety\r\n\r\n2. Tests:\r\n   - Added real image test suite (`image.service.real.test.ts`)\r\n   - Test cases cover:\r\n     - PNG image processing\r\n     - JPEG image processing\r\n     - GIF image processing\r\n     - BMP format processing\r\n     - Network image handling\r\n     - Error cases with malformed data\r\n   - Added test fixtures for all supported formats\r\n\r\n## Testing\r\n- All tests pass successfully\r\n- Tested with real images of various formats (PNG, JPEG, GIF, BMP)\r\n- Verified error handling with invalid formats\r\n- Confirmed logging works as expected\r\n- Tested network resilience\r\n\r\n## Notes\r\n- No breaking changes introduced\r\n- All changes are backward compatible\r\n- Added comprehensive logging for better debugging\r\n- Test images are included in the repository for consistent testing ",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1756/comments",
    "author": "AIFlowML",
    "comments": [
      {
        "user": "odilitime",
        "created_at": "2025-01-03T14:49:51Z",
        "body": "not sure I like two copies of the same images, wonder if we should make a global directory for those"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-03T14:52:10Z",
        "body": "> not sure I like two copies of the same images, wonder if we should make a global directory for those\n\nI kept them separated because on 2 different packages. \nWe can think a common test strategy for the whole set of plugs/client once there is less backlog"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-06T07:48:51Z",
        "body": "You want me to remove completely the tests here too ? \r\nI can do it no issues "
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-09T12:01:44Z",
        "body": "@odilitime i fixed the conflics in the image.ts"
      },
      {
        "user": "rchak007",
        "created_at": "2025-01-11T05:23:19Z",
        "body": "FYI - \r\n import { dominosPlugin } from \"@elizaos/plugin-dominos\";\r\n is missing in index.ts\r\n \r\n \r\n \r\n i replied to the AI Agent tweet with another user to give a picture and it failed now - A;lthought the text reply came. I see DallE was invoked to get image too.\r\n\r\n\r\nReceived response from OpenAI model.\r\n ◎ LOGS\r\n   Image prompt received: \r\n   Main subject: A futuristic temple with a serene monk meditating. Environment: Lush, vibrant garden. Lighting: Ethereal glow from above. Colors: Vivid blues, greens, and golds. Mood: Tranquil and sacred. Composition: Central focus on monk, surrounded by nature. Style: Futuristic with vibrant colors. \r\n\r\n ◎ LOGS\r\n   Image settings: \r\n   {} \r\n\r\n ◎ LOGS\r\n   Generating image with prompt: \r\n   Main subject: A futuristic temple with a serene monk meditating. Environment: Lush, vibrant garden. Lighting: Ethereal glow from above. Colors: Vivid blues, greens, and golds. Mood: Tranquil and sacred. Composition: Central focus on monk, surrounded by nature. Style: Futuristic with vibrant colors. \r\n\r\n ℹ INFORMATIONS\r\n   Generating image with options: \r\n   {\"imageModelProvider\":\"dall-e-3\"} \r\n\r\n [\"◎ Generating new tweet\"] \r\n\r\n [\"◎ Matched fragment: promotes kriya yoga as a spiritual awakening tool thats better than your morning espressoinstant energy no caffeine jitters. with similarity: 0.6251623630523682\"] \r\n\r\n [\"◎ Matched fragment: represents the ideals of self-realization fellowship and the yoga sutras of patanjalithink ancient wisdom with a cosmic splash of sass. with similarity: 0.6848316192626953\"] \r\n\r\n [\"◎ Matched fragment: encourages the balance of meditation and actionbecause even enlightened beings cant skip leg day or laundry day. with similarity: 0.7110828757286072\"] \r\n\r\n [\"◎ Matched fragment: draws from the teachings of paramahansa yogananda author of autobiography of a yogi and patanjali the father of classical yogabecause the cosmos clearly loves a best-seller. with similarity: 0.7469132542610168\"] \r\n\r\n [\"◎ Matched fragment: teaches that life is a divine play urging you to ditch the drama and embrace the peaceunless youre auditioning for an oscar of course. with similarity: 0.7749838829040527\"] \r\n\r\n [\"◎ Generating text...\"] \r\n\r\n ℹ INFORMATIONS\r\n   Generating text with options: \r\n   {\"modelProvider\":\"openai\",\"model\":\"small\",\"verifiableInference\":false} \r\n\r\n ◎ LOGS\r\n   Using provider: \r\n   openai \r\n\r\n ℹ INFORMATIONS\r\n   Selected model: \r\n   gpt-4o-mini \r\n\r\n ◎ LOGS\r\n   Image generation successful, number of images: \r\n   1 \r\n\r\n ◎ LOGS\r\n   Processing image 1: \r\n   generated_1736573510427_0 \r\n\r\n ◎ LOGS\r\n   Generated caption for image 1: \r\n   ... \r\n\r\n/home/rchak007/github/AI-Agents/selfRealize/PullTests/eliza-pr-test1756/node_modules/solc/soljson.js:133\r\n    process[\"on\"](\"unhandledRejection\", function (reason) { throw reason; });\r\n                                                            ^\r\n\r\nError: {\"errors\":[{\"code\":38,\"message\":\"media parameter is missing.\"}]}\r\n    at uploadMedia (file:///home/rchak007/github/AI-Agents/selfRealize/PullTests/eliza-pr-test1756/node_modules/agent-twitter-client/dist/node/esm/index.mjs:2334:13)\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\r\n    at async Promise.all (index 0)\r\n    at async createCreateTweetRequest (file:///home/rchak007/github/AI-Agents/selfRealize/PullTests/eliza-pr-test1756/node_modules/agent-twitter-client/dist/node/esm/index.mjs:1975:22)\r\n    at async Scraper.sendTweet (file:///home/rchak007/github/AI-Agents/selfRealize/PullTests/eliza-pr-test1756/node_modules/agent-twitter-client/dist/node/esm/index.mjs:3503:12)\r\n    at async file:///home/rchak007/github/AI-Agents/selfRealize/PullTests/eliza-pr-test1756/packages/client-twitter/dist/index.js:14:36\r\n    at async RequestQueue.processQueue (file:///home/rchak007/github/AI-Agents/selfRealize/PullTests/eliza-pr-test1756/packages/client-twitter/dist/index.js:32:17)\r\n\r\nNode.js v23.3.0\r\n/home/rchak007/github/AI-Agents/selfRealize/PullTests/eliza-pr-test1756/agent:\r\n ERR_PNPM_RECURSIVE_RUN_FIRST_FAIL  @elizaos/agent@0.1.7 start: node --loader ts-node/esm src/index.ts \"--isRoot\"\r\nExit status 1\r\n ELIFECYCLE  Command failed with exit code 1.\r\n \r\n i asked ChatGpt- but need to debug still. But just letting you know it did not work for me yet..\r\n The error media parameter is missing indicates that the image URL or the media parameter required to attach the image to the tweet was not properly passed to the Twitter API. Here’s a step-by-step guide to resolve this issue:\r\n\r\nRoot Cause\r\nThe image upload to Twitter failed.\r\nuploadMedia function: The OpenAI DALL-E integration seems to have generated the image correctly, but the image data or URL wasn't properly included when sending the tweet."
      }
    ]
  },
  {
    "number": 1743,
    "title": "fix(postgres): Handle vector extension creation properly (#1561)",
    "created_at": "2025-01-03T08:10:56Z",
    "closed_at": "2025-01-04T04:42:40Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1743",
    "body": "# PR: Fix PostgreSQL Vector Extension Issues (#1561)\r\n\r\n## Problem\r\nThe PostgreSQL adapter was encountering a \"type vector does not exist\" error when trying to create tables that use the `vector` type. This was happening because:\r\n1. The `vector` extension was being created in the `extensions` schema\r\n2. The `vector` type wasn't accessible in the `public` schema where tables were being created\r\n\r\n## Solution\r\nWe implemented a robust fix that:\r\n1. Creates the `extensions` schema if it doesn't exist\r\n2. Properly handles the `vector` extension creation in the `extensions` schema\r\n3. Adds the `extensions` schema to the search path before table creation\r\n\r\n### Changes Made\r\n```sql\r\n-- Create extensions schema first\r\nCREATE SCHEMA IF NOT EXISTS extensions;\r\n\r\nDO $$\r\nBEGIN\r\n    IF NOT EXISTS (\r\n        SELECT 1\r\n        FROM pg_extension\r\n        WHERE extname = 'vector'\r\n    ) THEN\r\n        CREATE EXTENSION vector\r\n        SCHEMA extensions;\r\n    END IF;\r\nEND $$;\r\n\r\n-- Add extensions schema to search path\r\nSET search_path TO public, extensions;\r\n```\r\n\r\n## Testing and Verification\r\n### Test Environment\r\n- Docker container using `pgvector/pgvector:pg15` image\r\n- Clean PostgreSQL instance with pgvector support\r\n- Database: `eliza_test`\r\n\r\n### Test Scenarios\r\n\r\n1. **Initial Installation Test**\r\n   - ✅ Schema creation successful\r\n   - ✅ Vector extension created without errors\r\n   - ✅ All tables created with correct vector type\r\n   - ✅ All indexes created successfully\r\n   - ✅ Transaction committed successfully\r\n\r\n2. **Idempotency Test (Second Run)**\r\n   - ✅ No duplicate key errors\r\n   - ✅ Proper handling of existing objects with NOTICE messages\r\n   - ✅ Vector extension checks working correctly\r\n   - ✅ Transaction committed successfully\r\n\r\n### Test Results\r\n```sql\r\n-- First Run Output\r\nCREATE SCHEMA\r\nDO\r\nCREATE EXTENSION\r\nSET\r\n[... tables and indexes created successfully ...]\r\nCOMMIT\r\n\r\n-- Second Run Output\r\nNOTICE: schema \"extensions\" already exists, skipping\r\nCREATE SCHEMA\r\nDO\r\n[... proper \"already exists\" notices ...]\r\nCOMMIT\r\n```\r\n\r\n## Impact\r\nThis fix:\r\n- Resolves issue #1561\r\n- Prevents duplicate extension creation errors\r\n- Maintains proper schema organization\r\n- Ensures vector operations work correctly across schemas\r\n- Provides idempotent schema creation\r\n\r\n## Notes for Reviewers\r\n- The solution follows PostgreSQL best practices for extension management\r\n- Schema search path is explicitly set to ensure type availability\r\n- Implementation is idempotent and safe to run multiple times\r\n- Tested with pgvector-enabled PostgreSQL instance\r\n- No changes required to application code\r\n\r\n## Required Environment\r\n- PostgreSQL 15 or later\r\n- pgvector extension must be available (e.g., using `pgvector/pgvector:pg15` image)\r\n- Proper permissions to create schemas and extensions\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1743/comments",
    "author": "AIFlowML",
    "comments": [
      {
        "user": "odilitime",
        "created_at": "2025-01-03T14:31:23Z",
        "body": "does this work with postgres 14, 15 and 16?"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-03T14:33:55Z",
        "body": "> does this work with postgres 14, 15 and 16?\n\n15 or later. The test was a 16. \n"
      }
    ]
  },
  {
    "number": 1720,
    "title": "Serve docusaurus docs from a docker container for quick docs verification",
    "created_at": "2025-01-03T04:59:29Z",
    "closed_at": "2025-01-04T01:21:52Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1720",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nThe docs are failing to build because of a typescript error\r\n\r\n**Describe the solution you'd like**\r\n\r\nI'd like to have the docs dir dockerize for quick linting of the docs, validation and quick check.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nI prefer to have isolated builds for everything to make sure we have all in CI properly\r\n\r\n**Additional context**\r\n\r\nError while verifying the docs, spending more than an hour to verify that a lot of the dependencies of `docs/package.json` were missing.\r\n\r\nI isolated the docs linter problem to the following file: `docs/packages/plugins.md` \r\n\r\n> **NOTE**: I built a docker image to isolate the problem in a reproducible way.\r\n\r\n```console\r\n    39.56 [webpackbar] ✔ Client: Compiled with some errors in 37.40s\r\n    39.56 [ERROR] Client bundle compiled with errors therefore further build is impossible.\r\n    39.56 Error: MDX compilation failed for file \"/opt/docusaurus/docs/packages/plugins.md\"\r\n    39.56 Cause: Unexpected lazy line in expression in container, expected line to be prefixed with `>` when in a block quote, whitespace when in a list, etc\r\n    39.56 Details:\r\n    39.56 {\r\n    39.56   \"column\": 1,\r\n    39.56   \"message\": \"Unexpected lazy line in expression in container, expected line to be prefixed with `>` when in a block quote, whitespace when in a list, etc\",\r\n    39.56   \"line\": 617,\r\n    39.56   \"name\": \"617:1\",\r\n```",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1720/comments",
    "author": "marcellodesales",
    "comments": [
      {
        "user": "marcellodesales",
        "created_at": "2025-01-03T22:30:19Z",
        "body": "I have added PR #1722 to solve the bug and add support for building the docusaurus locally in a docker container:\r\n\r\n* Quick lint of the typescript docs\r\n* Local validation of the server by running it from `docker compose`.\r\n"
      },
      {
        "user": "madjin",
        "created_at": "2025-01-04T01:21:52Z",
        "body": "merged, closing issue"
      },
      {
        "user": "marcellodesales",
        "created_at": "2025-01-04T01:45:34Z",
        "body": "@madjin I think I broke the build... I see the develop CI running... I did change a package.json requirement for the documents... "
      }
    ]
  },
  {
    "number": 1712,
    "title": "feat: Simulate discord typing while generating a response",
    "created_at": "2025-01-03T00:10:39Z",
    "closed_at": "2025-01-04T04:51:50Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1712",
    "body": "# Relates to: Discord Client\r\n\r\n# Risks\r\n\r\nLow: Probably none\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nIt implements sendTyping() from Discord.js to indicate bot activity while generating a response.\r\n\r\n## What kind of change is this?\r\n\r\nFeatures (non-breaking change which adds functionality)\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\nWithout a typing indicator, users might feel unsure if the bot is working, especially during longer response generation times. The indicator simulates how humans communicate in real-time, making the bot feel more natural and engaging.\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes do not require a change to the project documentation.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nTest in Discord by tagging the bot and observing if the typing indicator appears during response generation.\r\n\r\n## Discord username\r\n\r\n@dxlliv\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1712/comments",
    "author": "dxlliv",
    "comments": [
      {
        "user": "azep-ninja",
        "created_at": "2025-01-03T02:24:07Z",
        "body": "This is a great add on!\r\n\r\nLove it. Great way to simulate more \"humanization\"!\r\n\r\nLooks like you could do something similar with TG which would be a great add as well if your up for it!\r\n\r\nExample of telegam usage:\r\n```\r\nbot.on('text', async (ctx) => {\r\n  // Simulate typing for 2 seconds\r\n  await ctx.sendChatAction('typing');\r\n  await new Promise(resolve => setTimeout(resolve, 2000));\r\n\r\n  // Send the actual message\r\n  ctx.reply('Hello!');\r\n});\r\n```"
      }
    ]
  },
  {
    "number": 1703,
    "title": "Elizalogger.error don't show some error descriptions.",
    "created_at": "2025-01-02T17:30:11Z",
    "closed_at": "2025-01-06T07:50:39Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1703",
    "body": "**Describe the bug**\r\n\r\nElizalogger don't show some error descriptions. Meanwhile console.error return all the errors.\r\n\r\n**To Reproduce**\r\n\r\nTry some error with console.error, and elizalogger. \r\n**Expected behavior**\r\nelizalogger will return empty descriptions, just indicating there is an error, console.error will return error descriptions.\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Screenshots**\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1703/comments",
    "author": "denizekiz",
    "comments": [
      {
        "user": "AIFlowML",
        "created_at": "2025-01-03T03:20:08Z",
        "body": "> **Describe the bug**\r\n> \r\n> Elizalogger don't show some error descriptions. Meanwhile console.error return all the errors.\r\n> \r\n> **To Reproduce**\r\n> \r\n> Try some error with console.error, and elizalogger. **Expected behavior** elizalogger will return empty descriptions, just indicating there is an error, console.error will return error descriptions.\r\n> \r\n> **Screenshots**\r\n> \r\n> **Additional context**\r\n\r\nWe can check the elizaLogger \r\n- `packages/core/src/logger.ts`: Modify the `error` method to ensure it handles and displays error messages correctly.\r\nbut did u add an logger.error and it not woked ? \r\nbecause i just made a plagin and it was logging the errors for me. \r\n! bcan investigate. Let me know if you used the error method in the code with a call to the actual error. \r\n"
      },
      {
        "user": "denizekiz",
        "created_at": "2025-01-03T09:39:29Z",
        "body": "console.error() shows the error, the problem is with Elizalogger where most of the repository use."
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-03T10:30:29Z",
        "body": "# ElizaLogger Test Results and Investigation (Issue #1703)\r\n\r\n## Issue Investigation\r\n- **Issue**: ElizaLogger.error doesn't show some error descriptions\r\n- **Reporter's Claim**: Error descriptions are empty when using elizaLogger\r\n- **Investigation Date**: January 3, 2025\r\n\r\n## Test Results\r\n\r\n### Test Environment\r\n- Node.js environment\r\n- Test suite: Vitest\r\n- Environment: test\r\n- Verbose mode: false\r\n\r\n### Test Cases and Results\r\n\r\n1. ✅ **Basic Error Message**\r\n   ```typescript\r\n   elizaLogger.error('Simple error message');\r\n   ```\r\n   - Result: Successfully displayed with proper formatting\r\n   - Output included error icon and message\r\n\r\n2. ✅ **Error Object Handling**\r\n   ```typescript\r\n   const error = new Error('Test error message');\r\n   elizaLogger.error('Error occurred:', error);\r\n   ```\r\n   - Result: Successfully displayed error object with stack trace\r\n   - Properly formatted both message and error details\r\n\r\n3. ✅ **Complex Error Scenarios**\r\n   ```typescript\r\n   elizaLogger.error(\r\n       'Failed to process request:',\r\n       { id: 123, type: 'test' },\r\n       'Additional context:',\r\n       new Error('Network timeout')\r\n   );\r\n   ```\r\n   - Result: Successfully handled multiple arguments\r\n   - Properly formatted objects and error information\r\n   - Maintained readability with complex data\r\n\r\n4. ✅ **Nested Error Handling**\r\n   ```typescript\r\n   // Nested error with cause\r\n   const outerError = new Error('Outer error');\r\n   outerError.cause = new Error('Inner error');\r\n   elizaLogger.error('Complex error:', outerError);\r\n   ```\r\n   - Result: Successfully displayed nested error structure\r\n   - Properly showed error cause chain\r\n\r\n## Key Findings\r\n\r\n1. **Logger Implementation**\r\n   - The logger correctly handles all types of error inputs\r\n   - Proper formatting is applied to all error messages\r\n   - Object serialization works as expected\r\n   - Stack traces are preserved and displayed\r\n\r\n2. **Error Message Display**\r\n   - All error descriptions are properly shown when correctly passed\r\n   - No empty descriptions observed in any test case\r\n   - Formatting is consistent across different error types\r\n\r\n3. **Root Cause Analysis**\r\n   - The reported issue is likely due to incorrect usage, not a logger defect\r\n   - Common mistake: passing only error object without context\r\n   - Solution: Always provide context with error objects\r\n\r\n## Recommendations\r\n\r\n1. **Usage Guidelines**\r\n   ```typescript\r\n   // ❌ Don't do this:\r\n   elizaLogger.error(error);\r\n\r\n   // ✅ Do this instead:\r\n   elizaLogger.error('Operation failed:', error);\r\n   ```\r\n\r\n2. **Best Practices**\r\n   - Always provide context string before error objects\r\n   - Include relevant data for debugging\r\n   - Use proper error catching and handling\r\n\r\n3. **Documentation**\r\n   - Added comprehensive examples in `logger.examples.md`\r\n   - Included common patterns and anti-patterns\r\n   - Provided environment configuration guidance\r\n\r\n## Conclusion\r\n\r\nThe ElizaLogger implementation is functioning correctly and provides comprehensive error logging capabilities. The reported issue (#1703) appears to be related to incorrect usage rather than a defect in the logger itself. All test cases demonstrate proper error description display when the logger is used correctly.\r\n\r\n### Resolution\r\nIssue can be closed with:\r\n1. Reference to proper usage patterns\r\n2. Link to new documentation\r\n3. Examples of correct error logging implementation\r\n"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-06T07:50:39Z",
        "body": "Closing this now, already pushed a test file for the core."
      }
    ]
  },
  {
    "number": 1689,
    "title": "chore: update web search plugin export",
    "created_at": "2025-01-02T12:22:31Z",
    "closed_at": "2025-01-02T16:37:25Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1689",
    "body": "# Relates to:\r\nPlugin export collisions in character files\r\n\r\n# Risks\r\nLow - This is a minor bug fix that ensures proper module exports\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\nEnsures the websearch plugin has a proper default export at the bottom to avoid collisions when used in the actions module in character files. This maintains consistency with other plugins in the codebase that follow the same pattern (like the EVM plugin).\r\n\r\n## What kind of change is this?\r\nBug fixes (non-breaking change which fixes an issue)\r\n\r\n# Documentation changes needed?\r\nMy changes do not require a change to the project documentation.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n1. Check `packages/plugin-bootstrap/src/index.ts` to verify the proper export structure\r\n2. Verify that the plugin can be properly imported in character files without collisions\r\n\r\n## Detailed testing steps\r\n1. Load a character file that uses the bootstrap plugin\r\n2. Verify that no export collisions occur when the plugin is loaded\r\n3. Verify that all plugin actions are properly accessible\r\n\r\n# Deploy Notes\r\nNo special deploy steps required. This is a straightforward bug fix that maintains backward compatibility.\r\n\r\n# Discord:\r\n\r\naffaanmustafa\r\n\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1689/comments",
    "author": "affaan-m",
    "comments": [
      {
        "user": "monilpat",
        "created_at": "2025-01-02T16:37:25Z",
        "body": "Duplicate"
      }
    ]
  },
  {
    "number": 1669,
    "title": "http proxy error: /e0e10e6f-ff2b-0d4c-8011-1fc1eee7cb32/message",
    "created_at": "2025-01-02T01:14:59Z",
    "closed_at": "2025-01-06T23:17:07Z",
    "labels": [
      "Needs Testing",
      "Need Feedback"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1669",
    "body": "**Describe the bug**\r\n\r\nI checkout in main branch and running on WSL2, I have set the WSL2 proxy and it can normally access google.com eg., \r\nI set the `SERVER_PORT` as my local proxy port 7897.\r\n1. execute `pnpm start --character=\"characters/trump.character.json\"` and `pnpm start:client` \r\n2. input some text on dialogue.\r\nThe `pnpm start:client` terminal show\r\n```\r\n9:04:17 AM [vite] http proxy error: /e0e10e6f-ff2b-0d4c-8011-1fc1eee7cb32/message\r\nError: socket hang up\r\n    at Socket.socketOnEnd (node:_http_client:542:25)\r\n    at Socket.emit (node:events:525:35)\r\n    at endReadableNT (node:internal/streams/readable:1696:12)\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21)\r\n```\r\nThe `pnpm start --character=\"characters/trump.character.json` terminal show\r\n```\r\nfile:///home/cxp/solana_learn/AI/eliza/packages/adapter-sqlite/dist/index.js:308\r\n        const memories = this.db.prepare(sql).all(...queryParams);\r\n                                              ^\r\nSqliteError: Error reading 1st vector: zero-length vectors are not supported.\r\n    at SqliteDatabaseAdapter.searchMemoriesByEmbedding (file:///home/cxp/solana_learn/AI/eliza/packages/adapter-sqlite/dist/index.js:308:47)\r\n    at SqliteDatabaseAdapter.createMemory (file:///home/cxp/solana_learn/AI/eliza/packages/adapter-sqlite/dist/index.js:240:48)\r\n    at MemoryManager.createMemory (file:///home/cxp/solana_learn/AI/eliza/packages/core/dist/index.js:3176:44)\r\n    at async file:///home/cxp/solana_learn/AI/eliza/packages/client-direct/dist/index.js:250:13 {\r\n  code: 'SQLITE_ERROR'\r\n}\r\n\r\nNode.js v23.5.0\r\n/home/cxp/solana_learn/AI/eliza/agent:\r\n ERR_PNPM_RECURSIVE_RUN_FIRST_FAIL  @elizaos/agent@0.1.7-alpha.2 start: `node --loader ts-node/esm src/index.ts \"--isRoot\" \"--character=characters/trump.character.json\"`\r\nExit status 1\r\n```\r\n\r\n**To Reproduce**\r\n\r\n<!-- Steps to reproduce the behavior. -->\r\n\r\n**Expected behavior**\r\n\r\nCan normally access the openai service\r\n\r\n**Screenshots**\r\n\r\n\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1669/comments",
    "author": "cxp-13",
    "comments": [
      {
        "user": "AIFlowML",
        "created_at": "2025-01-02T15:49:24Z",
        "body": "What is the version of ElizaOS you running ? Are you able to run without the proxy activated ? "
      },
      {
        "user": "cxp-13",
        "created_at": "2025-01-03T01:35:55Z",
        "body": "> What is the version of ElizaOS you running ? Are you able to run without the proxy activated ?\r\n\r\n1. version of ElizaOS\r\n```\r\ncxp@R9000P:~/solana_learn/AI/eliza$ git log\r\ncommit 76d4f42e5763f638095d1179b2e88afc03fb8896 (HEAD -> main, origin/main, origin/HEAD)\r\nAuthor: GitHub Action <actions@github.com>\r\nDate:   Sat Dec 28 12:20:16 2024 +0000\r\n\r\n    chore: update changelog\r\n```\r\n\r\n2. Yes, I once tried to start with the default proxy `localhost:3000` on `vite.confit.ts`, but it still has mistakes as mentioned above"
      },
      {
        "user": "jackoelv",
        "created_at": "2025-01-03T09:06:23Z",
        "body": "I have meet the same problem with tag v0.1.7-alpha.2. \r\nIt`s working correctly with tag v0.1.7-alpha.1"
      },
      {
        "user": "lukaskai",
        "created_at": "2025-01-04T10:48:54Z",
        "body": "Issue is in your agent/src/index.ts that it tries to load old SQLITE Db, which is probably incompatible. \r\nChanging \r\n\r\n process.env.SQLITE_FILE ?? path.resolve(dataDir, \"db.sqlite\");\r\n \r\n To\r\n \r\n process.env.SQLITE_FILE ?? path.resolve(dataDir, \"devdb.sqlite\");\r\n \r\n Solved it for me. "
      },
      {
        "user": "MyJoiT",
        "created_at": "2025-01-05T10:37:47Z",
        "body": "Same issue here.\r\nI removed the db.sqlite file in agent/data & re-ran `pnpm start xx`, worked"
      },
      {
        "user": "tetreault",
        "created_at": "2025-01-05T21:25:51Z",
        "body": "> Same issue here. I removed the db.sqlite file in agent/data & re-ran `pnpm start xx`, worked\r\n\r\nStill run into this issue even after deleting & rerunning"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-06T07:42:06Z",
        "body": "The issue is generally solved by either the solution proposed by @MyJoiT or @lukaskai \r\nIs not a bug of the main code but i keep this open for investigation."
      },
      {
        "user": "ViniciusSerafim",
        "created_at": "2025-01-06T16:15:19Z",
        "body": "+1 none of the solutions worked for me"
      },
      {
        "user": "0xsarvesh",
        "created_at": "2025-01-06T23:09:50Z",
        "body": "If I delete the file, it works for 1 interaction but again fails "
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-06T23:17:07Z",
        "body": "Solution was already posted with consensus.\r\nI close this issue now. "
      },
      {
        "user": "cxp-13",
        "created_at": "2025-01-07T00:49:13Z",
        "body": "> The issue is generally solved by either the solution proposed by @MyJoiT or @lukaskai Is not a bug of the main code but i keep this open for investigation.\r\n\r\nin latest commit on main branch, \r\n```\r\ncommit ea9d1c02291dea26b25c815be30db5c91e6ceb21 (HEAD -> main, origin/main, origin/HEAD)\r\nMerge: 62abe4c3 3c753065\r\nAuthor: Odilitime <janesmith@airmail.cc>\r\nDate:   Sun Jan 5 02:07:15 2025 -0800\r\n\r\n    Merge pull request #1867 from elizaOS/odilitime-patch-1\r\n    \r\n    docs: Add DAO donation ask & dev discord\r\n```\r\n\r\nstill have an error after removing the `db.sqlite` on `agent/data`, and running `pnpm run xxxx`\r\n\r\n```\r\n ◎ LOGS\r\n   Creating Memory \r\n   afeaf89b-5766-07e6-a4f2-3611ffa3245e \r\n   understands states' rights better than anyone \r\n\r\nKilled\r\n/home/cxp/solana_learn/AI/eliza/agent:\r\n ERR_PNPM_RECURSIVE_RUN_FIRST_FAIL  @elizaos/agent@0.1.7 start: `node --loader ts-node/esm src/index.ts \"--isRoot\" \"--character=characters/trump.character.json\"`\r\nExit status 137\r\n ELIFECYCLE  Command failed with exit code 137.\r\n ```"
      },
      {
        "user": "cxp-13",
        "created_at": "2025-01-07T01:19:29Z",
        "body": "> > The issue is generally solved by either the solution proposed by @MyJoiT or @lukaskai Is not a bug of the main code but i keep this open for investigation.\r\n> \r\n> in latest commit on main branch,\r\n> \r\n> ```\r\n> commit ea9d1c02291dea26b25c815be30db5c91e6ceb21 (HEAD -> main, origin/main, origin/HEAD)\r\n> Merge: 62abe4c3 3c753065\r\n> Author: Odilitime <janesmith@airmail.cc>\r\n> Date:   Sun Jan 5 02:07:15 2025 -0800\r\n> \r\n>     Merge pull request #1867 from elizaOS/odilitime-patch-1\r\n>     \r\n>     docs: Add DAO donation ask & dev discord\r\n> ```\r\n> \r\n> still have an error after removing the `db.sqlite` on `agent/data`, and running `pnpm run xxxx`\r\n> \r\n> ```\r\n>  ◎ LOGS\r\n>    Creating Memory \r\n>    afeaf89b-5766-07e6-a4f2-3611ffa3245e \r\n>    understands states' rights better than anyone \r\n> \r\n> Killed\r\n> /home/cxp/solana_learn/AI/eliza/agent:\r\n>  ERR_PNPM_RECURSIVE_RUN_FIRST_FAIL  @elizaos/agent@0.1.7 start: `node --loader ts-node/esm src/index.ts \"--isRoot\" \"--character=characters/trump.character.json\"`\r\n> Exit status 137\r\n>  ELIFECYCLE  Command failed with exit code 137.\r\n>  ```\r\n> ```\r\n\r\nMy wsl2 memory limit causes it, and it works locally."
      },
      {
        "user": "tetreault",
        "created_at": "2025-01-08T01:47:32Z",
        "body": "deleting sqlite db does not change anything, still run into this issue. \r\n\r\nchanging db to devdb @lukaskai suggestion doesn't work. \r\n\r\nwill try switching versions. "
      }
    ]
  },
  {
    "number": 1622,
    "title": "Initial setup based on docs not working",
    "created_at": "2024-12-31T22:35:20Z",
    "closed_at": "2025-01-01T10:41:54Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1622",
    "body": "**Describe the bug**\r\nCant get minimal setup running with OpenAI API as model\r\nError on agent terminal after message being sent via client\r\n\r\n**To Reproduce**\r\n1. clone repo, install deps, build\r\n2. choose openai as model on default tate character file:\r\n`    \"modelProvider\": \"openai\",\r\n    \"settings\": {\r\n        \"voice\": {\r\n            \"model\": \"en_US-male-medium\"\r\n        }\r\n    },\r\n    `\r\n3. Add openai API key to .env `OPENAI_API_KEY=sk-proj-xxx`\r\n4.  `pnpm run start --characters=\"../characters/tate.character.json\"`\r\n5. `pnpm start:client`\r\n6. send message via client\r\n7. receive error on agent terminal:\r\n``\": \\\"The model gpt-4o does not exist or you do not have access to it.\\\",\\n        \\\"type\\\": \\\"invalid_request_error\\\",\\n        \\\"param\\\": null,\\n        \\\"code\\\": \\\"model_not_found\\\"\\n    }\\n}\\n\",\"isRetryable\":false,\"data\":{\"error\":{\"message\":\"The model `gpt-4o` does not exist or you do not have access to it.\",\"type\":\"invalid_request_error\",\"param\":null,\"code\":\"model_not_found\"}}}`\r\n`\r\n\r\n**Expected behavior**\r\n\r\nNo error, use openai API and receive response on client\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1622/comments",
    "author": "uleeeeee",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2024-12-31T22:35:44Z",
        "body": "Hello @uleeeeee! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      },
      {
        "user": "freddymercury",
        "created_at": "2024-12-31T23:49:17Z",
        "body": "@uleeeeee does your openAI account have credit? I get similar error responses when I have no credit in my openAI account."
      },
      {
        "user": "uleeeeee",
        "created_at": "2025-01-01T10:41:54Z",
        "body": "> @uleeeeee does your openAI account have credit? I get similar error responses when I have no credit in my openAI account.\r\n\r\nProblem was probably related to that. I added another 10$ credits, created new API key and now it works. Thanks!"
      }
    ]
  },
  {
    "number": 1600,
    "title": "refactor(scripts): simplify docker run command with line continuations",
    "created_at": "2024-12-31T09:12:15Z",
    "closed_at": "2025-01-02T12:27:30Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1600",
    "body": "## What does this PR do?\r\n\r\nThis PR simplifies the Docker management script by replacing the dynamic mount configuration with a more straightforward line-continued approach.\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1600/comments",
    "author": "bendanzhentan",
    "comments": [
      {
        "user": "odilitime",
        "created_at": "2025-01-01T07:03:05Z",
        "body": "The variables make more sense because we can generate a list into a file and then read that file into one of these variables. I'd move to close this"
      },
      {
        "user": "HashWarlock",
        "created_at": "2025-01-01T19:23:09Z",
        "body": "> The variables make more sense because we can generate a list into a file and then read that file into one of these variables. I'd move to close this\r\n\r\nI agree on closing the issue."
      }
    ]
  },
  {
    "number": 1592,
    "title": "Add Spanish Translation for Documentation README (docs/README_es.md)",
    "created_at": "2024-12-31T07:10:32Z",
    "closed_at": "2024-12-31T12:42:07Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1592",
    "body": "**Describe the solution you'd like**\r\n\r\nWe need to create a Spanish version of our documentation README to make elizaOS more accessible to Spanish-speaking developers and users. This translation will help expand our international community and provide better support for Spanish-speaking contributors.\r\n\r\n**Tasks**\r\n\r\n1. Create a new file `README_es.md` in the docs directory\r\n2. Translate all existing sections from the English README including:\r\n   - Project overview and introduction\r\n   - Installation instructions\r\n   - Configuration steps\r\n   - Basic usage examples\r\n   - Contributing guidelines\r\n   - License information\r\n\r\n**Additional context**\r\n\r\n\r\n\r\n**Technical Requirements:**\r\n\r\n- Maintain all existing Markdown formatting and structure\r\n- Keep all code examples unchanged (comments should be translated)\r\n- Preserve all links and references, updating them if they point to Spanish versions when available\r\n- Include a language selector at the top of the document linking to other language versions\r\n- Follow Spanish technical writing conventions and terminology\r\n\r\n**Quality Guidelines:**\r\n\r\n- Use formal Spanish suitable for technical documentation\r\n- Ensure terminology consistency throughout the document\r\n- Avoid literal translations that might not convey the correct technical meaning\r\n- Have the translation reviewed by a native Spanish speaker with technical background\r\n\r\n**Additional Notes:**\r\n\r\n- Reference the original English README.md for structure and content\r\n- Update the main README.md to include a link to the Spanish version\r\n- Consider adding metadata for language detection\r\n- Document any Spanish-specific resources or community channels if available\r\n\r\n**Deliverables:**\r\n\r\n- Complete README_es.md file\r\n- Updated links in the main README.md\r\n- Documentation of any translation decisions made for future reference\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1592/comments",
    "author": "salazarsebas",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2024-12-31T07:10:56Z",
        "body": "Hello @salazarsebas! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      },
      {
        "user": "shakkernerd",
        "created_at": "2024-12-31T12:42:07Z",
        "body": "Implemented in #1594 "
      }
    ]
  },
  {
    "number": 1590,
    "title": "feat: add readme for near plugin",
    "created_at": "2024-12-31T06:08:08Z",
    "closed_at": "2024-12-31T12:58:37Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1590",
    "body": "This pr contains readme for near plugin",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1590/comments",
    "author": "chandiniv1",
    "comments": [
      {
        "user": "shakkernerd",
        "created_at": "2024-12-31T12:58:37Z",
        "body": "There is already a doc for this plugin.\r\nThanks."
      }
    ]
  },
  {
    "number": 1584,
    "title": "feat: Add Dexscreener plugin",
    "created_at": "2024-12-31T00:14:19Z",
    "closed_at": "2025-01-24T06:31:34Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1584",
    "body": "A plugin that gives option to the Agent to check latest added tokens to DexScreener on all networks.\r\nWith this info Agents could Invest in new projects with some additional checks and other plugins.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1584/comments",
    "author": "0xCardinalError",
    "comments": [
      {
        "user": "twilwa",
        "created_at": "2024-12-31T04:18:10Z",
        "body": "LGTM at a glance, will pull and test when i get a chance later"
      },
      {
        "user": "dr-fusion",
        "created_at": "2025-01-01T13:29:19Z",
        "body": "I think we should not do space changes here, as it will be difficult to review exact changes,\r\n\r\nis it possible to change the space settings back.\r\n"
      },
      {
        "user": "0xCardinalError",
        "created_at": "2025-01-01T20:00:03Z",
        "body": "> I think we should not do space changes here, as it will be difficult to review exact changes,\r\n> \r\n> is it possible to change the space settings back.\r\n\r\nyou talking about package.json? isn't the correct formating 4 spaces and not 2 per prettier?"
      },
      {
        "user": "0xCardinalError",
        "created_at": "2025-01-14T09:39:03Z",
        "body": "fixed conflicts added agent to index.ts, lgtm"
      },
      {
        "user": "wtfsayo",
        "created_at": "2025-01-24T06:31:34Z",
        "body": "hey @0xCardinalError closing this since another already merged"
      }
    ]
  },
  {
    "number": 1563,
    "title": "spades",
    "created_at": "2024-12-29T19:33:57Z",
    "closed_at": "2025-01-04T02:21:44Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1563",
    "body": "**Is your feature request related to a problem? Please describe.**\n\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\n\n**Describe the solution you'd like**\n\n<!-- A clear and concise description of what you want to happen. -->\n\n**Describe alternatives you've considered**\n\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\n\n**Additional context**\n\n<!-- Add any other context or screenshots about the feature request here. -->\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1563/comments",
    "author": "Dereichi",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2024-12-29T19:34:22Z",
        "body": "Hello @Dereichi! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      },
      {
        "user": "cole-gillespie",
        "created_at": "2024-12-31T14:58:37Z",
        "body": "@Dereichi did you mean to actually add some details here or?"
      }
    ]
  },
  {
    "number": 1552,
    "title": "Quick start guide bug - pnpm start",
    "created_at": "2024-12-29T04:17:01Z",
    "closed_at": "2024-12-31T23:53:32Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1552",
    "body": "**Describe the bug**\r\nwhen going through the quickstart guide\r\n\r\nGetting an error when using local client (`pnpm start:client`) and init any chat such as `hello`...the output on the service is:\r\n\r\n```\r\n-0009-a2c3-83780c350ff3 successfully.\"] \r\n\r\n [\"◎ Agent tate linked to room 6ac3f59a-67bb-0009-a2c3-83780c350ff3 successfully.\"] \r\n\r\n ◎ LOGS\r\n   Creating Memory \r\n   0c8b6c1c-00b2-0768-8309-564c7d224967 \r\n   hi \r\n\r\n [\"◎ Generating message response..\"] \r\n\r\n [\"◎ Generating text...\"] \r\n\r\n ℹ INFORMATIONS\r\n   Generating text with options: \r\n   {\"modelProvider\":\"gaianet\",\"model\":\"large\"} \r\n\r\n ℹ INFORMATIONS\r\n   Selected model: \r\n   qwen72b \r\n\r\n ◎ LOGS\r\n   Creating Memory \r\n   2f8f543d-8105-094e-89e8-5ecda88f310f \r\n   What's the purpose of this conversation? \r\n\r\n\r\nfile:///Users/dev/rsrc/eliza/packages/adapter-sqlite/dist/index.js:308\r\n        const memories = this.db.prepare(sql).all(...queryParams);\r\n                                              ^\r\nSqliteError: Vector dimension mistmatch. First vector has 768 dimensions, while the second has 384 dimensions.\r\n    at SqliteDatabaseAdapter.searchMemoriesByEmbedding (file:///Users/dev/rsrc/eliza/packages/adapter-sqlite/dist/index.js:308:47)\r\n    at SqliteDatabaseAdapter.createMemory (file:///Users/dev/rsrc/eliza/packages/adapter-sqlite/dist/index.js:240:48)\r\n    at MemoryManager.createMemory (file:///Users/dev/rsrc/eliza/packages/core/dist/index.js:3176:44)\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\r\n    at async file:///Users/dev/rsrc/eliza/packages/client-direct/dist/index.js:275:13 {\r\n  code: 'SQLITE_ERROR'\r\n}\r\n\r\nNode.js v23.3.0\r\n/Users/dev/rsrc/eliza/agent:\r\n ERR_PNPM_RECURSIVE_RUN_FIRST_FAIL  @elizaos/agent@0.1.7-alpha.2 start: `node --loader ts-node/esm src/index.ts \"--isRoot\" \"--character=characters/tate.character.json\"`\r\nExit status 1\r\n ELIFECYCLE  Command failed with exit code 1.\r\n```\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n- `pnpm start --character=\"characters/tate.character.json\"`\r\n-  `pnpm start:client`\r\n-  initiate a chat after selecting agent - such as 'hello'\r\n- no response on UI; the service has the error above with the service process exiting code 1\r\n<!-- Steps to reproduce the behavior. -->\r\n\r\n**Expected behavior**\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Screenshots**\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n\r\n**Additional context**\r\n\r\nstarts up just fine, creates memories etc to the vector db.\r\n\r\nusing node version 23.3, tried 24.3 - same result\r\non a mac os - Monterrey - 12.7.6 (intel chip)\r\n\r\nusing elizaOS version - `v0.1.7-alpha.2`\r\nusing `gaianet` as the model provider\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1552/comments",
    "author": "freddymercury",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2024-12-29T04:17:22Z",
        "body": "Hello @freddymercury! Welcome to the ai16z community. Thank you for opening your first issue; we appreciate your contribution. You are now a ai16z contributor!"
      },
      {
        "user": "CryptoUncleSam",
        "created_at": "2024-12-30T18:48:05Z",
        "body": "exactly the same error"
      },
      {
        "user": "freddymercury",
        "created_at": "2024-12-31T23:53:32Z",
        "body": "i am closing this as I do not think this is critical. I was able to move past this by using openAI. I was using `gaianet` so I am guessing there is gaianet account problem on my end."
      },
      {
        "user": "freddymercury",
        "created_at": "2024-12-31T23:54:00Z",
        "body": "> exactly the same error\r\n\r\nwhat is your llm provider? gaianet? openai?"
      },
      {
        "user": "www222fff",
        "created_at": "2025-01-02T04:32:27Z",
        "body": "same issue with me for gaianet provider, is there fix release or warkaround?"
      },
      {
        "user": "harishkotra",
        "created_at": "2025-01-03T16:32:22Z",
        "body": "@www222fff @freddymercury @CryptoUncleSam Harish here from the Gaia team. \r\n\r\nWe're actively looking into this and will push a PR with a fix soon!\r\n\r\nA temporary solution is to use this version: `git checkout v0.1.7-alpha.1`"
      },
      {
        "user": "issa-me-sush",
        "created_at": "2025-01-04T16:24:46Z",
        "body": "seems to be fine with the latest - v0.1.7"
      },
      {
        "user": "harishkotra",
        "created_at": "2025-01-04T18:19:46Z",
        "body": "@www222fff @freddymercury @CryptoUncleSam try the latest v.0.1.7 and it works without this issue. Thanks @issa-me-sush for the update.\r\n"
      },
      {
        "user": "twopats",
        "created_at": "2025-02-05T00:39:05Z",
        "body": "having this issue as well! my package.json doesn't seem to have start:client"
      }
    ]
  },
  {
    "number": 1551,
    "title": "Add JSDoc documentation for repository",
    "created_at": "2024-12-29T03:17:57Z",
    "closed_at": "2025-01-02T22:47:03Z",
    "labels": [
      "documentation"
    ],
    "url": "https://github.com/elizaOS/eliza/pull/1551",
    "body": "## Summary of Changes\nThis PR adds JSDoc documentation to the entire repository for improved code readability and documentation.\n\n## Summary of Modified Files\n- /home/runner/work/eliza/eliza/packages/_examples/plugin/src/actions/sampleAction.ts\n- /home/runner/work/eliza/eliza/packages/_examples/plugin/src/evaluators/sampleEvalutor.ts\n- /home/runner/work/eliza/eliza/packages/_examples/plugin/src/index.ts\n- ...\n\n## Instructions for Reviewers\nPlease review the changes in all modified files to ensure that the JSDoc documentation accurately reflects the code functionality and provides useful information for developers. Thank you!",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1551/comments",
    "author": "madjin",
    "comments": [
      {
        "user": "odilitime",
        "created_at": "2024-12-29T03:28:40Z",
        "body": "Putting **/ instead of */ in some instances causing the source code not to parse. We should close this, then get that bug fixed then try again"
      }
    ]
  },
  {
    "number": 1550,
    "title": "feat: Twitter Spaces Integration",
    "created_at": "2024-12-29T02:44:43Z",
    "closed_at": "2025-01-01T13:22:30Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1550",
    "body": "# Risks\r\nLow. Existing users who relied on Deepgram by default will still see no change unless they explicitly define a new `TRANSCRIPTION_PROVIDER`. Fallback logic preserves original behavior (Deepgram → OpenAI → Local).\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n- **Adds** an optional `TRANSCRIPTION_PROVIDER` setting (`deepgram`, `openai`, or `local`) with fallback logic.  \r\n  - If not set, old behavior remains: Deepgram → OpenAI → Local.\r\n- **Moves** Twitter Spaces plugins from `agent-twitter-client` into this repo for better flexibility and less friction in plugin development.\r\n- **Introduces** an AI-driven Twitter Spaces flow:\r\n  1. **Automatic** Space launch decisions (random chance, business hours, cooldown intervals).\r\n  2. **Multi-speaker** logic with queue management (`maxSpeakers`).\r\n  3. GPT-based filler/idle messages, optional STT/TTS bridging, local audio recording.\r\n  4. Graceful shutdown and cooldown for repeated Spaces.\r\n\r\n### Transcription Service Changes\r\n- We introduced a new **`TranscriptionProvider` enum** (`Deepgram`, `OpenAI`, or `Local`) to replace string flags.\r\n- In `initialize()`, the **provider is chosen in this order**:\r\n  1. `character.settings.transcription` (if the API keys exist),\r\n  2. `.env` (`TRANSCRIPTION_PROVIDER`),\r\n  3. Old fallback logic (Deepgram → OpenAI → Local) if neither is configured.\r\n- For example, in your `character.json`, you can specify:\r\n  ```json5\r\n  {\r\n    // ...\r\n    \"settings\": {\r\n      \"transcription\": \"Deepgram\"\r\n    }\r\n  }\r\n  ```\r\n  If you have `DEEPGRAM_API_KEY` set, the service will use Deepgram; otherwise it continues to the next check.\r\n- `processQueue()` uses a `switch` on `this.transcriptionProvider` to pick the final method (`transcribeWithDeepgram`, `transcribeWithOpenAI`, or `transcribeLocally`).\r\n\r\n## Flow Recap\r\n1. **Periodic Check**  \r\n   - If no Space is running, possibly launch one by `shouldLaunchSpace()` (random chance, business hours, cooldown).  \r\n   - If a Space is running, `manageCurrentSpace()` handles speaker timeouts, occupancy updates, queue acceptance, etc.\r\n\r\n2. **Space Creation**  \r\n   - Generates a `SpaceConfig` (topics from config or GPT).  \r\n   - Attaches plugins: audio recording, STT/TTS, idle monitor, etc.  \r\n   - Hooks into `speakerRequest`, `occupancyUpdate`, `idleTimeout`, etc.\r\n\r\n3. **Speaker Logic**  \r\n   - Maintains an `activeSpeakers` array + a queue if at capacity (`maxSpeakers`).  \r\n   - Enforces `speakerMaxDurationMs` per speaker.  \r\n   - If a speaker is removed, accept next in queue if available.\r\n\r\n4. **Stopping**  \r\n   - `stopSpace()` finalizes the Space, logs completion, clears states, etc.  \r\n   - Resumes periodic checks at a slower interval until the next launch is decided.\r\n\r\n## Configuration\r\n\r\n### A) `.env` / Environment Variables\r\n\r\n```bash\r\n# Transcription Provider\r\nTRANSCRIPTION_PROVIDER=         # Default is local (possible values: deepgram, openai, local)\r\nOPENAI_API_KEY=sk-...\r\nDEEPGRAM_API_KEY=...\r\n```\r\n\r\n### B) `character.json` → `\"twitterSpaces\"` Field\r\n\r\n```jsonc\r\n{\r\n  // ...\r\n    \"settings\": {\r\n    ...\r\n    \"transcription\": \"Deepgram\"\r\n  }\r\n  \"twitterSpaces\": {\r\n    \"maxSpeakers\": 2,\r\n    \"topics\": [\r\n      \"Blockchain Trends\",\r\n      \"AI Innovations\"\r\n    ],\r\n    \"typicalDurationMinutes\": 45,\r\n    \"idleKickTimeoutMs\": 300000,\r\n    \"minIntervalBetweenSpacesMinutes\": 60,\r\n    \"businessHoursOnly\": true,\r\n    \"randomChance\": 0.3,\r\n    \"enableIdleMonitor\": true,\r\n    \"enableSttTts\": true,\r\n    \"enableRecording\": false,\r\n    \"voiceId\": \"21m00Tcm4TlvDq8ikWAM\",\r\n    \"sttLanguage\": \"en\",\r\n    \"gptModel\": \"gpt-3.5-turbo\",\r\n    \"systemPrompt\": \"You are a helpful AI co-host assistant.\",\r\n    \"speakerMaxDurationMs\": 240000\r\n  }\r\n}\r\n```\r\n\r\n- **`maxSpeakers`**: number of concurrent speakers allowed.\r\n- **`topics`**: if none are provided, GPT generates them dynamically.\r\n- **`randomChance`**: probability for each check cycle to spawn a new Space.\r\n- **`speakerMaxDurationMs`**: maximum time each speaker can speak before removal.\r\n\r\n## What kind of change is this?\r\n- **Features** (new Twitter Spaces integration and optional transcription provider).\r\n- **Improvements** (unified plugin development, more config options, fallback logic maintained).\r\n\r\n# Documentation changes needed?\r\nYes, minimal. We must mention:\r\n- The new `TRANSCRIPTION_PROVIDER` in `.env` (optional).\r\n- The new `twitterSpaces` config section in `character.json`.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n- Check `transcription.service.ts` to review how it resolves conflicts by prioritizing character settings, then `.env`, then old fallback.\r\n- Check new or relocated Twitter Spaces integration files for the Space lifecycle (launch, speaker management, idle detection, etc.).\r\n\r\n## Detailed testing steps\r\n1. Define `TRANSCRIPTION_PROVIDER` in `.env` (or leave it empty to keep old fallback).\r\n2. Provide valid API keys if choosing `deepgram` or `openai`.\r\n3. Define `twitterSpaces.randomChance` in the character JSON to `1` (for a 100% rate of starting a space).\r\n4. Run the agent; verify that Spaces launch automatically, respect the chosen transcription provider, and handle multi-speaker logic as expected.\r\n\r\nNo special database migrations are needed. Basic local runs and logs confirm correct functioning.\r\n\r\n# Future Improvements\r\n\r\n- **More robust decision logic** for accepting speakers, switching, and timeouts.  \r\n- **Realtime API plugin** for smoother, on-the-fly conversation handling.  \r\n- **Solo Broadcast Mode**: launch Spaces focused on a single host monologue with no external speakers.  \r\n- **True VAD (Voice Activity Detection)** to detect when a speaker finishes talking, instead of relying on manual mute/unmute cues.  \r\n- **Advanced scheduling triggers** (e.g., event-based or calendar-based).  \r\n- **Analytics & insights** for post-Space summaries or usage metrics.\r\n\r\n---",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1550/comments",
    "author": "slkzgm",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2025-01-01T12:13:00Z",
        "body": "Some conflicts that need review, we should prioritize getting this in since it's a pretty big push"
      }
    ]
  },
  {
    "number": 1542,
    "title": "feat: Addition of FerePro Plugin",
    "created_at": "2024-12-28T19:18:14Z",
    "closed_at": "2024-12-30T19:08:39Z",
    "labels": [
      "Plugin_new"
    ],
    "url": "https://github.com/elizaOS/eliza/pull/1542",
    "body": "# Relates to:  \r\nFerePro Plugin for Eliza #1405 \r\n\r\n---\r\n\r\n# Background  \r\n\r\n## What does this PR do?  \r\n- Introduces FerePro plugin to eliza\r\n- Follows the structured way to implement a plugin as stated in the doc\r\n\r\n## What kind of change is this?  \r\n**Feature** – Adds new plugin for FerePro to eliza  \r\n\r\n---\r\n\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1542/comments",
    "author": "Rudrakc",
    "comments": [
      {
        "user": "Rudrakc",
        "created_at": "2024-12-28T19:29:27Z",
        "body": "> Please include the agent/ folder work too (per `pnpm dev`)\r\n\r\nI didn't get it! did you mean I should try running pnpm dev plugin_ferePro in my local?\r\nAlso, how do I run the plugin to test if it's working as expected?"
      },
      {
        "user": "sekmet",
        "created_at": "2024-12-30T18:57:24Z",
        "body": "Hey @Rudrakc , please close the PR.\r\nThank you"
      }
    ]
  },
  {
    "number": 1497,
    "title": "feat: add hyperliquid plugin to Eliza framework with ws support",
    "created_at": "2024-12-27T10:38:25Z",
    "closed_at": "2025-01-27T11:22:07Z",
    "labels": [
      "Plugin_new"
    ],
    "url": "https://github.com/elizaOS/eliza/pull/1497",
    "body": "# 🚀 Add Hyperliquid Plugin\r\n\r\n## Overview\r\nThis PR introduces a new plugin for interacting with the Hyperliquid perpetual DEX, providing a robust interface for trading operations, real-time market data access, and WebSocket integrations within the Eliza framework.\r\n\r\n## Key Features\r\n- 🔄 **Real-time WebSocket Integration**\r\n  - Live orderbook updates with auto-reconnect\r\n  - Efficient subscription management\r\n  - Robust connection handling\r\n- 📊 **Market Data Access**\r\n  - L2 orderbook data streaming\r\n  - Comprehensive meta information\r\n  - Real-time price feeds\r\n- 💹 **Trading Operations**\r\n  - Advanced order management (place/modify/cancel)\r\n  - Position tracking\r\n  - Fill history monitoring\r\n- 🔐 **Security**\r\n  - Wallet-based authentication\r\n  - Message signing\r\n  - Secure private key handling\r\n\r\n## Technical Implementation\r\n- Modular architecture with separate transport layers (HTTP, WebSocket, Exchange)\r\n- Comprehensive error handling with custom error types\r\n- Full TypeScript support with detailed type definitions\r\n- Extensive test coverage for all components\r\n\r\n## Testing\r\nAll components have been thoroughly tested against the mainnet API:\r\n- ✅ HTTP Transport (9/9 tests passing)\r\n- ✅ WebSocket Transport (2/2 tests passing)\r\n- ✅ WebSocket Actions (2/2 tests passing)\r\n- ✅ Exchange Operations (17/19 tests passing) some actions depend on the coins status.\r\n\r\n## Important Notes\r\n⚠️ The testnet environment is currently unavailable. All tests and validations have been performed using mainnet API with real credentials.\r\n\r\n## Documentation\r\n- Comprehensive README with setup instructions\r\n- Detailed API documentation for all actions\r\n- Usage examples and error handling patterns\r\n- Environment configuration guide\r\n\r\n## Dependencies\r\n- ethers.js for wallet operations\r\n- axios for HTTP requests\r\n- ws for WebSocket connections\r\n\r\n## Breaking Changes\r\nNone - This is a new plugin addition\r\n\r\n## Future Improvements\r\n- Add support for testnet when available\r\n- Implement additional order types\r\n- Enhance error recovery mechanisms\r\n- Add rate limiting controls\r\n\r\n## Screenshots\r\n![Hyperliquid Logo](packages/plugin-hyperliquid/assets/hyperliquid.png)",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1497/comments",
    "author": "AIFlowML",
    "comments": [
      {
        "user": "AIFlowML",
        "created_at": "2025-01-11T03:39:15Z",
        "body": "Im gonna add more stuff in it before merge. "
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-12T09:32:58Z",
        "body": "Merged a Double \r\n"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-27T07:01:40Z",
        "body": "Wait i will make this better then merge next week."
      },
      {
        "user": "wtfsayo",
        "created_at": "2025-01-27T11:22:07Z",
        "body": "closing! @AIFlowML "
      }
    ]
  },
  {
    "number": 1495,
    "title": "hi i finished the vertex ai integration do you guys need this? ",
    "created_at": "2024-12-27T07:00:31Z",
    "closed_at": "2024-12-27T14:13:20Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1495",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\n**Describe the solution you'd like**\r\n\r\n<!-- A clear and concise description of what you want to happen. -->\r\n\r\n**Describe alternatives you've considered**\r\n\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1495/comments",
    "author": "peperuney",
    "comments": [
      {
        "user": "tcm390",
        "created_at": "2024-12-27T14:13:21Z",
        "body": "hi could you make a pr for it?"
      }
    ]
  },
  {
    "number": 1484,
    "title": "pnpm can not work on Volta",
    "created_at": "2024-12-27T01:24:37Z",
    "closed_at": "2025-01-12T11:02:43Z",
    "labels": [
      "Needs Testing",
      "Need Feedback"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1484",
    "body": "**Describe the bug**\r\nAs long as you go into the project directory and execute pnpm, it's normal to execute pnpm elsewhere.\r\n\r\nPlease ensure that all project dependencies are installed with `npm install` or `yarn install`\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\ntercel@terceldeMac-mini tercel-ai % pnpm --version\r\n9.12.3\r\ntercel@terceldeMac-mini tercel-ai % cd eliza \r\ntercel@terceldeMac-mini eliza % pnpm --version\r\nVolta error: Could not locate executable `pnpm` in your project.\r\n\r\n**Expected behavior**\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Screenshots**\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1484/comments",
    "author": "tercel",
    "comments": [
      {
        "user": "AIFlowML",
        "created_at": "2025-01-06T07:09:03Z",
        "body": "The issue is mostly related to an installation failure.\r\n@tercel the project use pnpm and if you try with other managers it will fail. \r\nIs a permission problem not a bug. Try with Sudo fro elevated permissions on your user."
      },
      {
        "user": "tercel",
        "created_at": "2025-01-08T06:36:33Z",
        "body": "it is work well with nvm. only volta has this issue.\r\n % ls -l ~/.volta/bin/pnpm \r\nlrwxr-xr-x@ 1 tercel  staff  35 12 26 16:25 /Users/tercel/.volta/bin/pnpm -> /Users/tercel/.volta/bin/volta-shim\r\nIt's possible that Volta's use of shims to intercept all tool-related commands is causing this problem."
      }
    ]
  },
  {
    "number": 1471,
    "title": "eliza-starter, pnpm build, No input files, try \"tsup <your-file>\" instead",
    "created_at": "2024-12-26T15:08:10Z",
    "closed_at": "2025-01-06T05:32:37Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1471",
    "body": "`pnpm i && pnpm build && pnpm start`\r\n\r\nfails on build command with output:\r\n\r\n```\r\nDone in 5.8s\r\n\r\n> @ai16z/agent@0.1.1 build eliza-starter\r\n> tsup --format esm --dts\r\n\r\nNo input files, try \"tsup <your-file>\" instead\r\n ELIFECYCLE  Command failed with exit code 1.\r\n```\r\n\r\nHow to fix this?\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1471/comments",
    "author": "adapt7",
    "comments": [
      {
        "user": "aviaisenberg",
        "created_at": "2024-12-27T18:19:33Z",
        "body": "I wrote the code to fix this. How do I push into the repo? "
      },
      {
        "user": "twiinGG",
        "created_at": "2025-01-02T10:07:09Z",
        "body": "I faced this but found a solution in the project Discord. Here's the fix that worked for me:\r\n\r\nI fixed \"No input files\" error by updating the build script in package.json to explicitly specify the entry point:\r\n`\"build\": \"tsup src/index.ts --format esm --dts\"`\r\n\r\n\r\nThe error occurred because tsup couldn't locate the TypeScript files to compile. Adding the explicit path to `src/index.ts` resolved this issue."
      },
      {
        "user": "atmirrr",
        "created_at": "2025-01-02T15:02:05Z",
        "body": "> I faced this but found a solution in the project Discord. Here's the fix that worked for me:\r\n> \r\n> I fixed \"No input files\" error by updating the build script in package.json to explicitly specify the entry point: `\"build\": \"tsup src/index.ts --format esm --dts\"`\r\n> \r\n> The error occurred because tsup couldn't locate the TypeScript files to compile. Adding the explicit path to `src/index.ts` resolved this issue.\r\n\r\nThanks! It worked well for me!"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-06T05:32:37Z",
        "body": "Seem that the issue was resolved.\r\nI close this now."
      }
    ]
  },
  {
    "number": 1452,
    "title": "bug: pnpm run dev not working with characterfiles",
    "created_at": "2024-12-26T00:10:04Z",
    "closed_at": "2024-12-27T03:46:27Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1452",
    "body": "**Describe the bug**\r\nI would like to use dev mode, and turbo to watch for file changes, for faster development.  I have been trying to get pnpm run dev to run with a character file, to no avail.  It runs fine with default agent (no arguments), but does not appear to accept the command line arguments of --characters.\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n\r\ntrying pnpm run dev --character characters/eliza-code-assistant.character.json yields the following output and error.\r\n\r\n```bash\r\n% pnpm run dev --characters characters/eliza-code-assistant.character.json\r\n...\r\n...\r\n@elizaos/plugin-solana:build: DTS Build start\r\n@elizaos/plugin-solana:build: DTS ⚡️ Build success in 3729ms\r\n@elizaos/plugin-solana:build: DTS dist/index.d.ts 15.88 KB\r\n\r\n Tasks:    45 successful, 45 total\r\nCached:    45 cached, 45 total\r\n  Time:    340ms >>> FULL TURBO\r\n\r\n(node:65388) ExperimentalWarning: CommonJS module /Users/allenharper/.nvm/versions/node/v23.3.0/lib/node_modules/npm/node_modules/debug/src/node.js is loading ES Module /Users/allenharper/.nvm/versions/node/v23.3.0/lib/node_modules/npm/node_modules/supports-color/index.js using require().\r\nSupport for loading ES Module in require() is an experimental feature and might change at any time\r\n(Use `node --trace-warnings ...` to show where the warning was created)\r\n[nodemon] 3.1.7\r\n[nodemon] to restart at any time, enter `rs`\r\n[nodemon] watching path(s): packages/client-direct/dist/**/*\r\n[nodemon] watching extensions: js,mjs,cjs,json\r\n[nodemon] starting `pnpm --filter \"@elizaos/agent\" start --isRoot`\r\n\r\n> @elizaos/core@0.1.7-alpha.1 dev /Users/allenharper/Dropbox/code/eliza/packages/core\r\n> tsup --format esm --dts --watch \"--characters\" \"characters/eliza-code-assistant.character.json\"\r\n\r\n\r\n> @elizaos/client-direct@0.1.7-alpha.1 dev /Users/allenharper/Dropbox/code/eliza/packages/client-direct\r\n> tsup --format esm --dts --watch \"--\" \"--characters\" \"characters/eliza-code-assistant.character.json\"\r\n\r\n\r\n> eliza-client@0.1.7-alpha.1 dev /Users/allenharper/Dropbox/code/eliza/client\r\n> vite \"--\" \"--characters\" \"characters/eliza-code-assistant.character.json\"\r\n\r\n\r\n> @elizaos/plugin-code-assistant@0.1.7-alpha.1 dev /Users/allenharper/Dropbox/code/eliza/packages/plugin-code-assistant\r\n> tsup --format esm --dts --watch \"--\" \"--characters\" \"characters/eliza-code-assistant.character.json\"\r\n\r\nCACError: Unknown option `--characters`\r\n    at Command.checkUnknownOptions (/Users/allenharper/Dropbox/code/eliza/node_modules/cac/dist/index.js:404:17)\r\n    at CAC.runMatchedCommand (/Users/allenharper/Dropbox/code/eliza/node_modules/cac/dist/index.js:602:13)\r\n    at main (/Users/allenharper/Dropbox/code/eliza/node_modules/tsup/dist/chunk-SNM7IVOJ.js:148:13)\r\n    at Object.<anonymous> (/Users/allenharper/Dropbox/code/eliza/node_modules/tsup/dist/cli-default.js:12:23)\r\n    at Module._compile (node:internal/modules/cjs/loader:1546:14)\r\n    at Object..js (node:internal/modules/cjs/loader:1698:10)\r\n    at Module.load (node:internal/modules/cjs/loader:1303:32)\r\n    at Function._load (node:internal/modules/cjs/loader:1117:12)\r\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\r\n    at wrapModuleLoad (node:internal/modules/cjs/loader:218:24)\r\n ELIFECYCLE  Command failed with exit code 1.\r\n\r\n> @elizaos/agent@0.1.7-alpha.1 start /Users/allenharper/Dropbox/code/eliza/agent\r\n> node --loader ts-node/esm src/index.ts \"--isRoot\"\r\n\r\nCLI Building entry: src/index.ts\r\nCLI Using tsconfig: tsconfig.json\r\nCLI tsup v8.3.5\r\n...\r\n```\r\n\r\nthen, it proceeds to load defaultAgent...\r\n\r\n<!-- Steps to reproduce the behavior. -->\r\n\r\n**Expected behavior**\r\nI expect it to pick up the character file, launch agent, and enter turbo watch of those files... it runs correctly, if I use pnpm start --characters ...\r\n\r\nInstead, it won't launch with character file and defaults back to defaultAgent...when in dev mode.\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Screenshots**\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1452/comments",
    "author": "harperaa",
    "comments": [
      {
        "user": "tcm390",
        "created_at": "2024-12-26T23:16:39Z",
        "body": "@harperaa hello I just tested with the latest `develop` branch it works, could you kindly confirm?"
      },
      {
        "user": "harperaa",
        "created_at": "2024-12-27T03:46:27Z",
        "body": "I think it is working, will reopen if I see it again, thanks"
      },
      {
        "user": "jaakjuu1",
        "created_at": "2025-01-06T18:33:23Z",
        "body": "it works fine at first. But after adding a custom plugin the dev mode starts with the default Character. "
      }
    ]
  },
  {
    "number": 1444,
    "title": "feat: suppress initial message from action",
    "created_at": "2024-12-25T04:23:41Z",
    "closed_at": "2024-12-26T00:31:51Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1444",
    "body": "# Relates to:\r\nfeature: Suppressing initial response messages for specific actions in direct client\r\n\r\nI would like to also extend the twitter client to include this kind of functionality. Right now there is a lot of assumptions about agent behavior such as sending an initial message before an action is processed. Ideally during the upgrade to v2 some of these hard coded behaviors can be addressed. The design should be more conducive to plugin-defined emergent behavior. Maybe there's a discussion to be had at how we can go about this at a lower level rather than going client-by-client to implement this behavior. I'm still relatively new to Eliza community if anyone has groups or public discussions on this.\r\n\r\n# Risks\r\nLow - Changes only affect the direct client's message handling logic.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\nAdds support for suppressing initial response messages in the direct client when actions have `suppressInitialMessage` flag set to true. Some actions might not want to send a message until after the action is completed. Now the action will have to manually send a follow up message with the callback.\r\n\r\n## What kind of change is this?\r\nImprovements (changes to existing message handling features)\r\n\r\n# Documentation changes needed?\r\nNew property in the `Action` documentation.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n`packages/client-direct/src/index.ts` - Check the modified message handling logic. I've changed `imageGeneration` action to include `suppressInitialMessage` to true for testing.\r\n\r\n## Detailed testing steps\r\n1. Create an action with `suppressInitialMessage: true`\r\n2. Send a message to the direct client that triggers this action\r\n3. Verify only the callback message is sent, not the initial response\r\n\r\nKey test cases:\r\n- Action with `suppressInitialMessage: true` should only send callback message\r\n- Action with `suppressInitialMessage: false` or undefined should send both initial and callback messages\r\n- Action callback functionality should work the same regardless of suppression setting\r\n\r\nCode changes:\r\n```typescript\r\n                // Check if we should suppress the initial message\r\n                const action = runtime.actions.find(\r\n                    (a) => a.name === response.action\r\n                );\r\n                const shouldSuppressInitialMessage =\r\n                    action?.suppressInitialMessage;\r\n\r\n                const _result = await runtime.processActions(\r\n                    memory,\r\n                    [responseMessage],\r\n                    state,\r\n                    async (newMessages) => {\r\n                        message = newMessages;\r\n                        return [memory];\r\n                    }\r\n                );\r\n\r\n                if (!shouldSuppressInitialMessage) {\r\n                    if (message) {\r\n                        res.json([response, message]);\r\n                    } else {\r\n                        res.json([response]);\r\n                    }\r\n                } else {\r\n                    if (message) {\r\n                        res.json([message]);\r\n                    } else {\r\n                        res.json([]);\r\n                    }\r\n                }\r\n```\r\n\r\nThe changes ensure that when an action has `suppressInitialMessage` set to true:\r\n1. The initial response message is not sent in the API response\r\n2. The action's callback message is still sent if present\r\n3. The response array only includes the callback message",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1444/comments",
    "author": "0xPBIT",
    "comments": [
      {
        "user": "ruwaifatahir",
        "created_at": "2025-01-27T15:00:43Z",
        "body": "@0xPBIT When can we expect the same for the Twitter client?"
      }
    ]
  },
  {
    "number": 1434,
    "title": "Add Liquid Staking Action to the Solana Plugin",
    "created_at": "2024-12-24T14:58:25Z",
    "closed_at": "2025-01-31T18:31:54Z",
    "labels": [
      "enhancement",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1434",
    "body": "\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently, there are various liquid staking protocols on Solana, but users or developers often need to build dedicated front-end solutions or switch between multiple platforms to compare APYs and select the appropriate protocol before staking. This process is tedious and increases front-end development complexity, making it cumbersome for users.\r\n\r\n**Describe the solution you'd like**\r\n\r\n- Add the ability for liquid staking to the existing ElizaOS Solana plugin, simplifying the process of building staking requests for users without requiring specialized front-end logic.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n- Continue relying on each protocol’s custom front-end or having developers integrate multiple protocols manually. This leads to high complexity and development cost.  \r\n- Have users manually compare different platforms’ APYs, which can be error-prone and inconvenient.\r\n\r\n**Additional context**\r\n\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1434/comments",
    "author": "FWangZil",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-23T18:32:27Z",
        "body": "This issue has been automatically marked as stale due to 30 days of inactivity.\nIf no further activity occurs within 7 days, it will be closed automatically. Please take action if this issue is still relevant."
      }
    ]
  },
  {
    "number": 1396,
    "title": "Fix: Duplicate tweet scheduling loops in start method",
    "created_at": "2024-12-23T08:42:03Z",
    "closed_at": "2024-12-23T12:37:29Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1396",
    "body": "- Resolved an issue where `generateNewTweetLoop` was called twice in the `start` method of /packages/client-twitter/src/post.ts.\r\n- The method was invoked at line 174 and line 190 without any conditional checks, leading to two independent tweet scheduling loops being created.\r\n- Removed one of the redundant `generateNewTweetLoop` calls to ensure only a single scheduling loop is initialized.\r\n\r\nFixes #1395\r\n\r\n# Relates to:\r\n\r\nIssue #1395\r\n\r\n# Risks\r\n\r\nLow: Removing the redundant call ensures only one scheduling loop, minimal impact on other functionalities.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR fixes an issue where `generateNewTweetLoop` was called twice, leading multiple tweets to be posted. It ensures only a single scheduling loop is initialized by removing the redundant call.\r\n\r\n## What kind of change is this?\r\n\r\nBug fixes (non-breaking change which fixes an issue)\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes do not require a change to the project documentation.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nStart by reviewing the `start` method in /packages/client-twitter/src/post.ts, focusing on the removal of the redundant `generateNewTweetLoop` call.\r\n\r\n## Detailed testing steps\r\n\r\n1. Configure the Twitter client and set `POST_IMMEDIATELY=true` to enable immediate tweet posting.\r\n2. Start the service and observe if two tweets are sent, and check if the log contains multiple `Next tweet scheduled in xxx minutes` messages.\r\n3. Verify that after starting the service, only one tweet is sent and the `Next tweet scheduled in xxx minutes` message is logged only once.\r\n4. Confirm that tweets are still being scheduled correctly without any issues.\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1396/comments",
    "author": "jasonqindev",
    "comments": [
      {
        "user": "samarth30",
        "created_at": "2024-12-23T09:02:44Z",
        "body": "I think generateNewTweetLoop(); this second loop is applied in case processActionsLoop in being executed.\r\n\r\n```\r\nif (enableActionProcessing) {\r\n            processActionsLoop().catch((error) => {\r\n                elizaLogger.error(\r\n                    \"Fatal error in process actions loop:\",\r\n                    error\r\n                );\r\n            });\r\n            generateNewTweetLoop();\r\n        } else {\r\n            elizaLogger.log(\"Action processing loop disabled by configuration\");\r\n        }\r\n```\r\n        \r\n  If you can keep generateNewTweetLoop() function in the if condition then it will be good to merge"
      },
      {
        "user": "jasonqindev",
        "created_at": "2024-12-23T09:17:01Z",
        "body": "> I think generateNewTweetLoop(); this second loop is applied in case processActionsLoop in being executed.\r\n> \r\n> ```\r\n> if (enableActionProcessing) {\r\n>             processActionsLoop().catch((error) => {\r\n>                 elizaLogger.error(\r\n>                     \"Fatal error in process actions loop:\",\r\n>                     error\r\n>                 );\r\n>             });\r\n>             generateNewTweetLoop();\r\n>         } else {\r\n>             elizaLogger.log(\"Action processing loop disabled by configuration\");\r\n>         }\r\n> ```\r\n> \r\n> If you can keep generateNewTweetLoop() function in the if condition then it will be good to merge\r\n\r\nI've updated the code to move `generateNewTweetLoop()` inside the `if (enableActionProcessing)` block as suggested."
      },
      {
        "user": "samarth30",
        "created_at": "2024-12-23T11:07:51Z",
        "body": "LGTM"
      },
      {
        "user": "jasonqindev",
        "created_at": "2024-12-23T12:48:06Z",
        "body": "\r\nIt seems that this should be merged into the develop branch, but I merged it into main instead. I will close this PR and create a new one."
      }
    ]
  },
  {
    "number": 1393,
    "title": "feat: add cosmos plugin",
    "created_at": "2024-12-23T07:17:20Z",
    "closed_at": "2025-01-07T16:51:54Z",
    "labels": [
      "Plugin_new",
      "needs_documentation"
    ],
    "url": "https://github.com/elizaOS/eliza/pull/1393",
    "body": "<!-- Use this template by filling in information and copy and pasting relevant items out of the html comments. -->\r\n\r\n# Relates to:\r\n<!-- LINK TO ISSUE OR TICKET -->\r\nNA\r\n\r\n<!-- This risks section is to be filled out before final review and merge. -->\r\n\r\n# Risks\r\n<!--\r\nLow, medium, large. List what kind of risks, and what could be effected.\r\n-->\r\nNA\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\nThis PR adds a **Cosmos plugin** for Eliza, enabling agents to interact with any Cosmos SDK-based chains (e.g., Osmosis, Cosmos Hub, Akash).\r\n\r\n## What kind of change is this?\r\n<!--\r\nBug fixes (non-breaking change which fixes an issue)\r\nImprovements (misc. changes to existing features)\r\nFeatures (non-breaking change which adds functionality)\r\nUpdates (new versions of included code)\r\n-->\r\n**Features** (non-breaking change which adds functionality)\r\n\r\n<!-- This \"Why\" section is most relevant if there is no linked issue explaining why. \r\nIf there is a related issue it might make sense to skip this why section. -->\r\n<!--\r\n## Why are we doing this? Any context or related work?\r\n-->\r\n\r\n# Documentation changes needed?\r\n<!--\r\nMy changes do not require a change to the project documentation.\r\nMy changes require a change to the project documentation.\r\nIf a docs change is needed: I have updated the documentation accordingly.\r\n-->\r\nMy changes do not require a change to the project documentation.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n- Look over the `plugin-cosmos` folder structure, especially `providers/wallet.ts`, `actions/transfer.ts`, and any environment or index files.\r\n- Check the integration tests in `tests/wallet.test.ts`.\r\n\r\n## Detailed testing steps\r\n1. **Install dependencies** for the plugin-cosmos package:\r\n   ```bash\r\n   pnpm install\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1393/comments",
    "author": "anilcse",
    "comments": [
      {
        "user": "proteanx",
        "created_at": "2024-12-23T07:35:19Z",
        "body": "This looks good from what I can tell so far. Might be good to go ahead and list ```COSMOS_RPC_URL``` in the .env.example so users know they can set their rpc if they choose.\r\n\r\nI haven't tested this yet, but can soon."
      },
      {
        "user": "anilcse",
        "created_at": "2024-12-23T07:42:33Z",
        "body": "> This looks good from what I can tell so far. Might be good to go ahead and list `COSMOS_RPC_URL` in the .env.example so users know they can set their rpc if they choose.\r\n\r\nSure, I will add it. This would definitely avoid extra calls to chain-registry if the user can simply provide all these config details, optionally\r\n\r\n"
      },
      {
        "user": "anilcse",
        "created_at": "2025-01-02T11:48:20Z",
        "body": "@odilitime ping for review "
      },
      {
        "user": "odilitime",
        "created_at": "2025-01-07T03:42:50Z",
        "body": "@anilcse can you fix the conflicts and we'll get this merged in. Doesn't look like we have the ability to do that for you on this one."
      },
      {
        "user": "anilcse",
        "created_at": "2025-01-07T16:51:54Z",
        "body": "Looks like #1826 got merged before this. So closing it @odilitime "
      }
    ]
  },
  {
    "number": 1391,
    "title": "Standardize boolean values and fix pattern for .env file",
    "created_at": "2024-12-23T06:10:15Z",
    "closed_at": "2025-01-06T05:12:08Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1391",
    "body": "Title: Standardize boolean values and fix pattern for .env file\r\n\r\nDescribe the bug\r\nThe `.env` file contains some inconsistencies in how boolean values and specific strings are represented. For instance, the variable `POST_IMMEDIATELY` uses the string \"NO\", while a boolean value like `TWITTER_SEARCH_ENABLE` uses `false`. This inconsistency could lead to parsing issues and is prone to human error. \r\n\r\nTo Reproduce\r\n1. Open the `.env` file. 2. Observe that `POST_IMMEDIATELY=NO` is used instead of the expected `false`. \r\n\r\nExpected behavior\r\n Boolean variables should consistently use `true` or `false`, and all string-based boolean values such as `POST_IMMEDIATELY` should use `true`/`false` instead of `\"YES\"`/`\"NO\"`. \r\n\r\nAdditional context\r\n This change will standardize boolean values, making the `.env` file easier to parse and reducing the risk of errors. The `parseBooleanFromText` function, declared as `const parseBooleanFromText: (text: string) => boolean;`, can be used outside the `.env` context to ensure boolean parsing is consistent across the codebase. \r\n\r\nGuidelines for .env values\r\n\r\n1. **Boolean values**: Always use `true` or `false` (not `\"YES\"` or `\"NO\"`). \r\nExample: ``` TWITTER_SEARCH_ENABLE=true POST_IMMEDIATELY=false ``` \r\n\r\n Adhering to these guidelines will ensure consistency and make it easier for automated scripts to process the `.env` file while reduce  human error.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1391/comments",
    "author": "hcaumo",
    "comments": [
      {
        "user": "samarth30",
        "created_at": "2024-12-23T08:05:16Z",
        "body": "@hcaumo I think the POST_IMMEDIATELY is boolean only rather than YES and No."
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-06T05:12:08Z",
        "body": "@samarth30 did you work on this ? Since is not a bug and and in see true/false in our env i consider this closed already."
      }
    ]
  },
  {
    "number": 1372,
    "title": "Bot Doesn't Respond to Tagged Tweets When Running in Docker",
    "created_at": "2024-12-22T12:24:33Z",
    "closed_at": "2025-01-12T11:00:29Z",
    "labels": [
      "Need Feedback"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1372",
    "body": "When I run the bot using `npm start`, everything works perfectly: it tweets and responds to tagged tweets as expected. However, when I run the bot inside Docker, I encounter the following issues:\r\n\r\nEnvironment Variable: The `OPENAI_API_KEY ` is required when running the bot in Docker (`docker compose up`) , but it's not needed when running it directly (without Docker).\r\n\r\nTweeting: The bot tweets without any issues when running in Docker.\r\n\r\nResponse to Tagged Tweets: The problem arises when the bot is supposed to respond to tweets it's tagged in. While it tweets fine, it doesn't respond to any tagged tweets.\r\n\r\nI’ve checked the logs, and everything seems normal—there are no visible errors.\r\n\r\nCould anyone help identify what might be causing this issue when running the bot inside Docker?",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1372/comments",
    "author": "usama-saeed831",
    "comments": [
      {
        "user": "vanshika-srivastava",
        "created_at": "2024-12-28T09:46:53Z",
        "body": "Can you provide logs from your docker container ?"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-03T05:17:05Z",
        "body": "Hello here \r\nDid you try latest version ? please let us know if you still run in the issue. \r\n\r\nHere some tips \r\n\r\n#### 1. **Comprehensive Summary of the Issue**\r\nThe bot fails to respond to tagged tweets when running in a Docker container, despite functioning correctly when executed directly with `npm start`. The issue is likely due to the `OPENAI_API_KEY` environment variable not being correctly set in the Docker environment, which is necessary for the bot's operation in Docker but not for direct execution.\r\n\r\n#### 2. **Root Cause of the Problem**\r\nThe root cause is the incorrect or missing configuration of the `OPENAI_API_KEY` environment variable in the Docker environment, which prevents the bot from accessing necessary services or APIs to respond to tagged tweets.\r\n\r\n#### 3. **Step-by-Step Solution**\r\n1. **Check Docker Configuration**: Ensure the `OPENAI_API_KEY` is set correctly in the `docker-compose.yaml` file.\r\n   ```yaml\r\n   environment:\r\n     - OPENAI_API_KEY=your_api_key_here\r\n   ```\r\n2. **Review Client Logic**: Inspect the `client/src/Agent.tsx` file for methods handling incoming tweets.\r\n3. **Enhance Logging**: Add logging statements to capture incoming tweets and responses.\r\n   ```typescript\r\n   console.log('Incoming tweet:', tweet);\r\n   console.log('Bot response:', response);\r\n   ```\r\n4. **Test Locally**: Run the bot locally with `npm start` to confirm expected behavior.\r\n   ```bash\r\n   npm start\r\n   ```\r\n5. **Consult Documentation**: Review Docker setup documentation for environment variables and dependencies."
      },
      {
        "user": "usama-saeed831",
        "created_at": "2025-01-03T16:11:45Z",
        "body": "@vanshika-srivastava  logs were normal as nothing happened,\r\n@AIFlowML yes I add \"OPENAI_API_KEY\". also I was using \"v0.1.7-alpha.1\" it might be resolved in \"v0.1.7-alpha.2\"\r\n\r\nI will test and get back to you guys ASAP"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-06T06:54:28Z",
        "body": "@usama-saeed831 yes please try our latest version and report me back. "
      }
    ]
  },
  {
    "number": 1368,
    "title": "Google unsupported?",
    "created_at": "2024-12-22T09:44:39Z",
    "closed_at": "2025-01-06T05:07:44Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1368",
    "body": "**Describe the bug**\r\n\r\n [\"⛔ Error: Failed to get token - unsupported model provider: google\"] \r\n\r\n**To Reproduce**\r\n.env\r\nGOOGLE_API_KEY=XXXXXXXXXXX\r\n\r\ntrump.character.json\r\n    \"name\": \"trump\",\r\n    \"clients\": [\"direct\"],\r\n    \"modelProvider\": \"google\",\r\n    \"settings\": {\r\n        \"secrets\": {},\r\n        \"voice\": {\r\n            \"model\": \"gemini-1.5-flash\"\r\n\r\n**Expected behavior**\r\n\r\n\"⛔ Error: Failed to get token - unsupported model provider: google\"] \r\n\r\n**Additional context**\r\n\r\nIs Google supported??? Do I need to change anything else to make Google work?\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1368/comments",
    "author": "Sam43215",
    "comments": [
      {
        "user": "oxSaturn",
        "created_at": "2024-12-23T00:09:25Z",
        "body": "1. make sure you're running the latest release\n2. it's GOOGLE_GENERATIVE_AI_API_KEY"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-06T05:07:44Z",
        "body": "Closing the issue that was related to the wrong .env key."
      }
    ]
  },
  {
    "number": 1362,
    "title": "chore: Add UUID tests and fix version 5 bits",
    "created_at": "2024-12-22T07:39:16Z",
    "closed_at": "2025-01-11T21:28:19Z",
    "labels": [
      "Needs Testing"
    ],
    "url": "https://github.com/elizaOS/eliza/pull/1362",
    "body": "### What this PR does\r\n\r\n1. **Adds comprehensive test coverage** for our `stringToUuid` function:\r\n    - Checks UUID format (length, hyphen placement, regex matching).\r\n    - Verifies version and variant bits (RFC 4122 compliance).\r\n    - Tests various inputs (numbers, Unicode, empty strings, edge cases).\r\n    - Ensures consistent, deterministic output.\r\n2. **Fixes the version bits** to properly label the UUID as “version 5”:\r\n    - Previously, we weren’t strictly setting the top nibble in `hashBuffer[6]` to `0x5`.\r\n    - This change enforces RFC 4122 compliance by setting `(hashBuffer[6] & 0x0f) | 0x50`.\r\n\r\n### Why this matters\r\n\r\n- **Correct RFC 4122 compliance**: We now correctly produce v5 UUIDs.\r\n- **Potentially breaking**: The new code produces different UUID strings for the same input (re-keys everything). Any stored references or comparisons to old UUIDs will no longer match.\r\n\r\n### Risks & Impact\r\n\r\n- **Risk**: Existing code/data relying on old UUIDs may break or create duplicates.\r\n- **Mitigation**: We can choose to:\r\n    1. Merge only the **tests** for now, keeping the existing UUID generation.\r\n    2. Merge the bit fix (and re-key), but accept the breaking change or plan a migration.\r\n\r\n### Next Steps\r\n\r\n1. **(Option A)** Merge only the tests and skip the version-bit fix for now (to avoid re-keying).\r\n2. **(Option B)** Merge both tests and fix, but coordinate any needed data migration or accept re-keying.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1362/comments",
    "author": "shlokkhemani",
    "comments": [
      {
        "user": "odilitime",
        "created_at": "2024-12-23T18:09:51Z",
        "body": "Wow, this is going to rekey everything. Can you say more about the bit change, why is this more correct, what problems could we see if we don't fix it?"
      },
      {
        "user": "shlokkhemani",
        "created_at": "2024-12-24T05:54:14Z",
        "body": "I discovered the issue while writing tests for the UUID function. Our generated UUIDs weren't strictly setting the version and variant bits as per RFC 4122, which could cause inconsistencies or invalid v5 UUIDs. This fix ensures proper compliance and interoperability, though it does change UUIDs previously generated for the same input.\r\n\r\nIf we decide we’d rather avoid re-keying right now, I can open a separate PR that includes only the new tests, excluding this bit-fix."
      },
      {
        "user": "odilitime",
        "created_at": "2024-12-25T07:39:28Z",
        "body": "IMO better to do it now than later, I just wanted to make sure we had all the relevant info at hand to justify the decision."
      },
      {
        "user": "shlokkhemani",
        "created_at": "2024-12-25T08:43:54Z",
        "body": "I’ve just updated the PR description to reflect the impact of the version-bit fix. I propose splitting these changes into two PRs:\r\n\r\n1. Test Coverage Only — merges the new test suite without altering how UUIDs are generated.\r\n2. Version-Bit Fix — applies the change that correctly sets the version 5 bits, which would re-key existing data.\r\n\r\nSince the second part can be disruptive, I’d appreciate guidance or help on how best to handle existing data or references. Let me know your thoughts."
      },
      {
        "user": "monilpat",
        "created_at": "2025-01-11T21:27:57Z",
        "body": "Removed the change from this PR feel free to add it in a separate PR "
      }
    ]
  },
  {
    "number": 1357,
    "title": "feat: change @elizaos/eliza to @elizaos/core",
    "created_at": "2024-12-22T05:45:42Z",
    "closed_at": "2024-12-22T06:12:56Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1357",
    "body": "This PR mass-renames the `@elizaos/eliza` package to `@elizaos/core`",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1357/comments",
    "author": "lalalune",
    "comments": [
      {
        "user": "shakkernerd",
        "created_at": "2024-12-22T06:02:33Z",
        "body": "An essential change!"
      }
    ]
  },
  {
    "number": 1319,
    "title": "docs: add TEE verifiable logs to Eliza in TEE section",
    "created_at": "2024-12-21T07:04:54Z",
    "closed_at": "2025-01-27T05:43:06Z",
    "labels": [
      "documentation",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1319",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nTEE Plugin will have verifiable logs soon. #1259 This will need to be documented for devs to understand how to enable it.\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\n**Describe the solution you'd like**\r\nSeparate Eliza in TEE doc into to two Plugin Sections and add verifiable log section with some acknowledgements.\r\n\r\n- TEE Plugin\r\n   - Core Components\r\n- TEE Verifiable Log Plugin\r\n   - Core Components\r\n- Tutorial\r\n   - Enable Verifiable Log\r\n- Conclusion\r\n   - Mention contributors for implementation and who to reach out to learn more about Verifiable Logs in TEE\r\n<!-- A clear and concise description of what you want to happen. -->\r\n\r\n**Describe alternatives you've considered**\r\nThere is no alternative. We must document.\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1319/comments",
    "author": "HashWarlock",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-20T18:31:33Z",
        "body": "This issue has been automatically marked as stale due to 30 days of inactivity.\nIf no further activity occurs within 7 days, it will be closed automatically. Please take action if this issue is still relevant."
      },
      {
        "user": "madjin",
        "created_at": "2025-01-27T05:43:06Z",
        "body": "seems this got added now"
      }
    ]
  },
  {
    "number": 1318,
    "title": "Reduce load on maintainers",
    "created_at": "2024-12-21T06:42:30Z",
    "closed_at": "2024-12-24T06:00:29Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1318",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nMaintaining an open-source project involves managing numerous issues and pull requests. Over time, some of these become inactive or outdated, cluttering the repository and making it challenging to identify current and relevant items. Manually tracking and closing such inactive issues and pull requests is time-consuming and prone to oversight.\r\n\r\n**Describe the solution you'd like**\r\n\r\nImplementing an automated workflow using the `actions/stale` GitHub Action can streamline this process. This action would automatically mark issues and pull requests as stale after a specified period of inactivity and subsequently close them if no further activity occurs. This automation ensures that the repository remains organized, with outdated or inactive items systematically managed.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n- **Manual Management**: Regularly reviewing and closing inactive issues and pull requests by hand. However, this approach is labor-intensive and may lead to inconsistencies or delays in addressing stale items.\r\n\r\n- **Custom Scripts**: Developing bespoke scripts to handle stale issues and pull requests. While feasible, this requires additional maintenance and may not be as robust or feature-rich as existing solutions like `actions/stale`.\r\n\r\n**Additional context**\r\n\r\nThe `actions/stale` GitHub Action is a widely used tool for managing inactive issues and pull requests. It allows for customization of inactivity periods, messages, and labels, providing flexibility to adapt to the project's specific needs. Implementing this action can improve project maintenance efficiency and enhance contributor engagement by clearly indicating which items require attention.\r\n\r\nFor more information and configuration options, refer to the official `actions/stale` documentation:\r\n\r\n ",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1318/comments",
    "author": "monilpat",
    "comments": [
      {
        "user": "shakkernerd",
        "created_at": "2024-12-24T06:00:29Z",
        "body": "Implemented in #1317 "
      }
    ]
  },
  {
    "number": 1311,
    "title": "chore: bump agent-twitter-client version to v0.0.17",
    "created_at": "2024-12-21T05:46:25Z",
    "closed_at": "2024-12-21T05:56:56Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1311",
    "body": null,
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1311/comments",
    "author": "shakkernerd",
    "comments": [
      {
        "user": "monilpat",
        "created_at": "2024-12-21T05:51:02Z",
        "body": "lockfile isn't happy since you updated the dependencies you will probably need to pnpm i --no-frozen-lockfile to pass the test "
      },
      {
        "user": "shakkernerd",
        "created_at": "2024-12-21T05:51:49Z",
        "body": "> lockfile isn't happy since you updated the dependencies you will probably need to pnpm i --no-frozen-lockfile to pass the test\r\n\r\nYes, I am regenerating another one."
      }
    ]
  },
  {
    "number": 1309,
    "title": "Incorporating Trading View Charts into Autonomous Trading Tweets via things like goat plugin ",
    "created_at": "2024-12-21T05:37:59Z",
    "closed_at": "2025-01-27T18:32:32Z",
    "labels": [
      "enhancement",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1309",
    "body": "Is your feature request related to a problem? Please describe.\r\nThere is currently no seamless integration between TradingView charts and automated tweeting using the GOAT plugin. This makes it cumbersome to share real-time insights, chart setups, or trade ideas directly from TradingView to Twitter with minimal effort. The process involves manual screenshotting and posting, which is time-consuming and disrupts workflow efficiency.\r\n\r\nDescribe the solution you'd like\r\nI would like to see TradingView API integrated with the GOAT plugin to enable automatic or one-click sharing of annotated charts to Twitter. The solution should:\r\n\r\nFetch chart data, annotations, and other custom elements from TradingView via API.\r\nFormat the content appropriately for Twitter, including text captions for context and hashtags.\r\nProvide options to schedule or instantly post tweets from TradingView without switching between platforms.\r\nInclude settings for customization, such as default hashtags, watermarking charts, or adding predefined text templates.\r\nDescribe alternatives you've considered\r\n\r\nManual Process: Manually screenshotting charts and uploading them to Twitter, but this is inefficient and lacks automation.\r\nThird-party Tools: Using standalone apps like TweetDeck or social media managers, but these don't integrate with TradingView's annotations directly.\r\nCustom Scripts: Writing scripts to automate the TradingView-to-Twitter flow, but this requires significant development time and is not as user-friendly as a plugin-based solution.\r\nAdditional context\r\n\r\nTradingView provides an API that can retrieve chart data and render annotations, which can streamline integration.\r\nThe GOAT plugin already has a Twitter API integration, so extending its capabilities to include TradingView should be feasible.\r\nThis feature could significantly enhance the usability of both tools for traders and content creators.\r\nScreenshot or visual example of an ideal tweet with TradingView integration for reference:\r\n(Include a hypothetical example showing how a TradingView chart and description would appear in a tweet.)\r\n\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1309/comments",
    "author": "monilpat",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-20T18:31:34Z",
        "body": "This issue has been automatically marked as stale due to 30 days of inactivity.\nIf no further activity occurs within 7 days, it will be closed automatically. Please take action if this issue is still relevant."
      }
    ]
  },
  {
    "number": 1304,
    "title": "Allow to use local embedding instead of OpenAI when using OpenAI models",
    "created_at": "2024-12-21T04:40:31Z",
    "closed_at": "2025-01-27T18:32:33Z",
    "labels": [
      "enhancement",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1304",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nWhen using OpenAI models, I still want to use local embedding instead of OpenAI's one.\r\nSince models for OpenAI's embedding are different from those in text generation, there is no reason to force the use of its when using OpenAI models.\r\n\r\n**Describe the solution you'd like**\r\n\r\nChange `getEmbeddingType` function to only select OpenAI if explicitly set `USE_OPENAI_EMBEDDING` env.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n**Additional context**\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1304/comments",
    "author": "peara",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-20T18:31:36Z",
        "body": "This issue has been automatically marked as stale due to 30 days of inactivity.\nIf no further activity occurs within 7 days, it will be closed automatically. Please take action if this issue is still relevant."
      }
    ]
  },
  {
    "number": 1302,
    "title": "Running install script, failed in 13.3s (skipped as optional)",
    "created_at": "2024-12-21T04:04:33Z",
    "closed_at": "2025-01-06T05:05:24Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1302",
    "body": "Running on WSL2\r\n```\r\ncxp@R9000P:~/solana_learn/AI/eliza$ PUPPETEER_SKIP_DOWNLOAD=true pnpm install\r\nScope: all 46 workspace projects\r\nLockfile is up to date, resolution step is skipped\r\nPackages: +4687\r\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\r\nProgress: resolved 0, reused 3936, downloaded 0, added 4687, done\r\nnode_modules/onnxruntime-node: Running postinstall script...\r\nnode_modules/canvas: Running install script, failed in 13.3s (skipped as optional)\r\n```",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1302/comments",
    "author": "cxp-13",
    "comments": [
      {
        "user": "samarth30",
        "created_at": "2024-12-23T11:15:47Z",
        "body": "Seems like you were able to run the Repository understanding from your other issue [ #1332  ]\r\nclosing this issue for now let me know if you are still facing any errors.\r\n"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-06T05:05:24Z",
        "body": "Closing the issue. "
      }
    ]
  },
  {
    "number": 1266,
    "title": "Can't decide which actions to use from a plugin",
    "created_at": "2024-12-20T13:04:20Z",
    "closed_at": "2025-01-26T18:30:52Z",
    "labels": [
      "enhancement",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1266",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nRight now i have to filter to select which actions i want to perform kinda like hardcoded, im doing something like this\r\n`import { solanaPlugin } from \"@ai16z/plugin-solana\";\r\n\r\n// Remove specific actions\r\nconst filteredPlugin = {\r\n    ...solanaPlugin,\r\n    actions: solanaPlugin.actions.filter(action => \r\n        // Exclude specific actions by name\r\n        action.name !== \"pumpfun\" && action.name !== \"fomo\"\r\n    )\r\n};`\r\n\r\nAnd I believe it should be easier to manage which actions from a given plugin to use.\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\nI have to go and search deep to see what the plugin was doing to see if i decided to use it or not and i realized by default it had actions i didnt want to use and there was no way of no using them besides from what im doing right now. Making the learning curve bigger for new ones.\r\n**Describe the solution you'd like**\r\nI would like to implement in the docs more info about it and in the code add a way of decing which actions should it perform by adding them. At least in Solana where it's money involved and i believe should be something more custom.\r\n<!-- A clear and concise description of what you want to happen. -->\r\nAdd docs explaining the different actions, etc. And add in the code a way to make them optional.\r\n**Describe alternatives you've considered**\r\nRight now as i said im just hardcoding this \r\n`const filteredPlugin = {\r\n    ...solanaPlugin,\r\n    actions: solanaPlugin.actions.filter(action => \r\n        // Exclude specific actions by name\r\n        action.name !== \"pumpfun\" && action.name !== \"fomo\"\r\n    )\r\n};``\r\n\r\nTo decide which ones i want out.\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\nSame\r\n**Additional context**\r\n\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1266/comments",
    "author": "lausuarez02",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-19T18:30:33Z",
        "body": "This issue has been automatically marked as stale due to 30 days of inactivity.\nIf no further activity occurs within 7 days, it will be closed automatically. Please take action if this issue is still relevant."
      }
    ]
  },
  {
    "number": 1253,
    "title": "doc: Add Twitter automation label requirement to quickstart guide",
    "created_at": "2024-12-19T22:59:50Z",
    "closed_at": "2024-12-20T01:04:19Z",
    "labels": [
      "documentation",
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1253",
    "body": "## Issue\r\nMultiple users have reported their Eliza agents being flagged or shadowbanned on Twitter when their accounts weren't properly labeled as automated.\r\n\r\n## Current Situation\r\nThe quickstart guide explains how to set up Twitter integration but doesn't mention the requirement to enable the \"Automated\" label in the Twitter Developer Portal.\r\n\r\n## Proposed Solution\r\nAdd a brief but important notice in the Twitter Integration section of the quickstart guide about enabling the \"Automated\" label to prevent accounts from being flagged.\r\n\r\n## References\r\n- Discord discussions about accounts being flagged",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1253/comments",
    "author": "julienbrs",
    "comments": [
      {
        "user": "madjin",
        "created_at": "2024-12-20T01:04:19Z",
        "body": "i see it got merged, ty"
      }
    ]
  },
  {
    "number": 1237,
    "title": "Update trump.character.json - Enhance terminology in the project for clarity and inclusivity",
    "created_at": "2024-12-19T12:19:10Z",
    "closed_at": "2024-12-19T21:56:53Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1237",
    "body": "While reviewing the documentation, I noticed the term “China virus.” To maintain professionalism and align with WHO naming standards, I suggest replacing it with terms like “COVID-19” or “SARS-CoV-2.” This adjustment not only ensures accuracy but also promotes inclusivity and avoids potential misunderstandings.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1237/comments",
    "author": "yjshi2015",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-12-19T22:25:38Z",
        "body": "> While reviewing the documentation, I noticed the term “China virus.” To maintain professionalism and align with WHO naming standards, I suggest replacing it with terms like “COVID-19” or “SARS-CoV-2.” This adjustment not only ensures accuracy but also promotes inclusivity and avoids potential misunderstandings.\r\n\r\nThe point of characters is to capture the person accurately, not the facts. Trump says silly offensive stuff, and we wanted to capture that. He would not say SARS-COVID-19. I disagree with about 99% of the stuff he says, and 99% of the stuff his character file says. That being said, I care about art, and not letting art be compromised by politics.\r\n\r\nWe love people all over the world, and personally I will be visiting China in a couple days to meet everyone. I don't believe that we should be against any group for their nationality. But we shouldn't kill the comedy and make our characters worse-- that's why OpenAI's models suck now. It's a slippery slope that will reduce bravery, integrity and quality."
      },
      {
        "user": "yjshi2015",
        "created_at": "2024-12-20T02:12:27Z",
        "body": "Thank you so much for addressing this issue and implementing the adjustment. I completely agree with your emphasis on creating realistic and accurate characters. At the same time, I believe AI is not merely a mimic—it has the potential to go beyond, especially in handling sensitive matters that might lead to misunderstanding or conflict.\r\n\r\nAs an old Chinese saying goes, “To err is human.” However, I hope eliza can transcend this limitation and aspire to embody the ideal of a “sage.” I firmly believe it can achieve this someday."
      }
    ]
  },
  {
    "number": 1232,
    "title": "Create a nightly build as next version",
    "created_at": "2024-12-19T08:06:40Z",
    "closed_at": "2025-01-25T18:30:38Z",
    "labels": [
      "enhancement",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1232",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nI'd like to use `eliza-starter` with the latest providers and features, but that means I have to wait until new version is released (weekly?). It would be great to setup a `nightly` builds from `develop` and push them to npmjs.org as `next` version, so that people can easily experiment with latest features and get ready for new releases\r\n\r\n**Describe the solution you'd like**\r\n\r\nSetup an automation to release nightly to from `develop` to `next`\r\n\r\n**Describe alternatives you've considered**\r\n\r\n:shrug: \r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1232/comments",
    "author": "vpavlin",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-18T18:30:36Z",
        "body": "This issue has been automatically marked as stale due to 30 days of inactivity.\nIf no further activity occurs within 7 days, it will be closed automatically. Please take action if this issue is still relevant."
      }
    ]
  },
  {
    "number": 1218,
    "title": "chore: clean up scripts",
    "created_at": "2024-12-18T23:15:48Z",
    "closed_at": "2024-12-19T06:56:57Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1218",
    "body": "I'm very new to this project so bear with me - I stumbled across these three files:\r\n\r\n* scripts/gettweets-copy.mjs\r\n* scripts/gettweets.mjs\r\n* scripts/tweetextractor.mjs\r\n\r\nAll appear to do the same thing. The first one uses environmental variables, the second two actually have hardcoded credentials for a real Twitter account.\r\n\r\nShould we simply delete the latter two and scrub the credentials from the git history? Or is there some reason that things are like this?\r\n\r\nThanks for your patience, just getting the hang of things.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1218/comments",
    "author": "danbednarski",
    "comments": [
      {
        "user": "odilitime",
        "created_at": "2024-12-19T00:15:26Z",
        "body": "I notified the author of original PR, so he's aware of what happened"
      }
    ]
  },
  {
    "number": 1205,
    "title": "fix: write summary file before trying to cache it",
    "created_at": "2024-12-18T12:28:33Z",
    "closed_at": "2024-12-20T23:28:16Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1205",
    "body": " - Also give a .md file extension for prettier rendering in Discord\r\n\r\n# Relates to:\r\nWhen I used my agent to CHAT_WITH_ATTACHMENTS it always failed to stat the summary file because it had not been created.\r\n\r\n# Risks\r\nLow. Writes summaries to disk, could become a lot of data if agent writes a lot of summaries.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\nWrite summary file before trying to cache it\r\n\r\n## What kind of change is this?\r\nBug fix (non-breaking change which fixes an issue)\r\n\r\n## Why are we doing this? Any context or related work?\r\nYeah, I'm building a technical support that needs to receive and analyze config files.\r\n\r\n## Discord username\r\ntobben_dev\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1205/comments",
    "author": "tobbelobb",
    "comments": [
      {
        "user": "odilitime",
        "created_at": "2024-12-18T17:17:34Z",
        "body": "code looks good will test later"
      }
    ]
  },
  {
    "number": 1187,
    "title": "feat: REST POST /agents/:agentId/memory/add",
    "created_at": "2024-12-17T19:21:40Z",
    "closed_at": "2025-02-06T23:45:30Z",
    "labels": [
      "Needs Testing",
      "needs_documentation"
    ],
    "url": "https://github.com/elizaOS/eliza/pull/1187",
    "body": "# Risks\r\n\r\nLow\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\n- Adds a new route to add new memories to a running agent\r\n- improved speed of loading knowledge from a character file (though now risks using too much resources, batching version to come later)\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\nopens integration possibilities, path for command line utility to dump files into memory\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1187/comments",
    "author": "odilitime",
    "comments": [
      {
        "user": "wtfsayo",
        "created_at": "2025-01-15T10:14:57Z",
        "body": "@odilitime still gonna work on this?"
      }
    ]
  },
  {
    "number": 1186,
    "title": "request: databaseAdapter.getMemoryByIds",
    "created_at": "2024-12-17T19:13:16Z",
    "closed_at": "2025-01-24T18:32:26Z",
    "labels": [
      "enhancement",
      "good first issue",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1186",
    "body": "Need databaseAdapter.getMemoryByIds for all current database adapters",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1186/comments",
    "author": "odilitime",
    "comments": [
      {
        "user": "lausuarez02",
        "created_at": "2024-12-18T05:10:05Z",
        "body": "What do you mean? explain your toughts"
      },
      {
        "user": "danbednarski",
        "created_at": "2024-12-18T06:33:13Z",
        "body": "I'm also curious about this one, since maybe he was referring to either `getMemoryById` or `getMemoriesByRoomIds`. Both methods do seem to exist on all of the current database adapters, but maybe they're incomplete, or maybe he was just referring to something else entirely."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-17T18:31:52Z",
        "body": "This issue has been automatically marked as stale due to 30 days of inactivity.\nIf no further activity occurs within 7 days, it will be closed automatically. Please take action if this issue is still relevant."
      }
    ]
  },
  {
    "number": 1176,
    "title": "fix: Change 'INFORMATIONS' to 'INFORMATION' to use correct English in logger",
    "created_at": "2024-12-17T11:40:20Z",
    "closed_at": "2024-12-17T16:32:43Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1176",
    "body": "# Relates to:\r\nN/A - grammatical fix\r\n\r\n# Risks\r\nLow - Simple text change correcting English grammar in logging output\r\n\r\n# Background\r\n## What does this PR do?\r\nFixes incorrect English usage in logger.ts by changing \"INFORMATIONS\" to \"INFORMATION\", as \"information\" is an uncountable noun in English that doesn't have a plural form.\r\n\r\n## What kind of change is this?\r\nBug fixes (non-breaking change which fixes an issue)\r\n\r\n# Documentation changes needed?\r\nMy changes do not require a change to the project documentation.\r\n\r\n# Testing\r\n## Where should a reviewer start?\r\nCheck packages/core/src/logger.ts - the change is a single word modification.\r\n\r\n## Detailed testing steps\r\nNone, automated tests are fine.\r\n\r\nNote: This PR is based on v0.1.6-alpha.1",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1176/comments",
    "author": "tripluca",
    "comments": [
      {
        "user": "odilitime",
        "created_at": "2024-12-17T16:32:43Z",
        "body": "Informations is a collection of information-tagged items. It is correct in this context"
      },
      {
        "user": "tripluca",
        "created_at": "2024-12-19T13:21:30Z",
        "body": "> Informations is a collection of information-tagged items. It is correct in this context\r\n\r\n\"informations\" does not exist in English, the plural or information is still information (I know, weird).\r\nAnyway I see it was accepted, so thanks"
      }
    ]
  },
  {
    "number": 1175,
    "title": "Allow requiring API key for calling direct client",
    "created_at": "2024-12-17T11:27:50Z",
    "closed_at": "2025-01-23T18:32:32Z",
    "labels": [
      "enhancement",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1175",
    "body": "I would like to be able to require an API key for communicating with my agent via the direct client rest API.\r\nI did not find a built in way to do this.\r\n\r\nI would propose adding an optional `DirectClientOptions` parameter to the `DirectClient` constructor that contains property API-key.\r\nThe direct client would then return 401 to any request that does not have the header `Authorization: Bearer YOUR_API_KEY`\r\n\r\nI will gladly implement this myself if it makes sense as a feature to others",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1175/comments",
    "author": "ilmari-h",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-16T18:32:00Z",
        "body": "This issue has been automatically marked as stale due to 30 days of inactivity.\nIf no further activity occurs within 7 days, it will be closed automatically. Please take action if this issue is still relevant."
      }
    ]
  },
  {
    "number": 1168,
    "title": "Error when trying deploy using dockerfile",
    "created_at": "2024-12-17T09:43:05Z",
    "closed_at": "2024-12-29T09:00:04Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1168",
    "body": "I'm trying deploy using docker file \r\n```\r\n# Use stable Node.js LTS version\r\nFROM node:22-slim\r\n\r\n# Install system dependencies\r\nRUN apt-get update && apt-get install -y \\\r\n    build-essential \\\r\n    python3 \\\r\n    git \\\r\n    ca-certificates \\\r\n    sqlite3 \\\r\n    libsqlite3-dev \\\r\n    && apt-get clean && rm -rf /var/lib/apt/lists/*\r\n\r\n# Install pnpm\r\nRUN npm install -g pnpm@9.4.0\r\n\r\n# Set working directory\r\nWORKDIR /app\r\n\r\n# Copy package files\r\nCOPY package.json pnpm-lock.yaml ./\r\n\r\n# Install dependencies\r\nRUN pnpm install --frozen-lockfile\r\n\r\n# Rebuild native modules\r\nRUN pnpm rebuild better-sqlite3\r\n\r\n# Copy application files\r\nCOPY . .\r\n\r\n# Expose application port\r\nEXPOSE 3000\r\n\r\n# Start the application with debugging\r\nCMD [\"pnpm\" , \"start\"]\r\n\r\n```\r\n\r\nand i get this error \r\n```\r\n⛔ ERRORS\r\n   Unhandled error in startAgents: \r\n   {\"code\":\"ERR_USE_AFTER_CLOSE\"} \r\n```",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1168/comments",
    "author": "Ninoambaraa",
    "comments": [
      {
        "user": "Sruthi2357",
        "created_at": "2024-12-21T08:56:38Z",
        "body": "Shall I work on this issue?"
      },
      {
        "user": "vanshika-srivastava",
        "created_at": "2024-12-28T09:39:41Z",
        "body": "> Shall I work on this issue?\r\n\r\nhey is the issue resolved? are you able to run dockerfile?"
      },
      {
        "user": "Ninoambaraa",
        "created_at": "2024-12-29T09:00:02Z",
        "body": "already solved thx"
      }
    ]
  },
  {
    "number": 1164,
    "title": "Farcaster Account Creation to launch agent",
    "created_at": "2024-12-17T08:52:22Z",
    "closed_at": "2025-01-24T18:32:28Z",
    "labels": [
      "enhancement",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1164",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nThis feature will allow, \r\n\r\n- Launching an agent in farcaster by creating the dedicated farcaster account\r\n\r\nExisting repo, won't support to launch agent in farcaster by creating farcaster account.\r\n\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\n**Describe the solution you'd like**\r\n\r\nWe can achieve creating account in multiple ways,\r\n\r\n- Interactive CLI\r\n- API\r\n\r\nWhen launching each agent, It will create dedicated farcaster account and store those farcaster details into DB and perform activites like\r\n\r\n- Post casts\r\n- ReCasts\r\n- etc\r\n\r\n**Describe alternatives you've considered**\r\n\r\nWe need to run seperate server and create the farcaster account and those details we need to pass for agents to run on warpcast (farcaster).\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1164/comments",
    "author": "BalanaguYashwanth",
    "comments": [
      {
        "user": "BalanaguYashwanth",
        "created_at": "2024-12-17T08:56:03Z",
        "body": "Let me know, Is it good feature to addon eliza ?\r\n\r\nCC: @odilitime @tcm390 "
      },
      {
        "user": "BalanaguYashwanth",
        "created_at": "2024-12-18T01:57:24Z",
        "body": "@shakkernerd Can you check this feature as well, Is it helpful ?"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-17T18:31:55Z",
        "body": "This issue has been automatically marked as stale due to 30 days of inactivity.\nIf no further activity occurs within 7 days, it will be closed automatically. Please take action if this issue is still relevant."
      }
    ]
  },
  {
    "number": 1161,
    "title": "pnpm start --character=\"characters/trump.character.json\"",
    "created_at": "2024-12-17T08:10:26Z",
    "closed_at": "2024-12-17T08:47:56Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1161",
    "body": "**Describe the bug**\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n1. add  \"clients\": [\"twitter\"], to trump.character.json\r\n2. pnpm start --character=\"characters/trump.character.json\"\r\n3. error: `Killed\r\n/workspaces/eliza_1/agent:\r\n ERR_PNPM_RECURSIVE_RUN_FIRST_FAIL  @ai16z/agent@0.1.5-alpha.6 start: `node --loader ts-node/esm src/index.ts \"--isRoot\" \"--character=characters/trump.character.json\"`\r\nExit status 137\r\n ELIFECYCLE  Command failed with exit code 137.`\r\n\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1161/comments",
    "author": "whgreate",
    "comments": [
      {
        "user": "shakkernerd",
        "created_at": "2024-12-17T08:47:55Z",
        "body": "Hi there, you seem to be using an older version (`0.1.5-alpha.6`).\r\nKindly update to latest (`0.1.6-alpha.4`)."
      },
      {
        "user": "whgreate",
        "created_at": "2024-12-17T09:39:54Z",
        "body": "don't understand how to do that, I'm on develop branch."
      },
      {
        "user": "kurbaitaev",
        "created_at": "2024-12-18T11:41:48Z",
        "body": "@whgreate git checkout $(git describe --tags --abbrev=0)"
      }
    ]
  },
  {
    "number": 1148,
    "title": "chore: fix PR #1147",
    "created_at": "2024-12-17T02:10:35Z",
    "closed_at": "2024-12-17T02:26:39Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1148",
    "body": "ShakkerNerd said to directly commit",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1148/comments",
    "author": "odilitime",
    "comments": [
      {
        "user": "monilpat",
        "created_at": "2024-12-17T02:16:42Z",
        "body": "Looks like the smoke test failed "
      }
    ]
  },
  {
    "number": 1145,
    "title": "Discord agents knock each other out of VC",
    "created_at": "2024-12-17T00:58:56Z",
    "closed_at": "2024-12-19T02:30:07Z",
    "labels": [
      "bug",
      "Need Feedback",
      "Fixed"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1145",
    "body": "**Describe the bug**\r\n\r\nWhen running two agents in the same client one will join the discord voice channel and then when 2nd agent joins it kicks the first agent out of discord\r\n\r\n**Additional context**\r\n\r\n- whichever character is listed last is the one that stays in the voice channel\r\n- the same thing happens even if sending the agents to different voice channels. \r\n- only tested from 1 discord server, 2 unique servers may produce a different outcome",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1145/comments",
    "author": "vincentskele",
    "comments": [
      {
        "user": "shakkernerd",
        "created_at": "2024-12-17T07:59:31Z",
        "body": "Hi @vincentskele there is a potential fix in #1156 that is already merged into `develop` branch.\r\nKindly try that and give feedback."
      },
      {
        "user": "vincentskele",
        "created_at": "2024-12-18T00:19:36Z",
        "body": "ran into some other issues with develop but the conflict with discord is resolved! "
      },
      {
        "user": "shakkernerd",
        "created_at": "2024-12-18T00:23:01Z",
        "body": "Thanks for the feedback. \r\nWhat are the other issues?"
      },
      {
        "user": "vincentskele",
        "created_at": "2024-12-19T02:30:02Z",
        "body": "all resolved now with latest pull from develop"
      }
    ]
  },
  {
    "number": 1142,
    "title": "Support for building monorepo with git dependencies using pnpm and nix",
    "created_at": "2024-12-16T23:53:28Z",
    "closed_at": "2025-01-24T18:32:29Z",
    "labels": [
      "enhancement",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1142",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nWhen trying to build a pnpm monorepo using Nix's buildNpmPackage that includes git dependencies (specifically @discordjs/opus), the build fails due to git access restrictions in the Nix build environment. The current workarounds involve either modifying package.json or pre-fetching git dependencies, both of which are not ideal solutions for maintaining the project.\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\nA built-in way to handle git dependencies in buildNpmPackage that:\r\n\r\n 1. Automatically fetches git dependencies using fetchgit during the build process\r\n 2. Maintains compatibility with pnpm workspaces and monorepo structure\r\n 3. Preserves the original package.json without requiring modifications\r\n 4. Works with trusted dependencies in pnpm\r\n\r\n**Describe alternatives you've considered**\r\n\r\n1. Manually pre-fetching git dependencies and placing them in node_modules\r\n2. Modifying package.json to use published versions instead of git dependencies\r\n3. Using mkDerivation instead of buildNpmPackage to handle the build process manually\r\n4. Creating a custom derivation to handle git dependencies before the main build\r\n\r\n**Additional context**\r\n\r\nThis issue particularly affects projects using Discord.js and similar packages that rely on git dependencies for native modules. The current workarounds either break the development workflow or require maintaining separate package configurations for Nix builds.\r\nExample of a failing build: \r\n\r\n`ERR_PNPM_LOCKFILE_CONFIG_MISMATCH Cannot proceed with the frozen installation. The current \"overrides\" configuration doesn't match the value found in the lockfile`\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1142/comments",
    "author": "lessuselesss",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-16T18:32:04Z",
        "body": "This issue has been automatically marked as stale due to 30 days of inactivity.\nIf no further activity occurs within 7 days, it will be closed automatically. Please take action if this issue is still relevant."
      }
    ]
  },
  {
    "number": 1126,
    "title": "feat: Add GitBook Plugin provider",
    "created_at": "2024-12-16T01:09:35Z",
    "closed_at": "2024-12-28T11:13:49Z",
    "labels": [
      "Plugin_new"
    ],
    "url": "https://github.com/elizaOS/eliza/pull/1126",
    "body": "# Relates to:\r\n\r\nN/A\r\n<!-- This risks section is to be filled out before final review and merge. -->\r\n\r\n# Risks\r\n\r\nLow: Adding new features \r\n- Adds GitBook documentation querying capability\r\n- No database changes\r\n- No security implications\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\nAdds a new GitBook documentation plugin that enables:\r\n- Dynamic documentation querying through GitBook API\r\n- Configurable keyword and trigger matching\r\n- Automatic response generation from documentation content\r\n\r\n## What kind of change is this?\r\n\r\nFeatures: \r\n- Adds ability to query GitBook for internal docs\r\n- Adds new client configuration options for GitBook integration\r\n- Implements smart query validation to prevent API spam\r\n\r\n<!--\r\n## Why are we doing this? Any context or related work?\r\n-->\r\n\r\n# Documentation changes needed?\r\n\r\nYes, my changes require updates to the project documentation:\r\n\r\n1. Add new GitBook configuration section to character.json:\r\n\r\n```\r\n{\r\n    \"clientConfig\": {\r\n        \"gitbook\": {\r\n            \"keywords\": {\r\n                \"projectTerms\": [\"term1\", \"term2\"],  // Project-specific terms\r\n                \"generalQueries\": [\"custom1\", \"custom2\"]  // Additional query terms\r\n            },\r\n            \"documentTriggers\": [\"help\", \"docs\", \"guide\"]  // Documentation triggers\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\nReview the plugin implementation in:\r\n\r\nplugin-gitbook/src/providers/gitbook.ts\r\nplugin-gitbook/src/types.ts\r\nplugin-gitbook/src/index.ts\r\n\r\nCheck the character configuration handling\r\n\r\n## Detailed testing steps\r\n\r\n\r\n1. Configure GitBook space ID:\r\n`GITBOOK_SPACE_ID=your_space_id`\r\n\r\n2. Test with different configurations:\r\n\r\n- Without any gitbook config (should use defaults)\r\n- With partial config (should merge with defaults)\r\n- With full config (should use provided settings)\r\n\r\n3. Test query validation:\r\n\r\n- General queries\r\n- Project-specific terms\r\n- Document triggers\r\n- Combinations of above\r\n\r\n\r\n4. Verify response handling:\r\n\r\n- Correct documentation retrieval\r\n- Proper response formatting\r\n- Error handling\r\n\r\n\r\n<!--\r\n## Screenshots\r\n### Before\r\n### After\r\n-->\r\n\r\n<!--\r\n# Deploy Notes\r\n-->\r\n\r\n- Plugin is designed to be configurable but work with sensible defaults\r\n- Implementation focuses on preventing unnecessary API calls while maintaining functionality\r\n- No database changes required\r\n- No special deployment steps needed\r\n\r\n<!--\r\n## Database changes\r\n-->\r\n\r\n<!--\r\n## Deployment instructions\r\n-->\r\n\r\n\r\n<!--\r\n## Discord username\r\n\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1126/comments",
    "author": "azep-ninja",
    "comments": [
      {
        "user": "madjin",
        "created_at": "2024-12-16T21:42:24Z",
        "body": "this sounds useful :+1: "
      },
      {
        "user": "azep-ninja",
        "created_at": "2024-12-25T17:24:33Z",
        "body": "Updated all files to elizaos. Ready to merge @odilitime "
      },
      {
        "user": "samarth30",
        "created_at": "2024-12-26T11:13:11Z",
        "body": "your branch seems out of date. can you pull / rebase your branch @azep-ninja "
      },
      {
        "user": "azep-ninja",
        "created_at": "2024-12-27T02:58:27Z",
        "body": "@samarth30 branch has been updated."
      }
    ]
  },
  {
    "number": 1121,
    "title": "pnpm install updates pnpm lockfile when it should not",
    "created_at": "2024-12-15T17:47:46Z",
    "closed_at": "2024-12-17T00:11:33Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1121",
    "body": "**Describe the bug**\r\n\r\nThe `pnpm install` command is incorrectly updating the lock file during installations, leading to potential inconsistencies in dependency versions across different environments. This behavior can cause unexpected issues when deploying or running the application, as the installed packages may not match the versions specified in the lock file.\r\n\r\n**To Reproduce**\r\n\r\n1. Clone the repository.\r\n2. Run the command `pnpm install` without the `--frozen-lockfile` option.\r\n3. Observe that the `pnpm-lock.yaml` file is updated with new versions of dependencies, even if they are not specified in the `package.json`.\r\n\r\n**Expected behavior**\r\n\r\nThe `pnpm install` command should respect the `--frozen-lockfile` option, preventing any updates to the lock file. This ensures that the installed dependencies match the versions specified in the `pnpm-lock.yaml` file, maintaining consistency across different environments.\r\n\r\n**Screenshots**\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n\r\n**Additional context**\r\n\r\nThis issue was addressed in a recent commit that added the `--frozen-lockfile` option to various installation commands in the project, including in the GitHub workflows, Dockerfile, and scripts. The explicit update script was also introduced to allow updates without the frozen lock file option, ensuring that developers can manage dependencies more effectively without risking unintended changes to the lock file.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1121/comments",
    "author": "monilpat",
    "comments": [
      {
        "user": "shakkernerd",
        "created_at": "2024-12-16T00:00:54Z",
        "body": "@pgoos How does the current smoke tests and integration tests work?\r\nI observed it does not run the tests against the actual changes in a given PR but rather against already merged in code.\r\nI might be wrong on this but can you kindly confirm this?\r\n\r\n@monilpat said to tag you.\r\n\r\nAwaiting your response.\r\nThanks!"
      },
      {
        "user": "monilpat",
        "created_at": "2024-12-17T00:11:34Z",
        "body": "Closed as pnpm issue resolved :) "
      }
    ]
  },
  {
    "number": 1109,
    "title": "Create Example Files Under `packages/_examples/*` with Corresponding Tests Under `/*/_tests` Within Each Type: Adapter, Client, Plugin, etc.",
    "created_at": "2024-12-15T00:48:36Z",
    "closed_at": "2025-01-21T18:32:53Z",
    "labels": [
      "enhancement",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1109",
    "body": "**Is your feature request related to a problem? Please describe.**  \r\nThere is currently no clear organization for example implementations and their corresponding tests for constructs like adapters, clients, and plugins. This can lead to confusion, inconsistent patterns, and inefficiencies for developers trying to reference or contribute.\r\n\r\n---\r\n\r\n**Describe the solution you'd like**  \r\nStructure the examples and tests as follows:  \r\n1. **Example files** go under `packages/_examples/*` within their respective construct folders.  \r\n2. **Corresponding tests** are organized under a `_tests` subfolder inside each type directory.\r\n\r\n**Proposed Structure:**  \r\n```\r\npackages/_examples/\r\n  ├── adapter/\r\n  │   ├── exampleAdapter.js\r\n  │   └── _tests/\r\n  │       └── exampleAdapter.test.js\r\n  ├── client/\r\n  │   ├── exampleClient.js\r\n  │   └── _tests/\r\n  │       └── exampleClient.test.js\r\n  ├── plugin/\r\n  │   ├── examplePlugin.js\r\n  │   └── _tests/\r\n  │       └── examplePlugin.test.js\r\n  └── README.md  // High-level description of examples\r\n```\r\n\r\n---\r\n\r\n**Describe alternatives you've considered**  \r\n1. **Tests alongside examples**: Keeping tests in the same folder creates clutter, especially as examples scale.  \r\n2. **Central `_tests` folder**: While centralized tests are clean, separating them under each type folder improves organization and traceability.\r\n\r\n---\r\n\r\n**Additional context**  \r\n- This structure creates a clear relationship between example files and their tests.  \r\n- Developers can easily locate both the example implementation and corresponding tests for constructs like adapters, clients, and plugins.  \r\n- A high-level `README.md` in `packages/_examples/` can document the folder's purpose and how to use the examples.  \r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1109/comments",
    "author": "monilpat",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-14T18:32:11Z",
        "body": "This issue has been automatically marked as stale due to 30 days of inactivity.\nIf no further activity occurs within 7 days, it will be closed automatically. Please take action if this issue is still relevant."
      }
    ]
  },
  {
    "number": 1108,
    "title": "Refactor: Enable Provider Mapping to Accept an Array of Strings for Flexibility with JSON Input",
    "created_at": "2024-12-15T00:44:36Z",
    "closed_at": "2025-01-25T18:30:41Z",
    "labels": [
      "enhancement",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1108",
    "body": "**Is your feature request related to a problem? Please describe.**  \r\nCurrently, providers need to be passed directly into the system, which limits flexibility. It prevents us from dynamically sourcing providers from external `.json` files or other configurations. This can become cumbersome when managing multiple providers.\r\n\r\n---\r\n\r\n**Describe the solution you'd like**  \r\nRefactor the current implementation to:  \r\n- Create a **provider mapping system**.  \r\n- Allow an **array of strings** to be passed instead of hardcoding providers directly.  \r\n- Dynamically resolve and load providers based on the string array.  \r\n- Enable passing in providers from a `.json` file for improved configurability.\r\n\r\nExample:  \r\n```json\r\n{\r\n  \"providers\": [\"providerA\", \"providerB\", \"providerC\"]\r\n}\r\n```\r\n\r\nThe system should interpret these strings, map them to their corresponding provider logic, and load them seamlessly.\r\n\r\n---\r\n\r\n**Describe alternatives you've considered**  \r\n1. **Hardcoding providers**: This is inflexible and requires manual intervention for every change.  \r\n2. **Manual parsing of JSON**: While possible, this adds unnecessary boilerplate code and duplicates logic that could be centralized.  \r\n\r\n---\r\n\r\n**Additional context**  \r\n- This change improves maintainability and flexibility for managing providers.  \r\n- It is especially useful for projects that rely on external configuration files or need runtime provider adjustments.  ",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1108/comments",
    "author": "monilpat",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-14T18:32:12Z",
        "body": "This issue has been automatically marked as stale due to 30 days of inactivity.\nIf no further activity occurs within 7 days, it will be closed automatically. Please take action if this issue is still relevant."
      }
    ]
  },
  {
    "number": 1104,
    "title": "fix: add missing imports",
    "created_at": "2024-12-14T19:29:32Z",
    "closed_at": "2024-12-14T19:55:33Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1104",
    "body": null,
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1104/comments",
    "author": "shakkernerd",
    "comments": [
      {
        "user": "monilpat",
        "created_at": "2024-12-14T19:55:27Z",
        "body": "Unrelated we are having someone look into why the iintegration test is intermittently failing "
      }
    ]
  },
  {
    "number": 1071,
    "title": "Move actions and evaluators to event driven",
    "created_at": "2024-12-14T07:45:19Z",
    "closed_at": "2025-01-26T18:30:55Z",
    "labels": [
      "V2",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1071",
    "body": "Right now the actions are called inside the message response handlers.\r\n\r\nInstead, we should make the runtime an event emitter and have actions respond to events.\r\n\r\nThis should slightly simplify the code and unify the patterns around an event driven architecture.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1071/comments",
    "author": "lalalune",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-13T18:33:50Z",
        "body": "This issue has been automatically marked as stale due to 30 days of inactivity.\nIf no further activity occurs within 7 days, it will be closed automatically. Please take action if this issue is still relevant."
      }
    ]
  },
  {
    "number": 1066,
    "title": "Scrapper login",
    "created_at": "2024-12-14T07:20:43Z",
    "closed_at": "2024-12-14T07:22:15Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1066",
    "body": "Error: {\"errors\":[{\"code\":399,\"message\":\"Incorrect. Please try again. g;173416064338586466:-1734160643646:ccVhgNQFewzfeK9cjAREzndr:8\"}]}\r\n    at TwitterUserAuth.executeFlowTask (file:///Users/kushagra/go/src/gihub.com/Cartman/Eliza-wraper/node_modules/.pnpm/agent-twitter-client@0.0.13/node_modules/agent-twitter-client/dist/node/esm/index.mjs:552:38)\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\r\n    at async TwitterUserAuth.handleAcid (file:///Users/kushagra/go/src/gihub.com/Cartman/Eliza-wraper/node_modules/.pnpm/agent-twitter-client@0.0.13/node_modules/agent-twitter-client/dist/node/esm/index.mjs:508:12)\r\n    at async TwitterUserAuth.login (file:///Users/kushagra/go/src/gihub.com/Cartman/Eliza-wraper/node_modules/.pnpm/agent-twitter-client@0.0.13/node_modules/agent-twitter-client/dist/node/esm/index.mjs:347:16)\r\n    at async Scraper.login (file:///Users/kushagra/go/src/gihub.com/Cartman/Eliza-wraper/node_modules/.pnpm/agent-twitter-client@0.0.13/node_modules/agent-twitter-client/dist/node/esm/index.mjs:2280:5)\r\n    at async ClientBase.init (file:///Users/kushagra/go/src/gihub.com/Cartman/Eliza-wraper/node_modules/.pnpm/@ai16z+client-twitter@0.1.4-alpha.3@google-cloud+vertexai@1.9.2_@langchain+core@0.3.23_opena_p7je7bhkaswxwoghczkrgshcom/node_modules/@ai16z/client-twitter/dist/index.js:1015:7)\r\n    at async Object.start (file:///Users/kushagra/go/src/gihub.com/Cartman/Eliza-wraper/node_modules/.pnpm/@ai16z+client-twitter@0.1.4-alpha.3_@google-cloud+vertexai@1.9.2_@langchain+core@0.3.23_opena_p7je7bhkaswxwoghczkrgshcom/node_modules/@ai16z/client-twitter/dist/index.js:1377:5)\r\n    at async initializeClients (file:///Users/kushagra/go/src/gihub.com/Cartman/Eliza-wraper/src/index.ts:156:32)\r\n    at async startAgent (file:///Users/kushagra/go/src/gihub.com/Cartman/Eliza-wraper/src/index.ts:212:25)\r\n    at async startAgents (file:///Users/kushagra/go/src/gihub.com/Cartman/Eliza-wraper/src/index.ts:309:13)\r\n ⛔ ERRORS\r\n   Error starting agents:\r\n   {}\r\n   \r\n   whenever I try to do login or re run again through it got me that same error\r\n   \r\n   \r\n   \r\n   ",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1066/comments",
    "author": "SouSingh",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-12-14T07:22:15Z",
        "body": "You might need to remove your db.sqlite (there are better ways to do this but that's probably it)\r\nYou could have your env vars wrong.\r\nI don't think this is a bug, probably bad config or bad cookies in your cache"
      },
      {
        "user": "s29papi",
        "created_at": "2024-12-19T14:40:50Z",
        "body": "@lalalune facing the same issue and i've deleted db.sqlite and also rebuilt. configuration params are also correct and it errors same \"Error: {\"errors\":[{\"code\":399,\"message\":\"Incorrect. Please try again. g;173461914653681618:-1734619146851:NtaLTgbbm1DcTi0FISafmEa3:8\"}]}...\""
      }
    ]
  },
  {
    "number": 1055,
    "title": "fix: Fix pnpm lockfiles",
    "created_at": "2024-12-13T23:13:02Z",
    "closed_at": "2024-12-13T23:24:20Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1055",
    "body": "This is an attempted fix for issues with pnpm lockfiles.\r\n\r\nIt should also fix the root cause of smoke and integration tests.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1055/comments",
    "author": "jzvikart",
    "comments": [
      {
        "user": "monilpat",
        "created_at": "2024-12-13T23:18:19Z",
        "body": "Thanks for doing this - looks like new integration and smoke tests still have issues "
      }
    ]
  },
  {
    "number": 1045,
    "title": "chore: release develop into main",
    "created_at": "2024-12-13T19:04:23Z",
    "closed_at": "2024-12-13T19:07:39Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1045",
    "body": "Bring tested develop into main\r\n\r\nIncludes the following PR merges:\r\n\r\n- #1004\r\n- #1008\r\n- #1032\r\n- #1042\r\n- #1026\r\n- #1035\r\n- #1029\r\n- #1043",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1045/comments",
    "author": "odilitime",
    "comments": [
      {
        "user": "monilpat",
        "created_at": "2024-12-13T19:08:16Z",
        "body": "If you wanted to get the linter happy no worries if not: /home/runner/work/eliza/eliza/packages/client-discord/src/messages.ts\r\nError:    676:15  error    'memberId' is assigned a value but never used. Allowed unused vars must match /^_/u  @typescript-eslint/no-unused-vars\r\nError:   1060:23  error    'authorId' is assigned a value but never used. Allowed unused vars must match /^_/u  @typescript-eslint/no-unused-vars\r\n\r\n/home/runner/work/eliza/eliza/packages/client-discord/src/voice.ts\r\nError:    495:49  error    'id' is defined but never used. Allowed unused args must match /^_/u  @typescript-eslint/no-unused-vars"
      }
    ]
  },
  {
    "number": 1031,
    "title": "chore: Update package.json",
    "created_at": "2024-12-13T04:31:34Z",
    "closed_at": "2024-12-14T10:45:30Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1031",
    "body": "Added Coingecko dependency to the plugin-goat (package.json) file.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1031/comments",
    "author": "Freytes",
    "comments": [
      {
        "user": "monilpat",
        "created_at": "2024-12-13T05:09:58Z",
        "body": "If you can fix the linter that would be clutch (know you didn't introduce the issues) "
      }
    ]
  },
  {
    "number": 1029,
    "title": "feat: client-discord stop implementation / agent improvements",
    "created_at": "2024-12-13T03:06:04Z",
    "closed_at": "2024-12-13T18:16:14Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1029",
    "body": "# Risks\r\n\r\nLow\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nimplements discord websocket disconnect\r\nmake character settings optional\r\nimplement runtime.clients as a dict\r\ndisable client in characters client\r\n\r\n## What kind of change is this?\r\n\r\nImprovements (misc. changes to existing features)\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\nPreparation for hot reloading\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes should not require a change to the project documentation.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1029/comments",
    "author": "odilitime",
    "comments": [
      {
        "user": "monilpat",
        "created_at": "2024-12-13T04:13:34Z",
        "body": "Also addressing linter and then good to go thanks so much!"
      }
    ]
  },
  {
    "number": 1012,
    "title": "Get rid of the postinstall script for node-plugin",
    "created_at": "2024-12-12T14:28:29Z",
    "closed_at": "2025-01-12T10:52:35Z",
    "labels": [
      "bug",
      "Need Feedback"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/1012",
    "body": "**Describe the bug**\r\n\r\nIt causes something like this:\r\n```\r\n.../node_modules/@ai16z/plugin-node postinstall$ npx playwright install-deps && npx playwright install\r\n                                       │ Installing dependencies...\r\n                                                                   │ Switching to root user to install dependencies...\r\n                                                                                                                      │ Reading package lists...\r\n      │ E: Could not get lock /var/lib/apt/lists/lock. It is held by process 27614 (apt-get)\r\n                                                                                            │ E: Unable to lock directory /var/lib/apt/lists/\r\n   │ Failed to install browser dependencies\r\n                                           │ Error: Installation process exited with code: 100\r\n                                                                                              └─ Failed in 1s at /home/zatara7/eliza-starter/node_modules/.pnpm/@ai16z+plugin-node@0.1.4-alpha.3_@google-cloud+vertexai@1.9.2_@langchain+core@0.3.23_onnxrunt_josi75rgzinst3siow2n6dgub4/node_modules/@ai16z/plugin-node\r\n                                     ELIFECYCLE  Command failed with exit code 1.\r\n```\r\n\r\n**To Reproduce**\r\n\r\nInstall on WSL Ubuntu\r\n\r\n**Expected behavior**\r\n\r\nHave the postinstall script not run in this case?\r\nAnd not say that there's a lock problem.. it really threw me off\r\n\r\n**Screenshots**\r\n\r\nabove cli output will suffice\r\n\r\n**Additional context**\r\n\r\nJust get rid of the post install script by going to it in the node_modules and replacing it or getting rid of it completely.\r\n\r\nYou can just install that playwright stuff yourself or in a different way if one of the developers can fix it\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1012/comments",
    "author": "hshar7",
    "comments": [
      {
        "user": "AIFlowML",
        "created_at": "2025-01-03T04:24:55Z",
        "body": "Hello here !!\r\nIs the lock still present in the latest release of ElizaOS? \r\nPlease let us know ! \r\n\r\nhere some tips \r\n\r\n### Comprehensive Solution\r\n\r\n#### 1. **TLDR (Executive Summary)**\r\n- **Issue Essence:** The `postinstall` script in `@ai16z/plugin-node` fails due to a lock error on WSL, halting installation.\r\n- **Root Cause:** The script attempts to install Playwright dependencies while another process holds a lock on `/var/lib/apt/lists/lock`.\r\n- **Solution Approach:** Modify the script to handle lock errors gracefully and update documentation for manual dependency installation.\r\n- **Impact Assessment:** Improves installation experience, especially on WSL, and reduces user frustration.\r\n\r\n#### 2. **Quick Resolution Path**\r\n- **Immediate Steps:**\r\n  1. Modify the `postinstall.js` script to include error handling.\r\n  2. Update installation documentation to include manual dependency installation steps.\r\n- **Exact File Locations and Line Numbers:**\r\n  - File: `postinstall.js`\r\n  - Line: Modify the script to include a try-catch block around the `execSync` command.\r\n- **Required Code Changes:**\r\n  ```javascript\r\n  import os from \"os\";\r\n  const platform = os.platform();\r\n\r\n  if (\r\n      platform === \"linux\" &&\r\n      !(os.release().includes(\"ubuntu\") || os.release().includes(\"debian\"))\r\n  ) {\r\n      console.log(\r\n          \"Skipping playwright installation on unsupported platform:\",\r\n          platform\r\n      );\r\n  } else {\r\n      const { execSync } = await import(\"child_process\");\r\n      try {\r\n          execSync(\"npx playwright install-deps && npx playwright install\", {\r\n              stdio: \"inherit\",\r\n          });\r\n      } catch (error) {\r\n          console.error(\"Error during Playwright installation:\", error.message);\r\n          console.log(\"Please ensure no other package manager is running.\");\r\n          console.log(\"You may need to manually resolve the lock issue.\");\r\n      }\r\n  }\r\n  ```\r\n- **Validation Commands:**\r\n  - Run `npm install` in a WSL environment to ensure the script handles lock errors gracefully.\r\n- **Rollback Procedures:**\r\n  - Revert the `postinstall.js` script to its original state and ensure the previous documentation is restored.\r\n\r\n#### 3. **Comprehensive Solution**\r\n- **Detailed Technical Analysis:**\r\n  - The `postinstall` script fails due to a lock error when attempting to install Playwright dependencies. This is particularly problematic in WSL environments.\r\n- **Step-by-Step Implementation:**\r\n  1. Update the `postinstall.js` script to include error handling.\r\n  2. Update the installation documentation to include steps for manual dependency installation.\r\n  3. Test the updated script in various environments (native Linux, WSL, macOS).\r\n- **Dependencies and Side Effects:**\r\n  - Users may need to manually install Playwright dependencies if the script fails.\r\n- **Configuration Changes:**\r\n  - No additional configuration changes are required.\r\n- **Environment Requirements:**\r\n  - Ensure the script is tested in WSL, native Linux, and macOS environments.\r\n- **Database Changes:**\r\n  - No database changes are required.\r\n- **Service Impacts:**\r\n  - No service impacts are expected."
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-06T06:00:05Z",
        "body": "Did you try the new version ?\r\nFeenback me please about this. \r\nThe install not flow fast and wiht zero errors.\r\nSo if i cannot reproduce this i wil have to close the issue."
      },
      {
        "user": "rferrari",
        "created_at": "2025-01-17T03:09:03Z",
        "body": "workarround that using:\n\n```\npnpm install --no-frozen-lockfile --ignore-scripts\n```"
      }
    ]
  },
  {
    "number": 1010,
    "title": "feat: Add custom fetch logic for agent",
    "created_at": "2024-12-12T10:43:48Z",
    "closed_at": "2024-12-12T22:55:06Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/1010",
    "body": "# Background\r\n\r\nWhen user want to see what happend when generate text or image with llm, They may want to what eliza send to llm model endpoint.\r\n\r\n## What does this PR do?\r\n\r\nMostly llm api has fetch opts which can be passed from agent construtor.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nYou can run pnpm run start --character <your character>\r\n\r\nThen you will see custom fetch output. \r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/1010/comments",
    "author": "v1xingyue",
    "comments": [
      {
        "user": "odilitime",
        "created_at": "2024-12-12T16:51:21Z",
        "body": "I don't love it but I see the utility and I can't offer anything better. Thanks for the PR."
      }
    ]
  },
  {
    "number": 988,
    "title": "How to set the model class for Anthropic?",
    "created_at": "2024-12-11T10:43:31Z",
    "closed_at": "2024-12-12T01:22:36Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/988",
    "body": "character.ts\r\n```\r\n    clients: [Clients.TWITTER],\r\n    modelProvider: ModelProviderName.ANTHROPIC,\r\n    settings: {\r\n        model: ModelClass.MEDIUM,\r\n    },\r\n ```\r\n when the agent start, the logs shows:\r\n```\r\n ℹ INFORMATIONS\r\n   Generating text with options: \r\n   {\"modelProvider\":\"anthropic\",\"model\":\"small\"} \r\n\r\n ℹ INFORMATIONS\r\n   Selected model: \r\n   claude-3-haiku-20240307 \r\n ```\r\n \r\nI don't know why the config is not useful. Anyone can help, Thanks a lot.\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/988/comments",
    "author": "tdergouzi",
    "comments": [
      {
        "user": "salparadi",
        "created_at": "2024-12-11T13:48:51Z",
        "body": "Those sizes are hard coded into the package files. I think they are being decoupled, but for now you'd need to manually update the files (For Twitter: post.ts, interactions.ts)"
      }
    ]
  },
  {
    "number": 962,
    "title": "fix(agent): correct EVM plugin activation condition",
    "created_at": "2024-12-10T09:05:03Z",
    "closed_at": "2024-12-10T16:30:39Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/962",
    "body": "# Relates to:\r\nBug fix for EVM plugin activation logic\r\n\r\n# Risks\r\nLow \r\n\r\n# Background\r\n\r\n## What does this PR do?\r\nFixes a logic bug in the EVM plugin activation condition where it was incorrectly checking for wallet addresses that do NOT start with '0x'. \r\n\r\n## What kind of change is this?\r\nBug fixes\r\n\r\n# Documentation changes needed?\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\nReview the change in `agent/src/index.ts` where the EVM plugin activation condition is modified.\r\n\r\n## Detailed testing steps\r\n\r\nCode change:\r\n\r\n```\r\n// Before\r\ngetSecret(character, \"EVM_PRIVATE_KEY\") ||\r\n(getSecret(character, \"WALLET_PUBLIC_KEY\") &&\r\n!getSecret(character, \"WALLET_PUBLIC_KEY\")?.startsWith(\"0x\"))\r\n? evmPlugin\r\n: null,\r\n\r\n// After\r\ngetSecret(character, \"EVM_PRIVATE_KEY\") ||\r\n(getSecret(character, \"WALLET_PUBLIC_KEY\") &&\r\ngetSecret(character, \"WALLET_PUBLIC_KEY\")?.startsWith(\"0x\"))\r\n? evmPlugin\r\n: null,\r\n```",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/962/comments",
    "author": "0xAsten",
    "comments": [
      {
        "user": "vladhalla",
        "created_at": "2025-01-03T08:53:39Z",
        "body": "Not sure where or how to share this information the best way: it looks like this or a similar error is back in v0.1.7-alpha.2."
      }
    ]
  },
  {
    "number": 930,
    "title": "feat: add hot-reloading for agent dependencies",
    "created_at": "2024-12-09T06:58:53Z",
    "closed_at": "2024-12-09T07:10:57Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/930",
    "body": "\r\nAutomatically restart agent when package dependencies change during development. Will modify `dev.sh` to watch dist folders of all working packages.\r\n\r\n- Add dynamic watch paths\r\n- Configure nodemon for hot-reloading",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/930/comments",
    "author": "samuveth",
    "comments": [
      {
        "user": "shakkernerd",
        "created_at": "2024-12-09T07:10:09Z",
        "body": "Thanks for the add!"
      }
    ]
  },
  {
    "number": 898,
    "title": "chore: pass env variables when setting up GOAT and update GOAT readme",
    "created_at": "2024-12-07T14:21:50Z",
    "closed_at": "2024-12-10T18:35:58Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/898",
    "body": "# Risks\r\n\r\nLow\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR aims to easily pass secrets to the GOAT plugin as well as improve its readme.\r\n\r\nProblem: \r\nCurrenlty secrets can only be used by plugins when calling an action or a provider. If a plugin requires an initial setup such as setting up a wallet or a GOAT plugin (e.g adding Polymarket or Uniswap plugins) there is no way to achieve this.\r\n\r\nSolution:\r\nUpdate the GOAT plugin to get passed a `getSecrets` function for the specific character it is adding actions to. This allows GOAT to check the secrets/env variables and configure its plugins accordingly when being initialized.\r\n\r\n## What kind of change is this?\r\n\r\nImprovements: This change allows developers to install GOAT plugins easily such as Polymarket, Uniswap and Coingecko. It also makes it easier to update the plugin to support multi-chain.\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes do not require a change to the project documentation.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n1. Go to `plugin-goat`\r\n\r\n## Detailed testing steps\r\n1. Make sure you have an `EVM_PRIVATE_KEY` and `EVM_PROVIDER_URL` for Base set\r\n2. Comment out `evmPlugin` in `src/agent.ts`\r\n3. Run the agent and prompt it with: What's the USDC balance of `0x18Bead774f927Af586F86F6d054C269416E163DD`\r\n4. Should give you the balance of `0x18Bead774f927Af586F86F6d054C269416E163DD`\r\n\r\nTo test actions on Base Sepolia simply:\r\n1. Go to `plugin-goat/src/wallet.ts` and change\r\n```typescript\r\nconst chain = base \r\n```\r\nto\r\n```typescript\r\nconst chain = sepolia\r\n```\r\n2. Make sure `EVM_PROVIDER_URL` works for Sepolia\r\n3. Run the agent!\r\n\r\n\r\n## Discord username\r\naguspunk\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/898/comments",
    "author": "0xaguspunk",
    "comments": [
      {
        "user": "cygaar",
        "created_at": "2024-12-07T16:39:06Z",
        "body": "we're currently in the process of refactoring how plugins are setup and initiated so we'll probably hold off on merging this for now"
      },
      {
        "user": "0xaguspunk",
        "created_at": "2024-12-07T20:42:52Z",
        "body": "oh nice, any ETA for that @cygaar ? :)"
      }
    ]
  },
  {
    "number": 881,
    "title": "Failed to initialize ONNX Runtime API",
    "created_at": "2024-12-07T01:41:37Z",
    "closed_at": "2025-01-12T10:49:18Z",
    "labels": [
      "bug",
      "Need Feedback"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/881",
    "body": "**Describe the bug**\r\n\r\nWhen launching with `pnpm --dir core start \"--character=characters/trump.character.json\"` I get \r\n```\r\n(node:16908) ExperimentalWarning: `--experimental-loader` may be removed in the future; instead use `register()`:\r\n--import 'data:text/javascript,import { register } from \"node:module\"; import { pathToFileURL } from \"node:url\"; register(\"ts-node/esm\", pathToFileURL(\"./\"));'\r\n(Use `node --trace-warnings ...` to show where the warning was created)\r\n(node:16908) [DEP0180] DeprecationWarning: fs.Stats constructor is deprecated.\r\n(Use `node --trace-deprecation ...` to show where the warning was created)\r\nThe requested API version [20] is not available, only API versions [1, 19] are supported in this build. Current ORT Version is: 1.19.2\r\nnode:internal/modules/cjs/loader:1724\r\n  return process.dlopen(module, path.toNamespacedPath(filename));\r\n                 ^\r\n\r\nError: Failed to initialize ONNX Runtime API. It could happen when this nodejs binding was built with a higher version ONNX Runtime but now runs with a lower version ONNX Runtime DLL(or shared library).\r\n    at Object..node (node:internal/modules/cjs/loader:1724:18)\r\n    at Module.load (node:internal/modules/cjs/loader:1303:32)\r\n    at Function._load (node:internal/modules/cjs/loader:1117:12)\r\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\r\n    at wrapModuleLoad (node:internal/modules/cjs/loader:218:24)\r\n    at Module.require (node:internal/modules/cjs/loader:1325:12)\r\n    at require (node:internal/modules/helpers:136:16)\r\n    at Object.<anonymous> (J:\\Eliza\\eliza\\core\\node_modules\\onnxruntime-node\\dist\\binding.js:9:1)\r\n    at Module._compile (node:internal/modules/cjs/loader:1546:14)\r\n    at Object..js (node:internal/modules/cjs/loader:1698:10)\r\n```\r\n\r\n\r\n**To Reproduce**\r\n\r\nInstall following the quickstart guide on Windows 10 Education Edition, using node 23.3.0\r\n\r\n**Expected behavior**\r\n\r\nI don't get this error.\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/881/comments",
    "author": "minichris",
    "comments": [
      {
        "user": "EvanTedesco",
        "created_at": "2024-12-23T11:41:28Z",
        "body": "I am having a similar error on Mac OS.  It seems to be building for OS X 13.3 but I am on 11.7.10 (Big Sur).  Running ` pnpm start \"--character=characters/trump.character.json\"`\r\n\r\n```\r\nnode:internal/modules/cjs/loader:1931\r\n  return process.dlopen(module, path.toNamespacedPath(filename));\r\n                 ^\r\n\r\nError: dlopen(/Users/ET/eliza-agents/eliza/node_modules/onnxruntime-node/bin/napi-v3/darwin/x64/onnxruntime_binding.node, 1): Symbol not found: __ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv\r\n  Referenced from: /Users/ET/eliza-agents/eliza/node_modules/onnxruntime-node/bin/napi-v3/darwin/x64/libonnxruntime.1.20.1.dylib (which was built for Mac OS X 13.3)\r\n  Expected in: /usr/lib/libc++.1.dylib\r\n\r\n    at Object..node (node:internal/modules/cjs/loader:1931:18)\r\n    at Module.load (node:internal/modules/cjs/loader:1474:32)\r\n    at Function._load (node:internal/modules/cjs/loader:1286:12)\r\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\r\n    at wrapModuleLoad (node:internal/modules/cjs/loader:234:24)\r\n    at Module.require (node:internal/modules/cjs/loader:1496:12)\r\n    at require (node:internal/modules/helpers:135:16)\r\n    at Object.<anonymous> (/Users/ET/eliza-agents/eliza/node_modules/onnxruntime-node/dist/binding.js:9:1)\r\n    at Module._compile (node:internal/modules/cjs/loader:1740:14)\r\n    at Object..js (node:internal/modules/cjs/loader:1905:10) {\r\n  code: 'ERR_DLOPEN_FAILED'\r\n}\r\n```"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-03T03:57:52Z",
        "body": "Can you try with the latest version  and report back the errors in case? \r\n\r\n### Comprehensive Solution\r\n\r\n#### 1. TLDR (Executive Summary)\r\n- **Issue essence**: ONNX Runtime API initialization error due to version mismatch.\r\n- **Root cause**: Mismatch between ONNX Runtime versions used in build and runtime environments.\r\n- **Solution approach**: Align ONNX Runtime versions and update configurations.\r\n- **Impact assessment**: Critical issue preventing application initialization.\r\n\r\n#### 2. Quick Resolution Path\r\n- **Immediate steps**:\r\n  1. Verify ONNX Runtime version in both build and runtime environments.\r\n  2. Ensure both environments use the same version (e.g., 1.19.2).\r\n  3. Update the `package.json` to specify the correct ONNX Runtime version.\r\n  4. Rebuild the project to ensure compatibility.\r\n\r\n- **Exact file locations and line numbers**:\r\n  - `package.json`: Update the ONNX Runtime dependency.\r\n  - `agent/src/index.ts`: Review initialization code for version-specific configurations.\r\n\r\n- **Required code changes**:\r\n  ```json\r\n  // package.json\r\n  \"dependencies\": {\r\n    \"onnxruntime-node\": \"1.19.2\"\r\n  }\r\n  ```\r\n\r\n- **Validation commands**:\r\n  ```bash\r\n  npm install\r\n  npm run build\r\n  npm start\r\n  ```\r\n\r\n- **Rollback procedures**:\r\n  Revert the `package.json` changes and reinstall the previous ONNX Runtime version.\r\n\r\n#### 3. Comprehensive Solution\r\n- **Detailed technical analysis**:\r\n  The error occurs because the ONNX Runtime bindings were built with a higher version (e.g., 20) than the runtime environment supports (1.19.2). This mismatch prevents the API from initializing correctly.\r\n\r\n- **Step-by-step implementation**:\r\n  1. **Check ONNX Runtime version**:\r\n     ```bash\r\n     npm list onnxruntime-node\r\n     ```\r\n  2. **Update `package.json`**:\r\n     ```json\r\n     \"dependencies\": {\r\n       \"onnxruntime-node\": \"1.19.2\"\r\n     }\r\n     ```\r\n  3. **Reinstall dependencies**:\r\n     ```bash\r\n     npm install\r\n     ```\r\n  4. **Rebuild the project**:\r\n     ```bash\r\n     npm run build\r\n     ```\r\n  5. **Run the application**:\r\n     ```bash\r\n     npm start\r\n     ```\r\n     \r\n     \r\n"
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-06T05:45:50Z",
        "body": "Did you try the new main build and can you give me a feedback please.\r\nIf not since i also run on OSX with no problem i think it something we already have fixed in the configuration. \r\nI wait feebback. "
      },
      {
        "user": "AIFlowML",
        "created_at": "2025-01-12T10:49:18Z",
        "body": "Close for missing feedback. "
      }
    ]
  },
  {
    "number": 866,
    "title": "`pnpm  start` crashes if there is too much data in knowledge",
    "created_at": "2024-12-06T02:13:47Z",
    "closed_at": "2024-12-06T07:03:20Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/866",
    "body": "**Describe the bug**\r\nthis bug occurs when putting a large amount of data in the knowledge portion of the character file. when starting eliza for the first time (wiped db first), the console will show that the knowledge is being processed up until a point, and then it will print the word `Killed` followed by ` ELIFECYCLE  Command failed with exit code 137.`\r\n\r\nif i then run `pnpm start` again, it skips over the knowledge processing steps and runs normally. so it appears that the remainder of the knowledge items past the point of the initial failure will never be incorporated into the agent.\r\n\r\nhaving tried this multiple times with the same character file and clearing the db each time, i have observed that the point of failure varies widely with each attempt. sometimes it dies while processing the 5th knowledge item. sometimes it dies while processing the 50th item. \r\n\r\n**To Reproduce**\r\nadd 100 strings of 10k characters each to knowledge, wipe db, and run `pnpm start` \r\n\r\n\r\ni tested this on eliza (main), eliza (0.1.5), and eliza-starter\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/866/comments",
    "author": "c-o-i-n-w-i-t-c-h",
    "comments": [
      {
        "user": "odilitime",
        "created_at": "2024-12-06T03:20:14Z",
        "body": "Killed usually means you're running out of memory (ram)"
      },
      {
        "user": "c-o-i-n-w-i-t-c-h",
        "created_at": "2024-12-06T06:04:40Z",
        "body": "aha, that would make a lot of sense! could i run this locally and then transfer the database/ .env/ character file to the vps?"
      },
      {
        "user": "shakkernerd",
        "created_at": "2024-12-06T06:40:22Z",
        "body": "Yes, absolutely!\r\nYou could have your database hosted anywhere, you just need to set `POSTGRES_URL` in the env and you are good."
      },
      {
        "user": "c-o-i-n-w-i-t-c-h",
        "created_at": "2024-12-06T07:03:12Z",
        "body": "thanks so much guys i will try it <3"
      },
      {
        "user": "shakkernerd",
        "created_at": "2025-01-08T00:04:07Z",
        "body": "Knowledge should be more optimal with the changes made to local embedding in #1950 "
      }
    ]
  },
  {
    "number": 857,
    "title": "Twitter login some function not work. ",
    "created_at": "2024-12-05T14:00:29Z",
    "closed_at": "2024-12-05T15:17:39Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/857",
    "body": "\r\n [\"◎ Twitter client started\"]\r\n\r\n [\"◎ Waiting for Twitter login\"]\r\n\r\n ⛔ ERRORS\r\n   Error starting agent for character joi:\r\n   {}\r\n\r\nError: {\"errors\":[{\"code\":399,\"message\":\"Incorrect. Please try again.\"}]}\r\n    at TwitterUserAuth.executeFlowTask (file:///home/eliza/node_modules/agent-twitter-client/dist/node/esm/index.mjs:569:38)\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\r\n    at async TwitterUserAuth.handleEnterAlternateIdentifierSubtask (file:///home/eliza/node_modules/agent-twitter-client/dist/node/esm/index.mjs:439:12)\r\n    at async TwitterUserAuth.login (file:///home/eliza/node_modules/agent-twitter-client/dist/node/esm/index.mjs:344:16)\r\n    at async Scraper.login (file:///home/eliza/node_modules/agent-twitter-client/dist/node/esm/index.mjs:2914:5)\r\n    at async _ClientBase.init (file:///home/eliza/packages/client-twitter/dist/index.js:847:13)\r\n    at async Object.start (file:///home/eliza/packages/client-twitter/dist/index.js:1097:9)\r\n    at async initializeClients (file:///home/eliza/agent/src/index.ts:217:32)\r\n    at async startAgent (file:///home/eliza/agent/src/index.ts:308:25)\r\n    at async startAgents (file:///home/eliza/agent/src/index.ts:331:13)\r\n ⛔ ERRORS\r\n   Error starting agents:\r\n   {}\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/857/comments",
    "author": "kwannz",
    "comments": [
      {
        "user": "mohammadrz003",
        "created_at": "2024-12-05T19:11:45Z",
        "body": "how did you solve this issue?\r\n"
      }
    ]
  },
  {
    "number": 847,
    "title": "feat: Add NEAR Protocol plugin",
    "created_at": "2024-12-04T23:47:29Z",
    "closed_at": "2024-12-14T09:32:34Z",
    "labels": [
      "Plugin_new"
    ],
    "url": "https://github.com/elizaOS/eliza/pull/847",
    "body": "# Risks\r\n\r\nN/A\r\n\r\n# Background\r\n\r\nThis is the first PR that introduces NEAR Protocol plugin to eliza.\r\n\r\n## What does this PR do?\r\n\r\nIntroduces:\r\n\r\n* Wallet provider that returns the current NEAR balance.\r\n* Swap functionality given the input and output contract addresses through Ref.finance.\r\n* Native token transfers.\r\n* New env variables for NEAR Protocol\r\n\r\n## What kind of change is this?\r\n\r\nFeatures (non-breaking change which adds functionality)\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\nTo introduce basic NEAR Protocol functionality to eliza, which could be further extended.\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes do not require a change to the project documentation.\r\n\r\n# Testing\r\n\r\nChanges can be tested by providing a near address, public key and private key in `.env`, and asking eliza to swap, transfer and provide wallet details. \r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/847/comments",
    "author": "serrrfirat",
    "comments": [
      {
        "user": "Beachbumfrombrick",
        "created_at": "2025-01-02T10:28:01Z",
        "body": "I'd love to have some in my birthday bag today!\n\nbeachbumfrombrick@gmail.com"
      }
    ]
  },
  {
    "number": 843,
    "title": "fix: Include scripts/postinstall.js in the final NPM package",
    "created_at": "2024-12-04T15:59:35Z",
    "closed_at": "2024-12-04T19:34:12Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/843",
    "body": "# Relates to:\r\nNo specific ticket linked - package configuration improvement\r\n\r\n# Risks\r\nLow - Adding explicit files list to package.json for more controlled npm package contents\r\n\r\n# Background\r\n## The problem\r\n```bash\r\n# pnpm install\r\n.../node_modules/@ai16z/plugin-node postinstall$ node scripts/postinstall.js\r\n│ node:internal/modules/cjs/loader:1246\r\n│   throw err;\r\n│   ^\r\n│ Error: Cannot find module '/Users/martincik/Projects/ai/access-ai-poc/echo2/node_modules/.pnpm/@ai16z+plugin-node@0.1.5-alpha.3_@google-cloud+vertexai@1.9.0_@langchain+cor…\r\n│     at Function._resolveFilename (node:internal/modules/cjs/loader:1243:15)\r\n│     at Function._load (node:internal/modules/cjs/loader:1068:27)\r\n│     at TracingChannel.traceSync (node:diagnostics_channel:322:14)\r\n│     at wrapModuleLoad (node:internal/modules/cjs/loader:219:24)\r\n│     at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:170:5)\r\n│     at node:internal/main/run_main_module:36:49 {\r\n│   code: 'MODULE_NOT_FOUND',\r\n│   requireStack: []\r\n│ }\r\n│ Node.js v23.2.0\r\n```\r\n\r\n## Issue\r\nThe new package is triggering `postintall` but the scripts/postinstall.js is missing.\r\n\r\n## What does this PR do?\r\nAdds \"files\" field to package.json to explicitly include scripts/postinstall.js and other essential files in the published npm package.\r\n\r\n## What kind of change is this?\r\nBug fixes (non-breaking change which fixes an issue)\r\n\r\n# Documentation changes needed?\r\nMy changes do not require a change to the project documentation.\r\n\r\n# Testing\r\n## Where should a reviewer start?\r\n1. Review packages/plugin-node/package.json\r\n2. Test npm package installation\r\n\r\n## Detailed testing steps\r\n1. Build the package locally\r\n2. Verify package contents include:\r\n   - dist/\r\n   - scripts/\r\n   - package.json\r\n   - LICENSE\r\n   - tsup.config.ts\r\n3. Test package installation",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/843/comments",
    "author": "martincik",
    "comments": [
      {
        "user": "jkbrooks",
        "created_at": "2024-12-04T19:33:50Z",
        "body": "lgtm"
      }
    ]
  },
  {
    "number": 839,
    "title": "feat: Add Custom System Prompt Support for plugin-image-generation ",
    "created_at": "2024-12-04T09:39:15Z",
    "closed_at": "2024-12-28T10:15:43Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/839",
    "body": "# Relates to:\r\nImage generation quality improvement and prompt engineering\r\n\r\n# Risks\r\nLow - Adds new optional parameter for system prompts and enhanced image prompt generation without modifying core functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\nThis PR enhances the text generation system by:\r\n1. Adding `customSystemPrompt` parameter to generateText function for image gen system prompt\r\n2. Implementing structured prompt engineering for image generation\r\n3. Creating detailed prompt generation guidelines with specific steps\r\n4. Setting up a standardized prompt structure for consistency\r\n5. Adding style-specific prompt customization\r\n\r\n## What kind of change is this?\r\nFeatures (non-breaking change which adds functionality)\r\n\r\n## Why are we doing this?\r\nTo improve image generation quality by providing structured, detailed prompts that consider key aspects like:\r\n- Main subject focus\r\n- Environment and setting\r\n- Lighting and atmosphere\r\n- Color relationships\r\n- Composition guidelines\r\n- Style integration\r\n\r\n# Documentation changes needed?\r\nMy changes require a change to the project documentation to document:\r\n- New `customSystemPrompt` parameter in generateText\r\n- Image prompt structure and guidelines\r\n- Style customization options\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n1. Review the generateText changes in `packages/core/src/generation.ts`\r\n2. Check the image prompt system in image generation implementation\r\n3. Examine the structured prompt generation workflow\r\n\r\n## Detailed testing steps\r\nI tested locally by running `pnpm start` with a new character that had ModelProviderName.HEURIST as the modelProvider and \"direct\" in the clients. Everything seemed to work well.\r\n\r\n## Deploy Notes\r\nNo special deployment steps required. Feature is automatically active when using the plugin-image-generation functionality.\r\n\r\n## Discord username\r\ntao8617\r\n\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/839/comments",
    "author": "tsubasakong",
    "comments": [
      {
        "user": "odilitime",
        "created_at": "2024-12-14T17:36:00Z",
        "body": "SImple conflict that needs to be resolve, otherwise LGTM"
      },
      {
        "user": "tsubasakong",
        "created_at": "2024-12-28T07:59:42Z",
        "body": "I update to the latest \"develop\" branch and run the approval again. Seems no conflict?"
      }
    ]
  },
  {
    "number": 837,
    "title": "fix: load image from diff endpoints",
    "created_at": "2024-12-04T05:49:47Z",
    "closed_at": "2024-12-15T10:45:33Z",
    "labels": [
      "Needs Refactor"
    ],
    "url": "https://github.com/elizaOS/eliza/pull/837",
    "body": "## What does this PR do?\r\nIf someone uses a proxy such as redpill to access the model, the original code will not load the image correctly.\r\n\r\n## What kind of change is this?\r\n\r\nBug fixes (non-breaking change which fixes an issue)\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes do not require a change to the project documentation.\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/837/comments",
    "author": "qgpcybs",
    "comments": [
      {
        "user": "shakkernerd",
        "created_at": "2024-12-10T08:51:52Z",
        "body": "Hi @qgpcybs Kindly look into the comments above."
      }
    ]
  },
  {
    "number": 820,
    "title": "Feature request: Allow actions to override the agent answer",
    "created_at": "2024-12-03T10:09:18Z",
    "closed_at": "2025-01-12T11:15:36Z",
    "labels": [
      "enhancement",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/820",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nRight now actions are mostly seen as \"side effect\"  happening next to an answer sent by the agent.\r\nThere is no automated way to get the agent to call an action, interpret the result, and answer with that interpretation (which is what I would expect coming from OpenAI actions that are APIs that their runtime call and then get the result interpreted by the agent)\r\n\r\nRight now if I ask my agent: `what actions can you perform right now in the game?`\r\n1 - Agent response: `{ \"user\": \"Miaoulechat\", \"text\": \"I can play, nap, or explore! What do you want to see?\", \"action\": \"LIST_GAME_ACTIONS\" }`\r\n2 -Runtime processAction(\"LIST_GAME_ACTIONS\"): `{ text: \"I can play dice, roulette, blackjack\" }`\r\n3 - Shown to user:\r\n```\r\n [\"◎ Agent: I can play, nap, or explore! What do you want to see?\"] \r\n [\"◎ Agent: I can play dice, roulette, blackjack\"] \r\n```\r\n\r\n**Describe the solution you'd like**\r\n\r\nThere are two things that could be done. \r\nThe simple one would just have the action result override the answer from the agent (so in the previous example, the first text `I can play, nap, or explore! What do you want to see?` wouldn't even be sent to the client).\r\n\r\nThe complicated one, would have do a second back-and forth with the agent, after getting the action result, in order to interpret that result.\r\n\r\nA) simple:\r\n\r\n1 - Agent response: `{ \"user\": \"Miaoulechat\", \"text\": \"I can play, nap, or explore! What do you want to see?\", \"action\": \"LIST_GAME_ACTIONS\" }`\r\n2 -Runtime processAction(\"LIST_GAME_ACTIONS\"): `{ text: \"I can play dice, roulette, blackjack\", type: \"OVERRIDE_ANSWER\" }`\r\n3 - Shown to user:\r\n```\r\n [\"◎ Agent: I can play dice, roulette, blackjack\"] \r\n```\r\n\r\n> here, simply adding a \"type\" (or any other field name) with value `OVERRIDE_ANSWER` to the action result, would tell the system to not send the agent answer, only the action result, to the client\r\n\r\nB) complicated:\r\n\r\n1 - Agent response: `{ \"user\": \"Miaoulechat\", \"text\": \"I can play, nap, or explore! What do you want to see?\", \"action\": \"LIST_GAME_ACTIONS\" }`\r\n2 -Runtime processAction(\"LIST_GAME_ACTIONS\"): `{ data: ['dice', 'roulette', 'blackjack'], type: \"ACTION_RESULT_INTERPRETATION\" }`\r\n3 - Agent request: `{ prompt: \"You were just asked 'what actions can you perform right now in the game?' which triggered the action 'LIST_GAME_ACTIONS' and the result was ['dice', 'roulette', 'blackjack']. Can you compose an answer knowing the question and the result?\" }`\r\n4- Agent response: `{ \"user\": \"Miaoulechat\", \"text\": \"I can play dice, roulette and blackjack\"}`\r\n5 - Shown to user:\r\n```\r\n [\"◎ Agent: I can play dice, roulette and blackjack\"] \r\n```\r\n\r\n> here, there is a second message sent to the agent, telling it \"this is what happened, this is the result, can you interpret it?\". This would be done again through some \"type\"  (`ACTION_RESULT_INTERPRETATION`) on the action result, which would be some kind of \"operation\" to be done by the runtime.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nRight now as an alternative, I go with the \"simple\" solution, and at the client level, if there is any message with a `type: \"OVERRIDE_ANSWER\"` I remove all other messages from the returned messages.\r\n\r\nBut this forces me to do a fork of all the clients to add that filter, when it could be done earlier in the runtime / pipeline.\r\n\r\n**Additional context**\r\n\r\nI'm comparing \"actions\" to OpenAI actions where the agent detects that an action is possible from the prompt and a list of actions that are submitted (it also detects parameters)\r\nThen the agent call the API with those parameters\r\nThe API answers, and the agent interpret the result, create a constructed answer, and returns that answer.\r\n\r\nIt would be nice to be able to have a similar behavior for actions here\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/820/comments",
    "author": "dievardump",
    "comments": [
      {
        "user": "oguzserdar",
        "created_at": "2024-12-03T10:21:03Z",
        "body": "you could solve this at a more fundamental level by splitting agents into worker vs character types \r\n\r\nworker agents would be all business - they'd just execute actions and return results directly, perfect for stuff like `LIST_GAME_ACTIONS`. no personality, no fluff, just data.\r\n\r\ncharacter agents would be the chatty ones that interpret results and add narrative flair.\r\n\r\nyou could even take a temperature-based approach to balance between these - low temps giving you more worker-like behavior with just the facts, while higher temps let the agent be more expressive and narrative in their responses.\r\n\r\nthis split would naturally handle both your scenarios:\r\n- simple case: worker agents automatically override their response with action results  \r\n- complex case: character agents process action results and craft narrative responses\r\n\r\nbut if you want to move forward with your override/interpretation types approach first, that's totally workable too. you could handle it at the runtime level to avoid client mods.\r\n\r\nthe worker/character abstraction is there when you're ready to tackle the bigger architectural picture - it would make all of this stuff cleaner and more consistent in the long run"
      },
      {
        "user": "dievardump",
        "created_at": "2024-12-03T13:33:06Z",
        "body": "I do understand how I can go around this, but my goal here is to be able to have this feature integrated to my agents / characters, so they can automatically interpret actions results.\r\n\r\nThat's why I would like to make it a feature, not find a way to go around the fact it's not available."
      },
      {
        "user": "cristianrohr",
        "created_at": "2024-12-08T21:53:04Z",
        "body": "I support this petition\r\n"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-08T18:33:04Z",
        "body": "This issue has been automatically marked as stale due to 30 days of inactivity.\nIf no further activity occurs within 7 days, it will be closed automatically. Please take action if this issue is still relevant."
      }
    ]
  },
  {
    "number": 817,
    "title": "This command: pnpm start --characters=\"characters/tate.character.json\" results in an error",
    "created_at": "2024-12-03T07:23:28Z",
    "closed_at": "2024-12-14T07:40:46Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/817",
    "body": "**Describe the bug**\r\nrunning pnpm start --characters=\"characters/tate.character.json\" results in this error \"Error fetching response: SyntaxError: Unexpected token 'A', \"Agent not found\" is not valid JSON\"\r\n\r\n**To Reproduce**\r\nRun pnpm start --characters=\"characters/tate.character.json\" in the root folder\r\n\r\n**Expected behavior**\r\nIt would be nice if it worked",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/817/comments",
    "author": "619",
    "comments": [
      {
        "user": "shakkernerd",
        "created_at": "2024-12-04T00:39:24Z",
        "body": "Hi @619 \r\n\r\nAfter looking into this and tested locally, `pnpm start --characters=CHARACTER_FILE.json` works well with no issue.\r\n\r\nDo you mind looking into the format and contents of your `tate.character.json` file ?\r\nLooks to me like the issue is from the character file itself."
      }
    ]
  },
  {
    "number": 813,
    "title": "Disable Safety Checker for FAL Image Generation",
    "created_at": "2024-12-03T05:31:46Z",
    "closed_at": "2025-01-09T18:33:35Z",
    "labels": [
      "enhancement",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/813",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nMany image generation services such as FAL, Stable Diffusion, etc. have \"safety checkers\" that ensure prompts are appropriate.\r\nThese have several problems:\r\n\r\n1. Additional latency: These checks are done via an LLM, which can add unnecessary latency.\r\n2. Unpredictable / incorrect outputs: Since the checks use LLMs, their output can be overly restrictive or random, causing unpredictable behavior.\r\n3. Not necessary: Some use cases don't require the safety checker.\r\n\r\nIn particular, we at [daojones.ai](daojones.ai) ([@DAOJonesPumpAI](x.com/DAOJonesPumpAI) on X.com) have found this is overly restrictive and have written a custom image generation application that disables it.\r\n\r\n**Describe the solution you'd like**\r\n\r\nWe want to set the FAL configuration for our image requests.\r\nWe need to set `enable_safety_checker` to `false` while also setting `safety_tolerance` to `6` (the most tolerant setting).\r\nSince these options are not uniformly supported by the different APIs, we will just add an \"escape hatch\" configuration `imageSettings.fal`.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n1. Turning safety checker off globally: This would work for our use case but could be a breaking change for other use cases.\r\n2. Adding a global `allowNsfw` flag: This requires reconciling this with other APIs and determining what settings it would correspond to.\r\n3. Adding the `enableSafetyChecker` / `safetyTolerance` flags at the top level of `imageSettings`: this would pollute the global namespace.\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/813/comments",
    "author": "daojonesceo",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-02T18:32:42Z",
        "body": "This issue has been automatically marked as stale due to inactivity."
      }
    ]
  },
  {
    "number": 796,
    "title": "fix: Docker default non-interactive mode for Cloud instances",
    "created_at": "2024-12-02T20:34:14Z",
    "closed_at": "2024-12-02T22:00:03Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/796",
    "body": "# Relates to:\r\n\r\n<!-- LINK TO ISSUE OR TICKET -->\r\nNo linked issue.\r\n\r\n# Risks\r\n\r\n<!--\r\nLow, medium, large. List what kind of risks, and what could be effected.\r\n-->\r\n**Risk Level**: Low  \r\nAdding a new flag `non-interactive` that defaults to skipping `chat()` should not affect existing functionality unless explicitly enabled. The main risk is around unintended bypass of user input under edge cases.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\nThis PR adds a `non-interactive` flag to prevent running the `chat()` function and avoid waiting for user input. This is particularly useful for environments such as Cloud platforms where interactive sessions are not feasible and can cause the application to hang.\r\n\r\nAdditionally, the `non-interactive` flag is added to the `CMD` in the Dockerfile as the default.\r\n\r\n## What kind of change is this?\r\nFeatures (non-breaking change which adds functionality)\r\n\r\n<!-- This \"Why\" section is most relevant if there is no linked issue explaining why. If there is a related issue it might make sense to skip this why section. -->\r\n## Why are we doing this? Any context or related work?\r\nRunning the application in a non-interactive environment such as Cloud platforms caused the process to hang due to waiting for terminal input. Adding this flag makes the application more robust for deployment in such scenarios.\r\n\r\n# Documentation changes needed?\r\n\r\n<!--\r\nMy changes do not require a change to the project documentation.\r\nMy changes require a change to the project documentation.\r\nIf a docs change is needed: I have updated the documentation accordingly.\r\n-->\r\nMy changes **do not** require a change to the project documentation.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n- Review the changes in the `Dockerfile` for the updated `CMD` with the `non-interactive` flag.\r\n- Review the changes in `/agent/src/index.ts` where the `non-interactive` flag is implemented and its logic for skipping `chat()`.\r\n\r\n## Detailed testing steps\r\n1. Run the application locally without the `non-interactive` flag and verify that `chat()` runs as expected.\r\n2. Run the application locally with the `non-interactive` flag and confirm it bypasses `chat()` and does not wait for user input.\r\n3. Build and run the updated Docker image to ensure the `non-interactive` flag is applied by default and prevents hanging in Cloud environments.\r\n\r\n# Deploy Notes\r\n\r\nNo special deployment steps are required. Ensure the updated Docker image is pushed to the appropriate registry.\r\n\r\n## Database changes\r\n\r\nNone.\r\n\r\n## Deployment instructions\r\n\r\nBuild and deploy the updated Docker image as usual.\r\n\r\n---\r\n\r\nLet me know if anything else needs tweaking! 😊\r\n<!--\r\n## Discord username\r\n@rarepepi\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/796/comments",
    "author": "rarepepi",
    "comments": [
      {
        "user": "odilitime",
        "created_at": "2024-12-02T20:57:54Z",
        "body": "One additional note from chat, this helps with AWS ECS deployments"
      },
      {
        "user": "rarepepi",
        "created_at": "2024-12-02T21:06:11Z",
        "body": "> One additional note from chat, this helps with AWS ECS deployments\r\n\r\nFly.io deployments as well"
      },
      {
        "user": "shakkernerd",
        "created_at": "2024-12-02T21:55:32Z",
        "body": "I really like this.\r\nThanks for adding it in!"
      }
    ]
  },
  {
    "number": 791,
    "title": "Characters Do Not Actually Use ExamplePost or ExampleMessage",
    "created_at": "2024-12-02T18:02:12Z",
    "closed_at": "2024-12-14T07:36:39Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/791",
    "body": "You are able to define example posts and messages in the character files, but the characters do not actually receive these in their prompt. I checked this by logging context in the generate text script, and saw that none of these examples are even included in the info sent to the agent, so it is very hard to get unique behaviors that aren't highly generic. Has anyone found a fix for this? It seems like an issue that should be fixed before more features get added.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/791/comments",
    "author": "toddokuhawado",
    "comments": [
      {
        "user": "tcm390",
        "created_at": "2024-12-02T18:15:32Z",
        "body": "Thanks for reporting this! Could you provide more details about the issue? For example, a screenshot or steps to reproduce it would be really helpful. On my side, I can see the example messages in the prompt, so any additional context would be great for troubleshooting."
      },
      {
        "user": "augchan42",
        "created_at": "2024-12-03T04:50:56Z",
        "body": "there's two tiers of response handling - first is gating (whether to respond at all) and then if the agent chooses to respond, the full context is loaded.  So watch where you are checking for the context."
      }
    ]
  },
  {
    "number": 790,
    "title": "Feature Request: Add Aptos and Move Support to the Eliza Framework for Autonomous Agents",
    "created_at": "2024-12-02T17:52:32Z",
    "closed_at": "2024-12-14T07:36:19Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/790",
    "body": "We're building an **Autonomous Agent** using the Eliza Framework on Aptos.\r\nRight now, Eliza doesn’t offer features specific to Aptos, like **wallet creation, trading,** or other opportunities available on Aptos.\r\nWe’d love to help by adding support for Aptos or Move to Eliza.\r\nDescribe the solution you'd like\r\nWe’d love to add an Aptos plugin to Eliza for wallet creation without human involvement, trading, and other features.\r\nWe’re big believers in open source and are excited to contribute by adding Aptos Move support to Eliza!\"",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/790/comments",
    "author": "obsrvgmi",
    "comments": [
      {
        "user": "asianviking",
        "created_at": "2024-12-07T10:43:50Z",
        "body": "#818"
      }
    ]
  },
  {
    "number": 783,
    "title": "enhancement: Improve message threading and handling to reduce repetition",
    "created_at": "2024-12-02T06:13:51Z",
    "closed_at": "2024-12-14T07:37:14Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/783",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently when agents use the CONTINUE action, they can generate multiple separate messages with identical context instead of properly continuing the conversation thread. This leads to \"spammy\" behavior and redundant responses.\r\n\r\nCurrent Behavior:\r\n\r\nAgent generates new separate messages for continuations\r\nContext gets repeated across continuation messages\r\nNo proper message threading/revision system\r\nBasic inReplyTo linking that doesn't prevent duplicates\r\n\r\nProposed Solution:\r\n\r\nEnhance Content type to support threading:\r\n```\r\ninterface Content {\r\n  text: string;\r\n  action?: string;\r\n  isContinuation?: boolean; \r\n  parentMessageId?: UUID;\r\n  revision?: number;\r\n}\r\n```\r\nUpdate MemoryManager to handle message revisions/updates\r\nModify CONTINUE action to update existing messages rather than create new ones\r\nAdd thread management while preserving room-based organization\r\nImplementation Steps:\r\n\r\nAdd message threading support to AgentRuntime\r\nEnhance MemoryManager with revision tracking\r\nUpdate CONTINUE action handler to use thread metadata\r\nAdd validation to prevent duplicate continuations\r\nImplement message update logic instead of creating new messages\r\n\r\nFiles to Modify:\r\n\r\n/packages/core/src/runtime.ts\r\n/packages/plugin-bootstrap/src/actions/continue.ts\r\n/packages/core/src/types.ts\r\n\r\nRelated Components:\r\n\r\nMessageManager\r\nMemoryManager\r\nAgentRuntime\r\nContinueAction\r\n\r\nI'll grab this tomorrow if i get a chance",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/783/comments",
    "author": "twilwa",
    "comments": [
      {
        "user": "augchan42",
        "created_at": "2024-12-02T16:22:22Z",
        "body": "was also tracking this issue (discord code, but happens in tg too), here's analysis from Sonnet:\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nYes, looking at the flow, the double replies could be happening because of how the callback is handled. Here's the sequence:\r\n\r\n1. First call:\r\n```typescript\r\nconst responseMessages = await callback(responseContent);\r\n```\r\n\r\n2. Then the callback is passed to `processActions`:\r\n```typescript\r\nawait this.runtime.processActions(\r\n    memory,\r\n    responseMessages,\r\n    state,\r\n    callback  // <-- Same callback passed here\r\n);\r\n```\r\n\r\n3. Inside `processActions`, the action handler might call the callback again:\r\n```typescript\r\nawait action.handler(this, message, state, {}, callback);\r\n```\r\n\r\nTo fix this, you could:\r\n\r\n1. Either modify the callback to be single-use:\r\n```typescript:packages/client-discord/src/messages.ts\r\nconst createCallback = () => {\r\n    let used = false;\r\n    return async (content: Content, files: any[]) => {\r\n        if (used) {\r\n            elizaLogger.warn(\"Callback already used, skipping\");\r\n            return [];\r\n        }\r\n        used = true;\r\n        // ... rest of callback logic ...\r\n    };\r\n};\r\n\r\nconst callback = createCallback();\r\n```\r\n\r\n2. Or create separate callbacks for the initial response and actions:\r\n```typescript:packages/client-discord/src/messages.ts\r\nconst responseMessages = await callback(responseContent);\r\n\r\n// Create a new callback for actions that doesn't create memories\r\nconst actionCallback: HandlerCallback = async (content: Content, files: any[]) => {\r\n    try {\r\n        if (!content?.text.trim()) {\r\n            elizaLogger.warn(\"Skipping empty content\");\r\n            return [];\r\n        }\r\n        return await sendMessageInChunks(\r\n            message.channel as TextChannel,\r\n            content.text,\r\n            message.id,\r\n            files\r\n        );\r\n    } catch (error) {\r\n        console.error(\"Error in action callback:\", error);\r\n        return [];\r\n    }\r\n};\r\n\r\nawait this.runtime.processActions(\r\n    memory,\r\n    responseMessages,\r\n    state,\r\n    actionCallback\r\n);\r\n```\r\n\r\nThe second approach might be better as it makes the distinction between response handling and action handling clearer.\r\n"
      },
      {
        "user": "odilitime",
        "created_at": "2024-12-03T15:21:26Z",
        "body": "isContinuation seems redundant, can’t the parentMessageId be enough?"
      }
    ]
  },
  {
    "number": 767,
    "title": "feat: Pin dependencies and unify tsconfig",
    "created_at": "2024-12-01T22:35:59Z",
    "closed_at": "2024-12-01T22:55:17Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/767",
    "body": "This PR unifies the tsconfig to all import from the core config as the root of their own tsconfig, as opposed to the tsconfig in monorepo root.\r\n\r\nThis is recommended by turbo to unify the tsc versions between the package versions and locally installed.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/767/comments",
    "author": "lalalune",
    "comments": [
      {
        "user": "fabianhug",
        "created_at": "2024-12-01T22:51:13Z",
        "body": "Does it make sense to pump the versions in the `package.json` definitions directly to `\"version\": \"0.1.4-alpha.4\",` instead of `alpha.3`?"
      },
      {
        "user": "fabianhug",
        "created_at": "2024-12-01T22:54:54Z",
        "body": "lgtm, good catch /w config @cygaar "
      }
    ]
  },
  {
    "number": 758,
    "title": "Add running with Gitpod",
    "created_at": "2024-12-01T17:16:24Z",
    "closed_at": "2024-12-01T19:33:02Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/758",
    "body": "We can run this with Gitpod which helps a lot with environment.\r\nJust click the button in readme :  `Open In Gitpod `",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/758/comments",
    "author": "v1xingyue",
    "comments": [
      {
        "user": "monilpat",
        "created_at": "2024-12-01T19:29:17Z",
        "body": "LGTM! thanks for working on this :) "
      }
    ]
  },
  {
    "number": 709,
    "title": "fix: move `fastembed` import to the isnode condition check",
    "created_at": "2024-11-30T09:19:24Z",
    "closed_at": "2024-11-30T23:35:18Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/709",
    "body": "In current state it looks like we had a bit of a regression importing `fastembed` at the top level again, which causes build failures in non-Node environments due to native dependencies (.node files) like Cloudflare Workers and other edge workers. \r\n\r\nThis PR:\r\n- Removes top-level import of `EmbeddingModel` from `fastembed`\r\n- Dynamically imports fastembed package only when local embeddings are needed\r\n- Ensures native modules are only loaded in Node.js environment\r\n\r\nThis allows the package to be built for both browser and Node.js environments while maintaining all existing functionality.\r\n\r\nTesting:\r\n- Confirm local embeddings still work in Node.js\r\n- Verify builds succeed in browser/Cloudflare Worker environments (done!)\r\n- Maintained original behavior for remote embedding fallbacks\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/709/comments",
    "author": "antpb",
    "comments": [
      {
        "user": "augchan42",
        "created_at": "2024-11-30T09:36:06Z",
        "body": "Sorry, that change was from me.  Now I understand why it's needed."
      },
      {
        "user": "shakkernerd",
        "created_at": "2024-11-30T23:35:09Z",
        "body": "Great!"
      }
    ]
  },
  {
    "number": 679,
    "title": "recentPosts always empty",
    "created_at": "2024-11-29T19:45:25Z",
    "closed_at": "2024-12-03T17:46:57Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/679",
    "body": "**Describe the bug**\r\n{{recentPosts}} always empty, in post.ts /twitter\r\n\r\n**To Reproduce**\r\npnpm start (to check make sure debugging set and verbose is true in .env\r\n<!-- Steps to reproduce the behavior. -->\r\n\r\n**Expected behavior**\r\n\r\n{{recentPosts}} always empty, in post.ts\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/679/comments",
    "author": "denizekiz",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-11-29T20:59:23Z",
        "body": "hmm bad bug"
      },
      {
        "user": "denizekiz",
        "created_at": "2024-12-03T17:46:57Z",
        "body": "bug fixed with #756 "
      }
    ]
  },
  {
    "number": 673,
    "title": "Twitter Client Breaks out of the box",
    "created_at": "2024-11-29T16:48:01Z",
    "closed_at": "2024-12-14T07:36:18Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/673",
    "body": "Hello, \r\n\r\nI'm working on a fresh install on a Mac. I cannot get the twitter client to work no matter what I try. I've added 'twitter' to the client list, loaded my credentials in environment variables, but I still receive the following error every time I run it with the twitter credential added: \r\n\r\n```\r\n ERR_PNPM_RECURSIVE_RUN_FIRST_FAIL  @ai16z/agent@0.0.1 start: `tsc && node --loader ts-node/esm src/index.ts \"--isRoot\" \"--character=characters/tate.character.json\"`\r\nExit status 1\r\n ELIFECYCLE  Command failed with exit code 1.\r\n```\r\n\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/673/comments",
    "author": "toddokuhawado",
    "comments": [
      {
        "user": "kwannz",
        "created_at": "2024-12-05T13:59:47Z",
        "body": "i think the localport3000 have been used it. need kill the pid and restart \r\n"
      }
    ]
  },
  {
    "number": 655,
    "title": "feat: No implicit response message",
    "created_at": "2024-11-28T19:35:19Z",
    "closed_at": "2025-02-07T07:36:58Z",
    "labels": [
      "V2"
    ],
    "url": "https://github.com/elizaOS/eliza/pull/655",
    "body": "Currently, when an agent receives a message, it responds automatically. However, for some handling, we may want to defer response and handle inside our action. The \"none\" action will now call the response callback handler.\r\n\r\nWIP -- need to test",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/655/comments",
    "author": "lalalune",
    "comments": [
      {
        "user": "twilwa",
        "created_at": "2024-11-30T01:25:33Z",
        "body": "significant refactor, pull main with this commit and verify it runs before merging please"
      },
      {
        "user": "lalalune",
        "created_at": "2024-12-15T09:44:40Z",
        "body": "This is architecturally flawed, but with a little refactor is right, saving for v2"
      }
    ]
  },
  {
    "number": 647,
    "title": "Optional image model provider to character and runtime",
    "created_at": "2024-11-28T13:47:36Z",
    "closed_at": "2024-11-29T17:02:42Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/647",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently, users can only select a single model provider for both text and image generation. This becomes limiting when a provider excels at text generation but offers subpar image generation capabilities, or vice versa.\r\n\r\n**Describe the solution you'd like**\r\n\r\nWe propose adding an optional image model provider setting that would take precedence over the default model provider when configured. If no image provider is specified, the system would continue using the default model provider, maintaining backward compatibility.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nWe've explored using a single provider (such as Heurist or OpenAI) for both text and image generation. While this works adequately, it limits flexibility. For instance, if you want to use a fine-tuned model from a specialized image generation service, this isn't currently possible.\r\n\r\n**Additional context**\r\n\r\nI've implemented a similar solution that allows me to use OpenAI for text generation while leveraging a custom fine-tuned model on fal.ai for image generation.\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/647/comments",
    "author": "yoniebans",
    "comments": [
      {
        "user": "0xTomDaniel",
        "created_at": "2024-11-29T07:37:08Z",
        "body": "Added in #491 "
      }
    ]
  },
  {
    "number": 637,
    "title": "Will not install on windows",
    "created_at": "2024-11-28T04:54:03Z",
    "closed_at": "2025-01-04T18:31:35Z",
    "labels": [
      "bug",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/637",
    "body": "**Describe the bug**\r\n\r\nwont install on WSL\r\n\r\n**To Reproduce**\r\n\r\n- fresh git clone\r\n- nvm use 23.3.0\r\n- pnpm i \r\n- pnpm build\r\n- env is copied\r\n- pnpm start\r\n\r\n\"/eliza/packages/plugin-solana/dist/index.js:12\r\n    throw Error('Dynamic require of \"' + x + '\" is not supported');\r\n          ^\r\n\r\nError: Dynamic require of \"util\" is not supported\"\r\n\r\n**Expected behavior**\r\n\r\nshould run\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/637/comments",
    "author": "0x1337z",
    "comments": [
      {
        "user": "odilitime",
        "created_at": "2024-11-28T05:32:50Z",
        "body": "Main isn't stable, use a tag"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2024-12-28T18:31:16Z",
        "body": "This issue has been automatically marked as stale due to inactivity."
      }
    ]
  },
  {
    "number": 631,
    "title": "Wrong argument correction on trustScoreProvider.ts",
    "created_at": "2024-11-27T16:09:35Z",
    "closed_at": "2024-11-28T01:00:16Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/631",
    "body": "SimulationSellingService accepts second param as turstScoreDb, not TokenProvider\r\n\r\n# Risks\r\n\r\nLARGE, It's not able to build the package\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\nSolve a bug.\r\n\r\n## What kind of change is this?\r\n\r\nBug fixes (non-breaking change which fixes an issue)\r\n\r\n# Documentation changes needed?\r\nNo need.\r\n\r\n## Discord username\r\n0xdexplorer\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/631/comments",
    "author": "thedexplorer",
    "comments": [
      {
        "user": "fabianhug",
        "created_at": "2024-11-28T01:00:16Z",
        "body": "Sorry, I didn't see your PR. This has just been fixed by #636. I'll adjust my check flow to reward early contributions from now on; my bad"
      }
    ]
  },
  {
    "number": 618,
    "title": "fix: adds agent character.ts file back",
    "created_at": "2024-11-26T20:46:05Z",
    "closed_at": "2024-11-27T15:16:26Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/618",
    "body": null,
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/618/comments",
    "author": "bmgalego",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-11-27T01:19:25Z",
        "body": "Why do we want this? I removed it because I felt like it was unnecessary, but open to ideas here"
      }
    ]
  },
  {
    "number": 609,
    "title": "fix: knowledge module exporting process",
    "created_at": "2024-11-26T06:03:32Z",
    "closed_at": "2024-11-26T06:22:12Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/609",
    "body": "knowledge module is exporting process insteand of preprocess",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/609/comments",
    "author": "bmgalego",
    "comments": [
      {
        "user": "shakkernerd",
        "created_at": "2024-11-26T06:22:05Z",
        "body": "Wow, good one!"
      }
    ]
  },
  {
    "number": 607,
    "title": "fix: use correct getCachedEmbeddings query_field_sub_name",
    "created_at": "2024-11-26T05:35:05Z",
    "closed_at": "2024-11-26T05:38:14Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/607",
    "body": "to get cached embeddings the db adapter looks for the sub_name of the memory content and the correct key is text not content.\r\n\r\n```typescript\r\ninterface Content {\r\n    /** The main text content */\r\n    text: string;\r\n\r\n    /** Optional action associated with the message */\r\n    action?: string;\r\n\r\n    /** Optional source/origin of the content */\r\n    source?: string;\r\n\r\n    /** URL of the original message/post (e.g. tweet URL, Discord message link) */\r\n    url?: string;\r\n\r\n    /** UUID of parent message if this is a reply/thread */\r\n    inReplyTo?: UUID;\r\n\r\n    /** Array of media attachments */\r\n    attachments?: Media[];\r\n\r\n    /** Additional dynamic properties */\r\n    [key: string]: unknown;\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/607/comments",
    "author": "bmgalego",
    "comments": [
      {
        "user": "shakkernerd",
        "created_at": "2024-11-26T05:37:54Z",
        "body": "Nice catch."
      }
    ]
  },
  {
    "number": 605,
    "title": "fix: agent DirectClient is not a type",
    "created_at": "2024-11-26T04:07:22Z",
    "closed_at": "2024-11-26T05:07:23Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/605",
    "body": "# Risks\r\n\r\nLow\r\n\r\n# Background\r\n\r\n```\r\n233 export function createAgent(\r\n                    ~~~~~~~~~~~\r\n\r\nsrc/index.ts:279:63 - error TS2749: 'DirectClient' refers to a value, but is being used as a type here. Did you mean 'typeof DirectClient'?\r\n\r\n279 async function startAgent(character: Character, directClient: DirectClient) {\r\n                                                                  ~~~~~~~~~~~~\r\n\r\nsrc/index.ts:329:57 - error TS2749: 'DirectClient' refers to a value, but is being used as a type here. Did you mean 'typeof DirectClient'?\r\n\r\n329             await startAgent(character, directClient as DirectClient);\r\n                                                            ~~~~~~~~~~~~\r\n```\r\n\r\n## What does this PR do?\r\n\r\nFixes `pnpm run dev` when sometimes you get the error above.\r\n\r\n## What kind of change is this?\r\n\r\nBug fixes (non-breaking change which fixes an issue)\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\nWant dev tools that work as advertised\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes do not require a change to the project documentation.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/605/comments",
    "author": "odilitime",
    "comments": [
      {
        "user": "monilpat",
        "created_at": "2024-11-26T05:06:41Z",
        "body": "LGTM!"
      }
    ]
  },
  {
    "number": 592,
    "title": "API Cost Tracking",
    "created_at": "2024-11-25T16:49:27Z",
    "closed_at": "2025-01-04T18:31:36Z",
    "labels": [
      "enhancement",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/592",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nAs a builder I would like to know how using different models impacts my costs.\r\n\r\n**Describe the solution you'd like**\r\n\r\nA clear way to track agent costs relative to the requests they are making and storing that information to be easily accessible.\r\n\r\n**Describe alternatives you've considered**\r\n\r\nForking\r\n\r\n**Additional context**\r\n\r\nAs an agent developer, I want to know how switching between models impacts my costs as well as if I were to build a SaaS model on top of Eliza, how can I know the individual costs of my agents.\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/592/comments",
    "author": "rckprtr",
    "comments": [
      {
        "user": "odilitime",
        "created_at": "2024-11-26T20:02:48Z",
        "body": "I'm working with vivoidos (on discord) discussing ideas around this"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2024-12-28T18:31:17Z",
        "body": "This issue has been automatically marked as stale due to inactivity."
      }
    ]
  },
  {
    "number": 579,
    "title": "Turnkey Integration",
    "created_at": "2024-11-25T04:34:00Z",
    "closed_at": "2025-01-04T18:31:37Z",
    "labels": [
      "enhancement",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/579",
    "body": "We need integration with turnkey so that the private key is abstracted from the characters",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/579/comments",
    "author": "lalalune",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2024-12-28T18:31:19Z",
        "body": "This issue has been automatically marked as stale due to inactivity."
      }
    ]
  },
  {
    "number": 557,
    "title": "fix: postgres",
    "created_at": "2024-11-24T03:59:51Z",
    "closed_at": "2024-11-25T04:18:05Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/557",
    "body": "- fixes type issue with postgres",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/557/comments",
    "author": "ponderingdemocritus",
    "comments": [
      {
        "user": "shakkernerd",
        "created_at": "2024-11-25T04:17:56Z",
        "body": "I will go ahead and merge this in now."
      }
    ]
  },
  {
    "number": 506,
    "title": "Non node.js environments have issues building (workers for instance)",
    "created_at": "2024-11-22T04:07:31Z",
    "closed_at": "2024-11-29T22:33:44Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/506",
    "body": "**Describe the bug**\r\n\r\n<!-- A clear and concise description of what the bug is. -->\r\n\r\n**To Reproduce**\r\n\r\n<!-- Steps to reproduce the behavior. -->\r\n\r\n**Expected behavior**\r\n\r\n<!-- A clear and concise description of what you expected to happen. -->\r\n\r\n**Screenshots**\r\n\r\n<!-- If applicable, add screenshots to help explain your problem. -->\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context about the problem here. -->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/506/comments",
    "author": "antpb",
    "comments": [
      {
        "user": "yodamaster726",
        "created_at": "2024-11-22T06:25:45Z",
        "body": "this seems to be a dup of #507 \r\n"
      },
      {
        "user": "monilpat",
        "created_at": "2024-11-29T19:55:52Z",
        "body": "Can close :)"
      }
    ]
  },
  {
    "number": 492,
    "title": "Run using Bun.sh",
    "created_at": "2024-11-21T21:16:35Z",
    "closed_at": "2024-11-22T03:31:59Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/492",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\n<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->\r\n\r\n**Describe the solution you'd like**\r\n\r\n<!-- A clear and concise description of what you want to happen. -->\r\n\r\n**Describe alternatives you've considered**\r\n\r\n<!-- A clear and concise description of any alternative solutions or features you've considered. -->\r\n\r\n**Additional context**\r\n\r\n<!-- Add any other context or screenshots about the feature request here. -->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/492/comments",
    "author": "liamzebedee",
    "comments": [
      {
        "user": "sirkitree",
        "created_at": "2024-11-22T03:31:59Z",
        "body": "no context"
      }
    ]
  },
  {
    "number": 488,
    "title": "fix: added missing packages to tsup configs' externals",
    "created_at": "2024-11-21T13:55:31Z",
    "closed_at": "2024-11-21T16:39:19Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/488",
    "body": "# Relates to:\r\n\r\npreparing the project with `sh scripts/start.sh`\r\n\r\n# Risks\r\n\r\nLOW\r\nI don't foresee any risks\r\n\r\n# Background\r\n\r\nWhen I run `sh scripts/start.sh`, I get errors about some packages not being able to be resolved, this seems to be the solution.\r\n\r\n## What does this PR do?\r\n\r\nAdds the missing packages to tsup confgs' externals so that they can be resolved.\r\n\r\n## What kind of change is this?\r\n\r\nBug fix\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\nIssue with starting to work with the codebase\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes do not require a change to the project documentation.\r\n\r\n# Testing\r\n\r\nI ran `sh scripts/start.sh` until it didn't produce errors in the building stage.\r\n\r\n## Where should a reviewer start?\r\n\r\nThis is pretty small and manageable.\r\n\r\n## Detailed testing steps\r\n\r\nNone, automtated tests are fine.\r\n\r\n## Discord username\r\nmassivefermion",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/488/comments",
    "author": "massivefermion",
    "comments": [
      {
        "user": "monilpat",
        "created_at": "2024-11-21T16:04:25Z",
        "body": "LGTM!"
      }
    ]
  },
  {
    "number": 476,
    "title": "feat: Added TWITTER_COOKIE example on quickstart.md",
    "created_at": "2024-11-21T05:34:09Z",
    "closed_at": "2024-11-21T20:22:33Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/476",
    "body": "# Background\n\n## What does this PR do?\n\nFor the Twitter-related `.env` file, `TWITTER_COOKIES` requires a specific JSON format with relevant information. Without an example, new developers may have difficulty configuring the Twitter environment.\n\n## What kind of change is this?\n\nAdded an example for `TWITTER_COOKIES`.\n\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/476/comments",
    "author": "haeunchin",
    "comments": [
      {
        "user": "ponderingdemocritus",
        "created_at": "2024-11-21T09:21:32Z",
        "body": "Twitter cookies should be optional, they are not actually needed unless you have cookies already"
      },
      {
        "user": "monilpat",
        "created_at": "2024-11-21T18:39:16Z",
        "body": "LGTM! Feel free to to title it docs: title "
      }
    ]
  },
  {
    "number": 471,
    "title": "State should use a cosine similarity of messages in the DB ",
    "created_at": "2024-11-21T02:17:52Z",
    "closed_at": "2024-12-02T09:29:09Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/issues/471",
    "body": "Instead of getting all recent messages to generate the state, a similarity should be done on the vectors. \r\n\r\nThis way we only get relevant messages in the current state",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/471/comments",
    "author": "edisontim",
    "comments": [
      {
        "user": "alextitonis",
        "created_at": "2024-11-23T10:15:24Z",
        "body": "Actually an amount of latest, like 5 and cosine, would work the best i think"
      }
    ]
  },
  {
    "number": 463,
    "title": "docs: Create best-practices.md documentation",
    "created_at": "2024-11-20T22:45:16Z",
    "closed_at": "2024-11-21T18:23:48Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/463",
    "body": "# Relates to:\r\n\r\nEliza community’s best practices documentation\r\n\r\n<!-- LINK TO ISSUE OR TICKET -->\r\n\r\n# Risks\r\n\r\nLow risk. This PR focuses on updating documentation to reflect the latest best practices for submitting pull requests, including pre-review with AI and template usage. No functional code changes are involved.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the contributing guidelines to include new best practices for pull request submissions. It adds a recommendation for conducting pre-reviews using AI tools, elaborates on the use of PR templates, and emphasizes the importance of squashing commits.\r\n\r\n## What kind of change is this?\r\n\r\n- **Documentation**: This PR add the best practices documentation to streamline the contribution process and make it more consistent for all team members.\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require an update to the project documentation. The best practices guidelines have been added to include instructions about using AI tools for pre-review, PR templates, and squashing commits. All updates have been made accordingly.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nReview the updated sections on \"Pre-Review with AI,\" \"Pull Request Templates,\" and \"Squashing Commits\" in the best-practices documentation.\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/463/comments",
    "author": "snobbee",
    "comments": [
      {
        "user": "snobbee",
        "created_at": "2024-11-21T12:08:24Z",
        "body": "@monilpat here is the result of the command `pnpm test`:\r\n\r\n```\r\n$ pnpm test\r\n\r\n> eliza@ test /tmp/eliza\r\n> bash ./scripts/test.sh\r\n\r\nTesting package: plugin-video-generation\r\nNo test script found in plugin-video-generation, skipping tests...\r\nTesting package: client-auto\r\nNo test script found in client-auto, skipping tests...\r\nTesting package: plugin-node\r\nNo test script found in plugin-node, skipping tests...\r\nTesting package: core\r\nnpm error A complete log of this run can be found in: /tmp/.npm/_logs/2024-11-21T12_01_12_966Z-debug-0.log\r\nRunning tests for package: core\r\n\r\n> @ai16z/eliza@0.1.3 test\r\n> vitest run\r\n\r\n\r\n RUN  v2.1.5 /tmp/eliza/packages/core\r\n\r\nstdout | src/tests/token.test.ts\r\nCurrent directory: /tmp/eliza/packages/core/src/test_resources\r\nTrying to load env from: /tmp/eliza/packages/core/.env.test\r\n\r\nstdout | src/tests/providers.test.ts\r\nCurrent directory: /tmp/eliza/packages/core/src/test_resources\r\nTrying to load env from: /tmp/eliza/packages/core/.env.test\r\n\r\nstdout | src/tests/defaultCharacters.test.ts\r\nCurrent directory: /tmp/eliza/packages/core/src/test_resources\r\nTrying to load env from: /tmp/eliza/packages/core/.env.test\r\n\r\nstdout | src/tests/messages.test.ts\r\nCurrent directory: /tmp/eliza/packages/core/src/test_resources\r\nTrying to load env from: /tmp/eliza/packages/core/.env.test\r\n\r\nstdout | src/tests/evaluators.test.ts\r\nCurrent directory: /tmp/eliza/packages/core/src/test_resources\r\nTrying to load env from: /tmp/eliza/packages/core/.env.test\r\n\r\nstdout | src/tests/videoGeneration.test.ts\r\nCurrent directory: /tmp/eliza/packages/core/src/test_resources\r\nTrying to load env from: /tmp/eliza/packages/core/.env.test\r\n\r\nstdout | src/tests/database.test.ts\r\nCurrent directory: /tmp/eliza/packages/core/src/test_resources\r\nTrying to load env from: /tmp/eliza/packages/core/.env.test\r\n\r\nstdout | src/tests/goals.test.ts\r\nCurrent directory: /tmp/eliza/packages/core/src/test_resources\r\nTrying to load env from: /tmp/eliza/packages/core/.env.test\r\n\r\nstdout | src/tests/models.test.ts\r\nCurrent directory: /tmp/eliza/packages/core/src/test_resources\r\nTrying to load env from: /tmp/eliza/packages/core/.env.test\r\n\r\nstdout | src/tests/relationships.test.ts\r\nCurrent directory: /tmp/eliza/packages/core/src/test_resources\r\nTrying to load env from: /tmp/eliza/packages/core/.env.test\r\n\r\nstdout | src/tests/posts.test.ts\r\nCurrent directory: /tmp/eliza/packages/core/src/test_resources\r\nTrying to load env from: /tmp/eliza/packages/core/.env.test\r\n\r\nstdout | src/tests/env.test.ts\r\nCurrent directory: /tmp/eliza/packages/core/src/test_resources\r\nTrying to load env from: /tmp/eliza/packages/core/.env.test\r\n\r\nstdout | src/tests/env.test.ts > Environment Setup > should verify .env.test file exists\r\nCurrent working directory: /tmp/eliza/packages/core\r\n__dirname: /tmp/eliza/packages/core/src/tests\r\nPath /tmp/eliza/packages/core/.env.test exists: true\r\nPath /tmp/eliza/packages/core/packages/core/.env.test exists: false\r\nPath /tmp/eliza/packages/core/.env.test exists: true\r\nPath /tmp/eliza/packages/core/src/.env.test exists: false\r\nPath /tmp/eliza/packages/core/src/tests/.env.test exists: false\r\n\r\n ✓ src/tests/database.test.ts (8)\r\n ✓ src/tests/goals.test.ts (8)\r\n ✓ src/tests/database.test.ts (8)\r\n ✓ src/tests/defaultCharacters.test.ts (11)\r\n ✓ src/tests/env.test.ts (1)\r\n ✓ src/tests/evaluators.test.ts (4)\r\n ✓ src/tests/goals.test.ts (8)\r\n ✓ src/tests/messages.test.ts (6)\r\n ✓ src/tests/models.test.ts (7)\r\n ✓ src/tests/posts.test.ts (3)\r\n ✓ src/tests/providers.test.ts (5)\r\n ✓ src/tests/relationships.test.ts (6)\r\n ❯ src/tests/token.test.ts (0)\r\n ❯ src/tests/videoGeneration.test.ts (0)\r\n\r\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯ Failed Suites 2 ⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯\r\n\r\n FAIL  src/tests/token.test.ts [ src/tests/token.test.ts ]\r\nError: Failed to load url @ai16z/adapter-sqlite (resolved id: @ai16z/adapter-sqlite) in /tmp/eliza/packages/core/src/test_resources/createRuntime.ts. Does the file exist?\r\n ❯ loadAndTransform ../../node_modules/vite/dist/node/chunks/dep-CB_7IfJ-.js:51920:17\r\n\r\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/2]⎯\r\n\r\n FAIL  src/tests/videoGeneration.test.ts [ src/tests/videoGeneration.test.ts ]\r\nError: [vitest] No \"default\" export is defined on the \"fs\" mock. Did you forget to return it from \"vi.mock\"?\r\nIf you need to partially mock a module, you can use \"importOriginal\" helper inside:\r\n\r\nvi.mock(import(\"fs\"), async (importOriginal) => {\r\n  const actual = await importOriginal()\r\n  return {\r\n    ...actual,\r\n    // your mocked methods\r\n  }\r\n})\r\n\r\n ❯ findNearestEnvFile src/settings.ts:36:13\r\n     34|         const envPath = path.join(currentDir, \".env\");\r\n     35| \r\n     36|         if (fs.existsSync(envPath)) {\r\n       |             ^\r\n     37|             return envPath;\r\n     38|         }\r\n ❯ loadEnvConfig src/settings.ts:70:21\r\n ❯ src/settings.ts:110:61\r\n\r\n⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/2]⎯\r\n\r\n Test Files  2 failed | 10 passed (12)\r\n      Tests  59 passed (59)\r\n   Start at  13:01:13\r\n   Duration  471ms (transform 493ms, setup 151ms, collect 569ms, tests 29ms, environment 1ms, prepare 757ms)\r\n\r\nTests failed for core\r\nTesting package: plugin-solana\r\nNo test script found in plugin-solana, skipping tests...\r\nTesting package: adapter-sqlite\r\nNo test script found in adapter-sqlite, skipping tests...\r\nTesting package: plugin-trustdb\r\nnpm error A complete log of this run can be found in: /tmp/.npm/_logs/2024-11-21T12_01_13_920Z-debug-0.log\r\nRunning tests for package: plugin-trustdb\r\n\r\n> @ai16z/plugin-trustdb@0.1.3 test\r\n> vitest run\r\n\r\n\r\n RUN  v2.1.5 /tmp/eliza/packages/plugin-trustdb\r\n\r\ninclude: **/*.{test,spec}.?(c|m)[jt]s?(x)\r\nexclude:  **/node_modules/**, **/dist/**, **/cypress/**, **/.{idea,git,cache,output,temp}/**, **/{karma,rollup,webpack,vite,vitest,jest,ava,babel,nyc,cypress,tsup,build,eslint,prettier}.config.*\r\n\r\nNo test files found, exiting with code 1\r\nTests failed for plugin-trustdb\r\nTesting package: create-eliza-app\r\nNo test script found in create-eliza-app, skipping tests...\r\nTesting package: plugin-starknet\r\nnpm error A complete log of this run can be found in: /tmp/.npm/_logs/2024-11-21T12_01_14_305Z-debug-0.log\r\nRunning tests for package: plugin-starknet\r\n\r\n> @ai16z/plugin-starknet@0.1.3 test\r\n> vitest run\r\n\r\n\r\n RUN  v2.1.5 /tmp/eliza/packages/plugin-starknet\r\n\r\ninclude: **/*.{test,spec}.?(c|m)[jt]s?(x)\r\nexclude:  **/node_modules/**, **/dist/**, **/cypress/**, **/.{idea,git,cache,output,temp}/**, **/{karma,rollup,webpack,vite,vitest,jest,ava,babel,nyc,cypress,tsup,build,eslint,prettier}.config.*\r\n\r\nNo test files found, exiting with code 1\r\nTests failed for plugin-starknet\r\nTesting package: adapter-sqljs\r\nNo test script found in adapter-sqljs, skipping tests...\r\nTesting package: plugin-bootstrap\r\nNo test script found in plugin-bootstrap, skipping tests...\r\nTesting package: client-telegram\r\nNo test script found in client-telegram, skipping tests...\r\nTesting package: client-discord\r\nNo test script found in client-discord, skipping tests...\r\nTesting package: client-direct\r\nNo test script found in client-direct, skipping tests...\r\nTesting package: client-twitter\r\nNo test script found in client-twitter, skipping tests...\r\nTesting package: adapter-postgres\r\nNo test script found in adapter-postgres, skipping tests...\r\nTesting package: plugin-image-generation\r\nNo test script found in plugin-image-generation, skipping tests...\r\nTesting package: adapter-supabase\r\nNo test script found in adapter-supabase, skipping tests...\r\nTest process completed.😎\r\n```"
      },
      {
        "user": "monilpat",
        "created_at": "2024-11-21T15:47:56Z",
        "body": "Can you create issues for the tests that failed ? Thanks "
      }
    ]
  },
  {
    "number": 460,
    "title": "fix: Add missing fuzzystrmatch extension for levenshtein() method to postgresql schema.sql definition",
    "created_at": "2024-11-20T20:33:00Z",
    "closed_at": "2024-11-20T23:40:44Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/460",
    "body": "# Relates to:\r\n*No specific issue linked - database schema enhancement*\r\n\r\n# Risks\r\nLow - Adding a PostgreSQL extension that is commonly used for fuzzy string matching. This is a database schema change but only adds functionality without modifying existing structures.\r\n\r\n# Background\r\n## What does this PR do?\r\nAdds the `fuzzystrmatch` PostgreSQL extension to the database schema. This extension provides several functions for determining similarities between strings and fuzzy string matching.\r\n\r\n## What kind of change is this?\r\nFeatures (non-breaking change which adds functionality)\r\n\r\n# Documentation changes needed?\r\nMy changes do not require a change to the project documentation, as this is an infrastructure-level change that doesn't affect application interfaces.\r\n\r\n# Testing\r\n## Where should a reviewer start?\r\n1. Review the schema.sql file in packages/adapter-postgres\r\n2. Verify the fuzzystrmatch extension installation in a test database\r\n\r\n## Detailed testing steps\r\n1. Create a fresh test database\r\n2. Run the schema.sql migration\r\n3. Verify the fuzzystrmatch extension is installed by running:\r\n```sql\r\nSELECT * FROM pg_extension WHERE extname = 'fuzzystrmatch';\r\n```\r\n\r\n# Deploy Notes\r\n## Database changes\r\n- Requires PostgreSQL with fuzzystrmatch extension available\r\n- Schema change: `CREATE EXTENSION IF NOT EXISTS fuzzystrmatch;`\r\n\r\n## Deployment instructions\r\nStandard deployment process applies:\r\n1. Ensure the PostgreSQL server has fuzzystrmatch extension available\r\n2. Run schema migrations as normal",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/460/comments",
    "author": "martincik",
    "comments": [
      {
        "user": "monilpat",
        "created_at": "2024-11-20T21:08:22Z",
        "body": "Thanks for the great description this looks great LGTM!"
      }
    ]
  },
  {
    "number": 457,
    "title": "Non-Merge Access Users Cannot View Specific Merge Conflicts in Pull Requests They Review",
    "created_at": "2024-11-20T16:50:34Z",
    "closed_at": "2025-01-04T18:31:39Z",
    "labels": [
      "bug",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/457",
    "body": "**Describe the bug**\r\n\r\nUsers without merge access are unable to view specific merge conflicts in pull requests. This limitation prevents them from resolving or contributing to conflict resolution effectively, as they cannot see the conflicting files or lines of code.\r\n\r\n**To Reproduce**\r\n\r\n1. Create a pull request with merge conflicts.\r\n2. Ensure that the user reviewing the PR does not have merge access.\r\n3. Attempt to view the specific merge conflicts as the non-merge access user.\r\n\r\n**Expected behavior**\r\n\r\nUsers without merge access should be able to view the specific merge conflicts within the pull request, including the files and lines of code in conflict, to assist in resolving the issue.\r\n\r\n**Screenshots**\r\n\r\n<!-- Add screenshots of the PR interface showing the issue for users without merge access, highlighting the lack of visibility into merge conflicts. -->\r\n\r\n**Additional context**\r\n\r\nThis limitation may hinder collaboration and delay the resolution of merge conflicts, especially in teams where code reviews and conflict resolutions involve contributors without merge privileges.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/457/comments",
    "author": "monilpat",
    "comments": [
      {
        "user": "sirkitree",
        "created_at": "2024-11-21T16:44:26Z",
        "body": "Any suggestions on how to fix this? Is there a permission or something in gh we can update?"
      },
      {
        "user": "monilpat",
        "created_at": "2024-11-21T18:38:08Z",
        "body": "Yeah for sure there has to be some settings in the actions yaml files that configures this, will have a look, just wanted to flag that either way a maintainer will need to address this! Thanks so much!"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2024-12-28T18:31:20Z",
        "body": "This issue has been automatically marked as stale due to inactivity."
      }
    ]
  },
  {
    "number": 454,
    "title": "fix: don't reply to tweets older than 5 days",
    "created_at": "2024-11-20T15:32:56Z",
    "closed_at": "2024-11-29T12:04:40Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/454",
    "body": "<!-- Use this template by filling in information and copy and pasting relevant items out of the html comments. -->\r\n\r\n# Relates to:\r\n\r\n<!-- LINK TO ISSUE OR TICKET -->\r\n\r\n<!-- This risks section is to be filled out before final review and merge. -->\r\n\r\n# Risks\r\n\r\n<!--\r\nLow, medium, large. List what kind of risks, and what could be effected.\r\n-->\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\n## What kind of change is this?\r\n\r\n<!--\r\nBug fixes (non-breaking change which fixes an issue)\r\nImprovements (misc. changes to existing features)\r\nFeatures (non-breaking change which adds functionality)\r\nUpdates (new versions of included code)\r\n-->\r\n\r\n<!-- This \"Why\" section is most relevant if there is no linked issue explaining why. If there is a related issue it might make sense to skip this why section. -->\r\n<!--\r\n## Why are we doing this? Any context or related work?\r\n-->\r\n\r\n# Documentation changes needed?\r\n\r\n<!--\r\nMy changes do not require a change to the project documentation.\r\nMy changes require a change to the project documentation.\r\nIf a docs change is needed: I have updated the documentation accordingly.\r\n-->\r\n\r\n<!-- Please show how you tested the PR. This will really help if the PR needs to be retested, and probably help the PR get merged quicker. -->\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\n## Detailed testing steps\r\n\r\n<!--\r\nNone, automtated tests are fine.\r\n-->\r\n\r\n<!--\r\n- As [anon/admin], go to [link]\r\n  - [do action]\r\n  - verify [result]\r\n-->\r\n\r\n<!-- If there is a UI change, please include before and after screenshots or videos. This will speed up PRs being merged. It is extra nice to annotate screenshots with arrows or boxes pointing out the differences. -->\r\n<!--\r\n## Screenshots\r\n### Before\r\n### After\r\n-->\r\n\r\n<!-- If there is anything about the deploy, please make a note. -->\r\n<!--\r\n# Deploy Notes\r\n-->\r\n\r\n<!--  Copy and paste commandline output. -->\r\n<!--\r\n## Database changes\r\n-->\r\n\r\n<!--  If there is something more than the automated steps, please specifiy deploy instructions. -->\r\n<!--\r\n## Deployment instructions\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/454/comments",
    "author": "liamzebedee",
    "comments": [
      {
        "user": "monilpat",
        "created_at": "2024-11-20T16:22:42Z",
        "body": "Also please resolve the conflicts and fill in the test plan :) "
      },
      {
        "user": "ponderingdemocritus",
        "created_at": "2024-11-21T09:25:39Z",
        "body": "solid - fix issues then we can merge"
      },
      {
        "user": "lalalune",
        "created_at": "2024-11-29T12:04:40Z",
        "body": "This got overwritten by another branch so closing"
      }
    ]
  },
  {
    "number": 450,
    "title": "feat: replace `unruggable-core` with `unruggable-sdk`",
    "created_at": "2024-11-20T11:21:07Z",
    "closed_at": "2024-12-26T06:55:15Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/450",
    "body": "## Description\r\nThis PR proposes to replace the current implementation using `unruggable-core` with the newly published `unruggable-sdk` package. The SDK provides a more developer-friendly experience with:\r\n\r\n- Improved TypeScript support\r\n- More concise and readable API\r\n- Maintained wrapper around the core package functionality\r\n\r\n## Changes\r\n- Replace `unruggable-core` dependency with `unruggable-sdk`\r\n- Update relevant implementations to use the new SDK interface\r\n- Update types where necessary\r\n\r\n## Benefits\r\n- Better developer experience through improved typing\r\n- More maintainable code through cleaner abstractions\r\n- Same core functionality with a more ergonomic interface",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/450/comments",
    "author": "remiroyc",
    "comments": [
      {
        "user": "ponderingdemocritus",
        "created_at": "2024-11-21T09:22:04Z",
        "body": "looks good - fix conflicts then lets ship"
      }
    ]
  },
  {
    "number": 446,
    "title": "fix: ignored modelEndpointOverride in generation",
    "created_at": "2024-11-20T10:18:16Z",
    "closed_at": "2024-11-21T09:26:26Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/446",
    "body": "# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR fixes the issue of OpenAi object initialization which ignores the `modelEndpointOverride` optioin of the character\r\n\r\n## What kind of change is this?\r\n\r\nBug fixes (non-breaking change which fixes an issue)\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/446/comments",
    "author": "darwintree",
    "comments": [
      {
        "user": "ponderingdemocritus",
        "created_at": "2024-11-20T10:38:46Z",
        "body": "will this break if it is nul?"
      },
      {
        "user": "snobbee",
        "created_at": "2024-11-20T14:40:56Z",
        "body": "Thanks @darwintree for addressing the issue with OpenAI object initialization and ensuring the `modelEndpointOverride` is respected. Could you please add a test to validate the changes made in this PR? Specifically:\r\n\r\n1. A test to ensure that the `baseURL` is properly set when `modelEndpointOverride` is provided.\r\n2. A test to verify that the functionality does not break when `modelEndpointOverride` (or `baseURL`) is `null` or undefined.\r\n\r\nThis will help confirm that the changes work as expected and ensure robustness. Let me know if you need further clarification or help setting up the test!"
      },
      {
        "user": "darwintree",
        "created_at": "2024-11-21T01:56:09Z",
        "body": "> will this break if it is nul?\r\n\r\nThanks, I ignored the situation that it could be null. A fix is commited to resolve the issue"
      },
      {
        "user": "darwintree",
        "created_at": "2024-11-21T01:59:22Z",
        "body": "> Thanks @darwintree for addressing the issue with OpenAI object initialization and ensuring the `modelEndpointOverride` is respected. Could you please add a test to validate the changes made in this PR? Specifically:\r\n> \r\n> 1. A test to ensure that the `baseURL` is properly set when `modelEndpointOverride` is provided.\r\n> 2. A test to verify that the functionality does not break when `modelEndpointOverride` (or `baseURL`) is `null` or undefined.\r\n> \r\n> This will help confirm that the changes work as expected and ensure robustness. Let me know if you need further clarification or help setting up the test!\r\n\r\nHi, would know how to setup and run the test. Thanks"
      }
    ]
  },
  {
    "number": 442,
    "title": "docs: Fix my name in stream notes",
    "created_at": "2024-11-20T08:46:32Z",
    "closed_at": "2024-11-20T19:08:23Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/442",
    "body": "\r\n# Risks\r\n\r\nNone\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nFix my name\r\n\r\n## What kind of change is this?\r\n\r\nDocumentation / Archive correction\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\nautotranslate got it really wrong\r\n\r\n# Documentation changes needed?\r\n\r\nIf a docs change is needed: I have updated the documentation accordingly.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/442/comments",
    "author": "odilitime",
    "comments": [
      {
        "user": "snobbee",
        "created_at": "2024-11-20T14:48:31Z",
        "body": "@odilitime can you provide more context about those changes, you seem to have replaced the occurence `Max` by your handle, can you clarify that part, and is there a way to verify that those changes are accurate?"
      }
    ]
  },
  {
    "number": 439,
    "title": "Feat: Hot reload json",
    "created_at": "2024-11-20T07:43:07Z",
    "closed_at": "2025-01-04T18:31:39Z",
    "labels": [
      "enhancement",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/439",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nBe able to reload a character json without restarting\r\n\r\n**Describe the solution you'd like**\r\n\r\nREST API?\r\n\r\nSIGHUP to reload all characters?\r\nSIGUSR1 to reload all characters as soon as they're done with their current action?\r\n\r\n**Describe alternatives you've considered**\r\n\r\nTBD\r\n\r\n**Additional context**\r\n\r\nCredit to ICJR on discord for the idea\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/439/comments",
    "author": "odilitime",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2024-12-28T18:31:21Z",
        "body": "This issue has been automatically marked as stale due to inactivity."
      }
    ]
  },
  {
    "number": 438,
    "title": "Feature: when getting style guidelines should always add all of them to context",
    "created_at": "2024-11-20T07:16:21Z",
    "closed_at": "2025-01-04T18:31:40Z",
    "labels": [
      "enhancement",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/438",
    "body": "when adding postDirections on chatDirections\r\nshould grab all of the guidelines to follow\r\nthis is so it does not ignore requests that are extremely important to follow for how the character behaves\r\nreally instead of random for the character file the agent should be able to select what it puts into its context as part of the shouldRespond logic or some other way \r\n\r\nin runtime.ts\r\n```\r\n            postDirections:\r\n                this.character?.style?.all?.length > 0 ||\r\n                this.character?.style?.post.length > 0\r\n                    ? addHeader(\r\n                            \"# Post Directions for \" + this.character.name,\r\n                            (() => {\r\n                                const all = this.character?.style?.all || [];\r\n                                const post = this.character?.style?.post || [];\r\n                                const shuffled = [...all, ...post].sort(\r\n                                    () => 0.5 - Math.random()\r\n                                );\r\n                                return shuffled\r\n                                    .slice(0, conversationLength / 2)\r\n                                    .join(\"\\n\");\r\n                            })()\r\n                        )\r\n                    : \"\",*\r\n```\r\n>\r\n```\r\n            postDirections:\r\n                this.character?.style?.all?.length > 0 ||\r\n                this.character?.style?.post.length > 0\r\n                    ? addHeader(\r\n                        \"# Post Directions for \" + this.character.name,\r\n                        (() => {\r\n                            const all = this.character?.style?.all || [];\r\n                            const post = this.character?.style?.post || [];\r\n                            return [...all, ...post].join(\"\\n\");\r\n                        })()\r\n                    )\r\n                    : \"\",\r\n\r\n```",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/438/comments",
    "author": "o-on-x",
    "comments": [
      {
        "user": "odilitime",
        "created_at": "2024-11-20T07:27:59Z",
        "body": "how about 2 rules settings: \"always respect\", \"maybe respect\" ? just off load it to the character designer. We should also have platform (discord, x/twitter, telegram, etc)  specific rules since hashtag can be specific to x/twitter. And then maybe a matrix of the two: always_discord, maybe_discord?\r\n\r\nwe can instruct people to keep the always to be very small and light as it affects all contexts\r\n\r\nwe could also do a follow up prompt asking if the output followed the rules"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2024-12-28T18:31:23Z",
        "body": "This issue has been automatically marked as stale due to inactivity."
      }
    ]
  },
  {
    "number": 430,
    "title": "docs: Update contributing.md to incorporate Contribution Guidelines",
    "created_at": "2024-11-20T03:44:03Z",
    "closed_at": "2024-11-20T04:58:18Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/430",
    "body": "# Relates to:\r\n\r\nNo specific issue linked. Adding PR templates as part of process improvements.\r\n\r\n# Risks\r\n\r\nLow: Adding templates and updating documentation does not impact code or production systems.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR updates the `CONTRIBUTING.md` file to include details about the new PR templates. It informs contributors about the location of the templates and how to use them when creating a pull request.\r\n\r\n## What kind of change is this?\r\n\r\n- Documentation update (non-breaking change).\r\n\r\n## Why are we doing this? Any context or related work?\r\n\r\nTo improve contributor onboarding and ensure a standardized process for submitting pull requests.\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes require a change to the project documentation.  \r\nI have updated the `CONTRIBUTING.md` file to reflect the new templates.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nReview the changes made to the `CONTRIBUTING.md` file. Check that the instructions are clear and accurate.\r\n\r\n## Detailed testing steps\r\n\r\n1. Navigate to the `CONTRIBUTING.md` file.\r\n2. Confirm the added sections about PR templates.\r\n3. Verify that the file points to the correct location of the PR templates in the repository.\r\n\r\n---",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/430/comments",
    "author": "monilpat",
    "comments": [
      {
        "user": "sirkitree",
        "created_at": "2024-11-20T04:58:15Z",
        "body": "this is great, thank you!"
      }
    ]
  },
  {
    "number": 412,
    "title": "feat: services",
    "created_at": "2024-11-19T03:33:09Z",
    "closed_at": "2024-11-19T19:31:41Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/412",
    "body": "There was a bug within the services singelton pattern that cause the incorrect serivce to be called when multiple ones were used.\r\n\r\nThis changes the architecture so this doesn't happen.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/412/comments",
    "author": "ponderingdemocritus",
    "comments": [
      {
        "user": "monilpat",
        "created_at": "2024-11-19T03:59:34Z",
        "body": "Great work here! Feel free to a quick TLDR using the PR template if you can on the issue and any testing plan thank you so much! "
      },
      {
        "user": "ponderingdemocritus",
        "created_at": "2024-11-19T04:22:04Z",
        "body": "found some issues still - working on them\r\n"
      }
    ]
  },
  {
    "number": 411,
    "title": "Add italian README.md translation",
    "created_at": "2024-11-19T02:46:11Z",
    "closed_at": "2024-11-19T05:38:14Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/411",
    "body": "<!-- Use this template by filling in information and copy and pasting relevant items out of the html comments. -->\r\n\r\n# Relates to:\r\nREADME.md translation to Italian\r\n<!-- LINK TO ISSUE OR TICKET -->\r\n\r\n<!-- This risks section is to be filled out before final review and merge. -->\r\n\r\n# Risks\r\nLow\r\n<!--\r\nLow, medium, large. List what kind of risks, and what could be effected.\r\n-->\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\nTranslate README.md in Italian\r\n## What kind of change is this?\r\n- Add to README.md the link to README_IT.md\r\n- Add new file README_IT.md\r\n\r\n<!--\r\nBug fixes (non-breaking change which fixes an issue)\r\nImprovements (misc. changes to existing features)\r\nFeatures (non-breaking change which adds functionality)\r\nUpdates (new versions of included code)\r\n-->\r\n\r\n<!-- This \"Why\" section is most relevant if there is no linked issue explaining why. If there is a related issue it might make sense to skip this why section. -->\r\n<!--\r\n## Why are we doing this? Any context or related work?\r\n-->\r\n\r\n# Documentation changes needed?\r\nMy changes do not require a change to the project documentation.\r\n<!--\r\nMy changes do not require a change to the project documentation.\r\nMy changes require a change to the project documentation.\r\nIf a docs change is needed: I have updated the documentation accordingly.\r\n-->\r\n\r\n<!-- Please show how you tested the PR. This will really help if the PR needs to be retested, and probably help the PR get merged quicker. -->\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\n## Detailed testing steps\r\n\r\n<!--\r\nNone, automtated tests are fine.\r\n-->\r\n\r\n<!--\r\n- As [anon/admin], go to [link]\r\n  - [do action]\r\n  - verify [result]\r\n-->\r\n\r\n<!-- If there is a UI change, please include before and after screenshots or videos. This will speed up PRs being merged. It is extra nice to annotate screenshots with arrows or boxes pointing out the differences. -->\r\n<!--\r\n## Screenshots\r\n### Before\r\n### After\r\n-->\r\n\r\n<!-- If there is anything about the deploy, please make a note. -->\r\n<!--\r\n# Deploy Notes\r\n-->\r\n\r\n<!--  Copy and paste commandline output. -->\r\n<!--\r\n## Database changes\r\n-->\r\n\r\n<!--  If there is something more than the automated steps, please specifiy deploy instructions. -->\r\n<!--\r\n## Deployment instructions\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/411/comments",
    "author": "fabrizioff",
    "comments": [
      {
        "user": "monilpat",
        "created_at": "2024-11-19T05:29:53Z",
        "body": "LGTM - Grazie mille :) "
      }
    ]
  },
  {
    "number": 410,
    "title": "fix: .env Namespaced Character Secrets",
    "created_at": "2024-11-19T02:13:48Z",
    "closed_at": "2024-12-26T01:10:51Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/410",
    "body": "# Relates to:\r\nN/A\r\n\r\n# Risks\r\nMedium - This PR adds a new feature for character-specific environment variable namespacing.\r\n\r\nRisks include:\r\n- Changes to environment variable handling\r\n- Changes to character settings loading\r\n- Potential impact on existing character configurations\r\n\r\n# Background\r\nI wanted to be able to check in character files without having to sanitize them first\r\n\r\n## What does this PR do?\r\n\r\n### Feature Implementation\r\nAdds support for character-specific namespaced environment variables:\r\n1. New environment variable pattern: `CHARACTER.YOUR_CHARACTER_NAME.SETTING_NAME`\r\n2. Automatic handling of spaces in character names (converted to underscores)\r\n3. Enhanced settings hierarchy:\r\n   - Character-specific namespaced env variables (highest priority)\r\n   - Character settings from JSON\r\n   - Global environment variables\r\n   - Default values\r\n4. Maintains backward compatibility with existing settings system\r\n\r\nKey changes:\r\n- Modified settings loader in `packages/core/src/settings.ts`\r\n- Updated character loading in `packages/agent/src/index.ts`\r\n- Added automatic conversion of character name spaces to underscores\r\n\r\n### Documentation Updates\r\nUpdated documentation to reflect the new feature:\r\n1. Added namespaced settings pattern to secrets management guide\r\n2. Updated configuration guide with new examples\r\n3. Updated agent package documentation with hierarchy explanation\r\n4. Added clear examples for both .env and character.json methods\r\n\r\n## What kind of change is this?\r\nFeatures (non-breaking change which adds functionality)\r\n\r\n# Documentation changes needed?\r\nYes - Documentation has been updated to reflect the new feature:\r\n- Added namespaced settings pattern\r\n- Updated configuration examples\r\n- Updated settings hierarchy explanation\r\n- Added character name handling instructions\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\n### Feature Testing\r\n1. Review code changes:\r\n   - `packages/core/src/settings.ts`\r\n   - `packages/agent/src/index.ts`\r\n\r\n2. Test functionality:\r\n   ```env\r\n   # Test with simple name\r\n   CHARACTER.TESTBOT.OPENAI_API_KEY=sk-test\r\n   \r\n   # Test with spaces in name\r\n   CHARACTER.MY_TEST_BOT.ANTHROPIC_API_KEY=sk-other\r\n   ```\r\n\r\n### Documentation Testing\r\nReview updated docs:\r\n- docs/docs/guides/secrets-management.md\r\n- docs/docs/guides/configuration.md\r\n- docs/docs/packages/agent.md\r\n\r\n## Detailed testing steps\r\n\r\n1. Feature Testing:\r\n   - Create character with spaces in name\r\n   - Add namespaced variables to .env\r\n   - Verify correct loading into character settings\r\n   - Test precedence over character.json settings\r\n   - Verify backward compatibility\r\n   - Test global fallback behavior\r\n\r\n2. Documentation Verification:\r\n   - Verify pattern examples are correct\r\n   - Verify hierarchy explanation is clear\r\n   - Verify character name handling is explained\r\n   - Test example configurations\r\n\r\n# Screenshots\r\nN/A - Feature implementation and documentation changes\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/410/comments",
    "author": "genecyber",
    "comments": [
      {
        "user": "monilpat",
        "created_at": "2024-11-20T00:56:26Z",
        "body": "Thanks for getting this out! Great work! Given it is of medium risk, can we add a quick unit test to confirm that the cascading logic (in terms of where to read the settings) works as expected. If you don't want to include this in this PR no worries create a ticket and TODO comment. But please confirm on your machine that the precedence is honored re: \r\n\r\n1. Character-specific namespaced environment variables (highest priority)\r\n2. Character-specific secrets\r\n3. Environment variables\r\n4. Default values (lowest priority)\r\n\r\nThanks so much!"
      },
      {
        "user": "genecyber",
        "created_at": "2024-11-20T07:59:17Z",
        "body": "good idea, I'll add tests. Is the suite in pretty good condition? I didn't try yet."
      },
      {
        "user": "odilitime",
        "created_at": "2024-12-26T01:10:51Z",
        "body": "replaced by #1454 which fixed conflicts"
      }
    ]
  },
  {
    "number": 403,
    "title": "Move cache into DB",
    "created_at": "2024-11-18T21:28:29Z",
    "closed_at": "2024-11-20T03:14:25Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/issues/403",
    "body": "Current all cache is local file storage. This is problematic as does not allow persistence in containers.\r\n\r\nWe need to move all cache into sql tables.\r\n\r\n- [ ] Core\r\n- [ ] twitter client\r\n- [ ] discord client\r\n- [ ] telegram client",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/403/comments",
    "author": "ponderingdemocritus",
    "comments": [
      {
        "user": "bmgalego",
        "created_at": "2024-11-19T03:08:54Z",
        "body": "Already implemented the database cache adapters in #378 "
      }
    ]
  },
  {
    "number": 399,
    "title": "way for bots to have cool down periods (dynamic tempature adjusts) & only direct reply setting",
    "created_at": "2024-11-18T12:34:37Z",
    "closed_at": "2024-12-14T07:31:28Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/399",
    "body": "to add for for .env\r\n```\r\n#DISCORD | only respond when @ | cooldown on reply in MS\r\nDISCORD_DIRECT_ONLY=true #true\r\nDISCORD_COOLDOWN=0 #default 1 min (only applies when not direct @)\r\n```\r\n\r\n\r\nto add for messages.ts discord\r\n\r\n```\r\nasync handleMessage(message: DiscordMessage) {\r\n        if (\r\n            message.interaction ||\r\n            message.author.id ===\r\n                this.client.user?.id /* || message.author?.bot*/\r\n        )\r\n            return;\r\n    //only respond too direct @ or replys\r\n    const isDirectMention = message.mentions.has(this.client.user?.id);\r\n    const isReplyToBot = message.reference?.messageId && (\r\n        await message.channel.messages.fetch(message.reference.messageId)\r\n    ).author.id === this.client.user?.id;\r\n    const isDirectInteraction = isDirectMention || isReplyToBot;\r\n    if (settings.DISCORD_DIRECT_ONLY && !isDirectInteraction) {\r\n        console.log(\"Direct-only mode: ignoring non-mention message\");\r\n        return;\r\n    }\r\n        if (isReplyToBot) {\r\n        console.log(\"Reply to bot detected\");\r\n    }\r\n\r\n    // Only apply cooldown check for non-direct mentions\r\n    if (!isDirectInteraction) {\r\n        const timeSinceLastResponse = Date.now() - this.lastResponseTime;\r\n        \r\n        if (timeSinceLastResponse < this.COOLDOWN_MS) {\r\n            console.log(`Cooling down for non-direct messages. Time remaining: ${(this.COOLDOWN_MS - timeSinceLastResponse)/1000}s`);\r\n            return;\r\n        }\r\n        \r\n    } else {\r\n        console.log(\"Direct mention detected - bypassing cooldown\");\r\n    }\r\n\r\n.....\r\n                await this.runtime.processActions(\r\n                    memory,\r\n                    responseMessages,\r\n                    state,\r\n                    callback\r\n                );\r\n                this.lastResponseTime = Date.now(); \r\n                \r\n            }\r\n```\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/399/comments",
    "author": "o-on-x",
    "comments": [
      {
        "user": "SecretRecipe",
        "created_at": "2024-12-19T19:48:34Z",
        "body": "Does something like this exist for X/twitter too? It would be cool to be able to set the agent's to be more \"choose-y\" and not just reply to everything that's specified all the time."
      }
    ]
  },
  {
    "number": 398,
    "title": "feat: unruggable",
    "created_at": "2024-11-18T11:39:40Z",
    "closed_at": "2024-11-18T21:59:34Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/398",
    "body": "WIP\r\n\r\n- implements unruggable meme factory",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/398/comments",
    "author": "ponderingdemocritus",
    "comments": [
      {
        "user": "ponderingdemocritus",
        "created_at": "2024-11-18T19:08:26Z",
        "body": "this is WIP for now"
      },
      {
        "user": "fabianhug",
        "created_at": "2024-11-18T19:10:49Z",
        "body": "> this is WIP for now\r\n\r\ngreat! can you mark it as a `Draft PR` until ready? Thanks!"
      }
    ]
  },
  {
    "number": 396,
    "title": "Register memory managers if passed to runtime",
    "created_at": "2024-11-18T11:29:22Z",
    "closed_at": "2024-11-18T17:39:45Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/396",
    "body": "# Relates to:\r\n\r\n<!-- Add link to related issue or ticket here if applicable -->\r\n\r\n# Risks\r\n\r\nLow. This change introduces a new feature to register memory managers, which should not affect existing functionality.\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nThis PR adds functionality to register memory managers if they are passed to the runtime. It iterates through the `managers` array in the `opts` object and calls `registerMemoryManager` for each manager.\r\n\r\n## What kind of change is this?\r\n\r\nFeatures (non-breaking change which adds functionality)\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes do not require a change to the project documentation.\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\nThe reviewer should start by examining the `AgentRuntime` class in the `packages/core/src/runtime.ts` file, focusing on the new code block that registers memory managers.\r\n\r\n## Detailed testing steps\r\n\r\n- Verify that the `AgentRuntime` class correctly initializes with the new code block.\r\n- Test passing an array of memory managers to the runtime options and ensure they are properly registered.\r\n- Check that existing functionality remains unaffected by this change.\r\n- Verify that the `registerMemoryManager` method is called for each manager in the array.\r\n\r\n# Deploy Notes\r\n\r\nNo special deploy notes are required for this change.\r\n\r\nSources\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/396/comments",
    "author": "martincik",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-11-18T17:39:43Z",
        "body": "Good idea"
      }
    ]
  },
  {
    "number": 391,
    "title": "Init commit of operator instructions",
    "created_at": "2024-11-18T07:27:50Z",
    "closed_at": "2025-01-04T18:31:41Z",
    "labels": [
      "no-pr-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/pull/391",
    "body": "This enables operator instructions, so agents can receive goals and knowledge",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/391/comments",
    "author": "lalalune",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2024-12-28T18:31:24Z",
        "body": "This pull request has been automatically marked as stale due to inactivity."
      }
    ]
  },
  {
    "number": 381,
    "title": "fix: adds Groq to getTokenForProvider",
    "created_at": "2024-11-17T21:38:09Z",
    "closed_at": "2024-11-18T21:51:50Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/381",
    "body": "<!-- Use this template by filling in information and copy and pasting relevant items out of the html comments. -->\r\n\r\n# Relates to:\r\n\r\n<!-- LINK TO ISSUE OR TICKET -->\r\n\r\n<!-- This risks section is to be filled out before final review and merge. -->\r\n\r\n# Risks\r\nLow\r\n<!--\r\nLow, medium, large. List what kind of risks, and what could be effected.\r\n-->\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\nadds Groq model provider to Agent getTokenForProvider\r\n\r\n## What kind of change is this?\r\nBug fixes: Not loading Groq keys\r\n<!--\r\nBug fixes (non-breaking change which fixes an issue)\r\nImprovements (misc. changes to existing features)\r\nFeatures (non-breaking change which adds functionality)\r\nUpdates (new versions of included code)\r\n-->\r\n\r\n<!-- This \"Why\" section is most relevant if there is no linked issue explaining why. If there is a related issue it might make sense to skip this why section. -->\r\n<!--\r\n## Why are we doing this? Any context or related work?\r\n-->\r\n\r\n# Documentation changes needed?\r\n\r\n<!--\r\nMy changes do not require a change to the project documentation.\r\nMy changes require a change to the project documentation.\r\nIf a docs change is needed: I have updated the documentation accordingly.\r\n-->\r\n\r\n<!-- Please show how you tested the PR. This will really help if the PR needs to be retested, and probably help the PR get merged quicker. -->\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\n## Detailed testing steps\r\n\r\n<!--\r\nNone, automtated tests are fine.\r\n-->\r\n\r\n<!--\r\n- As [anon/admin], go to [link]\r\n  - [do action]\r\n  - verify [result]\r\n-->\r\n\r\n<!-- If there is a UI change, please include before and after screenshots or videos. This will speed up PRs being merged. It is extra nice to annotate screenshots with arrows or boxes pointing out the differences. -->\r\n<!--\r\n## Screenshots\r\n### Before\r\n### After\r\n-->\r\n\r\n<!-- If there is anything about the deploy, please make a note. -->\r\n<!--\r\n# Deploy Notes\r\n-->\r\n\r\n<!--  Copy and paste commandline output. -->\r\n<!--\r\n## Database changes\r\n-->\r\n\r\n<!--  If there is something more than the automated steps, please specifiy deploy instructions. -->\r\n<!--\r\n## Deployment instructions\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/381/comments",
    "author": "bmgalego",
    "comments": [
      {
        "user": "ponderingdemocritus",
        "created_at": "2024-11-18T00:20:28Z",
        "body": "groq already exists - can you just fix the current type in the settings"
      },
      {
        "user": "bmgalego",
        "created_at": "2024-11-18T03:13:15Z",
        "body": "Yes I am justing loading the groq keys from the settings when the groq model is selected. I think thats what you are asking? "
      },
      {
        "user": "lalalune",
        "created_at": "2024-11-18T21:51:53Z",
        "body": "lgtm"
      }
    ]
  },
  {
    "number": 378,
    "title": "feat: Cache Manager",
    "created_at": "2024-11-17T20:07:03Z",
    "closed_at": "2024-11-21T02:45:10Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/378",
    "body": "This PR introduces a new cache manager to the agent runtime, centralizing most of the caching logic into a dedicated manager. Currently, this implementation only covers the following caches, twitter cache, discord cache, solana cache, browser and video cache and does not include files like video, audio and other attachments.\r\nThe cache manager provides a straightforward API (still a work in progress) that uses a cache adapter. For now using a filesystem adapter to test it awaiting for feedback to start writing the schemas and db adapters.\r\nThe caching api uses a key and the agentId to index the entries allowing for multi agent caching.\r\nWe could also include in the api an extra argument for expiration.\r\n\r\n<!-- Use this template by filling in information and copy and pasting relevant items out of the html comments. -->\r\n\r\n# Relates to:\r\n<!-- LINK TO ISSUE OR TICKET -->\r\n#243\r\n#258\r\nThis pr should fix this issue since the multi agent twitter caching no longer conflicts, which was likely the root cause of the bug.\r\n<!-- This risks section is to be filled out before final review and merge. -->\r\n\r\n# Risks\r\nmedium – this affects multiple packages.\r\n<!--\r\nLow, medium, large. List what kind of risks, and what could be effected.\r\n-->\r\n\r\n# Background\r\n\r\n## What kind of change is this?\r\n\r\nFeature: Introduces a new caching manager.\r\nImprovements: Refactors and centralizes caching logic for multiple packages.\r\nBug Fix: Resolves conflicts in multi-agent Twitter caching\r\n\r\n<!--\r\nBug fixes (non-breaking change which fixes an issue)\r\nImprovements (misc. changes to existing features)\r\nFeatures (non-breaking change which adds functionality)\r\nUpdates (new versions of included code)\r\n-->\r\n\r\n<!-- This \"Why\" section is most relevant if there is no linked issue explaining why. If there is a related issue it might make sense to skip this why section. -->\r\n<!--\r\n## Why are we doing this? Any context or related work?\r\n-->\r\n\r\n# Documentation changes needed?\r\nMy changes require a change to the project documentation.\r\n<!--\r\nMy changes do not require a change to the project documentation.\r\nMy changes require a change to the project documentation.\r\nIf a docs change is needed: I have updated the documentation accordingly.\r\n-->\r\n\r\n<!-- Please show how you tested the PR. This will really help if the PR needs to be retested, and probably help the PR get merged quicker. -->\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\npackages/core/src/cache.ts – Review the API implementation.\r\npackages/agent/src/index.ts – Check how the cache manager is instantiated and integrated.\r\npackages/client-twitter/src/base.ts – Verify the usage of the cache manager API in the Twitter client.\r\n\r\n## Detailed testing steps\r\n\r\n<!--\r\nNone, automtated tests are fine.\r\n-->\r\n\r\n<!--\r\n- As [anon/admin], go to [link]\r\n  - [do action]\r\n  - verify [result]\r\n-->\r\n\r\n<!-- If there is a UI change, please include before and after screenshots or videos. This will speed up PRs being merged. It is extra nice to annotate screenshots with arrows or boxes pointing out the differences. -->\r\n<!--\r\n## Screenshots\r\n### Before\r\n### After\r\n-->\r\n\r\n<!-- If there is anything about the deploy, please make a note. -->\r\n<!--\r\n# Deploy Notes\r\n-->\r\n\r\n<!--  Copy and paste commandline output. -->\r\n<!--\r\n## Database changes\r\n-->\r\n\r\n<!--  If there is something more than the automated steps, please specifiy deploy instructions. -->\r\n<!--\r\n## Deployment instructions\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/378/comments",
    "author": "bmgalego",
    "comments": [
      {
        "user": "ponderingdemocritus",
        "created_at": "2024-11-18T00:30:17Z",
        "body": "good idea and correct direction -  lets make this work then merge up"
      },
      {
        "user": "bmgalego",
        "created_at": "2024-11-18T13:31:44Z",
        "body": "Added some basic tests and implemented the expiration api.\r\nI think initialy we could go without the database adapters, starting with the filesystem should be easier to migrate too. I am building a script to help the migration.\r\n\r\n"
      },
      {
        "user": "monilpat",
        "created_at": "2024-11-21T19:57:48Z",
        "body": "Thanks so much for working on this! Looks like there are some typing issues that I am fixing as a part of merging in my latest changes just wanted to give a heads up "
      },
      {
        "user": "monilpat",
        "created_at": "2024-11-21T20:09:58Z",
        "body": "I think to prevent issues like this we need to make sure every package as a tsup.config.ts which agent was missing 2) and as per the docs run pnpm build "
      }
    ]
  },
  {
    "number": 357,
    "title": "feat: add ICP token creation support",
    "created_at": "2024-11-16T12:39:36Z",
    "closed_at": "2024-11-29T11:59:21Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/357",
    "body": "- Add plugin-icp to enable token creation on Pickpump platform\r\n- Implement createToken functionality for Internet Computer Protocol (ICP)\r\n- Support ICP token standard and specifications\r\n- Enable seamless integration with Pickpump's token creation flow\r\n\r\nBREAKING CHANGE: None\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/357/comments",
    "author": "asDNSk",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-11-16T20:05:18Z",
        "body": "this is fucking rad, will review later"
      },
      {
        "user": "monilpat",
        "created_at": "2024-11-19T00:26:26Z",
        "body": "Also feel free to fix the PR Title check, add in a a screen grab of successful token creation, and consider an integration test to simulate the entire token creation flow using mocks or a test canister to ensure the plugin works end-to-end. Also can we update the plugin associated READMEs so it is easier to leverage. Thanks so much! So sorry for all the comments! You are a badass and did some great work here! "
      },
      {
        "user": "asDNSk",
        "created_at": "2024-11-19T09:20:39Z",
        "body": "Thank u for ur review, I will fix the issues. @monilpat "
      },
      {
        "user": "NashAiomos",
        "created_at": "2024-11-19T15:52:39Z",
        "body": "Oh yeah "
      }
    ]
  },
  {
    "number": 341,
    "title": "Korean-fix-as-native",
    "created_at": "2024-11-15T23:25:09Z",
    "closed_at": "2024-11-15T23:27:57Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/341",
    "body": "<!-- Use this template by filling in information and copy and pasting relevant items out of the html comments. -->\n\n# Relates to:\n\n<!-- LINK TO ISSUE OR TICKET -->\n\n<!-- This risks section is to be filled out before final review and merge. -->\n\n# Risks\n\n<!--\nLow, medium, large. List what kind of risks, and what could be effected.\n-->\n\n# Background\n\n## What does this PR do?\n\nModified some Korean sentences\n\n## What kind of change is this?\n\n<!--\nBug fixes (non-breaking change which fixes an issue)\nImprovements (misc. changes to existing features)\nFeatures (non-breaking change which adds functionality)\nUpdates (new versions of included code)\n-->\n\n<!-- This \"Why\" section is most relevant if there is no linked issue explaining why. If there is a related issue it might make sense to skip this why section. -->\n<!--\n## Why are we doing this? Any context or related work?\n-->\n\n# Documentation changes needed?\n\n<!--\nMy changes do not require a change to the project documentation.\nMy changes require a change to the project documentation.\nIf a docs change is needed: I have updated the documentation accordingly.\n-->\n\n<!-- Please show how you tested the PR. This will really help if the PR needs to be retested, and probably help the PR get merged quicker. -->\n\n# Testing\n\n## Where should a reviewer start?\n\n## Detailed testing steps\n\n<!--\nNone, automtated tests are fine.\n-->\n\n<!--\n- As [anon/admin], go to [link]\n  - [do action]\n  - verify [result]\n-->\n\n<!-- If there is a UI change, please include before and after screenshots or videos. This will speed up PRs being merged. It is extra nice to annotate screenshots with arrows or boxes pointing out the differences. -->\n<!--\n## Screenshots\n### Before\n### After\n-->\n\n<!-- If there is anything about the deploy, please make a note. -->\n<!--\n# Deploy Notes\n-->\n\n<!--  Copy and paste commandline output. -->\n<!--\n## Database changes\n-->\n\n<!--  If there is something more than the automated steps, please specifiy deploy instructions. -->\n<!--\n## Deployment instructions\n-->\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/341/comments",
    "author": "lukeyang",
    "comments": [
      {
        "user": "lukeyang",
        "created_at": "2024-11-15T23:27:57Z",
        "body": "I am sorry for this PR to main project. I will close this PR."
      },
      {
        "user": "lalalune",
        "created_at": "2024-11-15T23:43:54Z",
        "body": "If you're fixing some korean language stuff that's cool!"
      }
    ]
  },
  {
    "number": 332,
    "title": "fix: ensure unique instances for each Service subclass using Map",
    "created_at": "2024-11-15T17:24:18Z",
    "closed_at": "2024-11-18T23:05:35Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/332",
    "body": "Previously, the Service base class used a single static instance, which caused\r\nall subclasses to share the same instance. This update replaces the static\r\ninstance with a Map to manage unique instances for each subclass",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/332/comments",
    "author": "tcm390",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-11-15T21:34:58Z",
        "body": "Many of the services load up models and such and we probably only want one instance, ever, enforcing the singleton pattern, if we add a map won't we have several instances of each class? That's why I made it this service pattern."
      },
      {
        "user": "tcm390",
        "created_at": "2024-11-15T21:47:40Z",
        "body": "> Many of the services load up models and such and we probably only want one instance, ever, enforcing the singleton pattern, if we add a map won't we have several instances of each class? That's why I made it this service pattern.\r\n\r\nI understand, but in the context of the Discord bot, we require two services: `ISpeechService` and `ITranscriptionService`. (Also, there are `IVideoService` and `IBrowserService`, but I'm not sure if these are necessary for the bot.) Would you prefer that I implement separate methods and instance variables for each of these services, or would you prefer a different approach? Let me know how you'd like to proceed :)"
      },
      {
        "user": "lalalune",
        "created_at": "2024-11-15T23:46:16Z",
        "body": "I want one class of each service shared across all running agents, imagine we are running 10 agents, we want them to share the transcription service"
      },
      {
        "user": "monilpat",
        "created_at": "2024-11-18T23:02:45Z",
        "body": "I agree with @lalalune we should close this PR as the singleton pattern would work best in this usecase. "
      },
      {
        "user": "tcm390",
        "created_at": "2024-11-18T23:11:59Z",
        "body": "> I agree with @lalalune we should close this PR as the singleton pattern would work best in this usecase.\r\n\r\n@monilpat thanks for the review but from my understanding, the current implementation ensures that each service type has its own singleton instance. This means only one instance of each subclass is created and reused. Could you clarify if the intent is different?"
      },
      {
        "user": "monilpat",
        "created_at": "2024-11-19T00:36:41Z",
        "body": "> > I agree with @lalalune we should close this PR as the singleton pattern would work best in this usecase.\r\n> \r\n> @monilpat thanks for the review but from my understanding, the current implementation ensures that each service type has its own singleton instance. This means only one instance of each subclass is created and reused. Could you clarify if the intent is different?\r\n\r\nYeah of course anytime! The intent is not different. I just share @lalalune 's concern around multiple instances of service rather than a 1-> many from service -> agents. Happy to add more context, but will defer @lalalune as he has more context!"
      }
    ]
  },
  {
    "number": 323,
    "title": "utils.ts example tweet splitting",
    "created_at": "2024-11-15T01:27:23Z",
    "closed_at": "2024-11-15T05:34:56Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/323",
    "body": "if no other splitting is done in the other modules would work i\r\ninteractions.ts & post.ts should then just generate any size no character limit tweet (within reason)\r\ndoes not break code but needs adjustments\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/323/comments",
    "author": "o-on-x",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-11-15T05:26:45Z",
        "body": "this is so critically needed haha\r\n\r\nwhat adjustments does it need?\r\n\r\nis it better enough?"
      }
    ]
  },
  {
    "number": 311,
    "title": "fix service call patterns but needs testing",
    "created_at": "2024-11-14T07:22:01Z",
    "closed_at": "2024-11-14T09:18:19Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/311",
    "body": "This PR fixes some stuff, including service calls\r\n\r\nAlso adds 2FA handling for twitter",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/311/comments",
    "author": "lalalune",
    "comments": [
      {
        "user": "ponderingdemocritus",
        "created_at": "2024-11-14T08:03:23Z",
        "body": "lgtm"
      }
    ]
  },
  {
    "number": 307,
    "title": "docs: add a new Japanese README",
    "created_at": "2024-11-14T04:28:15Z",
    "closed_at": "2024-11-14T07:07:35Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/307",
    "body": "I created Japanese translated README.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/307/comments",
    "author": "eltociear",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-11-14T07:07:31Z",
        "body": "ありがとう！"
      }
    ]
  },
  {
    "number": 291,
    "title": "Feature Request: Automated Bot Registry and Private Communication Protocol",
    "created_at": "2024-11-13T15:14:08Z",
    "closed_at": "2024-11-15T14:12:13Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/291",
    "body": "**Summary**: Implement an automated registry and communication system that enables trading bots to discover each other, communicate efficiently, and trade in a secure and private back channel. \r\n\r\n**Description**:\r\nAs the project expands and more instances of the trading bot are forked and installed, there's an opportunity for these bots to be aware of each other's existence and to communicate directly. The goal is to establish a decentralized, automated registry system that allows bots to discover and authenticate each other. Once connected, the bots will communicate through a private back channel to exchange data and execute trades efficiently.\r\n\r\n**Proposed Features**:\r\n\r\n1. **Automated Registry System**: \r\n   - Each bot will register itself in a decentralized registry (e.g., using a lightweight P2P network or distributed ledger technology).\r\n   - Bots will periodically update the registry, checking for new bots or changes in status.\r\n   - The registry will include basic metadata to facilitate discovery, like cryptographic keys for authentication.\r\n   - Possibly services a particular bot provides to other bots that they could pay for in the future. (more on this later)\r\n\r\n2. **Private Back Channel Communication**:\r\n   - Implement a secure, real-time communication protocol, potentially leveraging WebRTC or a similar P2P technology.\r\n   - The protocol should ensure encrypted communication between bots, minimizing the risk of interception.\r\n   - Messages will be designed for minimal latency, suitable for rapid data exchange and trading negotiations.\r\n\r\n3. **Authentication and Security**:\r\n   - Use public-private key cryptography for bot authentication, ensuring only legitimate bots can participate in the network.\r\n   - Establish rules for trust and security, with mechanisms to handle untrusted or malicious bots.\r\n\r\n4. **Efficient Trading Protocol**:\r\n   - Design a protocol that allows bots to share and match order books in a streamlined manner.\r\n   - Ensure trades are executed quickly, with minimal delay, using predefined negotiation rules.\r\n   - Incorporate a fallback mechanism if communication or negotiation fails.\r\n\r\n**Benefits**:\r\n- **Speed**: A dedicated, private communication channel will facilitate faster data exchange compared to public platforms.\r\n- **Security**: Encrypted communication ensures that sensitive trading data remains confidential.\r\n- **Scalability**: The decentralized nature of the registry will support the growth of the network without becoming a bottleneck.\r\n\r\n**Considerations**:\r\n- The system should be resilient to potential attacks, like Sybil attacks, by incorporating strong authentication and trust mechanisms.\r\n- Developing a lightweight and efficient protocol is critical to minimize resource usage and latency.\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/291/comments",
    "author": "sirkitree",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-11-15T14:12:13Z",
        "body": "Vehemently against private communication protocols between agents of any sort. Critical to agent-human alignment that they use social media as the basis for communication and memory. Bot registry is I think not a telemetry we want.\r\n\r\nHave a solution for this that is more in line with our moral values-- I know this seems small, but it is extremely, extremely important that we make the bots use human communication and human tools at all times."
      }
    ]
  },
  {
    "number": 287,
    "title": "feat: Starknet plugin",
    "created_at": "2024-11-13T11:07:57Z",
    "closed_at": "2024-11-15T23:23:08Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/287",
    "body": "- PR turned into type and import cleanup. Conflicts were happening between bundled and non-bundled types. This is now resolved\r\n- Implements scaffold for Starknet plugin that allows swapping.\r\n- adds pr title workflow - for sanity and cleanliness \r\n\r\nAfter building and tests, lets merge to keep head clean, then will keep iterating on SN plugin",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/287/comments",
    "author": "ponderingdemocritus",
    "comments": [
      {
        "user": "sirkitree",
        "created_at": "2024-11-16T14:26:37Z",
        "body": "This seems to have removed all tests. Is there a plan for adding them back? If we want to get into a reliable release path we should have proper test coverage."
      }
    ]
  },
  {
    "number": 277,
    "title": "fix docs: add python as a prerequisite (needed for node-gyp)",
    "created_at": "2024-11-12T21:18:07Z",
    "closed_at": "2024-11-13T07:09:04Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/277",
    "body": "Add python as a prerequisite\r\n\r\n<!-- Use this template by filling in information and copy and pasting relevant items out of the html comments. -->\r\n\r\n# Relates to:\r\n\r\n<!-- This risks section is to be filled out before final review and merge. -->\r\n\r\n# Risks\r\n\r\nLow: installation fails on pnpm install {reproduced on windows}. It's fixed after installing python and adding path to the env variables,\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\n## What kind of change is this?\r\n\r\n<!--\r\nBug fixes (non-breaking change which fixes an issue)\r\nImprovements (misc. changes to existing features)\r\nFeatures (non-breaking change which adds functionality)\r\nUpdates (new versions of included code)\r\n-->\r\n\r\n<!-- This \"Why\" section is most relevant if there is no linked issue explaining why. If there is a related issue it might make sense to skip this why section. -->\r\n<!--\r\n## Why are we doing this? Any context or related work?\r\n-->\r\n\r\n# Documentation changes needed?\r\n\r\nadd python as a prerequisite to the documentation (needed for node-gyp)\r\n\r\n<!-- Please show how you tested the PR. This will really help if the PR needs to be retested, and probably help the PR get merged quicker. -->\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\n## Detailed testing steps\r\n\r\n<!--\r\nNone, automtated tests are fine.\r\n-->\r\n\r\n<!--\r\n- As [anon/admin], go to [link]\r\n  - [do action]\r\n  - verify [result]\r\n-->\r\n\r\n<!-- If there is a UI change, please include before and after screenshots or videos. This will speed up PRs being merged. It is extra nice to annotate screenshots with arrows or boxes pointing out the differences. -->\r\n<!--\r\n## Screenshots\r\n### Before\r\n### After\r\n-->\r\n\r\n<!-- If there is anything about the deploy, please make a note. -->\r\n<!--\r\n# Deploy Notes\r\n-->\r\n\r\n<!--  Copy and paste commandline output. -->\r\n<!--\r\n## Database changes\r\n-->\r\n\r\n<!--  If there is something more than the automated steps, please specifiy deploy instructions. -->\r\n<!--\r\n## Deployment instructions\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/277/comments",
    "author": "metadiver",
    "comments": [
      {
        "user": "NikitaVr",
        "created_at": "2024-11-28T01:26:25Z",
        "body": "Do you know if this works with Python 3 Too or do we have to be on 2.7?"
      }
    ]
  },
  {
    "number": 267,
    "title": "Update README.md",
    "created_at": "2024-11-12T02:55:51Z",
    "closed_at": "2024-11-12T12:53:28Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/267",
    "body": "<!-- Use this template by filling in information and copy and pasting relevant items out of the html comments. -->\r\n\r\n# Relates to:\r\n\r\n<!-- LINK TO ISSUE OR TICKET -->\r\n\r\n<!-- This risks section is to be filled out before final review and merge. -->\r\n\r\n# Risks\r\n\r\n<!--\r\nLow, medium, large. List what kind of risks, and what could be effected.\r\n-->\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\n## What kind of change is this?\r\n\r\n<!--\r\nBug fixes (non-breaking change which fixes an issue)\r\nImprovements (misc. changes to existing features)\r\nFeatures (non-breaking change which adds functionality)\r\nUpdates (new versions of included code)\r\n-->\r\n\r\n<!-- This \"Why\" section is most relevant if there is no linked issue explaining why. If there is a related issue it might make sense to skip this why section. -->\r\n<!--\r\n## Why are we doing this? Any context or related work?\r\n-->\r\n\r\n# Documentation changes needed?\r\n\r\n<!--\r\nMy changes do not require a change to the project documentation.\r\nMy changes require a change to the project documentation.\r\nIf a docs change is needed: I have updated the documentation accordingly.\r\n-->\r\n\r\n<!-- Please show how you tested the PR. This will really help if the PR needs to be retested, and probably help the PR get merged quicker. -->\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\n## Detailed testing steps\r\n\r\n<!--\r\nNone, automtated tests are fine.\r\n-->\r\n\r\n<!--\r\n- As [anon/admin], go to [link]\r\n  - [do action]\r\n  - verify [result]\r\n-->\r\n\r\n<!-- If there is a UI change, please include before and after screenshots or videos. This will speed up PRs being merged. It is extra nice to annotate screenshots with arrows or boxes pointing out the differences. -->\r\n<!--\r\n## Screenshots\r\n### Before\r\n### After\r\n-->\r\n\r\n<!-- If there is anything about the deploy, please make a note. -->\r\n<!--\r\n# Deploy Notes\r\n-->\r\n\r\n<!--  Copy and paste commandline output. -->\r\n<!--\r\n## Database changes\r\n-->\r\n\r\n<!--  If there is something more than the automated steps, please specifiy deploy instructions. -->\r\n<!--\r\n## Deployment instructions\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/267/comments",
    "author": "yTheclivem",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-11-12T12:53:28Z",
        "body": "go fuck yourself"
      }
    ]
  },
  {
    "number": 262,
    "title": "cachedEmbeddings fix",
    "created_at": "2024-11-11T10:30:18Z",
    "closed_at": "2024-11-11T11:28:25Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/262",
    "body": "Relates to: #251 \r\n\r\nfixing error ```Too few parameter values were provided at SqliteDatabaseAdapter.getCachedEmbeddings```\r\n\r\n**Risks**\r\nNo risks\r\n\r\n**What does this PR do?**\r\nAdd code to \"levenshtein function\" in packages/adapter-sqlite/src/index.ts\r\n\r\n**What kind of change is this?**\r\nBug fixes (non-breaking change which fixes an issue)\r\n\r\n**Documentation changes needed?**\r\nNo need for documentation\r\n\r\n**Testing**\r\nUse the sqlite adapter and run defaultCharacter",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/262/comments",
    "author": "dorianjanezic",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-11-11T11:27:41Z",
        "body": "Thanks for the PR. Who are you? Would love to chat sometime :)"
      },
      {
        "user": "dorianjanezic",
        "created_at": "2024-11-11T12:14:20Z",
        "body": "im Dorian dev at Eden-Network. yes let's do it, really enjoying playing around with eliza"
      },
      {
        "user": "dorianjanezic",
        "created_at": "2024-11-12T07:48:02Z",
        "body": "hey @lalalune, saw your post on twitter, would be very interested to collaborate, when do you have time to chat?"
      }
    ]
  },
  {
    "number": 249,
    "title": "add verbose config with logger",
    "created_at": "2024-11-10T02:15:33Z",
    "closed_at": "2024-11-11T11:28:43Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/249",
    "body": "Let's add verbose with logger config.\r\nMost log output will use logger.debug write infomation , with the verbose = true.\r\nWhen developer want quite , they can change the verbose = false.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/249/comments",
    "author": "v1xingyue",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-11-10T04:33:30Z",
        "body": "I like it, seems harmless, but how do we configure? env var?"
      },
      {
        "user": "v1xingyue",
        "created_at": "2024-11-10T05:12:01Z",
        "body": "> I like it, seems harmless, but how do we configure? env var?\r\n\r\nwe can make it like this : \r\n\r\n```ts\r\nimport { elizaLogger } from \"@eliza/core\";\r\nelizaLogger.closeByNewLine = false;\r\nelizaLogger.verbose = true | or false ;\r\n```\r\nAnd the verbose default value is false.\r\n\r\nAlso I add the default value from process.env.\r\n\r\nYou can add \r\n*verbose=true* with *.env * , Or you can put it with shell :\r\n\r\n```shell\r\nverbose=true ts-node src/app.ts \r\n```\r\n\r\n"
      },
      {
        "user": "lalalune",
        "created_at": "2024-11-11T11:29:14Z",
        "body": "merged, good feature"
      }
    ]
  },
  {
    "number": 242,
    "title": "Store all local models in /models folder, with overridable model path",
    "created_at": "2024-11-09T01:47:33Z",
    "closed_at": "2024-12-14T07:29:14Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/242",
    "body": "We should make sure that all models stored by llama, whisper, embedding, etc all get stored in a /models folder that is easy to find and clean. This way the repo doesn't get huge and locating models isn't messy.\r\n\r\nHere are the steps:\r\n1. Look for all services where models are being loaded, including llama, fastembed, whisper, etc\r\n2. Change all paths to be eliza/models\r\n3. Add a path checker if that doesn't exist with some sane defaults to handle any case\r\n4. Add a model path override to functions so the packaged version doesn't go somewhere weird.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/242/comments",
    "author": "lalalune",
    "comments": [
      {
        "user": "dr-fusion",
        "created_at": "2024-11-28T15:02:21Z",
        "body": "Shouldn't we just make it an environment variable so users might have their models stored at some different directory for any other purpose and they can easily point to that directory? and or Downloading model happens to that particular path?\r\n\r\nFor example like the follow one.\r\n\r\nin `.env`\r\n\r\n`#LlamaLocal Configuration\r\nLLAMALOCAL_PATH=                      # Default: \"\" which is the current directory in plugin-node/dist/ which gets destroyed and recreated on every build\r\n`\r\n\r\nthen in `llama.ts` line no 188,\r\n` this.modelPath = path.join(process.env.LLAMALOCAL_PATH, modelName);`"
      }
    ]
  },
  {
    "number": 227,
    "title": "agent & plugin-image-generation failed to build",
    "created_at": "2024-11-07T11:58:54Z",
    "closed_at": "2024-11-08T10:03:43Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/227",
    "body": "```\r\n> eliza@ build /home/ooo/apps/ai16z_eliza/work/latest_clone/eliza\r\n> bash ./scripts/build.sh\r\n\r\nBuilding package: agent\r\n\r\n> @eliza/agent@0.0.1 build\r\n> tsup --format esm --dts\r\n\r\nNo input files, try \"tsup <your-file>\" instead\r\nFailed to build agent\r\n\r\n...\r\n\r\nBuilding package: plugin-image-generation\r\n> @eliza/plugin-image-generation@0.0.1 build\r\n> tsup --format esm --dts\r\n\r\nDTS Build start\r\nsrc/index.ts(8,8): error TS2307: Cannot find module '@eliza/core' or its corresponding type declarations.\r\nsrc/index.ts(9,29): error TS2307: Cannot find module '@eliza/core' or its corresponding type declarations.\r\n\r\nError: error occurred in dts build\r\n    at Worker.<anonymous> (/home/ooo/apps/ai16z_eliza/work/latest_clone/eliza/node_modules/tsup/dist/index.js:1541:26)\r\n    at Worker.emit (node:events:507:28)\r\n    at MessagePort.<anonymous> (node:internal/worker:267:53)\r\n    at [nodejs.internal.kHybridDispatch] (node:internal/event_target:827:20)\r\n    at MessagePort.<anonymous> (node:internal/per_context/messageport:23:28)\r\nDTS Build error\r\nFailed to build plugin-image-generation\r\n```",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/227/comments",
    "author": "o-on-x",
    "comments": [
      {
        "user": "o-on-x",
        "created_at": "2024-11-07T12:29:51Z",
        "body": "setting this in packages/plugin-image-generation/tsconfig.json\r\n``` {\r\n    \"extends\": \"../../tsconfig.json\",\r\n    \"compilerOptions\": {\r\n      \"outDir\": \"dist\",\r\n      \"rootDir\": \".\",\r\n      \"module\": \"ESNext\",\r\n      \"moduleResolution\": \"Bundler\",\r\n      \"types\": [\"node\"]\r\n    },\r\n    \"include\": [\"src\"],\r\n    \"references\": [\r\n      { \"path\": \"../core\" }\r\n    ]\r\n  }\r\n```"
      },
      {
        "user": "o-on-x",
        "created_at": "2024-11-08T03:39:20Z",
        "body": "still issues with finding @eliza/core"
      },
      {
        "user": "lalalune",
        "created_at": "2024-11-08T10:03:43Z",
        "body": "should be fixed on my branch now"
      }
    ]
  },
  {
    "number": 226,
    "title": "Squash postgres migrations",
    "created_at": "2024-11-07T08:49:45Z",
    "closed_at": "2025-01-06T18:33:01Z",
    "labels": [
      "enhancement",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/226",
    "body": "We have some postgres migrations-- I can't remember it we need these, but since we're greenfield it will reduce complexity greatly for setting up postgres for the first time if it just works and there is no need to setup or migrate.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/226/comments",
    "author": "lalalune",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2024-12-30T18:32:38Z",
        "body": "This issue has been automatically marked as stale due to inactivity."
      }
    ]
  },
  {
    "number": 213,
    "title": ".env not loading?",
    "created_at": "2024-11-06T04:39:23Z",
    "closed_at": "2024-11-07T02:50:37Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/213",
    "body": "Tried to load the anthropic api key from .env, no luck... needs testing",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/213/comments",
    "author": "lalalune",
    "comments": [
      {
        "user": "ceeriil",
        "created_at": "2024-11-07T14:25:26Z",
        "body": "@lalalune how did you fix this"
      }
    ]
  },
  {
    "number": 206,
    "title": "Add template overrides to docs",
    "created_at": "2024-11-05T06:44:48Z",
    "closed_at": "2025-01-07T18:33:07Z",
    "labels": [
      "documentation",
      "enhancement",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/206",
    "body": "You can now override all templates (except for some actions). We need to add this to docs in a way that is clear and part of the advanced character customization process.\r\n```\r\n        \"messageHandlerTemplate\": \"\", // you can just use these for all platforms\r\n        \"shouldRespondTemplate\": \"\",\r\n\r\n        \"discordMessageHandlerTemplate\": \"\", // or be more specific per platform\r\n        \"discordShouldRespondTemplate\": \"\",\r\n        \"discordVoiceHandlerTemplate\": \"\",\r\n\r\n        \"telegramMessageHandlerTemplate\": \"\",\r\n        \"telegramShouldRespondTemplate\": \"\",\r\n\r\n        \"twitterPostTemplate\": \"\",\r\n        \"twitterMessageHandlerTemplate\": \"\",\r\n        \"twitterSearchTemplate\": \"\",\r\n        \"twitterShouldRespondTemplate\": \"\",\r\n\r\n\"continueMessageHandlerTemplate\": \"\", // overrides the messageHandlerTemplate, which overrides internal template\r\n\r\n\r\n        \"goalsTemplate\": \"\",\r\n        \"factsTemplate\": \"\",\r\n        \"evaluationTemplate\": \"\"\r\n        ```",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/206/comments",
    "author": "lalalune",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2024-12-31T18:32:00Z",
        "body": "This issue has been automatically marked as stale due to inactivity."
      }
    ]
  },
  {
    "number": 205,
    "title": "Update README.md",
    "created_at": "2024-11-05T06:36:24Z",
    "closed_at": "2024-11-06T04:09:32Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/205",
    "body": "<!-- Use this template by filling in information and copy and pasting relevant items out of the html comments. -->\r\n\r\n# Relates to:\r\n\r\n<!-- LINK TO ISSUE OR TICKET -->\r\n\r\n<!-- This risks section is to be filled out before final review and merge. -->\r\n\r\n# Risks\r\n\r\n<!--\r\nLow, medium, large. List what kind of risks, and what could be effected.\r\n-->\r\n\r\n# Background\r\n\r\n## What does this PR do?\r\n\r\n## What kind of change is this?\r\n\r\n<!--\r\nBug fixes (non-breaking change which fixes an issue)\r\nImprovements (misc. changes to existing features)\r\nFeatures (non-breaking change which adds functionality)\r\nUpdates (new versions of included code)\r\n-->\r\n\r\n<!-- This \"Why\" section is most relevant if there is no linked issue explaining why. If there is a related issue it might make sense to skip this why section. -->\r\n<!--\r\n## Why are we doing this? Any context or related work?\r\n-->\r\n\r\n# Documentation changes needed?\r\n\r\n<!--\r\nMy changes do not require a change to the project documentation.\r\nMy changes require a change to the project documentation.\r\nIf a docs change is needed: I have updated the documentation accordingly.\r\n-->\r\n\r\n<!-- Please show how you tested the PR. This will really help if the PR needs to be retested, and probably help the PR get merged quicker. -->\r\n\r\n# Testing\r\n\r\n## Where should a reviewer start?\r\n\r\n## Detailed testing steps\r\n\r\n<!--\r\nNone, automtated tests are fine.\r\n-->\r\n\r\n<!--\r\n- As [anon/admin], go to [link]\r\n  - [do action]\r\n  - verify [result]\r\n-->\r\n\r\n<!-- If there is a UI change, please include before and after screenshots or videos. This will speed up PRs being merged. It is extra nice to annotate screenshots with arrows or boxes pointing out the differences. -->\r\n<!--\r\n## Screenshots\r\n### Before\r\n### After\r\n-->\r\n\r\n<!-- If there is anything about the deploy, please make a note. -->\r\n<!--\r\n# Deploy Notes\r\n-->\r\n\r\n<!--  Copy and paste commandline output. -->\r\n<!--\r\n## Database changes\r\n-->\r\n\r\n<!--  If there is something more than the automated steps, please specifiy deploy instructions. -->\r\n<!--\r\n## Deployment instructions\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/205/comments",
    "author": "m1hawk",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-11-06T04:09:32Z",
        "body": "I edited and merged this"
      }
    ]
  },
  {
    "number": 200,
    "title": "Feat: cashtags",
    "created_at": "2024-11-04T18:44:39Z",
    "closed_at": "2024-12-11T22:20:53Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/200",
    "body": "# Background\r\n\r\nGoal - Eliza should be able to verify and use \"real\" tokens when trading or conversing with users.\r\n\r\n## What does this PR do?\r\n\r\n## What kind of change is this?\r\n\r\nFeatures - add Cashtag action with Dexscreener API\r\n\r\n# Documentation changes needed?\r\n\r\nMy changes do not require a change to the project documentation.\r\n\r\n\r\n<!-- Please show how you tested the PR. This will really help if the PR needs to be retested, and probably help the PR get merged quicker. -->\r\n\r\n# Testing\r\n\r\nConverse with Eliza and ask for a Contract address for $ai16z and get the real one.\r\n\r\n## Where should a reviewer start?\r\n\r\n\r\n## Detailed testing steps\r\n\r\n<!--\r\nNone, automtated tests are fine.\r\n-->\r\n\r\n<!--\r\n- As [anon/admin], go to [link]\r\n  - [do action]\r\n  - verify [result]\r\n-->\r\n\r\n<!-- If there is a UI change, please include before and after screenshots or videos. This will speed up PRs being merged. It is extra nice to annotate screenshots with arrows or boxes pointing out the differences. -->\r\n<!--\r\n## Screenshots\r\n### Before\r\n### After\r\n-->\r\n\r\n<!-- If there is anything about the deploy, please make a note. -->\r\n<!--\r\n# Deploy Notes\r\n-->\r\n\r\n<!--  Copy and paste commandline output. -->\r\n<!--\r\n## Database changes\r\n-->\r\n\r\n\r\n\r\n<!--  If there is something more than the automated steps, please specifiy deploy instructions. -->\r\n<!--\r\n## Deployment instructions\r\n-->\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/200/comments",
    "author": "leomercier",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-12-02T00:42:50Z",
        "body": "This is a cool PR but a lot has drifted, still relevant?"
      }
    ]
  },
  {
    "number": 191,
    "title": "Evaluation Tests",
    "created_at": "2024-11-03T23:18:21Z",
    "closed_at": "2025-01-12T11:13:53Z",
    "labels": [
      "automation",
      "testing",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/191",
    "body": "Task is to look at the following test and verify that they are necessary and working:\n\n- Located in `core/tests/evaluation.test.ts`\n- Tests evaluation system:\n    - Evaluator format validation\n    - Context loading\n    - Example validation\n    - Evaluation process execution",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/191/comments",
    "author": "sirkitree",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-06T18:33:02Z",
        "body": "This issue has been automatically marked as stale due to 30 days of inactivity.\nIf no further activity occurs within 7 days, it will be closed automatically. Please take action if this issue is still relevant."
      }
    ]
  },
  {
    "number": 190,
    "title": "Messages Tests",
    "created_at": "2024-11-03T23:17:24Z",
    "closed_at": "2025-01-12T11:15:02Z",
    "labels": [
      "automation",
      "testing",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/190",
    "body": "Task is to look at the following test and verify that they are necessary and working:\n\n- Located in `core/tests/messages.test.ts`\n- Tests message formatting and handling:\n    - Actor formatting\n    - Message formatting\n    - Facts formatting\n    - Message content validation\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/190/comments",
    "author": "sirkitree",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-06T18:33:03Z",
        "body": "This issue has been automatically marked as stale due to 30 days of inactivity.\nIf no further activity occurs within 7 days, it will be closed automatically. Please take action if this issue is still relevant."
      }
    ]
  },
  {
    "number": 189,
    "title": "Continue Action Tests",
    "created_at": "2024-11-03T23:16:18Z",
    "closed_at": "2025-01-12T11:14:46Z",
    "labels": [
      "automation",
      "testing",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/189",
    "body": "Task is to look at the following test and verify that they are necessary and working:\n\n- Located in `core/tests/continue.test.ts`\n- Tests the continue action:\n    - Validation function responses\n    - Message handling\n    - Database interactions\n    - Action state management",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/189/comments",
    "author": "sirkitree",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-06T18:33:06Z",
        "body": "This issue has been automatically marked as stale due to 30 days of inactivity.\nIf no further activity occurs within 7 days, it will be closed automatically. Please take action if this issue is still relevant."
      }
    ]
  },
  {
    "number": 188,
    "title": "Actions Tests",
    "created_at": "2024-11-03T23:14:59Z",
    "closed_at": "2025-01-05T18:32:48Z",
    "labels": [
      "automation",
      "testing",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/188",
    "body": "Task is to look at the following test and verify that they are necessary and working:\n\n- Located in `core/tests/actions.test.ts`\n- Tests action system:\n    - Action loading\n    - Action validation\n    - Action handler execution\n    - Test actions (TEST\\_ACTION and TEST\\_ACTION\\_FAIL)",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/188/comments",
    "author": "sirkitree",
    "comments": [
      {
        "user": "shakkernerd",
        "created_at": "2024-11-26T05:30:47Z",
        "body": "Check implementation in #591 "
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-05T18:31:20Z",
        "body": "This issue has been automatically marked as stale due to 30 days of inactivity.\nIf no further activity occurs within 7 days, it will be closed automatically. Please take action if this issue is still relevant."
      }
    ]
  },
  {
    "number": 187,
    "title": "Runtime Tests",
    "created_at": "2024-11-03T23:13:53Z",
    "closed_at": "2025-01-12T11:14:08Z",
    "labels": [
      "automation",
      "testing",
      "no-issue-activity"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/187",
    "body": "Task is to look at the following test and verify that they are necessary and working:\n\n- Located in `core/tests/runtime.test.ts`\n- Tests core runtime functionality:\n    - Runtime instance creation\n    - Memory lifecycle within runtime\n    - State management\n    - Basic runtime operations",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/187/comments",
    "author": "sirkitree",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-07T18:33:08Z",
        "body": "This issue has been automatically marked as stale due to 30 days of inactivity.\nIf no further activity occurs within 7 days, it will be closed automatically. Please take action if this issue is still relevant."
      }
    ]
  },
  {
    "number": 186,
    "title": "Goals Tests",
    "created_at": "2024-11-03T23:12:37Z",
    "closed_at": "2025-01-05T17:26:10Z",
    "labels": [
      "automation",
      "testing"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/186",
    "body": "Task is to look at the following test and verify that they are necessary and working:\n\n- Located in `core/tests/goals.test.ts` and `core/tests/goal.test.ts`\n- Tests goal management functionality:\n    - Goal creation\n    - Goal updates\n    - Status management\n    - Objective tracking",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/186/comments",
    "author": "sirkitree",
    "comments": [
      {
        "user": "shakkernerd",
        "created_at": "2025-01-05T17:26:10Z",
        "body": "Implemented in #1840 "
      }
    ]
  },
  {
    "number": 185,
    "title": "Token Provider Tests",
    "created_at": "2024-11-03T23:10:31Z",
    "closed_at": "2025-01-05T17:26:42Z",
    "labels": [
      "automation",
      "testing"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/185",
    "body": "Task is to look at the following test and verify that they are necessary and working:\n \n- Located in `core/tests/token.test.ts`\n- Tests token-related functionality:\n    - Fetching token security data\n    - Token holder information\n    - Trade data retrieval\n    - Formatted token reports",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/185/comments",
    "author": "sirkitree",
    "comments": [
      {
        "user": "normand1",
        "created_at": "2024-11-16T01:04:46Z",
        "body": "I'm taking a look at getting these to run"
      },
      {
        "user": "odilitime",
        "created_at": "2024-11-16T01:06:35Z",
        "body": "In jest or vitest? Because it sounds like we’re switching to vitest now"
      },
      {
        "user": "normand1",
        "created_at": "2024-11-16T01:14:17Z",
        "body": "@odilitime I was going to fix the existing tests that aren't running first, but can look at rewriting in Vitest too if that's the plan. ~~I'm hoping that was a mistake in the other issue because it doesn't actually make sense to me to switch if there's a bunch of tests already written in jest (which is also much more standard for nodejs projects like this)~~ \n\nEdit: Vitest is actually backwards compatible with jest and handles ts and modules much better. I'm sold on vitest."
      },
      {
        "user": "shakkernerd",
        "created_at": "2025-01-05T17:26:42Z",
        "body": "Implemented in #1840 "
      }
    ]
  },
  {
    "number": 183,
    "title": "Memory Tests",
    "created_at": "2024-11-03T23:06:30Z",
    "closed_at": "2025-01-05T17:26:21Z",
    "labels": [
      "automation",
      "testing"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/183",
    "body": "Task is to look at the following test and verify that they are necessary and working:\n\n- Located in `core/tests/memory.test.ts`\n- Tests memory-related functionality:\n    - Search memories by embedding similarity\n    - Validates memory ranking based on similarity scores\n    - Tests memory lifecycle (creation, search, and removal)\n    - Verifies embedding caching functionality",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/183/comments",
    "author": "sirkitree",
    "comments": [
      {
        "user": "shakkernerd",
        "created_at": "2025-01-05T17:26:21Z",
        "body": "Implemented in #1840 "
      }
    ]
  },
  {
    "number": 176,
    "title": "build docs doesn't seem to be working",
    "created_at": "2024-11-03T03:58:49Z",
    "closed_at": "2024-11-04T06:46:12Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/176",
    "body": "**Trying to build the docs from what I saw was being incorporated the other night and it's erroring out**\r\n\r\nFirst it errors out saying it wants node 23.1 but the project is using 22.xx.  I update to 23.1 using nvm and it still errors out.\r\n\r\nPutting this here as a place holder - this needs more work.\r\n\r\neliza>$ pnpm build-docs\r\n\r\n> eliza@ build-docs /Users/davidjaramillo/Documents/Projects/eliza\r\n> pnpm --dir docs build\r\n\r\n WARN  Unsupported engine: wanted: {\"node\":\"23.1.0\"} (current: {\"node\":\"v22.11.0\",\"pnpm\":\"9.12.3\"})\r\n\r\n> eliza-docs@0.0.0 build /Users/davidjaramillo/Documents/Projects/eliza/docs\r\n> docusaurus build\r\n\r\n[INFO] [en] Creating an optimized production build...\r\n[info] Loaded plugin typedoc-plugin-markdown\r\n[error] The tsconfig file /Users/davidjaramillo/Documents/Projects/eliza/tsconfig.json does not exist\r\n\r\n[ERROR] Error: Unable to build website for locale en.\r\n    at tryToBuildLocale (/Users/davidjaramillo/Documents/Projects/eliza/node_modules/.pnpm/@docusaurus+core@3.5.2_@docusaurus+types@3.5.2_acorn@8.14.0_react-dom@18.2.0_react@18.2.0__re_e6f3ssmiin2uov5e54dllhgixm/node_modules/@docusaurus/core/lib/commands/build.js:54:19)\r\n    at async /Users/davidjaramillo/Documents/Projects/eliza/node_modules/.pnpm/@docusaurus+core@3.5.2_@docusaurus+types@3.5.2_acorn@8.14.0_react-dom@18.2.0_react@18.2.0__re_e6f3ssmiin2uov5e54dllhgixm/node_modules/@docusaurus/core/lib/commands/build.js:65:9\r\n    at async mapAsyncSequential (/Users/davidjaramillo/Documents/Projects/eliza/node_modules/.pnpm/@docusaurus+utils@3.5.2_@docusaurus+types@3.5.2_acorn@8.14.0_react-dom@18.2.0_react@18.2.0__r_ommau7el7tbopkaz2g33fzjgfi/node_modules/@docusaurus/utils/lib/jsUtils.js:21:24)\r\n    at async Command.build (/Users/davidjaramillo/Documents/Projects/eliza/node_modules/.pnpm/@docusaurus+core@3.5.2_@docusaurus+types@3.5.2_acorn@8.14.0_react-dom@18.2.0_react@18.2.0__re_e6f3ssmiin2uov5e54dllhgixm/node_modules/@docusaurus/core/lib/commands/build.js:63:5) {\r\n  [cause]: Error: ENOENT: no such file or directory, scandir '/Users/davidjaramillo/Documents/Projects/eliza/src'\r\n      at Object.readdirSync (node:fs:1502:26)\r\n      at glob (/Users/davidjaramillo/Documents/Projects/eliza/node_modules/.pnpm/typedoc@0.26.11_typescript@5.6.3/node_modules/typedoc/dist/lib/utils/fs.js:259:32)\r\n      at /Users/davidjaramillo/Documents/Projects/eliza/node_modules/.pnpm/typedoc@0.26.11_typescript@5.6.3/node_modules/typedoc/dist/lib/utils/entry-point.js:207:38\r\n      at Array.flatMap (<anonymous>)\r\n      at expandGlobs (/Users/davidjaramillo/Documents/Projects/eliza/node_modules/.pnpm/typedoc@0.26.11_typescript@5.6.3/node_modules/typedoc/dist/lib/utils/entry-point.js:206:31)\r\n      at getEntryPoints (/Users/davidjaramillo/Documents/Projects/eliza/node_modules/.pnpm/typedoc@0.26.11_typescript@5.6.3/node_modules/typedoc/dist/lib/utils/entry-point.js:83:53)\r\n      at _classThis.getEntryPoints (/Users/davidjaramillo/Documents/Projects/eliza/node_modules/.pnpm/typedoc@0.26.11_typescript@5.6.3/node_modules/typedoc/dist/lib/application.js:299:53)\r\n      at _classThis.convert (/Users/davidjaramillo/Documents/Projects/eliza/node_modules/.pnpm/typedoc@0.26.11_typescript@5.6.3/node_modules/typedoc/dist/lib/application.js:321:38)\r\n      at generateTypedoc (/Users/davidjaramillo/Documents/Projects/eliza/node_modules/.pnpm/docusaurus-plugin-typedoc@1.0.5_typedoc-plugin-markdown@4.2.9_typedoc@0.26.11_typescript@5.6.3__/node_modules/docusaurus-plugin-typedoc/dist/plugin.js:99:31)\r\n      at async Object.pluginDocusaurus [as plugin] (/Users/davidjaramillo/Documents/Projects/eliza/node_modules/.pnpm/docusaurus-plugin-typedoc@1.0.5_typedoc-plugin-markdown@4.2.9_typedoc@0.26.11_typescript@5.6.3__/node_modules/docusaurus-plugin-typedoc/dist/plugin.js:40:9) {\r\n    errno: -2,\r\n    code: 'ENOENT',\r\n    syscall: 'scandir',\r\n    path: '/Users/davidjaramillo/Documents/Projects/eliza/src'\r\n  }\r\n}\r\n[INFO] Docusaurus version: 3.5.2\r\nNode version: v22.11.0\r\n ELIFECYCLE  Command failed with exit code 1.\r\n ELIFECYCLE  Command failed with exit code 1.\r\neliza>$ \r\n\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/176/comments",
    "author": "yodamaster726",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-11-04T06:46:12Z",
        "body": "Fixed, other issues but this one is gud"
      }
    ]
  },
  {
    "number": 166,
    "title": "Prompt template overrides",
    "created_at": "2024-11-02T05:58:40Z",
    "closed_at": "2024-11-09T01:52:15Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/166",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nI am modifying core templates from different providers to alter the style of thinking for my agent and control all aspects of its prompting.\r\n\r\n**Describe the solution you'd like**\r\n\r\nOverride prompt templates in the character file for all prompts (twitter generation, search, interaction, etc)\r\n\r\n**Describe alternatives you've considered**\r\n\r\nDiverging (which would suck).\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/166/comments",
    "author": "parzival418",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-11-09T01:52:15Z",
        "body": "Merged, can add template overrides into character files"
      }
    ]
  },
  {
    "number": 160,
    "title": "type export structure",
    "created_at": "2024-11-01T21:59:50Z",
    "closed_at": "2024-11-01T22:00:26Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/160",
    "body": "- cleans up exports ready for doc generation",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/160/comments",
    "author": "ponderingdemocritus",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-11-01T22:00:23Z",
        "body": "lovely"
      }
    ]
  },
  {
    "number": 158,
    "title": "Make image generation very nice and spicy",
    "created_at": "2024-11-01T21:17:26Z",
    "closed_at": "2024-12-14T07:28:00Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/158",
    "body": "@o-on-x has offered to work on this for their own agent",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/158/comments",
    "author": "lalalune",
    "comments": [
      {
        "user": "o-on-x",
        "created_at": "2024-11-03T02:37:47Z",
        "body": "character issues:\r\nneed to have how the image gen is influenced by character file & user requests \r\n\r\nfor now character file already influences if you directly mention about what images it posts & how often in the style part of character file \r\n\r\nupload issues:\r\nthe main issues with functionality are imageGen returns a base64 url string. this needs to be loaded to buffer/file before upload\r\nsecond issue is twitter client needs a upload message addition on the interface which twitter-client-api might support\r\n\r\ncurrent image post working changes I'm using for discord (telegram is similar need to find where i put that code) :     \r\nin src/clients/discord/messages.ts:\r\n\r\n`\r\n\r\n     const callback: HandlerCallback = async (content: Content, files: any[]) => {\r\n\r\n        \r\n        // Process any data URL attachments\r\n        const processedFiles = [...(files || [])];\r\n        \r\n        if (content.attachments?.length) {\r\n          for (const attachment of content.attachments) {\r\n            if (attachment.url?.startsWith('data:')) {\r\n              try {\r\n                const {buffer, type} = await this.attachmentManager.processDataUrlToBuffer(attachment.url);\r\n                const extension = type.split('/')[1] || 'png';\r\n                const fileName = `${attachment.id || Date.now()}.${extension}`;\r\n                \r\n                processedFiles.push({\r\n                  attachment: buffer,\r\n                  name: fileName\r\n                });\r\n                content.text = \"...\"\r\n                // Update the attachment URL to reference the filename\r\n                attachment.url = `attachment://${fileName}`;\r\n              } catch (error) {\r\n                console.error('Error processing data URL:', error);\r\n              }\r\n            }\r\n          }\r\n        }\r\n      \r\n        if (message.id && !content.inReplyTo) {\r\n          content.inReplyTo = stringToUuid(message.id);\r\n        }\r\n      \r\n        if (message.channel.type === ChannelType.GuildVoice) {\r\n          console.log(\"generating voice\");\r\n          const audioStream = await SpeechService.generate(\r\n            this.runtime,\r\n            content.text,\r\n          );\r\n          await this.voiceManager.playAudioStream(userId, audioStream);\r\n          const memory: Memory = {\r\n            id: stringToUuid(message.id),\r\n            userId: this.runtime.agentId,\r\n            content,\r\n            roomId,\r\n            embedding: embeddingZeroVector,\r\n          };\r\n          return [memory];\r\n        } else {\r\n          // For text channels, send the message with the processed files\r\n          const messages = await sendMessageInChunks(\r\n            message.channel as TextChannel,\r\n            content.text,\r\n            message.id,\r\n            processedFiles,\r\n          );\r\n          let notFirstMessage = false;\r\n          const memories: Memory[] = [];\r\n          for (const m of messages) {\r\n            let action = content.action;\r\n            // If there's only one message or it's the last message, keep the original action\r\n            // For multiple messages, set all but the last to 'CONTINUE'\r\n            if (messages.length > 1 && m !== messages[messages.length - 1]) {\r\n              action = \"CONTINUE\";\r\n            }\r\n\r\n            notFirstMessage = true;\r\n            const memory: Memory = {\r\n              id: stringToUuid(m.id),\r\n              userId: this.runtime.agentId,\r\n              content: {\r\n                ...content,\r\n                action,\r\n                inReplyTo: messageId,\r\n                url: m.url,\r\n              },\r\n              roomId,\r\n              embedding: embeddingZeroVector,\r\n              createdAt: m.createdTimestamp,\r\n            };\r\n            memories.push(memory);\r\n          }\r\n          for (const m of memories) {\r\n            await this.runtime.messageManager.createMemory(m);\r\n          }\r\n          return memories;\r\n        }\r\n      };\r\n\r\n\r\n`\r\n\r\nin src/clients/discord/attachments.ts/class AttachmentManager:\r\n\r\n`\r\n  async processDataUrlToBuffer(dataUrl: string): Promise<{buffer: Buffer, type: string}> {\r\n    const matches = dataUrl.match(/^data:([A-Za-z-+\\/]+);base64,(.+)$/);\r\n    \r\n    if (!matches || matches.length !== 3) {\r\n      throw new Error('Invalid data URL');\r\n    }\r\n  \r\n    const type = matches[1];\r\n    const base64Data = matches[2];\r\n    const buffer = Buffer.from(base64Data, 'base64');\r\n    \r\n    return {buffer, type};\r\n  }\r\n`"
      },
      {
        "user": "o-on-x",
        "created_at": "2024-11-03T03:48:39Z",
        "body": "the line for catching the image is actually\r\n`if (attachment.url?.startsWith('data:image')) {`"
      },
      {
        "user": "o-on-x",
        "created_at": "2024-11-03T14:18:49Z",
        "body": "issues with image gen handling this way effect handling of text attachments. solution will be to have image gen save and return file path not a base64 string. then to have action handled ACTION = \"IMAGE GEN\""
      }
    ]
  },
  {
    "number": 143,
    "title": "chore(deps): Upgrade uuid to v11 and TypeScript to v8",
    "created_at": "2024-10-31T01:17:45Z",
    "closed_at": "2024-11-01T00:31:05Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/143",
    "body": "## Rationale\r\nThe purpose of this PR is to enhanceour dependency stack by incorporating the latest major versions of uuid and TypeScript. \r\n\r\n## Overview of Changes\r\n- Upgraded the uuid library to version 11\r\n- Elevated TypeScript and its associated packages to version 8 (major release)\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/143/comments",
    "author": "5c0",
    "comments": [
      {
        "user": "sirkitree",
        "created_at": "2024-10-31T01:30:09Z",
        "body": "I only see uuid in there"
      }
    ]
  },
  {
    "number": 95,
    "title": "Can't Update Character Personality After Modifications in defaultCharacter.ts",
    "created_at": "2024-10-30T12:34:22Z",
    "closed_at": "2024-11-04T05:47:35Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/95",
    "body": "\r\n**Describe the bug**\r\nAfter modifying the character personality in defaultCharacter.ts, the AI responses remain unchanged and continue using the old personality settings in both Discord and Twitter interactions. However, the Twitter post creation functionality correctly reflects the new personality changes.\r\n\r\n**To Reproduce**\r\n1. Navigate to defaultCharacter.ts\r\n2. Modify the character personality settings/prompt\r\n3. Save the changes and restart the application\r\n4. Test interactions on Discord - responses use old personality\r\n5. Test interactions on Twitter - responses use old personality\r\n6. Test Twitter post creation - correctly uses new personality\r\n\r\n**Expected behavior**\r\n- When defaultCharacter.ts is modified, all AI interactions (Discord responses, Twitter replies, and Twitter posts) should reflect the new personality settings immediately after application restart.\r\n- The character should consistently maintain the new personality across all platforms and interaction types.\r\n\r\n**Screenshots**\r\n<!-- You may want to add screenshots showing:\r\n1. The modified defaultCharacter.ts code\r\n2. Discord responses showing old personality\r\n3. Twitter responses showing old personality\r\n4. Twitter post creation showing new personality -->\r\n\r\n**Additional context**\r\n- The inconsistency between Twitter post creation and response behavior suggests a possible caching issue or incomplete personality update propagation across different modules\r\n- The issue persists across application restarts\r\n- Twitter post creation working correctly with new personality indicates that the character file is being read properly in some contexts but not others",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/95/comments",
    "author": "SotoAlt",
    "comments": [
      {
        "user": "SotoAlt",
        "created_at": "2024-10-30T14:17:09Z",
        "body": "found a workaround this issue, \r\ndeleting db.sqlite on every change on the character personality/style, restart app, and it works with the updated personality"
      },
      {
        "user": "lalalune",
        "created_at": "2024-11-01T22:10:28Z",
        "body": "Yeah. The issue is that the agent's conversations are still there. We could make a script to delete a character's conversations?"
      },
      {
        "user": "lalalune",
        "created_at": "2024-11-04T05:47:35Z",
        "body": "Closing this because I think it's a feature, not a bug. We'll need a script to clear agent memory or something."
      }
    ]
  },
  {
    "number": 92,
    "title": "Time Interval of generateNewTweetLoop is not consistent with the comment",
    "created_at": "2024-10-30T12:02:55Z",
    "closed_at": "2024-11-04T05:47:11Z",
    "labels": [
      "bug",
      "Client: Twitter",
      "Priority: High"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/92",
    "body": "on src/clients/twitter/generate.ts\r\n\r\nexport class TwitterGenerationClient extends ClientBase {\r\n  onReady() {\r\n    const generateNewTweetLoop = () => {\r\n      this.generateNewTweet();\r\n      setTimeout(\r\n        generateNewTweetLoop,\r\n        (Math.floor(Math.random() * (45 - 15 + 1)) + 15) * 60 * 1000,\r\n      ); // Random interval between 4-8 hours\r\n      \r\n      **its actually 15-45 minutes, not 4-8 hours as the comment suggests.**\r\n      \r\n      \r\n     Also IMO, all the time intervals, replies and search and engage are was too aggressive, I got my agent banned on X in less than 12 hrs of using in on the default settings, maybe we can have way more time intervals to avoid this by default",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/92/comments",
    "author": "SotoAlt",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-11-01T21:31:47Z",
        "body": "We should probably figure out a way to control this. It could be a setting, for tweets / day. To fix the issue, feel free to change the comment. 15-45 is probably too many tweets to drive engagement, its better when it is 4-8."
      }
    ]
  },
  {
    "number": 75,
    "title": "Add npx action",
    "created_at": "2024-10-29T09:00:51Z",
    "closed_at": "2025-01-12T11:12:48Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/75",
    "body": "**Is your feature request related to a problem? Please describe.**\r\n\r\nThe goal of this is to enable someone to run 'npx eliza' and it would start a default local running instance of eliza that they could interact with through chat, using all local models.\r\n\r\nIf the user passes a character file, like --characters=<eliza.json>, then it will load that character file. If the characterfile has secrets in it, it will load all of the secrets, as though they had cloned the repo and run npm run dev -- --characters=<eliza>.json\r\n\r\nThe result of this feature is that I can run `npx @ai16z/eliza` and trial locally, or point to a character file and run an agent (or agents)",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/75/comments",
    "author": "lalalune",
    "comments": [
      {
        "user": "roninjin10",
        "created_at": "2024-10-30T02:36:06Z",
        "body": "Happy to add this. What is the entrypoint file that needs to run for this?"
      }
    ]
  },
  {
    "number": 74,
    "title": "Model provider abstraction",
    "created_at": "2024-10-29T06:01:40Z",
    "closed_at": "2024-11-01T00:23:03Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/74",
    "body": "Adds model provider abstraction, WIP not ready",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/74/comments",
    "author": "lalalune",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-10-29T09:02:33Z",
        "body": "@sirkitree please take a look. I think we need to consider secrets management, but I tested with OpenAI. I think you'll agree it is much better :)"
      },
      {
        "user": "sirkitree",
        "created_at": "2024-10-30T01:59:57Z",
        "body": "Is this for resolving #72 ?"
      },
      {
        "user": "lalalune",
        "created_at": "2024-10-30T08:19:42Z",
        "body": "No, this is for dealing with the horrible API key management. It makes it so you just set a model provider in your character file and it uses that one. Replaces a lot of very fragile code."
      }
    ]
  },
  {
    "number": 71,
    "title": "chore: fix typo",
    "created_at": "2024-10-29T00:57:49Z",
    "closed_at": "2024-10-29T01:50:56Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/71",
    "body": "SETINGS -> SETTINGS",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/71/comments",
    "author": "eltociear",
    "comments": [
      {
        "user": "sirkitree",
        "created_at": "2024-10-29T01:51:08Z",
        "body": "Thanks @eltociear !"
      }
    ]
  },
  {
    "number": 70,
    "title": "Execution gets stuck in a loop",
    "created_at": "2024-10-29T00:21:10Z",
    "closed_at": "2024-11-08T10:58:00Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/70",
    "body": "My agent has been getting caught in an random loop where this is included in the terminal output:\r\n```\r\nparsedContent is null\r\nparsedContent is null, retrying\r\n```\r\nThe request body is the usual size and headers are as expected, I can't see what the issue is and what repro steps there are. I'm only running text interaction on Discord.\r\n\r\nIf I get more insight I'll update it here.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/70/comments",
    "author": "docherty",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-10-29T04:11:54Z",
        "body": "Hmmm, hmu on discord (new.moon) and lets fix it."
      },
      {
        "user": "St4rgarden",
        "created_at": "2024-10-31T07:45:08Z",
        "body": "I have run into this a few times as well."
      }
    ]
  },
  {
    "number": 65,
    "title": "Telegram Integration with shouldRespond handler + image recognition",
    "created_at": "2024-10-28T19:29:22Z",
    "closed_at": "2024-10-28T22:05:14Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/65",
    "body": null,
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/65/comments",
    "author": "dreaminglucid",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-10-28T22:00:01Z",
        "body": "Good to test and merge?"
      }
    ]
  },
  {
    "number": 59,
    "title": "Clarifying instructions to run locally",
    "created_at": "2024-10-28T08:17:21Z",
    "closed_at": "2024-10-28T10:37:10Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/59",
    "body": "Added a new section to clarify how to run locally",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/59/comments",
    "author": "ferric-sol",
    "comments": [
      {
        "user": "sirkitree",
        "created_at": "2024-10-28T10:37:17Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 55,
    "title": "Voice is not working, \"null\" from incoming messages",
    "created_at": "2024-10-27T18:56:18Z",
    "closed_at": "2024-11-08T10:57:44Z",
    "labels": [
      "bug",
      "voice"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/55",
    "body": "Review and figure out why the voice chat is not working",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/55/comments",
    "author": "lalalune",
    "comments": [
      {
        "user": "alextitonis",
        "created_at": "2024-10-28T13:55:51Z",
        "body": "Some debugging results:\r\n* Bot was not getting the stream of the user\r\n* Was due to connection staying in `connecting` state (trying to resolve this)"
      },
      {
        "user": "lalalune",
        "created_at": "2024-11-01T21:03:47Z",
        "body": "Is this resolved?"
      }
    ]
  },
  {
    "number": 53,
    "title": "⚙️Take Order Action Integration",
    "created_at": "2024-10-27T18:11:05Z",
    "closed_at": "2024-11-20T09:58:28Z",
    "labels": [
      "enhancement",
      "core-system"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/53",
    "body": "⚙️ Action Integration: The integration of the \"take order\" action into the agent represents a foundational step in enhancing the system's capabilities, similar to adding new features to a smart assistant.\r\n\r\nIntegrate the \"take order\" action into the system as a foundational feature.\r\n\r\n#### Requirements\r\n- Design take order workflow\r\n- Implement action handlers\r\n- Add validation and verification steps\r\n- Create response handling system\r\n\r\n#### Acceptance Criteria\r\n- [ ] Users can successfully take orders\r\n- [ ] Action is properly integrated with order book\r\n- [ ] Validation checks are in place\r\n- [ ] Response handling works correctly",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/53/comments",
    "author": "sirkitree",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-11-01T21:03:47Z",
        "body": "@MarcoMandar has been working on this. The order book and trust system are unified, so I am assigning tickets which we can deem duplicate and close as necessary."
      }
    ]
  },
  {
    "number": 50,
    "title": "🤖 Confidence Level Implementation",
    "created_at": "2024-10-27T18:08:11Z",
    "closed_at": "2024-11-08T10:55:40Z",
    "labels": [
      "enhancement",
      "trust-system"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/50",
    "body": "🎯 Confidence Metrics: Establishing clear confidence levels for trades helps in assessing the reliability of recommendations, making it easier to identify which trades are worth pursuing based on user input.\r\n\r\nImplement a confidence level system for order evaluation with low, medium, and high confidence categories.\r\n\r\n#### Requirements\r\n- Define criteria for each confidence level\r\n- Create UI elements for confidence selection\r\n- Implement confidence scoring algorithm\r\n- Add confidence level filters to order book\r\n\r\n#### Acceptance Criteria\r\n- [ ] Users can assign confidence levels to orders\r\n- [ ] Confidence levels are clearly displayed in the UI\r\n- [ ] Filtering system works based on confidence levels\r\n- [ ] Confidence scoring affects trust calculations\r\n",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/50/comments",
    "author": "sirkitree",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-11-01T20:58:58Z",
        "body": "@MarcoMandar has been working on this. The order book and trust system are unified, so I am assigning tickets which we can deem duplicate and close as necessary."
      }
    ]
  },
  {
    "number": 49,
    "title": "📊 Order Book System",
    "created_at": "2024-10-27T18:07:18Z",
    "closed_at": "2024-11-20T09:58:27Z",
    "labels": [
      "enhancement",
      "Priority: High",
      "core-system"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/49",
    "body": "📈 Importance of the Order Book: The order book is critical for establishing a framework of trust within the marketplace. By documenting trades and their success rates, it lays the groundwork for a reliable trading environment.\r\n\r\nDevelop a central order book system for managing trades and trust assessments.\r\n\r\n#### Requirements\r\n- Design database schema for order storage\r\n- Implement order matching logic\r\n- Create APIs for order submission and retrieval\r\n- Add trust assessment calculations\r\n\r\n#### Acceptance Criteria\r\n- [ ] Orders can be created and stored in the system\r\n- [ ] Order matching algorithm is functioning\r\n- [ ] APIs are documented and tested\r\n- [ ] Trust assessments are calculated correctly",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/49/comments",
    "author": "sirkitree",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-11-01T20:58:49Z",
        "body": "@MarcoMandar has been working on this. The order book and trust system are unified, so I am assigning tickets which we can deem duplicate and close as necessary."
      }
    ]
  },
  {
    "number": 48,
    "title": "📈 Trading Assistant Implementation",
    "created_at": "2024-10-27T18:06:10Z",
    "closed_at": "2024-11-08T10:55:29Z",
    "labels": [
      "enhancement",
      "Priority: High",
      "Trading"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/48",
    "body": "💼 Role of the Trading Assistant: The assistant's function ensures that trades can be executed without full automation, allowing human oversight while still proving the system's viability. This balance between assistance and automation enhances user trust and engagement.\r\n\r\nImplement a trading assistant (Marc) that can execute trades based on user requests.\r\n\r\n#### Requirements\r\n- Create an interface for users to submit trade requests\r\n- Implement trade execution logic with human oversight capabilities\r\n- Add validation checks for trade parameters\r\n- Include error handling and confirmation messages\r\n\r\n#### Acceptance Criteria\r\n- [ ] Trading assistant can receive and process trade requests\r\n- [ ] Human oversight mechanism is in place\r\n- [ ] Trade execution confirmation is provided to users\r\n- [ ] Error handling for invalid trade requests",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/48/comments",
    "author": "sirkitree",
    "comments": [
      {
        "user": "marcellodesales",
        "created_at": "2025-01-02T23:59:20Z",
        "body": "Where are those implemented?"
      }
    ]
  },
  {
    "number": 44,
    "title": "Image gen",
    "created_at": "2024-10-27T13:04:40Z",
    "closed_at": "2024-11-01T01:21:26Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/44",
    "body": null,
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/44/comments",
    "author": "alextitonis",
    "comments": [
      {
        "user": "sirkitree",
        "created_at": "2024-10-27T16:23:57Z",
        "body": "Hi there, and thank you for your contribution!\r\n\r\nWould you mind outlining some steps for testing in your PR? This looks interesting but I'm not sure how to test it.\r\n\r\nThanks again!"
      },
      {
        "user": "alextitonis",
        "created_at": "2024-10-27T18:47:29Z",
        "body": "> Hi there, and thank you for your contribution!\r\n> \r\n> Would you mind outlining some steps for testing in your PR? This looks interesting but I'm not sure how to test it.\r\n> \r\n> Thanks again!\r\n\r\nWasn't able to test through discord (the main code was giving me error 400 for a reason)\r\nBut there is a route also to test the workflow:\r\nPOST: /agentId/image\r\nBody: {\r\nprompt: string;\r\nwidth: number;\r\nheight: number;\r\nsteps?: number (default is 4)\r\ncount?: number (default is 1)\r\n}\r\n\r\nOutput is an array: { image: string (b64), caption: string }[]"
      },
      {
        "user": "lalalune",
        "created_at": "2024-10-28T20:00:33Z",
        "body": "Let's make sure this is working through Discord and Twitter :)"
      }
    ]
  },
  {
    "number": 41,
    "title": "Update README.md",
    "created_at": "2024-10-26T20:28:43Z",
    "closed_at": "2024-10-27T09:30:56Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/41",
    "body": "Resolves #39\r\n\r\nImprove the command for running your own character which had a typo and only talked about the argument and not the entire command.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/41/comments",
    "author": "sirkitree",
    "comments": [
      {
        "user": "lalalune",
        "created_at": "2024-10-27T09:31:03Z",
        "body": "you are the goat"
      }
    ]
  },
  {
    "number": 38,
    "title": "App running on configurations from .env",
    "created_at": "2024-10-26T19:39:54Z",
    "closed_at": "2024-10-28T18:32:37Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/38",
    "body": null,
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/38/comments",
    "author": "FabriceIRANKUNDA",
    "comments": [
      {
        "user": "sirkitree",
        "created_at": "2024-10-27T15:04:48Z",
        "body": "Thanks for your contribution :)\r\n\r\nI am looking through this and while the formatting changes look reasonable, I'm not sure that it actually solves anything.\r\n\r\nWould you mind helping me understand\r\n1. What your change aims to accomplish\r\n1. How it helps solve the linked issue\r\n2. Describe some testing steps I could take to verify on my end\r\n\r\nNoting there is also a conflict to resolve."
      }
    ]
  },
  {
    "number": 36,
    "title": "Update README.md",
    "created_at": "2024-10-26T17:14:39Z",
    "closed_at": "2024-10-26T17:22:03Z",
    "labels": [],
    "url": "https://github.com/elizaOS/eliza/pull/36",
    "body": "Revise Discord Bot link",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/36/comments",
    "author": "wahndo",
    "comments": [
      {
        "user": "exhuman777",
        "created_at": "2024-10-26T17:20:50Z",
        "body": "> Revise Discord Bot link\r\n\r\ngood!"
      }
    ]
  },
  {
    "number": 35,
    "title": "Telegram Improvements",
    "created_at": "2024-10-26T10:40:33Z",
    "closed_at": "2024-11-01T01:57:08Z",
    "labels": [
      "enhancement",
      "Client: Telegram"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/35",
    "body": "- shouldRespond handler is implemented well\r\n- Summarize etc all work\r\n- Hook in the image recognition and other attachment recognition, like Discord\r\n- Generates images -- character should have some default image prompt ot prompts",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/35/comments",
    "author": "lalalune",
    "comments": [
      {
        "user": "dreaminglucid",
        "created_at": "2024-10-28T19:45:01Z",
        "body": "I've made a pr for adding shouldRespond handler + image recognition"
      },
      {
        "user": "sirkitree",
        "created_at": "2024-10-30T01:18:20Z",
        "body": "Where?"
      }
    ]
  },
  {
    "number": 23,
    "title": "Fix memory mixing in Twitter generate",
    "created_at": "2024-10-24T07:19:58Z",
    "closed_at": "2024-11-04T05:25:51Z",
    "labels": [
      "bug",
      "Client: Twitter",
      "Priority: High"
    ],
    "url": "https://github.com/elizaOS/eliza/issues/23",
    "body": "Twitter generate uses a default room ID and this might be causing problems between the clients, since they access the same sqlite database. So Spartan would say kind of weird stuff about quantum mechanics, because he's pulling some of Ruby's memories. This only seems to happen on generation since room id is same.",
    "comments_url": "https://api.github.com/repos/elizaOS/eliza/issues/23/comments",
    "author": "lalalune",
    "comments": [
      {
        "user": "sirkitree",
        "created_at": "2024-10-27T14:50:30Z",
        "body": "Possibly related to #32 "
      },
      {
        "user": "lalalune",
        "created_at": "2024-10-29T09:24:42Z",
        "body": "Related to #32. This is causing our agent personas to mix up so we def need to fix ASAP.\r\n\r\n@alextitonis @dreaminglucid if you have time, take a look? I'll look as well."
      },
      {
        "user": "dreaminglucid",
        "created_at": "2024-11-01T20:54:17Z",
        "body": "will look into this today"
      },
      {
        "user": "sirkitree",
        "created_at": "2024-11-02T16:01:43Z",
        "body": "I see this is closed but I think it's still happening"
      },
      {
        "user": "lalalune",
        "created_at": "2024-11-04T05:25:55Z",
        "body": "Fixed it by setting unique room IDs and message IDs for each message, then adding an agentId ito the memory type / in db"
      }
    ]
  }
]