[
  {
    "number": 38,
    "title": "feat(deps): add docx2txt package for .docx text extraction",
    "created_at": "2025-02-11T04:18:43Z",
    "closed_at": "2025-02-11T04:21:11Z",
    "labels": [],
    "url": "https://github.com/rag-web-ui/rag-web-ui/pull/38",
    "body": "- Add docx2txt==0.8 to requirements.txt for better .docx file handling\r\n- This package provides additional support for extracting text from Word documents",
    "comments_url": "https://api.github.com/repos/rag-web-ui/rag-web-ui/issues/38/comments",
    "author": "WongLoki",
    "comments": [
      {
        "user": "JohannLai",
        "created_at": "2025-02-11T04:20:45Z",
        "body": "#36 #33 "
      }
    ]
  },
  {
    "number": 27,
    "title": "CI: Add a GitHub action to check if the build process can pass",
    "created_at": "2025-02-10T08:22:57Z",
    "closed_at": "2025-02-12T09:00:01Z",
    "labels": [],
    "url": "https://github.com/rag-web-ui/rag-web-ui/pull/27",
    "body": "Related to #26\n\nAdd a GitHub action to check if the build process can pass and perform a simple end-to-end test.\n\n* **Add `requests` package to dependencies**\n  - Modify `backend/requirements.txt` to include `requests>=2.26.0`.\n\n* **Create GitHub Actions workflow**\n  - Add `.github/workflows/ci.yml` to define the CI workflow.\n  - Trigger the workflow on push and pull request events to the `main` branch.\n  - Include steps to set up the environment, install dependencies, run the build, start the backend server, wait for the server to start, and perform a cURL request to the API.\n\nI am a green hand on the GitHub Action. If there any bugs or error, plz DM.\n",
    "comments_url": "https://api.github.com/repos/rag-web-ui/rag-web-ui/issues/27/comments",
    "author": "HendricksJudy",
    "comments": [
      {
        "user": "JohannLai",
        "created_at": "2025-02-10T09:02:09Z",
        "body": "Great! But can we start  all service  directly with docker-compose? (include frontend backend and databse) 👍 "
      },
      {
        "user": "HendricksJudy",
        "created_at": "2025-02-10T10:12:50Z",
        "body": "> Great! But can we start all service directly with docker-compose? (include frontend backend and databse) 👍\r\n\r\nSure, let me learn and implement."
      }
    ]
  },
  {
    "number": 22,
    "title": "entrypoint.sh use line ending with CRLF",
    "created_at": "2025-02-09T08:03:21Z",
    "closed_at": "2025-02-09T13:07:53Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/rag-web-ui/rag-web-ui/issues/22",
    "body": "I tried to execute the docker but the backend container failed with:\n`\n2025-02-08 23:23:42 Waiting for MySQL...\n2025-02-08 23:23:42 ./entrypoint.sh: line 2: $'\\r': command not found\n2025-02-08 23:23:42 ./entrypoint.sh: line 18: syntax error: unexpected end of file\n`\n\nI tried to update the file end line sequence from CRLF TO LF then issue gone, not sure I'm the only one met this issue or not.",
    "comments_url": "https://api.github.com/repos/rag-web-ui/rag-web-ui/issues/22/comments",
    "author": "ee07b415",
    "comments": [
      {
        "user": "ee07b415",
        "created_at": "2025-02-09T08:11:48Z",
        "body": "Adding some more context.\n\nWhen I try to execute the docker after clone the repo, I run into the entrypoint.sh not found first, I thought it may related to the docker entrypoint issue, so I update the script to bash and adding the bash executing on the script, then this end line issue show up. "
      },
      {
        "user": "JohannLai",
        "created_at": "2025-02-09T13:07:17Z",
        "body": "Thank you for reporting this issue! I've added a `.gitattributes` file to resolve the line ending issues across different platforms.\n\n### Why did this happen?\nThis issue occurs because different operating systems use different line endings:\n- Windows uses CRLF (\\r\\n)\n- Unix/Linux/macOS uses LF (\\n)\n\nWhen Windows users clone the repository, Git might automatically convert files to CRLF format. When these files are then run in Docker (Linux environment), it causes the `$'\\r': command not found` error you encountered.\n\n### Solution\nI've added a `.gitattributes` file to consistently manage line endings for all files:\n```text\n# Set default behavior to automatically normalize line endings\n* text=auto\n\n# Unix/Linux/macOS style files (using LF)\n*.sh text eol=lf\n*.bash text eol=lf\nDockerfile text eol=lf\n.dockerignore text eol=lf\ndocker-compose*.yml text eol=lf\n*.py text eol=lf\n*.json text eol=lf\n*.yml text eol=lf\n*.yaml text eol=lf\n*.md text eol=lf\n\n# Windows style files (using CRLF)\n*.{cmd,[cC][mM][dD]} text eol=crlf\n*.{bat,[bB][aA][tT]} text eol=crlf\n*.ps1 text eol=crlf\n\n# Binary files (no conversion)\n*.png binary\n*.jpg binary\n*.gif binary\n*.ico binary\n*.zip binary\n*.pdf binary\n```\n\nThis configuration ensures:\n1. Shell scripts and Docker-related files always use LF endings\n2. Windows-specific files maintain CRLF endings\n3. Binary files remain untouched\n\nNow the project should work consistently across all platforms without manual intervention. Please pull the latest changes and try again. Let me know if you encounter any other issues!\n\n"
      }
    ]
  },
  {
    "number": 13,
    "title": "Refactoring: Need to strip the embedding and llm chat from the code 重构： 需要把 embedding 和 llm chat 从代码剥离",
    "created_at": "2025-02-03T14:43:44Z",
    "closed_at": "2025-02-06T15:59:59Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/rag-web-ui/rag-web-ui/issues/13",
    "body": "Form a structure similar to the following:\n\n- model\n\t-  ollama\n\t\t-  llm\n\t\t-  embedding\n\t- openai\n\t\t- llm\n\t\t- embedding\n\nNeed to obtain an instance from here where it is required.\n\nAlso, the `.env` file needs to be modified accordingly.\n\n---\n\n形成一个类似下面这样的结构：\n\n- model\n\t-  ollama\n\t\t-  llm\n\t\t-  embedding\n\t- openai\n\t\t- llm\n\t\t- embedding\n\n需要使用的地方从这里获取实例。\n\n同时 .env 也要跟着改动",
    "comments_url": "https://api.github.com/repos/rag-web-ui/rag-web-ui/issues/13/comments",
    "author": "JohannLai",
    "comments": [
      {
        "user": "JohannLai",
        "created_at": "2025-02-04T08:45:48Z",
        "body": "The background is that some models do not have an embedding interface, such as DeepSeek, so the Chat interface and the Embedding interface need to be separated. They may be combinations of different models, such as chat using deepseek + embedding and cohere / jina\n\n背景是这样的，  有一些模型是没有 embedding 接口的，例如 DeepSeek，所以 Chat 的接口和 Embedding 的接口要分开，他们可能是不同模型的组合，如 chat 用 deepseek + embedding 和 cohere / jina "
      },
      {
        "user": "lonngxiang",
        "created_at": "2025-02-06T04:33:25Z",
        "body": "期待完善"
      },
      {
        "user": "JohannLai",
        "created_at": "2025-02-06T15:59:56Z",
        "body": "everything done～ "
      }
    ]
  },
  {
    "number": 12,
    "title": "Feature/ollama",
    "created_at": "2025-02-03T03:30:15Z",
    "closed_at": "2025-02-11T03:56:11Z",
    "labels": [],
    "url": "https://github.com/rag-web-ui/rag-web-ui/pull/12",
    "body": null,
    "comments_url": "https://api.github.com/repos/rag-web-ui/rag-web-ui/issues/12/comments",
    "author": "WongLoki",
    "comments": [
      {
        "user": "HendricksJudy",
        "created_at": "2025-02-07T05:46:23Z",
        "body": "It seems to work but has some log in the PR"
      },
      {
        "user": "WongLoki",
        "created_at": "2025-02-11T03:56:07Z",
        "body": "Yap, you're right. I have talk it with Johan, and we should use a new approach to handle it."
      }
    ]
  },
  {
    "number": 10,
    "title": "Optimize code and add logging",
    "created_at": "2025-02-01T07:09:13Z",
    "closed_at": "2025-02-02T05:38:39Z",
    "labels": [],
    "url": "https://github.com/rag-web-ui/rag-web-ui/pull/10",
    "body": "Add logging and docstrings to various functions and optimize database queries.\n\n* **Logging**:\n  - Add logging for key creation, update, and deletion in `backend/app/api/api_v1/api_keys.py`.\n  - Add logging for knowledge base creation, update, and deletion in `backend/app/api/api_v1/knowledge_base.py`.\n  - Add logging for MinIO operations in `backend/app/core/minio.py`.\n\n* **Docstrings**:\n  - Add docstrings to all functions in `backend/app/api/api_v1/api_keys.py`.\n  - Add docstrings to all functions in `backend/app/api/api_v1/knowledge_base.py`.\n  - Add docstrings to all functions in `backend/app/core/minio.py`.\n\n* **Configuration**:\n  - Add comments to explain each configuration setting in `backend/app/core/config.py`.\n  - Ensure all environment variables are properly loaded in `backend/app/core/config.py`.\n\n* **Optimization**:\n  - Optimize database queries for key retrieval in `backend/app/api/api_v1/api_keys.py`.\n  - Optimize database queries for knowledge base retrieval in `backend/app/api/api_v1/knowledge_base.py`.\n\n",
    "comments_url": "https://api.github.com/repos/rag-web-ui/rag-web-ui/issues/10/comments",
    "author": "HendricksJudy",
    "comments": [
      {
        "user": "JohannLai",
        "created_at": "2025-02-02T05:38:34Z",
        "body": "LGTM! THX"
      }
    ]
  },
  {
    "number": 6,
    "title": "Feature Request: Integration of Ollama Local LLM into RAG Web UI",
    "created_at": "2025-01-25T09:14:19Z",
    "closed_at": "2025-02-09T13:11:51Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/rag-web-ui/rag-web-ui/issues/6",
    "body": "**Local Deployment of Ollama Model**: Deploy the Ollama large model locally to ensure data privacy and reduce latency in model responses. This deployment will allow us to fully control the model environment and optimize it for our specific use cases.\n",
    "comments_url": "https://api.github.com/repos/rag-web-ui/rag-web-ui/issues/6/comments",
    "author": "JohannLai",
    "comments": [
      {
        "user": "HendricksJudy",
        "created_at": "2025-02-01T07:11:58Z",
        "body": "I am currently working on the LocalRAG with Ollama. Maybe I can help build this engagement."
      },
      {
        "user": "JohannLai",
        "created_at": "2025-02-02T14:41:23Z",
        "body": "> I am currently working on the LocalRAG with Ollama. Maybe I can help build this engagement.\n\nPRs welcome ～ "
      },
      {
        "user": "JohannLai",
        "created_at": "2025-02-09T13:11:49Z",
        "body": "done~ "
      }
    ]
  }
]