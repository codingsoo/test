[
  {
    "number": 338,
    "title": "There are a couple of missing dependencies",
    "created_at": "2025-02-09T17:01:34Z",
    "closed_at": "2025-02-10T18:44:07Z",
    "labels": [],
    "url": "https://github.com/irsyadadl/justd/issues/338",
    "body": "**Describe the bug**\nWhen installing the multi-select, the `react-stately` dependency it uses is not installed.\n\nWhen installing the color-swatch, the `@react-stately/color` dependency it uses is not installed.\n\nAt least they weren't for me.\n\n**To Reproduce**\nSteps to reproduce the behavior:\n1. Do an install `npx justd-cli@latest init`\n2. Add all the component (or I guess just those) and use\n3. Run dev server\n\n```\nError: The following dependencies are imported but could not be resolved:\n\n  @react-stately/color (imported by /src/components/ui/color-swatch.tsx)\n  react-stately (imported by /src/components/ui/multiple-select.tsx)\n```\n\n**Expected behavior**\nThe required dependencies to be installed.\n\n**Desktop (please complete the following information):**\nLatest Chrome on Mac\n\n**Additional context**\nNot a big deal since the fix is clearly to manually add them e.g `pnpm add @react-stately/color react-stately`. Solved. But since it seems _other_ dependencies get added, I guess they should be too?\n\nThanks\n",
    "comments_url": "https://api.github.com/repos/irsyadadl/justd/issues/338/comments",
    "author": "gregmsanderson",
    "comments": [
      {
        "user": "irsyadadl",
        "created_at": "2025-02-10T17:55:50Z",
        "body": "rac will bring `react-stately`, I tried and didn't get error tbh. Maybe it happened when you're using pnpm, if you try bun, it won't be a problem."
      },
      {
        "user": "gregmsanderson",
        "created_at": "2025-02-10T18:44:07Z",
        "body": "Ah, ok. Was just a heads-up\n\nInteresting it loads them in bun but not pnpm. I'll close this then."
      }
    ]
  },
  {
    "number": 331,
    "title": "[Feature Request] Add Functional 'Copy to Clipboard' Utility Button Component",
    "created_at": "2025-02-07T17:05:26Z",
    "closed_at": "2025-02-08T07:12:46Z",
    "labels": [],
    "url": "https://github.com/irsyadadl/justd/issues/331",
    "body": "**Describe the solution you'd like**\nA reusable 'copy to clipboard' button.\n\n**Category:** Utilities\n\n**Default:**\n- A button with a _clipboard/copy_ icon on the left and 'Copy' text on the right.\n- On click, it copies the provided data to the clipboard and shows 'Copied' (replacing the 'Copy' label) for a second or less. The icon should also reflect this change.\n- On hover, it shows 'Copy to clipboard' in a popover/tooltip. Alternatively, this can be added as the element title.\n\n**Props:**\n- `data: *string` - The data (text/codes/*) to be copied.\n- `title: string` - Default is 'Copy to clipboard'.\n- `copyLabel: string` - Default is 'Copy'.\n- `copiedLabel: string` - Default is 'Copied'.\n- `label: 'icon' | 'text' | 'both'` - Default is 'both'.\n\n*Note: Title/labels provide flexibility for developers and are useful for internationalization. Display only the icon, only text, or both as the button label depending on the `label` value.*\n\n**Additional context**\n- Ensure the button works across different devices and browsers (PC, phone, Windows, Mac, Android, iPhone, all popular browsers).\n- Make sure the component can be found using the keywords 'copy', 'copied', 'clipboard', and 'copy to clipboard' in the documentation search.\n\n> ### You already have it and are using it for component & installation command copying.\n",
    "comments_url": "https://api.github.com/repos/irsyadadl/justd/issues/331/comments",
    "author": "forhadakhan",
    "comments": [
      {
        "user": "irsyadadl",
        "created_at": "2025-02-08T07:12:46Z",
        "body": "Feel free to take the snippet, not plant to make it."
      }
    ]
  },
  {
    "number": 318,
    "title": "Option prop to make dialog/modal be native pop up on mobile screens not being drawer",
    "created_at": "2025-01-22T22:18:20Z",
    "closed_at": "2025-01-22T22:25:35Z",
    "labels": [],
    "url": "https://github.com/irsyadadl/justd/issues/318",
    "body": "I want to use dialog/modal as pop up on mobile screens like how it's on desktop screens but on mobile it become the drawer and that's what i don't want so i would like the option prop to specify what to be on mobile screens",
    "comments_url": "https://api.github.com/repos/irsyadadl/justd/issues/318/comments",
    "author": "iranzithierry",
    "comments": [
      {
        "user": "irsyadadl",
        "created_at": "2025-01-22T22:25:24Z",
        "body": "We don't have plan to give that option sooner or later. Justd is not library, it's yours. Feel free to make it your own."
      }
    ]
  },
  {
    "number": 312,
    "title": "Add classnames to the component",
    "created_at": "2025-01-12T08:45:05Z",
    "closed_at": "2025-01-14T14:38:57Z",
    "labels": [],
    "url": "https://github.com/irsyadadl/justd/issues/312",
    "body": "Is your feature request related to a problem? Please describe.\r\nThe Button component lacks flexibility for dynamically extending class names using the tv utility. While the className prop exists, it doesn't seamlessly integrate with tv for conditional styling, limiting advanced customization.\r\n\r\nDescribe the solution you'd like\r\nAdd a classNames prop to the Button component to accept parameters compatible with the tv utility. This enables developers to define and extend styles dynamically while keeping the existing className functionality intact.\r\n\r\nDescribe alternatives you've considered\r\n\r\nManaging styles externally and passing them via className, which leads to redundant code.\r\nUsing inline styles or global CSS, which can cause conflicts and isn't ideal for tv-based utilities.\r\nAdditional context\r\nProposed implementation:\r\n\r\n```tsx\r\nexport function objectToDeps(obj: any) {\r\n    if (!obj || typeof obj !== \"object\") {\r\n        return \"\";\r\n    }\r\n    try {\r\n        return JSON.stringify(obj);\r\n    } catch (e) {\r\n        return \"\";\r\n    }\r\n}\r\n\r\nconst Button = ({ className, intent, appearance, size, shape, ref, classNames, ...props }: ButtonProps) => {\r\n    const classesFn: any = useMemo(() => (!!classNames ? tv({ extend: buttonStyles, ...classNames }) : buttonStyles), [objectToDeps(classNames)]);\r\n    return (\r\n        <ButtonPrimitive\r\n            ref={ref}\r\n            {...props}\r\n            className={composeRenderProps(className, (className, renderProps) =>\r\n                classesFn({\r\n                    ...renderProps,\r\n                    intent,\r\n                    appearance,\r\n                    size,\r\n                    shape,\r\n                    className,\r\n                }),\r\n            )}\r\n        >\r\n            {(values) => <>{typeof props.children === \"function\" ? props.children(values) : props.children}</>}\r\n        </ButtonPrimitive>\r\n    );\r\n};\r\n```",
    "comments_url": "https://api.github.com/repos/irsyadadl/justd/issues/312/comments",
    "author": "sxy8469",
    "comments": [
      {
        "user": "irsyadadl",
        "created_at": "2025-01-14T14:38:57Z",
        "body": "Nah, not plan to do that, feel free to change it your own."
      }
    ]
  },
  {
    "number": 300,
    "title": "The project could not be initialized",
    "created_at": "2025-01-03T14:41:51Z",
    "closed_at": "2025-01-05T09:51:24Z",
    "labels": [],
    "url": "https://github.com/irsyadadl/justd/issues/300",
    "body": "**Describe the bug**\r\nWhen I do `npx justd-cli@latest init` it says 443, I can't initialize.\r\n\r\n```\r\npnpx justd-cli@latest init --force\r\n✔ Initializing.\r\n? Components folder: src/components\r\n? Utils folder: src/utils\r\n? Where would you like to place the CSS file? src/app/globals.css\r\n⠼ Installing dependencies.node:internal/deps/undici/undici:12618\r\n    Error.captureStackTrace(err, this);\r\n          ^\r\n\r\nTypeError: fetch failed\r\n    at node:internal/deps/undici/undici:12618:11\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\r\n    at async Command.Mt (file:///Users/jayden/Library/Caches/pnpm/dlx/hv4ogqe5k35je5qdlpumszqyva/1942c8f0680-15a33/node_modules/.pnpm/justd-cli@2.2.16_react-dom@19.0.0_react@19.0.0__react@19.0.0/node_modules/justd-cli/dist/index.js:27:4279) {\r\n  cause: Error: connect ECONNREFUSED :::443\r\n      at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1555:16)\r\n      at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:128:17) {\r\n    errno: -61,\r\n    code: 'ECONNREFUSED',\r\n    syscall: 'connect',\r\n    address: '::',\r\n    port: 443\r\n  }\r\n}\r\n\r\nNode.js v18.20.4\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. run command  `npx justd-cli@latest init`\r\n2. it occur the error\r\n\r\n**Expected behavior**\r\nI hope I can get everything of justd, but currently only global.css can get it normally.\r\n\r\n**Additional context**\r\nIt seems to be a network error, I admit that I am a Chinese user, but I made sure that I had the proxy turned on, and I could connect to github and google normally, I turned on the terminal to open the proxy. I like your project very much, it looks better than shadcn.\r\n",
    "comments_url": "https://api.github.com/repos/irsyadadl/justd/issues/300/comments",
    "author": "kjhuanhao",
    "comments": [
      {
        "user": "irsyadadl",
        "created_at": "2025-01-03T16:00:38Z",
        "body": "Are sure you had ran npx? or pnpx? If pnpx doesnt work, have you tried npx?"
      },
      {
        "user": "kjhuanhao",
        "created_at": "2025-01-03T16:01:48Z",
        "body": "I've tried both commands and both are the same error"
      },
      {
        "user": "irsyadadl",
        "created_at": "2025-01-03T16:05:08Z",
        "body": "try\n\n```\nnpm config delete proxy\nnpm config delete https-proxy\n\n```\n\nAnd please upgrade your node at least 20. \n\nLet me know what's come up."
      },
      {
        "user": "irsyadadl",
        "created_at": "2025-01-04T10:42:30Z",
        "body": "@kjhuanhao are the problems solved?"
      },
      {
        "user": "kjhuanhao",
        "created_at": "2025-01-05T09:31:35Z",
        "body": "> @kjhuanhao are the problems solved?\r\n\r\nI tried again today and it prompted me to update to the justd-cli@2.2.17 version, and now it finally works, thanks to the component, really good"
      },
      {
        "user": "irsyadadl",
        "created_at": "2025-01-05T09:51:24Z",
        "body": "Glad you liked it."
      }
    ]
  },
  {
    "number": 282,
    "title": "Main",
    "created_at": "2024-12-18T06:17:38Z",
    "closed_at": "2024-12-18T06:17:47Z",
    "labels": [],
    "url": "https://github.com/irsyadadl/justd/pull/282",
    "body": null,
    "comments_url": "https://api.github.com/repos/irsyadadl/justd/issues/282/comments",
    "author": "irsyadadl",
    "comments": [
      {
        "user": "vercel[bot]",
        "created_at": "2024-12-18T06:17:42Z",
        "body": "Deployment failed with the following error:\n~~~\nPreview deployments are disabled for this project.\n~~~\n"
      }
    ]
  },
  {
    "number": 278,
    "title": "Main",
    "created_at": "2024-12-17T13:27:02Z",
    "closed_at": "2024-12-17T13:27:10Z",
    "labels": [],
    "url": "https://github.com/irsyadadl/justd/pull/278",
    "body": null,
    "comments_url": "https://api.github.com/repos/irsyadadl/justd/issues/278/comments",
    "author": "irsyadadl",
    "comments": [
      {
        "user": "vercel[bot]",
        "created_at": "2024-12-17T13:27:05Z",
        "body": "Deployment failed with the following error:\n~~~\nPreview deployments are disabled for this project.\n~~~\n"
      }
    ]
  },
  {
    "number": 236,
    "title": "Fix multiple-select dropdown to remain open after selection",
    "created_at": "2024-11-04T10:35:10Z",
    "closed_at": "2024-12-10T20:45:10Z",
    "labels": [],
    "url": "https://github.com/irsyadadl/justd/pull/236",
    "body": "Related to #214\r\n\r\nUpdate `MultipleSelect` component to keep the dropdown open after selection.\r\n\r\n* Add `shouldCloseOnBlur={false}` to `Popover.Picker` to prevent closing on blur.\r\n* Modify `onSelectionChange` function to keep the dropdown open after setting the selected key and input value.\r\n",
    "comments_url": "https://api.github.com/repos/irsyadadl/justd/issues/236/comments",
    "author": "vishwamartur",
    "comments": [
      {
        "user": "irsyadadl",
        "created_at": "2024-11-04T14:16:55Z",
        "body": "@vishwamartur \r\n\r\nTested, but it doesn't work. Still closed when choose a item. Did you test it? `Property shouldCloseOnBlur does not exist on type`"
      }
    ]
  },
  {
    "number": 233,
    "title": "Update color-swatch, remove type any and add type",
    "created_at": "2024-10-23T20:53:54Z",
    "closed_at": "2024-10-24T09:50:25Z",
    "labels": [],
    "url": "https://github.com/irsyadadl/justd/pull/233",
    "body": "Type error in Eslint:  \r\n/components/ui/color-swatch.tsx  \r\n44:31 Error: Unexpected any. Specify a different type. @typescript-eslint/no-explicit-any",
    "comments_url": "https://api.github.com/repos/irsyadadl/justd/issues/233/comments",
    "author": "MrUprizing",
    "comments": [
      {
        "user": "irsyadadl",
        "created_at": "2024-10-23T20:56:50Z",
        "body": "Thanks for the PR. I will come to this by tomorrow morning."
      }
    ]
  },
  {
    "number": 224,
    "title": "fix(ui): Update import statements in ui components",
    "created_at": "2024-10-17T15:32:57Z",
    "closed_at": "2024-10-17T16:02:26Z",
    "labels": [],
    "url": "https://github.com/irsyadadl/justd/pull/224",
    "body": "Awesome library!\r\nHere I just unify the different approaches to import `ui` components inside `ui` folder, which caused problems where I had components in different location than suggested one `@/components`\r\n\r\nSimilar problem is with `theme-provider` which imports `next-themes` inside. Not everyone uses Next so it is problematic but I dont know how to fix it :) ",
    "comments_url": "https://api.github.com/repos/irsyadadl/justd/issues/224/comments",
    "author": "rlesniak",
    "comments": [
      {
        "user": "irsyadadl",
        "created_at": "2024-10-17T15:52:14Z",
        "body": "Thanks for this PR. I'll accept this pr, but for cn within a card, should still use from classes, because it doesn't need 'use client' to use it. I knew not everyone, so do I. Classes it self will automatically created when you use the cli. For the @ symbol which is use to alias the path. I'll just need someone to help me how to figure out."
      }
    ]
  },
  {
    "number": 218,
    "title": "Avoid jump in modal animation",
    "created_at": "2024-10-09T09:39:50Z",
    "closed_at": "2024-10-09T11:44:07Z",
    "labels": [],
    "url": "https://github.com/irsyadadl/justd/pull/218",
    "body": "When a modal is closed, it makes a little jump to the left because of hiding/displaying the scrollbars. I've changed the positioning of the modal on sm: to avoid this jump.",
    "comments_url": "https://api.github.com/repos/irsyadadl/justd/issues/218/comments",
    "author": "realjokele",
    "comments": [
      {
        "user": "irsyadadl",
        "created_at": "2024-10-09T11:44:27Z",
        "body": "Thanks for the PR. Will merge it."
      }
    ]
  },
  {
    "number": 205,
    "title": "Fixed default sorting indicator",
    "created_at": "2024-09-02T17:24:08Z",
    "closed_at": "2024-09-03T01:02:37Z",
    "labels": [],
    "url": "https://github.com/irsyadadl/justd/pull/205",
    "body": "Hi there, \r\n\r\nSo the default sorting indicator was \"daf\", I changed it to a more descriptive icon with JustD-icons. Please let me know if you need anything changed.",
    "comments_url": "https://api.github.com/repos/irsyadadl/justd/issues/205/comments",
    "author": "MikeBurkeMed",
    "comments": [
      {
        "user": "irsyadadl",
        "created_at": "2024-09-03T00:23:02Z",
        "body": "Thanks for the PR. Can you show me before and after? Show me screenshot."
      }
    ]
  },
  {
    "number": 203,
    "title": "remove duplicate z-index on avatar & carousel handler",
    "created_at": "2024-09-02T09:05:42Z",
    "closed_at": "2024-09-02T15:04:10Z",
    "labels": [],
    "url": "https://github.com/irsyadadl/justd/pull/203",
    "body": "remove duplicate z-index on avatar badge and set carousel handler to use `z-10` by default",
    "comments_url": "https://api.github.com/repos/irsyadadl/justd/issues/203/comments",
    "author": "yuxxeun",
    "comments": [
      {
        "user": "irsyadadl",
        "created_at": "2024-09-02T14:38:29Z",
        "body": "Hey. Thanks for PR. Tailwind CSS doesn't have z-1 actually. Can you fix that."
      },
      {
        "user": "yuxxeun",
        "created_at": "2024-09-02T14:44:22Z",
        "body": "Ups, my bad.\r\nOk, I'll make another PR's."
      },
      {
        "user": "irsyadadl",
        "created_at": "2024-09-02T14:45:54Z",
        "body": "No, just edit this PR. You can just push the same PR."
      },
      {
        "user": "yuxxeun",
        "created_at": "2024-09-02T14:49:46Z",
        "body": "already 🔥"
      }
    ]
  },
  {
    "number": 145,
    "title": "Drawer Fit Content",
    "created_at": "2024-08-10T14:26:55Z",
    "closed_at": "2024-08-10T15:21:18Z",
    "labels": [
      "enhancement",
      "done"
    ],
    "url": "https://github.com/irsyadadl/justd/issues/145",
    "body": "#### Modify Drawer to fit the content height, backdrop scale and blur effect and close drawer on background tap\r\n\r\n1. In the DrawerOverlayPrimitive component:\r\n   - Added a `contentHeight` state to track the height of the content.\r\n   - Implemented a `ResizeObserver` to dynamically update the `contentHeight` when the content changes.\r\n   - Modified the `h` calculation to use the `contentHeight`.\r\n   - Updated the `ModalPrimitive` style to use the dynamic height based on `contentHeight`.\r\n2. Adjusted the `dragConstraints` to use the dynamic height.\r\n3. The height style of `ModalPrimitive` now uses the `contentHeight` plus `drawerMargin`, with a fallback to 'auto' when `contentHeight` is 0.\r\n4. Added a `maxHeight` constraint to ensure the drawer doesn't exceed the screen height.\r\n5. Added a `useMotionValueEvent` to scale the body down when drawer is open. \r\n6. Added a `motion.section` to create backdrop blur effect and function to close the drawer when background tap or clicked\r\n\r\n```tsx\r\n'use client'\r\n\r\nimport React from 'react'\r\n\r\nimport { animate, AnimatePresence, type Inertia, motion, useMotionTemplate, useMotionValue, useMotionValueEvent, useTransform } from 'framer-motion'\r\nimport { Button, type ButtonProps, Dialog, type DialogProps, Heading, type HeadingProps, Modal, ModalOverlay } from 'react-aria-components'\r\n\r\nimport { DialogClose, DialogDescription } from './dialog'\r\nimport { cn } from './primitive'\r\n\r\nconst inertiaTransition: Inertia = {\r\n  type: 'inertia',\r\n  bounceStiffness: 300,\r\n  bounceDamping: 40,\r\n  timeConstant: 300\r\n}\r\nconst staticTransition = {\r\n  duration: 0.5,\r\n  ease: [0.32, 0.72, 0, 1]\r\n}\r\nconst drawerMargin = 40\r\nconst drawerRadius = 32\r\n\r\ninterface DrawerContextType {\r\n  isOpen: boolean\r\n  openDrawer: () => void\r\n  closeDrawer: () => void\r\n  withNotch?: boolean\r\n}\r\n\r\nconst DrawerContext = React.createContext<DrawerContextType | undefined>(undefined)\r\n\r\nconst useDrawerContext = () => {\r\n  const context = React.useContext(DrawerContext)\r\n  if (context === undefined) {\r\n    throw new Error('useDrawerContext must be used within a Drawer')\r\n  }\r\n  return context\r\n}\r\n\r\nconst ModalPrimitive = motion(Modal)\r\nconst ModalOverlayPrimitive = motion(ModalOverlay)\r\n\r\nconst DrawerOverlayPrimitive = (props: React.ComponentProps<typeof ModalOverlayPrimitive>) => {\r\n  const { closeDrawer, withNotch } = useDrawerContext()\r\n  const [contentHeight, setContentHeight] = React.useState(0)\r\n\r\n  const h = Math.min(contentHeight + drawerMargin, window.innerHeight - drawerMargin)\r\n  const y = useMotionValue(h)\r\n  const bgOpacity = useTransform(y, [0, h], [0.5, 0])\r\n  const bg = useMotionTemplate`rgba(0, 0, 0, ${bgOpacity})`\r\n\r\n  const root = document.getElementsByTagName('main')[0] as HTMLElement\r\n  const bodyScale = useTransform(\r\n    y,\r\n    [0, h],\r\n    [(window.innerWidth - drawerMargin) / window.innerWidth, 1]\r\n  )\r\n  const bodyTranslate = useTransform(y, [0, h], [drawerMargin - drawerRadius, 0])\r\n  const bodyBorderRadius = useTransform(y, [0, h], [drawerRadius, 0])\r\n\r\n  useMotionValueEvent(bodyScale, 'change', (v: any) => (root.style.scale = `${v}`))\r\n  useMotionValueEvent(bodyTranslate, 'change', (v: any) => (root.style.translate = `0 ${v}px`))\r\n  useMotionValueEvent(bodyBorderRadius, 'change', (v) => (root.style.borderRadius = `${v}px`))\r\n\r\n  return (\r\n    <>\r\n      <ModalOverlayPrimitive\r\n        isOpen\r\n        onOpenChange={closeDrawer}\r\n        className=\"fixed inset-0 z-50\"\r\n        style={{ backgroundColor: bg as any }}\r\n      >\r\n        <motion.section\r\n          aria-hidden\r\n          onTap={closeDrawer}\r\n          className=\"fixed inset-0 backdrop-blur-sm\"\r\n          initial=\"collapsed\"\r\n          animate=\"open\"\r\n          exit=\"collapsed\"\r\n          variants={{\r\n            open: { opacity: 1 },\r\n            collapsed: { opacity: 0 }\r\n          }}\r\n          transition={{ duration: 0.4, ease: [0.04, 0.62, 0.23, 0.98] }}\r\n        />\r\n        <ModalPrimitive\r\n          className={cn(\r\n            'absolute bottom-0 w-full rounded-t-2xl bg-tertiary shadow-lg ring-1 ring-fg/10',\r\n            props.className\r\n          )}\r\n          initial={{ y: h }}\r\n          animate={{ y: 0 }}\r\n          exit={{ y: h }}\r\n          transition={staticTransition}\r\n          style={{\r\n            y,\r\n            top: 'auto',\r\n            height: contentHeight > 0 ? `${contentHeight + drawerMargin}px` : 'auto',\r\n            maxHeight: `calc(100% - ${drawerMargin}px)`\r\n          }}\r\n          drag=\"y\"\r\n          dragConstraints={{ top: 0, bottom: h }}\r\n          onDragEnd={(_e, { offset, velocity }) => {\r\n            if (offset.y > h * 0.5 || velocity.y > 10) {\r\n              closeDrawer()\r\n            } else {\r\n              animate(y, 0, { ...inertiaTransition, min: 0, max: 0 })\r\n            }\r\n          }}\r\n          {...props}\r\n        >\r\n          <>\r\n            {withNotch && <div className=\"notch mx-auto mt-2 h-1.5 w-10 rounded-full bg-fg/20\" />}\r\n            <div\r\n              ref={(el) => {\r\n                if (el) {\r\n                  const resizeObserver = new ResizeObserver((entries) => {\r\n                    for (const entry of entries) {\r\n                      setContentHeight(entry.contentRect.height)\r\n                    }\r\n                  })\r\n                  resizeObserver.observe(el)\r\n                  return () => resizeObserver.disconnect()\r\n                }\r\n              }}\r\n            >\r\n              {props.children as React.ReactNode}\r\n            </div>\r\n          </>\r\n        </ModalPrimitive>\r\n      </ModalOverlayPrimitive>\r\n    </>\r\n  )\r\n}\r\n\r\ninterface DrawerContentPrimitiveProps extends Omit<React.ComponentProps<typeof Modal>, 'children'> {\r\n  children?: DialogProps['children']\r\n}\r\n\r\nconst DrawerContentPrimitive = (props: DrawerContentPrimitiveProps) => {\r\n  const { isOpen } = useDrawerContext()\r\n\r\n  const h = window.innerHeight - drawerMargin\r\n  const y = useMotionValue(h)\r\n\r\n  const bodyScale = useTransform(\r\n    y,\r\n    [0, h],\r\n    [(window.innerWidth - drawerMargin) / window.innerWidth, 1]\r\n  )\r\n  const bodyTranslate = useTransform(y, [0, h], [drawerMargin - drawerRadius, 0])\r\n  const bodyBorderRadius = useTransform(y, [0, h], [drawerRadius, 0])\r\n  return (\r\n    <motion.div\r\n      style={{\r\n        scale: bodyScale,\r\n        borderRadius: bodyBorderRadius,\r\n        y: bodyTranslate,\r\n        transformOrigin: 'center 0'\r\n      }}\r\n    >\r\n      <AnimatePresence>{isOpen && <>{props.children}</>}</AnimatePresence>\r\n    </motion.div>\r\n  )\r\n}\r\n\r\nconst DrawerTrigger = (props: ButtonProps) => {\r\n  const { openDrawer } = useDrawerContext()\r\n\r\n  return <Button onPress={openDrawer} {...props} />\r\n}\r\n\r\ninterface DrawerProps {\r\n  children: React.ReactNode\r\n  isOpen?: boolean\r\n  withNotch?: boolean\r\n  onOpenChange?: (isOpen: boolean) => void\r\n}\r\n\r\nconst Drawer = ({\r\n  children,\r\n  withNotch = true,\r\n  isOpen: controlledIsOpen,\r\n  onOpenChange\r\n}: DrawerProps) => {\r\n  const [internalIsOpen, setInternalIsOpen] = React.useState(false)\r\n\r\n  const isControlled = controlledIsOpen !== undefined\r\n  const isOpen = isControlled ? controlledIsOpen : internalIsOpen\r\n\r\n  React.useEffect(() => {\r\n    if (isControlled && onOpenChange) {\r\n      onOpenChange(isOpen)\r\n    }\r\n  }, [isOpen, isControlled, onOpenChange])\r\n\r\n  const openDrawer = () => {\r\n    if (isControlled && onOpenChange) {\r\n      onOpenChange(true)\r\n    } else {\r\n      setInternalIsOpen(true)\r\n    }\r\n  }\r\n\r\n  const closeDrawer = () => {\r\n    if (isControlled && onOpenChange) {\r\n      onOpenChange(false)\r\n    } else {\r\n      setInternalIsOpen(false)\r\n    }\r\n  }\r\n\r\n  if (typeof window === 'undefined') {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <DrawerContext.Provider value={{ isOpen, openDrawer, closeDrawer, withNotch }}>\r\n      {children}\r\n    </DrawerContext.Provider>\r\n  )\r\n}\r\n\r\nconst DrawerContent = ({\r\n  children,\r\n  className,\r\n  ...props\r\n}: React.ComponentProps<typeof DrawerContentPrimitive>) => {\r\n  return (\r\n    <DrawerContentPrimitive>\r\n      <DrawerOverlayPrimitive {...props}>\r\n        <Dialog className=\"mx-auto flex max-w-3xl flex-col justify-between overflow-y-auto px-4 pt-4 outline-none\">\r\n          {(values) => <>{typeof children === 'function' ? children(values) : children}</>}\r\n        </Dialog>\r\n      </DrawerOverlayPrimitive>\r\n    </DrawerContentPrimitive>\r\n  )\r\n}\r\n\r\nconst DrawerHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div className={cn('flex flex-col gap-y-1 text-center sm:text-left', className)} {...props} />\r\n)\r\n\r\nconst DrawerTitle = ({ className, ...props }: HeadingProps) => (\r\n  <Heading\r\n    slot=\"title\"\r\n    className={cn('text-lg font-semibold leading-none tracking-tight', className)}\r\n    {...props}\r\n  />\r\n)\r\n\r\nconst DrawerDescription = DialogDescription\r\n\r\nconst DrawerBody = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div className={cn('flex-1 overflow-y-auto overflow-x-hidden py-4', className)} {...props} />\r\n)\r\n\r\nconst DrawerFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      'flex shrink-0 pb-1 flex-col-reverse gap-2 sm:flex-row sm:justify-between [&_button:first-child:nth-last-child(1)]:w-full',\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n)\r\n\r\nconst DrawerClose = (props: React.ComponentProps<typeof DialogClose>) => {\r\n  return <DialogClose shape=\"circle\" {...props} />\r\n}\r\n\r\nexport {\r\n  Drawer,\r\n  DrawerBody,\r\n  DrawerClose,\r\n  DrawerContent,\r\n  DrawerDescription,\r\n  DrawerFooter,\r\n  DrawerHeader,\r\n  DrawerTitle,\r\n  DrawerTrigger\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/irsyadadl/justd/issues/145/comments",
    "author": "dq-alhq",
    "comments": [
      {
        "user": "irsyadadl",
        "created_at": "2024-08-10T14:28:54Z",
        "body": "@dq-alhq Can you make a pr ?"
      },
      {
        "user": "irsyadadl",
        "created_at": "2024-08-10T15:21:18Z",
        "body": "It'll closed as the pr #146 146"
      }
    ]
  },
  {
    "number": 28,
    "title": "[bug] Wrong Keyboard Event on Command Palette ",
    "created_at": "2024-07-10T01:41:54Z",
    "closed_at": "2024-07-10T10:22:37Z",
    "labels": [
      "good first issue",
      "done"
    ],
    "url": "https://github.com/irsyadadl/justd/issues/28",
    "body": "Command Palette should use `ctrl/cmd + k` but it actually use only `k` to open the Command Palette\r\n\r\nmaybe you should add the second condition on `command-palette.tsx`\r\n```tsx\r\nconst down = (e: KeyboardEvent) => {\r\n  if (e.key === 'k' && (e.metaKey || e.ctrlKey)) {\r\n    e.preventDefault()\r\n    // @ts-ignore\r\n    setOpen((open: boolean) => !open)\r\n  }\r\n}\r\n```",
    "comments_url": "https://api.github.com/repos/irsyadadl/justd/issues/28/comments",
    "author": "mariio46",
    "comments": [
      {
        "user": "irsyadadl",
        "created_at": "2024-07-10T08:16:49Z",
        "body": "Thanks for the heads up. We'll patch it in the next update."
      }
    ]
  }
]