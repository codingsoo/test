[
  {
    "number": 150,
    "title": "crash when run docker",
    "created_at": "2025-01-07T13:06:16Z",
    "closed_at": "2025-01-14T23:09:21Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/sourcebot-dev/sourcebot/issues/150",
    "body": "I have try to run sourcebot (v2.6.3)  with a basic setup like example provided (github / ggerganov/llama.cpp) on windows 11 but the container crash at startup.\r\nThen I have try to run sourcebot on a Debian 12 with the same setup but the container crash with exited code 60.\r\nI have try after using v2.6.2 but same issue.\r\nI add   ```SOURCEBOT_TELEMETRY_DISABLED=1``` and ```NEXT_PUBLIC_SOURCEBOT_TELEMETRY_DISABLED=1``` and the container start on debian and windows.\r\n",
    "comments_url": "https://api.github.com/repos/sourcebot-dev/sourcebot/issues/150/comments",
    "author": "ptschi",
    "comments": [
      {
        "user": "brendan-kellam",
        "created_at": "2025-01-07T21:29:04Z",
        "body": "This sounds similar to #90 and #100 - are you using a custom private CA cert by chance?"
      },
      {
        "user": "ptschi",
        "created_at": "2025-01-07T21:36:08Z",
        "body": "In my test I just setup github repo or local repo in my json config (very basic test) I didn't try to index internal gitlab or something like that. "
      }
    ]
  },
  {
    "number": 90,
    "title": "Exit code 60 just after starting",
    "created_at": "2024-11-25T12:58:45Z",
    "closed_at": "2025-01-14T23:10:26Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/sourcebot-dev/sourcebot/issues/90",
    "body": "Hello folks,\r\n\r\nWhen starting Sourcebot (container, v2.5.0), the container immediately exits with status code 60. With no error message.\r\n\r\nAfter troubleshooting, I found out that it's due to the `curl` calls done in the `entrypoint.sh` script for telemetry. Exit code 60 is the way cURL says there's something wrong with the SSL certificate.\r\n\r\nIn my case, it's due to internal network policies that happen to manipulate the SSL certificate the container sees for the Posthog URLs.\r\n\r\nWhile the actual root cause is out of Sourcebot scope, it might be interesting to add slightly more logs or \"catch\" the cURL errors to give a hint to users that this might be the reason of the container not starting.\r\n\r\n_Anyway, I though to log this as an issue to help other people that may encounter the same issue._",
    "comments_url": "https://api.github.com/repos/sourcebot-dev/sourcebot/issues/90/comments",
    "author": "gaeljw",
    "comments": [
      {
        "user": "brendan-kellam",
        "created_at": "2024-11-25T17:41:36Z",
        "body": "Hey thanks for raising! Yea we should add some error handling for those curl calls.\r\n\r\nI'm also curious to know how we could get these calls to succeed in a network environment similar to yours. Is there a minimal setup that could be configured to replicate this issue? Is the network policy only messing with the SSL certs for traffic to PostHog, and not traffic to GitHub/GitLab?"
      },
      {
        "user": "gaeljw",
        "created_at": "2024-11-25T18:22:02Z",
        "body": "> I'm also curious to know how we could get these calls to succeed in a network environment similar to yours.\r\n\r\nTo be fair, I think what we do is not really best practice.\r\n\r\nHowever, to workaround it, we usually expect to be able to configure the SSL authorities trusted by the container and/or app. We usually find a way to \"inject\" our private CA certificate somehow.\r\n\r\nIn this case, I guess we'd need it for the cURL commands to Posthog but also theoretically for calls made by the app to GitHub/GitLab.\r\n\r\n> Is the network policy only messing with the SSL certs for traffic to PostHog, and not traffic to GitHub/GitLab?\r\n\r\nI didn't have issues when testing a GitHub repo. Either we're not messing with GitHub certificates, or the app (Sourcebot) ignores such SSL errors?\r\n\r\nTo be noted, that we also use a self hosted GitLab with a SSL cert generated by our private CA. Theoretically (I didn't test yet against this GitLab instance), we will face similar errors when Sourcebot tries to access our GitLab. Unless, again, the app ignores such errors.\r\n\r\n> Is there a minimal setup that could be configured to replicate this issue?\r\n\r\nI don't know enough these stuff to be able to give you a reproduction case. If I were to try to reproduce it, I'll try to setup some kind of proxy that presents a certificate generated by a private CA not trusted by default in Ubuntu (or whatever base image you're using for Sourcebot).\r\n\r\nActually.. instead of a proxy, you may reproduce it by starting a dummy server presenting a non-trusted SSL cert and adding temporarily a cURL to this server in the entry point script.\r\n\r\n---\r\n\r\nI hope this helps."
      },
      {
        "user": "brendan-kellam",
        "created_at": "2025-01-14T22:57:58Z",
        "body": "Nice thanks for the info! I'm going to close this with #159 since it adds some error handling s.t., we don't immediately crash if those curl commands fail. Using #100 to track docs improvements / allowing a easy way to provide a private CA cert."
      },
      {
        "user": "brendan-kellam",
        "created_at": "2025-01-14T23:10:26Z",
        "body": "Fixed by #159 "
      }
    ]
  },
  {
    "number": 82,
    "title": "Automatically delete stale repositories setting.",
    "created_at": "2024-11-20T08:27:13Z",
    "closed_at": "2024-11-20T18:29:32Z",
    "labels": [],
    "url": "https://github.com/sourcebot-dev/sourcebot/issues/82",
    "body": "We should have a config to allow for auto deleting no longer found repositories.",
    "comments_url": "https://api.github.com/repos/sourcebot-dev/sourcebot/issues/82/comments",
    "author": "KonradStanski",
    "comments": [
      {
        "user": "brendan-kellam",
        "created_at": "2024-11-20T18:29:32Z",
        "body": "Yes definitely - going to mark this as duplicate of #39 since this was brought up over there."
      }
    ]
  },
  {
    "number": 70,
    "title": "Exclude repos by glob",
    "created_at": "2024-11-14T03:40:26Z",
    "closed_at": "2024-11-14T22:16:32Z",
    "labels": [],
    "url": "https://github.com/sourcebot-dev/sourcebot/pull/70",
    "body": "References #69 ",
    "comments_url": "https://api.github.com/repos/sourcebot-dev/sourcebot/issues/70/comments",
    "author": "Steven-Nagie",
    "comments": [
      {
        "user": "Steven-Nagie",
        "created_at": "2024-11-14T20:45:57Z",
        "body": "All good calls, addressed everything."
      },
      {
        "user": "brendan-kellam",
        "created_at": "2024-11-14T22:17:00Z",
        "body": "Merged. Thanks for the contribution @Steven-Nagie! "
      },
      {
        "user": "Steven-Nagie",
        "created_at": "2024-11-14T22:46:03Z",
        "body": "> Merged. Thanks for the contribution @Steven-Nagie!\r\n\r\nThank you! Sourcebot has been a big help, happy to contribute in my small way."
      }
    ]
  },
  {
    "number": 39,
    "title": "GitLab repositories remain indexed after Sourcebot no longer has access to them",
    "created_at": "2024-10-16T01:07:51Z",
    "closed_at": "2024-12-13T20:34:03Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/sourcebot-dev/sourcebot/issues/39",
    "body": "We have Sourcebot set up to index repositories hosted in a self-hosted GitLab instance. A dedicated Sourcebot account in GitLab is used to determine which repositories it has access to (by adding the user as a member of a repository or group) and only indexes those repositories.\r\n\r\nHowever, if the Sourcebot user is removed as a member from a repository (or group) the repository remains in Sourcebot (presumably with a stale index).\r\n\r\nWhat I would expect to happen is if Sourcebot no longer has access to a repository (or the repository has been deleted) then the repository should be removed from Sourcebot.",
    "comments_url": "https://api.github.com/repos/sourcebot-dev/sourcebot/issues/39/comments",
    "author": "jerrykan",
    "comments": [
      {
        "user": "brendan-kellam",
        "created_at": "2024-10-17T17:06:30Z",
        "body": "Thanks for the issue - yea I think this expectation makes sense. We are introducing a new index server in #42 that will mark repositories as \"stale\" when they were previously indexed, but are not longer found.\r\n\r\nI think what would work well is if we have some \"automatically delete stale repositories\" setting that, when enabled, will auto delete a stale repo's folder & any indexes associated with it."
      }
    ]
  },
  {
    "number": 29,
    "title": "FR: Support indexing of branches",
    "created_at": "2024-10-04T05:50:01Z",
    "closed_at": "2024-11-07T02:28:11Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/sourcebot-dev/sourcebot/issues/29",
    "body": "Sometimes I keep variants of my code on branches without intending to merge it into the default branch. Would be cool to see those in Sourcebot too.",
    "comments_url": "https://api.github.com/repos/sourcebot-dev/sourcebot/issues/29/comments",
    "author": "ultravigilante",
    "comments": [
      {
        "user": "zapp42",
        "created_at": "2024-10-04T11:23:24Z",
        "body": "There is the \"branch:xxxxx\" search keyword, but I don't think it is working."
      },
      {
        "user": "brendan-kellam",
        "created_at": "2024-10-04T15:46:56Z",
        "body": "Yea there is the `branch` filter, but we only index `HEAD` atm so it's not too useful currently"
      }
    ]
  },
  {
    "number": 26,
    "title": "Add env vars for overriding GitHub / GitLab hostnames in the `.netrc` file.",
    "created_at": "2024-10-03T20:07:53Z",
    "closed_at": "2024-10-03T21:06:24Z",
    "labels": [],
    "url": "https://github.com/sourcebot-dev/sourcebot/pull/26",
    "body": "Adds override env vars `GITLAB_HOSTNAME` and `GITHUB_HOSTNAME` to support authenticating against self-hosted GitLab / GitHub instances.\r\n\r\nFixes #20 ",
    "comments_url": "https://api.github.com/repos/sourcebot-dev/sourcebot/issues/26/comments",
    "author": "brendan-kellam",
    "comments": [
      {
        "user": "loris",
        "created_at": "2024-10-11T07:33:51Z",
        "body": "@brendan-kellam Thank you for fix, however why do you use the env vars to build the .netrc file, instead of the settings from the config file? I'm asking because i'm trying to index repos from multiple self-hosted gitlab servers (so I have more than gitlab one hostname and token). It seems limited to just 1 if we rely on env var, while the config file is more flexible since you can have any number of entries in the Configs array, right?"
      },
      {
        "user": "brendan-kellam",
        "created_at": "2024-10-14T05:45:01Z",
        "body": "Hey @loris - yea that's correct. Using env vars was a quick fix for the single self-hosted server scenario.\r\n\r\nWe are working on overhauling the config format atm and plan to support multiple host authentication (via the config) at that time. We expect to have that in sometime next week. See: #27 "
      }
    ]
  },
  {
    "number": 21,
    "title": "Use GitLabURL in .netrc",
    "created_at": "2024-10-02T11:20:03Z",
    "closed_at": "2024-10-03T20:17:29Z",
    "labels": [],
    "url": "https://github.com/sourcebot-dev/sourcebot/pull/21",
    "body": "Quick hack to fix issue #20 ",
    "comments_url": "https://api.github.com/repos/sourcebot-dev/sourcebot/issues/21/comments",
    "author": "zapp42",
    "comments": [
      {
        "user": "brendan-kellam",
        "created_at": "2024-10-03T20:17:29Z",
        "body": "hey @zapp42, thanks for the PR! I think for now I would rather keep the hostname explicitly defined via a environment variable rather than pulling it from the config. It's simpler, but the tradeoff to the user is that you need to define the url and hostname in two places (i.e., in `GitLabUrl` and the env var).\r\n\r\nI'm thinking allot of this stuff will be changing anyways (e.g., to enable #27), so I think simpler is better for now.\r\n\r\nSee #26 "
      }
    ]
  },
  {
    "number": 20,
    "title": "Custom Gitlab URL not reflected in generated .netrc",
    "created_at": "2024-10-02T10:41:58Z",
    "closed_at": "2024-10-03T21:06:25Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/sourcebot-dev/sourcebot/issues/20",
    "body": "When specifying a custom `GitLabURL` in the config, this URL is not reflected in the `.netrc` file generated by `entrypoint.sh`, so auth does not work without overriding the generated file.",
    "comments_url": "https://api.github.com/repos/sourcebot-dev/sourcebot/issues/20/comments",
    "author": "tomusher",
    "comments": [
      {
        "user": "zapp42",
        "created_at": "2024-10-02T10:55:52Z",
        "body": "Perfect timing. You saved me some debugging. Thank you.\r\nConfirmed.\r\nSymptoms: The group hierarchy is created in the .sourcebot/repos folder, but no actual repository is cloned."
      },
      {
        "user": "brendan-kellam",
        "created_at": "2024-10-02T20:36:32Z",
        "body": "Hey thanks for raising. I will take a sec and get a custom GitLab instance going and will then take a look"
      }
    ]
  }
]