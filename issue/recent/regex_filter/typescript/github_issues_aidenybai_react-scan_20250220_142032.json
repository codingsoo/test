[
  {
    "number": 248,
    "title": "react-scan will make my AirPods swap from iPhone to Mac",
    "created_at": "2025-02-12T13:35:04Z",
    "closed_at": "2025-02-18T06:09:56Z",
    "labels": [],
    "url": "https://github.com/aidenybai/react-scan/issues/248",
    "body": "Yep, that's a weird one.\n\nI've added react-scan to a project with the config options `{ enabled: false, log: true, playSound: false, showToolbar: true }`. When I'm watching a video or listening to music on my iPhone with my AirPods and refreshing the page with react-scan enabled, my AirPods will switch to the Mac.\n\nPossibly the page is registering itself as playing back sound (the react-scan bing sound?) - although I've disabled it?\n\nThe issue never occurs when react-scan is commented out.\n\nreact-scan Version: 0.1.3    \nBrowser: Firefox 135.0",
    "comments_url": "https://api.github.com/repos/aidenybai/react-scan/issues/248/comments",
    "author": "romanzipp",
    "comments": [
      {
        "user": "pivanov",
        "created_at": "2025-02-12T14:57:12Z",
        "body": "Hey @romanzipp \nThe strangest thing is that in version `0.1.3` (actually all 0.1.x versions) not use the sound anymore. We disabled it because of some new incoming features. Can you confirm that this strange behaviour is because of react scan?"
      },
      {
        "user": "romanzipp",
        "created_at": "2025-02-18T06:09:56Z",
        "body": "@pivanov I believe I've made an error when reproducing this issue f√ºr version 0.1.3 and didn't relaunch the vite dev mode. The issue won't occur anymore. Sorry for that but thanks!"
      }
    ]
  },
  {
    "number": 242,
    "title": "Is it possible to add a keybind to activate react-scan on elements without closing them?",
    "created_at": "2025-02-11T00:08:02Z",
    "closed_at": "2025-02-11T02:26:41Z",
    "labels": [],
    "url": "https://github.com/aidenybai/react-scan/issues/242",
    "body": "I'm looking for a way to use react-scan on elements such as popovers, dialogs, or any components that activate on click, without closing them. Is it possible to add a keybind to activate react-scan while keeping these elements open? This feature would be very useful for debugging performance issues in such components.",
    "comments_url": "https://api.github.com/repos/aidenybai/react-scan/issues/242/comments",
    "author": "aserador",
    "comments": [
      {
        "user": "pivanov",
        "created_at": "2025-02-11T01:32:51Z",
        "body": "Hey @aserador \nIf the components are react ones and you can \"freeze\" them in your project this is is possible but for native dialogs for example you can check #225 \nWe are thinking for something like key binding but the real issue is that if component is mounted on events like mouseover for example it's hard and not good trying to hack them and keep them open."
      }
    ]
  },
  {
    "number": 225,
    "title": "üêõ react-scan does not work for components in the `<dialog>` element",
    "created_at": "2025-01-31T10:22:41Z",
    "closed_at": "2025-02-02T08:34:21Z",
    "labels": [],
    "url": "https://github.com/aidenybai/react-scan/issues/225",
    "body": "I have some components being rendered in a dialog element that I want to debug but react scan does not show the rerender overlays for them.\n\nThis is probably due to the fact that open dialog elements are rendered on top of all other elements on the page",
    "comments_url": "https://api.github.com/repos/aidenybai/react-scan/issues/225/comments",
    "author": "ka-fuachie",
    "comments": [
      {
        "user": "pivanov",
        "created_at": "2025-01-31T18:00:00Z",
        "body": "You're correct that `<dialog>` elements are moved to the `#top-layer`, which is a **browser-managed stacking context that isolates them from the rest of the DOM**.\nBecause of this design, no JavaScript, CSS, or external tool can modify or inject elements into #top-layer ... only the browser controls it."
      },
      {
        "user": "pivanov",
        "created_at": "2025-01-31T18:00:38Z",
        "body": "Are you OK to close this isse?"
      }
    ]
  },
  {
    "number": 210,
    "title": "Firefox extension",
    "created_at": "2025-01-27T17:17:15Z",
    "closed_at": "2025-01-28T17:15:42Z",
    "labels": [],
    "url": "https://github.com/aidenybai/react-scan/issues/210",
    "body": "Hi there! This is a great tool, but the extension is only available for Chrome now.\nWould love to see a Firefox version too!",
    "comments_url": "https://api.github.com/repos/aidenybai/react-scan/issues/210/comments",
    "author": "Skaldebane",
    "comments": [
      {
        "user": "Skaldebane",
        "created_at": "2025-01-27T23:42:01Z",
        "body": "Okay I just realized this already exists... though the guide's name is misleading (`CHROME_EXTENSION_GUIDE.md`).\n\nIt should be `BROWSER_EXTENSION_GUIDE.md`. The README shall also be updated."
      },
      {
        "user": "pivanov",
        "created_at": "2025-01-28T17:14:04Z",
        "body": "Hey @Skaldebane \nYes the readme filename is obsolate.\nI work on the new version and hope we will have it soon. I will keep you posted!"
      },
      {
        "user": "Skaldebane",
        "created_at": "2025-01-30T22:48:32Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 118,
    "title": "[Bug] Importing setOptions causing a error to be logged when building next.js application",
    "created_at": "2024-12-13T19:31:23Z",
    "closed_at": "2024-12-25T18:50:57Z",
    "labels": [],
    "url": "https://github.com/aidenybai/react-scan/issues/118",
    "body": "When I import the setOptions function in a next.js (`import { scan, setOptions } from \"react-scan\";\r\n`) and then build the application it logs an error\r\n\r\n`Attempted import error: 'setOptions' is not exported from 'react-scan' (imported as 'setOptions').`\r\n\r\nNext.js version: `14.2.3`\r\n\r\nInterestingly the function is exported and I'm able to use it in my application, vscode also picks up the export. I'm not as familiar but this sounds like a potential TypeScript/ESModule resolution issue",
    "comments_url": "https://api.github.com/repos/aidenybai/react-scan/issues/118/comments",
    "author": "TatisLois",
    "comments": [
      {
        "user": "pivanov",
        "created_at": "2024-12-18T11:20:59Z",
        "body": "Hey @TatisLois\r\nThis should be fixed. Can you confirm?"
      },
      {
        "user": "pivanov",
        "created_at": "2024-12-25T18:50:57Z",
        "body": "I will close this one for now. I can confirm it works now."
      }
    ]
  },
  {
    "number": 109,
    "title": "Geiger counter loud af - option to set volume",
    "created_at": "2024-12-12T08:32:44Z",
    "closed_at": "2024-12-17T13:02:20Z",
    "labels": [],
    "url": "https://github.com/aidenybai/react-scan/issues/109",
    "body": "It would be great to be able to control the volume of the geiger counter as currently it nearly blows out my speakers.",
    "comments_url": "https://api.github.com/repos/aidenybai/react-scan/issues/109/comments",
    "author": "elieven",
    "comments": [
      {
        "user": "pivanov",
        "created_at": "2024-12-17T13:02:20Z",
        "body": "#133 Add support to configure volume via localStorage with the key react-scan-volume and a value between 0 and 1. We hope to add this as an option to the scan UI soon."
      },
      {
        "user": "elieven",
        "created_at": "2024-12-18T14:00:42Z",
        "body": "How about in the options you pass to `scan()`? That might be easier / quicker to add and would totally do. No need to design or implement any UI."
      }
    ]
  },
  {
    "number": 104,
    "title": "Include full text of license",
    "created_at": "2024-12-11T08:40:16Z",
    "closed_at": "2024-12-18T11:21:57Z",
    "labels": [],
    "url": "https://github.com/aidenybai/react-scan/issues/104",
    "body": "Hi @aidenybai. This tool looks very promising, however in order for many projects to use it legally, the full text of MIT license **must be included** in the project. It is not enough to mention the license name, its full text must be there in the repository. Can you make sure to add it, please?",
    "comments_url": "https://api.github.com/repos/aidenybai/react-scan/issues/104/comments",
    "author": "pd-be",
    "comments": [
      {
        "user": "aidenybai",
        "created_at": "2024-12-12T08:46:21Z",
        "body": "fixed, will be released soon"
      }
    ]
  },
  {
    "number": 57,
    "title": "Error when installing",
    "created_at": "2024-11-30T20:43:28Z",
    "closed_at": "2024-12-12T17:29:06Z",
    "labels": [],
    "url": "https://github.com/aidenybai/react-scan/issues/57",
    "body": "Getting the following error when installing. I'm using pnpm, Node.js v22.11.0 and Next.js v14.2.18.\r\n\r\n‚îå  [¬∑] React Scan\r\n‚îÇ\r\n‚óá  No drivers found. Install Playwright Chromium driver to continue?\r\n‚îÇ  Yes\r\nnode:internal/child_process:285\r\n      const err = new ErrnoException(exitCode, syscall);\r\n                  ^\r\n\r\nError: spawn npx ENOENT\r\n    at ChildProcess._handle.onexit (node:internal/child_process:285:19)\r\n    at onErrorNT (node:internal/child_process:483:16)\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:90:21) {\r\n  errno: -4058,\r\n  code: 'ENOENT',\r\n  syscall: 'spawn npx',\r\n  path: 'npx',\r\n  spawnargs: [ 'playwright@latest', 'install', 'chromium' ]\r\n}",
    "comments_url": "https://api.github.com/repos/aidenybai/react-scan/issues/57/comments",
    "author": "nerophase",
    "comments": [
      {
        "user": "tarcisioandrade",
        "created_at": "2024-12-01T02:18:32Z",
        "body": "same here"
      },
      {
        "user": "magentera",
        "created_at": "2024-12-02T01:35:23Z",
        "body": "What chip @nerophase @tarcisioandrade?"
      },
      {
        "user": "nerophase",
        "created_at": "2024-12-02T01:40:18Z",
        "body": "> What chip @nerophase @tarcisioandrade?\r\n\r\nMy processor is an 11th Gen Intel(R) Core(TM) i3-1115G4. Is that what you mean?"
      },
      {
        "user": "tarcisioandrade",
        "created_at": "2024-12-02T02:13:51Z",
        "body": "> What chip @nerophase @tarcisioandrade?\r\n\r\nCPU? AMD Ryzen 5 2400G\r\n"
      },
      {
        "user": "princeeze",
        "created_at": "2024-12-05T12:42:10Z",
        "body": "Same issue here"
      },
      {
        "user": "verdaderoken",
        "created_at": "2024-12-10T14:03:41Z",
        "body": "Run the command manually:\r\n\r\n```\r\nnpx playwright@latest install chromium\r\n```\r\n\r\nThen rerun your react-scan command. "
      },
      {
        "user": "tarcisioandrade",
        "created_at": "2024-12-11T02:12:55Z",
        "body": "> Run the command manually:\r\n> \r\n> ```\r\n> npx playwright@latest install chromium\r\n> ```\r\n> \r\n> Then rerun your react-scan command.\r\n\r\nfix, thanks"
      },
      {
        "user": "nerophase",
        "created_at": "2024-12-12T17:29:06Z",
        "body": "> Run the command manually:\r\n> \r\n> ```\r\n> npx playwright@latest install chromium\r\n> ```\r\n> \r\n> Then rerun your react-scan command.\r\n\r\nIt worked. Thanks!\r\n"
      }
    ]
  },
  {
    "number": 6,
    "title": "Feature Idea: Component Render Counter",
    "created_at": "2024-11-15T15:31:11Z",
    "closed_at": "2024-11-18T20:57:51Z",
    "labels": [],
    "url": "https://github.com/aidenybai/react-scan/issues/6",
    "body": "Feature Idea:  Add a running render count (total number of renders) to the component label. ",
    "comments_url": "https://api.github.com/repos/aidenybai/react-scan/issues/6/comments",
    "author": "derricksimpson",
    "comments": [
      {
        "user": "aidenybai",
        "created_at": "2024-11-18T20:57:51Z",
        "body": "@derricksimpson added! note that the running render count resets every 5 seconds if no renders have occurred, configurable via the `resetCountTimeout`"
      }
    ]
  }
]