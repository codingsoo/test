[
  {
    "number": 216,
    "title": "Add new experimental Gemini models to default settings",
    "created_at": "2025-01-21T16:16:40Z",
    "closed_at": "2025-01-26T03:30:10Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/pull/216",
    "body": "## README\r\n\r\n### Pull Request: Adding New Experimental Models\r\n\r\n#### Overview\r\nThis pull request introduces a set of new experimental models to be integrated into the project. The models are listed below:\r\n\r\n| Model Name                      | Description     | Status      |\r\n| ------------------------------- | --------------- | ----------- |\r\n| `gemini-2.0-flash-exp`          | A state-of-the-art model that emphasizes on flash performance. | Development |\r\n| `gemini-2.0-flash-thinking-exp-1219` | An enhanced version of `gemini-2.0-flash-exp` with additional thinking capabilities. | Development |\r\n| `learnlm-1.5-pro-experimental`   | An advanced learning model with experimental features to improve its professional capabilities. | Development |\r\n\r\n#### Purpose\r\n* `gemini-2.0-flash-exp` aims to improve the performance of existing systems by leveraging the latest flash technologies.\r\n* `gemini-2.0-flash-thinking-exp-1219` takes the `gemini-2.0-flash-exp` model to the next level, integrating thinking capabilities to ensure better decision-making in real-time environments.\r\n* `learnlm-1.5-pro-experimental` is designed to enhance the system's learning abilities with an advanced set of features, making it more versatile and adaptable to a wider range of applications.\r\n",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/216/comments",
    "author": "Piyu-Pika",
    "comments": [
      {
        "user": "Piyu-Pika",
        "created_at": "2025-01-22T06:07:11Z",
        "body": "@andrewpareles added some experiments model of Google gemini "
      },
      {
        "user": "andrewpareles",
        "created_at": "2025-01-26T03:30:06Z",
        "body": "cool"
      }
    ]
  },
  {
    "number": 203,
    "title": "fix react build.js to properly find the base folder",
    "created_at": "2025-01-04T19:59:01Z",
    "closed_at": "2025-01-06T02:00:41Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/pull/203",
    "body": "Hey, I contribute to a lot of open source projects and I usually organize it: `<owner>/<repo>`.\r\n\r\nbecause the owner is `voideditor` the build script find \"void\" in __dirname and use that as our base which is wrong causing a failure to build",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/203/comments",
    "author": "rluvaton",
    "comments": [
      {
        "user": "mathewpareles",
        "created_at": "2025-01-06T02:02:21Z",
        "body": "Great, just merged this."
      }
    ]
  },
  {
    "number": 194,
    "title": "Objects are not valid as a React child",
    "created_at": "2024-12-29T12:53:42Z",
    "closed_at": "2025-01-03T16:51:05Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/issues/194",
    "body": "When attempting to upload a file, I get the following error:\r\n\r\nError\r\nError: Objects are not valid as a React child (found: object with keys {error, code}). If you meant to render a collection of children, use an array instead.\r\n\r\nFull Error:\r\n{}\r\n\r\nI don't know where void's logs are. Using OpenRouter with llama-3.1-40b-instruct:free.",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/194/comments",
    "author": "CharlotteCross1998",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2025-01-03T00:31:59Z",
        "body": "Thanks for reporting, can you try again with the latest update?\r\n\r\nThis was a React issue we had on the old main branch, should be fixed."
      },
      {
        "user": "CharlotteCross1998",
        "created_at": "2025-01-03T16:51:05Z",
        "body": "Aye, that seemed to fix it, ta"
      }
    ]
  },
  {
    "number": 186,
    "title": "Feature request: Consider realize cursor prediction?",
    "created_at": "2024-12-20T15:22:53Z",
    "closed_at": "2024-12-27T21:56:52Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/issues/186",
    "body": "Since cursor prediction is one of the greatest features of Cursor, do you guys consider realize it? ðŸ¤—",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/186/comments",
    "author": "ovo-Tim",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-12-27T21:56:52Z",
        "body": "Yes!"
      }
    ]
  },
  {
    "number": 181,
    "title": "Fix React build crashing watch-client and added watch mode",
    "created_at": "2024-12-18T11:08:07Z",
    "closed_at": "2024-12-19T03:45:24Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/pull/181",
    "body": "### Description: \r\nImproved the experience of using building using react by\r\n\r\n- Included **Nodemon** as a dependency for watch functionality with **scope-tailwind**\r\n- Added watch functionality with **tsup**\r\n- Removed all **rimraf** and **cleanup** operations because it was causing watch-client to crash when building react\r\n- Added an `npm run watchreact` command to start the watcher\r\n\r\n### Issue:\r\nResolves #178 by improving the existing build process",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/181/comments",
    "author": "bjoaquinc",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-12-19T03:45:29Z",
        "body": "This is amazing, nice job!\r\n\r\nIn the future it would be great to incorporate this into the gulpfiles so that it 1. auto-watches when you press Ctrl+Shift+B and 2. auto-builds when you run the build script."
      },
      {
        "user": "bjoaquinc",
        "created_at": "2024-12-19T05:33:18Z",
        "body": "> This is amazing, nice job!\r\n> \r\n> In the future it would be great to incorporate this into the gulpfiles so that it 1. auto-watches when you press Ctrl+Shift+B and 2. auto-builds when you run the build script.\r\n\r\nGlad this worked for you!\r\n\r\nI'll look into incorporating it into the gulpfiles.\r\n\r\nCheers! :)"
      }
    ]
  },
  {
    "number": 173,
    "title": "Bundle errors",
    "created_at": "2024-12-09T11:04:21Z",
    "closed_at": "2024-12-15T02:19:02Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/issues/173",
    "body": "Multiple people have reported a blank screen after bundling the Void executable. \r\n\r\nIf this is an error on Voidâ€™s end, itâ€˜s probably due to import changes that we introduced (we are directly importing â€˜openaiâ€™ and other packages in electron-main). It could alternatively just be caused by vscodeâ€™s finicky bundler or cache errors, but it seems like a recurring issue.",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/173/comments",
    "author": "andrewpareles",
    "comments": [
      {
        "user": "datosh",
        "created_at": "2024-12-10T13:17:35Z",
        "body": "I also tried to build (works fine) and bundle (only shows default Electron app screen) Void, yesterday, based on main@296cd1b4. \r\nHappy to test a new version or provide more details from my side!"
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-12-11T01:48:34Z",
        "body": "Thanks @datosh! Just want to make sure, did you run `npm run gulp vscode-darwin-arm64`? If so, can you run one of these 3 commands instead (depends on your hardware, but probably the x64 one)?\r\n- `npm run gulp vscode-darwin-linux-x64`\r\n- `npm run gulp vscode-darwin-linux-ia32`\r\n- `npm run gulp vscode-darwin-linux-arm`"
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-12-11T02:58:53Z",
        "body": "Actually, it looks like a dependency issue - I'm working on fixing this now!"
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-12-11T03:31:36Z",
        "body": "Fixed on the `model-selection` branch. The issue was that dependencies like 'openai' were inside of devDependencies in package.json, instead of just being in dependencies. Will keep this issue open until the fix is merged into `main`. "
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-12-15T02:19:00Z",
        "body": "Fixed by #172. Please report if you still face any issues!"
      }
    ]
  },
  {
    "number": 172,
    "title": "Model selection",
    "created_at": "2024-12-08T01:23:43Z",
    "closed_at": "2024-12-15T01:58:39Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/pull/172",
    "body": "- Add a provider first (this is a popup)\r\n- Select a provider and its model for each feature: Ctrl+L, Ctrl+K, Autocomplete (this is a page with all options)\r\n- Ability to select model from Ctrl+L and Ctrl+K dropdowns\r\n",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/172/comments",
    "author": "andrewpareles",
    "comments": [
      {
        "user": "jcommaret",
        "created_at": "2024-12-08T01:26:20Z",
        "body": "@andrewpareles : thanks ;) "
      }
    ]
  },
  {
    "number": 171,
    "title": "[Documentation]Advanced builder section added",
    "created_at": "2024-12-07T13:50:27Z",
    "closed_at": "2024-12-27T13:01:08Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/pull/171",
    "body": null,
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/171/comments",
    "author": "jcommaret",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-12-15T02:30:17Z",
        "body": "I added `npm run buildreact` command to replace the build command, so we shouldn't need these instructions anymore, but the âŒ˜ + R bit is useful (might add it).\r\n\r\n> This is just useless because the watch task will need to be done again if you are not recloning the repo and building the react components.\r\n\r\nWhat do you mean by this? You shouldn't need to reclone the repo ðŸ˜…\r\n"
      },
      {
        "user": "jcommaret",
        "created_at": "2024-12-27T13:03:22Z",
        "body": "- the buildreact command is the perfect things. \r\n- âŒ˜ + R is so useful ;) "
      }
    ]
  },
  {
    "number": 164,
    "title": "[Question - Guide]How to develop an extension for VOID ?",
    "created_at": "2024-11-30T16:23:42Z",
    "closed_at": "2024-12-11T23:13:00Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/issues/164",
    "body": "Is there any known guide on how to develop an extension for VOID ? \r\nI'd like to add an AI model into the model selection (MISTRAL) \r\n\r\nAllowing to the Mistral API Guide, I should be able to use OpenAPI AI spec\r\n\r\nBut there is also a lot more things I might be able to do. \r\n\r\nHow to implement a new AI model and its own specificity ?  \r\n\r\n",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/164/comments",
    "author": "jcommaret",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-12-04T22:54:08Z",
        "body": "Great question - is there more you'd like to configure in the openaiCompatible setting than the options we currently offer?"
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-12-04T23:24:44Z",
        "body": "We'd like to eventually add an extensions API for models and for UI (e.g. the streaming UI we built with accept|reject sections). Adding Mistral should be possible with Void as-is, though."
      },
      {
        "user": "eamodio",
        "created_at": "2024-12-05T22:05:03Z",
        "body": "Would you leverage the new AI extension apis that VS Code supports for AI models?"
      },
      {
        "user": "jcommaret",
        "created_at": "2024-12-05T22:53:11Z",
        "body": "@andrewpareles : \r\n\r\nActually, void is a vscode fork, so allowing an extension to change things, inside the code, is like the same problem you had :  you had to allow code changes from ai.  \r\n\r\nThe main void goal is to develop an opensource marketplace for AI builder, This is really an ambitious problematic, because for each extension loaded, it is like building a new void fork for each person. Void Startup problem solved. \r\n\r\nAll the languages models actually in the void editor are actually American, and you are advertising theses models by naming them. \r\n\r\nLet's remove the model and build the marketplace. Gemini implementation should be made by Google ;) \r\n\r\nI want to be able to add an extension for mistral.   \r\n\r\nI actually want to build the Mistral - Codestral implementation - extension for void - this is a French startup who is trying to be as French as possible, so no compromise will be possible.  \r\n\r\nMistral is fighting against Google, OpenAI, and other LLMs companies. \r\n\r\nThis is actually possible to duplicate the openAPI spec, and add Mistral like the gemini implementations was done. \r\nBut the model is also capable of doing a lot more stuff. \r\n\r\nBut we all know that every person in the world, will want to build is own fined tuned language model in a nearby future. \r\n\r\nSo let's build the editor who can support it ;) "
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-12-07T03:21:54Z",
        "body": "> Would you leverage the new AI extension apis that VS Code supports for AI models?\r\n\r\nThanks for asking, @eamodio - big fan of GitLens. Vscode's extension api felt a little foreign when we played around with it, so I'm not sure if we'll use it in the near term. Are there specific pieces of UI you think we should look into? "
      },
      {
        "user": "jcommaret",
        "created_at": "2024-12-07T11:30:27Z",
        "body": "\r\n> Great question - is there more you'd like to configure in the openaiCompatible setting than the options we currently offer?\r\n\r\n@andrewpareles : let me try to build the Mistral extension. I donc like to have an \"openAI\" compatible settings, because we might have multiple openAi compatibles \"providers\". That we might want to switch regarding the complexity of the question, the API Cost, an even more. \r\n\r\nSome settings should be persistent, and duplicable.   \r\n"
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-12-11T10:08:08Z",
        "body": "It's important to have an openai-compatible provider, but we might just add it under openai by adding a baseUrl option. Happy to review Mistral when you're done!"
      }
    ]
  },
  {
    "number": 152,
    "title": "Did you forget to signal async completion",
    "created_at": "2024-11-19T09:17:34Z",
    "closed_at": "2024-12-05T01:13:07Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/issues/152",
    "body": "When I ran 'npm run gulp vscode-win32-x64', I got an error called 'Did you forget to signal asynccomplete?', which caused 'Bundling' to fail\r\n",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/152/comments",
    "author": "baiscode",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-11-26T10:23:45Z",
        "body": "Can you try again with the latest build?"
      },
      {
        "user": "baiscode",
        "created_at": "2024-12-05T01:13:05Z",
        "body": "I have tried the latest version and it was successful. Thanks."
      }
    ]
  },
  {
    "number": 151,
    "title": " Error building dev container image ",
    "created_at": "2024-11-18T19:23:27Z",
    "closed_at": "2024-11-27T01:10:29Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/issues/151",
    "body": "\r\nWhen attempting to build a dev container image for the project, an error occurred while trying to load metadata for the `dev_container_feature_content_temp` image. \r\n\r\nThe relevant part of the error message is:\r\n```\r\n> [internal] load metadata for docker.io/library/dev_container_feature_content_temp:latest:\r\n------\r\nDockerfile-with-features:20\r\n--------------------\r\n  20 | >>> FROM dev_container_feature_content_temp as dev_containers_feature_content_source\r\n--------------------\r\nerror: failed to solve: dev_container_feature_content_temp: pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed\r\n```\r\n\r\nIt appears the `dev_container_feature_content_temp` image could not be pulled, either because the repository does not exist or due to insufficient authorization.\r\n\r\nThis occurred when trying to build the container image defined in the `.devcontainer/devcontainer.json` file which references some additional dev container features.\r\n\r\nTo Reproduce:\r\n1. Open the project in VS Code \r\n2. Attempt to re-build and reopen in container\r\n\r\nAdditional Context:\r\n- VS Code version: 1.95.2 \r\n- Dev Containers extension version: 0.388.0\r\n- Operating System: macOS arm64\r\n- Docker Desktop version: 4.5.0\r\n\r\n",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/151/comments",
    "author": "clstaudt",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-11-26T10:35:25Z",
        "body": "Hi Chris, thanks for the issue. This is strange as it doesn't look like any of our devcontainer files differ from Microsoft's. I saw that you posted #157, are you still having trouble with this devcontainer issue, or did you find a workaround?\r\n\r\n"
      },
      {
        "user": "clstaudt",
        "created_at": "2024-11-26T11:51:25Z",
        "body": "Hi @andrewpareles,  I am still having issues building the project. Since I am not a JS developer, I don't have much hope in finding a workaround. Just checking out the project with great interest, trying to follow the build instructions and reporting that it didn't work on my machine."
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-11-27T01:10:29Z",
        "body": "Thanks @clstaudt. Responded to your post #160."
      }
    ]
  },
  {
    "number": 148,
    "title": "Discord invite link is invalid",
    "created_at": "2024-11-16T14:46:14Z",
    "closed_at": "2024-11-18T00:40:29Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/issues/148",
    "body": "Hey people,\r\n\r\nGreat project, I love the idea and wanted to check it out but the Discord link is invalid.",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/148/comments",
    "author": "OmkoBass",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-11-17T10:24:46Z",
        "body": "Where?"
      },
      {
        "user": "OmkoBass",
        "created_at": "2024-11-17T10:42:14Z",
        "body": "In the README and on the website. This might just be happening to me but I assume I should notify you incase it happens to other new people that want to join in."
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-11-18T00:40:29Z",
        "body": "Looks like it's consistent everywhere and people are still joining. Not sure how to reproduce the problem."
      }
    ]
  },
  {
    "number": 144,
    "title": "refactor: modularize LLM providers and types",
    "created_at": "2024-11-11T07:18:29Z",
    "closed_at": "2024-12-04T23:13:00Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/pull/144",
    "body": "refactor: modularize LLM providers and types\r\n- Split monolithic sendLLMMessage.ts into separate provider modules\r\n- Create dedicated files for each LLM provider (anthropic, gemini, openai, ollama, greptile)\r\n- Move types into separate types.ts file\r\n- Update import paths across affected files\r\n- No functional changes, purely architectural improvement\r\n\r\nThis refactoring improves code organization and maintainability by:\r\n- Separating concerns for each LLM provider\r\n- Making the codebase more modular\r\n- Improving type management",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/144/comments",
    "author": "pythons",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-12-04T23:12:56Z",
        "body": "Nice commit!"
      }
    ]
  },
  {
    "number": 134,
    "title": "Gemini added #new feature",
    "created_at": "2024-10-29T12:42:46Z",
    "closed_at": "2024-10-31T06:19:52Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/pull/134",
    "body": "# Add Google Gemini AI Integration\r\n\r\n## Overview\r\nAdded support for Google's Gemini AI models, enabling users to interact with Gemini's language models through the application's existing LLM interface.\r\n\r\n## Features\r\n- Integration with Google's Generative AI SDK\r\n- Support for multiple Gemini models:\r\n  - gemini-1.5-flash\r\n  - gemini-1.5-pro\r\n  - gemini-1.5-flash-8b\r\n  - gemini-1.0-pro\r\n- Streaming response support for real-time interactions\r\n- Proper handling of system messages by combining them with the first user message\r\n- Configurable max output tokens\r\n- Error handling with user-friendly messages\r\n\r\n## Implementation Details\r\n- Added new Gemini configuration options in the config system\r\n- Implemented message streaming using async iterators\r\n- Added proper message history handling with role conversion (assistant â†’ model)\r\n- Integrated with the existing abort mechanism for message cancellation\r\n- Added API key validation and error handling\r\n\r\n## Configuration\r\nUsers can configure Gemini through the following settings:\r\n- API Key: Google API key for authentication\r\n- Model Selection: Choice between available Gemini models\r\n- Max Tokens: Configurable through the default maxTokens setting\r\n\r\n## Technical Notes\r\n- Messages are properly formatted to match Gemini's expected structure\r\n- System messages are merged with the first user message due to Gemini's message format requirements\r\n- Streaming implementation ensures real-time response delivery\r\n- Error handling includes specific handling of API key validation errors\r\n\r\n## Testing Required\r\n- Verify streaming functionality works correctly\r\n- Test system message handling\r\n- Confirm error scenarios are properly handled\r\n- Validate max token limits are respected\r\n- Check abort functionality works as expected\r\n\r\n## Breaking Changes\r\nNone. This is an additive feature that maintains compatibility with existing LLM integrations.",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/134/comments",
    "author": "Piyu-Pika",
    "comments": [
      {
        "user": "Piyu-Pika",
        "created_at": "2024-10-30T00:55:21Z",
        "body": "@andrewpareles . I added Gemini a widely available model by Google . The API of gemini is free of cost which can lead to the many users to use the void extension and ide . This issue is faced by me personally "
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-10-30T01:27:37Z",
        "body": "Great addition, will review in a bit."
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-10-31T05:50:53Z",
        "body": "I simplified this a bit. Can you run a few tests to make sure it works?"
      }
    ]
  },
  {
    "number": 128,
    "title": "max_tokens (max_completion_tokens) not allowed for all configurations of OpenAICompatible",
    "created_at": "2024-10-28T12:10:00Z",
    "closed_at": "2024-10-29T07:51:04Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/voideditor/void/issues/128",
    "body": "\"object\": \"error\",\r\n\"message\": \"[{'type': 'extra_forbidden', 'loc': ('body', 'max_completion_tokens'), 'msg': 'Extra inputs are not permitted', 'input': 8192}]\",\r\n\"type\": \"BadRequestError\",\r\n\"param\": null,\r\n\"code\": 400\r\n\r\nOption necessary to disable max_tokens",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/128/comments",
    "author": "IDLe-Engineering",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-10-28T22:53:31Z",
        "body": "Added the ability to specify number of tokens manually or leave it blank. \r\n\r\nJust so we know, what provider are you using (which doesn't support max_completion_tokens)?"
      },
      {
        "user": "IDLe-Engineering",
        "created_at": "2024-10-29T06:57:01Z",
        "body": "Thanks Andrew! replied in Discord"
      },
      {
        "user": "IDLe-Engineering",
        "created_at": "2024-10-29T07:51:04Z",
        "body": "Tested and it works. I am closing the issue"
      }
    ]
  },
  {
    "number": 115,
    "title": "Pass build information to extension",
    "created_at": "2024-10-20T01:17:43Z",
    "closed_at": "2024-12-15T02:20:33Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/issues/115",
    "body": "We want to pass build information into the extension so we can:\r\n\r\n- choose whether to display âŒ˜ or Ctrl\r\n- label that the user is a developer vs in production in metrics\r\n- add a build number for metrics\r\n",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/115/comments",
    "author": "andrewpareles",
    "comments": [
      {
        "user": "plon-Susk7",
        "created_at": "2024-10-30T10:52:27Z",
        "body": "Hey @andrewpareles , your project seems interesting. I'd love to work on this issue.\r\n"
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-11-05T10:25:38Z",
        "body": "Hi @plon-Susk7 , sorry I missed this - feel free to hop on this issue!"
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-12-15T02:20:33Z",
        "body": "Largely fixed by #172. See metricsService."
      }
    ]
  },
  {
    "number": 111,
    "title": "How to use the features mentioned in the website, like ctrl+k, file edit, or code generation?",
    "created_at": "2024-10-17T09:52:02Z",
    "closed_at": "2024-10-18T07:33:42Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/voideditor/void/issues/111",
    "body": "Hello, I build the extensions and only find a chat window, how to use other features like code generation and inline edit.",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/111/comments",
    "author": "Arlen122",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-10-18T07:33:42Z",
        "body": "Void is a WIP - some features are on other branches, and some are being built. Feel free to DM me on discord if you're interested in anything specific."
      }
    ]
  },
  {
    "number": 104,
    "title": "Mac OS : Extension build crash",
    "created_at": "2024-10-15T13:13:46Z",
    "closed_at": "2024-10-15T13:46:39Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/issues/104",
    "body": "inside extensions/void\r\nThe command \r\n\r\n`npm run build`\r\n\r\nCrash with error message : \r\n`âœ˜ [ERROR] Cannot start service: Host version \"0.23.1\" does not match binary version \"0.23.0\" ` \r\n\r\n`npm run watch` instead is working. \r\n\r\nI am not able to build the extension. ",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/104/comments",
    "author": "jcommaret",
    "comments": [
      {
        "user": "jcommaret",
        "created_at": "2024-10-15T13:46:39Z",
        "body": "npm install eslint@0.23.1 --save-dev into extensions/void"
      },
      {
        "user": "spidy0x0",
        "created_at": "2024-10-20T17:58:50Z",
        "body": "\r\n> npm install eslint@0.23.1 --save-dev into extensions/void\r\n\r\nthis doesn't fix the issue. \r\nthe issue is related to the ```esbuild``` library. version mismatch\r\n\r\nrolling back to 0.23.0 fixed the issue\r\n```bun install esbuild@0.23.0 --save-exact```\r\nor \r\n```npm install esbuild@0.23.0 --save-exact```"
      }
    ]
  },
  {
    "number": 95,
    "title": "Supports calling LLM in a way compatible with OpenAI's API, and adds explicit configuration items for usersã€‚",
    "created_at": "2024-10-11T07:01:41Z",
    "closed_at": "2024-10-11T07:37:36Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/pull/95",
    "body": null,
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/95/comments",
    "author": "jack1582",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-10-11T21:36:57Z",
        "body": "Can you give proper defaults for void.openaiCompatible inside package.json?"
      },
      {
        "user": "jack1582",
        "created_at": "2024-10-12T01:54:31Z",
        "body": "> Can you give proper defaults for void.openaiCompatible inside package.json?\r\n\r\nOkay, I'll get it done later"
      }
    ]
  },
  {
    "number": 93,
    "title": "feat : show merge conflict in the right side scrollbar",
    "created_at": "2024-10-07T13:39:46Z",
    "closed_at": "2024-10-15T03:52:35Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/issues/93",
    "body": null,
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/93/comments",
    "author": "jcommaret",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-10-15T03:52:56Z",
        "body": "Unclear feature, please reach out if you'd like to discuss!"
      }
    ]
  },
  {
    "number": 91,
    "title": "MacOS IDE build",
    "created_at": "2024-10-06T00:06:13Z",
    "closed_at": "2024-10-07T03:31:18Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/pull/91",
    "body": null,
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/91/comments",
    "author": "jcommaret",
    "comments": [
      {
        "user": "LeoLiuYan",
        "created_at": "2024-10-07T14:43:14Z",
        "body": "Cool~"
      }
    ]
  },
  {
    "number": 89,
    "title": "Use Ollama API to start the right model",
    "created_at": "2024-10-05T15:10:52Z",
    "closed_at": "2024-12-15T02:15:07Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/issues/89",
    "body": null,
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/89/comments",
    "author": "jcommaret",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-10-18T07:45:37Z",
        "body": "When the user changes the Ollama model, we should communicate with the Ollama API to actually change the model"
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-10-23T08:58:23Z",
        "body": "For now, we just let the user pick a model through Ollama (and removed the model selection from Void)"
      },
      {
        "user": "PRANJALRANA11",
        "created_at": "2024-10-28T04:18:09Z",
        "body": "@andrewpareles can i look into this\r\n"
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-10-28T11:09:50Z",
        "body": "> @andrewpareles can i look into this\r\n\r\nDefinitely! Just submit a PR when you're done :) "
      },
      {
        "user": "Madhav160804",
        "created_at": "2024-11-04T20:38:41Z",
        "body": "Can you please clarify the requirements please, should we use the ollama api to get what are models that are installed and only display those models to select from \r\nOR\r\nwhen user selects a model which is not present on the system so just better error handling to display that the model doesn't exist ?"
      },
      {
        "user": "jcommaret",
        "created_at": "2024-11-04T20:49:01Z",
        "body": "I think starting with launching Ollama and show installed model and select them will be ok. \r\n\r\nInstalling ollama local model from void and selecting them is the absolute goal I think. "
      },
      {
        "user": "Madhav160804",
        "created_at": "2024-11-04T21:22:46Z",
        "body": "Hey, made a pull request #140 please review"
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-12-04T23:22:20Z",
        "body": "This issue is still open, because ideally we'd let users pick a model straight from inside Void (instead of just performing a check to make sure they have the model). If anyone wants to look into this, feel free!"
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-12-15T02:15:07Z",
        "body": "#172 is the updated version of this.\r\n\r\nWe might want to let users pull models - that's now part of #165."
      }
    ]
  },
  {
    "number": 83,
    "title": "Graphic : App Icons are not the void one",
    "created_at": "2024-10-01T23:54:23Z",
    "closed_at": "2024-10-02T03:56:40Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/issues/83",
    "body": "There is still an old version of the icons for the application. \r\n\r\nI found the \"void cube\"  signature a lot more appealing. ",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/83/comments",
    "author": "jcommaret",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-10-02T03:56:40Z",
        "body": "We're aware of this issue and will have a fix by the next release. Thanks!"
      }
    ]
  },
  {
    "number": 82,
    "title": "Chore : doc - Specify keyboard environnement/OS",
    "created_at": "2024-10-01T23:49:04Z",
    "closed_at": "2024-10-02T03:57:32Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/issues/82",
    "body": "Step 2.2 - Building the full IDE : \r\n\r\n- `Ctrl+Shift+B` doesn't do anything on Mac Os\r\n- `Command+Shift+B` does work on Mac OS \r\n\r\nMaybe using a platform agnostic command as `npm run watch` is a better option. \r\n\r\n",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/82/comments",
    "author": "jcommaret",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-10-02T03:57:32Z",
        "body": "Feel free to do a PR to the docs for clarity."
      }
    ]
  },
  {
    "number": 81,
    "title": "Add support to Ollama or local LLM.",
    "created_at": "2024-10-01T05:18:20Z",
    "closed_at": "2024-10-01T23:20:21Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/issues/81",
    "body": null,
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/81/comments",
    "author": "khy-sothavirak",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-10-01T23:20:21Z",
        "body": "#22 "
      }
    ]
  },
  {
    "number": 79,
    "title": "Chore : change \"yarn\" to \"npm i\" inside documentation",
    "created_at": "2024-09-30T16:34:14Z",
    "closed_at": "2024-10-01T23:25:55Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/issues/79",
    "body": "The documentation has not been updated to reflect the change in the code. Please update it",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/79/comments",
    "author": "jcommaret",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-10-01T23:25:06Z",
        "body": "Done!"
      }
    ]
  },
  {
    "number": 78,
    "title": "There is an error when Building the full IDE : Error parsing certificate:",
    "created_at": "2024-09-30T09:22:57Z",
    "closed_at": "2024-10-18T07:41:03Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/voideditor/void/issues/78",
    "body": "mac os\r\nThere is an error when Building the full IDE : \r\n[92031:0930/092115.126056:ERROR:trust_store_mac.cc(750)] Error parsing certificate:\r\nERROR: Failed parsing extensions",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/78/comments",
    "author": "RoyLR",
    "comments": [
      {
        "user": "jcommaret",
        "created_at": "2024-10-02T09:32:16Z",
        "body": "@RoyLR : can you give us more insight on the machine you are building ? \r\n- Architecture : arm or intel ?\r\n- MacOS : version ?\r\n- Xcode : version ?\r\n- Developer account ? yes or no ?\r\nIf we can't reproduce it, we won't be able to fix it.  "
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-10-18T07:41:03Z",
        "body": "Not enough info. Open a new issue to give more context."
      }
    ]
  },
  {
    "number": 72,
    "title": "Implement Proper Linting with Prettier for Code Consistency",
    "created_at": "2024-09-26T07:28:50Z",
    "closed_at": "2025-01-26T03:46:21Z",
    "labels": [
      "low priority"
    ],
    "url": "https://github.com/voideditor/void/pull/72",
    "body": "Implement Proper Linting with Prettier for Code Consistency \r\n\r\nIssue #71\r\n### PR Description:\r\n\r\nThis pull request sets up proper linting and formatting using Prettier from scratch to ensure consistent code style and readability across the project.\r\n\r\n**Key Changes:**\r\n\r\n- Implemented **Prettier** for consistent code formatting.\r\n- Configured `.prettierrc` to define formatting rules (e.g., spacing, quote style, trailing commas).\r\n- Added a format script (`npm run format`) to automatically format all files in the project according to Prettier rules.\r\n\r\n**Highlights:**\r\n\r\n- Prettier will automatically format files on save (if integrated with your editor).\r\n- Running `npm run format` will format the entire codebase, ensuring consistent code style across all files.\r\n\r\n> ***Note:*** For now, `pre-commit` hooks have been **disabled** by **_Void team_**, so the `pre-commit` setup has been removed. However, consistency can still be ensured by saving files in an editor that supports Prettier or by running the `npm run format` command manually.\r\n\r\n#### _**Future `Pre-commit` Hook Implementation:**_\r\n\r\nIf the `Void` team or anyone else are going to reintroduce `pre-commit` hooks in the future, they can easily do so by running `lint-staged` within the `pre-commit` script. This will automatically enforce linting before each commit, preventing inconsistent code from being committed.\r\n\r\n**Outcome**: This setup ensures that all code follows the same formatting standards, improving the readability and maintainability of the project while allowing developers to manually format code whenever necessary.",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/72/comments",
    "author": "SOUMITRO-SAHA",
    "comments": [
      {
        "user": "SOUMITRO-SAHA",
        "created_at": "2024-10-02T07:48:49Z",
        "body": "Hey @andrewpareles, could you clarify what needs to be done here? "
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-10-17T22:07:30Z",
        "body": "We prefer using the default JS/TS formatter, and not prettier. We might change this in the future."
      },
      {
        "user": "andrewpareles",
        "created_at": "2025-01-26T03:46:21Z",
        "body": "Not doing this right now!"
      }
    ]
  },
  {
    "number": 71,
    "title": "Code Linting Issue: Implementing Prettier for Code Consistency",
    "created_at": "2024-09-26T07:25:29Z",
    "closed_at": "2024-09-30T08:24:44Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/issues/71",
    "body": "Code Linting Issue: Implementing Prettier for Consistency\r\n\r\n#### Issue Description:\r\n\r\nCurrently, the project lacks any form of automated linting or formatting, which allows inconsistent code styles, poor readability, and potential errors to be introduced into the codebase. Without a proper linting setup, there is no enforcement of coding standards, which can result in varying styles across different parts of the project.\r\n\r\n**Problems before implementing linting and Prettier:**\r\n\r\n- No linting or formatting rules in place, allowing inconsistent code styles.\r\n- Developers could commit code without a unified format, leading to decreased readability and maintainability.\r\n- Lack of automated checks meant that style violations could easily go unnoticed.",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/71/comments",
    "author": "SOUMITRO-SAHA",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-09-30T08:25:13Z",
        "body": "Closing; will continue work in the PR #72."
      }
    ]
  },
  {
    "number": 67,
    "title": "[incomplete] Groq integration",
    "created_at": "2024-09-24T20:43:43Z",
    "closed_at": "2024-10-11T07:23:55Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/pull/67",
    "body": "#Added Gorq integration\r\nHowever, there was an issue: after accessing the settings, I couldn't find an input box for the Gorq API key, any help?",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/67/comments",
    "author": "avinpy-255",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-10-07T18:53:44Z",
        "body": "Can you rename it to \"groq\"?"
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-10-11T07:23:55Z",
        "body": "Closing due to inactivity."
      }
    ]
  },
  {
    "number": 63,
    "title": "Data security",
    "created_at": "2024-09-23T13:55:19Z",
    "closed_at": "2024-09-30T07:56:32Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/issues/63",
    "body": "On your website the following statement is made: Retain full control over your data.\r\n\r\nWhich sound verry interesting, however I can't find any explanation, what this statement exactly means and how this is assured.\r\nCan someone give a pointer on this toppic? ",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/63/comments",
    "author": "chrismelman",
    "comments": [
      {
        "user": "mathewpareles",
        "created_at": "2024-09-30T07:56:05Z",
        "body": "Sure - Void allows you to host an LLM locally. This means you can keep all of your data on your computer or network, instead of sending it to a third party. "
      }
    ]
  },
  {
    "number": 57,
    "title": "Include Accept/Reject in History",
    "created_at": "2024-09-23T05:19:18Z",
    "closed_at": "2024-12-01T01:35:15Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/issues/57",
    "body": "When the user presses the \"Apply\", \"Accept\", or \"Reject\" buttons, Void should add these events to the global VS Code history. If the user undoes a change, the Diffs should once again appear. \r\n\r\nRight now Void just forgets that a diff happened.",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/57/comments",
    "author": "mathewpareles",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-12-01T01:35:13Z",
        "body": "Fixed by #139"
      }
    ]
  },
  {
    "number": 54,
    "title": "Created a Powershell build script",
    "created_at": "2024-09-22T23:57:06Z",
    "closed_at": "2024-09-30T08:20:41Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/pull/54",
    "body": "Add PowerShell build script for contributing to Void\r\n\r\n- Includes functions to clone the repository, open the extension in VS Code, install dependencies, build the project, and set up AI features.\r\n- Provides guidance on building the full IDE.\r\n- Enhances onboarding for new contributors.",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/54/comments",
    "author": "grave0x",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-09-30T08:20:41Z",
        "body": "Unfortunately this is now outdated because we rebased. \r\n\r\nI think the Contributing.md file should be enough to get set up, so I'm closing this. "
      }
    ]
  },
  {
    "number": 51,
    "title": "feat: system prompt `.voidrules`",
    "created_at": "2024-09-22T09:37:44Z",
    "closed_at": "2024-10-15T03:29:54Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/pull/51",
    "body": "support `.voidrules` to system prompt.\r\n\r\nbased on #41 , please review and merge #41 first.\r\n\r\nclosed: #32",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/51/comments",
    "author": "okxiaoliang4",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-10-15T03:29:51Z",
        "body": "Merging package.json changes"
      }
    ]
  },
  {
    "number": 48,
    "title": "Build error no such file or directory markdown-language-features/preview-src/src",
    "created_at": "2024-09-21T13:49:23Z",
    "closed_at": "2024-10-18T12:49:39Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/voideditor/void/issues/48",
    "body": "After preparing everything by following the instructions in CONTRIBUTING.md, running `npm run watch` return this error:\r\n```\r\n[watch-extensions] [20:45:55] 'watch-extensions' errored after 949 ms\r\n[watch-extensions] [20:45:55] Error: ENOENT: no such file or directory, scandir '/home/x/void/extensions/markdown-language-features/preview-src/src'\r\nERROR: \"watch-extensions\" exited with 1.\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/48/comments",
    "author": "ywiyogo",
    "comments": [
      {
        "user": "Abraham599",
        "created_at": "2024-09-24T08:01:21Z",
        "body": "@ywiyogo are you using Windows 11 OS too ?\r\n"
      },
      {
        "user": "ywiyogo",
        "created_at": "2024-09-24T08:07:53Z",
        "body": "> @ywiyogo are you using Windows 11 OS too ?\r\n\r\n`/home/x/void/` is a folder structure of Linux, not Windows 11."
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-10-18T07:41:56Z",
        "body": "@ywiyogo Can you try again with the latest branch?"
      },
      {
        "user": "ywiyogo",
        "created_at": "2024-10-18T12:49:33Z",
        "body": "> @ywiyogo Can you try again with the latest branch?\r\n\r\nNo error anymore. It works @andrewpareles!"
      }
    ]
  },
  {
    "number": 45,
    "title": "Search Old Codes",
    "created_at": "2024-09-21T07:19:29Z",
    "closed_at": "2024-09-22T11:06:48Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/issues/45",
    "body": "We literally have a slack channel called #good-codes where we end up sharing/saving code snippets. I would like to add 2 commands into this for saving and searching old codebases.\r\n\r\nThe architecture would be:\r\n1. Write to my/org github gist whenever I save a snippet \r\n2. generate some docstrings for it automatically\r\n3. Embed the doc string\r\n4. and have a search feature.\r\n\r\nWould work with 2 additional shortcuts Cmd+option+S and command+space\r\n\r\nReplaces bulky software like pieces.app",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/45/comments",
    "author": "never2average",
    "comments": [
      {
        "user": "mathewpareles",
        "created_at": "2024-09-22T11:03:37Z",
        "body": "Please repost with a clearer title and description. It seems like you are just proposing the ability to search over a codebase, along with the ability to add code snippets."
      }
    ]
  },
  {
    "number": 33,
    "title": "feature:clear history",
    "created_at": "2024-09-19T13:32:59Z",
    "closed_at": "2024-09-30T07:56:00Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/pull/33",
    "body": "Added a \"Clear Chat History\" feature:\r\n\r\nClears the current conversation without saving the history\r\n\r\nKeyboard shortcuts:\r\n- Windows: Ctrl + U\r\n- Mac: Cmd + U",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/33/comments",
    "author": "rizansari",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-09-19T21:41:59Z",
        "body": "Please add a button in the sidebar to clear the history instead of a keyboard command."
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-09-30T07:56:00Z",
        "body": "Closing due to inactivity."
      }
    ]
  },
  {
    "number": 24,
    "title": "OpenRounter API",
    "created_at": "2024-09-18T11:18:38Z",
    "closed_at": "2024-09-18T17:12:20Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/issues/24",
    "body": null,
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/24/comments",
    "author": "C-r-Y-p-T-0",
    "comments": [
      {
        "user": "C-r-Y-p-T-0",
        "created_at": "2024-09-18T11:22:18Z",
        "body": "Integrating with OpenRouter.ai APIs gives access to a wide range of LLMs and computational providers at a more affordable cost, offering a versatile alternative to expensive APIs while enabling seamless internet-powered AI capabilities."
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-09-18T17:12:20Z",
        "body": "#20 "
      }
    ]
  },
  {
    "number": 23,
    "title": "So cool ",
    "created_at": "2024-09-18T07:11:30Z",
    "closed_at": "2024-09-18T17:04:22Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/issues/23",
    "body": "Thanks ",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/23/comments",
    "author": "maximedotair",
    "comments": [
      {
        "user": "aka-0x4C3DD",
        "created_at": "2024-09-18T15:17:48Z",
        "body": "But I don't get the USP. Why use Void when we have Zed !? Is it just because, \"it's a huge market and there's room for everyone\" philosophy or there is more than its meet the eye !?"
      },
      {
        "user": "andrewpareles",
        "created_at": "2024-09-18T17:04:22Z",
        "body": "Void is a one-click switch from VS Code :) "
      }
    ]
  },
  {
    "number": 18,
    "title": "Fix Install Script Permissions for Those Using Dev Containers",
    "created_at": "2024-09-18T02:44:34Z",
    "closed_at": "2024-09-18T17:01:27Z",
    "labels": [],
    "url": "https://github.com/voideditor/void/pull/18",
    "body": "Cloning the repo for the first time and spinning it up as a dev container using the predefined ``./devcontainer`` folder led me to permission denied errors for:\r\n\r\n- install-vscode.sh\r\n```\r\n => => transferring dev_containers_feature_content_source: 24.59kB         0.0s\r\n => [dev_container_auto_added_stage_label 1/7] FROM mcr.microsoft.com/dev  0.0s\r\n => CACHED [dev_container_auto_added_stage_label 2/7] ADD install-vscode.  0.0s\r\n => ERROR [dev_container_auto_added_stage_label 3/7] RUN /root/install-vs  0.6s\r\n------\r\n > [dev_container_auto_added_stage_label 3/7] RUN /root/install-vscode.sh:\r\n0.499 /bin/sh: 1: /root/install-vscode.sh: Permission denied\r\n------\r\nDockerfile-with-features:6\r\n--------------------\r\n   4 |     \r\n   5 |     ADD install-vscode.sh /root/\r\n   6 | >>> RUN /root/install-vscode.sh\r\n   7 |     \r\n   8 |     RUN git config --system codespaces-theme.hide-status 1\r\n--------------------\r\nERROR: failed to solve: process \"/bin/sh -c /root/install-vscode.sh\" did not complete successfully: exit code: 126\r\n[6720 ms] Error: Command failed: docker buildx build --load --build-arg BUILDKIT_INLINE_CACHE=1 -f /tmp/devcontainercli-orion/container-features/0.56.0-1726624192810/Dockerfile-w\r\n```\r\n\r\n- post-create.sh\r\n```\r\n305318 ms] Start: Run in container: /bin/sh -c ./.devcontainer/post-create.sh\r\n/bin/sh: 1: ./.devcontainer/post-create.sh: Permission denied\r\n[305375 ms] postCreateCommand failed with exit code 126. Skipping any further user-provided commands.\r\nDone. Press any key to close the terminal.\r\n```\r\n\r\nFor ``install-vscode.sh``, what I did is add an entry to add exec permissions in the Dockerfile.\r\n\r\nFor ``post-create.sh``, since its not referenced in the Dockerfile, I directly applied exec permissions to the file through ``chmod +x``. So 644 to 755. ",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/18/comments",
    "author": "callbacked",
    "comments": [
      {
        "user": "andrewpareles",
        "created_at": "2024-09-18T17:01:27Z",
        "body": "We shouldn't need to modify this file. Users with permission errors should be able to chmod files themselves. \r\nIf you think this is a problem that other people will have, please post your solution in the discord support channel."
      }
    ]
  },
  {
    "number": 16,
    "title": "Clear selection on ctrl+L",
    "created_at": "2024-09-17T23:53:32Z",
    "closed_at": "2024-09-19T21:42:54Z",
    "labels": [
      "roadmap-under consideration"
    ],
    "url": "https://github.com/voideditor/void/issues/16",
    "body": "Right now, the history grows indefinitely. It should instead be cleared when the user presses ctrl+L (and recorded somewhere). We'll add a UI for viewing past history items later.\n\n",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/16/comments",
    "author": "andrewpareles",
    "comments": [
      {
        "user": "DineshSolanki",
        "created_at": "2024-09-19T14:22:20Z",
        "body": "can you explain it a bit, like should each <kbd>ctrl + L</kbd> be made into individual chat sessions, that can be stored and cleared?"
      },
      {
        "user": "mathewpareles",
        "created_at": "2024-09-19T16:03:27Z",
        "body": "Exactly, when the user presses `ctrl + L`, the current session (all of the chats inside of the sidebar) should be cleared and saved for later. "
      }
    ]
  },
  {
    "number": 14,
    "title": "Allow user to delete selection",
    "created_at": "2024-09-17T23:52:33Z",
    "closed_at": "2024-09-19T16:06:01Z",
    "labels": [
      "roadmap-under consideration"
    ],
    "url": "https://github.com/voideditor/void/issues/14",
    "body": "When the user presses ctrl+L, a text selection is created in the sidebar. The user should be able to \"x\" out of it to clear it.",
    "comments_url": "https://api.github.com/repos/voideditor/void/issues/14/comments",
    "author": "andrewpareles",
    "comments": [
      {
        "user": "sunmorgan",
        "created_at": "2024-09-18T01:24:15Z",
        "body": "Would love to touch on this!"
      },
      {
        "user": "sunmorgan",
        "created_at": "2024-09-18T02:34:07Z",
        "body": "added pr"
      }
    ]
  }
]