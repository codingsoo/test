[
  {
    "number": 297,
    "title": "Call repomix from within a node script",
    "created_at": "2025-01-19T09:09:54Z",
    "closed_at": "2025-01-19T16:39:42Z",
    "labels": [],
    "url": "https://github.com/yamadashy/repomix/issues/297",
    "body": "Hi, I would like to use repomix in my application. Is it possible to call repomix as a node library, as opposed to a command line tool? If so, is there documentation on that somewhere? Thank you!",
    "comments_url": "https://api.github.com/repos/yamadashy/repomix/issues/297/comments",
    "author": "buesing",
    "comments": [
      {
        "user": "yamadashy",
        "created_at": "2025-01-19T16:28:34Z",
        "body": "Hi, @buesing !\nThank you for your interest in Repomix!\n\nYes, it is possible to use Repomix as a Node.js library. There's actually a similar feature request that we're tracking here: #257.\n\nCurrently, you can use Repomix programmatically like this:\n\n```typescript\nimport { pack } from \"repomix\";\n\n// Basic usage\nawait pack(\"path/to/directory\", config);\n```\n\nHowever, I should note that the current library interface isn't as clean as we'd like it to be since it still heavily relies on console output through the logger system. We're planning to provide a more developer-friendly in the future with better interfaces and error handling."
      },
      {
        "user": "buesing",
        "created_at": "2025-01-19T16:39:42Z",
        "body": "Very cool! Thanks a lot for the quick response, I'll close this issue in favor of the other one."
      }
    ]
  },
  {
    "number": 210,
    "title": "Ignored files can't be found in folder tree.",
    "created_at": "2024-12-20T08:20:20Z",
    "closed_at": "2024-12-29T13:58:28Z",
    "labels": [
      "enhancement",
      "needs discussion"
    ],
    "url": "https://github.com/yamadashy/repomix/issues/210",
    "body": "Add an option to keep it.",
    "comments_url": "https://api.github.com/repos/yamadashy/repomix/issues/210/comments",
    "author": "rockmandash",
    "comments": [
      {
        "user": "rockmandash",
        "created_at": "2024-12-20T08:22:14Z",
        "body": "this feature is crucial since people can ask LLM which file should add to the prompt based on folder tree."
      },
      {
        "user": "yamadashy",
        "created_at": "2024-12-29T13:50:21Z",
        "body": "@rockmandash\r\nThank you for your suggestion!\r\n\r\nIt seems similar to #181, but the requirement is indeed different.\r\n\r\nI understand there's a need to show ignored files in the file structure. However, simply showing all of them would raise issues like how to handle `node_modules`, and ignoring only a part of them doesn't seem like a clean solution either.\r\n\r\nI think the approach in #181 might be a better way to go, but I'm not entirely convinced yet. I'd like to think about it a little more."
      },
      {
        "user": "rockmandash",
        "created_at": "2024-12-29T13:58:28Z",
        "body": "Thank you! That's a great point, as long as I can keep the repo structure I'm ok with any solution, let's move the discussion to #181 !"
      }
    ]
  },
  {
    "number": 106,
    "title": "Minor Grammatical Issues in Repopack Contributor Covenant Code of Conduct",
    "created_at": "2024-10-07T12:37:07Z",
    "closed_at": "2024-10-08T14:11:19Z",
    "labels": [],
    "url": "https://github.com/yamadashy/repomix/issues/106",
    "body": "This pull request addresses a couple of minor grammatical issues found in the **Repopack Contributor Covenant Code of Conduct**. These changes aim to enhance the clarity and readability of the document, ensuring that the language is accurate and consistent.\r\n\r\n### Changes Made:\r\n1. **Verb Correction**  \r\n2. **Clarification in \"Examples of Unacceptable Behavior\"**  \r\n\r\n---\r\n\r\n### Examples:\r\n1. **Before the fix (Pledge Section)**:\r\n2. **Before the fix (Unacceptable Behavior Section)**:  \r\n3. and many more...",
    "comments_url": "https://api.github.com/repos/yamadashy/repomix/issues/106/comments",
    "author": "Mefisto04",
    "comments": [
      {
        "user": "yamadashy",
        "created_at": "2024-10-07T15:51:31Z",
        "body": "@Mefisto04 \r\n\r\nThank you for addressing these grammatical issues. Your comment mentions \"This pull request addresses...\", but I'm not able to see the associated pull request. Has a PR been created for these changes? If so, could you please provide a link to it?\r\n\r\nIf a PR hasn't been created yet, it would be helpful if you could submit one with your proposed modifications so we can review the specific changes.\r\n\r\nThanks for your contribution to improving the project documentation!"
      },
      {
        "user": "Mefisto04",
        "created_at": "2024-10-07T15:55:13Z",
        "body": "hey @yamadashy , you can assign this issue to me, after that i can make changes and make a pull request as well, I have done necessary changes just waiting for your assign."
      },
      {
        "user": "Mefisto04",
        "created_at": "2024-10-07T16:22:48Z",
        "body": "#109 ,  if these changes fixes all error it would be great if you merge this pr"
      },
      {
        "user": "yamadashy",
        "created_at": "2024-10-08T14:11:05Z",
        "body": "I've merged the PR #109 which addresses the updates to the Contributor Covenant Code of Conduct. As this resolves all the concerns raised in this issue, I'm going to close it now.\r\n\r\nThank you for your valuable contribution to this issue! "
      }
    ]
  },
  {
    "number": 13,
    "title": "Add support for .repopackignore and enhance ignore pattern documentation",
    "created_at": "2024-07-27T03:05:09Z",
    "closed_at": "2024-07-27T14:13:32Z",
    "labels": [],
    "url": "https://github.com/yamadashy/repomix/pull/13",
    "body": "fix: #12 \r\nThis pull request introduces support for .repopackignore files and improves the documentation for ignore patterns in Repopack.\r\n\r\nKey changes:\r\n- Added support for .repopackignore files\r\n- Updated the \"Ignore Patterns\" section in the README\r\n- Rearrange priority order for ignore patterns\r\n\r\nIgnore priority order (from highest to lowest):\r\n1. Custom patterns `ignore.customPatterns`\r\n2. `.repopackignore`\r\n3. `.gitignore` (if `ignore.useGitignorePatterns` is true)\r\n4. Default patterns (if `ignore.useDefaultPatterns` is true)\r\n",
    "comments_url": "https://api.github.com/repos/yamadashy/repomix/issues/13/comments",
    "author": "yamadashy",
    "comments": [
      {
        "user": "massdo",
        "created_at": "2024-07-27T07:20:42Z",
        "body": "Hello,\r\n\r\nThank you for your quick and thoughtful response! Your proposed approach sounds perfect and addresses the issue comprehensively.\r\n\r\nI do have one small suggestion regarding the naming of the configuration option. Instead of **`useGitignorePatterns`**, perhaps **`useGitignore`** or **`useGitignoreFile`** would be clearer. This can help avoid potential confusion with a setting that might suggest switching from a wildcard format to a regex format.\r\n\r\nBest regards,"
      },
      {
        "user": "yamadashy",
        "created_at": "2024-07-27T08:02:48Z",
        "body": "Thank you for taking a look and for your suggestion! I agree that your proposed option is clearer.\r\nI think we'll go with the simple useGitignore option."
      },
      {
        "user": "yamadashy",
        "created_at": "2024-07-27T14:12:49Z",
        "body": "I've implemented the changes. Your input has helped improve the feature!\r\nI'm going to merge this pull request now. Thanks again for your contribution to making Repopack better!"
      }
    ]
  },
  {
    "number": 12,
    "title": "Feat: Propose .repopackignore file to override .gitignore for repopack bundles",
    "created_at": "2024-07-26T17:26:09Z",
    "closed_at": "2024-07-29T15:29:05Z",
    "labels": [],
    "url": "https://github.com/yamadashy/repomix/issues/12",
    "body": "Hello,\r\n\r\nFirst, thank you for this very useful project!\r\n\r\nI'd like to suggest a feature that could enhance repopack's flexibility. \r\n\r\n### Current situation:\r\nI have a file \"claude-custom-instructions.txt\" that I want to include in my repopack bundle, but it's listed in my .gitignore file. Currently, to include this file, I need to set `ignore.useDefaultPatterns = false` and then manually add all the patterns I want to ignore in `ignore.customPatterns`. This works, but it's a bit cumbersome.\r\n\r\n### Feature proposal:\r\nIntroduce a new file called `.repopackignore` that would override .gitignore settings specifically for repopack bundles when present. Here's how it could work:\r\n\r\n1. If a `.repopackignore` file exists in the repository, repopack would use it instead of .gitignore.\r\n2. The syntax would be similar to .gitignore, allowing users to easily specify which files to include or exclude from the bundle.\r\n\r\nBenefits:\r\n- Simpler management of bundle-specific ignores\r\n- Maintains separation between git ignore rules and repopack bundle rules\r\n- Allows users to easily include files in repopack bundles that are git-ignored\r\n\r\nI'd appreciate your thoughts on this idea and whether it aligns with the project's goals. \r\n\r\nThank you again !",
    "comments_url": "https://api.github.com/repos/yamadashy/repomix/issues/12/comments",
    "author": "massdo",
    "comments": [
      {
        "user": "yamadashy",
        "created_at": "2024-07-27T01:48:07Z",
        "body": "Hello,\r\n\r\nThank you for your valuable feature proposal!\r\nYou're absolutely right; the current setup does cause the issue. Your idea is great and `.repopackignore` would not only allow including git-ignored files but also provide an easier way to specify ignore patterns compared to the current `ignore.customPatterns` configuration.\r\n\r\nHowever, I've been considering a slightly different approach that might offer even more flexibility. Here's what I'm thinking:\r\n\r\n1. Introduce a new `.repopackignore` file for Repopack-specific ignore patterns, as you suggested.\r\n\r\n2. Add a new configuration option `useGitignorePatterns` (default: true) in `repopack.config.json`:\r\n   ```json5\r\n   {\r\n     \"ignore\": {\r\n       \"useGitignorePatterns\": true,\r\n       // other existing options...\r\n     }\r\n   }\r\n   ```\r\n\r\nKey points:\r\n- If set to `false` and use `.repopackignore`, it would solve your issue by allowing Repopack to include git-ignored files.\r\n- If set to `true` (default), it would merge `.gitignore` and `.repopackignore` patterns. This addresses a potential future requirement I've envisioned.\r\n\r\nThis approach would maintain flexibility for both current needs and potential future requirements.\r\n\r\nWhat do you think about this alternative? Does it still address your needs? I'm very open to your feedback and any further suggestions you might have.\r\n\r\nThank you again for helping improve Repopack!"
      },
      {
        "user": "yamadashy",
        "created_at": "2024-07-27T03:23:01Z",
        "body": "Hello,\r\n\r\nI've made some modifications to your approach and implemented a solution. I've created a pull request:\r\n- PR #13 \r\n\r\nI believe this approach provides flexibility for both current needs and potential future requirements."
      },
      {
        "user": "yamadashy",
        "created_at": "2024-07-27T14:17:25Z",
        "body": "I'm merging this pull request now and I'm pleased to inform you that these changes have been released in version 0.1.13!\r\n\r\nIf you have any feedback on the new release or encounter any issues, please don't hesitate to let me know."
      },
      {
        "user": "yamadashy",
        "created_at": "2024-07-29T15:28:22Z",
        "body": " I'll close this issue now.\r\n Please feel free to provide more feedback if you have any in the future!\r\n \r\n Thank you for your feedback!"
      }
    ]
  },
  {
    "number": 8,
    "title": "feat: Option to prexfix line number",
    "created_at": "2024-07-24T13:44:25Z",
    "closed_at": "2024-07-25T13:21:59Z",
    "labels": [],
    "url": "https://github.com/yamadashy/repomix/issues/8",
    "body": "Add option to prefix each line in the output file with the line number from the true file.\r\n\r\nI think this would be useful as you can add to your prompt something like: \"Show the code changes with the line number, and include one line before to easier locate the change\". \r\n\r\nI find this saves a lot of time on larger projects",
    "comments_url": "https://api.github.com/repos/yamadashy/repomix/issues/8/comments",
    "author": "callumjo",
    "comments": [
      {
        "user": "yamadashy",
        "created_at": "2024-07-24T14:52:02Z",
        "body": "Cool idea! I'll definitely look into implementing this. Thanks!\r\nThis feature indeed seems very useful for tracking changes in larger projects. I'll consider how to best implement this and aim to include it in the next release."
      },
      {
        "user": "yamadashy",
        "created_at": "2024-07-24T15:06:49Z",
        "body": "I've implemented this feature in version 0.1.10. You can now try it out using the following command:\r\n\r\n```bash\r\nnpx repopack --output-show-line-numbers\r\n```\r\n\r\nPlease give it a test and let us know if it meets your requirements or if you have any feedback."
      },
      {
        "user": "callumjo",
        "created_at": "2024-07-24T15:23:17Z",
        "body": "Cheers! Works perfect."
      },
      {
        "user": "yamadashy",
        "created_at": "2024-07-25T13:21:43Z",
        "body": "\nThank you for testing it out!\nI'll close this issue.\nPlease feel free to provide any additional feedback if you have any!"
      }
    ]
  }
]