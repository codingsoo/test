[
  {
    "number": 132,
    "title": "Image Upload Optimization",
    "created_at": "2025-01-02T15:49:16Z",
    "closed_at": "2025-01-03T04:34:40Z",
    "labels": [],
    "url": "https://github.com/hunghg255/reactjs-tiptap-editor/issues/132",
    "body": "I'm using this editor to build my next.js blog. Thanks for your amazing work, it's really good. And I want to use the image extension to upload pictures to online service like vercel blob or Cloudiary. \r\n\r\nHow to get the picture after I submitting a post instead of clicking the button \"upload\" so that I can send these all at once to save data and optimize. Can I only access the file in the async function in Image.configure?\r\n\r\nI'm new in coding, especially for frontend.",
    "comments_url": "https://api.github.com/repos/hunghg255/reactjs-tiptap-editor/issues/132/comments",
    "author": "chen2142",
    "comments": [
      {
        "user": "hunghg255",
        "created_at": "2025-01-02T16:00:41Z",
        "body": "@chen2142 thanks. can you fork Image Extension and create Image Extension yourself and create a gallery and show the gallery when open upload the Image at the  toolbar"
      },
      {
        "user": "chen2142",
        "created_at": "2025-01-03T04:06:57Z",
        "body": "> @chen2142 thanks. can you fork Image Extension and create Image Extension yourself and create a gallery and show the gallery when open upload the Image at the toolbar\r\n\r\nI think I have solved this problem. What I did is creating two arrays by useState, one is for urls and one is for files. Then replace the src with actual url when uploaded. But thanks for your reply! I will try it."
      }
    ]
  },
  {
    "number": 104,
    "title": "[Bug]Cannot run on nextjs12 version",
    "created_at": "2024-11-06T10:10:46Z",
    "closed_at": "2024-11-06T10:37:14Z",
    "labels": [],
    "url": "https://github.com/hunghg255/reactjs-tiptap-editor/issues/104",
    "body": "It cannot run in the nextjs12 version. It can be loaded in the dev environment, but the editor cannot be loaded after the product environment is built. Please check this issue before it can be used after upgrading nextjs to version 15.",
    "comments_url": "https://api.github.com/repos/hunghg255/reactjs-tiptap-editor/issues/104/comments",
    "author": "JinkyCopilot",
    "comments": [
      {
        "user": "hunghg255",
        "created_at": "2024-11-08T23:00:54Z",
        "body": "Pls share me a repo. I will check help you"
      }
    ]
  },
  {
    "number": 98,
    "title": "Hydration error in nextjs form with server action",
    "created_at": "2024-11-03T20:12:39Z",
    "closed_at": "2024-11-09T11:07:15Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/hunghg255/reactjs-tiptap-editor/issues/98",
    "body": "When I use this editor in combination with react hook forms in a form which gets submitted with a nextjs server action I always get a SSR hydration error. \r\nAfter a lot of debugging I found out that the problem is cased by the css import. \r\n\r\nMy fix was copying the styles into my project and removing all font imports. Somehow this fixed the problem.",
    "comments_url": "https://api.github.com/repos/hunghg255/reactjs-tiptap-editor/issues/98/comments",
    "author": "Allacher",
    "comments": [
      {
        "user": "hunghg255",
        "created_at": "2024-11-04T02:06:51Z",
        "body": "@Allacher thank you for feedback, "
      },
      {
        "user": "hunghg255",
        "created_at": "2024-11-09T11:07:12Z",
        "body": "@Allacher try config `next.config.js`\r\n```\r\nconst nextConfig = {\r\n  transpilePackages: ['shiki'],\r\n};\r\n```"
      }
    ]
  },
  {
    "number": 80,
    "title": "[Bug] tailwind prefix=\"richtext-\" Causing No Style Applied on the Component",
    "created_at": "2024-10-20T14:24:31Z",
    "closed_at": "2025-01-04T10:54:06Z",
    "labels": [],
    "url": "https://github.com/hunghg255/reactjs-tiptap-editor/issues/80",
    "body": "I'm currently working on an ongoing project that uses Tailwind CSS along with ShadeCN. We recently integrated a rich text editor, but the styles are not aligning with our theme. After investigating, it appears that the issue is related to the prefix configuration in Tailwind.\r\n\r\n**Expected Behavior:**\r\n\r\nThe editor should apply the Tailwind styles according to our theme, with the prefix `richtext-` functioning correctly.\r\n\r\n**Actual Behavior:**\r\n\r\nNo Tailwind styles are being applied to the component due to the prefix configuration in the build.\r\n\r\n**Steps to Reproduce:**\r\n\r\n1. Set up a project using Tailwind CSS and ShadeCN with custom tailwind theme.\r\n2. Integrate the rich text editor.\r\n3. Observe that styles do not apply as expected.\r\n",
    "comments_url": "https://api.github.com/repos/hunghg255/reactjs-tiptap-editor/issues/80/comments",
    "author": "salaarkhan-dev",
    "comments": [
      {
        "user": "hunghg255",
        "created_at": "2024-10-20T16:27:57Z",
        "body": "@salaarkhan-dev I'm not sure about this problem, you can fork my repo and implement it"
      },
      {
        "user": "salaarkhan-dev",
        "created_at": "2024-10-27T07:42:15Z",
        "body": "I did work around using my own custom CSS styles and then import this CSS file where importing this component.\r\n\r\n```css\r\n/* Styles for the rich text editor container */\r\n.richtext-rounded-\\[0\\.5rem\\] {\r\n  @apply rounded-lg; /* Using 0.5rem (8px) rounding */\r\n}\r\n\r\n.richtext-bg-background {\r\n  @apply bg-background; /* Apply your preferred background color */\r\n}\r\n\r\n.richtext-shadow {\r\n  @apply shadow-lg; /* Adds a large shadow around the container */\r\n}\r\n\r\n.richtext-overflow-hidden {\r\n  @apply overflow-hidden; /* Ensures content is clipped to bounds */\r\n}\r\n\r\n.richtext-outline {\r\n  @apply outline-none focus:outline-blue-500; /* Default and focus outline styles */\r\n}\r\n\r\n.richtext-outline-1 {\r\n  @apply outline-1; /* Sets the outline thickness */\r\n}\r\n\r\n/* Flex layout and size styles */\r\n.richtext-flex {\r\n  @apply flex;\r\n}\r\n\r\n.richtext-flex-col {\r\n  @apply flex-col;\r\n}\r\n\r\n.richtext-w-full {\r\n  @apply w-full;\r\n}\r\n\r\n.richtext-max-h-full {\r\n  @apply max-h-full;\r\n}\r\n\r\n/* Editor content specific styles */\r\n.richtext-relative {\r\n  @apply relative; /* Sets position relative for inner components */\r\n}\r\n\r\n/* Character count styling */\r\n.richtext-character-count {\r\n  @apply text-foreground-400 text-sm; /* Use subtle color and smaller font */\r\n}\r\n\r\n/* Bubble menu styles */\r\n.richtext-bubble-menu {\r\n  @apply absolute bg-background rounded-md shadow-md p-2;\r\n  /* Adjust padding, background, and shadow for a custom popup style */\r\n}\r\n\r\n``` "
      }
    ]
  },
  {
    "number": 79,
    "title": "[Feat] Inline content",
    "created_at": "2024-10-20T09:51:51Z",
    "closed_at": "2024-10-25T01:01:39Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/hunghg255/reactjs-tiptap-editor/issues/79",
    "body": "This feature will help us to use the inline palette to add images, links, math & TeX, and more. \r\n\r\nThe inline palette letâ€™s you quickly add extra content to your text block without create new line (currently we cannot add KaTex formula or image in the same line but rather it return to new line). Simply hit `/` on any text block to open the inline palette. ",
    "comments_url": "https://api.github.com/repos/hunghg255/reactjs-tiptap-editor/issues/79/comments",
    "author": "TungNguyen-C4U",
    "comments": [
      {
        "user": "hunghg255",
        "created_at": "2024-10-23T07:29:22Z",
        "body": "- [x] Inline Katex\r\n- [x] Inline Image"
      }
    ]
  },
  {
    "number": 71,
    "title": "Allowing the Image to crop",
    "created_at": "2024-10-16T06:51:40Z",
    "closed_at": "2024-10-16T17:33:41Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/hunghg255/reactjs-tiptap-editor/issues/71",
    "body": "The functionality for cropping the image before uploading it would be awesome. For now, I want to be able to customize the image (crop it) before running the `onUpload` function. Is there a way to achieve that?\r\n\r\nBtw, Awesome Project!!",
    "comments_url": "https://api.github.com/repos/hunghg255/reactjs-tiptap-editor/issues/71/comments",
    "author": "MeDeveloperWeb",
    "comments": [
      {
        "user": "hunghg255",
        "created_at": "2024-10-16T07:26:09Z",
        "body": "@MeDeveloperWeb thanks for the feedback,\r\nyour question is a great feature, I will consider making a new extension for crop image"
      }
    ]
  },
  {
    "number": 55,
    "title": "Add resolveUrl prop",
    "created_at": "2024-10-04T22:49:07Z",
    "closed_at": "2024-10-08T01:39:17Z",
    "labels": [],
    "url": "https://github.com/hunghg255/reactjs-tiptap-editor/issues/55",
    "body": "Currently there's no way to use e.g. signed urls for uploaded files.\r\n\r\nA callback function `resolveUrl: (src: string) => Promise<string>` would solve the issue.\r\nOr if you have any other idea we can discuss in comments.",
    "comments_url": "https://api.github.com/repos/hunghg255/reactjs-tiptap-editor/issues/55/comments",
    "author": "stefan-krajnik",
    "comments": [
      {
        "user": "hunghg255",
        "created_at": "2024-10-05T01:18:44Z",
        "body": "@stefan-krajnik thank you for feedback.\r\nDo we need a callback url? In what cases do you use it?"
      },
      {
        "user": "stefan-krajnik",
        "created_at": "2024-10-05T13:04:06Z",
        "body": "@hunghg255 \r\nThe use case I have is, that all files are uploaded to aws s3 bucket, not all files are public, so I need to generated signed url."
      }
    ]
  },
  {
    "number": 50,
    "title": "Support custom format the content of the character count like characters/limit?",
    "created_at": "2024-10-01T17:42:49Z",
    "closed_at": "2024-10-09T10:00:42Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/hunghg255/reactjs-tiptap-editor/issues/50",
    "body": "I want to show **{character}/{limit}** instead of **{characters} CHARACTERS**.\r\nCan you support me to do that?",
    "comments_url": "https://api.github.com/repos/hunghg255/reactjs-tiptap-editor/issues/50/comments",
    "author": "phongphanh",
    "comments": [
      {
        "user": "hunghg255",
        "created_at": "2024-10-02T01:35:33Z",
        "body": "> I want to show **{character}/{limit}** instead of **{characters} CHARACTERS**. Can you support me to do that?\r\n\r\noke, I will check later"
      }
    ]
  },
  {
    "number": 45,
    "title": "Support for attach files",
    "created_at": "2024-09-26T13:43:41Z",
    "closed_at": "2024-09-26T17:21:42Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/hunghg255/reactjs-tiptap-editor/issues/45",
    "body": "Is there a block for uploading files?",
    "comments_url": "https://api.github.com/repos/hunghg255/reactjs-tiptap-editor/issues/45/comments",
    "author": "JohnnyDevJs",
    "comments": [
      {
        "user": "hunghg255",
        "created_at": "2024-09-26T14:29:50Z",
        "body": "Currently there is no extension support for attaching files. I will reseach later"
      },
      {
        "user": "hunghg255",
        "created_at": "2024-09-26T17:36:14Z",
        "body": "@JohnnyDevJs I added an extension to the attachment"
      },
      {
        "user": "JohnnyDevJs",
        "created_at": "2024-09-27T15:32:26Z",
        "body": "@hunghg255 I saw the new fit, it looks really good. Thanks!"
      }
    ]
  }
]