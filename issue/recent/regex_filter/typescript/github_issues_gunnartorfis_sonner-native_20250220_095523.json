[
  {
    "number": 192,
    "title": "Drop nativewind as a peer dep",
    "created_at": "2025-02-03T14:38:21Z",
    "closed_at": "2025-02-04T15:17:51Z",
    "labels": [],
    "url": "https://github.com/gunnartorfis/sonner-native/issues/192",
    "body": "Really interested in using this but NativeWind seems like a pretty heavy dependency to require (even more so because we are using Unistyles). It seems as though the usage of NativeWind is pretty minimal. I'm wondering if you are open to the idea of changing from NativeWind to using native `StyleSheet` for the sake of this libraries accessibility?",
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/192/comments",
    "author": "erickreutz",
    "comments": [
      {
        "user": "gunnartorfis",
        "created_at": "2025-02-03T14:40:32Z",
        "body": "That's a fair point. \n\nIt makes a lot of sense to have as few dependencies as possible. \n\nWould you be open to initiate that migration? I don't have time to do it this week. "
      },
      {
        "user": "gunnartorfis",
        "created_at": "2025-02-04T14:39:29Z",
        "body": "@erickreutz I found time to take a look at this. \n\nI will be removing nativewind completely alongside any className references. "
      },
      {
        "user": "erickreutz",
        "created_at": "2025-02-04T14:42:48Z",
        "body": "@gunnartorfis amazing! thank you!"
      },
      {
        "user": "gunnartorfis",
        "created_at": "2025-02-04T15:20:10Z",
        "body": "Released in 0.17.0 "
      }
    ]
  },
  {
    "number": 186,
    "title": "The action property does not close the toast when clicking on the primary button.",
    "created_at": "2025-01-16T16:47:34Z",
    "closed_at": "2025-02-04T15:01:18Z",
    "labels": [],
    "url": "https://github.com/gunnartorfis/sonner-native/issues/186",
    "body": "**Describe the bug**\nThe action property does not close the toast when clicking on the primary button. \n\n**To Reproduce**\nSteps to reproduce the behavior:\n\n1. Create a toast with an action (could be as simple as a console log)\n2. Trigger the toast and click on the action\n4. See bug (the action will occur but the toast won't be dismissed)\n\n**Example Code to Reproduce**\nHere is an example of a toast with an action that I pulled straight from the docs:\n\n```\ntoast('My action toast', {\n  action: {\n    label: 'Action',\n    onClick: () => console.log('Action!'),\n  },\n});\n```\n\n**Expected behavior**\nWhen you click on the primary button, it should run the action as well as close the toast. \n\n**Environment info**\n\n<!--\n  Please provide the version of the libraries below.\n-->\n\n| Library                      | Version |\n| ---------------------------- | ------- |\n| sonner-native                | ^0.16.2  |\n| react-native                 | 0.76.3  |\n| react-native-reanimated      | ~3.16.1  |\n| react-native-gesture-handler | ~2.20.2  |\n\n**Additional context**\nHere is the root of my app as well:\n\n```\n    <Suspense fallback={<Loading />}>\n      <SQLiteProvider\n        databaseName=\"coshop\"\n        useSuspense\n        options={{ enableChangeListener: true }}\n      >\n        <QueryClientProvider client={queryClient}>\n          <NetworkProvider>\n            <AuthProvider>\n              <GestureHandlerRootView style={{ flex: 1 }}>\n                <BottomSheetModalProvider>\n                  <Toaster />\n                  <InitialLayout />\n                </BottomSheetModalProvider>\n              </GestureHandlerRootView>\n            </AuthProvider>\n          </NetworkProvider>\n        </QueryClientProvider>\n      </SQLiteProvider>\n    </Suspense>\n```",
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/186/comments",
    "author": "rochajulian",
    "comments": [
      {
        "user": "gunnartorfis",
        "created_at": "2025-02-04T15:01:19Z",
        "body": "You can dismiss the toast manually within the action handler:\n\n```tsx\nconst id = toast.success('Some information', {\n  action: {\n    label: 'Acknowledge',\n    onClick: () => {\n      toast.dismiss(id);\n    },\n  },\n});\n```"
      }
    ]
  },
  {
    "number": 138,
    "title": "Fix types `title` and `variant` in `ExternalToast`",
    "created_at": "2024-10-10T17:48:11Z",
    "closed_at": "2024-11-19T20:08:25Z",
    "labels": [],
    "url": "https://github.com/gunnartorfis/sonner-native/issues/138",
    "body": "I would like to be able to pass `variant` without having to call a separate function (for wrapping purposes)\r\n\r\n```js\r\ntoast({title: 'Are you sure?', variant: 'warning', position: 'bottom-center'})\r\n// instead of\r\ntoast.warning('Are you sure?', { position: 'bottom-center' })\r\n```\r\n\r\nboth work but ts is yelling at the first \r\n\r\nlooks like this is the culprit \r\n\r\n```ts\r\ntype ExternalToast = Omit<\r\n  ToastProps,\r\n  'id' | 'type' | 'title' | 'jsx' | 'promise' | 'variant'\r\n> & {\r\n  id?: string | number;\r\n};\r\n```",
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/138/comments",
    "author": "ice-cap0",
    "comments": [
      {
        "user": "ice-cap0",
        "created_at": "2024-10-10T17:55:58Z",
        "body": "sry first one in fact doesn't work, need to pass string or jsx as first argument. \r\n\r\n"
      },
      {
        "user": "mrpmohiburrahman",
        "created_at": "2024-10-12T03:34:45Z",
        "body": "( To the maintainer ), If this issue is accepted, I would like to contribute."
      },
      {
        "user": "gunnartorfis",
        "created_at": "2024-11-19T20:08:25Z",
        "body": "Hey @frozencap \r\n\r\nThe goal of the library is to offer a complete match of Sonner's API (for web).\r\n\r\nAs for your wrapper purposes, why can't you create a toast() function of your own that accepts the variant and calls the respective toast function? "
      },
      {
        "user": "ice-cap0",
        "created_at": "2024-11-19T21:36:52Z",
        "body": "cool with that 🫡\r\nthx tor the great work friend "
      }
    ]
  },
  {
    "number": 136,
    "title": "I need forbidPress",
    "created_at": "2024-10-09T03:20:07Z",
    "closed_at": "2024-10-09T08:50:45Z",
    "labels": [],
    "url": "https://github.com/gunnartorfis/sonner-native/issues/136",
    "body": "Can you add a control so that the background cannot be clicked during toast?",
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/136/comments",
    "author": "YuGer26",
    "comments": [
      {
        "user": "gunnartorfis",
        "created_at": "2024-10-09T07:26:28Z",
        "body": "The background of the toast or the rest of your app?"
      },
      {
        "user": "YuGer26",
        "created_at": "2024-10-09T08:42:39Z",
        "body": "For the background of the entire app, I hope that when toast.loading exists, other locations on the page cannot be clicked until toast.dismiss() is executed; I thought of a way and wrote a component nested in sonner-native, adding a method 'forbidPress' to control whether the background can be clicked when toast takes effect. By the way, I optimized the action according to my own preferences. The code is posted below"
      },
      {
        "user": "YuGer26",
        "created_at": "2024-10-09T08:43:22Z",
        "body": "`import React, { useState, useEffect } from \"react\";\r\nimport { View, TouchableWithoutFeedback } from \"react-native\";\r\nimport {\r\n  Toaster as OriginalToaster,\r\n  toast as originalToast,\r\n} from \"sonner-native\";\r\nimport { YtoastActions } from \"./YtoastActions\";\r\n\r\n// Create a global state object to manage toast status\r\nconst toastState = {\r\n  isToastVisible: false,\r\n  shouldForbidPress: false,\r\n  setIsToastVisible(value) {\r\n    this.isToastVisible = value;\r\n  },\r\n  setShouldForbidPress(value) {\r\n    this.shouldForbidPress = value;\r\n  },\r\n};\r\n\r\n// YToaster component for rendering toast and handling full-screen click prevention\r\nexport const YToaster = ({ ...props }) => {\r\n  const [, forceUpdate] = useState({});\r\n\r\n  // Use useEffect to periodically force update the component, ensuring state changes are reflected in the UI\r\n  useEffect(() => {\r\n    const interval = setInterval(() => forceUpdate({}), 100);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {/* Render a full-screen transparent layer to prevent clicks when shouldForbidPress is true */}\r\n      {toastState.shouldForbidPress && (\r\n        <TouchableWithoutFeedback>\r\n          <View\r\n            style={{\r\n              position: \"absolute\",\r\n              top: 0,\r\n              left: 0,\r\n              right: 0,\r\n              bottom: 0,\r\n              zIndex: 9999,\r\n            }}\r\n          />\r\n        </TouchableWithoutFeedback>\r\n      )}\r\n      {/* Render the original Toaster component */}\r\n      <OriginalToaster\r\n        {...props}\r\n        onToastAdd={() => {\r\n          toastState.setIsToastVisible(true);\r\n          forceUpdate({});\r\n        }}\r\n        onToastRemove={() => {\r\n          toastState.setIsToastVisible(false);\r\n          toastState.setShouldForbidPress(false);\r\n          forceUpdate({});\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n// Create a custom toast method\r\nconst createYtoastMethod =\r\n  (method) =>\r\n  (message, options = {}) => {\r\n    const {\r\n      forbidPress,\r\n      confirmText,\r\n      cancelText,\r\n      onConfirm,\r\n      onCancel,\r\n      ...restOptions\r\n    } = options;\r\n\r\n    // Only create custom actions if confirmText or cancelText is provided\r\n    const customAction =\r\n      confirmText || cancelText ? (\r\n        <YtoastActions\r\n          confirmText={confirmText}\r\n          cancelText={cancelText}\r\n          onConfirm={() => {\r\n            if (onConfirm) onConfirm();\r\n            Ytoast.dismiss();\r\n          }}\r\n          onCancel={() => {\r\n            if (onCancel) onCancel();\r\n            Ytoast.dismiss();\r\n          }}\r\n        />\r\n      ) : null;\r\n\r\n    // If forbidPress is set, prevent page clicks\r\n    if (forbidPress) {\r\n      toastState.setShouldForbidPress(true);\r\n    }\r\n\r\n    // Call the original toast method\r\n    const closeFunction = method(message, {\r\n      ...restOptions,\r\n      action: customAction || restOptions.action,\r\n      onDismiss: (...args) => {\r\n        toastState.setShouldForbidPress(false);\r\n        if (restOptions.onDismiss) {\r\n          restOptions.onDismiss(...args);\r\n        }\r\n      },\r\n      onAutoClose: (...args) => {\r\n        toastState.setShouldForbidPress(false);\r\n        if (restOptions.onAutoClose) {\r\n          restOptions.onAutoClose(...args);\r\n        }\r\n      },\r\n    });\r\n\r\n    // Return an object containing the close method\r\n    return {\r\n      ...closeFunction,\r\n      close: (...args) => {\r\n        toastState.setShouldForbidPress(false);\r\n        if (closeFunction && typeof closeFunction === \"function\") {\r\n          closeFunction(...args);\r\n        } else if (closeFunction && closeFunction.close) {\r\n          closeFunction.close(...args);\r\n        }\r\n        originalToast.dismiss();\r\n      },\r\n    };\r\n  };\r\n\r\n// Create a custom Ytoast object containing various toast methods\r\nexport const Ytoast = Object.assign(createYtoastMethod(originalToast), {\r\n  success: createYtoastMethod(originalToast.success),\r\n  error: createYtoastMethod(originalToast.error),\r\n  warning: createYtoastMethod(originalToast.warning),\r\n  loading: createYtoastMethod(originalToast.loading),\r\n  promise: createYtoastMethod(originalToast.promise),\r\n  custom: createYtoastMethod(originalToast.custom),\r\n  dismiss: (...args) => {\r\n    toastState.setShouldForbidPress(false);\r\n    return originalToast.dismiss(...args);\r\n  },\r\n  wiggle: (...args) => {\r\n    toastState.setShouldForbidPress(false);\r\n    return originalToast.wiggle(...args);\r\n  },\r\n});\r\n\r\n// YToastProvider component for wrapping the application and providing toast functionality\r\nexport const YToastProvider = ({ children }) => <>{children}</>;\r\n`"
      },
      {
        "user": "YuGer26",
        "created_at": "2024-10-09T08:43:42Z",
        "body": "`import React from \"react\";\r\nimport { View, useColorScheme } from \"react-native\";\r\nimport { Button } from \"@fruits-chain/react-native-xiaoshu\";\r\n\r\nexport const YtoastActions = ({\r\n  confirmText,\r\n  cancelText,\r\n  onConfirm,\r\n  onCancel,\r\n}) => {\r\n  const colorScheme = useColorScheme();\r\n  const theme = global.Colors[colorScheme ?? \"light\"];\r\n\r\n  return (\r\n    <View className=\"flex flex-row w-full justify-end items-center\">\r\n      {confirmText && (\r\n        <Button\r\n          text={confirmText}\r\n          onPress={onConfirm}\r\n          onPressDebounceWait={500}\r\n          size=\"s\"\r\n          style={{ backgroundColor: theme.themeButtonBg }}\r\n          textStyle={{\r\n            color: \"black\",\r\n            fontSize: 12,\r\n            paddingHorizontal: 10,\r\n            fontWeight: 500,\r\n          }}\r\n        />\r\n      )}\r\n      {cancelText && (\r\n        <Button\r\n          text={cancelText}\r\n          onPress={onCancel}\r\n          onPressDebounceWait={500}\r\n          style={{ backgroundColor: theme.reBg }}\r\n          size=\"s\"\r\n          textStyle={{\r\n            color: theme.reText,\r\n            fontSize: 12,\r\n            paddingHorizontal: 10,\r\n            fontWeight: 500,\r\n          }}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n`"
      },
      {
        "user": "gunnartorfis",
        "created_at": "2024-10-09T08:50:45Z",
        "body": "Since <Toaster /> is rendered using `FullWindowOverlay` from `react-native-screens` on iOS, you probably want to use that as well lower in your view hierarchy for your covering view. You might as well experiment with using `Modal` from `react-native`. \r\n\r\nThis is definitely out of scope for `sonner-native` and something that should be handled in user-land. "
      },
      {
        "user": "YuGer26",
        "created_at": "2024-10-09T09:03:15Z",
        "body": "thanks"
      }
    ]
  },
  {
    "number": 130,
    "title": "feat: added customizeable close button",
    "created_at": "2024-10-04T08:32:09Z",
    "closed_at": "2024-10-04T11:38:42Z",
    "labels": [],
    "url": "https://github.com/gunnartorfis/sonner-native/pull/130",
    "body": "<!-- Thanks for submitting a pull request! We appreciate you spending the time to work on these changes. Please follow the template so that the reviewers can easily understand what the code changes affect. -->\r\n\r\n## Summary\r\nAdds basic functionality for customising close button. \r\nMoved the rendering to a useMemo hook to make it easier to follow the logic flow, since I did not want to break existing usages of the `closeButton` prop\r\n\r\n## Test plan\r\nThere is an example usage in the example app. Basically it tries to mimic the `action` and `cancel` actions except we only accept a ReactNode instead of a ToastAction\r\n\r\nFixes #129 ",
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/130/comments",
    "author": "ljukas",
    "comments": [
      {
        "user": "ljukas",
        "created_at": "2024-10-04T11:31:40Z",
        "body": "Just a note, I think a continuation of the custom-component structure could be to accept a function instead and there we can pass `theme` prop etc for the custom components and they can depend on that. Makes it easier to wrap a wrapped around sonner-native for custom styles etc"
      },
      {
        "user": "gunnartorfis",
        "created_at": "2024-10-04T11:40:07Z",
        "body": "Released in 0.15.0, thanks for the contribution! 👏 "
      }
    ]
  },
  {
    "number": 129,
    "title": "Customize close button",
    "created_at": "2024-10-03T14:28:24Z",
    "closed_at": "2024-10-04T11:38:43Z",
    "labels": [],
    "url": "https://github.com/gunnartorfis/sonner-native/issues/129",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nIcon can be replaced to be anything, the same goes for the action and cancel buttons. But the close Icon cannot be customized, you cant even change the color for it without changing the theme of the toast\r\n\r\n**Describe the solution you'd like**\r\nMuch like the other components Id like it to be replaceable with a custom component\r\n\r\n**Describe alternatives you've considered**\r\nForking this lib and adding this myself, which I will probably do anyway,\r\n\r\n",
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/129/comments",
    "author": "ljukas",
    "comments": [
      {
        "user": "gunnartorfis",
        "created_at": "2024-10-03T14:38:48Z",
        "body": "I can take a look at this after the weekend. Feel free to create a PR if you want to speed things up 💪"
      }
    ]
  },
  {
    "number": 116,
    "title": "[react-native-gesture-handler] None of the callbacks in the gesture are worklets",
    "created_at": "2024-09-22T21:53:29Z",
    "closed_at": "2024-09-22T21:55:12Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/gunnartorfis/sonner-native/issues/116",
    "body": "**Describe the bug**\r\nAlways get this warning\r\nWorking well, but I have this warning\r\n[react-native-gesture-handler] None of the callbacks in the gesture are worklets. If you wish to run them on the JS thread use '.runOnJS(true)' modifier on the gesture to make this explicit. Otherwise, mark the callbacks as 'worklet' to run them on the UI thread.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n1. Just install and show toast\r\n\r\n**Expected behavior**\r\nWithout warning\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Environment info**\r\n\r\n<!--\r\n  Please provide the version of the libraries below.\r\n-->\r\n\r\n| Library                      | Version |\r\n| ---------------------------- | ------- |\r\n| sonner-native                | 0.14.1  |\r\n| react-native                 | 0.75.3   |\r\n| react-native-reanimated      |3.15.2  |\r\n| react-native-gesture-handler | 2.19.0  |\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n",
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/116/comments",
    "author": "wogno",
    "comments": [
      {
        "user": "gunnartorfis",
        "created_at": "2024-09-22T21:55:12Z",
        "body": "Just released 0.14.2, which fixes this. Let me know if it doesn't. "
      },
      {
        "user": "wogno",
        "created_at": "2024-09-24T15:29:36Z",
        "body": "I upgrade version to recommended and that work well thanks."
      }
    ]
  },
  {
    "number": 98,
    "title": "[BUG] `onClick` of the action button does not trigger on Android.",
    "created_at": "2024-09-14T21:10:41Z",
    "closed_at": "2024-09-19T09:04:41Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/gunnartorfis/sonner-native/issues/98",
    "body": "**Describe the bug**\r\nThe `onClick` function we pass in the action object in the toast does not trigger on Android but works on iOS. The action button is not clickable on Android I think.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n```ts\r\ntoast.info(\"Update available\", {\r\n      description:\r\n        \"An update is available with many improvements and bug fixes, instantly update for the best experience.\",\r\n      duration: Infinity,\r\n      action: {\r\n        label: \"Update\",\r\n        onClick: async () => {\r\n          console.log(\"Clicked update button\");\r\n        },\r\n      },\r\n    });\r\n  ```\r\n\r\n1. Click on the update button\r\n\r\n**Expected behavior**\r\nThe provided action onClick function should trigger on Android\r\n\r\n**Screenshots**\r\n\r\n\r\n**Environment info**\r\n\r\n<!--\r\n  Please provide the version of the libraries below.\r\n-->\r\n\r\n| Library                      | Version |\r\n| ---------------------------- | ------- |\r\n| sonner-native                | ^0.13.0  |\r\n| react-native                 | 0.74.5   |\r\n| react-native-reanimated      | ~3.10.1  |\r\n| react-native-gesture-handler | ~2.16.2   |\r\n\r\n**Additional context**\r\nMaybe sometime double clicking very quickly trigger it",
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/98/comments",
    "author": "SohelIslamImran",
    "comments": [
      {
        "user": "SohelIslamImran",
        "created_at": "2024-09-14T21:55:19Z",
        "body": "Also, using custom Pressable is still not trigger, is not pressable"
      },
      {
        "user": "gunnartorfis",
        "created_at": "2024-09-18T10:43:35Z",
        "body": "Two things I found out:\r\n- If the Infinity duration is removed, it works. Setting it to a very high value still works. \r\n- If the enabled check to the ToastSwipeHandler is removed, it works. "
      },
      {
        "user": "SohelIslamImran",
        "created_at": "2024-09-18T17:27:38Z",
        "body": "@gunnartorfis In my case, it is still not working if the Infinity duration is removed.. I need to double click very quickly, then it works "
      }
    ]
  },
  {
    "number": 97,
    "title": "feat: add onPress",
    "created_at": "2024-09-14T15:15:56Z",
    "closed_at": "2024-09-19T08:55:31Z",
    "labels": [],
    "url": "https://github.com/gunnartorfis/sonner-native/pull/97",
    "body": "add onPress props, close #96 \r\n\r\n## Test plan\r\n\r\nAdded examples to ToastDemo. added `OnPress action` button at last.",
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/97/comments",
    "author": "ameer-taghavi",
    "comments": [
      {
        "user": "gunnartorfis",
        "created_at": "2024-09-18T10:28:32Z",
        "body": "@ameer-taghavi thanks for the PR. \r\nI changed the functionality just a tiny bit. Now, enabled doesn't check for onPress, since the enabled prop is just meant to control the dismissability. If you want the tap to be disabled, don't pass the onPress prop. \r\n\r\nCould you test out the new changes and see if they're working as intended? "
      },
      {
        "user": "ameer-taghavi",
        "created_at": "2024-09-18T10:30:20Z",
        "body": "Ok, I'll  test it"
      },
      {
        "user": "ameer-taghavi",
        "created_at": "2024-09-18T10:40:31Z",
        "body": "@gunnartorfis,\r\nI tested and everything is ok"
      }
    ]
  },
  {
    "number": 96,
    "title": "[Feature] add onPress props",
    "created_at": "2024-09-14T09:49:33Z",
    "closed_at": "2024-09-19T08:55:32Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/gunnartorfis/sonner-native/issues/96",
    "body": "\r\nPlease add OnPress on whole Toast to run an action without button 🙏🏻 ",
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/96/comments",
    "author": "ameer-taghavi",
    "comments": [
      {
        "user": "gunnartorfis",
        "created_at": "2024-09-14T10:01:25Z",
        "body": "This is not something Sonner for web supports, so this won't get a high priority. \r\nI encourage you to contribute with a PR. "
      },
      {
        "user": "ameer-taghavi",
        "created_at": "2024-09-14T12:14:21Z",
        "body": "I don't have permission to push"
      },
      {
        "user": "gunnartorfis",
        "created_at": "2024-09-14T15:09:51Z",
        "body": "You have to fork the repo and make a PR from yours. "
      }
    ]
  },
  {
    "number": 86,
    "title": "Support multi Direction in swipe to dismiss",
    "created_at": "2024-09-11T18:18:39Z",
    "closed_at": "2024-09-14T09:32:27Z",
    "labels": [],
    "url": "https://github.com/gunnartorfis/sonner-native/issues/86",
    "body": "Please add multi direction in to dismiss \nfor example \n`swipToDismissDirections={['up', 'down', 'left', 'right']}`\n\n** down direction is useful for bottom toast",
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/86/comments",
    "author": "ameer-taghavi",
    "comments": [
      {
        "user": "gunnartorfis",
        "created_at": "2024-09-11T20:33:20Z",
        "body": "I'll create a separate issue for dismissing by default down for bottom toasts. "
      },
      {
        "user": "gunnartorfis",
        "created_at": "2024-09-14T09:32:27Z",
        "body": "Closing this issue as I don't think this is a good UX. #93 will address the most important thing here which is bottom swiping for bottom toasts. "
      }
    ]
  },
  {
    "number": 83,
    "title": "typo fixes for \"swipToDismissDirection\" and \"ivertProps\".",
    "created_at": "2024-09-11T14:46:07Z",
    "closed_at": "2024-09-11T20:32:12Z",
    "labels": [],
    "url": "https://github.com/gunnartorfis/sonner-native/pull/83",
    "body": "<!-- Thanks for submitting a pull request! We appreciate you spending the time to work on these changes. Please follow the template so that the reviewers can easily understand what the code changes affect. -->\r\n\r\n## Summary\r\n\r\n- Fixed typo in `swipToDismissDirection` prop to `swipeToDismissDirection`. Updated other related files that uses it. \r\n- Fixed typo `ivertProps` to `invertProps` in `use-colors.ts` file.\r\n\r\n<!-- Explain the motivation for this PR. Include \"Fixes #<number>\" if applicable. -->\r\n\r\n## Test plan\r\n\r\n<!-- Provide instructions or files for testing the changes, especially if special setup is required. -->\r\n\r\nAdditional test plan is not needed. Just made typo fixes and it **passes** the current tests.",
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/83/comments",
    "author": "hknakn",
    "comments": [
      {
        "user": "gunnartorfis",
        "created_at": "2024-09-11T20:32:08Z",
        "body": "Thanks! @hknakn "
      }
    ]
  },
  {
    "number": 69,
    "title": "Icons not showing up for toasts",
    "created_at": "2024-09-10T08:52:25Z",
    "closed_at": "2024-09-10T09:19:07Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/gunnartorfis/sonner-native/issues/69",
    "body": "**Describe the bug**\r\nWhen I add a custom icon to the toast component, it did not show up, but not adding an icon at all makes it show\r\n\r\n**To Reproduce**\r\n```js\r\nimport { CircleCheck } from \"lucide-react-native\";\r\n\r\n\r\nexport function successToast({\r\n  title,\r\n  description,\r\n  duration = 4000,\r\n}: SuccessToast) {\r\n  const successToastId = toast.success(title, {\r\n    className: \"bg-green-500\",\r\n    style: { backgroundColor: \"green\" },\r\n    description,\r\n    duration,\r\n    icon: <CircleCheck />, // this does not show\r\n  });\r\n```\r\n\r\n**Expected behavior**\r\nThe CircleCheck icon should show in the toast\r\n\r\n\r\n| Library                      | Version |\r\n| ---------------------------- | ------- |\r\n| sonner-native                | 0.9.1  |\r\n| react-native                 | 0.74.3   |\r\n| react-native-reanimated      | 3.10.1  |\r\n| react-native-gesture-handler | 2.16.1  |\r\n\r\n",
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/69/comments",
    "author": "Elue-dev",
    "comments": [
      {
        "user": "gunnartorfis",
        "created_at": "2024-09-10T09:03:45Z",
        "body": "Thanks for the report, that's quite urgent. \r\n\r\nI don't have much time to look at this during work hours today but I found out that the icon component passed is being logged as <CssInterpolate.XX />, I'm wondering if that has anything to do with it. "
      },
      {
        "user": "gunnartorfis",
        "created_at": "2024-09-10T09:19:07Z",
        "body": "Fix has been released in 0.9.2"
      }
    ]
  },
  {
    "number": 68,
    "title": "Add Customisation of Themes (dark mode & light mode)",
    "created_at": "2024-09-10T08:48:28Z",
    "closed_at": "2024-09-10T09:10:56Z",
    "labels": [],
    "url": "https://github.com/gunnartorfis/sonner-native/issues/68",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nUnable to manually set whether the toast uses dark mode or ligt mode\r\n\r\n**Describe the solution you'd like**\r\nI would like to be able to configure whether the toast uses dark mode or light mode. Can be added as part of the Toaster component, or when calling the toast components",
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/68/comments",
    "author": "Elue-dev",
    "comments": [
      {
        "user": "gunnartorfis",
        "created_at": "2024-09-10T08:59:17Z",
        "body": "Thanks for the report, it'll be fixed with #70 "
      }
    ]
  },
  {
    "number": 61,
    "title": "chore: refactor toast styles",
    "created_at": "2024-09-09T22:01:17Z",
    "closed_at": "2024-09-10T09:12:02Z",
    "labels": [],
    "url": "https://github.com/gunnartorfis/sonner-native/pull/61",
    "body": "<!-- Thanks for submitting a pull request! We appreciate you spending the time to work on these changes. Please follow the template so that the reviewers can easily understand what the code changes affect. -->\r\n\r\n## Summary\r\n\r\nUpdated toast styles.\r\n\r\n## Test plan\r\n\r\n<!-- Provide instructions or files for testing the changes, especially if special setup is required. -->",
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/61/comments",
    "author": "seyedmostafahasani",
    "comments": [
      {
        "user": "gunnartorfis",
        "created_at": "2024-09-10T09:12:02Z",
        "body": "Thanks for the PR but I don't want to use StyleSheet and I'm happy with inline styles."
      }
    ]
  },
  {
    "number": 60,
    "title": "chore: handle undefined type with question mark",
    "created_at": "2024-09-09T21:12:22Z",
    "closed_at": "2024-09-10T09:14:32Z",
    "labels": [],
    "url": "https://github.com/gunnartorfis/sonner-native/pull/60",
    "body": "<!-- Thanks for submitting a pull request! We appreciate you spending the time to work on these changes. Please follow the template so that the reviewers can easily understand what the code changes affect. -->\r\n\r\n## Summary\r\n\r\nHandled the `undefined` type by using a question mark.\r\n\r\n## Test plan\r\n\r\n<!-- Provide instructions or files for testing the changes, especially if special setup is required. -->",
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/60/comments",
    "author": "seyedmostafahasani",
    "comments": [
      {
        "user": "gunnartorfis",
        "created_at": "2024-09-10T09:14:32Z",
        "body": "I want the parameter to be passed in all cases, this prevents one forgetting to pass it, but it can be undefined. "
      }
    ]
  },
  {
    "number": 59,
    "title": "chore: remove inline style",
    "created_at": "2024-09-09T20:56:14Z",
    "closed_at": "2024-09-10T09:12:11Z",
    "labels": [],
    "url": "https://github.com/gunnartorfis/sonner-native/pull/59",
    "body": "<!-- Thanks for submitting a pull request! We appreciate you spending the time to work on these changes. Please follow the template so that the reviewers can easily understand what the code changes affect. -->\r\n\r\n## Summary\r\n\r\nRemoved inline style.\r\n\r\n## Test plan\r\n\r\n<!-- Provide instructions or files for testing the changes, especially if special setup is required. -->",
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/59/comments",
    "author": "seyedmostafahasani",
    "comments": [
      {
        "user": "gunnartorfis",
        "created_at": "2024-09-10T09:12:12Z",
        "body": "Thanks for the PR but I don't want to use StyleSheet and I'm happy with inline styles."
      }
    ]
  },
  {
    "number": 58,
    "title": "chore: update type of styles",
    "created_at": "2024-09-09T20:37:16Z",
    "closed_at": "2024-09-10T09:13:58Z",
    "labels": [],
    "url": "https://github.com/gunnartorfis/sonner-native/pull/58",
    "body": "<!-- Thanks for submitting a pull request! We appreciate you spending the time to work on these changes. Please follow the template so that the reviewers can easily understand what the code changes affect. -->\r\n\r\n## Summary\r\n\r\nI updated the type of styles. We can use `StyleProp<ViewStyle>` or `StyleProp<TextStyle>`  instead of `ViewStyle | TextStyle | (ViewStyle | TextStyle | undefined)[]`.\r\n\r\n## Test plan\r\n\r\nYou can pass an array of styles to each component.",
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/58/comments",
    "author": "seyedmostafahasani",
    "comments": [
      {
        "user": "gunnartorfis",
        "created_at": "2024-09-10T09:13:58Z",
        "body": "I'm not handling applying styles as arrays in all cases, closing this for now"
      }
    ]
  },
  {
    "number": 55,
    "title": "feat: add pull request template",
    "created_at": "2024-09-09T17:47:43Z",
    "closed_at": "2024-09-09T19:28:33Z",
    "labels": [],
    "url": "https://github.com/gunnartorfis/sonner-native/pull/55",
    "body": null,
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/55/comments",
    "author": "seyedmostafahasani",
    "comments": [
      {
        "user": "gunnartorfis",
        "created_at": "2024-09-09T19:28:29Z",
        "body": "Thanks 🙏 "
      }
    ]
  },
  {
    "number": 35,
    "title": "fix: bottom bars weren't tappable with custom offset",
    "created_at": "2024-09-08T09:03:20Z",
    "closed_at": "2024-09-08T09:15:58Z",
    "labels": [],
    "url": "https://github.com/gunnartorfis/sonner-native/pull/35",
    "body": "Closes #28 ",
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/35/comments",
    "author": "gunnartorfis",
    "comments": [
      {
        "user": "hyoban",
        "created_at": "2024-09-08T09:14:36Z",
        "body": "Oh yes, this is correct. Sorry for my mistake in the last PR."
      },
      {
        "user": "gunnartorfis",
        "created_at": "2024-09-08T09:15:47Z",
        "body": "No worries at all, thanks for helping out "
      }
    ]
  },
  {
    "number": 28,
    "title": "[BUG] When the toast is displayed at the bottom, the tab navigation cannot be clicked.",
    "created_at": "2024-09-08T04:18:02Z",
    "closed_at": "2024-09-08T09:15:59Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/gunnartorfis/sonner-native/issues/28",
    "body": "**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**Environment info**\r\n\r\n<!--\r\n  Please provide the version of the libraries below.\r\n-->\r\n\r\n| Library                         | Version |\r\n| ------------------------------- | ------- |\r\n| react-native-reanimated-toasts            | x.x.x   |\r\n| react-native                    | x.x.x   |\r\n| react-native-reanimated         | x.x.x   |\r\n| react-native-gesture-handler    | x.x.x   |\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n",
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/28/comments",
    "author": "hyoban",
    "comments": [
      {
        "user": "gunnartorfis",
        "created_at": "2024-09-08T09:03:50Z",
        "body": "@hyoban can you review the PR? #35 "
      }
    ]
  },
  {
    "number": 27,
    "title": "feat: offset support",
    "created_at": "2024-09-07T13:59:50Z",
    "closed_at": "2024-09-07T15:04:40Z",
    "labels": [],
    "url": "https://github.com/gunnartorfis/sonner-native/pull/27",
    "body": null,
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/27/comments",
    "author": "hyoban",
    "comments": [
      {
        "user": "gunnartorfis",
        "created_at": "2024-09-07T14:41:07Z",
        "body": "@hyoban Awesome, thanks for the PR 🙏 \r\nCould you add to the `sonner.md` that we now support offset? "
      },
      {
        "user": "hyoban",
        "created_at": "2024-09-07T14:44:13Z",
        "body": "Added 🥳"
      }
    ]
  },
  {
    "number": 22,
    "title": "fix: import path",
    "created_at": "2024-09-07T09:58:16Z",
    "closed_at": "2024-09-07T11:15:00Z",
    "labels": [],
    "url": "https://github.com/gunnartorfis/sonner-native/pull/22",
    "body": "I get the following error when using this package.\r\n\r\n\r\n```\r\nUnable to resolve \"src/constants\" from \"node_modules/react-native-reanimated-toasts/lib/commonjs/toast.js\"\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/22/comments",
    "author": "hyoban",
    "comments": [
      {
        "user": "gunnartorfis",
        "created_at": "2024-09-07T11:15:30Z",
        "body": "@hyoban thanks. I hadn't tested the 0.4.0 release outside of the example folder. Must update my VSCode setttings to prefer relative imports. "
      }
    ]
  },
  {
    "number": 8,
    "title": "lucide-react-native & react-native-svg",
    "created_at": "2024-09-05T09:43:07Z",
    "closed_at": "2024-09-08T09:53:43Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/gunnartorfis/sonner-native/issues/8",
    "body": "Ideally, we'd want to have no unnecessary dependencies like react-native-svg. Using react-native-vector-icons is also bloating the lib so we wouldn't be better off with that. \r\n\r\nThe only other option that I can think of is to ditch icons entirely in the lib and have them passed down as props, but I don't like that option much either. \r\n\r\nAny suggestions?",
    "comments_url": "https://api.github.com/repos/gunnartorfis/sonner-native/issues/8/comments",
    "author": "gunnartorfis",
    "comments": [
      {
        "user": "gunnartorfis",
        "created_at": "2024-09-08T08:42:55Z",
        "body": "@hyoban what is your thought on this? "
      },
      {
        "user": "hyoban",
        "created_at": "2024-09-08T09:19:45Z",
        "body": "react-native-svg is fine, as almost every project using svg icon uses it. For `lucide-react-native`, maybe we copy the icons we use to this package."
      },
      {
        "user": "gunnartorfis",
        "created_at": "2024-09-08T09:53:43Z",
        "body": "True. Let's keep this as is for now. "
      }
    ]
  }
]