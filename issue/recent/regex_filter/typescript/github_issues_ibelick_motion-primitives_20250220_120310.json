[
  {
    "number": 55,
    "title": "Create a 'Spotlight' component",
    "created_at": "2024-09-26T16:37:53Z",
    "closed_at": "2024-11-19T01:35:17Z",
    "labels": [
      "help wanted",
      "good first issue"
    ],
    "url": "https://github.com/ibelick/motion-primitives/issues/55",
    "body": "We're looking to add 'Spotlight' component to motion-primitives! This component would let you highlight elements on a webpage dynamically, following the cursor.\r\n\r\n### Requirements:\r\n- Allow customization with transition and className.\r\n- Maintain performance for smooth animations.\r\n- Ensure compatibility with the most recent browsers.\r\n- Simple, easy-to-use API.\r\n\r\n### Ideal Contribution:\r\n- A React component that uses Framer Motion for animations.\r\n- Include a demo page (`docs/spotlight/page.mdx`) that demonstrates the spotlight effect on different types of content (e.g., text, images, buttons).\r\n\r\n### Example Usage:\r\n```jsx\r\n<Spotlight\r\n  transition={{\r\n    type: 'spring',\r\n    stiffness: 300,\r\n    damping: 30,\r\n  }}\r\n  className=\"bg-zinc-50 size-14\" \r\n>\r\n  <div className=\"highlighted-element\">\r\n    <h2>Spotlight Feature</h2>\r\n    <p>This area is dynamically highlighted by the spotlight component.</p>\r\n  </div>\r\n</Spotlight>\r\n```\r\n\r\n### How to Contribute:\r\n- Fork the repository on GitHub.\r\n- Create your feature branch (git checkout -b feature/spotlight).\r\n- Commit your changes (git commit -am 'Add Spotlight component').\r\n- Push to the branch (git push origin feature/spotlight).\r\n- Open a new Pull Request targeting the main branch.\r\n\r\nIf you have a X handle, please provide it so I can tag you in the related announcement demo tweet. You'll also be added to the **Credit** in the documentation page. Thank you for considering contributing to motion-primitives!\r\n",
    "comments_url": "https://api.github.com/repos/ibelick/motion-primitives/issues/55/comments",
    "author": "ibelick",
    "comments": [
      {
        "user": "divyanshu-vashishth",
        "created_at": "2024-10-11T18:02:29Z",
        "body": "Hi, @ibelick !\r\nI am interested in contributing to this library, Could you please assign this issue to me? I'd love to work on this 'Spotlight' component. Thanks!\r\n"
      },
      {
        "user": "ibelick",
        "created_at": "2024-10-11T21:36:50Z",
        "body": "Hey @divyanshu-vashishth , just assigned the issue to you. Thank you :)"
      }
    ]
  },
  {
    "number": 23,
    "title": "Animate <TransitionPanel> x property by contents width",
    "created_at": "2024-08-13T17:44:25Z",
    "closed_at": "2024-10-30T19:22:16Z",
    "labels": [],
    "url": "https://github.com/ibelick/motion-primitives/issues/23",
    "body": "Currently the framer motion `x` value is being animated by a hard coded value of 364, ideally this number should be the content's width or a fraction of it to keep the animation smooth (e.g. 80%).\r\nHere's my implementation, I can open a PR for it\r\n\r\n```tsx\r\nconst variants = {\r\n    enter: ({ direction, width }: { direction: number; width: number }) => ({\r\n        opacity: 0,\r\n        x: direction > 0 ? width : -width,\r\n    }),\r\n    center: {\r\n        zIndex: 1,\r\n        opacity: 1,\r\n        x: 0,\r\n    },\r\n    exit: ({ direction, width }: { direction: number; width: number }) => ({\r\n        zIndex: 0,\r\n        opacity: 0,\r\n        x: direction < 0 ? width : -width,\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n    }),\r\n};\r\n\r\nconst TransitionPanel = ({\r\n    activeIndex,\r\n    className,\r\n    children,\r\n    ...props\r\n}: React.ComponentPropsWithoutRef<typeof m.div> & {\r\n    children: React.ReactNode[];\r\n    activeIndex: number;\r\n}) => {\r\n    const [width, setWidth] = React.useState(364);\r\n    const previous = activeIndex === 1 ? 0 : 1;\r\n    const direction = activeIndex > previous ? 1 : -1;\r\n    const custom = { direction, width };\r\n\r\n    return (\r\n        <AnimatePresence initial={false} mode=\"popLayout\" custom={custom}>\r\n            <m.div\r\n                {...props}\r\n                key={activeIndex}\r\n                custom={custom}\r\n                variants={variants}\r\n                transition={{\r\n                    duration: 0.2,\r\n                    ease: \"easeOut\",\r\n                    x: { type: \"spring\", stiffness: 200, damping: 30 },\r\n                }}\r\n                className=\"relative h-full min-h-screen\"\r\n                initial=\"enter\"\r\n                animate=\"center\"\r\n                exit=\"exit\">\r\n                {children[activeIndex]}\r\n                <div\r\n                    id=\"sizer\"\r\n                    className=\"absolute inset-0 pointer-events-none z-[-1]\"\r\n                    ref={(node: HTMLDivElement) => {\r\n                        if (node) {\r\n                            setWidth(node.getBoundingClientRect().width);\r\n                        }\r\n                    }}\r\n                />\r\n            </m.div>\r\n        </AnimatePresence>\r\n    );\r\n};\r\n```",
    "comments_url": "https://api.github.com/repos/ibelick/motion-primitives/issues/23/comments",
    "author": "rortan134",
    "comments": [
      {
        "user": "ibelick",
        "created_at": "2024-08-20T08:30:28Z",
        "body": "Thank you for the help! Noticed the width is still hardcoded here:\r\n```jsx\r\nconst [width, setWidth] = React.useState(364);\r\n```\r\nI'm planning to add a different solution soon."
      },
      {
        "user": "rortan134",
        "created_at": "2024-08-20T11:25:50Z",
        "body": "> Thank you for the help! Noticed the width is still hardcoded here:\r\n> \r\n> ```js\r\n> const [width, setWidth] = React.useState(364);\r\n> ```\r\n> \r\n> I'm planning to add a different solution soon.\r\n\r\nYou can just get it from the useMeasure hook, that width is just there on the first render until the ref triggers"
      },
      {
        "user": "ibelick",
        "created_at": "2024-10-30T19:22:17Z",
        "body": "I will add a solution for the differents animated height/width. Thanks again."
      }
    ]
  },
  {
    "number": 12,
    "title": "Cursor position",
    "created_at": "2024-08-12T06:33:26Z",
    "closed_at": "2025-01-22T09:07:03Z",
    "labels": [],
    "url": "https://github.com/ibelick/motion-primitives/issues/12",
    "body": "\r\nI've had some problems using the Cursor component on nested divs, but I fixed it by changing the updatePosition function like this\r\n\r\n```js\r\n    const updatePosition = (e: MouseEvent) => {\r\n      cursorX.set(e.layerX)\r\n      cursorY.set(e.layerY)\r\n     ...\r\n```\r\n\r\nnow it works perfect for me\r\n\r\nthanks for this great component :)",
    "comments_url": "https://api.github.com/repos/ibelick/motion-primitives/issues/12/comments",
    "author": "yestoall",
    "comments": [
      {
        "user": "ibelick",
        "created_at": "2025-01-22T09:07:03Z",
        "body": "I can’t replicate the issue. If you’re able to reproduce it, please reopen an issue with a code example, and I’ll take a closer look"
      }
    ]
  },
  {
    "number": 11,
    "title": "Feature Request: Add Separate Tabs for JavaScript (JS) and TypeScript (TS) Code with Copy Button Functionality",
    "created_at": "2024-08-12T05:31:33Z",
    "closed_at": "2024-08-20T07:29:23Z",
    "labels": [],
    "url": "https://github.com/ibelick/motion-primitives/issues/11",
    "body": "### Description:\r\nCurrently, when users navigate to the code tab of the component, only TypeScript (TS) code is available. This poses a challenge for developers working with JavaScript (JS) projects, as they need to manually convert the TS code to JS, which can be time-consuming and error-prone.\r\n\r\n### Proposed Solution:\r\nTo improve the usability and accessibility of the component for a broader range of developers, I propose the following improvements:\r\n\r\n**1. Separate Tabs for JS and TS:**\r\n- Introduce two distinct tabs within the code section, one for JavaScript (JS) and the other for TypeScript (TS).\r\n- This will allow developers to easily switch between the two languages and use the code that best suits their project needs.\r\n\r\n**2. Copy Button Functionality:**\r\n- Add a copy button for both the JS and TS code sections.\r\n- This feature will enable developers to copy the code quickly with a single click.",
    "comments_url": "https://api.github.com/repos/ibelick/motion-primitives/issues/11/comments",
    "author": "DeepakKumarKhatri",
    "comments": [
      {
        "user": "ibelick",
        "created_at": "2024-08-20T07:29:23Z",
        "body": "Thank you for the suggestion! Motion-Primitives is intentionally TypeScript focused for specific technical reasons, but I’ll consider providing some guidance for JS users in the documentation."
      }
    ]
  }
]