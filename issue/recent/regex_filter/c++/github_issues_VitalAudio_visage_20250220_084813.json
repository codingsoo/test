[
  {
    "number": 23,
    "title": "FIXED: Mac Clang path not set in CMakeList.txt",
    "created_at": "2025-02-18T20:59:51Z",
    "closed_at": "2025-02-19T22:07:04Z",
    "labels": [],
    "url": "https://github.com/VitalAudio/visage/issues/23",
    "body": "hey i added this as a small fix so that cmake would recognize my apple laptop, small fix tho no biggie:\n\n./visage/visage_widgets/CMakeList.txt\n````\nif(APPLE)\n  set(CMAKE_C_COMPILER \"/usr/bin/clang\" CACHE STRING \"C compiler\" FORCE)\n  set(CMAKE_CXX_COMPILER \"/usr/bin/clang++\" CACHE STRING \"C++ compiler\" FORCE)\nendif()\n````\n\nhope that helps anyone",
    "comments_url": "https://api.github.com/repos/VitalAudio/visage/issues/23/comments",
    "author": "RamonaRoseThomas",
    "comments": [
      {
        "user": "mtytel",
        "created_at": "2025-02-19T22:07:04Z",
        "body": "This seems more like a problem with your system/setup than a general issue. cmake should detect compilers and set them. \n\nIf you want to specify a compiler to use you can pass them in when you run cmake (e.g. -D CMAKE_C_COMPILER=\"/usr/bin/clang\"). But really I think there might be some weird environment variable set on your system or something."
      },
      {
        "user": "RamonaRoseThomas",
        "created_at": "2025-02-19T22:09:43Z",
        "body": "i did have a bad ENV_VAR, but ended up switching to the zig compiler, ill come back with any questions."
      }
    ]
  },
  {
    "number": 20,
    "title": "Upgrade shaderc.exe for Windows",
    "created_at": "2025-02-13T06:33:33Z",
    "closed_at": "2025-02-18T13:53:16Z",
    "labels": [],
    "url": "https://github.com/VitalAudio/visage/pull/20",
    "body": "Hey, enjoying trying this library out.👋\r\nBumped shaderc.exe version 1.16.108 to 1.18.129\r\nReason: parsing platform 100_es failing on Windows despite working on Mac\r\nBuilt with Visual Studio 2022 Release mode On for x64\r\n\r\nlemme know if you have any feedback.\r\nCheers!",
    "comments_url": "https://api.github.com/repos/VitalAudio/visage/issues/20/comments",
    "author": "sethclim",
    "comments": [
      {
        "user": "mtytel",
        "created_at": "2025-02-18T13:53:16Z",
        "body": "Thanks for the pull request, for security reasons I'm going to update the binary myself though.\r\nNot saying you're doing anything nefarious, just being extra cautious with shipped binaries."
      }
    ]
  },
  {
    "number": 14,
    "title": "Add a `children()` method to Frame",
    "created_at": "2025-02-06T15:57:38Z",
    "closed_at": "2025-02-06T17:17:28Z",
    "labels": [],
    "url": "https://github.com/VitalAudio/visage/pull/14",
    "body": "allowing post-construction traversal of the widget hierarchy from a frame reference and so forth.\r\n\r\nCloses #11",
    "comments_url": "https://api.github.com/repos/VitalAudio/visage/issues/14/comments",
    "author": "baconpaul",
    "comments": [
      {
        "user": "mtytel",
        "created_at": "2025-02-06T17:17:34Z",
        "body": "👍 "
      }
    ]
  },
  {
    "number": 11,
    "title": "frame::children",
    "created_at": "2025-02-06T14:00:49Z",
    "closed_at": "2025-02-06T17:17:29Z",
    "labels": [],
    "url": "https://github.com/VitalAudio/visage/issues/11",
    "body": "Matt\n\nWhen starting to look at accessikit I needed to be able to traverse the frame hierarchy.\n\n```\n--- a/visage_ui/frame.h\n+++ b/visage_ui/frame.h\n@@ -185,6 +185,7 @@ namespace visage {\n         setPalette(parent->palette());\n     }\n     Frame* parent() const { return parent_; }\n+    const std::vector<Frame*>& children() const { return children_; }\n \n```\n\nso I added this method which let me do it.\n\nAny reason that's not in the library?  It seems just like an omission not a purposeful thing but wanted to ask before I sent in a PR",
    "comments_url": "https://api.github.com/repos/VitalAudio/visage/issues/11/comments",
    "author": "baconpaul",
    "comments": [
      {
        "user": "mtytel",
        "created_at": "2025-02-06T14:26:03Z",
        "body": "No reason, send a PR 👍 "
      }
    ]
  },
  {
    "number": 7,
    "title": "fix: Heap corruption when reducing reducing number of points in Line.",
    "created_at": "2025-02-04T16:50:26Z",
    "closed_at": "2025-02-04T17:41:28Z",
    "labels": [],
    "url": "https://github.com/VitalAudio/visage/pull/7",
    "body": "memcpy was always copying num_points elements even if the new size was smaller than num_points.\r\n\r\nAny thoughts on just using std::vector in here and resizing?",
    "comments_url": "https://api.github.com/repos/VitalAudio/visage/issues/7/comments",
    "author": "3-Sigma-Chris",
    "comments": [
      {
        "user": "mtytel",
        "created_at": "2025-02-04T17:41:23Z",
        "body": "Ah yeah, good catch. \r\nstd::vector is probable better here I'll update that"
      },
      {
        "user": "mtytel",
        "created_at": "2025-02-04T18:06:24Z",
        "body": "oof that was some ugly code 😅 \r\njust moved over to std::vector and it's much cleaner. not sure why it was arrays in the first place"
      }
    ]
  },
  {
    "number": 6,
    "title": "fix: Fixed guaranteed nullptr dereference in handleFocusLost.",
    "created_at": "2025-02-04T02:16:37Z",
    "closed_at": "2025-02-04T15:08:43Z",
    "labels": [],
    "url": "https://github.com/VitalAudio/visage/pull/6",
    "body": "I noticed putting a break point in handleMouseDown and then clicking would lose focus immediately due to the IDE grabbing it and causing a guaranteed crash here.",
    "comments_url": "https://api.github.com/repos/VitalAudio/visage/issues/6/comments",
    "author": "3-Sigma-Chris",
    "comments": [
      {
        "user": "mtytel",
        "created_at": "2025-02-04T02:53:55Z",
        "body": "Ah thanks for the fix. I think I was trying to be careful by setting mouse_down_frame_ to nullptr before the processMouseUp in case it triggered some more events but I think it's fine here."
      },
      {
        "user": "3-Sigma-Chris",
        "created_at": "2025-02-04T03:42:36Z",
        "body": "> Ah thanks for the fix. I think I was trying to be careful by setting mouse_down_frame_ to nullptr before the processMouseUp in case it triggered some more events but I think it's fine here.\r\n\r\nOh in that case I see what the temporary was for. Easy to add back if that's an issue 😄 "
      },
      {
        "user": "mtytel",
        "created_at": "2025-02-04T16:11:25Z",
        "body": "I think the change is fine as is. Originally had an issue where a mouse event triggered a focus lost event (e.g. opening a new window) so mouse up would get called twice. I don't think more events would come from focus lost though."
      }
    ]
  },
  {
    "number": 4,
    "title": "replace CMAKE_SOURCE_DIR with CMAKE_CURRENT_SOURCE_DIR",
    "created_at": "2025-02-03T21:46:14Z",
    "closed_at": "2025-02-03T23:45:27Z",
    "labels": [],
    "url": "https://github.com/VitalAudio/visage/pull/4",
    "body": "fixed examples for when using visage as a subproject\r\n\r\nI was using CPM and when I tried to use examples from CPM there was an error message about not finding shaderc.exe and this fixed it.",
    "comments_url": "https://api.github.com/repos/VitalAudio/visage/issues/4/comments",
    "author": "elanhickler",
    "comments": [
      {
        "user": "mtytel",
        "created_at": "2025-02-03T23:45:24Z",
        "body": "Looks good, thanks for the fix!"
      }
    ]
  },
  {
    "number": 3,
    "title": "Request: disable freetype dependencies by default",
    "created_at": "2025-01-30T13:38:10Z",
    "closed_at": "2025-02-01T15:42:19Z",
    "labels": [],
    "url": "https://github.com/VitalAudio/visage/issues/3",
    "body": "First I am really enjoying playing around with this library , thank you \n----------------------------------------------------------------------------\nI had a really bad problem that I spent alot of time trying to fix so it may help anyone, freetype has bunch of dependencies that I had through mingw, when I tried to cmake using VS solution generator it basically detected those dependencies automatically and added the mingw include path, which introduced alot of errors when building so I had to (after alot of trial and error)\n```\ncmake -G \"Visual Studio 17 2022\" -A x64 .. -D FT_DISABLE_ZLIB=TRUE -D FT_DISABLE_BZIP2=TRUE -D FT_DISABLE_PNG=TRUE -D FT_DISABLE_HARFBUZZ=TRUE -D FT_DISABLE_BROTLI=TRUE\n```\nto get it to compile finally\n",
    "comments_url": "https://api.github.com/repos/VitalAudio/visage/issues/3/comments",
    "author": "Zelmoghazy",
    "comments": [
      {
        "user": "mtytel",
        "created_at": "2025-02-01T15:42:19Z",
        "body": "Ah thanks for pointing that out. Definitely want to make visage easy to get started with\n\nI just had some similar issues creating some universal builds when brew didn't have both library versions installed. The only one I probably want to add back in at some point is harfbuzz but when I add it I'll just fetch the library and build it from source like freetype is.\n\nJust submitted a fix for this (might need to reset cmake cache)"
      }
    ]
  },
  {
    "number": 1,
    "title": "Memory leak in showcase example",
    "created_at": "2025-01-22T17:10:16Z",
    "closed_at": "2025-01-23T15:10:15Z",
    "labels": [],
    "url": "https://github.com/VitalAudio/visage/issues/1",
    "body": "There is a pretty serious memory leak when I build and run the ExampleShowcase example on my machine. The application quickly fills my 16 GB of memory and causes the whole system to become unresponsive after about 20 seconds.\n\nMy system specs:\n\nOS: EndeavourOS x86_64\nKernel: Linux 6.12.10-arch1-1\nDE: KDE Plasma 6.2.5\nWM: KWin (Wayland)\nCPU: CPU  AMD Ryzen 7 3700X\nGPU: AMD Radeon RX 570 Series\nMemory: 16 GB\nDisplays: Dual 2560x1440 @ 75Hz Monitors",
    "comments_url": "https://api.github.com/repos/VitalAudio/visage/issues/1/comments",
    "author": "BillyDM",
    "comments": [
      {
        "user": "mtytel",
        "created_at": "2025-01-22T22:24:33Z",
        "body": "Looks like a linux or OpenGL specific issue. Checking it out, thanks"
      },
      {
        "user": "rncar",
        "created_at": "2025-01-23T10:37:04Z",
        "body": "Seems like the leak is in all the examples with animations: ExampleBloom, ExampleLiveShaderEditing, etc.\n\nBy the way, amazing project.\n\nCPU: 12th Gen Intel(R) Core(TM) i5-12600\nGPU: Intel(R) UHD Graphics 770 (ADL-S GT1)\nOS: archlinux 6.12.10-arch1-1\nRAM: 64 GB"
      },
      {
        "user": "mtytel",
        "created_at": "2025-01-23T15:10:16Z",
        "body": "> By the way, amazing project.\n\nthanks!\n\nI fixed this by finishing up the switch over to Vulkan on Linux which I've been meaning to do anyway."
      },
      {
        "user": "rncar",
        "created_at": "2025-01-23T23:10:25Z",
        "body": "Working great now."
      }
    ]
  }
]