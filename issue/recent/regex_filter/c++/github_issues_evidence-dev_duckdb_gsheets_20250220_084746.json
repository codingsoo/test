[
  {
    "number": 56,
    "title": "Add \"range\" parameter to read_gsheet function",
    "created_at": "2025-02-04T16:42:20Z",
    "closed_at": "2025-02-06T21:13:16Z",
    "labels": [],
    "url": "https://github.com/evidence-dev/duckdb_gsheets/issues/56",
    "body": "Currently, the read_gsheet function allows users to read entire sheets or specify a sheet by name or ID. However, there is no option to specify a specific cell range within a sheet. Adding a \"range\" parameter would enable users to read data from a specific range of cells, enhancing the function's flexibility and usability.\n\nProposed Solution:\n\nIntroduce an optional \"range\" parameter to the read_gsheet function. This parameter would accept a string representing the desired cell range in A1 notation (e.g., \"A1:D10\"). If provided, the function would read data only from the specified range within the sheet.\n\nExample Usage:\n```sql\n-- Read data from cells A1 to D10 in 'Sheet1'\nSELECT * FROM read_gsheet('spreadsheet_id', sheet='Sheet1', range='A1:D10');\n```\n\nIdeally, if range was \"A2\" it would simply skip the first row and work exactly as it does today otherwise.",
    "comments_url": "https://api.github.com/repos/evidence-dev/duckdb_gsheets/issues/56/comments",
    "author": "mike-luabase",
    "comments": [
      {
        "user": "archiewood",
        "created_at": "2025-02-04T18:27:16Z",
        "body": "Seems like a good feature. \n\nIdeally we would support it for COPY TO as well, so you could copy to other ranges also, just specifying the start coordinate\n\nThis can be another feature / PR though"
      }
    ]
  },
  {
    "number": 54,
    "title": "fix(reader): default to first sheet by index if no ID found",
    "created_at": "2025-01-23T18:04:33Z",
    "closed_at": "2025-01-30T19:44:05Z",
    "labels": [],
    "url": "https://github.com/evidence-dev/duckdb_gsheets/pull/54",
    "body": "Fixes bug where we assumed that the first sheet in the spreadsheet would have ID 0 but this can be false like when the user rearranges the sheets or deletes the first sheet.\r\n\r\nThis is a breaking change for some users that were inadvertently getting the first sheet created even if it wasn't the first sheet by index.\r\n\r\nAdditionally, this adds a new util function, `get_sheet_name_from_index`, that works similarily to `get_sheet_name_from_id`. If we do decide to add new named input for user to select a sheet by index instead of by name then this will allow that feature work to be trivial. For now, it's just used to get the first sheet by index as a fallback if no ID is found in the user input _and_ no sheet name is provided.\r\n\r\nCloses #51 ",
    "comments_url": "https://api.github.com/repos/evidence-dev/duckdb_gsheets/issues/54/comments",
    "author": "mharrisb1",
    "comments": [
      {
        "user": "mike-luabase",
        "created_at": "2025-01-24T20:01:57Z",
        "body": "🙏 "
      },
      {
        "user": "archiewood",
        "created_at": "2025-01-30T19:44:12Z",
        "body": "LGTM - thanks!"
      }
    ]
  },
  {
    "number": 46,
    "title": "Private key filename standardize",
    "created_at": "2024-11-20T18:49:26Z",
    "closed_at": "2025-02-11T18:14:46Z",
    "labels": [],
    "url": "https://github.com/evidence-dev/duckdb_gsheets/pull/46",
    "body": null,
    "comments_url": "https://api.github.com/repos/evidence-dev/duckdb_gsheets/issues/46/comments",
    "author": "archiewood",
    "comments": [
      {
        "user": "Alex-Monahan",
        "created_at": "2025-02-11T14:46:01Z",
        "body": "I think we can close this! Thanks again for your help working through this one Archie!"
      }
    ]
  },
  {
    "number": 45,
    "title": "Only copy headers once (in global init)",
    "created_at": "2024-11-16T01:27:48Z",
    "closed_at": "2024-11-16T04:51:29Z",
    "labels": [],
    "url": "https://github.com/evidence-dev/duckdb_gsheets/pull/45",
    "body": "Fixes #40. Had to duplicate some code, but it was sliiiightly different than the Sink implementation.\r\n\r\nAlso adds 2 tests to make sure this stays working!\r\n",
    "comments_url": "https://api.github.com/repos/evidence-dev/duckdb_gsheets/issues/45/comments",
    "author": "Alex-Monahan",
    "comments": [
      {
        "user": "archiewood",
        "created_at": "2024-11-16T04:21:18Z",
        "body": "Looks awesome!"
      },
      {
        "user": "archiewood",
        "created_at": "2024-11-16T04:23:32Z",
        "body": "the test is somewhat insane but i'm here for it"
      },
      {
        "user": "Alex-Monahan",
        "created_at": "2024-11-16T04:28:52Z",
        "body": "It had to be over 2048, so i went 1 decimal place higher...haha"
      },
      {
        "user": "archiewood",
        "created_at": "2024-11-16T04:51:19Z",
        "body": "Yeah I'm not too worried. \n\nMaybe in the future we can read it back with a count(*) to check number of rows that we wrote"
      }
    ]
  },
  {
    "number": 28,
    "title": "Include headers with COPY TO",
    "created_at": "2024-10-25T03:59:30Z",
    "closed_at": "2024-10-25T21:56:02Z",
    "labels": [],
    "url": "https://github.com/evidence-dev/duckdb_gsheets/pull/28",
    "body": null,
    "comments_url": "https://api.github.com/repos/evidence-dev/duckdb_gsheets/issues/28/comments",
    "author": "archiewood",
    "comments": [
      {
        "user": "archiewood",
        "created_at": "2024-10-25T21:55:53Z",
        "body": "LGTM"
      },
      {
        "user": "Alex-Monahan",
        "created_at": "2024-10-26T14:12:44Z",
        "body": "Nicely done!!!!"
      }
    ]
  },
  {
    "number": 25,
    "title": "Delete sheet1 content before writing",
    "created_at": "2024-10-24T21:22:40Z",
    "closed_at": "2024-10-25T02:49:50Z",
    "labels": [],
    "url": "https://github.com/evidence-dev/duckdb_gsheets/pull/25",
    "body": "Up to you if you want to merge! This will change the append behavior to always clear out the entire sheet.\r\n\r\nEdit: This uses another API I found that uses the range style API, so it refers back to the same hardcoded sheet_name (\"Sheet1\"), so it should work without needing to find a sheetId!",
    "comments_url": "https://api.github.com/repos/evidence-dev/duckdb_gsheets/issues/25/comments",
    "author": "Alex-Monahan",
    "comments": [
      {
        "user": "Alex-Monahan",
        "created_at": "2024-10-24T21:23:15Z",
        "body": "Ah, shoot, forgot to run the test suite. I can do that beforehand next time! This might only be useful as a code snippet anyway (might not be mergeable yet anyway)"
      },
      {
        "user": "archiewood",
        "created_at": "2024-10-24T21:54:46Z",
        "body": "Ideal! - Good sleuthing - I can test locally"
      }
    ]
  },
  {
    "number": 22,
    "title": "Convert to append so >2048 rows can be written.",
    "created_at": "2024-10-24T18:03:09Z",
    "closed_at": "2024-10-24T19:37:10Z",
    "labels": [],
    "url": "https://github.com/evidence-dev/duckdb_gsheets/pull/22",
    "body": "This still has flaws. It only appends to existing data, so it will not clear things out ahead of time. However, it does allow more than 2048 rows to be written!",
    "comments_url": "https://api.github.com/repos/evidence-dev/duckdb_gsheets/issues/22/comments",
    "author": "Alex-Monahan",
    "comments": [
      {
        "user": "archiewood",
        "created_at": "2024-10-24T19:37:06Z",
        "body": "This is awesome, ty @Alex-Monahan "
      }
    ]
  }
]