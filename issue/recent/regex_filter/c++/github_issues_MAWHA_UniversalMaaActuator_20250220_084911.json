[
  {
    "number": 14,
    "title": "Vcpkg 构建的 Qt 在部署时会丢失间接依赖的动态库",
    "created_at": "2024-08-29T14:04:35Z",
    "closed_at": "2024-09-02T00:01:07Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/MAWHA/UniversalMaaActuator/issues/14",
    "body": "如插件 imageformats/qjpeg.dll 依赖于 jpeg62.dll，而 windeployqt 不会一并部署 jpeg62.dll，最终导致插件加载失败。",
    "comments_url": "https://api.github.com/repos/MAWHA/UniversalMaaActuator/issues/14/comments",
    "author": "zymelaii",
    "comments": [
      {
        "user": "SineStriker",
        "created_at": "2024-09-01T05:36:44Z",
        "body": "qwindowkit 里的 qmsetup 工具可以帮忙，只需要在现有工程中增加以下几步。\r\n\r\n1. CMake Configure 参数添加` -DQMSETUP_APPLOCAL_DEPS_PATHS_RELEASE=<dir>\\vcpkg_installed\\x64-windows\\bin`\r\n2. `whmx-assistant`下的 CMakeLists.txt 末尾添加\r\n```cmake\r\nfind_package(qmsetup REQUIRED)\r\nqm_import(Deploy)\r\nqm_deploy_directory(\"$<TARGET_FILE_DIR:whmx-assistant>\"\r\n    LIBRARY_DIR . PLUGIN_DIR . VERBOSE\r\n)    \r\n```\r\n3. build 完成后需要执行 install，install 时上述命令会自动收集所有`$<TARGET_FILE_DIR:whmx-assistant>`目录下所有 dll 与 exe 的依赖并一直递归解析，最后将依赖拷贝到`LIBRARY_DIR`里，`QMSETUP_APPLOCAL_DEPS_PATHS_RELEASE`是用来指定参考目录的，如果是 Debug 版本则指定`QMSETUP_APPLOCAL_DEPS_PATHS_DEBUG=<dir>\\vcpkg_installed\\x64-windows\\debug\\bin`。"
      }
    ]
  }
]