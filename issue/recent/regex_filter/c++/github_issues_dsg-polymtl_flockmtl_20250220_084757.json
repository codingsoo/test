[
  {
    "number": 122,
    "title": "Unable to add a model on Windows",
    "created_at": "2025-01-21T20:12:30Z",
    "closed_at": "2025-02-05T01:35:44Z",
    "labels": [],
    "url": "https://github.com/dsg-polymtl/flockmtl/issues/122",
    "body": "We would like for this project to be Windows-compatible, but models can't yet be added when using Windows. In my personal attempt, I ran the setup_vcpkg.sh script using WSL and everything completed without any errors.\n\nNow, running the CREATE MODEL query in the database's CLI interface returns the following error:\n`Catalog Error: Table with name FLOCKMTL_MODEL_USER_DEFINED_INTERNAL_TABLE does not exist!\nDid you mean \"temp.pg_catalog.pg_am\"?`\n\nWe believe that code from src/core/config/config.cpp is failing to be executed properly and the environment isn't set up properly. This is supported by the fact that running:\n`SELECT * FROM information_schema.schemata`\nin the database CLI returns no entries containing \"flockmtl_config\", only \"flockmtl_storage\". The code in config.cpp indicates that a \"flockmtl_config\" entry should be there. We should fix this issue as a first step towards Windows compatibility.",
    "comments_url": "https://api.github.com/repos/dsg-polymtl/flockmtl/issues/122/comments",
    "author": "arienandalibi",
    "comments": [
      {
        "user": "queryproc",
        "created_at": "2025-02-05T01:35:44Z",
        "body": "@arienandalibi I think this is resolved since we discussed things last time. We should share the notes from the local dev setup under this repo."
      }
    ]
  },
  {
    "number": 99,
    "title": "Add the global and local prompts/models support",
    "created_at": "2024-12-12T20:54:27Z",
    "closed_at": "2024-12-13T17:04:59Z",
    "labels": [],
    "url": "https://github.com/dsg-polymtl/flockmtl/pull/99",
    "body": "This pull request introduces support for managing global and local prompts/models. This implementation is based on the requested feature outlined in #96.\r\n\r\n The key features include:\r\n\r\n1. **Definition of Global and Local Prompts/Models**:\r\n   - **Global Prompts/Models**:\r\n     - Created using `CREATE GLOBAL PROMPT` or `CREATE GLOBAL MODEL`.\r\n     - Shared across different databases.\r\n   - **Local Prompts/Models**:\r\n     - Created using `CREATE LOCAL PROMPT`, `CREATE PROMPT`, or equivalent for models.\r\n     - Default to local if no type is specified.\r\n     - Limited to a single database.\r\n\r\n2. **State Transition Support**:\r\n   - Users can toggle a prompt/model's state between **global** and **local** using:\r\n     - `UPDATE PROMPT 'prompt_name' TO GLOBAL;`\r\n     - `UPDATE PROMPT 'prompt_name' TO LOCAL;`\r\n\r\n3. **Naming Constraints**:\r\n   - Prompt and model names must be **unique** across both global and local types, ensuring no conflicts.\r\n\r\n4. **Simplified Update and Delete Operations**:\r\n   - Operations such as `UPDATE` and `DELETE` do not require specifying the type of prompt/model (global or local). \r\n   - If the type is specified, the system will handle it appropriately.",
    "comments_url": "https://api.github.com/repos/dsg-polymtl/flockmtl/issues/99/comments",
    "author": "dorbanianas",
    "comments": [
      {
        "user": "aborruso",
        "created_at": "2024-12-14T19:34:38Z",
        "body": "Thank you very much "
      }
    ]
  },
  {
    "number": 97,
    "title": "Openai-Compatible Providers",
    "created_at": "2024-12-11T13:05:58Z",
    "closed_at": "2024-12-11T14:31:00Z",
    "labels": [],
    "url": "https://github.com/dsg-polymtl/flockmtl/pull/97",
    "body": "This PR addresses #93 makes Flockmtl support providers with an OpenAI-compatible API, so you can now create your secret by providing `base_url`.\r\n\r\n```\r\nCREATE SECRET (\r\n     TYPE OPENAI,\r\n     API_KEY 'your-api-key'\r\n);\r\n```\r\nor\r\n```\r\nCREATE SECRET (\r\n     TYPE OPENAI,\r\n     BASE_URL 'your-provider-url',\r\n     API_KEY 'your-api-key'\r\n);\r\n```",
    "comments_url": "https://api.github.com/repos/dsg-polymtl/flockmtl/issues/97/comments",
    "author": "dorbanianas",
    "comments": [
      {
        "user": "aborruso",
        "created_at": "2024-12-15T22:36:01Z",
        "body": "thank you very much"
      }
    ]
  },
  {
    "number": 68,
    "title": "Prompt Manager Refactoring",
    "created_at": "2024-11-21T20:33:39Z",
    "closed_at": "2024-11-21T22:30:13Z",
    "labels": [],
    "url": "https://github.com/dsg-polymtl/flockmtl/pull/68",
    "body": "**Refactor and Implement PromptManager for Prompt Rendering**\r\n\r\nThis PR introduces the `PromptManager` class, a central entity responsible for managing and rendering prompts within the FlockMTL project. The goal is to turn the prompt generation into a single component. \r\n\r\n**Changes:**\r\n- **`PromptManager` Class**: Centralized management of prompt generation, handling different prompt sections (user prompt, tuples, instructions, etc.).\r\n- **Template-Based Rendering**: The class provides functions to render prompts based on various input types, including `AggregateFunctionType` and `ScalarFunctionType`.\r\n- **Dynamic Section Replacement**: New utility functions allow for flexible section replacements within prompt templates.\r\n- **Code Refactoring**: Simplified and generalized prompt rendering logic, reducing code duplication and improving readability.",
    "comments_url": "https://api.github.com/repos/dsg-polymtl/flockmtl/issues/68/comments",
    "author": "dorbanianas",
    "comments": [
      {
        "user": "queryproc",
        "created_at": "2024-11-22T04:42:31Z",
        "body": "Let's move templated classes to the header files?"
      }
    ]
  },
  {
    "number": 60,
    "title": "fix the includes order and change the GH trigger",
    "created_at": "2024-11-10T10:18:23Z",
    "closed_at": "2024-11-15T21:49:12Z",
    "labels": [],
    "url": "https://github.com/dsg-polymtl/flockmtl/pull/60",
    "body": null,
    "comments_url": "https://api.github.com/repos/dsg-polymtl/flockmtl/issues/60/comments",
    "author": "dorbanianas",
    "comments": [
      {
        "user": "queryproc",
        "created_at": "2024-11-15T21:49:13Z",
        "body": "I believe another PR has resolved this."
      }
    ]
  },
  {
    "number": 46,
    "title": "Include fmt library for enhanced string formatting",
    "created_at": "2024-10-29T19:39:37Z",
    "closed_at": "2024-12-14T19:12:49Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/dsg-polymtl/flockmtl/issues/46",
    "body": "Include the new fmt library to have access to easier string modification. This helps in moving away from hand crafting queries, which can lead to subtle bugs.",
    "comments_url": "https://api.github.com/repos/dsg-polymtl/flockmtl/issues/46/comments",
    "author": "SunnyYasser",
    "comments": [
      {
        "user": "queryproc",
        "created_at": "2024-12-14T19:12:49Z",
        "body": "This has been addressed already."
      }
    ]
  },
  {
    "number": 37,
    "title": "Readme updates",
    "created_at": "2024-10-21T17:33:20Z",
    "closed_at": "2024-10-21T18:13:25Z",
    "labels": [],
    "url": "https://github.com/dsg-polymtl/flockmtl/pull/37",
    "body": null,
    "comments_url": "https://api.github.com/repos/dsg-polymtl/flockmtl/issues/37/comments",
    "author": "queryproc",
    "comments": [
      {
        "user": "dorbanianas",
        "created_at": "2024-10-21T17:38:29Z",
        "body": "LGTM!!"
      }
    ]
  },
  {
    "number": 32,
    "title": "First iteration demo jupyter notebook",
    "created_at": "2024-10-21T03:13:52Z",
    "closed_at": "2024-10-31T22:25:33Z",
    "labels": [],
    "url": "https://github.com/dsg-polymtl/flockmtl/pull/32",
    "body": "First iteration of the ipython noteebook. Still using earlier functions since @dorbanianas build is running and artefact is not available yet.",
    "comments_url": "https://api.github.com/repos/dsg-polymtl/flockmtl/issues/32/comments",
    "author": "SunnyYasser",
    "comments": [
      {
        "user": "queryproc",
        "created_at": "2024-10-31T22:25:34Z",
        "body": "This PR is important, let's make sure we get back to it once the current planned work is done."
      }
    ]
  },
  {
    "number": 21,
    "title": "Enhance Scalar Functions to Support Aggregation in SQL Queries",
    "created_at": "2024-10-15T13:39:52Z",
    "closed_at": "2024-10-18T23:09:20Z",
    "labels": [],
    "url": "https://github.com/dsg-polymtl/flockmtl/pull/21",
    "body": "This pull request modifies the behavior of scalar functions (such as `lf_map`, `lf_embedding`, etc.) to allow them to be used as aggregate functions in SQL queries. Previously, scalar functions could only be applied to individual rows, but this update enables their usage in `GROUP BY` queries to generate aggregated results.\r\n\r\n**Key Changes:**\r\n- Scalar functions like `lf_map` are now capable of being used in SQL aggregation contexts.\r\n- This update enables the following type of SQL query to work:\r\n  ```sql\r\n  SELECT email, lf_map('validate_email', 'default', {email: email}) AS results \r\n  FROM students \r\n  GROUP BY email;\r\n  ```\r\n- The result for each group is an aggregated output of the scalar function, returning a structured result such as JSON.\r\n\r\n**Example:**\r\nFor the query:\r\n```sql\r\nSELECT email, lf_map('validate_email', 'default', {email: email}) AS results\r\nFROM students \r\nGROUP BY email;\r\n```\r\nThe resulting output will be similar to:\r\n```\r\n┌─────────────────────────┬─────────────────────────────────────────────────────┐\r\n│          email          │                       results                       │\r\n│         varchar         │                       varchar                       │\r\n├─────────────────────────┼─────────────────────────────────────────────────────┤\r\n│ john.doe@example.com    │ {\"email\":\"john.doe@example.com\",\"is_valid\":true}    │\r\n│ emily.jones@example.com │ {\"email\":\"emily.jones@example.com\",\"is_valid\":true} │\r\n│ jane.smithexample.com   │ {\"email\":\"jane.smithexample.com\",\"is_valid\":false}  │\r\n│ jane.smith@example.com  │ {\"email\":\"jane.smith@example.com\",\"is_valid\":true}  │\r\n└─────────────────────────┴─────────────────────────────────────────────────────┘\r\n```",
    "comments_url": "https://api.github.com/repos/dsg-polymtl/flockmtl/issues/21/comments",
    "author": "dorbanianas",
    "comments": [
      {
        "user": "queryproc",
        "created_at": "2024-10-18T23:09:20Z",
        "body": "Based on our discussion, this PR is packing too much: 1) moves us to CPP tiktoken; 2) aims to introduce lf_reduce but needs a few iterations as it requires the aggregate functions with a call to combine. Let's close it and separate these two efforts."
      }
    ]
  },
  {
    "number": 12,
    "title": "Consolidate the SQL statements into a single, reusable format to eliminate the need for individual SQL statements for each query",
    "created_at": "2024-09-12T18:06:36Z",
    "closed_at": "2024-10-21T00:45:12Z",
    "labels": [],
    "url": "https://github.com/dsg-polymtl/flockmtl/issues/12",
    "body": null,
    "comments_url": "https://api.github.com/repos/dsg-polymtl/flockmtl/issues/12/comments",
    "author": "dorbanianas",
    "comments": [
      {
        "user": "queryproc",
        "created_at": "2024-10-21T00:45:12Z",
        "body": "No longer relevant. We will revisit refactoring opportunities down the road."
      }
    ]
  }
]