[
  {
    "number": 43,
    "title": "Add basic connection logging to client / server",
    "created_at": "2024-10-27T17:57:41Z",
    "closed_at": "2024-10-28T15:27:20Z",
    "labels": [],
    "url": "https://github.com/kevmo314/scuda/pull/43",
    "body": "This PR adds a build flag -DVERBOSE=1 to log connection infos.\r\n\r\nInfos logged:\r\n\r\nServer:\r\n* When a client connects\r\n\r\nClient:\r\n* When getaddrinfo fails\r\n* When connects fails\r\n* RPC__START fails\r\n\r\n",
    "comments_url": "https://api.github.com/repos/kevmo314/scuda/issues/43/comments",
    "author": "K0IN",
    "comments": [
      {
        "user": "kevmo314",
        "created_at": "2024-10-28T15:27:07Z",
        "body": "Thank you! This looks like a great direction to take our logging. We'll also build off this pattern further."
      }
    ]
  },
  {
    "number": 42,
    "title": "Question About C++ Version Used in SCUDA",
    "created_at": "2024-10-27T03:58:51Z",
    "closed_at": "2024-10-28T16:16:09Z",
    "labels": [],
    "url": "https://github.com/kevmo314/scuda/issues/42",
    "body": "Hello,\r\n\r\nI recently cloned the SCUDA  and am trying to build and run the project. However, I'm unsure which version of C++ the project is compatible with.\r\n\r\nI attempted to compile using `C++11` with the following command:\r\n\r\n```bash\r\nnvcc -std=c++11 -o $server_out_path $server_path -lnvidia-ml -lcuda\r\n```\r\n\r\nI encountered this error:\r\n\r\n```css\r\nsaeed@saeed:~/github/scuda$ ./local.sh server\r\nbuilding server...\r\n/usr/include/c++/11/bits/std_function.h:435:145: error: parameter packs not expanded with '...':\r\n  435 |         function(_Functor&& __f)\r\n      |                                                                                                                                                 ^ \r\n/usr/include/c++/11/bits/std_function.h:435:145: note:         '_ArgTypes'\r\n/usr/include/c++/11/bits/std_function.h:530:146: error: parameter packs not expanded with '...':\r\n  530 |         operator=(_Functor&& __f)\r\n      |                                                                                                                                                  ^ \r\n/usr/include/c++/11/bits/std_function.h:530:146: note:         '_ArgTypes'\r\n\r\n```\r\nI also tried compiling with `C++14` and `C++17`, but I ran into other issues as well.\r\n\r\nCould you please clarify which C++ standard is being used for this project? Any guidance or tips would be greatly appreciated!\r\n\r\n---\r\nFor your reference, Iâ€™m using the following environment:\r\n\r\n**CUDA Version:** 11.5  // I guess that you are most likely using CUDA 12 ðŸ¤”\r\n**NVCC Version:**\r\n```bash\r\nnvcc --version\r\nnvcc: NVIDIA (R) Cuda compiler driver\r\nCopyright (c) 2005-2021 NVIDIA Corporation\r\nBuilt on Thu_Nov_18_09:45:30_PST_2021\r\nCuda compilation tools, release 11.5, V11.5.119\r\nBuild cuda_11.5.r11.5/compiler.30672275_0\r\n```\r\n\r\n**Operating System:** Ubuntu 22.04\r\n**g++ Version**: \r\n\r\n```bash\r\ng++ --version\r\ng++ (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\r\n```\r\n\r\n---\r\nThank you for your help!\r\n\r\nBest regards,\r\nSaeed",
    "comments_url": "https://api.github.com/repos/kevmo314/scuda/issues/42/comments",
    "author": "hasanisaeed",
    "comments": [
      {
        "user": "kevmo314",
        "created_at": "2024-10-28T15:34:51Z",
        "body": "I believe we are compiling with C++23 as the `g++` version on our dev server is 13.2.0. You are correct that we are currently basing off of CUDA 12.\r\n\r\nUnfortunately we haven't had much time to dedicate towards backwards compatibility but we'd welcome any patches to improve compatibility -- generally we are not using any newer language features and write in a more C way, the use of C++ is pretty minimal, so hopefully the changes are not too complex.\r\n\r\nWe haven't found a good solution for compiling against different CUDA versions though. In theory I believe the client is backwards-compatible but the server may not be."
      },
      {
        "user": "hasanisaeed",
        "created_at": "2024-10-28T16:15:47Z",
        "body": "Thank you for the clarification! I appreciate the insights on the C++ version and CUDA version compatibility. I'll try updating my g++ to a newer version that supports C++23 and see if that resolves the issue on my end.\r\n\r\nThanks again for your help!\r\n"
      }
    ]
  },
  {
    "number": 39,
    "title": "chore: add license",
    "created_at": "2024-10-23T15:01:10Z",
    "closed_at": "2024-10-23T15:24:33Z",
    "labels": [],
    "url": "https://github.com/kevmo314/scuda/pull/39",
    "body": "Closes #37",
    "comments_url": "https://api.github.com/repos/kevmo314/scuda/issues/39/comments",
    "author": "kevmo314",
    "comments": [
      {
        "user": "K0IN",
        "created_at": "2024-10-23T15:13:00Z",
        "body": "Hey, thanks for the fast fix :)"
      }
    ]
  },
  {
    "number": 37,
    "title": "Add a license",
    "created_at": "2024-10-23T10:28:56Z",
    "closed_at": "2024-10-23T15:24:33Z",
    "labels": [],
    "url": "https://github.com/kevmo314/scuda/issues/37",
    "body": "Hei im interested to fork/add code but I want to make sure what license this project has, and what I'm able  to do.",
    "comments_url": "https://api.github.com/repos/kevmo314/scuda/issues/37/comments",
    "author": "K0IN",
    "comments": [
      {
        "user": "kevmo314",
        "created_at": "2024-10-23T15:25:38Z",
        "body": "I've added a license file and looking forward to any contributions or questions, thanks for checking us out :)"
      }
    ]
  }
]