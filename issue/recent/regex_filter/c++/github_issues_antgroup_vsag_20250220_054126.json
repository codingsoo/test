[
  {
    "number": 322,
    "title": "Optimize the pre-filter search performance",
    "created_at": "2025-01-13T12:10:15Z",
    "closed_at": "2025-02-11T11:50:21Z",
    "labels": [
      "kind/feature",
      "version/0.14"
    ],
    "url": "https://github.com/antgroup/vsag/issues/322",
    "body": "- algorithm \r\n  - high filter out rate (90%+)\r\n  - low rate (10 ~ 90%)\r\n- strategy",
    "comments_url": "https://api.github.com/repos/antgroup/vsag/issues/322/comments",
    "author": "wxyucs",
    "comments": [
      {
        "user": "inabao",
        "created_at": "2025-02-11T11:50:21Z",
        "body": "done"
      }
    ]
  },
  {
    "number": 274,
    "title": "support concurrent insert/search in HNSW ",
    "created_at": "2024-12-27T07:54:50Z",
    "closed_at": "2025-01-03T09:22:26Z",
    "labels": [
      "kind/feature",
      "version/0.13"
    ],
    "url": "https://github.com/antgroup/vsag/issues/274",
    "body": null,
    "comments_url": "https://api.github.com/repos/antgroup/vsag/issues/274/comments",
    "author": "wxyucs",
    "comments": [
      {
        "user": "inabao",
        "created_at": "2025-01-03T09:21:52Z",
        "body": "***Implementation***\r\nI hope to ensure the concurrency safety of HNSW through more fine-grained locking.\r\n\r\n***Action***\r\nI will implement the feature by #178 "
      },
      {
        "user": "inabao",
        "created_at": "2025-01-03T09:22:26Z",
        "body": "The related PR has been merged"
      }
    ]
  },
  {
    "number": 272,
    "title": "introduce optimized nndescent to build graph index",
    "created_at": "2024-12-27T07:39:53Z",
    "closed_at": "2025-01-17T09:50:42Z",
    "labels": [
      "kind/feature",
      "version/0.13"
    ],
    "url": "https://github.com/antgroup/vsag/issues/272",
    "body": null,
    "comments_url": "https://api.github.com/repos/antgroup/vsag/issues/272/comments",
    "author": "wxyucs",
    "comments": [
      {
        "user": "inabao",
        "created_at": "2024-12-31T08:43:17Z",
        "body": "***Algorithm Design and Related Issues***\r\n\r\nBuilding a proximal graph for search involves addressing two key issues: finding approximate K-nearest neighbors (KNN) and ensuring graph pruning while maintaining connectivity. For the former, NSG and NNDescent primarily obtain an approximate KNN graph through iterative methods, while HNSW and Vamana derive an optimal KNN graph mainly through search methods. For the latter, HNSW and Vamana ensure the reachability of each point by inserting reverse edges during the search process, whereas NSG ensures reachability through searches by constructing a tree and connecting each search node to the tree.\r\n\r\nDespite this, the aforementioned methods still have some issues:\r\n\r\nThere are no constraints on the in-degree of nodes, which can result in some points having an in-degree of zero.\r\nThe edge pruning during the addition of reverse edges involves redundant calculations.\r\nConcurrency performance is suboptimal.\r\nTherefore, we aim to propose a new graph construction algorithm called Optimized NNDescent (ODescent) to explicitly address the above issues.\r\n\r\n***Algorithm Implementation***\r\n\r\nThe algorithm mainly consists of three parts:\r\n\r\nFinding the nearest neighbors through iterative methods.\r\nThe method for finding nearest neighbors relies on NNDescent, which iteratively refines the results.\r\nIn each iteration, checking the in-degree to ensure that no point has an in-degree below a specified threshold.\r\nIf a point A's in-degree falls below the threshold, point A replaces the furthest neighbor of its nearest neighbor B.\r\nPruning and adding reverse edges.\r\nEdges are pruned based on the given parameter Î±, and reverse edges are connected to further ensure connectivity.\r\n***Experimental Results***\r\nGIST\r\n```shell\r\n#./build-release/tools/test_performance     '/tmp/dataset/gist-1m-960-euclidean.hdf5'     'build' 'diskann' '{\"dim\": 960, \"dtype\": \"float32\", \"metric_type\": \"l2\", \"hnsw\": {\"max_degree\": 12, \"ef_construction\": 100}, \"diskann\": {\"max_degree\": 24, \"ef_construction\": 100, \"graph_type\":\"vamana\", \"alpha\":1.2, \"turn\": 20, \"pq_dims\": 64, \"pq_sample_rate\": 0.1}}' '{\"hnsw\":{\"ef_search\":100},\"diskann\":{\"ef_search\":100,\"beam_search\":4,\"io_limit\":200,\"use_reorder\":true}}'\r\n[2024-12-31 13:18:02.090] [info] diskann build full (graph) cost 2141.208s\r\n[2024-12-31 13:20:05.831] [info] diskann build full (pq) cost 123.741s\r\n[2024-12-31 13:20:11.570] [info] diskann build full (disk layout) cost 5.740s\r\n[2024-12-31 13:20:19.164] [info] diskann serialize cost 2.466s\r\n{\r\n    \"build_parameters\": \"{\\\"dim\\\": 960, \\\"dtype\\\": \\\"float32\\\", \\\"metric_type\\\": \\\"l2\\\", \\\"hnsw\\\": {\\\"max_degree\\\": 12, \\\"ef_construction\\\": 100}, \\\"diskann\\\": {\\\"max_degree\\\": 24, \\\"ef_construction\\\": 100, \\\"graph_type\\\":\\\"vamana\\\", \\\"alpha\\\":1.2, \\\"turn\\\": 20, \\\"pq_dims\\\": 64, \\\"pq_sample_rate\\\": 0.1}}\",\r\n    \"build_time_in_second\": 2275.817019665,\r\n    \"dataset\": \"/tmp/dataset/gist-1m-960-euclidean.hdf5\",\r\n    \"index_name\": \"diskann\",\r\n    \"num_base\": 1000000,\r\n    \"tps\": 439.40263710093876\r\n}\r\n\r\n\r\n\r\n\r\n\r\n#./build-release/tools/test_performance     '/tmp/dataset/gist-1m-960-euclidean.hdf5'     'build' 'diskann' '{\"dim\": 960, \"dtype\": \"float32\", \"metric_type\": \"l2\", \"hnsw\": {\"max_degree\": 12, \"ef_construction\": 100}, \"diskann\": {\"max_degree\": 24, \"ef_construction\": 100, \"graph_type\":\"odescent\", \"alpha\":1.2, \"turn\": 20, \"pq_dims\": 64, \"pq_sample_rate\": 0.1}}' '{\"hnsw\":{\"ef_search\":100},\"diskann\":{\"ef_search\":100,\"beam_search\":4,\"io_limit\":200,\"use_reorder\":true}}'\r\n[2024-12-31 14:45:13.505] [info] odescent build full (graph) cost 2170.382s\r\n[2024-12-31 14:46:57.184] [info] diskann build full (pq) cost 103.679s\r\n[2024-12-31 14:47:00.827] [info] diskann build full (disk layout) cost 3.643s\r\n[2024-12-31 14:47:04.318] [info] diskann serialize cost 921.343ms\r\n{\r\n    \"build_parameters\": \"{\\\"dim\\\": 960, \\\"dtype\\\": \\\"float32\\\", \\\"metric_type\\\": \\\"l2\\\", \\\"hnsw\\\": {\\\"max_degree\\\": 12, \\\"ef_construction\\\": 100}, \\\"diskann\\\": {\\\"max_degree\\\": 24, \\\"ef_construction\\\": 100, \\\"graph_type\\\":\\\"odescent\\\", \\\"alpha\\\":1.2, \\\"turn\\\": 20, \\\"pq_dims\\\": 64, \\\"pq_sample_rate\\\": 0.1}}\",\r\n    \"build_time_in_second\": 2280.273783652,\r\n    \"dataset\": \"/tmp/dataset/gist-1m-960-euclidean.hdf5\",\r\n    \"index_name\": \"diskann\",\r\n    \"num_base\": 1000000,\r\n    \"tps\": 438.543830644072\r\n}\r\n\r\n#./build-release/tools/test_performance     '/tmp/dataset/gist-1m-960-euclidean.hdf5'     'search' 'diskann' '{\"dim\": 960, \"dtype\": \"float32\", \"metric_type\": \"l2\", \"hnsw\": {\"max_degree\": 12, \"ef_construction\": 100}, \"diskann\": {\"max_degree\": 24, \"ef_construction\": 100, \"graph_type\":\"vamana\", \"alpha\":1.2, \"turn\": 20, \"pq_dims\": 64, \"pq_sample_rate\": 0.1}}' '{\"hnsw\":{\"ef_search\":100},\"diskann\":{\"ef_search\":100,\"beam_search\":4,\"io_limit\":200,\"use_reorder\":true}}'\r\n[2024-12-31 14:48:47.351] [info] diskann deserialize cost 174.976ms\r\n{\r\n    \"correct\": 903,\r\n    \"dataset\": \"/tmp/dataset/gist-1m-960-euclidean.hdf5\",\r\n    \"estimate_used_memory\": 74952960,\r\n    \"index_name\": \"diskann\",\r\n    \"memory\": 125366272,\r\n    \"num_query\": 1000,\r\n    \"qps\": 722.1118474664544,\r\n    \"recall\": 0.902999997138977,\r\n    \"search_parameters\": \"{\\\"hnsw\\\":{\\\"ef_search\\\":100},\\\"diskann\\\":{\\\"ef_search\\\":100,\\\"beam_search\\\":4,\\\"io_limit\\\":200,\\\"use_reorder\\\":true}}\",\r\n    \"search_time_in_second\": 1.384827023,\r\n    \"top_k\": 1\r\n}\r\n```\r\nSIFT\r\n```shell\r\n#./build-release/tools/test_performance     '/tmp/dataset/sift-1m-128-euclidean.hdf5'     'build' 'diskann' '{\"dim\": 128, \"dtype\": \"float32\", \"metric_type\": \"l2\", \"hnsw\": {\"max_degree\": 12, \"ef_construction\": 100}, \"diskann\": {\"max_degree\": 24, \"ef_construction\": 200, \"graph_type\":\"vamana\", \"alpha\":1.2, \"turn\": 20, \"pq_dims\": 64, \"pq_sample_rate\": 0.1}}' '{\"hnsw\":{\"ef_search\":100},\"diskann\":{\"ef_search\":100,\"beam_search\":4,\"io_limit\":200,\"use_reorder\":true}}'\r\n[2024-12-31 15:22:07.361] [info] diskann build full (graph) cost 821.301s\r\n[2024-12-31 15:24:25.050] [info] diskann build full (pq) cost 137.689s\r\n[2024-12-31 15:24:26.217] [info] diskann build full (disk layout) cost 1.167s\r\n[2024-12-31 15:24:27.774] [info] diskann serialize cost 444.411ms\r\n{\r\n    \"build_parameters\": \"{\\\"dim\\\": 128, \\\"dtype\\\": \\\"float32\\\", \\\"metric_type\\\": \\\"l2\\\", \\\"hnsw\\\": {\\\"max_degree\\\": 12, \\\"ef_construction\\\": 100}, \\\"diskann\\\": {\\\"max_degree\\\": 24, \\\"ef_construction\\\": 200, \\\"graph_type\\\":\\\"vamana\\\", \\\"alpha\\\":1.2, \\\"turn\\\": 20, \\\"pq_dims\\\": 64, \\\"pq_sample_rate\\\": 0.1}}\",\r\n    \"build_time_in_second\": 961.269516893,\r\n    \"dataset\": \"/tmp/dataset/sift-1m-128-euclidean.hdf5\",\r\n    \"index_name\": \"diskann\",\r\n    \"num_base\": 1000000,\r\n    \"tps\": 1040.290971914083\r\n}\r\n\r\n\r\n#./build-release/tools/test_performance     '/tmp/dataset/sift-1m-128-euclidean.hdf5'     'search' 'diskann' '{\"dim\": 128, \"dtype\": \"float32\", \"metric_type\": \"l2\", \"hnsw\": {\"max_degree\": 12, \"ef_construction\": 100}, \"diskann\": {\"max_degree\": 24, \"ef_construction\": 200, \"graph_type\":\"vamana\", \"alpha\":1.2, \"turn\": 20, \"pq_dims\": 64, \"pq_sample_rate\": 0.1}}' '{\"hnsw\":{\"ef_search\":100},\"diskann\":{\"ef_search\":100,\"beam_search\":4,\"io_limit\":200,\"use_reorder\":true}}'\r\n[2024-12-31 15:25:05.247] [info] diskann deserialize cost 173.148ms\r\n{\r\n    \"correct\": 9851,\r\n    \"dataset\": \"/tmp/dataset/sift-1m-128-euclidean.hdf5\",\r\n    \"estimate_used_memory\": 72393728,\r\n    \"index_name\": \"diskann\",\r\n    \"memory\": 117366784,\r\n    \"num_query\": 10000,\r\n    \"qps\": 897.6470347211786,\r\n    \"recall\": 0.9850999712944031,\r\n    \"search_parameters\": \"{\\\"hnsw\\\":{\\\"ef_search\\\":100},\\\"diskann\\\":{\\\"ef_search\\\":100,\\\"beam_search\\\":4,\\\"io_limit\\\":200,\\\"use_reorder\\\":true}}\",\r\n    \"search_time_in_second\": 11.14023621,\r\n    \"top_k\": 1\r\n}\r\n```"
      }
    ]
  },
  {
    "number": 258,
    "title": "refresh build cache for aarch",
    "created_at": "2024-12-26T06:41:02Z",
    "closed_at": "2024-12-26T07:57:27Z",
    "labels": [
      "kind/bug",
      "size/XS",
      "version/0.12"
    ],
    "url": "https://github.com/antgroup/vsag/pull/258",
    "body": "fixed: #259 ",
    "comments_url": "https://api.github.com/repos/antgroup/vsag/issues/258/comments",
    "author": "LHT129",
    "comments": [
      {
        "user": "wxyucs",
        "created_at": "2024-12-26T06:44:45Z",
        "body": "@LHT129 please add an issue and link to it in this pull request"
      }
    ]
  },
  {
    "number": 241,
    "title": "fix bug on generate vector ",
    "created_at": "2024-12-23T04:09:55Z",
    "closed_at": "2024-12-24T06:10:37Z",
    "labels": [
      "kind/bug",
      "size/S",
      "version/0.12"
    ],
    "url": "https://github.com/antgroup/vsag/pull/241",
    "body": "* fix bug on generate vector ",
    "comments_url": "https://api.github.com/repos/antgroup/vsag/issues/241/comments",
    "author": "ShawnShawnYou",
    "comments": [
      {
        "user": "wxyucs",
        "created_at": "2024-12-24T03:45:46Z",
        "body": "@ShawnShawnYou please create a related issue"
      }
    ]
  },
  {
    "number": 202,
    "title": "hotfix for slow deserialization",
    "created_at": "2024-12-10T16:18:42Z",
    "closed_at": "2024-12-11T09:20:25Z",
    "labels": [
      "size/L"
    ],
    "url": "https://github.com/antgroup/vsag/pull/202",
    "body": "fixed: #205 ",
    "comments_url": "https://api.github.com/repos/antgroup/vsag/issues/202/comments",
    "author": "inabao",
    "comments": [
      {
        "user": "wxyucs",
        "created_at": "2024-12-11T02:32:56Z",
        "body": "@inabao Please create an issue and link to it."
      }
    ]
  },
  {
    "number": 175,
    "title": "fix illegal instruction on platform which has avx only",
    "created_at": "2024-12-02T08:58:40Z",
    "closed_at": "2024-12-02T15:18:18Z",
    "labels": [
      "kind/bug",
      "size/XS"
    ],
    "url": "https://github.com/antgroup/vsag/pull/175",
    "body": "related: #176 ",
    "comments_url": "https://api.github.com/repos/antgroup/vsag/issues/175/comments",
    "author": "LHT129",
    "comments": [
      {
        "user": "wxyucs",
        "created_at": "2024-12-02T10:01:22Z",
        "body": "@LHT129 I think we should release a patch version after this pull request is merged into the 0.11 branch"
      }
    ]
  },
  {
    "number": 156,
    "title": "reduce the number of I/O operations for HNSW during deserialization",
    "created_at": "2024-11-21T08:24:38Z",
    "closed_at": "2024-11-27T12:50:27Z",
    "labels": [
      "kind/improvement"
    ],
    "url": "https://github.com/antgroup/vsag/pull/156",
    "body": null,
    "comments_url": "https://api.github.com/repos/antgroup/vsag/issues/156/comments",
    "author": "inabao",
    "comments": [
      {
        "user": "LHT129",
        "created_at": "2024-11-22T02:42:14Z",
        "body": "I think we don't need to modify so much, just add a fixed size readbuffer allocated by allocator, if read out of the buffer, call the read func to refresh the buffer, otherwise copy data from the buf is ok"
      }
    ]
  },
  {
    "number": 154,
    "title": "Introduce index_feature for all index",
    "created_at": "2024-11-21T06:13:56Z",
    "closed_at": "2025-01-13T11:33:32Z",
    "labels": [
      "kind/documentation",
      "kind/feature",
      "version/0.13"
    ],
    "url": "https://github.com/antgroup/vsag/issues/154",
    "body": "The characteristics of each index are often different. Users often want to know the specific characteristics of the index, such as whether it supports adding data from empty index, whether it supports deletion, whether it supports concurrent search and insertion, etc.\r\n\r\nIn fact, the internal functions of each index should also be implemented according to the characteristic granularity, which is also convenient for testing and verification, and is more friendly to developers.\r\n\r\nTherefore, we provide an enum of all characteristics in the external interface, and at the same time provide interface methods for printing the characteristics of the current index for a specific index\r\n\r\n```C++\r\nenum class IndexFeature {\r\n     SUPPORT_ADD_WITHOUT_TRAIN = 1,\r\n     SUPPOET_DELETE_BY_ID = 2,\r\n     ...\r\n}\r\n```\r\n```c++\r\nstd::vector<Feature> Index::GetFeatures();\r\nbool Index::CheckFeature(IndexFeature feature);\r\n```\r\n\r\n\r\nthe related pull requests:\r\n#199\r\n#210\r\n#284\r\n\r\ntodo:\r\n- add feature object \r\n- introduce it to all kinds of index\r\n- use the feature to check and reconstruct some test\r\n\r\n",
    "comments_url": "https://api.github.com/repos/antgroup/vsag/issues/154/comments",
    "author": "LHT129",
    "comments": [
      {
        "user": "wxyucs",
        "created_at": "2024-11-21T17:20:52Z",
        "body": "sounds good, will it also available in the pyvsag? "
      },
      {
        "user": "wxyucs",
        "created_at": "2025-01-13T11:33:32Z",
        "body": "done"
      }
    ]
  },
  {
    "number": 107,
    "title": "fix allocator lifetime issue",
    "created_at": "2024-10-31T04:00:32Z",
    "closed_at": "2024-11-04T06:22:55Z",
    "labels": [
      "kind/bug",
      "size/S"
    ],
    "url": "https://github.com/antgroup/vsag/pull/107",
    "body": "fixed: #105",
    "comments_url": "https://api.github.com/repos/antgroup/vsag/issues/107/comments",
    "author": "inabao",
    "comments": [
      {
        "user": "wxyucs",
        "created_at": "2024-10-31T07:32:13Z",
        "body": "@LHT129 please check this pull request about allocator lifecycle"
      }
    ]
  },
  {
    "number": 101,
    "title": "introduce cosine for quantizations",
    "created_at": "2024-10-29T12:11:02Z",
    "closed_at": "2024-11-04T02:29:33Z",
    "labels": [
      "kind/feature",
      "size/L"
    ],
    "url": "https://github.com/antgroup/vsag/pull/101",
    "body": "- Add normalize simd operators\r\n- add cosine for sq8, fp32, sq4\r\n- not enable cosine for  @sq4_uniform @ShawnShawnYou \r\n- disable benchmark for test_asan",
    "comments_url": "https://api.github.com/repos/antgroup/vsag/issues/101/comments",
    "author": "LHT129",
    "comments": [
      {
        "user": "wxyucs",
        "created_at": "2024-10-31T07:37:02Z",
        "body": "@ShawnShawnYou please take a look about changes in `simd/` directory"
      }
    ]
  },
  {
    "number": 94,
    "title": "use parallel for ci_test",
    "created_at": "2024-10-24T15:51:12Z",
    "closed_at": "2024-11-01T02:37:53Z",
    "labels": [
      "kind/improvement",
      "size/M"
    ],
    "url": "https://github.com/antgroup/vsag/pull/94",
    "body": "- introduce Makefile new tag: test_asan_parallel\r\n- mark [diskann] & [hnsw] tags run parallel",
    "comments_url": "https://api.github.com/repos/antgroup/vsag/issues/94/comments",
    "author": "LHT129",
    "comments": [
      {
        "user": "wxyucs",
        "created_at": "2024-11-01T02:35:25Z",
        "body": "lgtm"
      }
    ]
  },
  {
    "number": 82,
    "title": "add DEVELOPMENT.md, who is using section",
    "created_at": "2024-10-22T12:28:37Z",
    "closed_at": "2024-10-23T07:48:57Z",
    "labels": [
      "kind/documentation",
      "size/L"
    ],
    "url": "https://github.com/antgroup/vsag/pull/82",
    "body": "Remove redundant information and add who is using section",
    "comments_url": "https://api.github.com/repos/antgroup/vsag/issues/82/comments",
    "author": "jiacai2050",
    "comments": [
      {
        "user": "jiacai2050",
        "created_at": "2024-10-22T14:16:21Z",
        "body": "@wxyucs PTAL"
      },
      {
        "user": "wxyucs",
        "created_at": "2024-10-22T15:06:50Z",
        "body": "@jiacai2050 I just updated the README file in the last commit, the REAMD.md file has a conflict now. Please mention me after you solve it, and then I will recheck this pull request."
      },
      {
        "user": "jiacai2050",
        "created_at": "2024-10-23T02:32:04Z",
        "body": "@wxyucs Conflict resolved."
      }
    ]
  },
  {
    "number": 48,
    "title": "fix memory leak for hnsw and add function test",
    "created_at": "2024-09-28T16:41:23Z",
    "closed_at": "2024-10-08T10:06:05Z",
    "labels": [
      "kind/bug",
      "size/L"
    ],
    "url": "https://github.com/antgroup/vsag/pull/48",
    "body": "fixed: #49 ",
    "comments_url": "https://api.github.com/repos/antgroup/vsag/issues/48/comments",
    "author": "inabao",
    "comments": [
      {
        "user": "wxyucs",
        "created_at": "2024-09-30T02:04:56Z",
        "body": "@inabao please create a issue to describe these possible memory leak, and ref it in this pull request"
      }
    ]
  },
  {
    "number": 37,
    "title": "add data cell structure, flatten as example",
    "created_at": "2024-09-24T03:49:12Z",
    "closed_at": "2024-09-27T08:39:30Z",
    "labels": [
      "kind/feature"
    ],
    "url": "https://github.com/antgroup/vsag/pull/37",
    "body": "#40 ",
    "comments_url": "https://api.github.com/repos/antgroup/vsag/issues/37/comments",
    "author": "LHT129",
    "comments": [
      {
        "user": "wxyucs",
        "created_at": "2024-09-24T06:37:06Z",
        "body": "@LHT129 please add an issue to describe the \"data-cell\", and ref it in this pull request description"
      },
      {
        "user": "wxyucs",
        "created_at": "2024-09-26T10:06:47Z",
        "body": "@LHT129 I left some comments, please have a check"
      }
    ]
  },
  {
    "number": 3,
    "title": "add .gitignore and .clang-format file",
    "created_at": "2024-08-18T04:46:48Z",
    "closed_at": "2024-08-18T14:46:17Z",
    "labels": [],
    "url": "https://github.com/antgroup/vsag/pull/3",
    "body": null,
    "comments_url": "https://api.github.com/repos/antgroup/vsag/issues/3/comments",
    "author": "wxyucs",
    "comments": [
      {
        "user": "jiaweizone",
        "created_at": "2024-08-18T14:34:43Z",
        "body": "LGTM."
      }
    ]
  }
]