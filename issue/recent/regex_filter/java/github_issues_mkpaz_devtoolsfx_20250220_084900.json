[
  {
    "number": 1,
    "title": "Add possibility to inspect not whole application or stage, but concrete Nodes",
    "created_at": "2024-10-11T21:00:28Z",
    "closed_at": "2024-10-14T11:35:46Z",
    "labels": [],
    "url": "https://github.com/mkpaz/devtoolsfx/issues/1",
    "body": "Let's consider, that I have a tab application with multiple tabs and I want to inspect only concrete tab. That's why I suggest possibility to inspect concrete Nodes, Tabs etc but not whole application\r\n\r\nFor example, my application:\r\n```\r\nStage\r\n |- TabPane\r\n     |-Tab 1\r\n     |-Tab 2\r\n        |- VBox\r\n             |-ToolBar\r\n             | ....\r\n```\r\nSo, to inspect only Tab 2 (and all its children) I do:\r\n```\r\nvar toolPane = GUI.createToolPane(tab2, Preferences preferences, tab2.getText());\r\n```",
    "comments_url": "https://api.github.com/repos/mkpaz/devtoolsfx/issues/1/comments",
    "author": "PavelTurk",
    "comments": [
      {
        "user": "mkpaz",
        "created_at": "2024-10-14T11:35:46Z",
        "body": "I started with this, but as the API evolved, I abandoned it due to the high cost for a very niche feature. For example, the application listens for scene root changes and updates the UI accordingly. But what if someone replaces the Tab object, removes it from the scene graph, or moves the scene to another stage? How should the application react? These are just edge cases, and there are more. I believe it's better to focus on the root node, as it can always be obtained from any scene."
      },
      {
        "user": "PavelTurk",
        "created_at": "2024-10-14T13:17:17Z",
        "body": "@mkpaz Thank you for your reply. This way is it possible to \"scroll\" to concrete tab? For example, we have toolPane for stage, but open node tree in concrete Tab?"
      },
      {
        "user": "mkpaz",
        "created_at": "2024-10-15T04:34:46Z",
        "body": "Yes, there's a search feature for the scene graph tree. It scrolls to the node whose name, class, or ID matches the search string, expanding all parent nodes along the way."
      }
    ]
  }
]