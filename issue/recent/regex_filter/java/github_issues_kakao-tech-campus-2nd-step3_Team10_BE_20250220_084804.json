[
  {
    "number": 102,
    "title": "[TEST] Mockito 설정 및 기본 테스트 코드 추가",
    "created_at": "2024-11-07T11:10:31Z",
    "closed_at": "2024-11-07T11:41:55Z",
    "labels": [
      "🛳️ ship",
      "🍀 test"
    ],
    "url": "https://github.com/kakao-tech-campus-2nd-step3/Team10_BE/pull/102",
    "body": "## 해결하려는 문제가 무엇인가요?\r\n\r\n- close #101\r\n\r\n## 어떻게 해결했나요?\r\n\r\n- 프로젝트에 Mockito를 적용하기 위한 의존성(dependency)을 추가했습니다.\r\n- 간단한 예제 테스트 코드를 작성하여 Mockito 적용을 확인했습니다.\r\n",
    "comments_url": "https://api.github.com/repos/kakao-tech-campus-2nd-step3/Team10_BE/issues/102/comments",
    "author": "stopmin",
    "comments": [
      {
        "user": "amm0124",
        "created_at": "2024-11-07T11:41:51Z",
        "body": "좋습니다 ~ \r\n"
      }
    ]
  },
  {
    "number": 75,
    "title": "entity 등록할 때 이미지도 받게 하기",
    "created_at": "2024-10-29T10:50:12Z",
    "closed_at": "2024-11-14T16:04:35Z",
    "labels": [],
    "url": "https://github.com/kakao-tech-campus-2nd-step3/Team10_BE/issues/75",
    "body": "### ✏️ Describe\r\n\r\n이미지추가하는 api추가하기\r\nentity에도 list<imageUrl>넣어야하할듯\r\n\r\n### ✅ TO-DO\r\n\r\n- [ ] 이미지도 입력받기\r\n- [ ] 이미지 저장하기\r\n- [ ] 불러올때 이미지도 가져오기 \r\n\r\n### 🙋🏻 More\r\n\r\n_No response_",
    "comments_url": "https://api.github.com/repos/kakao-tech-campus-2nd-step3/Team10_BE/issues/75/comments",
    "author": "canyos",
    "comments": [
      {
        "user": "jjt4515",
        "created_at": "2024-11-13T02:23:48Z",
        "body": "이미지 추가, 가져오기 api는 제가 하나로 통합해서 작성할게요"
      }
    ]
  },
  {
    "number": 73,
    "title": "Farm Schedule 관리 방식 및 금액제도 수정",
    "created_at": "2024-10-28T10:03:11Z",
    "closed_at": "2024-11-05T07:59:06Z",
    "labels": [
      "🎉 feature",
      "🤨 P1"
    ],
    "url": "https://github.com/kakao-tech-campus-2nd-step3/Team10_BE/pull/73",
    "body": "> 아직 작업중인데 검토차 올립니다.\r\n\r\n## 해결하려는 문제가 무엇인가요?\r\n\r\n- close #62 \r\n\r\n## 어떻게 해결했나요?\r\n\r\n- 기존에 FarmSchedule에서 예약 하나를 담당하도록 하여, 하루에 딱 한 팀만 예약을 가능하게 했다면,\r\n- 네이버 예약과 같이 한팀당 최대 수용가능 인원을 두고, 동시간대 수용 가능한 팀을 두도록 수정했습니다.\r\n- FarmSchedule은 그저 예약 가능 시간만 담당할 수 있도록 수정했습니다.\r\n\r\n## 코드 리뷰시 요청 사항\r\n\r\n- 현재 예약한 팀을 매번 reservation에서 쿼리를 날려 조회하는 방향이 좋은지 고민이 됩니다.\r\n- \r\n\r\n## 더 하고 싶은 말\r\n\r\n- 더 작업하는대로 계속 업데이트 하겠습니다!!\r\n",
    "comments_url": "https://api.github.com/repos/kakao-tech-campus-2nd-step3/Team10_BE/issues/73/comments",
    "author": "stopmin",
    "comments": [
      {
        "user": "canyos",
        "created_at": "2024-11-03T10:57:17Z",
        "body": "reservation request에서 toEntity를 할 때  status를 기본값으로 설정하는 부분이 어디인가요?"
      },
      {
        "user": "stopmin",
        "created_at": "2024-11-04T08:27:03Z",
        "body": "> reservation request에서 toEntity를 할 때 status를 기본값으로 설정하는 부분이 어디인가요?\r\n\r\n일단 신청시 accept하도록 설정해봤는데 혹시 waiting이 좋을까요? 일단 승낙하는게 좋아보이긴 합니다 @.@ 괜찮으면 머지하겠습니다!!"
      },
      {
        "user": "canyos",
        "created_at": "2024-11-04T08:33:36Z",
        "body": "그건 나중에 정해도좋을거같아요 좋은거같아여 수고하셧슴니다"
      }
    ]
  },
  {
    "number": 72,
    "title": "feat: product tag 생성",
    "created_at": "2024-10-22T09:22:52Z",
    "closed_at": "2024-11-05T08:52:47Z",
    "labels": [
      "🎉 feature",
      "😐 P2"
    ],
    "url": "https://github.com/kakao-tech-campus-2nd-step3/Team10_BE/pull/72",
    "body": "## 해결하려는 문제가 무엇인가요?\r\n\r\n- close #37\r\n\r\n## 어떻게 해결했나요?\r\n\r\n- 간단하게 만들어봣습니다\r\n\r\n## 코드 리뷰시 요청 사항\r\n\r\n- enum select가 안되길래 native로 짰는데 jpql로 하는 방법 아시면 알려주세욥\r\n\r\n## 더 하고 싶은 말\r\n\r\n- \r\n",
    "comments_url": "https://api.github.com/repos/kakao-tech-campus-2nd-step3/Team10_BE/issues/72/comments",
    "author": "canyos",
    "comments": [
      {
        "user": "canyos",
        "created_at": "2024-10-29T09:16:55Z",
        "body": "@stopmin enum으로 관리하게 바꿔봤습니다"
      },
      {
        "user": "amm0124",
        "created_at": "2024-11-02T11:03:19Z",
        "body": "고생하셨습니다!"
      }
    ]
  },
  {
    "number": 71,
    "title": "기존 category, product, review 코드 security 적용하기",
    "created_at": "2024-10-15T14:30:32Z",
    "closed_at": "2024-11-05T08:51:08Z",
    "labels": [
      "🎉 feature",
      "😐 P2"
    ],
    "url": "https://github.com/kakao-tech-campus-2nd-step3/Team10_BE/pull/71",
    "body": "## 해결하려는 문제가 무엇인가요?\r\n\r\n- close #69\r\n\r\n## 어떻게 해결했나요?\r\n\r\n- 기존 코드에 권한만 추가했습니다\r\n\r\n## 코드 리뷰시 요청 사항\r\n\r\n- farm이랑 product가 review를 둘 다 가져서 로직이 매우 비슷한데 상속이나 인터페이스를 사용하는게 나을지요?\r\n\r\n## 더 하고 싶은 말\r\n\r\n- 코드리뷰 때 물어봐도 좋을 듯\r\n",
    "comments_url": "https://api.github.com/repos/kakao-tech-campus-2nd-step3/Team10_BE/issues/71/comments",
    "author": "canyos",
    "comments": [
      {
        "user": "amm0124",
        "created_at": "2024-10-30T12:38:17Z",
        "body": "고생하셨습니다!!1"
      },
      {
        "user": "amm0124",
        "created_at": "2024-10-30T12:45:57Z",
        "body": "farm이랑 product가 review를 둘 다 가져서 로직이 매우 비슷한데 상속이나 인터페이스를 사용하는게 나을지요\r\n\r\n추상메서드나 상속 사용해도 좋을 거 같습니다!!! "
      },
      {
        "user": "canyos",
        "created_at": "2024-10-30T12:58:01Z",
        "body": "멘토링 때 물어보죠 어떻게하는게나을지"
      },
      {
        "user": "amm0124",
        "created_at": "2024-11-02T10:43:38Z",
        "body": "수고하셨습니다! \r\n1)\r\nCASCADE ALL은 UPDATE + DELETE,\r\nCASCADE REMOVE는 update되지 않고 삭제되면 삭제가 되는 조건입니다! 따라서 부모 entity update 동기화가 만약에 필요하다면\r\ncascade ALL로 변경하는 것이 좋아보여요!"
      }
    ]
  },
  {
    "number": 67,
    "title": "이미지 관리 테이블 작성한다",
    "created_at": "2024-10-12T14:19:08Z",
    "closed_at": "2024-11-06T11:41:58Z",
    "labels": [
      "🎉 feature",
      "🤨 P1"
    ],
    "url": "https://github.com/kakao-tech-campus-2nd-step3/Team10_BE/pull/67",
    "body": "## 해결하려는 문제가 무엇인가요?\r\n\r\n- close #33 \r\n\r\n## 어떻게 해결했나요?\r\n\r\n- 이미지 정보 저장 CRUD 구현\r\n- presigned Url 을 통해 s3에 이미지를 업로드 한 뒤 클라이언트에서 또 요청을 보내 db에도 저장을 해야 해요 \r\n\r\n## 코드 리뷰시 요청 사항\r\n\r\n- 더 필요한 부분이 있을까요?\r\n\r\n## 더 하고 싶은 말\r\n\r\n* 이슈 사항\r\n   1. jpg 말고 다른 형식 파일 들어오는 경우에 대해서도 따로 처리 필요\r\n   2. 주기적으로 s3 정리하는 스케줄러 구현 필요(사진 5개 이상이면 db에 저장 안 한 것들은 지움)\r\n   3. 극악의 확률로 url이 겹치면?? -> 그럴 일 거의 없긴할텐데 생기면 s3 원래 파일 지워집니다. 우선은 url 변수 더 추가했습니다.\r\n\r\n하다 보니 위의 이슈 사항이 생겼는데, 나중에 리팩토링 해보도록 할게요.!\r\n일단은 api 명세도 빠른 시일 내에 해보겠습니다.\r\nweek7이 없어서 일단 week6으로 pr 올렸는데, week7 그냥 만들면 되나요?",
    "comments_url": "https://api.github.com/repos/kakao-tech-campus-2nd-step3/Team10_BE/issues/67/comments",
    "author": "jjt4515",
    "comments": [
      {
        "user": "amm0124",
        "created_at": "2024-10-14T00:28:56Z",
        "body": "week7 만들었습니다 ~"
      },
      {
        "user": "canyos",
        "created_at": "2024-10-14T19:12:43Z",
        "body": "저는 review만들면서 referenceId 대신에 entityId 변수 명을 사용했는데 뭐가 더 직관적인거 같나여?"
      },
      {
        "user": "jjt4515",
        "created_at": "2024-10-15T12:59:35Z",
        "body": "오 둘 다 괜찮아서 못 고르겠네요\r\n\r\n\r\n> 저는 review만들면서 referenceId 대신에 entityId 변수 명을 사용했는데 뭐가 더 직관적인거 같나여?\r\n오 둘 다 괜찮은데요? \r\n둘 다 상관없을 것 같습니다!\r\n"
      },
      {
        "user": "jjt4515",
        "created_at": "2024-10-30T05:29:14Z",
        "body": "삭제된 이미지와 똑같은 이미지를 사용자가 다시 올릴 경우, 삭제된 이미지의 deleted_at을 null로 바꿔서 다시 복구가 되는 것처럼 구현하였는데 괜찮을까요? \r\n회원 계정 같은 게 아니고 이미지라 문제 없을 거 같기도 하고 똑같은 거 삭제했다가 다시 저장할 때마다 새로 만들면 db에 자리를 많이 차지할 것 같다는 생각이 들었습니다. \r\n\r\n따로 복구 로직도 만들긴 했습니다! \r\n그런데 이미지는 복구할 일이 없을 것 같긴 해서, 하드 삭제를 해야 하나 생각이 또 드네요"
      }
    ]
  },
  {
    "number": 66,
    "title": "feat : 장바구니 crud, test완료",
    "created_at": "2024-10-12T08:07:54Z",
    "closed_at": "2024-10-30T12:39:46Z",
    "labels": [
      "🎉 feature",
      "😐 P2"
    ],
    "url": "https://github.com/kakao-tech-campus-2nd-step3/Team10_BE/pull/66",
    "body": "## 해결하려는 문제가 무엇인가요?\r\n\r\n- close #27\r\n\r\n## 어떻게 해결했나요?\r\n\r\n- 기존 코드 안건들이기 위해 최대한 매핑을 사용안하고 쿼리로 짰습니다.\r\n\r\n## 코드 리뷰시 요청 사항\r\n\r\n- 매핑을 쓴다면 어디 추가 하는게 나을까요?\r\n\r\n## 더 하고 싶은 말\r\n\r\n-  \r\n",
    "comments_url": "https://api.github.com/repos/kakao-tech-campus-2nd-step3/Team10_BE/issues/66/comments",
    "author": "canyos",
    "comments": [
      {
        "user": "amm0124",
        "created_at": "2024-10-30T12:34:48Z",
        "body": "좋은 것 같습니다!! 고생하셨습니다 "
      }
    ]
  },
  {
    "number": 60,
    "title": "[Develop] 6주차 최종 코드 PR",
    "created_at": "2024-10-11T09:42:05Z",
    "closed_at": "2024-10-11T09:46:40Z",
    "labels": [],
    "url": "https://github.com/kakao-tech-campus-2nd-step3/Team10_BE/pull/60",
    "body": null,
    "comments_url": "https://api.github.com/repos/kakao-tech-campus-2nd-step3/Team10_BE/issues/60/comments",
    "author": "stopmin",
    "comments": [
      {
        "user": "amm0124",
        "created_at": "2024-10-11T09:46:31Z",
        "body": "approve 하겠습니다 \r\n따봉따봉"
      }
    ]
  },
  {
    "number": 54,
    "title": "예약 도메인을 생성한다 ",
    "created_at": "2024-10-07T13:02:45Z",
    "closed_at": "2024-10-11T09:25:12Z",
    "labels": [
      "🎉 feature",
      "🤨 P1",
      "📉 DDL Required"
    ],
    "url": "https://github.com/kakao-tech-campus-2nd-step3/Team10_BE/pull/54",
    "body": "## 해결하려는 문제가 무엇인가요?\r\n\r\n- close #31 \r\n농장 예약 도메인을 생성했습니다.\r\n 예약 관련 작업은 아직 끝나지 않았고, 진행 중이에요. 하지만 개발 속도가 급해서 우선적으로 핵심 기능을 구현했습니다.\r\n\r\n## 어떻게 해결했나요?\r\n\r\n- 간단하게 농장 예약 및 예약 취소 기능을 구현했습니다.\r\n- 예약 시 예약 가능한 날짜를 조회하고, 해당 날짜에 예약 상태를 업데이트하는 로직을 추가했습니다.\r\n- 예약 취소 기능도 구현했지만, 아직은 간단한 로직만 포함돼 있고, 예약 취소 시점에 대한 제약이나 정책은 추후에 더 상세하게 다뤄야 할 것 같습니다.\r\n- 농장 조회 관련해서도 기본적인 기능을 넣었고, 예약과 연동하여 예약 가능 여부를 처리했습니다.\r\n\r\n## 코드 리뷰시 요청 사항\r\n\r\n- 코드 전반적으로 봐주시면 좋겠어요. 특히, 예외 처리 부분이나 예약 관련 로직에서 개선할 부분이 있는지 확인 부탁드립니다.\r\n\r\n## 더 하고 싶은 말\r\n- 예약 취소 시 취소 규정을 더 세부적으로 설정할 필요가 있습니다. 지금은 임시로 예약 날짜 기준 3일 전까지만 취소 가능하도록 했지만, 추후에 더 정교한 로직이 필요할 것 같습니다.\r\n- 예약과 관련된 세세한 예외 처리나 추가 기능들은 추후 보완할 예정입니다.\r\n- 예약 확인 및 관리 페이지나 API도 필요할 수 있습니다.\r\n",
    "comments_url": "https://api.github.com/repos/kakao-tech-campus-2nd-step3/Team10_BE/issues/54/comments",
    "author": "stopmin",
    "comments": [
      {
        "user": "amm0124",
        "created_at": "2024-10-10T08:01:58Z",
        "body": "전반적으로 봤는데 \r\nreservation을 OneToMany로 변경하는 것 제외하고는 다 괜찮은 것 같아요! enum 타입을 사용해서 처리 한 것도 좋은 듯 합니다\r\n\r\nsoft delete를 findByIdAndDeletedAtIsNull  형태로 사용 한 것도 좋은 거 같아요 \r\n\r\n예약 취소 규정 등은 금요일에 정해보도록 합시다! 저는 3일 좋은 거 같아요"
      },
      {
        "user": "stopmin",
        "created_at": "2024-10-10T08:16:59Z",
        "body": "> 전반적으로 봤는데 reservation을 OneToMany로 변경하는 것 제외하고는 다 괜찮은 것 같아요! enum 타입을 사용해서 처리 한 것도 좋은 듯 합니다\r\n> \r\n> soft delete를 findByIdAndDeletedAtIsNull 형태로 사용 한 것도 좋은 거 같아요\r\n> \r\n> 예약 취소 규정 등은 금요일에 정해보도록 합시다! 저는 3일 좋은 거 같아요\r\n\r\n넵 좋습니다 :) 예약 취소 규정 같이 이야기 해봐요!"
      }
    ]
  },
  {
    "number": 51,
    "title": "S3 설정 및 Presigned URL 관련 메소드 정의",
    "created_at": "2024-10-05T10:54:08Z",
    "closed_at": "2024-10-07T11:08:04Z",
    "labels": [
      "🎉 feature",
      "🤨 P1"
    ],
    "url": "https://github.com/kakao-tech-campus-2nd-step3/Team10_BE/pull/51",
    "body": "## 해결하려는 문제가 무엇인가요?\r\n\r\n- close #32 \r\n- S3에 파일을 업로드 및 다운로드할 때 사용하는 Presigned URL 생성 관련 메소드를 정의하고, AWS S3와 관련된 설정을 중앙화하여 관리하도록 하였습니다.\r\n- S3 Key Prefix 구조를 관리하는 방식을 명확하게 정의하였습니다.\r\n\r\n## 어떻게 해결했나요?\r\n- AWS Config: AWS 관련 설정을 AwsProperties를 통해 관리하며, S3와 관련된 설정을 S3Config에서 구성했습니다.\r\n  - S3Presigner를 사용하여 S3에 업로드 및 다운로드할 때 Presigned URL을 생성하도록 했습니다.\r\n  - S3PresignedUrlService를 통해 파일 업로드 시 S3에 저장될 경로를 관리하고, 파일 접근을 위해 Presigned URL을 생성합니다.\r\n  - S3에 파일을 저장할 때 Key Prefix를 `farm/instruction/날짜/시간인코딩.jpg`와 `farm/reviews/날짜/인코딩.json` 형식으로 관리하며, 이를 통해 파일을 쉽게 분류할 수 있도록 했습니다.\r\n- EncryptionUtil: 시간 인코딩을 위한 SHA-256 해시 및 Base64 인코딩을 EncryptionUtil 클래스로 분리하여 암호화 관련 로직을 모듈화했습니다.\r\n\r\n\r\n## 코드 리뷰시 요청 사항\r\n\r\n-코드 구조나 서비스 로직에서 개선할 부분이 있으면 의견 부탁드립니다.\r\n- 특히 S3 Key Prefix를 관리하는 방식에 대한 개선점이 있을 경우 조언 부탁드립니다.\r\n\r\n## 더 하고 싶은 말\r\n- S3 파일 관리와 관련된 부분을 효율적으로 개선하기 위해 추가적인 의견이나 피드백을 부탁드립니다.\r\n- S3PresignedUrlService에서 Presigned URL을 생성하는 로직에 대해 궁금한 점이 있으시면 알려주세요.\r\n\r\n\r\n⭐️ **Object key값은 일단 지금 저장하고 있지 않아요!!** \r\n현재 **PR은 S3에 파일을 업로드 및 다운로드할 때 사용하는 Presigned URL을 발급하는 기능에 초점**을 맞추고 있으며, **이미지 키값을 DB에 저장하는 부분은 나중에 농장 이미지 관리 PR에서 다룰 예정**입니다!!! \r\n\r\n키값을 저장하고 관리하는 부분은 다음 PR에 다루도록 하겠습니다.",
    "comments_url": "https://api.github.com/repos/kakao-tech-campus-2nd-step3/Team10_BE/issues/51/comments",
    "author": "stopmin",
    "comments": [
      {
        "user": "jjt4515",
        "created_at": "2024-10-07T02:37:57Z",
        "body": "S3 테스트 코드 추가하였습니다!\r\n제가 잘못한 건진 모르겠는데 S3 Presigner 생성할 때 자격 증명을 DefaultCredentialsProvider로 하면 오류가 나더라구요"
      },
      {
        "user": "stopmin",
        "created_at": "2024-10-07T04:55:37Z",
        "body": "> S3 테스트 코드 추가하였습니다! 제가 잘못한 건진 모르겠는데 S3 Presigner 생성할 때 자격 증명을 DefaultCredentialsProvider로 하면 오류가 나더라구요\r\n\r\n\r\n@jjt4515 \r\n테스트코드는 나중에 작성해도 괜찮을 것 같다고 생각해서 생략했는데 대신 작성해주셔서 감사합니다 :D \r\nmockito를 사용해봐도 좋을 것 같은데 진택님 생각이 궁금합니다! 지금은 실제 AWS 리소스와 상호작용하며 테스트 하고 있는데, 이렇게 되면 네트워크 상태나 외부 리소스의 가용성에 영향을 어느정도 미치지 않을까 싶습니다-!\r\n\r\n다음 PR 생성해서 이 작업은 분리해서 진행해도 좋을 것 같아요 :) \r\n\r\n또한\r\n``` \r\n// given\r\n// when\r\n// then\r\n```\r\n\r\n형식으로 테스트코드를 작성해보아도 좋을 것 같습니다!"
      }
    ]
  },
  {
    "number": 49,
    "title": "인증인가 최종 기능 구현",
    "created_at": "2024-10-04T18:17:08Z",
    "closed_at": "2024-10-11T09:25:19Z",
    "labels": [
      "🎉 feature",
      "🤨 P1"
    ],
    "url": "https://github.com/kakao-tech-campus-2nd-step3/Team10_BE/issues/49",
    "body": "### ✏️ Describe\n\n최종 기능 구현\n\n### ✅ TO-DO\n\n- [ ] 소셜 로그인 체크\r\n- [ ] 기존에 가입된 회원이 있다면 db 연동\r\n- [ ] 소셜 로그인 정보 변경에 대해 email이 아닌 providerId로 통합\r\n- [ ] blacklist(Access token) , 인터페이스 - jpa로 구현\r\n- [ ] whitelist(refresh token),  인터페이스 - jpa로 구현\r\n- [ ] username, password 기반 인증\r\n- [ ] jwt 발급\r\n- [ ] 토큰 재발급(reissue) 구현\r\n- [ ] black, whitelist 기반 logout\r\n- [ ] JwtUtil 리팩토링\r\n\r\n\n\n### 🙋🏻 More\n\n_No response_",
    "comments_url": "https://api.github.com/repos/kakao-tech-campus-2nd-step3/Team10_BE/issues/49/comments",
    "author": "amm0124",
    "comments": [
      {
        "user": "stopmin",
        "created_at": "2024-10-05T11:09:56Z",
        "body": "파이팅!!"
      }
    ]
  },
  {
    "number": 47,
    "title": "시큐리티 문제로 코드가 돌아가지 않는 문제 해결",
    "created_at": "2024-10-04T18:04:36Z",
    "closed_at": "2024-10-05T07:23:52Z",
    "labels": [
      "🐞 bug"
    ],
    "url": "https://github.com/kakao-tech-campus-2nd-step3/Team10_BE/issues/47",
    "body": "### 🐞 Describe\r\n\r\nmaster branch에 잘못된 merge로 컴파일 되지 않는 코드가 올라와서 임시로 수정해서 다시 올립니다.\r\n\r\n### 📄 Logs\r\n\r\n```shell\r\nx\r\n```\r\n\r\n\r\n### 🌏 Environment\r\n\r\n패키지 이름 변경 및 임시로 주석 처리 \r\n\r\n### 🙋🏻 More\r\n\r\nmerge를 잘 하자.. \r\n오늘내일중으로 인증인가는 다 될 거 같아요. .. 빨리 끝내고 메인 기능 개발하고 싶습니다",
    "comments_url": "https://api.github.com/repos/kakao-tech-campus-2nd-step3/Team10_BE/issues/47/comments",
    "author": "amm0124",
    "comments": [
      {
        "user": "stopmin",
        "created_at": "2024-10-05T07:23:52Z",
        "body": "작업 완료하셔서 이슈 닫겠습니다~"
      }
    ]
  },
  {
    "number": 46,
    "title": "소셜 로그인 및 server login 연동",
    "created_at": "2024-10-04T05:44:59Z",
    "closed_at": "2024-10-11T09:25:36Z",
    "labels": [
      "🛠️ enhancement",
      "🎉 feature",
      "🫥 P3"
    ],
    "url": "https://github.com/kakao-tech-campus-2nd-step3/Team10_BE/issues/46",
    "body": "### ✏️ Describe\r\n\r\n소셜 로그인 및 server login 연동 기능을 추가합니다.\r\n카카오 개발자 공식 문서에서 보면 단순히 이메일, 전화번호 이런 것으로 연동하는 것은 권장하지 않는다고 적혀 있었어요. \r\n권장하는 로직은 SMS, email 인증(본인임을 확실하게 확인) 및 providerId 등을 사용하라고 적혀있던데 이 기능은 일단 제외하고 그냥 email이 같다면 바로 연동시키는 방향으로 구현하겠습니다 ~\r\n\r\n### ✅ TO-DO\r\n\r\n- signup controller에서 기존 계정을 조회합니다. 만약 존재한다면 계정 연동을 추가하겠습니다. 근데 review나 order는 아직 완성이 되지 않아서 수도코드 및 주석처리해서 올려놓겠습니다.\r\n- 회원 가입 시, 기존 계정이 존재한다면 연동하는 방향으로 구현하겠습니다. \r\n\r\n### 🙋🏻 More\r\n\r\n연동 시나리오가 2가지 존재합니다. \r\n\r\n1. 소셜로그인으로 회원 가입 했을 때, 이미 서버에서 회원 가입을 진행 한 경우. (즉 서버 회원 가입이 선행된 경우)\r\n- 이 케이스는 security - DefaultOAuth2UserService를 상속한 필터에서 진행합니다 . \r\n\r\n2. 서버에서 회원 가입을 했을 때, 이미 소셜 로그인으로 회원 가입 진행 한 경우 (즉 소셜 로그인으로 가입이 선행된 경우)\r\n- 이 경우는 api/sign-up 요청에서 처리하도록 하겠습니다 \r\n\r\n",
    "comments_url": "https://api.github.com/repos/kakao-tech-campus-2nd-step3/Team10_BE/issues/46/comments",
    "author": "amm0124",
    "comments": [
      {
        "user": "stopmin",
        "created_at": "2024-10-04T13:27:03Z",
        "body": "로그인에 진심인 남자"
      },
      {
        "user": "amm0124",
        "created_at": "2024-10-04T18:03:20Z",
        "body": "> 로그인에 진심인 남자\r\n\r\n눈물 흘리는 중"
      }
    ]
  },
  {
    "number": 43,
    "title": "Review 만들기",
    "created_at": "2024-10-04T01:54:38Z",
    "closed_at": "2024-10-07T13:19:52Z",
    "labels": [
      "🎉 feature",
      "😐 P2",
      "📉 DDL Required"
    ],
    "url": "https://github.com/kakao-tech-campus-2nd-step3/Team10_BE/pull/43",
    "body": "## 해결하려는 문제가 무엇인가요?\r\n\r\n- close #29\r\n\r\n## 어떻게 해결했나요?\r\n\r\n- enum으로 product인지 farm인지 관리합니다\r\n\r\n## 코드 리뷰시 요청 사항\r\n\r\n- \r\n\r\n## 더 하고 싶은 말\r\n\r\n- image부분은 전부 삭제하고 진택님께서 엔티티 만들고 연동하면 추후 만들 예정\r\n",
    "comments_url": "https://api.github.com/repos/kakao-tech-campus-2nd-step3/Team10_BE/issues/43/comments",
    "author": "canyos",
    "comments": [
      {
        "user": "amm0124",
        "created_at": "2024-10-04T04:33:43Z",
        "body": "엄청난 양의 컨플릭트가..!!"
      },
      {
        "user": "stopmin",
        "created_at": "2024-10-04T07:25:59Z",
        "body": "추가적으로 지금 security부분이 안돌아가서 테스트가 안되실 수도 있어요 ㅠ 건호님이 수정하시는 대로 week5랑 머지하시고 진행하시면 될 것 가탕요!! 건호님을 기다려봅쉬다"
      }
    ]
  },
  {
    "number": 38,
    "title": "@Where, @SQLSelect 어노테이션을 JPA 방식으로 변환",
    "created_at": "2024-10-02T12:28:58Z",
    "closed_at": "2024-10-02T15:56:24Z",
    "labels": [
      "🛳️ ship",
      "😐 P2",
      "📉 DDL Required"
    ],
    "url": "https://github.com/kakao-tech-campus-2nd-step3/Team10_BE/pull/38",
    "body": "## 해결하려는 문제가 무엇인가요?\r\n\r\n- close #36 \r\n\r\n## 어떻게 해결했나요?\r\n1. @Where, @SQLSelect 어노테이션을 JPA 방식으로 변환\r\n- SQL 조회를 커스터마이징 하려고 썼었는데, JPA 표준을 따르는게 확장성이랑 유지보수성 면에서 좋다고 판단하여 수정했습니다.\r\n- soft delete한 객체를 언젠가는 호출하게 될지도 모르겠다는 생각도 문득 들고, 여러므로 유지보수성이 좋지 않다고 판단했습니다.\r\n\r\n## 추가 작업 사항\r\n> 추가적으로 지난 PR에서 누락된 부분이 보여 추가했습니다.\r\n\r\n-  category 도메인 위치 이동시켰습니다. product 내부에 _category로 수정했습니다.\r\n- @SQLDelete쿼리 내의 now() -> current_timestamp로 수정했습니다. (더 범용적인 표현)\r\n- db내에 상품에 대한 수량은 quentity -> stock으로 수정했습니다. : 재고가 맞는 표현이라 판단했습니다. quantity는 요청받을 때 쓰는걸로...\r\n- price가 String으로 되어있어 Long으로 수정했습니다. -> 아마 단위당 가격이 다를거라 생각하셔서 그런 것 같습니다. 추후에 단위는 따로 받는 것으로 합시다! (안그러면 가격 계산이 어려울 것 같습니다.)\r\n- Member, Product 조회 시 DeleteAtIsNull 조건으로 조회하도록 수정했습니다. 기존 동작에는 문제 없으실겁니다.\r\n- Product 조회 API가 빠져있어 추가해줬습니다.\r\n- Product Detail 조회는 이후에 따로 저희끼리 커뮤니케이션 하고 작업 추가적으로 더 해야할 듯 합니다.\r\n- ProductImageUrl은 나중에 이미지 테이블 분리하면 제거해야할 것 같네요.\r\n\r\n## 코드 리뷰시 요청 사항\r\n- 인증 인가가 아직 마무리가 되지 않아 토큰 기반으로 인증하는 로직이 거의 통채로 빠져있습니다. 나중에 이슈 생성해서 진행해야 할 것 같아요.\r\n- api 설계쪽 봐주시면 될 것 같습니다.\r\n\r\n\r\n## 더 하고 싶은 말\r\n\r\n- 다들 혹시 포스트맨으로 테스트 하면서 작업하는지 궁금합니다😀 가끔 동작하지 않는 코드들이 있네요~~\r\n- 추가적으로 돌아가는 코드를 올려주셨으면 좋겠습니다 🥺 secret파일도 제때제때 공유 부탁드려욤!!! security도 지금 동작하지 않아 실행시 바로 종료되는 에러가 있는데, 관련해서도 최대한 문서화든 공유 해주셨으면 좋겠어요😀\r\n- 파이팅해봅시다!!\r\n",
    "comments_url": "https://api.github.com/repos/kakao-tech-campus-2nd-step3/Team10_BE/issues/38/comments",
    "author": "stopmin",
    "comments": [
      {
        "user": "canyos",
        "created_at": "2024-10-02T12:39:11Z",
        "body": "제가 많이 틀리네욤....열시미해보겟슴니다"
      },
      {
        "user": "stopmin",
        "created_at": "2024-10-02T12:45:14Z",
        "body": "> 제가 많이 틀리네욤....열시미해보겟슴니다\r\n\r\n헉 아닙니다!!! 틀린게 아니라 제가 잘못 전달해드린 부분도 좀 있는거같아요 허헛!! 그리고 저희끼리 얘기 나눈 부분은 모두 다 예쁘게 짜셨는걸요😳\r\n위치나 이런건 사실 저희끼리 얘기 나눈적도 많이 없었는데 옮기는게 맞다고 생각이 들어 옮긴것일 뿐, 충분히 너무 잘 하셨습니당!!! 혹시나 옮긴게 별로라면 알려주세요!! (product안에 _category로 옮긴것!!)\r\n\r\n풍헌님이 너무 잘 짜놔주셔서, 편하게 제가 풍헌님께 잘못전달해드린 부분 수정할 수 있었어요😀"
      },
      {
        "user": "amm0124",
        "created_at": "2024-10-02T14:03:19Z",
        "body": "빠른 시일 안에 인증/인가 마무리 하도록 할게요!! 잘 하신 거 같습니다 ~~ 굿굿"
      }
    ]
  },
  {
    "number": 30,
    "title": "농장 예약 가능 시간대 등록 및 조회",
    "created_at": "2024-10-01T16:52:28Z",
    "closed_at": "2024-10-02T12:45:57Z",
    "labels": [
      "🎉 feature",
      "🤨 P1",
      "📉 DDL Required"
    ],
    "url": "https://github.com/kakao-tech-campus-2nd-step3/Team10_BE/pull/30",
    "body": "안녕하세욤 :D \r\nPR을 빨리 올린다는게, 여러번 테스트 하면서 이전 코드에 결함이 조금 보여서 원래는 그러면 안되지만 Farm 도메인 부분도 같이 이번 PR에서 살짝쿵 고쳤습니다.\r\n\r\n아!! 그리고 저번에 저희가 \r\n`@Where`을 쓰도록 한 부분은, JPA 메소드로 DeleteAt이 Null인 것만 조회하도록 수정하는 편이 더 낫다고 생각해서 수정했습니다. 이 부분에 대해서는 이번주 금요일 회의 때 다시 전달해드리겠습니다!\r\n\r\n또한, 엔티티 내에 칼럼에 추가적으로 `@Comment`로 각자 무엇을 의미하는지도 추가해두었습니다. 추후에 다른 분들과 협업하기에 좋을 것 같다고 판단하여 붙였는데 괜찮다면 다른 분들도 모든 엔티티에 달아보셔도 좋을 것 같아요~~\r\n\r\n## 해결하려는 문제가 무엇인가요?\r\n- close #13 \r\n\r\n농장 별 예약 가능 시간대 등록 및 조회 기능을 구현했습니다!\r\n\r\n## 어떻게 해결했나요?\r\n\r\n1. 농장 가능 시간 등록\r\nRequest 예시가 이해에 도움이 될 것이라 생각하고 첨부드립니다. 시작 날짜와, 종료 날짜를 넣고 가능한 요일을 추가하면 해당 기간 내의 해당 요일이 지정한 상태값으로 추가됩니다. 이미 추가되었을 경우 예외를 발생시킵니다.\r\n```json\r\n{\r\n  \"farmId\": 17,\r\n  \"startDate\": \"2024-10-01\",\r\n  \"endDate\": \"2024-10-31\",\r\n  \"status\": \"PENDING\",\r\n  \"availableDays\": [\"MONDAY\", \"WEDNESDAY\", \"FRIDAY\"]\r\n}\r\n```\r\n\r\n예외 예제\r\n```java\r\n{\r\n    \"type\": \"about:blank\",\r\n    \"title\": \"FARM_SCHEDULE_ALREADY_EXISTS\",\r\n    \"status\": 409,\r\n    \"detail\": \"이미 스케줄이 존재합니다.\",\r\n    \"instance\": \"/api/farm/schedule\"\r\n}\r\n```\r\n\r\n2. 농장 가능 시간 조회\r\n는 코드 외에 설명이 따로 필요가 없을 것 같고요\r\n\r\n\r\n## 코드 리뷰시 요청 사항\r\n- 리뷰 시 전체적인 네이밍이든 구조적인 부분이든 얼마든지 리뷰 너무 감사드립니다!!😀\r\n\r\n\r\n## 더 하고 싶은 말\r\n**⭐️⭐️⭐️ 추가적으로 `FarmSchedule` - >`Farm` 연관관계를 따로 맺지 않았습니다.** \r\n처음에는 연관관계를 두어 구현을 했는데 하다보니, `@ManyToOne`을 지연 로딩으로 로드하다보니 엔티티가 아직 로드되지 않은 상태에서 JSON으로 직렬화하려 하려고 시도하니 Jackson머시기 에러가 나더라고요. `@JsonIgnoreProperties`를 사용하거나, DTO로 만들어 리턴하면 해결할 수 있겠지만, 아래 이유 두가지로 연관관계는 맺지 않는 쪽이 낫다고 판단하였습니다.\r\n\r\n이유 1. FarmSchedule 특성 상 직접적으로 Farm을 조회하게 되는 경우는 적을 뿐 더러, 그에 대해서 조회하면서 생기는 앞서말한 trade-off들이 조금 크다고 생각했습니다.\r\n이유 2. 양방향 연관관계를 지양하는 이유는 주로 복잡성, 성능, 유지보수성과 관련이 있는 것으로 알고 있습니다. 따라서 필요없다고 생각해서 farmId만 두었고, 혹시나 farm에서 schedule이 필요한 경우가 있다면 farm에서 단방향으로 걸어줄 듯 합니다. \r\n\r\n\r\n- 다들 곧 시험기간이고, 바쁘시겠지만 우리 같이 더 파이팅해보아요 🔥🔥🔥 \r\n- 더 노력해서 우리 팀에 많은 기여가 되도록 노력하겠습니다💪💪 다들 파이팅!!\r\n",
    "comments_url": "https://api.github.com/repos/kakao-tech-campus-2nd-step3/Team10_BE/issues/30/comments",
    "author": "stopmin",
    "comments": [
      {
        "user": "jjt4515",
        "created_at": "2024-10-02T05:29:01Z",
        "body": "시작 점에 + 하나 누르고 리뷰 썼는데 뜨는 코드가 생각보다 짧게 나오네요 하하...ㅠ"
      }
    ]
  },
  {
    "number": 28,
    "title": "Order 도메인을 생성한다",
    "created_at": "2024-10-01T07:36:05Z",
    "closed_at": "2024-11-02T11:15:30Z",
    "labels": [
      "🎉 feature",
      "🤨 P1"
    ],
    "url": "https://github.com/kakao-tech-campus-2nd-step3/Team10_BE/issues/28",
    "body": "### ✏️ Describe\n\n### Order 도메인을 생성합니다.\r\n- Order는 상품에 관한 Order입니다.\r\n- Order에는 상태가 필요합니다.\r\n  - 주문 완료/배송 처리/배송 중/배송 완료와 같은 **상태**가 필요합니다.\r\n \r\n### OrderProduct를 생성합니다.\r\n- Order와 OrderProduct를  1:N으로 연관관계를 맺어야 합니다.\r\n- Product와 ManyToOne으로 정의하셔되고 안하셔도 될 것 같습니다. ProductId만 명시해주시면 됩니다.\n\n### ✅ TO-DO\n\n- [ ] Order를 생성할 때 해당 Product가 품절인지 아닌지 검증한다. 만약 상품 중 하나라도 품절이면 실패한다.\r\n- [ ] Member 연결한다.\r\n- [ ] 배송지는 Order에 별도로 추가해준다. (추후에 Member의 위치가 수정될 때를 대응)\n\n### 🙋🏻 More\n\n최소한만 써둔거라 작업하시면서 추가적으로 작업되는 부분이 있을 것 같습니다.",
    "comments_url": "https://api.github.com/repos/kakao-tech-campus-2nd-step3/Team10_BE/issues/28/comments",
    "author": "stopmin",
    "comments": [
      {
        "user": "amm0124",
        "created_at": "2024-10-10T05:41:30Z",
        "body": "좋습니다 ~~ "
      }
    ]
  },
  {
    "number": 25,
    "title": "JwtUtil 수정",
    "created_at": "2024-10-01T06:30:52Z",
    "closed_at": "2024-10-02T06:51:18Z",
    "labels": [
      "🛳️ ship"
    ],
    "url": "https://github.com/kakao-tech-campus-2nd-step3/Team10_BE/pull/25",
    "body": "## 해결하려는 문제가 무엇인가요?\r\n\r\n- close #24 \r\n\r\n## 어떻게 해결했나요?\r\n\r\n- jwt subject에는 id 가 들어가고, claims에는 email, role 이 들어가도록 수정하였습니다.\r\n\r\n## 코드 리뷰시 요청 사항\r\n\r\n-\r\n\r\n## 더 하고 싶은 말\r\n\r\n- memberId 추출하는 함수도 필요한지요?\r\n",
    "comments_url": "https://api.github.com/repos/kakao-tech-campus-2nd-step3/Team10_BE/issues/25/comments",
    "author": "jjt4515",
    "comments": [
      {
        "user": "jjt4515",
        "created_at": "2024-10-01T06:49:33Z",
        "body": "카카오 로그인 부분 건호님이 하기로 하셔서 제가 다른 부분 도와드리겠습니다!\r\n어디로 갈까요"
      },
      {
        "user": "stopmin",
        "created_at": "2024-10-01T07:06:07Z",
        "body": "> 카카오 로그인 부분 건호님이 하기로 하셔서 제가 다른 부분 도와드리겠습니다! 어디로 갈까요\r\n\r\n풍헌님이랑 Order/Review 분배하셔서 작업 하셔도 될 것 같습니다~~!"
      },
      {
        "user": "jjt4515",
        "created_at": "2024-10-03T07:02:57Z",
        "body": "코드가 시큐리티랑 중복되니까 계속 삭제를 반복하게 되네요... "
      }
    ]
  },
  {
    "number": 23,
    "title": "Redis 수정",
    "created_at": "2024-10-01T05:25:13Z",
    "closed_at": "2024-10-01T06:48:17Z",
    "labels": [
      "😐 P2"
    ],
    "url": "https://github.com/kakao-tech-campus-2nd-step3/Team10_BE/pull/23",
    "body": "## 해결하려는 문제가 무엇인가요?\r\n- #21 \r\n- 레디스 코드 수정\r\n\r\n## 어떻게 해결했나요?\r\n\r\n- 예외 처리\r\n- 키 패턴 조회 시 SCAN 방식 사용\r\n\r\n## 코드 리뷰시 요청 사항\r\n\r\n- 없습니다\r\n\r\n## 더 하고 싶은 말\r\n\r\n- 화이팅~\r\n",
    "comments_url": "https://api.github.com/repos/kakao-tech-campus-2nd-step3/Team10_BE/issues/23/comments",
    "author": "jjt4515",
    "comments": [
      {
        "user": "amm0124",
        "created_at": "2024-10-01T05:55:13Z",
        "body": "redis부분은 잘 만드신 거 같아요!! 저도 잘은 몰라가지고 일단 merge하시면 인증/인가 파트는 제가 나머지 담당해서 해결하겠습니다 ~.~"
      },
      {
        "user": "jjt4515",
        "created_at": "2024-10-01T06:47:42Z",
        "body": "다음 진행을 위해 머지할게용"
      }
    ]
  },
  {
    "number": 16,
    "title": "인증/인가부분 ",
    "created_at": "2024-09-26T02:33:07Z",
    "closed_at": "2024-10-01T05:01:50Z",
    "labels": [
      "🎉 feature",
      "🤨 P1"
    ],
    "url": "https://github.com/kakao-tech-campus-2nd-step3/Team10_BE/pull/16",
    "body": "## 해결하려는 문제가 무엇인가요? \r\n- Issue 12/13 \r\n\r\n## 어떻게 해결했나요?\r\n\r\n아직 하는 중입니다\r\n\r\n## 더 하고 싶은 말\r\n\r\n~일단 구현을 하고 있습니다. 로컬에 좀 있는데 아직 완성이 덜 되어가지고 일단 여기까지 PR 올립니다~\r\n\r\n## 논의사항(거의 회고+다음에 해야할 것 짬뽕 )\r\n(이라고 하고 그냥 떠들고 싶어서 씁니다!!)\r\n그냥 여기에 주절주절 쓰겠습니다 ( 술 취한 것 아님)\r\n\r\n1. accessToken 및 refreshToken 이녀석들은 프론트님들과 이야기를 해야겠어요. 쿠키 형식으로 주는지 등등\r\n2. 만약 accessToken이 만료가 되었다면, 새로운 토큰을 발급해주는 것은 security단에서 해야 할까요? 아니면 service에서 해야 할까요? 진짜 어케 해야할지 잘 모르겠어요\r\n3. 로그아웃 필터에는 redis와 같은 인메모리 db 사용해서 access Token과 refresh Token을 넣어줄 예정입니다.\r\n4. 사실 더 빡세게 구현하라면 더 할 수 있긴 한데 그건 리팩토링 시간에 하도록 하겠습니다 . .. . . .\r\n5. 그리고 공식 문서 보니까  Role << 이 녀석들 다 collection에 넣어서 관리하더라고요.. 다음에 만지작 \r\n6. JwtAuthenticationProvider<<이라는 친구도 있는데 쉽게 말해서 인증객체 관리자더라고요 이 녀석이 Jwt Token을 decoding하는 역할을 하는 객체다 어쩌고 하던데 이 친구도 가능하면 써봐야겠습니다(AbstractAuthenticationProvider의 구현체)\r\n 7. 아맞다 db에 password Encoding안하고 넣었어요 ㅇㄴ.  나중에 리팩토링 하겠습니다!! 일단 머지를 합시다 .. . .\r\n 8. 로그인 하지 않고도 로직에 접근할 수 있는 Anonymous filter도 있더라고요. 참 많다 많아\r\n 9. AbstractAuthenticationProcessingFilter의 구현체중 하나인 OAuth2LoginAuthenticationFilter도 있더라고요. 이를 통해서 카카오 로그인을 하는 것은! \r\n\r\n",
    "comments_url": "https://api.github.com/repos/kakao-tech-campus-2nd-step3/Team10_BE/issues/16/comments",
    "author": "amm0124",
    "comments": [
      {
        "user": "canyos",
        "created_at": "2024-09-26T04:09:11Z",
        "body": "코드가 맛있네요"
      }
    ]
  },
  {
    "number": 14,
    "title": "Farm 엔티티를 개발한다",
    "created_at": "2024-09-23T10:13:56Z",
    "closed_at": "2024-09-26T03:23:14Z",
    "labels": [
      "🎉 feature",
      "🤨 P1",
      "📉 DDL Required"
    ],
    "url": "https://github.com/kakao-tech-campus-2nd-step3/Team10_BE/pull/14",
    "body": "## 해결하려는 문제가 무엇인가요?\r\n\r\n- close #2 \r\n\r\n## 어떻게 해결했나요?\r\n1. Farm 엔티티를 구현합니다.\r\n- 이때, 예약이나 추후 수정에 대해서는 일단 배제하고 구현했습니다.\r\n- SQL Delete 어노테이션과 SQL Select를 통해 삭제는 물리적 삭제가 아닌 **논리적 삭제(soft delete)**로 동작하도록 설계하였습니다.\r\n- **createdAt, updateAt**(시간 관련 어노테이션) 관련해서 한번 확인 부탁드립니다. (`@UpdateTimestamp`: 업데이트 쿼리가 나가면 갱신, `@CreationTimestamp`: insert 관련 쿼리가 나가면 갱신)\r\n\r\n2. `-Request`. `-Response`로 DTO를 통일시켰습니다.\r\n\r\n3. 하나의 도메인 내에 Service, Controller 로직은, `ADMIN`, `SELLER`, `USER` 등... (아직 정확한 명칭은 미정이지만...) 에 따라서 인증/인가가 달라지기에 파일을 나누어 관리하도록 하였습니다. 판매자의 경우 `-SellerContoller`, `-SellerService`, 일반 유저 모두 가능할 경우 `-Contoller`, `-Service`로 두었습니다.\r\n\r\n4. DTO와 Entity는 `toEntity()`, `fromEntity()`로 변환합니다.\r\n\r\n## 코드 리뷰시 요청 사항\r\n- 인증 인가 부분이 마무리되는 대로 연결하는 작업 필요할 것 같습니다.\r\n- 아직 없어서 일단 여기까지 하고 PR올립니다 :D\r\n\r\n",
    "comments_url": "https://api.github.com/repos/kakao-tech-campus-2nd-step3/Team10_BE/issues/14/comments",
    "author": "stopmin",
    "comments": [
      {
        "user": "canyos",
        "created_at": "2024-09-26T03:22:58Z",
        "body": "좋습니다. 지민님 드래프트 참고하면서 저도 코드 짰더니 대부분 비슷한거 같아요.\r\n궁금한건 제가 알기로 Spring Jpa에서 camel표기법 변수는 자동으로 column명이 snake표기법으로 바뀌는 걸로 알고 있는데\r\n가독성면에서 일부러 쓰신건지 궁금하네요."
      },
      {
        "user": "stopmin",
        "created_at": "2024-09-26T11:51:05Z",
        "body": "> 좋습니다. 지민님 드래프트 참고하면서 저도 코드 짰더니 대부분 비슷한거 같아요. 궁금한건 제가 알기로 Spring Jpa에서 camel표기법 변수는 자동으로 column명이 snake표기법으로 바뀌는 걸로 알고 있는데 가독성면에서 일부러 쓰신건지 궁금하네요.\r\n\r\n아 맞습니다~~!! 근데 제가`@Column`으로 붙인건 사실 별생각 없이 붙여줬습니다 ㅠㅠ 간혹가다 id와 같은 부분들은 table서 다른 이름을 주고자 `farmer_id`와 같이 별개로 `@Column(name=\"farmer_id\")` 직접 설정해주기도 합니다!!(jpa와 별개로 name으로 직접 명시할 때는 스네이크 케이스를 사용해야합니다.) 다만 이번 케이스는 그냥 제가 별생각없이 붙였습니다!!! 별로 신경쓰지 않으셔도 될거같습니다!\r\n\r\n통일성 면에서 문제가 된다면 지우도록 하겠습니다~~"
      }
    ]
  },
  {
    "number": 10,
    "title": "1주차 최종 코드 review PR ",
    "created_at": "2024-09-20T15:14:45Z",
    "closed_at": "2024-09-22T11:18:15Z",
    "labels": [],
    "url": "https://github.com/kakao-tech-campus-2nd-step3/Team10_BE/pull/10",
    "body": "안녕하세요 코치님!! 앞으로 잘 부탁드립니다😀\r\n이번주는 디자인 작업과 기획 마무리 작업으로 인해서 대부분 초기 설정 작업 진행했습니다!!\r\n\r\n## 코드 리뷰시 요청 사항\r\n1. Exception Advice를 정의했습니다.\r\n- 이 부분에서 Application단의 에러와 Business 에 대한 에러를 핸들링하도록 두었습니다.\r\n- 그런데 이 외에도 혹시 다뤄야할 에러가 있을지 궁금합니다.\r\n\r\n2. 로그인 전략\r\n- jwt 서버 인증과 카카오톡 서버 인증을 하려고 합니다.\r\n카카오톡 서버에서 받아온 토큰을 기반으로 스프링 서버 jwt 토큰을 만들려고 하는데, 혹시 또 다른 방식이 있는지 궁금합니다!\r\n",
    "comments_url": "https://api.github.com/repos/kakao-tech-campus-2nd-step3/Team10_BE/issues/10/comments",
    "author": "amm0124",
    "comments": [
      {
        "user": "jadie0319",
        "created_at": "2024-09-22T11:16:18Z",
        "body": "안녕하세요! Step3 멘토를 맡게된 제이디 입니다.\r\nStep3 기간동안 잘부탁드립니다!\r\n코드리뷰나 답변에서 궁금하신점이 있으시면 편하게 슬랙으로 질문 주세요!\r\n\r\n> Exception Advice를 정의했습니다.\r\n\r\nApplication 과 Business 에러로 나눠서 다루는 이유가 있을까요? 코드만으로 예상해봤을 땐 직접 제어할 수 있는 에러(Business) 와 제어할 수 없는 에러(Application)를 나눈 것 같기도 하네요. 그렇다면 일단은 더 다뤄야할 에러는 없을 것 같아요~ 일단은 에러가 발생했을 때 사용자에게 어떤 값을 전달해 줄지를 정한것 만으로도 충분해보입니다.\r\n\r\n그런데 만약에 쿼리에 문제가 있어서 에러가 발생했을땐 어떤 ExceptionHandler 가 실행되는지 궁금합니다.\r\n\r\n> 로그인 전략\r\n\r\n다른 인증 방식을 사용해본적이 없어서 다른 방식은 생각나는게 없네요. 현재 생각하신 방식이 자주 사용되는 방식이라 검색해도 자료가 많이 나올 것 같아요! 지금 방식으로 진행하시면 될 것 같아요! \r\n카카오톡 서버 인증 JWT 라는 키워드로 검색하면 관련 자료 많이 나오니 참고하시면 될 것 같아요 🙂"
      }
    ]
  },
  {
    "number": 9,
    "title": "1주차 최종코드 리뷰 PR",
    "created_at": "2024-09-20T15:08:33Z",
    "closed_at": "2024-09-20T15:08:41Z",
    "labels": [],
    "url": "https://github.com/kakao-tech-campus-2nd-step3/Team10_BE/pull/9",
    "body": null,
    "comments_url": "https://api.github.com/repos/kakao-tech-campus-2nd-step3/Team10_BE/issues/9/comments",
    "author": "amm0124",
    "comments": [
      {
        "user": "stopmin",
        "created_at": "2024-09-20T15:11:59Z",
        "body": "실수로 머지해서 다시 엽니당~~"
      }
    ]
  }
]