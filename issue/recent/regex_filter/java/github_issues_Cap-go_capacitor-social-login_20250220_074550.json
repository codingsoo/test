[
  {
    "number": 131,
    "title": "Version 1.2.6 error with Java runtime",
    "created_at": "2025-02-12T11:06:33Z",
    "closed_at": "2025-02-18T17:44:08Z",
    "labels": [],
    "url": "https://github.com/Cap-go/capacitor-social-login/issues/131",
    "body": "Hello,\n\nthere is an issues while compiling the newest 1.2.6 version in Android SKD.\n\n> Task :capgo-capacitor-social-login:compileDebugJavaWithJavac FAILED\nCaused by: java.lang.IllegalArgumentException: error: invalid source release: 21\n\nThe package wants to use Java 21, while the latest supported runtime is 17.",
    "comments_url": "https://api.github.com/repos/Cap-go/capacitor-social-login/issues/131/comments",
    "author": "Tomjech16",
    "comments": [
      {
        "user": "ashishzv",
        "created_at": "2025-02-14T12:32:07Z",
        "body": "use \"@capacitor/core\": \"6.2.0\","
      },
      {
        "user": "shaniqwa",
        "created_at": "2025-02-18T09:19:56Z",
        "body": "is there support for \"@capacitor/core\": \"^7.0.0\", ?"
      },
      {
        "user": "riderx",
        "created_at": "2025-02-18T17:44:08Z",
        "body": "1.2.6 is for capacitor 7, i will upgrade the number to follow the name of our others plugins"
      }
    ]
  },
  {
    "number": 130,
    "title": "Invalid config for any of the providers causes each one to fail",
    "created_at": "2025-02-11T21:09:39Z",
    "closed_at": "2025-02-18T17:57:05Z",
    "labels": [],
    "url": "https://github.com/Cap-go/capacitor-social-login/issues/130",
    "body": "I was struggling with setting up the android because of some weird error:\n`{\"save\":false,\"callbackId\":\"not_relevant\",\"pluginId\":\"SocialLogin\",\"methodName\":\"login\",\"success\":false,\"error\":{\"message\":\"Cannot find provider 'facebook'\"}}`\nor\n`{\"save\":false,\"callbackId\":\"not_relevant\",\"pluginId\":\"SocialLogin\",\"methodName\":\"login\",\"success\":false,\"error\":{\"message\":\"Cannot find provider 'google'\"}}`\n\nThe initialize method I was calling:\n```typescript\nawait SocialLogin.initialize({\n  google: {\n    webClientId: environment.oauth2.client_id,\n    iOSClientId: environment.google.iosClientId,\n    iOSServerClientId: environment.google.iosClientId\n  },\n  facebook: {\n    appId: environment.facebook.app_id,\n    clientToken: environment.facebook.client_token\n  },\n  apple: {\n    clientId: environment.apple.client_id,\n    redirectUrl: ''\n  }\n});\n```\n\nWhich results to fail because `redirectUrl` is empty and for android this field is required.\nI omitted this because we're not interested in apple login on android.\n\nI think you should not throw an error, or at least register Google and Facebook if correct and disable the Apple login.\nThis costed me a 3 hours of debugging 😄 ",
    "comments_url": "https://api.github.com/repos/Cap-go/capacitor-social-login/issues/130/comments",
    "author": "pkawula",
    "comments": [
      {
        "user": "riderx",
        "created_at": "2025-02-18T17:57:05Z",
        "body": "We cannot individually reject one that why do reject all, but i think you can init multiple time and split each of them.\nThanks for the feedback"
      }
    ]
  },
  {
    "number": 124,
    "title": "Use official capacitor versioning",
    "created_at": "2025-02-04T09:04:54Z",
    "closed_at": "2025-02-18T17:59:53Z",
    "labels": [],
    "url": "https://github.com/Cap-go/capacitor-social-login/issues/124",
    "body": "I'd recommend to follow capacitor official convention for plugin version. It'd be great to bump this plugin to v7 as it's now using capacitor 7.\n\nI can open a PR if you agree with that :) ",
    "comments_url": "https://api.github.com/repos/Cap-go/capacitor-social-login/issues/124/comments",
    "author": "MaximeSIMET",
    "comments": [
      {
        "user": "riderx",
        "created_at": "2025-02-18T17:59:53Z",
        "body": "Agree just done it :)"
      }
    ]
  },
  {
    "number": 109,
    "title": "Login fails if profile doesn't have last name present for google login",
    "created_at": "2025-01-19T22:17:18Z",
    "closed_at": "2025-01-24T10:42:48Z",
    "labels": [],
    "url": "https://github.com/Cap-go/capacitor-social-login/issues/109",
    "body": "- Use version `0.0.68-alpha.7` \n- Create google profile without last name\n\nTry calling in login method. Exception is thrown `Invalid or missing \"family_name\" property.` \n\nExpectation:\n\nPlease do not kill login process.",
    "comments_url": "https://api.github.com/repos/Cap-go/capacitor-social-login/issues/109/comments",
    "author": "ashishc",
    "comments": [
      {
        "user": "WcaleNieWolny",
        "created_at": "2025-01-24T10:42:08Z",
        "body": "What platform? Also, please use the latest version of the plugin. Please migrate AWAY from the alpha version"
      },
      {
        "user": "WcaleNieWolny",
        "created_at": "2025-01-24T10:42:48Z",
        "body": "I am closing this issue. The alpha version is no longer supported, and no bugs will be resolved relating to it. Please migrate to the main version and if the issue persists, open a new issue. "
      }
    ]
  },
  {
    "number": 99,
    "title": "Facebook web not working when user is not already logged in",
    "created_at": "2025-01-12T00:38:44Z",
    "closed_at": "2025-01-16T14:43:58Z",
    "labels": [],
    "url": "https://github.com/Cap-go/capacitor-social-login/issues/99",
    "body": "Facebook provider is throwing an error on web when user is not already logged in. It does work fine when the user was already logged in. The same happens on iOS when there is no native Facebook app installed and it fallbacks to web login.\r\n\r\nThe error is `Error: Facebook login failed`",
    "comments_url": "https://api.github.com/repos/Cap-go/capacitor-social-login/issues/99/comments",
    "author": "co-dax",
    "comments": [
      {
        "user": "riderx",
        "created_at": "2025-01-13T18:03:30Z",
        "body": "do it's linked to your issue with webview relead?"
      },
      {
        "user": "co-dax",
        "created_at": "2025-01-16T14:43:58Z",
        "body": "Yes that was the issue.\nThanks!"
      }
    ]
  },
  {
    "number": 85,
    "title": "Facebook refresh is not implemented",
    "created_at": "2024-12-17T13:08:58Z",
    "closed_at": "2025-01-03T11:35:05Z",
    "labels": [],
    "url": "https://github.com/Cap-go/capacitor-social-login/issues/85",
    "body": "Hi,\r\n\r\nI need to be able to refresh token for Facebook because of iOS returns valid token only for 1 hour. But when I want to use refresh method, plugin tells me that it is not implemented. \r\n\r\nHow to refresh tokens then?\r\n\r\nThanks",
    "comments_url": "https://api.github.com/repos/Cap-go/capacitor-social-login/issues/85/comments",
    "author": "cihakmar",
    "comments": [
      {
        "user": "WcaleNieWolny",
        "created_at": "2025-01-01T18:30:07Z",
        "body": "CC: @riderx "
      },
      {
        "user": "cihakmar",
        "created_at": "2025-01-06T17:14:59Z",
        "body": "@WcaleNieWolny thanks for your implementation but refresh method returns only `accessToken`:  `{\"idToken\":null,\"expiresIn\":null,\"refreshToken\":null,\"accessToken\":\"did6ZIb2Qeg....\"}`. Is it possible to edit refresh method to return all values?\r\n\r\nThanks"
      },
      {
        "user": "WcaleNieWolny",
        "created_at": "2025-01-06T17:22:02Z",
        "body": "I am not sure that idToken or refreshToken are available. As for `expiresIn`, I tried to implement it, but it returned some nonsensical data (it said that the token expires in the year 4005)."
      },
      {
        "user": "cihakmar",
        "created_at": "2025-01-06T17:24:09Z",
        "body": "Can you please try to implement `idToken `. I do not know why, but on iOS I need to use this token instead of accessToken. also in first login I am using this token... "
      },
      {
        "user": "riderx",
        "created_at": "2025-01-07T14:19:00Z",
        "body": "It would be nice to give us more info on why you need it, as facebook work for others users :)"
      },
      {
        "user": "cihakmar",
        "created_at": "2025-01-08T08:27:17Z",
        "body": "@riderx When I use Facebook login on iOS it`s response includes idToken and access token. But when I try to decode accessToken it is not valid jet, but idToken is..."
      },
      {
        "user": "WcaleNieWolny",
        "created_at": "2025-01-08T09:38:50Z",
        "body": "That is the intended behavior. Could you tell me why do you believe that this is a bug?"
      },
      {
        "user": "WcaleNieWolny",
        "created_at": "2025-01-08T09:40:22Z",
        "body": "Also, perhaps you should use limited login?\n\nFrom what I observed, when limited login is turned off, Facebook provider will return access token (which will not be a valid JWT). When using limited login, it will return idToken (valid JWT)"
      },
      {
        "user": "cihakmar",
        "created_at": "2025-01-10T10:54:21Z",
        "body": "@WcaleNieWolny I used limitedLogin, but response of refresh is still without idToken...\r\n"
      }
    ]
  },
  {
    "number": 80,
    "title": "The scope of Sign in with Apple in the Readme is incorrect (invalid_request - Invalid client scope)",
    "created_at": "2024-12-04T14:02:06Z",
    "closed_at": "2025-01-01T20:53:32Z",
    "labels": [],
    "url": "https://github.com/Cap-go/capacitor-social-login/issues/80",
    "body": "Please update the Readme.\r\n\r\n```\r\nconst res = await SocialLogin.login({\r\n  provider: 'apple',\r\n  options: {\r\n    scopes: ['email', 'profile'],    // incorrect -> ['email', 'name']\r\n  },\r\n});\r\n\r\n```\r\n\r\nAlso, \"nonce\" is an recommended parameter for Sign with Apple.\r\nCan you add it in the Readme guide ? \r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "comments_url": "https://api.github.com/repos/Cap-go/capacitor-social-login/issues/80/comments",
    "author": "badung7576x",
    "comments": [
      {
        "user": "veneliniliev",
        "created_at": "2024-12-12T10:21:26Z",
        "body": "@riderx ping :)"
      }
    ]
  },
  {
    "number": 71,
    "title": "Fix of facebook profile fetching on Android API 30+",
    "created_at": "2024-11-29T10:13:05Z",
    "closed_at": "2024-11-29T11:57:40Z",
    "labels": [],
    "url": "https://github.com/Cap-go/capacitor-social-login/pull/71",
    "body": "The plugin will not return accessToken but not the profile data on Android API 30+.\r\n\r\nIt will crash on \"android.os.NetworkOnMainThreadException\". \r\n\r\nI fixed the code to explicitly run the request on a background thread.\r\n",
    "comments_url": "https://api.github.com/repos/Cap-go/capacitor-social-login/issues/71/comments",
    "author": "kasik96",
    "comments": [
      {
        "user": "riderx",
        "created_at": "2024-11-29T11:57:33Z",
        "body": "thanks a lot"
      }
    ]
  },
  {
    "number": 67,
    "title": "Sign in with Apple - Private Relay Email",
    "created_at": "2024-11-18T21:41:42Z",
    "closed_at": "2024-11-25T15:04:40Z",
    "labels": [],
    "url": "https://github.com/Cap-go/capacitor-social-login/issues/67",
    "body": "Hi there,\r\n\r\nThanks for the work on this plugin. \r\n\r\nI was implementing Apple Id into my capacitor app and passing \"email\" and \"profile\" scopes.\r\n\r\nIf I choose to share my email then \"email\" comes through. \r\n\r\nHowever if I pick the hide my email it shows a private relay email address - e.g. ****@privaterelay.appleid.com but then the \"email\" field is empty.\r\n\r\nI'm not sure this is the expected behaviour or an issue? \r\n",
    "comments_url": "https://api.github.com/repos/Cap-go/capacitor-social-login/issues/67/comments",
    "author": "DrBeza",
    "comments": [
      {
        "user": "piotr-cz",
        "created_at": "2024-11-23T21:35:33Z",
        "body": "The email value is never empty when using `@capacitor-community/apple-sign-in` package.\r\nIt's either real email or `xxxxxxxxxx@privaterelay.appleid.com`"
      },
      {
        "user": "DrBeza",
        "created_at": "2024-11-23T23:14:45Z",
        "body": "I'm not seeing this behaviour with `\"@capgo/capacitor-social-login\": \"^0.0.68-alpha.8\",`. I have also tried `0.0.68` previously.\r\n\r\nI have just tried again now on a fresh simulator device running iPhone 16 (18.1). \r\n\r\nI will try to test this against a real device next week in case the simulator is the problem.\r\n\r\nMy app has \"Sign in with Apple\" enabled under \"Signing & Capabilities\".\r\n\r\n```\r\n        await SocialLogin.initialize({\r\n            apple: {},\r\n        });\r\n\r\n        const response = await SocialLogin.login({\r\n            provider: 'apple',\r\n            options: {\r\n                scopes: ['email', 'profile'],\r\n            },\r\n        });\r\n\r\n        console.log(JSON.stringify(response));\r\n```\r\n\r\nMy response from `login` is:\r\n\r\n```{\"result\":{\"idToken\":\"<removed>\",\"accessToken\":{\"token\":\"<removed>\"},\"profile\":{\"givenName\":\"<removed>\",\"familyName\":\"<removed>\",\"user\":\"<removed>\",\"email\":\"\"}},\"provider\":\"apple\"}```\r\n\r\nAs I mentioned in the first post if I select to allow my email, then email is populated.\r\n\r\nHere are the lines I'm seeing in the App log:\r\n\r\n```\r\n⚡️  To Native ->  SocialLogin initialize 42571992\r\nNo saved state found\r\n⚡️  TO JS undefined\r\n⚡️  To Native ->  SocialLogin login 42571993\r\nSuccessfully saved user info locally\r\nApple persistState: {\"refreshToken\":\"\",\"idToken\":\"<removed>\",\"accessToken\":\"\"}\r\n⚡️  TO JS {\"result\":{\"idToken\":\"<removed>\",\"accessToken\":{\"token\":\"<removed>\r\n⚡️  [log] - {\"result\":{\"idToken\":\"<removed>\",\"accessToken\":{\"token\":\"<removed>\"},\"profile\":{\"givenName\":\"<removed>\",\"familyName\":\"<removed>\",\"user\":\"<removed>\",\"email\":\"\"}},\"provider\":\"apple\"}\r\n```\r\n\r\n"
      },
      {
        "user": "DrBeza",
        "created_at": "2024-11-25T15:04:40Z",
        "body": "This appears to be working as stated on a real phone. \r\n\r\nI am guessing using the simulator was the problem here."
      }
    ]
  },
  {
    "number": 62,
    "title": "fix(apple): added missing nonce config",
    "created_at": "2024-11-15T00:12:23Z",
    "closed_at": "2024-11-15T10:20:29Z",
    "labels": [],
    "url": "https://github.com/Cap-go/capacitor-social-login/pull/62",
    "body": "Even though the plugin lets you configure nonce for the Apple provider, the plugin simply ignores this when making the native requests. I added the appropriate code to fix this for login requests.",
    "comments_url": "https://api.github.com/repos/Cap-go/capacitor-social-login/issues/62/comments",
    "author": "mattk-mke",
    "comments": [
      {
        "user": "riderx",
        "created_at": "2024-11-15T10:20:38Z",
        "body": "thanks for this"
      }
    ]
  },
  {
    "number": 51,
    "title": "Effect of `npm run prettier`",
    "created_at": "2024-11-07T11:29:01Z",
    "closed_at": "2024-11-08T18:16:17Z",
    "labels": [],
    "url": "https://github.com/Cap-go/capacitor-social-login/pull/51",
    "body": "Or `npm run prettier -- --write` to be precise\r\n\r\nI think it's quite important as I usually run prettier on new pull requests and without this on main branch diffs would also show formatting changes,",
    "comments_url": "https://api.github.com/repos/Cap-go/capacitor-social-login/issues/51/comments",
    "author": "piotr-cz",
    "comments": [
      {
        "user": "riderx",
        "created_at": "2024-11-08T18:16:13Z",
        "body": "the correct command to run is `npm run fmt` thanks for running this one"
      },
      {
        "user": "piotr-cz",
        "created_at": "2024-11-08T20:06:18Z",
        "body": "yes, but `npm run fmt` fails on eslint now"
      }
    ]
  },
  {
    "number": 44,
    "title": "Offline access",
    "created_at": "2024-10-31T05:26:43Z",
    "closed_at": "2024-11-10T06:38:21Z",
    "labels": [
      "state: blocked"
    ],
    "url": "https://github.com/Cap-go/capacitor-social-login/pull/44",
    "body": null,
    "comments_url": "https://api.github.com/repos/Cap-go/capacitor-social-login/issues/44/comments",
    "author": "WcaleNieWolny",
    "comments": [
      {
        "user": "WcaleNieWolny",
        "created_at": "2024-10-31T05:29:25Z",
        "body": "Do not merge it just yet, offline access is a WiP"
      },
      {
        "user": "riderx",
        "created_at": "2024-10-31T05:50:21Z",
        "body": "We need to support same min version as capacitor"
      },
      {
        "user": "WcaleNieWolny",
        "created_at": "2024-11-10T06:38:21Z",
        "body": "Closing in favor of #56 "
      }
    ]
  },
  {
    "number": 38,
    "title": "Project License",
    "created_at": "2024-10-27T11:07:20Z",
    "closed_at": "2024-10-29T15:07:31Z",
    "labels": [],
    "url": "https://github.com/Cap-go/capacitor-social-login/issues/38",
    "body": "Hi,\r\n\r\nI am interested in using this plugin in one of my project. I have searched for license info in the repo but I can't find it in the usual locations.\r\n\r\nAdding the license the project is published under would help me to know if using this plugin is an option.\r\n\r\nCould you add license info into the repo?\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/Cap-go/capacitor-social-login/issues/38/comments",
    "author": "AirGoatOne",
    "comments": [
      {
        "user": "WcaleNieWolny",
        "created_at": "2024-10-27T11:20:53Z",
        "body": "I believe that @riderx has the sole power to decide on the license.\r\n\r\nThank you for bringing this issue to our attention"
      },
      {
        "user": "riderx",
        "created_at": "2024-10-29T15:07:31Z",
        "body": "Good call i forgot to add it, added MIT"
      }
    ]
  },
  {
    "number": 34,
    "title": "Apple login on iOS returns only an identityToken",
    "created_at": "2024-10-23T06:29:24Z",
    "closed_at": "2024-10-25T09:04:46Z",
    "labels": [],
    "url": "https://github.com/Cap-go/capacitor-social-login/issues/34",
    "body": "Tried this plugin yesterday, works on android but on iOS ( 15+ ) device tested it ever only returns an identityToken. Repeated the stop using Apple ID and login cycle like 20 times, whilst using the old cordova-plugin-sign-in-with-apple retuns the user data on the initial login:\r\n\r\n```\r\n        await SocialLogin.initialize({\r\n          apple: {\r\n            clientId,\r\n          },\r\n        });\r\n\r\n        const { result } = (await SocialLogin.login({\r\n          provider: \"apple\",\r\n          options: {\r\n            scopes: [\"email\", \"profile\"],\r\n          },\r\n        })) as { result: AppleProviderResponse };\r\n```\r\n",
    "comments_url": "https://api.github.com/repos/Cap-go/capacitor-social-login/issues/34/comments",
    "author": "csotiMatyas",
    "comments": [
      {
        "user": "csotiMatyas",
        "created_at": "2024-10-23T07:01:19Z",
        "body": "Went through the source code and the login function of the apple provider is not using the payload argument ( yes they are hard coded here => request.requestedScopes ) , so the docs are a bit misleading.\r\n\r\n```\r\nfunc login(payload: [String: Any], completion: @escaping (Result<AppleProviderResponse, Error>) -> Void) {\r\n        self.completion = completion\r\n\r\n        let appleIDProvider = ASAuthorizationAppleIDProvider()\r\n        let request = appleIDProvider.createRequest()\r\n        request.requestedScopes = [.fullName, .email]\r\n\r\n        let authorizationController = ASAuthorizationController(authorizationRequests: [request])\r\n        authorizationController.delegate = self\r\n        authorizationController.presentationContextProvider = self\r\n        authorizationController.performRequests()\r\n    }\r\n\r\n\r\n```"
      },
      {
        "user": "csotiMatyas",
        "created_at": "2024-10-23T07:22:07Z",
        "body": "So as far as I can read swift: \r\n\r\nThe apple provider does not take a clientId param, as the docs suggests:\r\n\r\n```\r\n           if let appleSettings = call.getObject(\"apple\") {\r\n            if let redirectUrl = appleSettings[\"redirectUrl\"] as? String {\r\n                apple.initialize(redirectUrl: redirectUrl)\r\n                initialized = true\r\n            } else {\r\n                apple.initialize()\r\n                initialized = true\r\n            }\r\n        }\r\n```"
      },
      {
        "user": "csotiMatyas",
        "created_at": "2024-10-23T07:23:36Z",
        "body": "And the authorization controller without a redirectUrl ( which should be android requirement only ), will only ever return identityToken:\r\n\r\n```\r\n     func authorizationController(controller: ASAuthorizationController, didCompleteWithAuthorization authorization:       ASAuthorization) {\r\n        if let appleIDCredential = authorization.credential as? ASAuthorizationAppleIDCredential {\r\n            let userIdentifier = appleIDCredential.user\r\n            let fullName = appleIDCredential.fullName\r\n            let email = appleIDCredential.email\r\n\r\n            //            let response = AppleProviderResponse(\r\n            //                user: userIdentifier,\r\n            //                email: email,\r\n            //                givenName: fullName?.givenName,\r\n            //                familyName: fullName?.familyName,\r\n            //                identityToken: String(data: appleIDCredential.identityToken ?? Data(), encoding: .utf8) ?? \"\",\r\n            //                authorizationCode: String(data: appleIDCredential.authorizationCode ?? Data(), encoding: .utf8) ?? \"\"\r\n            //            )\r\n\r\n            let errorCompletion: ((Result<AppleProviderResponse, AppleProviderError>) -> Void) = { result in\r\n                do {\r\n                    let finalResult = try result.get()\r\n                    self.completion?(.success(finalResult))\r\n                } catch {\r\n                    self.completion?(.failure(error))\r\n                }\r\n            }\r\n\r\n            let authorizationCode = String(data: appleIDCredential.authorizationCode ?? Data(), encoding: .utf8) ?? \"\"\r\n            let identityToken = String(data: appleIDCredential.identityToken ?? Data(), encoding: .utf8) ?? \"\"\r\n\r\n            if !self.redirectUrl.isEmpty {\r\n                let firstName = fullName?.givenName ?? \"Jhon\"\r\n                let lastName = fullName?.familyName ?? \"Doe\"\r\n\r\n                if let _ = fullName?.givenName {\r\n                    sendRequest(code: authorizationCode, identityToken: identityToken, email: email ?? \"\", firstName: firstName, lastName: lastName, completion: errorCompletion, skipUser: false)\r\n                } else {\r\n                    sendRequest(code: authorizationCode, identityToken: identityToken, email: email ?? \"\", firstName: firstName, lastName: lastName, completion: errorCompletion, skipUser: true)\r\n                }\r\n            } else {\r\n                do {\r\n                    try self.persistState(idToken: identityToken, refreshToken: \"\", accessToken: \"\")\r\n                    let appleResponse = AppleProviderResponse(identityToken: identityToken)\r\n                    completion?(.success(appleResponse))\r\n                    return\r\n                } catch {\r\n                    completion?(.failure(AppleProviderError.specificJsonWritingError(error)))\r\n                    return\r\n                }\r\n            }\r\n            // completion?(.success(response))\r\n        }\r\n    }\r\n```"
      },
      {
        "user": "csotiMatyas",
        "created_at": "2024-10-23T07:29:53Z",
        "body": "Typescript types are also a mess, will submit a PR if my time allows."
      },
      {
        "user": "csotiMatyas",
        "created_at": "2024-10-23T07:44:27Z",
        "body": "Nevermind, apple provider can ever return \r\n```\r\n\r\nstruct AppleProviderResponse {\r\n    //    let user: String\r\n    let identityToken: String\r\n}\r\n\r\n```"
      },
      {
        "user": "riderx",
        "created_at": "2024-10-23T18:51:46Z",
        "body": "I fixed the requested Scopes not taking in account, thanks!\r\nfor clientID we put it in the doc to simplify that it's require to have object Apple to init apple properly"
      },
      {
        "user": "riderx",
        "created_at": "2024-10-23T18:52:00Z",
        "body": "just sent some fix tell me if that help"
      },
      {
        "user": "csotiMatyas",
        "created_at": "2024-10-24T06:24:28Z",
        "body": "@riderx Hey, thanks for the update, the main problem is the return of the apple provider which is right now set to only contain the identityToken\r\n\r\n\r\n```\r\nstruct AppleProviderResponse {\r\n    //    let user: String\r\n    let identityToken: String\r\n}\r\n\r\n```\r\n\r\nIt should return the full appleIDCredential that is currently commented in the authorizationController \r\n\r\n` // MARK: - ASAuthorizationControllerDelegate`\r\n\r\n\r\n```\r\n            //            let response = AppleProviderResponse(\r\n            //                user: userIdentifier,\r\n            //                email: email,\r\n            //                givenName: fullName?.givenName,\r\n            //                familyName: fullName?.familyName,\r\n            //                identityToken: String(data: appleIDCredential.identityToken ?? Data(), encoding: .utf8) ?? \"\",\r\n            //                authorizationCode: String(data: appleIDCredential.authorizationCode ?? Data(), encoding: .utf8) ?? \"\"\r\n            //            )\r\n```\r\n\r\nOn the first login apple sends the users info, subsequent request will return only an identity token.\r\n"
      },
      {
        "user": "riderx",
        "created_at": "2024-10-24T17:51:40Z",
        "body": "Thanks for the report, should be good now"
      },
      {
        "user": "csotiMatyas",
        "created_at": "2024-10-25T09:04:25Z",
        "body": "It works as expected now, thank you! This was quick @riderx "
      }
    ]
  },
  {
    "number": 30,
    "title": "Feature request: make it work on web",
    "created_at": "2024-10-18T16:38:15Z",
    "closed_at": "2024-10-19T11:01:21Z",
    "labels": [],
    "url": "https://github.com/Cap-go/capacitor-social-login/issues/30",
    "body": "It is great that we can login via socials on Android and iOS! It'd be even better if it worked in a desktop browser too",
    "comments_url": "https://api.github.com/repos/Cap-go/capacitor-social-login/issues/30/comments",
    "author": "mpienkowski",
    "comments": [
      {
        "user": "WcaleNieWolny",
        "created_at": "2024-10-19T11:01:14Z",
        "body": "Duplicate of #16 "
      }
    ]
  },
  {
    "number": 29,
    "title": "AuthenticationToken not returned in FB Limited Login",
    "created_at": "2024-10-17T14:30:24Z",
    "closed_at": "2024-11-28T14:10:14Z",
    "labels": [],
    "url": "https://github.com/Cap-go/capacitor-social-login/issues/29",
    "body": "Description: In the SocialLoginPlugin.swift file, the authenticationToken is not returned when performing a Facebook Limited Login. Although the token is successfully retrieved in the FacebookLoginResponse, only the accessToken and profile fields are included in the response, which prevents the front-end from accessing the authenticationToken required for further authentication steps.\r\n\r\nThis issue specifically affects scenarios where Facebook Limited Login is used.\r\n\r\nSteps to reproduce:\r\n\r\nInitiate a Facebook Limited Login using the SocialLoginPlugin with the limited login option set in the payload.\r\nObserve the response object returned to the front-end.\r\nNotice that authenticationToken is missing, while accessToken and profile are present.\r\nExpected Behavior: The response object should include the authenticationToken field, along with the accessToken and profile, especially when using Facebook Limited Login.\r\n\r\nCurrent Behavior: The authenticationToken is not returned in the login result for Facebook when using Limited Login. The relevant code section omits this field.\r\n\r\nAffected Code: In the file SocialLoginPlugin.swift, the method handleLoginResult currently returns the following for Facebook:\r\n\r\n\r\n```\r\nelse if let facebookResponse = response as? FacebookLoginResponse {\r\n    call.resolve([\r\n        \"provider\": \"facebook\",\r\n        \"result\": [\r\n            \"accessToken\": facebookResponse.accessToken,\r\n            \"profile\": facebookResponse.profile\r\n        ]\r\n    ])\r\n}\r\n```\r\nProposed Fix: Modify the handleLoginResult method to include the authenticationToken in the response for Facebook Limited Login:\r\n\r\n\r\n```\r\nelse if let facebookResponse = response as? FacebookLoginResponse {\r\n    call.resolve([\r\n        \"provider\": \"facebook\",\r\n        \"result\": [\r\n            \"accessToken\": facebookResponse.accessToken,\r\n            \"profile\": facebookResponse.profile,\r\n            \"authenticationToken\": facebookResponse.authenticationToken ?? \"\"\r\n        ]\r\n    ])\r\n}\r\n```\r\n\r\n The authenticationToken is a critical part of Facebook Limited Login and is required for verifying the login state. Please ensure the authenticationToken is properly returned to the front-end, allowing full access to the necessary authentication details when using Facebook Limited Login.",
    "comments_url": "https://api.github.com/repos/Cap-go/capacitor-social-login/issues/29/comments",
    "author": "Linknpay",
    "comments": [
      {
        "user": "riderx",
        "created_at": "2024-10-22T07:39:09Z",
        "body": "Thanks for the report, it should be good now !"
      },
      {
        "user": "riderx",
        "created_at": "2024-10-25T14:07:40Z",
        "body": "i realize the return value didn't follow the definition it's now fixed"
      }
    ]
  },
  {
    "number": 18,
    "title": "refactor(docs): stop blocking the mount context",
    "created_at": "2024-10-04T03:53:07Z",
    "closed_at": "2024-10-05T04:23:17Z",
    "labels": [],
    "url": "https://github.com/Cap-go/capacitor-social-login/pull/18",
    "body": "stop block mounting as a better practice on docs examples",
    "comments_url": "https://api.github.com/repos/Cap-go/capacitor-social-login/issues/18/comments",
    "author": "reslear",
    "comments": [
      {
        "user": "WcaleNieWolny",
        "created_at": "2024-10-05T04:23:14Z",
        "body": "LGTM 🚀 "
      }
    ]
  }
]