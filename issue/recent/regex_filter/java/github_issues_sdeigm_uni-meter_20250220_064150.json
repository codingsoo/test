[
  {
    "number": 37,
    "title": "Configurable default power fallback value",
    "created_at": "2025-02-08T01:33:11Z",
    "closed_at": "2025-02-09T06:00:11Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/sdeigm/uni-meter/issues/37",
    "body": "Hey,\n\nich hab ein Tasmota IR-Lesekopf angebunden.\nDa ich aber keine direkte Stromquelle im Zählerschrank habe, hab ich den ESP mit Tasmota an einer Powerbank. Die kann u.a. nach einer Dauer X leer sein.\n\nWäre es ggf möglich, für den Fall, dass via Tasmota nichts mehr kommt, man einen Default-Wert einstellen kann?\n\nVielen Dank\nDominic",
    "comments_url": "https://api.github.com/repos/sdeigm/uni-meter/issues/37/comments",
    "author": "twitnic",
    "comments": [
      {
        "user": "sdeigm",
        "created_at": "2025-02-09T05:15:33Z",
        "body": "Hallo Dominic, \n\ndas sollte kein Problem sein. Heute fällt das uni-meter wenn es eine Minute keinen Werte mehr erhält auf den Default-Wert 0 Watt zurück. Das werde ich konfigurierbar machen.\n\nDen Fall, daß das Input-Device sozusagen ab und zu sozusagen \"geplant\" ausfällt wie wenn bei dir die Powerbank leer ist, hatte ich so noch nicht bedacht. Dann wird ja auch das Log ziemlich mit Fehlermeldungen zugemüllt. Das müsste ich in dem Zusammenhang dann irgendwie auch noch mal verbessern.\n\nGruß\nStefan"
      },
      {
        "user": "sdeigm",
        "created_at": "2025-02-09T06:05:34Z",
        "body": "In der Version 1.0.7 kann man das nun folgendermassen konfigurieren:\n\n```\nuni-meter {\n  output-devices {\n    shelly-pro3em {\n      forget-interval = 1m\n\n      default-power-total = 0\n\n      default-power-l1 = 0\n      default-power-l2 = 0\n      default-power-l3 = 0\n    }\n  }\n}\n```\n"
      }
    ]
  },
  {
    "number": 31,
    "title": "Add Shelly.GetStatus",
    "created_at": "2025-02-03T20:50:58Z",
    "closed_at": "2025-02-05T07:02:53Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/sdeigm/uni-meter/issues/31",
    "body": "While I'm still working on the esp32 solution, I also tried using uni meter as a Shelly device in Openhab 4. Unfortunately, uni meter throws an error when being queried Shelly.GetStatus. Do you plan on implementing more RPC services for full compatibility?",
    "comments_url": "https://api.github.com/repos/sdeigm/uni-meter/issues/31/comments",
    "author": "TheRealMoeder",
    "comments": [
      {
        "user": "sdeigm",
        "created_at": "2025-02-05T05:58:12Z",
        "body": "I guess I will never reach full compatibility since there are a lot of methods to query and configure the device as well as thinks like webhooks. But I will add enhancements to reach compatibility with certain devices or software tools. So if you need Shelly.GetStatus I will add it :-)\n\nSince I do not have a real shelly I can only implement that functionality based on the information I will find in the internet."
      },
      {
        "user": "TheRealMoeder",
        "created_at": "2025-02-05T06:24:12Z",
        "body": "API Docs for the Shelly seem pretty complete, so I don't see why it couldn't work. I currently run a python script reading a sma energy meter so I can't concurrently use uni-meter on the same IP, so I would instead use Uni-meter to still get the data as a Shelly device into Openhab. The other and probably more universal option would be to add an additional MQTT output option to uni-meter."
      },
      {
        "user": "sdeigm",
        "created_at": "2025-02-05T06:31:14Z",
        "body": "I don't say it will not work, I am just saying it takes a lot of diligence to reach and complain full compatibility. So I am adding the parts that are needed on demand. Now I am adding Shelly.GetStatus and then we will see what's needed next instead of taking the specifiction and adding function by function.\n\nIf you can send me some information (or point me to the right website) how the Shelly writes its data into mqtt topic, I can also add this."
      },
      {
        "user": "TheRealMoeder",
        "created_at": "2025-02-05T06:52:24Z",
        "body": "Great, I will help with testing of course.\n\nConcerning MQTT, I didn't mean Uni-meter should necessarily copy Shelly output but rather offer a config option to add an Mqtt output server and topic to which it could publish energy data. "
      },
      {
        "user": "sdeigm",
        "created_at": "2025-02-05T07:02:00Z",
        "body": "Let's discuss the MQTT stuff in a new issue, so that I can close this one."
      }
    ]
  },
  {
    "number": 11,
    "title": "Logfile will be overwritten",
    "created_at": "2025-01-19T09:58:22Z",
    "closed_at": "2025-01-20T05:32:59Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/sdeigm/uni-meter/issues/11",
    "body": "When starting the uni-meter as service the log file /var/log/uni-meter.log starts writing the new log entries at the beginning of the file instead of appending it to the end. That leads to overwriting the previous log entries.",
    "comments_url": "https://api.github.com/repos/sdeigm/uni-meter/issues/11/comments",
    "author": "StPinkert",
    "comments": [
      {
        "user": "sdeigm",
        "created_at": "2025-01-19T15:59:33Z",
        "body": "You can configure this behavior in the file /opt/uni-meter/config/systemd/uni-meter.service. I will update this in the next release. In the meanwhile you can adjust your configuration file and issue a `sudo systemctl daemon-reload` (replace file: by append:)\n\n[Unit]\nDescription=Universal power meter converter\nAfter=syslog.target network.target ntp.service\n\n[Service]\nExecStart=/opt/uni-meter/bin/uni-meter.sh\nExecReload=\nStandardOutput=append:/var/log/uni-meter.log\nStandardError=append:/var/log/uni-meter.log\n\n[Install]\nWantedBy=multi-user.target\n"
      }
    ]
  },
  {
    "number": 4,
    "title": "not an issue, but would be very helpful for many users - docker compose instructions",
    "created_at": "2024-12-20T20:51:14Z",
    "closed_at": "2025-01-31T08:55:48Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/sdeigm/uni-meter/issues/4",
    "body": "Is it possible to provide instructions for docker compose?",
    "comments_url": "https://api.github.com/repos/sdeigm/uni-meter/issues/4/comments",
    "author": "martin-st-81",
    "comments": [
      {
        "user": "sdeigm",
        "created_at": "2024-12-23T07:16:35Z",
        "body": "Sure, I will try to provide a docker image together with some instructions ... just give me some time :-)"
      },
      {
        "user": "sdeigm",
        "created_at": "2025-01-31T09:03:03Z",
        "body": "So, i created a Dockerimage. It will be pushed as\n\nsdeigm/uni-meter:latest\n\nto dockerhub.\n\nI have set up a separate uni-meter-docker github project which contains a docker-compose file.\n\nThe project has no readme yet. The docker-compose file will map 3 ports to the container 80/TCP, 1010/UDP and 5353/UDP\n\nThe first port if for the Shelly's WebServer, the second one for RCP over UDP and the last one for the avahi mDNS daemon.\n\nIf you don't need one of the features, you can just disable the port mapping.\n\nFor the avahi daemon you have to decide if you want to use the one from the real host or the one from the docker container. If you want to use the one from the docker container you have to stop the one from the host (if installed at all):"
      }
    ]
  }
]