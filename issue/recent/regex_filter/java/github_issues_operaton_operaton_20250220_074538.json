[
  {
    "number": 514,
    "title": "Error in ClassLoadingDuringJobExecutionTest",
    "created_at": "2025-02-14T09:46:26Z",
    "closed_at": "2025-02-17T13:19:15Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/operaton/operaton/issues/514",
    "body": "**Describe the bug**\nWhen the test is executed in the integration test phase, the following error is thrown:\n\n```\n[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 5.006 s <<< FAILURE! -- in org.operaton.bpm.integrationtest.functional.classloading.jobexecution.ClassloadingDuringJobExecutionTest\n[ERROR] org.operaton.bpm.integrationtest.functional.classloading.jobexecution.ClassloadingDuringJobExecutionTest.shouldLoadBPMNErorClassUsedInGroovyScriptDuringJobExecution -- Time elapsed: 0.112 s <<< ERROR!\norg.operaton.bpm.engine.ProcessEngineException: ENGINE-09003 Could not parse 'process.bpmn'. Verarbeitungsanweisungsziel, das \"[xX][mM][lL]\" entspricht, ist nicht zulässig.\n        at org.operaton.bpm.operaton-engine@1.0.0-beta-4-SNAPSHOT//org.operaton.bpm.engine.impl.util.EngineUtilLogger.parsingFailureException(EngineUtilLogger.java:54)\n        at org.operaton.bpm.operaton-engine@1.0.0-beta-4-SNAPSHOT//org.operaton.bpm.engine.impl.util.xml.Parse.execute(Parse.java:149)\n        at org.operaton.bpm.operaton-engine@1.0.0-beta-4-SNAPSHOT//org.operaton.bpm.engine.impl.bpmn.parser.BpmnParse.execute(BpmnParse.java:354)\n        at org.operaton.bpm.operaton-engine@1.0.0-beta-4-SNAPSHOT//org.operaton.bpm.engine.impl.bpmn.deployer.BpmnDeployer.transformDefinitions(BpmnDeployer.java:104)\n        at org.operaton.bpm.operaton-engine@1.0.0-beta-4-SNAPSHOT//org.operaton.bpm.engine.impl.AbstractDefinitionDeployer.transformResource(AbstractDefinitionDeployer.java:100)\n        at org.operaton.bpm.operaton-engine@1.0.0-beta-4-SNAPSHOT//org.operaton.bpm.engine.impl.AbstractDefinitionDeployer.parseDefinitionResources(AbstractDefinitionDeployer.java:75)\n        at org.operaton.bpm.operaton-engine@1.0.0-beta-4-SNAPSHOT//org.operaton.bpm.engine.impl.AbstractDefinitionDeployer.deploy(AbstractDefinitionDeployer.java:65)\n        at org.operaton.bpm.operaton-engine@1.0.0-beta-4-SNAPSHOT//org.operaton.bpm.engine.impl.persistence.deploy.cache.CacheDeployer.lambda$deploy$0(CacheDeployer.java:46)\n        at org.operaton.bpm.operaton-engine@1.0.0-beta-4-SNAPSHOT//org.operaton.bpm.engine.impl.interceptor.CommandContext.runWithoutAuthorization(CommandContext.java:551)\n        at org.operaton.bpm.operaton-engine@1.0.0-beta-4-SNAPSHOT//org.operaton.bpm.engine.impl.interceptor.CommandContext.runWithoutAuthorization(CommandContext.java:539)\n        at org.operaton.bpm.operaton-engine@1.0.0-beta-4-SNAPSHOT//org.operaton.bpm.engine.impl.persistence.deploy.cache.CacheDeployer.deploy(CacheDeployer.java:44)\n```\n\nThe assumption is, that the XML was made invalid by migrating the inline-defined `process` String variable to a multiline string",
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/514/comments",
    "author": "javahippie",
    "comments": [
      {
        "user": "kthoms",
        "created_at": "2025-02-17T13:19:15Z",
        "body": "Fixed"
      }
    ]
  },
  {
    "number": 513,
    "title": "Using Springs ObjectUtils requires referencing Spring in Wildfly Modules",
    "created_at": "2025-02-14T09:40:11Z",
    "closed_at": "2025-02-17T13:18:47Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/operaton/operaton/issues/513",
    "body": "**Describe the bug**\nIn an earlier change, we introduced Springs ObjectUtils and StringUtils in the Operaton code to call `isEmpty()` as a convenience method. Unfortunately this requires WIldfly to reference Spring in the modules (a change we did for the Distro already).\n\nWhen running the integration tests, the following error can be seen:\n\n```\n[ERROR] Tests run: 1, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 6.573 s <<< FAILURE! -- in org.operaton.bpm.integrationtest.functional.bpmnmodelapi.RepositoryServiceBpmnModelRetrievalTest\n[ERROR] org.operaton.bpm.integrationtest.functional.bpmnmodelapi.RepositoryServiceBpmnModelRetrievalTest.shouldReturnBpmnModelInstance -- Time elapsed: 0.177 s <<< ERROR!\njava.lang.NoClassDefFoundError: org/springframework/util/ObjectUtils\n        at org.operaton.bpm.operaton-engine@1.0.0-beta-4-SNAPSHOT//org.operaton.bpm.engine.impl.cmd.GetDeploymentBpmnModelInstanceCmd.<init>(GetDeploymentBpmnModelInstanceCmd.java:47)\n        at org.operaton.bpm.operaton-engine@1.0.0-beta-4-SNAPSHOT//org.operaton.bpm.engine.impl.RepositoryServiceImpl.getBpmnModelInstance(RepositoryServiceImpl.java:335)\n        at deployment.test.war//org.operaton.bpm.integrationtest.functional.bpmnmodelapi.RepositoryServiceBpmnModelRetrievalTest.shouldReturnBpmnModelInstance(RepositoryServiceBpmnModelRetrievalTest.java:53)\n        at java.base/java.lang.reflect.Method.invoke(Method.java:568)\n        at deployment.test.war//org.jboss.arquillian.junit.Arquillian$8$1.invokeMethod(Arquillian.java:325)\n        at deployment.test.war//org.jboss.arquillian.junit.MethodInvoker$1.invoke(MethodInvoker.java:18)\n        at deployment.test.war//org.jboss.arquillian.container.test.impl.execution.LocalTestExecuter.execute(LocalTestExecuter.java:57)\n        at java.base/java.lang.reflect.Method.invoke(Method.java:568)\n```\n\nI'd argue that having to add Spring as a module in WIldlfy is not worth the benefit of using these methods. We could copy them into our codebase in accordance to Springs license, if possible, or write our own.\n\n\n**To Reproduce**\nRun `mvn clean install -Pengine-integration,wildfly,h2 -f qa` on the project root\n\n**Expected behavior**\nThe integration tests should work",
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/513/comments",
    "author": "javahippie",
    "comments": [
      {
        "user": "kthoms",
        "created_at": "2025-02-14T14:36:55Z",
        "body": "The error still remains.\n\n```\n[ERROR] Failures: \n[ERROR]   FailedJobCommandTest.testJobRetriesDecremented:44 expected:<1> but was:<2>\n[ERROR]   FailedJobCommandTest.testJobRetriesDecremented_multiple:62 expected:<50> but was:<52>\n[ERROR]   TimerRecalculationTest.testTimerRecalculationBasedOnProcessVariable:63 expected:<1> but was:<2>\n[ERROR] Errors: \n[ERROR]   TestWarDeploymentWithDiagram.testDeployProcessArchive:50 » NoClassDefFound org/springframework/util/ObjectUtils\n[ERROR]   TestWarDeploymentWithDiagram.testInvoiceProcess:57 » NoClassDefFound org/springframework/util/ObjectUtils\n[ERROR]   TestWarDeploymentWithoutDiagram.testDeployProcessArchiveDiagramCreationDisabled:47 » NoClassDefFound org/springframework/util/ObjectUtils\n[ERROR]   RepositoryServiceBpmnModelRetrievalTest.shouldReturnBpmnModelInstance:53 » NoClassDefFound org/springframework/util/ObjectUtils\n[ERROR]   CdiBeanCaseTaskResolutionTest » Deployment Cannot deploy pa1.war: {\"WFLYCTL0062: Composite operation failed and was rolled back. Steps that failed:\" => {\"Operation step-1\" => {\"WFLYCTL0080: Failed services\" => {\"org.operaton.bpm.platform.process-application-module.\\\"pa1.war\\\".DEPLOY.pa\" => \"java.lang.NoClassDefFoundError: org/springframework/util/StringUtils\n    Caused by: java.lang.NoClassDefFoundError: org/springframework/util/StringUtils\n    Caused by: java.lang.ClassNotFoundException: org.springframework.util.StringUtils from [Module \\\"org.operaton.bpm.operaton-engine\\\" version 1.0.0-beta-4-SNAPSHOT from local module loader @5ad10c1a (finder: local module finder @6bb75258 (roots: /Users/kthoms/Development/git/github/operaton/qa/wildfly-runtime/target/server/wildfly-33.0.1.Final/modules,/Users/kthoms/Development/git/github/operaton/qa/wildfly-runti\n```"
      }
    ]
  },
  {
    "number": 501,
    "title": "chore: Fix blocker sonar issues in test code",
    "created_at": "2025-02-07T12:30:42Z",
    "closed_at": "2025-02-07T15:32:17Z",
    "labels": [],
    "url": "https://github.com/operaton/operaton/pull/501",
    "body": "Add assertions to tests lacking them where they make sense. Add `@Test(expected = None.class)` to indicate when only the absense of an exception is required.\r\n\r\nrelates to: #88",
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/501/comments",
    "author": "ArneDeutsch",
    "comments": [
      {
        "user": "kthoms",
        "created_at": "2025-02-07T15:29:10Z",
        "body": "@ArneDeutsch Please be careful when referencing annotations in PR/issue descriptions. This tags users. The users `@test` and `@override` are often accidently linked.\r\nYou have to use backticks."
      }
    ]
  },
  {
    "number": 472,
    "title": "chore: \"collapse\" nested ifs",
    "created_at": "2025-01-31T06:20:47Z",
    "closed_at": "2025-02-06T17:41:48Z",
    "labels": [],
    "url": "https://github.com/operaton/operaton/pull/472",
    "body": "Resolves Sonar Issues",
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/472/comments",
    "author": "WoSchmo",
    "comments": [
      {
        "user": "kthoms",
        "created_at": "2025-02-06T16:40:31Z",
        "body": "@WoSchmo I have rebased your branch and resolved the findings"
      }
    ]
  },
  {
    "number": 468,
    "title": "harmonize startup and shutdown scripts for run, wildfly and tomcat (related to #383)",
    "created_at": "2025-01-29T11:44:07Z",
    "closed_at": "2025-01-31T06:35:21Z",
    "labels": [],
    "url": "https://github.com/operaton/operaton/pull/468",
    "body": "It works for the .bat files on windows. The run and tomcat .sh files do not work with gitbash on windows. Neither in the old version nor in the version of this PR (wildfly works with this setup). So please verify the scripts on linux or mac.",
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/468/comments",
    "author": "WoSchmo",
    "comments": [
      {
        "user": "kthoms",
        "created_at": "2025-01-30T11:02:47Z",
        "body": "Thanks @WoSchmo, I'll check on Mac"
      },
      {
        "user": "kthoms",
        "created_at": "2025-01-30T16:58:46Z",
        "body": "The start scripts are working.\r\n\r\nBut please change the output of the version. Currently it prints:\r\n```\r\n./start.sh --version\r\nProject version: 1.0.0-beta-3-SNAPSHOT\r\n```\r\n\r\nComparing to typical outputs:\r\n```\r\nruby --version\r\nruby 2.6.10p210 (2022-04-12 revision 67958) [universal.arm64e-darwin24]\r\n\r\ngit --version\r\ngit version 2.48.0\r\n\r\njreleaser --version\r\njreleaser 1.16.0\r\n```\r\n\r\nI think the outputs should read better this way:\r\n```\r\n./start.sh --version\r\nOperaton 1.0.0-beta-3-SNAPSHOT\r\nOperaton 1.0.0-beta-3-SNAPSHOT (Tomcat 10.1.30)\r\nOperaton 1.0.0-beta-3-SNAPSHOT (Wildfly 33.0.1.Final)\r\n```\r\nThe first is the \"Run\" distro.\r\n"
      },
      {
        "user": "WoSchmo",
        "created_at": "2025-01-31T05:45:37Z",
        "body": "Thanks for the suggestions. I just pushed the changes."
      }
    ]
  },
  {
    "number": 427,
    "title": "Local build fails on Windows 11: NullPointerException: Cannot invoke \"String.replace(java.lang.CharSequence, java.lang.CharSequence)\"",
    "created_at": "2025-01-13T07:58:09Z",
    "closed_at": "2025-01-22T11:06:40Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/operaton/operaton/issues/427",
    "body": "**Describe the bug**\r\nWhen executing a full maven build locally on my **Windows 11** Laptop the build fails consistenly with test failures while building **Operaton - Run - Core**. The following exception is shown many times:\r\n\r\n```\r\n[ERROR] org.operaton.bpm.run.test.plugins.OperatonRunProcessEnginePluginsRegistrationTest.shouldInitializeRegisteredPlugins -- Time elapsed: 0.002 s <<< ERROR!\r\njava.lang.IllegalStateException: Failed to load ApplicationContext for [WebMergedContextConfiguration@3005623b testClass = org.operaton.bpm.run.test.plugins.OperatonRunProcessEnginePluginsRegistrationTest, locations = [], classes = [org.operaton.bpm.run.OperatonBpmRun], contextInitializerClasses = [], activeProfiles = [\"test-new-plugins\"], propertySourceDescriptors = [], propertySourceProperties = [\"org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true\"], contextCustomizers = [org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6b0d80ed, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@15f47664, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@93081b6, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@72ef8d15, org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@51a9ad5e, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@39d76cb5, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@c33e34cc], resourceBasePath = \"src/main/webapp\", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]\r\n        at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:180)\r\n        at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:130)\r\n        at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:191)\r\n        at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:130)\r\n        at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:260)\r\n        at org.springframework.test.context.junit.jupiter.SpringExtension.postProcessTestInstance(SpringExtension.java:160)\r\n        at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)\r\n        at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n        at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n        at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n        at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1708)\r\n        at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n        at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n        at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)\r\n        at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)\r\n        at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n        at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:596)\r\n        at java.base/java.util.Optional.orElseGet(Optional.java:364)\r\n        at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n        at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'processEngineConfigurationImpl' defined in class path resource [org/operaton/bpm/run/OperatonBpmRunConfiguration.class]: Failed to instantiate [org.operaton.bpm.engine.impl.cfg.ProcessEngineConfigurationImpl]: Factory method 'processEngineConfigurationImpl' threw exception with message: Cannot invoke \"String.replace(java.lang.CharSequence, java.lang.CharSequence)\" because \"result\" is null\r\n        at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:657)\r\n        at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:645)\r\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1357)\r\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1187)\r\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:563)\r\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:523)\r\n        at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:336)\r\n        at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:289)\r\n        at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:334)\r\n        at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)\r\n        at org.springframework.beans.factory.support.DefaultListableBeanFactory.instantiateSingleton(DefaultListableBeanFactory.java:1122)\r\n        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingleton(DefaultListableBeanFactory.java:1093)\r\n        at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:1030)\r\n        at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:987)\r\n        at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)\r\n        at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:752)\r\n        at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)\r\n        at org.springframework.boot.SpringApplication.run(SpringApplication.java:318)\r\n        at org.springframework.boot.test.context.SpringBootContextLoader.lambda$loadContext$3(SpringBootContextLoader.java:137)\r\n        at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:58)\r\n        at org.springframework.util.function.ThrowingSupplier.get(ThrowingSupplier.java:46)\r\n        at org.springframework.boot.SpringApplication.withHook(SpringApplication.java:1461)\r\n        at org.springframework.boot.test.context.SpringBootContextLoader$ContextLoaderHook.run(SpringBootContextLoader.java:553)\r\n        at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:137)\r\n        at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:108)\r\n        at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:225)\r\n        at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:152)\r\n        ... 19 more\r\nCaused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.operaton.bpm.engine.impl.cfg.ProcessEngineConfigurationImpl]: Factory method 'processEngineConfigurationImpl' threw exception with message: Cannot invoke \"String.replace(java.lang.CharSequence, java.lang.CharSequence)\" because \"result\" is null\r\n        at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:199)\r\n        at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiateWithFactoryMethod(SimpleInstantiationStrategy.java:88)\r\n        at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:168)\r\n        at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:653)\r\n        ... 45 more\r\nCaused by: java.lang.NullPointerException: Cannot invoke \"String.replace(java.lang.CharSequence, java.lang.CharSequence)\" because \"result\" is null\r\n        at org.operaton.bpm.run.OperatonBpmRunDeploymentConfiguration.getNormalizedDeploymentDir(OperatonBpmRunDeploymentConfiguration.java:60)\r\n        at org.operaton.bpm.run.OperatonBpmRunConfiguration.processEngineConfigurationImpl(OperatonBpmRunConfiguration.java:57)\r\n        at org.operaton.bpm.run.OperatonBpmRunConfiguration$$SpringCGLIB$$0.CGLIB$processEngineConfigurationImpl$1(<generated>)\r\n        at org.operaton.bpm.run.OperatonBpmRunConfiguration$$SpringCGLIB$$FastClass$$1.invoke(<generated>)\r\n        at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:258)\r\n        at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:348)\r\n        at org.operaton.bpm.run.OperatonBpmRunConfiguration$$SpringCGLIB$$0.processEngineConfigurationImpl(<generated>)\r\n        at java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n        at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171)\r\n        ... 48 more\r\n```\r\n\r\nAlso see these kind of outputs:\r\n\r\n```\r\n[ERROR]   OperatonRunProcessEnginePluginsRegistrationTest.shouldPickUpAllPluginConfigurations » IllegalState ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@4c65d8e3 testClass = org.operaton.bpm.run.test.plugins.OperatonRunProcessEnginePluginsRegistrationTest, locations = [], classes = [org.operaton.bpm.run.OperatonApp], contextInitializerClasses = [], activeProfiles = [\"test-new-plugins\"], propertySourceDescriptors = [], propertySourceProperties = [\"org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true\"], contextCustomizers = [org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3eb91815, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34b9f960, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@42e25b0b, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@4ea5b703, org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2cb2fc20, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7f8a9499, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@a45481ed], resourceBasePath = \"src/main/webapp\", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]\r\n[ERROR]   OperatonRunProcessEnginePluginsRegistrationTest.shouldRegisterYamlDefinedPluginsWithProcessEngine » IllegalState ApplicationContext failure threshold (1) exceeded: skipping repeated attempt to load context for [WebMergedContextConfiguration@4c65d8e3 testClass = org.operaton.bpm.run.test.plugins.OperatonRunProcessEnginePluginsRegistrationTest, locations = [], classes = [org.operaton.bpm.run.OperatonApp], contextInitializerClasses = [], activeProfiles = [\"test-new-plugins\"], propertySourceDescriptors = [], propertySourceProperties = [\"org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true\"], contextCustomizers = [org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3eb91815, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@34b9f960, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@42e25b0b, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@4ea5b703, org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@2cb2fc20, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@7f8a9499, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@a45481ed], resourceBasePath = \"src/main/webapp\", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]\r\n[ERROR]   ProcessEnginePluginsConfigurationOverrideTest.shouldOverrideDefaultPluginConfiguration » IllegalState Failed to load ApplicationContext for [WebMergedContextConfiguration@37806be6 testClass = org.operaton.bpm.run.test.plugins.ProcessEnginePluginsConfigurationOverrideTest, locations = [], classes = [org.operaton.bpm.run.OperatonApp], contextInitializerClasses = [], activeProfiles = [\"test-new-plugins\", \"test-plugins-config-override\"], propertySourceDescriptors = [], propertySourceProperties = [\"org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true\"], contextCustomizers = [org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@452e19ca, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@e25951c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@24c22fe, org.springframework.boot.test.web.reactor.netty.DisableReactorResourceFactoryGlobalResourcesContextCustomizerFactory$DisableReactorResourceFactoryGlobalResourcesContextCustomizerCustomizer@2205a05d, org.springframework.boot.test.autoconfigure.OnFailureConditionReportContextCustomizerFactory$OnFailureConditionReportContextCustomizer@5e21e98f, org.springframework.boot.test.autoconfigure.actuate.observability.ObservabilityContextCustomizerFactory$DisableObservabilityContextCustomizer@1f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizer@589da3f3, org.springframework.test.context.support.DynamicPropertiesContextCustomizer@0, org.springframework.boot.test.context.SpringBootTestAnnotation@d521134f], resourceBasePath = \"src/main/webapp\", contextLoader = org.springframework.boot.test.context.SpringBootContextLoader, parent = null]\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to the root of the product on CLI (probably happens only on specific Windows (?) environments)..\r\n2. Execute './mvnw'\r\n\r\n**Expected behavior**\r\nFull build succeeds without error.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows 11\r\n - Operaton-Version: Latest from head.\r\n",
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/427/comments",
    "author": "ArneDeutsch",
    "comments": [
      {
        "user": "kthoms",
        "created_at": "2025-01-14T07:26:27Z",
        "body": "Thanks for opening this one. Let's see how we can fix that. I don't have a Windows machine here."
      },
      {
        "user": "javahippie",
        "created_at": "2025-01-14T13:37:33Z",
        "body": "Can you please add information about the JDK you are using for building? "
      },
      {
        "user": "javahippie",
        "created_at": "2025-01-14T14:16:57Z",
        "body": "After a fist look, my guess is that your `operaton.deploymentDir` is null, which is passed in `OperatonBpmRunConfiguration` line 67. I don't have a reason or solution, yet, just wanted to document here."
      }
    ]
  },
  {
    "number": 403,
    "title": "chore: remove unused dependencies",
    "created_at": "2025-01-06T09:40:54Z",
    "closed_at": "2025-02-12T05:08:49Z",
    "labels": [],
    "url": "https://github.com/operaton/operaton/pull/403",
    "body": "I have removed several dependencies. Please take your time and review if those are not neccesary otherwise!\r\n\r\nrelated to #167",
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/403/comments",
    "author": "WoSchmo",
    "comments": [
      {
        "user": "kthoms",
        "created_at": "2025-01-06T12:03:24Z",
        "body": "Thanks @WoSchmo. I will need a while to check this. I'm a bit unsure regarding dependencies that are depending on distributions. The default build does not check all profiles and engine integration tests are not yet enabled.\r\n\r\nOn first sight, it looks ok."
      },
      {
        "user": "kthoms",
        "created_at": "2025-01-10T09:29:02Z",
        "body": "This was a bit too aggressive. The \"run\" distro for example fails with\r\n```\r\nCaused by: java.io.FileNotFoundException: class path resource [org/springframework/web/servlet/config/annotation/WebMvcConfigurer.class] cannot be opened because it does not exist\r\n```\r\n\r\nTo verify, build and run the distros and see if at least tasklist is working as expected."
      },
      {
        "user": "javahippie",
        "created_at": "2025-02-11T22:20:43Z",
        "body": "@kthoms @WoSchmo Just checking if the latest comment still stands and this PR should be closed without merging it?"
      },
      {
        "user": "WoSchmo",
        "created_at": "2025-02-12T05:08:49Z",
        "body": "Thank you for the reminder!"
      }
    ]
  },
  {
    "number": 369,
    "title": "fix(asyncInstanceModification): respect ancestor during startBefore/after cmd execution (#4829)",
    "created_at": "2024-12-22T11:14:41Z",
    "closed_at": "2025-02-11T22:22:26Z",
    "labels": [
      "backport-c7"
    ],
    "url": "https://github.com/operaton/operaton/pull/369",
    "body": "related to camunda/camunda-bpm-platform#4507\r\n\r\nBackported commit 7bf5c46119 from the camunda-bpm-platform repository.\r\nOriginal author: Helene <21290204+PHWaechtler@users.noreply.github.com>",
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/369/comments",
    "author": "hauptmedia",
    "comments": [
      {
        "user": "kthoms",
        "created_at": "2025-02-07T16:04:40Z",
        "body": "I have fixed the findings and cleaned up the PR"
      }
    ]
  },
  {
    "number": 319,
    "title": "refactor(spin): Incorporate new language features",
    "created_at": "2024-12-04T12:41:37Z",
    "closed_at": "2024-12-04T14:16:59Z",
    "labels": [],
    "url": "https://github.com/operaton/operaton/pull/319",
    "body": "- instanceof checks and casts are replaced with instanceof with assign to a binding variable\r\n\r\nrelated to #85",
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/319/comments",
    "author": "CBorowski-dev",
    "comments": [
      {
        "user": "javahippie",
        "created_at": "2024-12-04T14:16:49Z",
        "body": "lgtm! Thanks"
      }
    ]
  },
  {
    "number": 294,
    "title": "Replace parent dependency from operaton-database-settings to operaton-parent",
    "created_at": "2024-11-29T12:43:08Z",
    "closed_at": "2024-12-04T14:18:15Z",
    "labels": [
      "bug",
      "good first issue"
    ],
    "url": "https://github.com/operaton/operaton/issues/294",
    "body": "**Describe the bug**\r\nMany modules have declared `operaton-database-settings`, which itself has `operaton-parent` as parent.\r\n\r\nMany of them do not need the database specific profiles of that POM, so they could have `operaton-parent` as parent.\r\n\r\n**To Reproduce**\r\nSearch for `operaton-database-settings` in `pom.xml` files.\r\n\r\n**Expected behavior**\r\nModules that safely can have `operaton-parent` should change their parent.\r\n\r\nPlease think carefully about unwanted side effects.\r\n",
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/294/comments",
    "author": "kthoms",
    "comments": [
      {
        "user": "shiftyseaotter",
        "created_at": "2024-12-03T13:11:49Z",
        "body": "I picked it up."
      }
    ]
  },
  {
    "number": 239,
    "title": "fix(admin): fix display of usage metrics > 12 months (#4778)",
    "created_at": "2024-11-20T13:05:47Z",
    "closed_at": "2024-11-20T17:06:33Z",
    "labels": [],
    "url": "https://github.com/operaton/operaton/pull/239",
    "body": "related to camunda/camunda-bpm-platform#4743\r\n\r\nBackported commit 4d17b903474 from the camunda-bpm-platform repository.\r\nOriginal author: tasso94 <3015690+tasso94@users.noreply.github.com>",
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/239/comments",
    "author": "hauptmedia",
    "comments": [
      {
        "user": "hauptmedia",
        "created_at": "2024-11-20T13:40:04Z",
        "body": "Interesting error in the pipeline which has nothing to do with the changes:\r\n\r\n```\r\n[INFO] \r\nError:  Errors: \r\nError:    AuthorizationRestServiceInteractionTest » ServerBootstrap Unable to bootstrap server: Address already in use\r\nError:    AuthorizationRestServiceQueryTest » ServerBootstrap Unable to bootstrap server: Address already in use\r\nError:    BatchRestServiceInteractionTest » ServerBootstrap Unable to bootstrap server: Address already in use\r\n```"
      },
      {
        "user": "javahippie",
        "created_at": "2024-11-20T16:02:27Z",
        "body": "Can you try and re-run the pipeline? Maybe this is an issue with flaky tests?"
      },
      {
        "user": "hauptmedia",
        "created_at": "2024-11-20T16:23:48Z",
        "body": "It seems that i have no permission to do so"
      },
      {
        "user": "javahippie",
        "created_at": "2024-11-20T16:25:53Z",
        "body": "Ah, my bad. I restarted the job"
      }
    ]
  },
  {
    "number": 219,
    "title": "Fix instanceof check and cast with pattern matching in engine. (#85)",
    "created_at": "2024-11-18T07:16:56Z",
    "closed_at": "2024-11-18T08:03:56Z",
    "labels": [],
    "url": "https://github.com/operaton/operaton/pull/219",
    "body": null,
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/219/comments",
    "author": "dirk-olmes",
    "comments": [
      {
        "user": "javahippie",
        "created_at": "2024-11-18T08:03:36Z",
        "body": "lgtm!"
      }
    ]
  },
  {
    "number": 213,
    "title": "Adjusting the Sonarqube Quality Gate",
    "created_at": "2024-11-16T20:55:18Z",
    "closed_at": "2024-11-17T18:59:28Z",
    "labels": [
      "idea"
    ],
    "url": "https://github.com/operaton/operaton/issues/213",
    "body": "**Is your feature request related to a problem? Please describe.**\r\nWe are often changing existing code, which does not have a lot of coverage. While the overall code coverage is good, many of our merge requests are being displayed as \"failed\", because we edit code which would not neccessarily benefit from code coverage, e.g. data classes.\r\n\r\nMy proposal is to check the code coverage not for new code, but globally, so our build history does not look like it is failing all the time, raising impressions of sloppy work.\r\n",
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/213/comments",
    "author": "javahippie",
    "comments": [
      {
        "user": "javahippie",
        "created_at": "2024-11-16T21:13:49Z",
        "body": "@kthoms @a-m-zill @hauptmedia Opinions on this?"
      },
      {
        "user": "hauptmedia",
        "created_at": "2024-11-17T08:49:27Z",
        "body": "I’ve noticed that the pipeline is currently always marked as “red,” and I believe this creates a negative first impression of the project. It can be misleading, especially considering that all of the over 30,000 tests are being executed successfully. This doesn’t seem to accurately reflect the project’s overall health.\n\nI suggest reviewing the pipeline settings to better align with the project’s success criteria."
      },
      {
        "user": "kthoms",
        "created_at": "2024-11-17T15:42:54Z",
        "body": "At this moment it is quite likely that we fail the criteria. For example, I just changed a single line of source in source/main amongst a ton of changes in tests, and Sonar made this fail the quality gate as the single line was not covered by a test (=> 0% coverage). I have ignored this fact and just merged.\r\n\r\nAlso there could be that one change is degrading the code quality, but I'm cleaning this up with later changes.\r\n\r\nFor now I would be OK to lower the quality gate, but once we are done with the cleanups we should enforce that again. Definetely before the 1.0.0 Final version."
      },
      {
        "user": "javahippie",
        "created_at": "2024-11-17T18:59:28Z",
        "body": "I removed the coverage for now."
      }
    ]
  },
  {
    "number": 207,
    "title": "chore(fork): Rename Groups.CAMUNDA_ADMIN to Groups.OPERATON_ADMIN",
    "created_at": "2024-11-15T22:17:49Z",
    "closed_at": "2024-11-16T20:14:29Z",
    "labels": [],
    "url": "https://github.com/operaton/operaton/pull/207",
    "body": "Relates to #196 ",
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/207/comments",
    "author": "hauptmedia",
    "comments": [
      {
        "user": "javahippie",
        "created_at": "2024-11-16T20:14:24Z",
        "body": "lgtm!"
      }
    ]
  },
  {
    "number": 168,
    "title": "Fix instanceof check and cast with pattern matching in juel. (#85)",
    "created_at": "2024-11-08T06:01:29Z",
    "closed_at": "2024-11-08T07:33:25Z",
    "labels": [],
    "url": "https://github.com/operaton/operaton/pull/168",
    "body": "Fix instanceof check and cast with pattern matching in juel. (#85)",
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/168/comments",
    "author": "dirk-olmes",
    "comments": [
      {
        "user": "javahippie",
        "created_at": "2024-11-08T07:33:32Z",
        "body": "Thanks again! :) "
      },
      {
        "user": "javahippie",
        "created_at": "2024-11-08T07:42:21Z",
        "body": "On a different notice, I'm not sure why GH still does not list you as a contributor and marks you as a \"First Time contributor\" on this PR 🤔"
      },
      {
        "user": "dirk-olmes",
        "created_at": "2024-11-08T08:33:53Z",
        "body": "@javahippie no need to thank me again - more patches like these will come in soon.\r\n\r\nMaybe I'm still a first time contributor because I recreated the branch after my first PR? It occurred to me only later that reusing the same branch for multiple PRs is possible."
      }
    ]
  },
  {
    "number": 164,
    "title": "chore(build): Merge profile 'distro-ce' into 'distro' (#152)",
    "created_at": "2024-11-07T11:18:27Z",
    "closed_at": "2024-11-08T06:03:49Z",
    "labels": [],
    "url": "https://github.com/operaton/operaton/pull/164",
    "body": "Fixes #152\r\n\r\n**Testing Instruction**\r\n```\r\n mvn help:all-profiles | grep 'Active' | awk '{print $3}' | sort -u | grep distro\r\n```\r\n\r\nThis will result in:\r\n```\r\ndistro\r\ndistro-run\r\ndistro-serverless\r\ndistro-starter\r\ndistro-tomcat\r\ndistro-webjar\r\ndistro-wildfly\r\n```",
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/164/comments",
    "author": "kthoms",
    "comments": [
      {
        "user": "javahippie",
        "created_at": "2024-11-07T14:42:01Z",
        "body": "lgtm, but has a conflict on `distro/run/pom.xml`"
      }
    ]
  },
  {
    "number": 119,
    "title": "chore: Fix instanceof check and cast with pattern matching",
    "created_at": "2024-11-04T10:42:49Z",
    "closed_at": "2024-11-04T11:41:54Z",
    "labels": [],
    "url": "https://github.com/operaton/operaton/pull/119",
    "body": "Fixing all Sonar issues of type S6201 in module engine. Part of #85 ",
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/119/comments",
    "author": "dirk-olmes",
    "comments": [
      {
        "user": "javahippie",
        "created_at": "2024-11-04T11:05:36Z",
        "body": "Hi @dirk-olmes, thanks for your first contribution! I activated the pipeline-run for your pull requests (won't be necessary in the future, just a one-time-thing), so the whole test suite will run. So far it looks good to me!"
      }
    ]
  },
  {
    "number": 91,
    "title": "[#90] Revert accidently changed email addresses",
    "created_at": "2024-11-01T10:20:12Z",
    "closed_at": "2024-11-01T11:13:14Z",
    "labels": [],
    "url": "https://github.com/operaton/operaton/pull/91",
    "body": "Fixes #90 ",
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/91/comments",
    "author": "kthoms",
    "comments": [
      {
        "user": "javahippie",
        "created_at": "2024-11-01T11:12:51Z",
        "body": "Good catch, thank you for fixing this!"
      }
    ]
  },
  {
    "number": 48,
    "title": "Add modeller compatibility information into main README.md file.",
    "created_at": "2024-10-25T06:52:56Z",
    "closed_at": "2024-10-25T07:59:42Z",
    "labels": [],
    "url": "https://github.com/operaton/operaton/pull/48",
    "body": "I have included a note in the readme so that users have information about the compatibility of the BPMN models. As long as we don't have an Operaton modeller.",
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/48/comments",
    "author": "a-m-zill",
    "comments": [
      {
        "user": "javahippie",
        "created_at": "2024-10-25T07:28:25Z",
        "body": "lgtm!"
      }
    ]
  },
  {
    "number": 43,
    "title": "[#27] Migrate to JUnit 5: org.operaton.connect submodules",
    "created_at": "2024-10-24T22:22:48Z",
    "closed_at": "2024-10-30T12:30:44Z",
    "labels": [],
    "url": "https://github.com/operaton/operaton/pull/43",
    "body": "Migrate org.operaton.connect submodules to JUnit 5.\r\n\r\nPerformed Open Rewrite rule org.openrewrite.java.testing.junit5.JUnit5BestPractices and manually completed the migration.\r\n\r\nUpgrade assertj to 3.26.3.",
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/43/comments",
    "author": "kthoms",
    "comments": [
      {
        "user": "kthoms",
        "created_at": "2024-10-27T23:11:01Z",
        "body": "```\r\nError:  Failed to execute goal org.apache.maven.plugins:maven-compiler-plugin:3.8.1:compile (default-compile) on project operaton-dmn-junit5: Compilation failure: Compilation failure: \r\nError:  /home/runner/work/operaton/operaton/test-utils/junit5-extension-dmn/src/main/java/org/operaton/bpm/dmn/engine/test/junit5/DmnEngineExtension.java:[26,39] package org.junit.jupiter.api.extension does not exist\r\n```"
      },
      {
        "user": "kthoms",
        "created_at": "2024-10-28T14:09:45Z",
        "body": "Fixed JUnit dependencies on test-utils/junit5-extension-dmn & test-utils/junit5-extension"
      },
      {
        "user": "javahippie",
        "created_at": "2024-10-29T20:23:24Z",
        "body": "lgtm, but has a conflict on the branch"
      }
    ]
  },
  {
    "number": 34,
    "title": "Add .editorconfig",
    "created_at": "2024-10-23T19:45:17Z",
    "closed_at": "2024-10-28T03:14:12Z",
    "labels": [],
    "url": "https://github.com/operaton/operaton/pull/34",
    "body": "Fixes #33 ",
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/34/comments",
    "author": "kthoms",
    "comments": [
      {
        "user": "javahippie",
        "created_at": "2024-10-24T09:33:45Z",
        "body": "Thanks, I will try and check out this branch asap (and test it with some editors)"
      }
    ]
  },
  {
    "number": 26,
    "title": "Skip JAR creation when it would be empty",
    "created_at": "2024-10-22T10:13:16Z",
    "closed_at": "2024-10-22T10:31:52Z",
    "labels": [],
    "url": "https://github.com/operaton/operaton/pull/26",
    "body": "Configure skipIfEmpty flag for maven-jar-plugin\r\n\r\nFixes #25 ",
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/26/comments",
    "author": "kthoms",
    "comments": [
      {
        "user": "javahippie",
        "created_at": "2024-10-22T10:32:06Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 14,
    "title": "Harmonize artifact names",
    "created_at": "2024-10-22T04:33:58Z",
    "closed_at": "2024-10-22T08:51:34Z",
    "labels": [],
    "url": "https://github.com/operaton/operaton/pull/14",
    "body": "Used naming rules:\r\n- Each name starts with `Operaton -`  optionally followed by a grouping name, e.g. `Spring Boot Starter -`\r\n- Start names with capital letter, e.g. \"engine\" -> \"Engine\"\r\n- Use capital letters only for acronyms, e.g. CDI, HTTP, POM, BOM, XML, SOAP\r\n- Separate Jakarta with - Jakarta\r\n\r\nThe resulting reactor name output is (sorted for better overview, Maven will print in unsorted order)\r\n\r\n```\r\n[INFO] Operaton - ArchUnit                                                [jar]\r\n[INFO] Operaton - Assert                                                  [jar]\r\n[INFO] Operaton - Assert - Root                                           [pom]\r\n[INFO] Operaton - BOM                                                     [pom]\r\n[INFO] Operaton - BOM Root                                                [pom]\r\n[INFO] Operaton - BPMN Model API                                          [jar]\r\n[INFO] Operaton - CMMN Model API                                          [jar]\r\n[INFO] Operaton - Client                                                  [jar]\r\n[INFO] Operaton - Commons - BOM                                           [pom]\r\n[INFO] Operaton - Commons - Logging                                       [jar]\r\n[INFO] Operaton - Commons - Root POM                                      [pom]\r\n[INFO] Operaton - Commons - Testing                                       [jar]\r\n[INFO] Operaton - Commons - Typed Values                                  [jar]\r\n[INFO] Operaton - Commons - Utils                                         [jar]\r\n[INFO] Operaton - Connect - All connectors in one                         [jar]\r\n[INFO] Operaton - Connect - BOM                                           [pom]\r\n[INFO] Operaton - Connect - Core                                          [jar]\r\n[INFO] Operaton - Connect - HTTP Client                                   [jar]\r\n[INFO] Operaton - Connect - Root                                          [pom]\r\n[INFO] Operaton - Connect - SOAP HTTP Client                              [jar]\r\n[INFO] Operaton - Core - Internal Dependencies                            [pom]\r\n[INFO] Operaton - DMN - Engine                                            [jar]\r\n[INFO] Operaton - DMN - Engine - BOM                                      [pom]\r\n[INFO] Operaton - DMN - Engine - FEEL - API                               [jar]\r\n[INFO] Operaton - DMN - Engine - FEEL - JUEL                              [jar]\r\n[INFO] Operaton - DMN - Engine - FEEL - SCALA                             [jar]\r\n[INFO] Operaton - DMN - Engine - Root                                     [pom]\r\n[INFO] Operaton - DMN - JUnit 5 Extension                                 [jar]\r\n[INFO] Operaton - DMN - Model API                                         [jar]\r\n[INFO] Operaton - Database Settings                                       [pom]\r\n[INFO] Operaton - EJB Client Jakarta                                      [jar]\r\n[INFO] Operaton - EJB Service                                             [ejb]\r\n[INFO] Operaton - Engine                                                  [jar]\r\n[INFO] Operaton - Engine - CDI                                            [jar]\r\n[INFO] Operaton - Engine - CDI - Jakarta                                  [jar]\r\n[INFO] Operaton - Engine - CDI - Root                                     [pom]\r\n[INFO] Operaton - Engine - REST                                           [jar]\r\n[INFO] Operaton - Engine - REST - Assembly                                [war]\r\n[INFO] Operaton - Engine - REST - Assembly - Jakarta                      [war]\r\n[INFO] Operaton - Engine - REST - Docs                                    [pom]\r\n[INFO] Operaton - Engine - REST - Jakarta                                 [jar]\r\n[INFO] Operaton - Engine - REST - OpenAPI                                 [jar]\r\n[INFO] Operaton - Engine - REST - OpenAPI (JSON Generator)                [jar]\r\n[INFO] Operaton - Engine - REST - Root                                    [pom]\r\n[INFO] Operaton - Engine - Spring                                         [jar]\r\n[INFO] Operaton - Engine - Spring - Root                                  [pom]\r\n[INFO] Operaton - Engine - Spring - Spring 6                              [jar]\r\n[INFO] Operaton - Engine Plugins                                          [pom]\r\n[INFO] Operaton - Engine Plugins - Connect                                [jar]\r\n[INFO] Operaton - Engine Plugins - Identity - LDAP                        [jar]\r\n[INFO] Operaton - Engine Plugins - Spin                                   [jar]\r\n[INFO] Operaton - Example - Invoice                                       [war]\r\n[INFO] Operaton - Example - Invoice Jakarta                               [war]\r\n[INFO] Operaton - Example - Root                                          [pom]\r\n[INFO] Operaton - JBoss                                                   [pom]\r\n[INFO] Operaton - JUEL                                                    [jar]\r\n[INFO] Operaton - JUnit 5 Extension                                       [jar]\r\n[INFO] Operaton - Java External Task Client - Client                      [jar]\r\n[INFO] Operaton - Java External Task Client - QA                          [pom]\r\n[INFO] Operaton - Java External Task Client - QA Variable Test            [war]\r\n[INFO] Operaton - Java External Task Client - Root                        [pom]\r\n[INFO] Operaton - Job Executor RA                                         [jar]\r\n[INFO] Operaton - Job Executor RAR                                        [rar]\r\n[INFO] Operaton - License Book                                            [pom]\r\n[INFO] Operaton - Model APIs                                              [pom]\r\n[INFO] Operaton - Only BOM                                                [pom]\r\n[INFO] Operaton - Parent POM                                              [pom]\r\n[INFO] Operaton - QA                                                      [pom]\r\n[INFO] Operaton - QA - Assert                                             [jar]\r\n[INFO] Operaton - QA - Ensure clean DB plugin                             [jar]\r\n[INFO] Operaton - QA - Integration Tests - Engine - Jakarta               [jar]\r\n[INFO] Operaton - Quarkus Extension - Engine - CDI QA                     [jar]\r\n[INFO] Operaton - Quarkus Extension - Engine - Deployment                 [jar]\r\n[INFO] Operaton - Quarkus Extension - Engine - Parent                     [pom]\r\n[INFO] Operaton - Quarkus Extension - Engine - Runtime                    [jar]\r\n[INFO] Operaton - Quarkus Extension - Parent                              [pom]\r\n[INFO] Operaton - Root POM                                                [pom]\r\n[INFO] Operaton - SQL scripts                                             [jar]\r\n[INFO] Operaton - Spin - All data formats in one                          [jar]\r\n[INFO] Operaton - Spin - BOM                                              [pom]\r\n[INFO] Operaton - Spin - Core                                             [jar]\r\n[INFO] Operaton - Spin - DOM XML data format                              [jar]\r\n[INFO] Operaton - Spin - DOM XML data format - Jakarta                    [jar]\r\n[INFO] Operaton - Spin - Jackson JSON data format                         [jar]\r\n[INFO] Operaton - Spin - Root                                             [pom]\r\n[INFO] Operaton - Spring Boot Starter                                     [jar]\r\n[INFO] Operaton - Spring Boot Starter - Client - Spring                   [jar]\r\n[INFO] Operaton - Spring Boot Starter - Client - Spring Boot              [jar]\r\n[INFO] Operaton - Spring Boot Starter - QA - Liquibase                    [jar]\r\n[INFO] Operaton - Spring Boot Starter - QA - Plugins                      [pom]\r\n[INFO] Operaton - Spring Boot Starter - QA - Plugins - Spin               [pom]\r\n[INFO] Operaton - Spring Boot Starter - QA - Plugins - Spin All           [jar]\r\n[INFO] Operaton - Spring Boot Starter - QA - Plugins - Spin JSON Jackson  [jar]\r\n[INFO] Operaton - Spring Boot Starter - QA - Request Scope                [jar]\r\n[INFO] Operaton - Spring Boot Starter - QA - Root POM                     [pom]\r\n[INFO] Operaton - Spring Boot Starter - QA - Simple                       [jar]\r\n[INFO] Operaton - Spring Boot Starter - QA - Webapps                      [pom]\r\n[INFO] Operaton - Spring Boot Starter - QA - Webapps Invoice Example      [jar]\r\n[INFO] Operaton - Spring Boot Starter - QA - Webapps Runtime              [jar]\r\n[INFO] Operaton - Spring Boot Starter - Rest                              [jar]\r\n[INFO] Operaton - Spring Boot Starter - Root POM                          [pom]\r\n[INFO] Operaton - Spring Boot Starter - Test                              [jar]\r\n[INFO] Operaton - Spring Boot Starter - Webapps                           [jar]\r\n[INFO] Operaton - Spring Boot Starter - Webapps Core                      [jar]\r\n[INFO] Operaton - Template Engine - JSR223 Freemarker                     [jar]\r\n[INFO] Operaton - Test Utils - Testcontainers                             [jar]\r\n[INFO] Operaton - Tomcat                                                  [pom]\r\n[INFO] Operaton - Tomcat - Assembly                                       [pom]\r\n[INFO] Operaton - Tomcat - Distro                                         [pom]\r\n[INFO] Operaton - Webapp - Assembly                                       [war]\r\n[INFO] Operaton - Webapp - Assembly - Jakarta                             [war]\r\n[INFO] Operaton - Webapp - JBoss                                          [war]\r\n[INFO] Operaton - Webapp - Root                                           [pom]\r\n[INFO] Operaton - Webapp - Tomcat                                         [war]\r\n[INFO] Operaton - Webapp - Tomcat - Jakarta                               [war]\r\n[INFO] Operaton - Webapp - Webjar                                         [jar]\r\n[INFO] Operaton - XML Model API                                           [jar]\r\n```\r\n\r\nFixes #13 ",
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/14/comments",
    "author": "kthoms",
    "comments": [
      {
        "user": "javahippie",
        "created_at": "2024-10-22T08:50:45Z",
        "body": "Thanks, that really does look a lot nicer!"
      }
    ]
  },
  {
    "number": 12,
    "title": "Manage version of maven-shade-plugin via pluginManagement",
    "created_at": "2024-10-22T03:42:56Z",
    "closed_at": "2024-10-26T17:54:19Z",
    "labels": [],
    "url": "https://github.com/operaton/operaton/pull/12",
    "body": "Fixes #11 ",
    "comments_url": "https://api.github.com/repos/operaton/operaton/issues/12/comments",
    "author": "kthoms",
    "comments": [
      {
        "user": "javahippie",
        "created_at": "2024-10-24T07:01:40Z",
        "body": "This looks good to me, but there is a conflict on the branch"
      }
    ]
  }
]