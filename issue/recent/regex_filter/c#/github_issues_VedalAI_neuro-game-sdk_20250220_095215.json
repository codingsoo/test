[
  {
    "number": 50,
    "title": "Fixes Godot SDK Link",
    "created_at": "2025-02-01T03:17:23Z",
    "closed_at": "2025-02-02T16:03:02Z",
    "labels": [],
    "url": "https://github.com/VedalAI/neuro-game-sdk/pull/50",
    "body": "I noticed the link was invalid for the Godot SDK",
    "comments_url": "https://api.github.com/repos/VedalAI/neuro-game-sdk/issues/50/comments",
    "author": "Blueturbo47",
    "comments": [
      {
        "user": "Alexejhero",
        "created_at": "2025-02-02T16:03:02Z",
        "body": "Thank you for pointing this out to me. It looks like the godot asset library just changed our ID for no reason.\r\nI've implemented the README change manually."
      }
    ]
  },
  {
    "number": 42,
    "title": "Change OutgoingMessage function signature",
    "created_at": "2025-01-08T05:14:33Z",
    "closed_at": "2025-01-08T07:55:11Z",
    "labels": [],
    "url": "https://github.com/VedalAI/neuro-game-sdk/pull/42",
    "body": "Change _get_data() function return types to Variant to match the parent class function signature",
    "comments_url": "https://api.github.com/repos/VedalAI/neuro-game-sdk/issues/42/comments",
    "author": "SeaLanternn",
    "comments": [
      {
        "user": "Alexejhero",
        "created_at": "2025-01-08T07:18:13Z",
        "body": "I don't think I want to do this - I left it like this on purpose"
      }
    ]
  },
  {
    "number": 31,
    "title": "randy: Handle incoming `action/result` messages",
    "created_at": "2024-12-28T14:35:33Z",
    "closed_at": "2025-01-03T08:46:46Z",
    "labels": [],
    "url": "https://github.com/VedalAI/neuro-game-sdk/pull/31",
    "body": "Resolves #25\r\n\r\nQuick PR to handle `action/result`s in accordance with the API.\r\n- A failure will retry the action\r\n- A success will send the next queued `actions/force`\r\n\r\nAction forces are queued until the correct result is received.\r\nWarnings are logged when receiving an unexpected result, or overload action forces.\r\n\r\n### RFC\r\n- `pendingResult` and `actionForceQueue` are not cleared when the connection is closed. This seems correct, but the behaviour is undocumented as far as I can tell.",
    "comments_url": "https://api.github.com/repos/VedalAI/neuro-game-sdk/issues/31/comments",
    "author": "Senyksia",
    "comments": [
      {
        "user": "Senyksia",
        "created_at": "2024-12-28T14:51:29Z",
        "body": "Targeted main instead of dev, whoops! Let me know if you need a rebase on my end."
      },
      {
        "user": "Alexejhero",
        "created_at": "2025-01-03T08:46:33Z",
        "body": "Im gonna trust that this works :)\r\n"
      }
    ]
  },
  {
    "number": 23,
    "title": "add gamemaker sdk to README.md",
    "created_at": "2024-12-18T07:19:08Z",
    "closed_at": "2024-12-18T14:47:32Z",
    "labels": [],
    "url": "https://github.com/VedalAI/neuro-game-sdk/pull/23",
    "body": null,
    "comments_url": "https://api.github.com/repos/VedalAI/neuro-game-sdk/issues/23/comments",
    "author": "noellepunk",
    "comments": [
      {
        "user": "Alexejhero",
        "created_at": "2024-12-18T14:48:23Z",
        "body": "Thank you!"
      }
    ]
  },
  {
    "number": 19,
    "title": "Godot SDK - Use Godot's built-in debugging",
    "created_at": "2024-12-13T19:02:16Z",
    "closed_at": "2024-12-13T20:27:56Z",
    "labels": [
      "godot-sdk"
    ],
    "url": "https://github.com/VedalAI/neuro-game-sdk/pull/19",
    "body": "The `Log` class is largely redundant—Godot comes with much more powerful debugging tools out of the box. These are more flexible with their input and integrate with the debugger tab as well as the OS terminal. Here's a rundown:\r\n\r\n`Log.info` -> `print`\r\nThe default print converts one _or more_ arguments of _**any**_ type to string in best way possible and logs them to the console.\r\n\r\n`Log.debug` -> `print_debug`\r\nLike print, but also prints the current stack frame. `print_stack` can also be used to print the current stack trace.\r\n\r\n`Log.warning` -> `push_warning`\r\nPushes a warning to the debugger and to the OS terminal.\r\n\r\n`Log.error` -> `push_error`\r\nPushes an error the the debugger and to the OS terminal. Does not  pause project execution.\r\n\r\n`Log.fatal` -> `assert(false, message)`\r\n`assert` can be used to print an error message *and* pause execution. This is the same as using `push_error` followed by a `breakpoint`. Keep in mind that assert is a debug feature and is only used in the editor.",
    "comments_url": "https://api.github.com/repos/VedalAI/neuro-game-sdk/issues/19/comments",
    "author": "averagebrine",
    "comments": [
      {
        "user": "averagebrine",
        "created_at": "2024-12-13T19:07:51Z",
        "body": "I left the original Log class in with updated functions, but it could be deleted."
      },
      {
        "user": "Alexejhero",
        "created_at": "2024-12-13T19:37:42Z",
        "body": "Can you also delete the original log class?"
      },
      {
        "user": "averagebrine",
        "created_at": "2024-12-13T19:55:55Z",
        "body": "> Can you also delete the original log class?\r\n\r\nGood to go."
      }
    ]
  },
  {
    "number": 15,
    "title": "Adding a sequence diagram to unity custom actions",
    "created_at": "2024-12-12T15:31:29Z",
    "closed_at": "2024-12-13T16:00:42Z",
    "labels": [
      "documentation"
    ],
    "url": "https://github.com/VedalAI/neuro-game-sdk/pull/15",
    "body": "Created a sequence diagram to help me (and others) understand how to implement custom actions correctly and the overall flow",
    "comments_url": "https://api.github.com/repos/VedalAI/neuro-game-sdk/issues/15/comments",
    "author": "FortressSpy",
    "comments": [
      {
        "user": "Alexejhero",
        "created_at": "2024-12-13T16:00:43Z",
        "body": "I am going to add a more complex diagram showing the server-side stuff as well so I am going to close this PR.\r\n\r\nThank you for the idea thought."
      }
    ]
  },
  {
    "number": 12,
    "title": "Make Godot SDK into a Godot plugin",
    "created_at": "2024-12-11T22:56:49Z",
    "closed_at": "2024-12-12T00:48:53Z",
    "labels": [
      "godot-sdk"
    ],
    "url": "https://github.com/VedalAI/neuro-game-sdk/pull/12",
    "body": "The autoload changed in project.godot is managed automatically by the plugin(plugin.gd), and is automatically added/removed when the plugin is enabled/disabled. This way you can drag and drop in the addon into any existing project without worrying about setting the autoload up yourself.\r\n\r\nIn the future, plugin.gd could be extended to unregister custom class_names when the plugin is disabled so they can't be used, though not strictly necessary and definitely not a priority.\r\n\r\nFeel free to nitpick. Hope this helps!",
    "comments_url": "https://api.github.com/repos/VedalAI/neuro-game-sdk/issues/12/comments",
    "author": "averagebrine",
    "comments": [
      {
        "user": "Alexejhero",
        "created_at": "2024-12-12T00:48:27Z",
        "body": "Looks good! Thank you for the contribution"
      }
    ]
  },
  {
    "number": 10,
    "title": "Updated to latest version of Godot (4.3)",
    "created_at": "2024-12-11T18:46:34Z",
    "closed_at": "2024-12-11T18:48:30Z",
    "labels": [
      "godot-sdk"
    ],
    "url": "https://github.com/VedalAI/neuro-game-sdk/pull/10",
    "body": "The latest version of Godot should be used. It's a one-line change. No issues after upgrading.",
    "comments_url": "https://api.github.com/repos/VedalAI/neuro-game-sdk/issues/10/comments",
    "author": "averagebrine",
    "comments": [
      {
        "user": "Alexejhero",
        "created_at": "2024-12-11T18:48:30Z",
        "body": "I have godot 4.1 installed and that's what I'm using. As long as the project is compatible with both versions, there's no need to change the project file that is in the repo."
      }
    ]
  },
  {
    "number": 9,
    "title": "Add JavaScript/TypeScript SDK",
    "created_at": "2024-12-11T08:25:09Z",
    "closed_at": "2024-12-11T16:03:34Z",
    "labels": [],
    "url": "https://github.com/VedalAI/neuro-game-sdk/pull/9",
    "body": "❤️",
    "comments_url": "https://api.github.com/repos/VedalAI/neuro-game-sdk/issues/9/comments",
    "author": "AriesAlex",
    "comments": [
      {
        "user": "Alexejhero",
        "created_at": "2024-12-11T16:03:39Z",
        "body": "Thank you!"
      }
    ]
  },
  {
    "number": 8,
    "title": "Methods for specifing what areas are reachable in a game for navigation.",
    "created_at": "2024-12-11T04:00:56Z",
    "closed_at": "2024-12-11T05:08:20Z",
    "labels": [
      "api"
    ],
    "url": "https://github.com/VedalAI/neuro-game-sdk/issues/8",
    "body": "One thing I would appreciate is a way to provide a depth texture or something similar to help provide navigation information to neuro, in addition to what is on screen. I feel this will help her navigate better in 3D environments, especially if it's a top-down view. I think navigation methods/info is something that needs discussion, hence this issue.",
    "comments_url": "https://api.github.com/repos/VedalAI/neuro-game-sdk/issues/8/comments",
    "author": "ILOVEPIE",
    "comments": [
      {
        "user": "Alexejhero",
        "created_at": "2024-12-11T05:08:20Z",
        "body": "At the moment this API is built to handle everything through text - what you are suggesting is out of scope for this API"
      },
      {
        "user": "ILOVEPIE",
        "created_at": "2024-12-11T06:25:24Z",
        "body": "So is she only gonna play text-based games? Not everything can be represented as text."
      },
      {
        "user": "Alexejhero",
        "created_at": "2024-12-11T06:28:50Z",
        "body": "Yep, as it says in the readme, this API is only for games that can be converted to and represented as text."
      },
      {
        "user": "ILOVEPIE",
        "created_at": "2024-12-11T08:23:06Z",
        "body": "> Yep, as it says in the readme, this API is only for games that can be converted to and represented as text.\n\nSorry, let me rephrase. Why did you guys point me to this API on the discord if so? I know there are a lot of people who frankly don't know how to program or how AI works, but you shouldn't assume that everyone is like that. I know there are a lot of idots, but I always start with the assumption that someone is mistaken or misunderstanding something rather than stupid or uneducated.\n\n\nAlso, isn't it kinda passive aggressive to have in the readme a specific line about CSGO, I get that that was what I originally spoke with vedal about, but either he or one of you guys could have explicitly stated a lack of interest in that. I was planning on writing a implementation for Baldur's Gate 3, but now I don't know if this sort of attitude is something I can support. \n\nI'm not dumb. I know multi-modal models are expensive to run. And to be perfectly frank I get why you aren't supporting such input. I just am a little frustrated with the assumption that a lot of people in CS and related fields have developed over the last 10 or so years that everyone is stupid until proven smart. I started programming when I was in elementary school like Vedal and over the past 21 years of my life that I've been programming I've seen society get more and more computer savy, right up until the point where everyone jumped on the \"everyone is an idiot, so let's make computers idiotproof\" train. And now zoomers can't even use a word processor. People are just as smart now as they ever were, the issue is nobody is challenged anymore, so nobody learns.\n\nHonestly this post is kinda a rant at this point, but what I'm trying to say is: Don't assume."
      },
      {
        "user": "Alexejhero",
        "created_at": "2024-12-11T16:00:13Z",
        "body": "<details>\r\n<summary>Quoted text</summary>\r\n\r\n> Sorry, let me rephrase. Why did you guys point me to this API on the discord if so? I know there are a lot of people who frankly don't know how to program or how AI works, but you shouldn't assume that everyone is like that. I know there are a lot of idots, but I always start with the assumption that someone is mistaken or misunderstanding something rather than stupid or uneducated.\r\n> \r\n> Also, isn't it kinda passive aggressive to have in the readme a specific line about CSGO, I get that that was what I originally spoke with vedal about, but either he or one of you guys could have explicitly stated a lack of interest in that. I was planning on writing a implementation for Baldur's Gate 3, but now I don't know if this sort of attitude is something I can support.\r\n> \r\n> I'm not dumb. I know multi-modal models are expensive to run. And to be perfectly frank I get why you aren't supporting such input. I just am a little frustrated with the assumption that a lot of people in CS and related fields have developed over the last 10 or so years that everyone is stupid until proven smart. I started programming when I was in elementary school like Vedal and over the past 21 years of my life that I've been programming I've seen society get more and more computer savy, right up until the point where everyone jumped on the \"everyone is an idiot, so let's make computers idiotproof\" train. And now zoomers can't even use a word processor. People are just as smart now as they ever were, the issue is nobody is challenged anymore, so nobody learns.\r\n> \r\n> Honestly this post is kinda a rant at this point, but what I'm trying to say is: Don't assume.\r\n\r\n</details>\r\n\r\nHello. I want to start off this message by saying I have no idea what the fuck you are talking about.\r\n\r\nI want to clarify that I did not assume anything about you, and I did not assume you were \"stupid or uneducated\". Instead, I drew the obvious conclusion that you clearly didn't read the readme file, or if you did, you decided to completely ignore it. Even though that file clearly states the purpose of this API and what it can be used for, you decided to open two issues to suggest things that were outside of the scope of the API, and then got upset when I told you to read the docs.\r\n\r\nRegarding the \"specific line about CSGO\", I can assure you that I wrote it without any kind of input from Vedal. I think it is very short-sighted to focus on one singular line in the documentation and interpret that as some sort of personal attack.\r\n\r\nI cannot speak on behalf of Vedal so I do not know if he has an interest in that or not. All I know is that this API will never work with CSGO, and thus I added it to the readme.\r\n\r\n> I'm not dumb. I know multi-modal models are expensive to run. And to be perfectly frank I get why you aren't supporting such input. I just am a little frustrated with the assumption that a lot of people in CS and related fields have developed over the last 10 or so years that everyone is stupid until proven smart. I started programming when I was in elementary school like Vedal and over the past 21 years of my life that I've been programming I've seen society get more and more computer savy, right up until the point where everyone jumped on the \"everyone is an idiot, so let's make computers idiotproof\" train. And now zoomers can't even use a word processor. People are just as smart now as they ever were, the issue is nobody is challenged anymore, so nobody learns.\r\n\r\nok bro"
      },
      {
        "user": "ILOVEPIE",
        "created_at": "2024-12-11T21:40:42Z",
        "body": "Sorry, i guess I read too much into it, my apologies. I have a habit of skipping to the API reference for a lot of projects due to the docs usually being too handholding and verbose to waste my time on. It bit me in the ass here, my apologies."
      },
      {
        "user": "Alexejhero",
        "created_at": "2024-12-12T00:54:26Z",
        "body": "I apologize as well for the harsh message that I sent. I hope everything is alright now."
      }
    ]
  }
]