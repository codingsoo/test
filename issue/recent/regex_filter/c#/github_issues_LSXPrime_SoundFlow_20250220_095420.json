[
  {
    "number": 2,
    "title": "Feature Request: Set Loop Point",
    "created_at": "2025-02-09T01:21:18Z",
    "closed_at": "2025-02-09T17:06:05Z",
    "labels": [],
    "url": "https://github.com/LSXPrime/SoundFlow/issues/2",
    "body": "First of all, this is awesome. I can already think of a couple ways I can use this library. Done some quick testing, and it works well on my Linux Mint computer.\n\nRegarding my request, it would be nice if there were functionality to set the loop point for the SoundPlayer. It looks to always return to 0. Obviously this makes sense as the default as it's what you'd want in a normal audio player, but it doesn't work well with things like video game audio that may have a loop point to make it sound continuous.\n\nAlso, is there a good way of playing \"raw\" PCM audio? For now I was able to get it to work by using a memory stream and taking on WAV header data, but I wasn't sure if there was maybe something I missed.",
    "comments_url": "https://api.github.com/repos/LSXPrime/SoundFlow/issues/2/comments",
    "author": "MattEqualsCoder",
    "comments": [
      {
        "user": "LSXPrime",
        "created_at": "2025-02-09T17:06:05Z",
        "body": "I've just pushed a commit and updated the documentation to include the suggested features. You can now utilize Raw PCM data with `RawDataProvider` in any format (U8, S16, S24, S32, F32) by simply specifying the sample rate and channels count. Additionally, I've enabled Loop points support for both Players.\n\n```\n/// <summary>\n    /// Gets the loop start point in samples.\n    /// </summary>\n    int LoopStartSamples { get; }\n    \n    /// <summary>\n    /// Gets the loop end point in samples. -1 indicates loop to the natural end of the audio.\n    /// </summary>\n    int LoopEndSamples { get; }\n    \n    /// <summary>\n    /// Gets the loop start point in seconds.\n    /// </summary>\n    float LoopStartSeconds { get; }\n    \n    /// <summary>\n    /// Gets the loop end point in seconds. -1 indicates loop to the natural end of the audio.\n    /// </summary>\n    float LoopEndSeconds { get; }\n\n/// <summary>\n    /// Sets the loop points for the sound player in seconds.\n    /// </summary>\n    /// <param name=\"startTime\">The loop start time in seconds. Must be non-negative.</param>\n    /// <param name=\"endTime\">The loop end time in seconds, optional. Use -1 or null to loop to the natural end of the audio. Must be greater than or equal to startTime, or -1.</param>\n    void SetLoopPoints(float startTime, float? endTime = -1f);\n\n    /// <summary>\n    /// Sets the loop points for the sound player in samples.\n    /// </summary>\n    /// <param name=\"startSample\">The loop start sample. Must be non-negative.</param>\n    /// <param name=\"endSample\">The loop end sample, optional. Use -1 or null to loop to the natural end of the audio. Must be greater than or equal to startSample, or -1.</param>\n    void SetLoopPoints(int startSample, int endSample = -1);\n```\n\nThank you for confirming its compatibility with Linux. If you have any additional suggestions, please don't hesitate to open an issue or feature request.\n\nNuget packages will be published soon."
      }
    ]
  }
]