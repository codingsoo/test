[
  {
    "number": 35,
    "title": "Love DisplayMonitorHelper.  ResizeAndCenterWindowToPercentageOfWorkArea function...",
    "created_at": "2025-02-15T15:05:08Z",
    "closed_at": "2025-02-15T16:51:22Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/ghost1372/DevWinUI/issues/35",
    "body": "Hi.  I love the new DisplayMonitorHelper, thanks!\n\nHere's a helpful method I created for myself that your new helper made possible, if you'd like to include it in your WindowHelper or something for others.  It will resize a window to 80% of the working area and center it, for example.\n\n\n```\n  public static void ResizeAndCenterWindowToPercentageOfWorkArea(Window window, double percentage)\n  {\n      // Validate the percentage\n      if (percentage <= 0 || percentage > 100)\n      {\n          throw new ArgumentException(\"Percentage must be between 1 and 100.\", nameof(percentage));\n      }\n\n      Rect maxRect = DevWinUI.DisplayMonitorHelper.GetMonitorInfo(window).RectWork;\n\n      // Calculate new dimensions based on the percentage.\n      double scaleFactor = percentage / 100.0;\n      int newWidth = (int)(maxRect.Width * scaleFactor);\n      int newHeight = (int)(maxRect.Height * scaleFactor);\n\n      // Calculate top-left coordinates to center the window inside maxRect.\n      int newX = (int)(maxRect.X + (maxRect.Width - newWidth) / 2.0);\n      int newY = (int)(maxRect.Y + (maxRect.Height - newHeight) / 2.0);\n\n      window.AppWindow.MoveAndResize(new RectInt32(newX, newY, newWidth, newHeight));\n\n  }\n```",
    "comments_url": "https://api.github.com/repos/ghost1372/DevWinUI/issues/35/comments",
    "author": "MPITech",
    "comments": [
      {
        "user": "ghost1372",
        "created_at": "2025-02-15T15:17:55Z",
        "body": "> Hi.  I love the new DisplayMonitorHelper, thanks!\n> \n> Here's a helpful method I created for myself that your new helper made possible, if you'd like to include it in your WindowHelper or something for others.  It will resize a window to 80% of the working area and center it, for example.\n> \n> \n> ```\n>   public static void ResizeAndCenterWindowToPercentageOfWorkArea(Window window, double percentage)\n>   {\n>       // Validate the percentage\n>       if (percentage <= 0 || percentage > 100)\n>       {\n>           throw new ArgumentException(\"Percentage must be between 1 and 100.\", nameof(percentage));\n>       }\n> \n>       Rect maxRect = DevWinUI.DisplayMonitorHelper.GetMonitorInfo(window).RectWork;\n> \n>       // Calculate new dimensions based on the percentage.\n>       double scaleFactor = percentage / 100.0;\n>       int newWidth = (int)(maxRect.Width * scaleFactor);\n>       int newHeight = (int)(maxRect.Height * scaleFactor);\n> \n>       // Calculate top-left coordinates to center the window inside maxRect.\n>       int newX = (int)(maxRect.X + (maxRect.Width - newWidth) / 2.0);\n>       int newY = (int)(maxRect.Y + (maxRect.Height - newHeight) / 2.0);\n> \n>       window.AppWindow.MoveAndResize(new RectInt32(newX, newY, newWidth, newHeight));\n> \n>   }\n> ```\n\nNice!\nI'll test it and add it if everything is fine."
      }
    ]
  },
  {
    "number": 34,
    "title": "'System.TypeLoadException' in DevWinUI.Controls.dll launching app with Win SDK 1.7 Preview 1",
    "created_at": "2025-02-12T21:43:30Z",
    "closed_at": "2025-02-13T15:15:12Z",
    "labels": [],
    "url": "https://github.com/ghost1372/DevWinUI/issues/34",
    "body": "Hi!  I am getting 'System.TypeLoadException' in DevWinUI.Controls.dll launching app with Win SDK 1.7 Preview 1, app won't launch.  Known issue?  Thanks!",
    "comments_url": "https://api.github.com/repos/ghost1372/DevWinUI/issues/34/comments",
    "author": "MPITech",
    "comments": [
      {
        "user": "ghost1372",
        "created_at": "2025-02-12T22:23:24Z",
        "body": "Hi, are you using v8.0.0-preview6 ? Or are you using the source code directly?\nI'll look into this further tomorrow, I have to sleep now it is 2-AM. (sorry ðŸ˜…)\nI didn't see any problems while testing some new code today. (I used it directly.)"
      },
      {
        "user": "MPITech",
        "created_at": "2025-02-12T22:27:47Z",
        "body": "Hi, goodnight!  Sorry I didn't mention, yes, I am using 8.0.0 preview 6 and I see a dozen of those same errors in the Immediate Window in VS and the app crashes without showing the main window.  When I reverted back to 1.7 exp 3, it was fine again.  Thanks!  (I am not using the source code directly, just the nuget packages)"
      },
      {
        "user": "MPITech",
        "created_at": "2025-02-12T22:36:19Z",
        "body": "Upon further examination, I am seeing \"Exception thrown: 'System.TypeLoadException' in DevWinUI.Controls.dll\" a dozen times in the immediate window even with SDK 1.7 exp 3 and the application still loads okay.\n\nI checked the event viewer and the crash in my app with SDK 1.7 preview 1 is actually happening in Microsoft.UI.Xaml.dll, version: 3.1.7.0,  So it is likely not your issue, I just never noticed those DevWinUI.Controls.dll entries before when using SDK 1.7 exp 3 but I guess they have always been there.  Is there a way I can get more info for you on that error short of sending source code, which I am not permitted to do?  Thanks!"
      },
      {
        "user": "ghost1372",
        "created_at": "2025-02-12T22:43:15Z",
        "body": "I will be releasing a new version soon based on Preview 1. I am finalizing some things and if all goes well I will release it tomorrow."
      },
      {
        "user": "MPITech",
        "created_at": "2025-02-12T22:46:16Z",
        "body": "Ok thanks!"
      },
      {
        "user": "ghost1372",
        "created_at": "2025-02-13T15:15:12Z",
        "body": "Hi @MPITech \nUsing both WSSDK v1.7- Preview and Experimental at the same time in the same project causes this problem, v8.0.0-Preview 7 is based on WASDK v1.7-Preview 1. And there is no problem.\n\nUnfortunately, at the last minute, while testing the new codes, I realized that StartupHelper class was not working properly for packaged applications, but as I promised you, I uploaded the new version.\nAnd the StartupHelper problem will be fixed in the next version."
      },
      {
        "user": "MPITech",
        "created_at": "2025-02-13T15:23:01Z",
        "body": "Hi, I wasn't using 1.7 preview and experimental at the same time, but DevWinUI Preview 7 and SDK 1.7 Preview 1 together are now fine and my app no longer crashes on startup, thanks a lot!\n\nI do see one error on launch in the immediate window on startup now:  Exception thrown: 'System.InvalidCastException' in DevWinUI.dll that wasn't there before.  Is there anything I can do to get you more information for that?  I don't see any functionality problems yet."
      },
      {
        "user": "ghost1372",
        "created_at": "2025-02-13T15:27:52Z",
        "body": "> Hi, I wasn't using 1.7 preview and experimental at the same time, but DevWinUI Preview 7 and SDK 1.7 Preview 1 together are now fine and my app no longer crashes on startup, thanks a lot!\n> \n> I do see one error on launch in the immediate window on startup now: Exception thrown: 'System.InvalidCastException' in DevWinUI.dll that wasn't there before. Is there anything I can do to get you more information for that? I don't see any functionality problems yet.\n\nThis problem was caused because DevWinUI was using the experimental version and you were using the preview version.\n It's good that the problem has been fixed.\n\nIt might be because of the HomeLandingPage, I made some changes to it to remove the dependency on the communityToolkit package. \n\nYou can check if the error still occurs by disabling the HomeLandingPage, but it is a bit difficult to check because the crash does not occur."
      },
      {
        "user": "ghost1372",
        "created_at": "2025-02-13T16:23:16Z",
        "body": "@MPITech i tested DevWinUI.GalleryApp and i did not see any  **InvalidCastException**, can you provide a sample repro project?"
      },
      {
        "user": "MPITech",
        "created_at": "2025-02-13T17:35:14Z",
        "body": "@ghost1372 I will do my best, I am at work right now but I will see if I can replicate in a small project when I can.  TY"
      }
    ]
  },
  {
    "number": 33,
    "title": "JSON_FILE_PATH is not linked to App.Current.NavService.ConfigureJsonFile(\"Assets/NavViewMenu/AppData.json\");",
    "created_at": "2025-02-10T17:21:26Z",
    "closed_at": "2025-02-10T19:14:05Z",
    "labels": [],
    "url": "https://github.com/ghost1372/DevWinUI/issues/33",
    "body": "I wanted to merge my two apps into one by loading two different JsonFiles for the NavView. \nSo I tried changing the ConfigureJsonFile depending on which NavView I want to load. \n\n```\nif (...)\n{\n    App.Current.NavService.ConfigureJsonFile(\"Assets/NavViewMenu/AppData1.json\");\n}\nelse\n{\n    App.Current.NavService.ConfigureJsonFile(\"Assets/NavViewMenu/AppData2.json\");\n}\n```\n\nBut then I realized that this doesn't work without me manually changing the JSON_FILE_PATH in NavigationPageMappings.tt to the same one. \n\neither \n`<# string JSON_FILE_PATH = \"AppData1.json\"; #>`\n\nor \n`<# string JSON_FILE_PATH = \"AppData2.json\"; #>`\n\nIt should use the same Json as specified in the ConfigureJsonFile.",
    "comments_url": "https://api.github.com/repos/ghost1372/DevWinUI/issues/33/comments",
    "author": "tinodin",
    "comments": [
      {
        "user": "ghost1372",
        "created_at": "2025-02-10T17:35:59Z",
        "body": "> I wanted to merge my two apps into one by loading two different JsonFiles for the NavView. \n> So I tried changing the ConfigureJsonFile depending on which NavView I want to load. \n> \n> ```\n> if (...)\n> {\n>     App.Current.NavService.ConfigureJsonFile(\"Assets/NavViewMenu/AppData1.json\");\n> }\n> else\n> {\n>     App.Current.NavService.ConfigureJsonFile(\"Assets/NavViewMenu/AppData2.json\");\n> }\n> ```\n> \n> But then I realized that this doesn't work without me manually changing the JSON_FILE_PATH in NavigationPageMappings.tt to the same one. \n> \n> either \n> `<# string JSON_FILE_PATH = \"AppData1.json\"; #>`\n> \n> or \n> `<# string JSON_FILE_PATH = \"AppData2.json\"; #>`\n> \n> It should use the same Json as specified in the ConfigureJsonFile.\n\nT4 is a compile-time script that reads the contents of a json file and generate page mappings based on your items, we cant use ConfigureJsonFile Because there is no fixed location for it or it may be used in different ways.\nYou can copy the C# content generated by this script and create a new class and add it manually yourself.\nWe have to use page mapping dictionary because of aot support."
      },
      {
        "user": "tinodin",
        "created_at": "2025-02-10T19:14:03Z",
        "body": "Thank you for the workaround. "
      }
    ]
  },
  {
    "number": 13,
    "title": "Can the template of the current project be used in the official project? Or do I need to wait for a while?",
    "created_at": "2024-12-08T20:47:41Z",
    "closed_at": "2025-01-04T19:25:56Z",
    "labels": [],
    "url": "https://github.com/ghost1372/DevWinUI/issues/13",
    "body": "Can the template of the current project be used in the official project? Or do I need to wait for a while?",
    "comments_url": "https://api.github.com/repos/ghost1372/DevWinUI/issues/13/comments",
    "author": "scx1125",
    "comments": [
      {
        "user": "ghost1372",
        "created_at": "2024-12-09T04:46:10Z",
        "body": "DevWinUI use wasdk v1.7-exp1. And according to Microsoft, it is not suitable for production.\nyou can use Project template and Blank WinUI App template which does not have devwinui packages."
      }
    ]
  },
  {
    "number": 10,
    "title": "[Question] Best practice for ThemeService in multi-window application?",
    "created_at": "2024-12-07T02:06:40Z",
    "closed_at": "2024-12-07T12:14:24Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/ghost1372/DevWinUI/issues/10",
    "body": "Hi,\r\n\r\nWhen using the ThemeService, it must be initialized with the window as a parameter.  In a multi-window app, should a new ThemeService be created for each window and its settings set to the main application window's settings?  Or should the main window's ThemeService just call .Initialize() on the newly created window?\r\n\r\nAlso, what is the best method for applying changes to the settings (tint color, backdrop) to all open windows?  If the above answer is to create a separate TheemService for each window, should I just apply the settings to each window's ThemeService in a loop?\r\n\r\nThanks!",
    "comments_url": "https://api.github.com/repos/ghost1372/DevWinUI/issues/10/comments",
    "author": "MPITech",
    "comments": [
      {
        "user": "ghost1372",
        "created_at": "2024-12-07T04:57:30Z",
        "body": "It is not good to create multiple instances of a class for each window.\nYou can get backdrop and ElementTheme from ThemeService and manually set it in window loaded/ctor method.\nI am considering adding multi-window support to the ThemeService.\nBut this requires you to track the windows that are created.\n\nFor example:\n```\nWindow newWindow = new Window();\nWindowHelper.TrackWindow(newWindow);\n```\n\nThe TrackWindow method adds the windows to a dictionary, and finally the ThemeService can access the windows and apply theme/backdrop..."
      },
      {
        "user": "ghost1372",
        "created_at": "2024-12-07T12:14:24Z",
        "body": "Hi @MPITech \r\ni added Multi-Window support for ThemeService.\r\nwhen you created a window, you have to use `TrackWindow `like this:\r\n\r\n`WindowHelper.TrackWindow(myWindow);`\r\nthen ThemeService will use a foreach in a list and apply all backdrop/elementTheme/Tint,....\r\n"
      },
      {
        "user": "MPITech",
        "created_at": "2024-12-07T12:43:02Z",
        "body": "Awesome, thanks.  I was already tracking windows so this will be easy to integrate.  Thanks again."
      }
    ]
  },
  {
    "number": 7,
    "title": "Missed dependencies when creating project with wizard",
    "created_at": "2024-12-04T17:48:59Z",
    "closed_at": "2024-12-04T19:00:44Z",
    "labels": [],
    "url": "https://github.com/ghost1372/DevWinUI/issues/7",
    "body": "When creating app with wizard there are some dependency errors: \r\n- CS1061 ContentDialog does not have contain definition ShowAsyncQueue in `AppUpdateSettingViewModel.cs` (selected Update Settings in wizard pages section)\r\n- CS1061 JsonNavigationService does not contain definition ConfigureTitleBar in `MainPage.cs`\r\n\r\nWizard not supported for prerelease version?",
    "comments_url": "https://api.github.com/repos/ghost1372/DevWinUI/issues/7/comments",
    "author": "aexra",
    "comments": [
      {
        "user": "ghost1372",
        "created_at": "2024-12-04T18:28:16Z",
        "body": "> When creating app with wizard there are some dependency errors: \n> - CS1061 ContentDialog does not have contain definition ShowAsyncQueue in `AppUpdateSettingViewModel.cs` (selected Update Settings in wizard pages section)\n> - CS1061 JsonNavigationService does not contain definition ConfigureTitleBar in `MainPage.cs`\n> \n> Wizard not supported for prerelease version?\n\nWizard is in preview, i removed ContentDialog Extension but it seems that i forget to update `ShowAsyncQueue` to `ShowAsync`\n\nI will upload a new nuget package which contains  `ConfigureTitleBar` method.\nI was a little busy, I forgot to upload."
      },
      {
        "user": "ghost1372",
        "created_at": "2024-12-04T19:00:44Z",
        "body": "i uploaded DevWinUI v8.0.0-Preview3 nuget packages and VSIX Template v11.0.3 and they will be available soon after a few minutes."
      }
    ]
  }
]