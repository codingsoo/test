[
  {
    "number": 239,
    "title": "Implement Hash service that can receive the Submission ID and return the Hash and validate the Hash",
    "created_at": "2024-11-26T11:14:50Z",
    "closed_at": "2024-12-02T15:31:14Z",
    "labels": [
      "enhancement",
      ":gift: data-collection"
    ],
    "url": "https://github.com/endatix/endatix/issues/239",
    "body": "### Scope\r\n- [x] Implement `IHashService` with two way hash algorithm to convert long to hash and vice versa. Use algorithm similar to YouTube shorts\r\n\r\n### Acceptance Criteria\r\n- `IHashService` can be injected via DI\r\n- IHashService accepts generic param <T> as input and returns string for the Hash\r\n-  Hash output resembles YouTube short Urls\r\n- Decryption function accepts the string Hash and expected output <T> param \r\n- IHashService methods returns HashOperationResult, which has boolean flag for success and T or string params for the result. This way it can support the Result pattern and we can avoid exception based control flow",
    "comments_url": "https://api.github.com/repos/endatix/endatix/issues/239/comments",
    "author": "PeterMarinov",
    "comments": [
      {
        "user": "dspetrov",
        "created_at": "2024-11-30T22:21:46Z",
        "body": "The solution is a bit different but achieves the same goals.\r\nWe have `ISubmissionTokenService` with methods `ObtainToken(long submissionId)` and `ResolveToken(string token)`. They do not encrypt/decrypt the ID but create/get a token for a submission ID or get the submission ID for a valid token."
      }
    ]
  },
  {
    "number": 3,
    "title": "DevX: Add Git commit rules and checks",
    "created_at": "2024-07-29T08:17:10Z",
    "closed_at": "2024-08-05T16:08:00Z",
    "labels": [],
    "url": "https://github.com/endatix/endatix/issues/3",
    "body": null,
    "comments_url": "https://api.github.com/repos/endatix/endatix/issues/3/comments",
    "author": "dspetrov",
    "comments": [
      {
        "user": "PeterMarinov",
        "created_at": "2024-08-05T16:08:00Z",
        "body": "@dspetrov  - closing this issue as duplicate of #42 "
      }
    ]
  }
]