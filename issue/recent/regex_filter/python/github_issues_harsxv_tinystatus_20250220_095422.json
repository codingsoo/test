[
  {
    "number": 36,
    "title": "Enhancement: Beautifying the Front-end side of things",
    "created_at": "2024-10-18T12:43:29Z",
    "closed_at": "2024-10-24T03:19:38Z",
    "labels": [
      "enhancement",
      "hacktoberfest-accepted"
    ],
    "url": "https://github.com/harsxv/tinystatus/issues/36",
    "body": "Hey! I can help improving the current website by adding icons and small css tweaks. Please assign me this issue! Thanks in advance",
    "comments_url": "https://api.github.com/repos/harsxv/tinystatus/issues/36/comments",
    "author": "AalokeCode",
    "comments": [
      {
        "user": "harsxv",
        "created_at": "2024-10-18T13:04:12Z",
        "body": "Hey @AalokeCode !\r\n\r\nThat's cool! Issue assigned to you.\r\n\r\nLooking forward for the improvement :)"
      },
      {
        "user": "AalokeCode",
        "created_at": "2024-10-23T09:32:57Z",
        "body": "Hey @harsxv, Please check PR #37 "
      },
      {
        "user": "harsxv",
        "created_at": "2024-10-23T12:59:13Z",
        "body": "Thanks, looking "
      }
    ]
  },
  {
    "number": 35,
    "title": "Suggestion: Auto-refresh",
    "created_at": "2024-10-16T16:34:07Z",
    "closed_at": "2024-10-19T16:37:13Z",
    "labels": [],
    "url": "https://github.com/harsxv/tinystatus/issues/35",
    "body": "Have a client-side autorefresh.",
    "comments_url": "https://api.github.com/repos/harsxv/tinystatus/issues/35/comments",
    "author": "GeekyTim",
    "comments": [
      {
        "user": "harsxv",
        "created_at": "2024-10-19T16:28:27Z",
        "body": "Could you clarify what kind of auto refresh you're referring to? The script already has feature for continuous monitoring and automatically generates a new index.html."
      },
      {
        "user": "GeekyTim",
        "created_at": "2024-10-19T16:37:13Z",
        "body": "I didn't think mine was refreshing, so I added:\r\n\r\n    <meta http-equiv=\"refresh\" content=\"30\">\r\n\r\nMy mistake - I see it in the .env."
      }
    ]
  },
  {
    "number": 28,
    "title": "Handle Self-Signed certificates",
    "created_at": "2024-09-30T10:28:31Z",
    "closed_at": "2024-10-02T13:22:38Z",
    "labels": [],
    "url": "https://github.com/harsxv/tinystatus/pull/28",
    "body": "Allow self-signed certificates to be used for sites.",
    "comments_url": "https://api.github.com/repos/harsxv/tinystatus/issues/28/comments",
    "author": "GeekyTim",
    "comments": [
      {
        "user": "harsxv",
        "created_at": "2024-10-02T13:22:55Z",
        "body": "Thanks for your contribution!"
      }
    ]
  },
  {
    "number": 27,
    "title": "Local self-signed certs",
    "created_at": "2024-09-27T14:35:55Z",
    "closed_at": "2024-10-02T13:31:09Z",
    "labels": [],
    "url": "https://github.com/harsxv/tinystatus/issues/27",
    "body": "Some of my internal servers use self-signed certificates, but I must monitor their interfaces. However, because they are self signed I get an error:\r\n\r\n Cannot connect to host xxxx.local ssl:True [SSLCertVerificationError: (1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: self-signed certificate (_ssl.c:992)')]\r\n\r\nCould this be handled differently (e.g. with a flag to ignore self-signed?)",
    "comments_url": "https://api.github.com/repos/harsxv/tinystatus/issues/27/comments",
    "author": "GeekyTim",
    "comments": [
      {
        "user": "GeekyTim",
        "created_at": "2024-09-27T15:26:53Z",
        "body": "I have a solution, which I have implemented in my local version. Once I have tested it all out I will create a pull request."
      },
      {
        "user": "harsxv",
        "created_at": "2024-09-30T04:02:02Z",
        "body": "Since I dont have any self-signed certs, yet, I can't reproduce the issue. Looking forward for your PR! Thanks @GeekyTim "
      },
      {
        "user": "GeekyTim",
        "created_at": "2024-09-30T10:29:19Z",
        "body": "Pull request requested."
      }
    ]
  },
  {
    "number": 21,
    "title": "make it clean code and disable right click",
    "created_at": "2024-09-09T11:04:31Z",
    "closed_at": "2024-09-09T22:33:24Z",
    "labels": [],
    "url": "https://github.com/harsxv/tinystatus/pull/21",
    "body": "Hi Harry, I want to contribute again. \r\nUpdating some scripts and making the clean code üôèüèº ",
    "comments_url": "https://api.github.com/repos/harsxv/tinystatus/issues/21/comments",
    "author": "masdzub",
    "comments": [
      {
        "user": "masdzub",
        "created_at": "2024-09-09T22:29:21Z",
        "body": "Hi Harry, it's done. please try check it again. "
      },
      {
        "user": "harsxv",
        "created_at": "2024-09-09T22:33:48Z",
        "body": "Neat, thank you!"
      }
    ]
  },
  {
    "number": 20,
    "title": "readme : add feature dark mode",
    "created_at": "2024-09-09T04:07:11Z",
    "closed_at": "2024-09-09T04:14:57Z",
    "labels": [],
    "url": "https://github.com/harsxv/tinystatus/pull/20",
    "body": null,
    "comments_url": "https://api.github.com/repos/harsxv/tinystatus/issues/20/comments",
    "author": "masdzub",
    "comments": [
      {
        "user": "harsxv",
        "created_at": "2024-09-09T04:10:08Z",
        "body": "It would even better if you could add a side-by-side screenshot of the dark theme in the README üëçüèΩ "
      },
      {
        "user": "harsxv",
        "created_at": "2024-09-09T04:15:03Z",
        "body": "Neat, thank you!"
      }
    ]
  },
  {
    "number": 18,
    "title": "mv : move powered into bottom",
    "created_at": "2024-09-09T02:24:42Z",
    "closed_at": "2024-09-09T02:25:11Z",
    "labels": [],
    "url": "https://github.com/harsxv/tinystatus/pull/18",
    "body": null,
    "comments_url": "https://api.github.com/repos/harsxv/tinystatus/issues/18/comments",
    "author": "masdzub",
    "comments": [
      {
        "user": "harsxv",
        "created_at": "2024-09-09T02:25:16Z",
        "body": "Aha okay, merged"
      }
    ]
  },
  {
    "number": 17,
    "title": "Add a configuration for disabling constant monitoring",
    "created_at": "2024-09-07T00:56:04Z",
    "closed_at": "2024-09-07T02:52:20Z",
    "labels": [],
    "url": "https://github.com/harsxv/tinystatus/pull/17",
    "body": "Adds a new value to `.env` called `MONITOR_CONTINOUSLY` which is either `True` or `False`. Defaults to `True` and monitors continuously which is the existing behavior. \r\n\r\nThe imagined use case is to allow the script to be run on an interval specified by cron.",
    "comments_url": "https://api.github.com/repos/harsxv/tinystatus/issues/17/comments",
    "author": "djbeadle",
    "comments": [
      {
        "user": "harsxv",
        "created_at": "2024-09-07T02:52:13Z",
        "body": "Good idea! This is merged as well. Thanks for your contribution!"
      }
    ]
  },
  {
    "number": 16,
    "title": "Add option to output HTML to custom directory",
    "created_at": "2024-09-07T00:51:26Z",
    "closed_at": "2024-09-07T02:43:59Z",
    "labels": [],
    "url": "https://github.com/harsxv/tinystatus/pull/16",
    "body": "Adds a new `.env` configuration option to export HTML to a separate directory. Defaults to the working directory (the existing behavior).\r\n\r\nThe imagined use case is to place HTML files in a directory served by a webserver without making the other files accessible. Note that this does not do anything with the JSON files.\r\n\r\nIn `.env`:\r\n\r\n`HTML_OUTPUT_DIRECTORY=path/relative/to/working/directory`",
    "comments_url": "https://api.github.com/repos/harsxv/tinystatus/issues/16/comments",
    "author": "djbeadle",
    "comments": [
      {
        "user": "harsxv",
        "created_at": "2024-09-07T02:44:07Z",
        "body": "Nice catch! Totally agree with this, merged :)"
      }
    ]
  },
  {
    "number": 13,
    "title": "Keep CHECK_INTERVAL consistent",
    "created_at": "2024-09-06T13:36:30Z",
    "closed_at": "2024-09-16T12:12:27Z",
    "labels": [
      "enhancement",
      "help wanted"
    ],
    "url": "https://github.com/harsxv/tinystatus/issues/13",
    "body": "I‚Äôd like to suggest a small improvement: currently, using await asyncio.sleep(CHECK_INTERVAL) doesn‚Äôt take into account the time spent during the checks. A more accurate approach might be something like await asyncio.sleep(max(0, CHECK_INTERVAL - time_spent)) to compensate for that time.\r\n\r\nPS: @harsxv, thank you very much for this amazing and straightforward project! \r\n\r\n",
    "comments_url": "https://api.github.com/repos/harsxv/tinystatus/issues/13/comments",
    "author": "maranik",
    "comments": [
      {
        "user": "harsxv",
        "created_at": "2024-09-13T10:33:11Z",
        "body": "Hmm that's make sense. Shoould be tested..\r\nThank you @maranik !"
      }
    ]
  },
  {
    "number": 10,
    "title": "Perform checks in parallel",
    "created_at": "2024-09-05T18:54:39Z",
    "closed_at": "2024-09-06T00:11:24Z",
    "labels": [],
    "url": "https://github.com/harsxv/tinystatus/pull/10",
    "body": "Closes #6\r\nIt requires python3.11",
    "comments_url": "https://api.github.com/repos/harsxv/tinystatus/issues/10/comments",
    "author": "maranik",
    "comments": [
      {
        "user": "harsxv",
        "created_at": "2024-09-05T23:44:55Z",
        "body": "Great! I‚Äôve just tested it, but it might be a good idea to ensure the results of the checks are always in the same order.\r\n\r\n```\r\n[{'name': 'Wikipedia Home', 'status': True}, {'name': 'Cloudflare DNS Checker', 'status': True}, {'name': 'GitHub API', 'status': True}, {'name': 'Twitter', 'status': True}, {'name': 'DigitalOcean API', 'status': True}, {'name': 'Google Public DNS', 'status': True}, {'name': 'AWS S3 API', 'status': True}, {'name': 'DigitalOcean', 'status': True}, {'name': 'Amazon Web Services', 'status': True}, {'name': 'Dummy Postgres Database', 'status': False}, {'name': 'Facebook Home', 'status': True}, {'name': 'GitHub Home', 'status': True}, {'name': 'Google Home', 'status': True}, {'name': 'Dummy MySQL Database', 'status': False}, {'name': 'Wikipedia API', 'status': True}, {'name': 'Localhost', 'status': True}]\r\n2024-09-06 06:19:58,124 - INFO - Status page and history updated at 2024-09-06 06:19:58.124496\r\n2024-09-06 06:19:58,124 - WARNING - Services currently down: Dummy Postgres Database, Dummy MySQL Database\r\n[{'name': 'AWS S3 API', 'status': True}, {'name': 'Twitter', 'status': True}, {'name': 'Facebook Home', 'status': True}, {'name': 'Dummy MySQL Database', 'status': False}, {'name': 'Amazon Web Services', 'status': True}, {'name': 'Google Public DNS', 'status': True}, {'name': 'Dummy Postgres Database', 'status': False}, {'name': 'Cloudflare DNS Checker', 'status': True}, {'name': 'DigitalOcean API', 'status': True}, {'name': 'Google Home', 'status': True}, {'name': 'Wikipedia API', 'status': True}, {'name': 'DigitalOcean', 'status': True}, {'name': 'Localhost', 'status': True}, {'name': 'Wikipedia Home', 'status': True}, {'name': 'GitHub API', 'status': True}, {'name': 'GitHub Home', 'status': True}]\r\n2024-09-06 06:21:43,214 - INFO - Status page and history updated at 2024-09-06 06:21:43.214777\r\n2024-09-06 06:21:43,215 - WARNING - Services currently down: Dummy MySQL Database, Dummy Postgres Database\r\n```\r\n\r\nCan we map the results to the original order (from the checks.yaml file) before returning them? "
      }
    ]
  },
  {
    "number": 7,
    "title": "Remove .env from source",
    "created_at": "2024-09-05T13:47:23Z",
    "closed_at": "2024-09-05T13:54:36Z",
    "labels": [],
    "url": "https://github.com/harsxv/tinystatus/issues/7",
    "body": "Maybe you forgot to remove .env file before .gitignore update",
    "comments_url": "https://api.github.com/repos/harsxv/tinystatus/issues/7/comments",
    "author": "victorfernandesraton",
    "comments": [
      {
        "user": "harsxv",
        "created_at": "2024-09-05T13:54:36Z",
        "body": "Oops. Fortunately the details there aren‚Äôt that critical. Thanks"
      }
    ]
  },
  {
    "number": 6,
    "title": "Checks are not performed in parallel",
    "created_at": "2024-09-05T12:16:41Z",
    "closed_at": "2024-09-06T00:11:27Z",
    "labels": [
      "enhancement",
      "help wanted"
    ],
    "url": "https://github.com/harsxv/tinystatus/issues/6",
    "body": "In run_checks, you can perform the checks in parallel by using asyncio.create_task and gather the resulting tasks with asyncio.gather.\r\n\r\nCurrently, the checks are run sequentially because of the await in each iteration of the for loop. ",
    "comments_url": "https://api.github.com/repos/harsxv/tinystatus/issues/6/comments",
    "author": "hidde-jan",
    "comments": [
      {
        "user": "harsxv",
        "created_at": "2024-09-05T13:28:48Z",
        "body": "Absolutely! Running the checks in parallel will definitely be more efficient.\r\nI appreciate the suggestion."
      }
    ]
  },
  {
    "number": 2,
    "title": "I love this project",
    "created_at": "2024-09-05T06:31:28Z",
    "closed_at": "2024-09-05T07:00:05Z",
    "labels": [],
    "url": "https://github.com/harsxv/tinystatus/issues/2",
    "body": "Come here just to say thank you and give a star. I really like the project.\r\n\r\nKudos!\r\n",
    "comments_url": "https://api.github.com/repos/harsxv/tinystatus/issues/2/comments",
    "author": "nalakawula",
    "comments": [
      {
        "user": "harsxv",
        "created_at": "2024-09-05T07:00:05Z",
        "body": "Thanks!"
      }
    ]
  }
]