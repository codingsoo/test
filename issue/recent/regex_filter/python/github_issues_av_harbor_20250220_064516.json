[
  {
    "number": 124,
    "title": "chore: fix typos",
    "created_at": "2025-02-08T15:56:24Z",
    "closed_at": "2025-02-08T16:57:20Z",
    "labels": [],
    "url": "https://github.com/av/harbor/pull/124",
    "body": "Found via `codespell -L strat,typpo,artic,ans`",
    "comments_url": "https://api.github.com/repos/av/harbor/issues/124/comments",
    "author": "kianmeng",
    "comments": [
      {
        "user": "av",
        "created_at": "2025-02-08T16:57:13Z",
        "body": "Thanks!"
      },
      {
        "user": "kianmeng",
        "created_at": "2025-02-08T17:03:36Z",
        "body": ":partying_face: :partying_face: :partying_face: :partying_face: :partying_face: "
      }
    ]
  },
  {
    "number": 112,
    "title": "Fix harbor.sh parsing of docker desktop version",
    "created_at": "2025-01-28T03:12:06Z",
    "closed_at": "2025-02-01T11:30:58Z",
    "labels": [
      "bug",
      "OS:MacOS",
      "OS:Linux",
      "OS:Windows"
    ],
    "url": "https://github.com/av/harbor/pull/112",
    "body": "Output of `docker compose version` looks like this under wsl:\r\n```\r\n$ docker compose version\r\nDocker Compose version v2.31.0-desktop.2\r\n```\r\nThis causes a warning when treating `patch_version` as numeric because it's `0-desktop`",
    "comments_url": "https://api.github.com/repos/av/harbor/issues/112/comments",
    "author": "bjj",
    "comments": [
      {
        "user": "av",
        "created_at": "2025-02-01T11:30:54Z",
        "body": "Thank you so much for the fix!"
      }
    ]
  },
  {
    "number": 109,
    "title": "librechat fails to start due to permissions on /app/start_librechat.sh",
    "created_at": "2025-01-25T19:57:08Z",
    "closed_at": "2025-01-26T01:21:48Z",
    "labels": [],
    "url": "https://github.com/av/harbor/issues/109",
    "body": "```\nharbor$ harbor up librechat --remove-orphans\n[+] Running 7/8\n ✔ Container harbor.librechat-vector  Starte...                                     0.4s \n ✔ Container harbor.librechat-db      Started                                       0.4s \n ✔ Container harbor.librechat-search  Starte...                                     0.4s \n ✔ Container harbor.ollama            Healthy                                       0.6s \n ✔ Container harbor.webui             Running                                       0.0s \n ✔ Container harbor.ollama-init       Started                                       0.8s \n ✔ Container harbor.librechat-rag     Started                                       0.5s \n ⠴ Container harbor.librechat         Starting                                      0.8s \nError response from daemon: failed to create task for container: failed to create shim task: OCI runtime create failed: runc create failed: unable to start container process: error during container init: exec: \"/app/start_librechat.sh\": permission denied: unknown\n\nharbor$ harbor shell librechat sh\n[+] Creating 4/4\n ✔ Container harbor.librechat-db      Running                                       0.0s \n ✔ Container harbor.librechat-vector  Runnin...                                     0.0s \n ✔ Container harbor.librechat-search  Runnin...                                     0.0s \n ✔ Container harbor.librechat-rag     Created                                       0.0s \n[+] Running 1/1\n ✔ Container harbor.librechat-rag  Started                                          0.2s \n\n/app $ ls -l /app/start_librechat.sh \n-rw-r-----    1 node     node           617 Jan 25 18:47 /app/start_librechat.sh\n```\n\nSetting the permissions on that file doesn't seem to help.\n\n```\n$ ls -l librechat/start_librechat.sh \n-rwxr-xr-x 1 user user 617 Jan 25 11:47 librechat/start_librechat.sh\n```",
    "comments_url": "https://api.github.com/repos/av/harbor/issues/109/comments",
    "author": "papamoose",
    "comments": [
      {
        "user": "ColumbusAI",
        "created_at": "2025-01-26T00:03:16Z",
        "body": "Hey OP did 'harbor fixfs' help or are you saying that's a command you already tried?"
      },
      {
        "user": "papamoose",
        "created_at": "2025-01-26T01:21:48Z",
        "body": "@ColumbusAI That seems to have worked. Thank you. Closing."
      }
    ]
  },
  {
    "number": 107,
    "title": "Harbor Doctor Error - fails to recognize newest docker compose",
    "created_at": "2025-01-25T18:20:51Z",
    "closed_at": "2025-01-26T03:07:25Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/av/harbor/issues/107",
    "body": "$ harbor doctor\n10:17:57 [INFO] Running Harbor Doctor...\n10:17:58 [INFO] ✔ Docker is installed and running\n10:17:58 [INFO] ✔ Docker Compose (v2) is installed\n10:17:58 [ERROR] ✘ Docker Compose version is older than 2.23.1. Please update Docker Compose (v2).\n10:17:58 [INFO] ✔ Harbor home: /home/admin/source/harbor\n10:17:58 [INFO] ✔ Default profile exists and is readable\n10:17:58 [INFO] ✔ Current profile (.env) exists and is readable\n10:17:58 [INFO] ✔ CLI is linked\n10:17:58 [INFO] ✔ NVIDIA GPU is available\n10:17:58 [INFO] ✔ NVIDIA Container Toolkit is installed\n10:17:58 [ERROR] Harbor Doctor checks failed. Please resolve the issues above.\n\n$ docker-compose version\nDocker Compose version v2.31.0-desktop.2\n",
    "comments_url": "https://api.github.com/repos/av/harbor/issues/107/comments",
    "author": "ColumbusAI",
    "comments": [
      {
        "user": "av",
        "created_at": "2025-01-25T23:42:26Z",
        "body": "Hey, great to see you back!\n\nCould you please also check the compose plugin v2, as that's what Harbor uses?\n\n```bash\n# Older compose, standalone binary\ndocker-compose version\n\n# Newer compose, used by harbor, note no dash\ndocker compose version\n```\n\nWith `docker compose` specifically, I see the following output:\n```bash\n# Older standalone binary\n everlier@pop-os:~$ ▼ docker-compose version\nDocker Compose version v2.20.3\n\n# New v2 plugin\n everlier@pop-os:~$ ▼ docker compose version\nDocker Compose version v2.32.4\n\n everlier@pop-os:~$ ▼ harbor doctor\n00:41:44 [INFO] Running Harbor Doctor...\n00:41:44 [INFO] ✔ Docker is installed and running\n00:41:44 [INFO] ✔ Docker Compose (v2) is installed\n# This line in doctor only checks v2 plugin, not standalone binary\n00:41:44 [INFO] ✔ Docker Compose (v2) version is newer than 2.23.1\n00:41:44 [INFO] ✔ Harbor home: /home/everlier/code/harbor\n00:41:44 [INFO] ✔ Default profile exists and is readable\n00:41:44 [INFO] ✔ Current profile (.env) exists and is readable\n00:41:44 [INFO] ✔ CLI is linked\n00:41:44 [INFO] ✔ NVIDIA GPU is available\n00:41:44 [INFO] ✔ NVIDIA Container Toolkit is installed\n00:41:44 [INFO] Harbor Doctor checks completed successfully.\n```"
      },
      {
        "user": "ColumbusAI",
        "created_at": "2025-01-26T00:02:34Z",
        "body": "you remembered me! Love it. Here's my docker compose version: \n\n$ docker-compose version\nDocker Compose version v2.31.0-desktop.2"
      },
      {
        "user": "av",
        "created_at": "2025-01-26T01:02:39Z",
        "body": "Yes, that's the older standalone binary, Harbor uses v2 plugin for docker CLI - the two can have different versions on same system. \n\nThe difference is in the dash. \n\nI suspect that the v2 plugin could be older on your setup (or that Harbor has issues with \"desktop\" portion)."
      },
      {
        "user": "ColumbusAI",
        "created_at": "2025-01-26T03:07:25Z",
        "body": "I traced the issue to this code snippet. When I commented out the last comparison, everything works as it should. The issue is that that the comparison was expecting an integer and received a string because of the \"-desktop.2\" but now we're all good! Closing this out.\n\n```\n # log_debug \"Docker Compose version: $major_version $minor_version $patch_version\"\n\n    if [ \"$major_version\" -lt \"$desired_compose_major\" ]; then\n        # log_debug \"Major version is less than $desired_compose_major\"\n        return 1\n    fi\n\n    if [ \"$minor_version\" -lt \"$desired_compose_minor\" ]; then\n        # log_debug \"Minor version is less than $desired_compose_minor\"\n        return 1\n    fi\n\n    #if [ \"$patch_version\" -lt \"$desired_compose_patch\" ]; then\n        # log_debug \"Patch version is less than $desired_compose_patch\"\n    #    return 1\n    #fi\n```"
      }
    ]
  },
  {
    "number": 79,
    "title": "docs: harbor app README.md updated",
    "created_at": "2024-11-10T16:35:06Z",
    "closed_at": "2024-11-10T17:52:40Z",
    "labels": [],
    "url": "https://github.com/av/harbor/pull/79",
    "body": "Added section on tauri system dependencies.",
    "comments_url": "https://api.github.com/repos/av/harbor/issues/79/comments",
    "author": "ic4l4s9c",
    "comments": [
      {
        "user": "av",
        "created_at": "2024-11-10T17:52:23Z",
        "body": "Thanks for cleaning things up! "
      }
    ]
  },
  {
    "number": 75,
    "title": "fix: add missing override.env for open-webui",
    "created_at": "2024-11-08T13:43:28Z",
    "closed_at": "2024-11-08T13:50:48Z",
    "labels": [],
    "url": "https://github.com/av/harbor/pull/75",
    "body": "resolves #72 ",
    "comments_url": "https://api.github.com/repos/av/harbor/issues/75/comments",
    "author": "ic4l4s9c",
    "comments": [
      {
        "user": "av",
        "created_at": "2024-11-08T13:50:32Z",
        "body": "Hey, thank you so much!\r\nWas in my plans for tomorrow"
      }
    ]
  },
  {
    "number": 56,
    "title": "Holy Docker Compose💀",
    "created_at": "2024-10-07T08:09:26Z",
    "closed_at": "2024-12-25T03:25:10Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/av/harbor/issues/56",
    "body": "idk what the reason is for all of those compose files to be in the root of the project, 😭 and maybe it was stated somewhere in the docs. But it is lagging the page and looks incredibly messy. Think that should be a sign to put all of that into a folder.👀",
    "comments_url": "https://api.github.com/repos/av/harbor/issues/56/comments",
    "author": "HeavyLvy",
    "comments": [
      {
        "user": "av",
        "created_at": "2024-10-07T17:44:05Z",
        "body": "It's no scalable, agree! \r\n\r\nI was considering to do this, but it'd require a pretty meticulous and large-scale check of all the paths still matching. Worst case - every single service will have to be re-tested. So I decided to not do that (yet)."
      },
      {
        "user": "HeavyLvy",
        "created_at": "2024-10-21T21:13:56Z",
        "body": "Itd be worth it"
      }
    ]
  },
  {
    "number": 44,
    "title": "Rename llama3.1:8b.Modelfile to llama3.1_8b.Modelfile",
    "created_at": "2024-09-30T08:20:10Z",
    "closed_at": "2024-09-30T10:05:14Z",
    "labels": [],
    "url": "https://github.com/av/harbor/pull/44",
    "body": "people using colons in files names, grrrr!!!",
    "comments_url": "https://api.github.com/repos/av/harbor/issues/44/comments",
    "author": "shaneholloman",
    "comments": [
      {
        "user": "av",
        "created_at": "2024-09-30T10:05:11Z",
        "body": "Thanks for the fix and sorry for overlooking this detail!"
      }
    ]
  },
  {
    "number": 37,
    "title": "Auxiliary containers left running after harbor down",
    "created_at": "2024-09-28T17:24:58Z",
    "closed_at": "2024-10-04T09:32:54Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/av/harbor/issues/37",
    "body": "When command `harbor down librechat` or `harbor down bionicgpt` is issued the \"auxiliary\" containers, such as `harbor.lc-db` `harbor.lc-vector` `harbor.lc-search` for Librechat are left running according to `docker ps`. Is this expected behavior? I could not find details in the documentation. I also noticed that these containers are not being removed upon `harbor down` and are still listed in `docker containers list --all`, unlike the \"main\" containers of the respective frontends.\r\n\r\n-------------\r\nI am running harbor version 1.35, on Bluefin DX (Fedora Silverblue 40).",
    "comments_url": "https://api.github.com/repos/av/harbor/issues/37/comments",
    "author": "FrantaNautilus",
    "comments": [
      {
        "user": "av",
        "created_at": "2024-09-28T22:46:15Z",
        "body": "Thanks for trying things out!\r\n\r\nNo, it's not expected for those containers to remain running after `harbor down`, however that could happen if the down is cancelled prematurely.\r\n\r\nI just tried following workflow locally and it doesn't seem to leave dangling containers:\r\n\r\n```bash\r\n everlier@pop-os:~$ ▼ h ps\r\nNAME      IMAGE     COMMAND   SERVICE   CREATED   STATUS    PORTS\r\n\r\n everlier@pop-os:~$ ▼ h u librechat\r\n[+] Running 8/8\r\n ✔ Network harbor_harbor-network  Created                                                                                0.0s \r\n ✔ Container harbor.webui         Healthy                                                                                6.6s \r\n ✔ Container harbor.lc-db         Healthy                                                                                1.1s \r\n ✔ Container harbor.lc-search     Healthy                                                                                1.1s \r\n ✔ Container harbor.lc-vector     Healthy                                                                                1.1s \r\n ✔ Container harbor.ollama        Healthy                                                                                1.1s \r\n ✔ Container harbor.lc-rag        Healthy                                                                                1.0s \r\n ✔ Container harbor.librechat     Healthy                                                                                1.0s \r\n\r\n everlier@pop-os:~$ ▼ h ps\r\nNAME               IMAGE                                      COMMAND                  SERVICE     CREATED          STATUS                   PORTS\r\nharbor.lc-db       mongo                                      \"docker-entrypoint.s…\"   lc-db       10 seconds ago   Up 9 seconds             27017/tcp\r\nharbor.lc-search   getmeili/meilisearch:v1.7.3                \"tini -- /bin/sh -c …\"   lc-search   10 seconds ago   Up 9 seconds             7700/tcp\r\nharbor.lc-vector   ankane/pgvector:latest                     \"docker-entrypoint.s…\"   lc-vector   10 seconds ago   Up 9 seconds             5432/tcp\r\nharbor.librechat   ghcr.io/danny-avila/librechat-dev:latest   \"/app/start_librecha…\"   librechat   10 seconds ago   Up 9 seconds             3080/tcp, 0.0.0.0:33891->33891/tcp, :::33891->33891/tcp\r\nharbor.ollama      ollama/ollama:latest                       \"/bin/ollama serve\"      ollama      10 seconds ago   Up 9 seconds             0.0.0.0:33821->11434/tcp, :::33821->11434/tcp\r\nharbor.webui       ghcr.io/open-webui/open-webui:main         \"/app/start_webui.sh\"    webui       10 seconds ago   Up 9 seconds (healthy)   0.0.0.0:33801->8080/tcp, :::33801->8080/tcp\r\n\r\n everlier@pop-os:~$ ▼ h d\r\n[+] Running 8/8\r\n ✔ Container harbor.webui         Removed                                                                                                                                         0.2s \r\n ✔ Container harbor.ollama        Removed                                                                                                                                         0.2s \r\n ✔ Container harbor.librechat     Removed                                                                                                                                        10.2s \r\n ✔ Container harbor.lc-db         Removed                                                                                                                                         0.1s \r\n ✔ Container harbor.lc-rag        Removed                                                                                                                                         0.0s \r\n ✔ Container harbor.lc-search     Removed                                                                                                                                         0.1s \r\n ✔ Container harbor.lc-vector     Removed                                                                                                                                         0.1s \r\n ✔ Network harbor_harbor-network  Removed                                                                                                                                         0.2s \r\n\r\n everlier@pop-os:~$ ▼ h ps\r\nNAME      IMAGE     COMMAND   SERVICE   CREATED   STATUS    PORTS\r\n\r\n everlier@pop-os:~$ ▼ \r\n```\r\n\r\n- No services are running\r\n- `up librechat`, everything is running\r\n- `down`\r\n- No services are running\r\n\r\nCould it be possible that you're `Ctrl+C`ing out of `harbor down`?  In that instance, not all dependencies might be resolved and containers indeed could be left handling. \r\n\r\nIf this could be the case - I understand why you'd want to do that, as, `librechat` containers are left hanging on up/down for 10s, which is Docker's default timeout for unresponsive processes. Such waiting indicates incorrect setup for the service entrypoint, which is another thing that could be fixed here."
      },
      {
        "user": "FrantaNautilus",
        "created_at": "2024-09-29T19:01:33Z",
        "body": "Thank  you for helping me with this issue. Trying this again and I found that the `harbor down`  works as expected, however its the command `harbor down <handle>`  which leaves containers running. The containers remain running even after 56 minutes.\r\n```\r\n$harbor down librechat\r\n```\r\n```\r\n[+] Running 2/1\r\n ✔ Container harbor.librechat     Removed                                                                                                                                                                                                                        10.3s \r\n ! Network harbor_harbor-network  Resource is still in use\r\n```\r\n```\r\n$ harbor ps\r\n```\r\n```\r\nNAME               IMAGE                                COMMAND                  SERVICE     CREATED          STATUS                    PORTS\r\nharbor.lc-db       mongo                                \"docker-entrypoint.s…\"   lc-db       56 minutes ago   Up 56 minutes             27017/tcp\r\nharbor.lc-search   getmeili/meilisearch:v1.7.3          \"tini -- /bin/sh -c …\"   lc-search   56 minutes ago   Up 56 minutes             7700/tcp\r\nharbor.lc-vector   ankane/pgvector:latest               \"docker-entrypoint.s…\"   lc-vector   56 minutes ago   Up 56 minutes             5432/tcp\r\nharbor.ollama      ollama/ollama:latest                 \"/bin/ollama serve\"      ollama      56 minutes ago   Up 56 minutes             0.0.0.0:33821->11434/tcp, :::33821->11434/tcp\r\nharbor.webui       ghcr.io/open-webui/open-webui:main   \"/app/start_webui.sh\"    webui       56 minutes ago   Up 56 minutes (healthy)   0.0.0.0:33801->8080/tcp, :::33801->8080/tcp\r\n```\r\nOnly after running `harbor down` all containers were stopped and removed. Tested on CLI version: 0.2.0"
      },
      {
        "user": "av",
        "created_at": "2024-09-29T19:14:16Z",
        "body": "Indeed, this is a bug in how the containers to stop are resolved, thank you for additional tests!"
      },
      {
        "user": "lee-b",
        "created_at": "2024-09-30T12:22:00Z",
        "body": "Is this not due to `docker compose up` rather than `docker compose up --remove-orphans` (or the compose down equivalent)?"
      },
      {
        "user": "av",
        "created_at": "2024-10-04T09:32:54Z",
        "body": "The fix was released in one of the recent versions - down command now tries to match running sub-services as well. I'm closing this for now, but please feel free to follow-up or open a new one if needed."
      }
    ]
  },
  {
    "number": 31,
    "title": "Clarification on Frontend and Backend Compatibility with Multiple Models",
    "created_at": "2024-09-24T16:40:13Z",
    "closed_at": "2024-09-27T06:48:11Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/av/harbor/issues/31",
    "body": "I have a few questions regarding frontend and backend compatibility:\r\n\r\n1. Frontend-Backend Compatibility: Does any frontend work with any backend? I noticed that most backends are designed to work with GGUF models, but this project seems to support various backends, including vLLM, Mistral.rs, etc. If I select one of these backends, will it be compatible with frontends like Open WebUI and other similar platforms?\r\n2. Closed-Source Frontend Support: Currently, I have a closed-source frontend that is only compatible with GGUF models. If I choose to use this project, is it possible to expose a backend that my closed-source frontend can consume, allowing it to support multiple types of backends?\r\n\r\nI’d appreciate any guidance or clarification on these points!",
    "comments_url": "https://api.github.com/repos/av/harbor/issues/31/comments",
    "author": "bhupesh-sf",
    "comments": [
      {
        "user": "av",
        "created_at": "2024-09-24T16:59:23Z",
        "body": "Thanks for trying out Harbor!\r\n\r\n1. It's only mentioned in the docs implicitly, but the support is not complete (nor it could be, to be fair)\r\n\r\nThe policy is to support everything for the main default UI and default Backend. I.e. - integrate all UIs with the default backend and all UIs with the default backend. Anything else is considered extra and provided on the best effort basis (contributions are very welcomed!)\r\n\r\nThis is not to discourage you in any way - plenty of services combinations work out of the box, the best way to check is to lookup the `x` files to see if there's an intersection.\r\n\r\n2. All the Harbor services that expose the APIs can be used with external clients. See docs on the `harbor url` / `harbor qr` commands"
      },
      {
        "user": "bhupesh-sf",
        "created_at": "2024-09-27T01:32:57Z",
        "body": "Thanks for the answer, it does clarifies 👍🏻 "
      },
      {
        "user": "av",
        "created_at": "2024-09-27T06:48:11Z",
        "body": "Awesome, feel free to reopen if needed"
      }
    ]
  },
  {
    "number": 20,
    "title": "Permission issue with LibreChat Deployment",
    "created_at": "2024-09-17T09:43:02Z",
    "closed_at": "2024-09-17T11:05:49Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/av/harbor/issues/20",
    "body": "Hello,\r\n\r\nI'm running into a permission issue when deploying LibreChat under Harbor. I get the following error when starting the container:\r\n```\r\n> LibreChat@v0.7.5-rc2 backend\r\n> cross-env NODE_ENV=production node api/server/index.js\r\n\r\n2024-09-17 11:37:21 info: [Optional] Redis not initialized. Note: Redis support is experimental.\r\n2024-09-17 11:37:23 error: There was an uncaught error: EACCES: permission denied, open '/app/api/logs/meiliSync-2024-09-17.log'\r\n```\r\n\r\nThen the container stops and exits.\r\n\r\nI tried reverting to an older image version than the latest one but I still get the same error.\r\nI also tried setting the variables PUID and PGID to 1000.\r\nNone of this worked.\r\n\r\nDeploying with the docker-compose file from the original LibreChat repository does not have this issue.",
    "comments_url": "https://api.github.com/repos/av/harbor/issues/20/comments",
    "author": "maeyounes",
    "comments": [
      {
        "user": "maeyounes",
        "created_at": "2024-09-17T11:05:49Z",
        "body": "I solved this problem by adding the line `user: \":\"` to the docker compose file as the original repository had `user: \"${UID}:${GID}\"`. It does not work with value 1000 for `UID` and `GID` for some reason."
      },
      {
        "user": "av",
        "created_at": "2024-09-17T13:35:12Z",
        "body": "Sorry, you were so quick I didn't manage to provide the feedback in time!\r\n\r\nFS permissions are a classic issue when mounting host volumes with docker. So, there's a built-in (underdocumented, though) util to fix:\r\n\r\n```bash\r\nharbor fixfs\r\n```\r\n\r\nIt'll prompt you for the user password and will run as `root`, updating the permissions on folders of most of the services.\r\n\r\nI didn't document it better cause it's kind of a workaround and I'm hoping to find a better answer in time. You'd also need to re-run it every once in a while when such permission issues re-occur."
      }
    ]
  },
  {
    "number": 8,
    "title": "Bug: Harbor ollama <parameter>",
    "created_at": "2024-08-04T20:30:40Z",
    "closed_at": "2024-08-07T13:48:06Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/av/harbor/issues/8",
    "body": "OCI runtime exec failed: exec failed: unable to start container process: exec: \"ollama list\": executable file not found in $PATH: unknown\r\n\r\nI removed my host ollama (rm /usr/local/bin/ollama, userdel ollama...). Maybe that caused this issue, idk.\r\n\r\nEdit: entering on container and running \"ollama list\" works, just \"harbor ollama list\" or \"harbor exec ollama \"ollama list\" doesn't works.",
    "comments_url": "https://api.github.com/repos/av/harbor/issues/8/comments",
    "author": "alsoasnerd",
    "comments": [
      {
        "user": "av",
        "created_at": "2024-08-04T20:48:16Z",
        "body": "Thank you for reporting! It's a regression after resolving some of the linter messages in the main CLI file - went a tad wrong (sorry for the inconvenience)\r\n\r\nPlease run `harbor update` and it should be fixed"
      },
      {
        "user": "av",
        "created_at": "2024-08-07T13:48:06Z",
        "body": "Closing as config override was fixed"
      }
    ]
  }
]