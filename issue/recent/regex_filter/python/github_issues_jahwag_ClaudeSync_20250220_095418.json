[
  {
    "number": 105,
    "title": "Symbolic Link Support",
    "created_at": "2025-01-02T15:14:36Z",
    "closed_at": "2025-02-01T02:35:59Z",
    "labels": [
      "enhancement",
      "good first issue",
      "Stale"
    ],
    "url": "https://github.com/jahwag/ClaudeSync/issues/105",
    "body": "### Feature Title\n\nSymbolic Links\n\n### Description\n\n**Problem:**\r\n\r\nOften, I don't want to talk to my entire project -- just some key folders.\r\n\r\nI planned to use a symbolic link to dynamically link those folders into a working \"claudsync\" directory.\r\n\r\n```bash\r\nln -s routes app/Console/Commands app/Models app/Http database/migrations claudsync\r\n```\r\n\r\nI get this error:\r\n\r\n```\r\nclaudesync push\r\nTraceback (most recent call last):\r\n  File \"/opt/homebrew/bin/claudesync\", line 8, in <module>\r\n    sys.exit(cli())\r\n  File \"/opt/homebrew/lib/python3.9/site-packages/click/core.py\", line 1161, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/opt/homebrew/lib/python3.9/site-packages/click/core.py\", line 1082, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/opt/homebrew/lib/python3.9/site-packages/click/core.py\", line 1697, in invoke\r\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\r\n  File \"/opt/homebrew/lib/python3.9/site-packages/click/core.py\", line 1443, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/opt/homebrew/lib/python3.9/site-packages/click/core.py\", line 788, in invoke\r\n    return __callback(*args, **kwargs)\r\n  File \"/opt/homebrew/lib/python3.9/site-packages/click/decorators.py\", line 45, in new_func\r\n    return f(get_current_context().obj, *args, **kwargs)\r\n  File \"/opt/homebrew/lib/python3.9/site-packages/claudesync/utils.py\", line 263, in wrapper\r\n    return func(*args, **kwargs)\r\n  File \"/opt/homebrew/lib/python3.9/site-packages/claudesync/cli/main.py\", line 167, in push\r\n    local_files = get_local_files(\r\n  File \"/opt/homebrew/lib/python3.9/site-packages/claudesync/utils.py\", line 233, in get_local_files\r\n    if spec.match_file(rel_path) and should_process_file(\r\n  File \"/opt/homebrew/lib/python3.9/site-packages/claudesync/utils.py\", line 123, in should_process_file\r\n    if os.path.getsize(file_path) > max_file_size:\r\n  File \"/opt/homebrew/Cellar/python@3.9/3.9.19_1/Frameworks/Python.framework/Versions/3.9/lib/python3.9/genericpath.py\", line 50, in getsize\r\n    return os.stat(filename).st_size\r\nFileNotFoundError: [Errno 2] No such file or directory: '/Users/mcraig/Development/project/laravel.xyz/claudesync/migrations'\r\n```\n\n### Benefits\n\nReduced context windows\r\nComplete control over what gets pushed\n\n### Use Case\n\nSee problem statement\n\n### Operating System\n\nMac\n\n### Python Version\n\n_No response_\n\n### ClaudeSync Version\n\n_No response_\n\n### Willingness to Help\n\nNo\n\n### Additional Context\n\n_No response_",
    "comments_url": "https://api.github.com/repos/jahwag/ClaudeSync/issues/105/comments",
    "author": "MikeCraig418",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-24T02:33:30Z",
        "body": "This issue has been marked as stale due to 14 days of inactivity. Please remove the stale label or comment to keep it open, otherwise, it will be closed in 3 days."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2025-02-01T02:35:58Z",
        "body": "This issue was closed due to 3 additional days of inactivity after being marked as stale."
      }
    ]
  },
  {
    "number": 101,
    "title": "feat(dev): add hooks setup and pre-push hook with black formatter",
    "created_at": "2024-12-18T01:55:07Z",
    "closed_at": "2025-01-31T02:32:55Z",
    "labels": [
      "Stale"
    ],
    "url": "https://github.com/jahwag/ClaudeSync/pull/101",
    "body": "# Add Git Hooks Support with Black Code Formatting\r\n\r\n## Overview\r\nThis PR adds support for Git hooks in ClaudeSync, starting with a pre-commit hook that automatically formats Python code using black before each commit.\r\n\r\n## Features\r\n* Uses Git native hooks system\r\n* Implements pre-commit hook for automatic code formatting with black\r\n* Provides easy hook installation via `claudesync hooks install` command\r\n* Modular design to support additional hooks in the future\r\n\r\n## Implementation Details\r\n* Added `hooks.py` module to handle hook installation and management\r\n* Added `pre_commit.py` template that formats staged Python files using black\r\n* Updated `pyproject.toml` to include black as optional dependency\r\n* Integrated hooks commands into ClaudeSync's CLI structure\r\n\r\n## Usage\r\nAfter installing ClaudeSync, users can install the hooks with:\r\n\r\n```bash\r\n# Install with formatting dependencies\r\npip install -e .[format]\r\n\r\n# Install hooks\r\nclaudesync hooks install\r\n\r\n# List available hooks\r\nclaudesync hooks list\r\n```\r\n\r\n## Comments\r\n@jahwag  I dont really know if this is a feature you want to incorporate to the project, I know some devs are not friends of this hooks workflow. Feel free to just decline this PR.",
    "comments_url": "https://api.github.com/repos/jahwag/ClaudeSync/issues/101/comments",
    "author": "guidodinello",
    "comments": [
      {
        "user": "jahwag",
        "created_at": "2024-12-18T21:30:53Z",
        "body": "This is a nice suggestion. Though introducing an alternate CLI does not quite align with the rest of the project. Additionally, registering \"install-hooks\" globally could potentially annoy some users. To avoid this, it might be better to integrate the \"install-hooks\" command within ClaudeSync's CLI under \"hooks\". This commit also need signing."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2024-12-29T02:42:50Z",
        "body": "This pull request has been marked as stale due to 7 days of inactivity. Please remove the stale label or comment to keep it open, otherwise, it will be closed in 3 days."
      },
      {
        "user": "guidodinello",
        "created_at": "2024-12-29T22:09:33Z",
        "body": "> Upon further contemplation though this is nice to have for python developers i.e. someone working on claudesync. Itâ€™s difficult to see how it benefits the wider user base. It doesnâ€™t feel like an entirely natural thing to have in claudesync. In java we would typically have a build tool plugin that would install the git hook, we wouldnâ€™t distribute it with the software itself.\r\n\r\nI understand your point about this being primarily a development tool rather than a user-facing feature. Would you be open to keeping this functionality but moving it to a separate development tools folder (e.g., in a {root}/tools ) with its own CLI command claudesync-dev (or maybe just to be run as an executable script)? This would keep it available for claudesync developers while not including it in the main package distribution. Let me know if you'd like me to restructure the PR this way or if you'd prefer not to include this feature at all. "
      },
      {
        "user": "jahwag",
        "created_at": "2025-01-01T17:52:34Z",
        "body": "> > Upon further contemplation though this is nice to have for python developers i.e. someone working on claudesync. Itâ€™s difficult to see how it benefits the wider user base. It doesnâ€™t feel like an entirely natural thing to have in claudesync. In java we would typically have a build tool plugin that would install the git hook, we wouldnâ€™t distribute it with the software itself.\r\n> \r\n> I understand your point about this being primarily a development tool rather than a user-facing feature. Would you be open to keeping this functionality but moving it to a separate development tools folder (e.g., in a {root}/tools ) with its own CLI command claudesync-dev (or maybe just to be run as an executable script)? This would keep it available for claudesync developers while not including it in the main package distribution. Let me know if you'd like me to restructure the PR this way or if you'd prefer not to include this feature at all.\r\n\r\n\r\n\r\nI want ClaudeSync to be open to contributors!\r\n\r\nIf you can get three upvotes, I will merge this into master.\r\n\r\nHappy new year. "
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-23T02:33:11Z",
        "body": "This pull request has been marked as stale due to 7 days of inactivity. Please remove the stale label or comment to keep it open, otherwise, it will be closed in 3 days."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2025-01-31T02:32:55Z",
        "body": "This pull request was closed due to 3 additional days of inactivity after being marked as stale."
      }
    ]
  },
  {
    "number": 92,
    "title": "Fix/race condition in http server mock",
    "created_at": "2024-11-20T23:53:10Z",
    "closed_at": "2024-11-30T15:55:22Z",
    "labels": [],
    "url": "https://github.com/jahwag/ClaudeSync/pull/92",
    "body": "Hey there,\r\n\r\nThanks for this amazing project! Iâ€™m really loving ClaudeSync so far! As I was looking for the feature of `claudeignore` but apparently skimmed the documentation a bit too fast, I decided to quickly add the feature myself. While doing so, I discovered that the feature already exists ðŸ¤©.\r\n\r\nBefore I got started, though, I ran into some issues with the tests. At least for me, it appears thereâ€™s a race condition in the MockServer creation (as the Unit Tests run in parallel, leading to multiple threads trying to start a server on port 8000).\r\n\r\nIâ€™m not sure if this is the idiomatic way to resolve it for unit tests, but I gave it a shot. Feel free to take a look, and thanks again for creating this tool!\r\n\r\nCheers",
    "comments_url": "https://api.github.com/repos/jahwag/ClaudeSync/issues/92/comments",
    "author": "memben",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2024-11-28T02:48:01Z",
        "body": "This pull request has been marked as stale due to 7 days of inactivity. Please remove the stale label or comment to keep it open, otherwise, it will be closed in 3 days."
      },
      {
        "user": "jahwag",
        "created_at": "2024-11-30T15:55:22Z",
        "body": "seems root cause was likely #94, since tests don't run in parallel"
      }
    ]
  },
  {
    "number": 90,
    "title": "Feature/renovate bot",
    "created_at": "2024-11-14T22:52:47Z",
    "closed_at": "2024-11-30T14:30:13Z",
    "labels": [
      "Stale"
    ],
    "url": "https://github.com/jahwag/ClaudeSync/pull/90",
    "body": "### PR: Add Renovate Configuration for Automated Dependency Management\r\n\r\n#### Summary\r\nThis pull request introduces a Renovate configuration to automate dependency updates for this repository. With Renovate, we aim to keep our dependencies up-to-date, improve security by addressing potential vulnerabilities quickly, and maintain compatibility with the latest versions of libraries.\r\n\r\n#### Details\r\n\r\n- **Renovate Configuration**:\r\n  - Enables updates for `pip` requirements files (e.g., `requirements.txt`).\r\n  - Groups non-major updates to reduce PR noise.\r\n  - Schedules updates outside of regular working hours to minimize disruptions.\r\n  - Optionally includes GitHub Actions updates to keep workflows current.\r\n\r\n- **Key Features**:\r\n  - **Automated Dependency Updates**: Renovate will check for updates regularly and create pull requests for any available updates.\r\n  - **Security**: Reduces the risk of vulnerabilities in outdated dependencies.\r\n  - **Compatibility and Stability**: Maintains compatibility with updated libraries and improves code stability over time.\r\n\r\n#### How It Works\r\n1. Renovate will open pull requests for dependency updates according to the rules defined in the `renovate.json` file.\r\n2. Each PR will be labeled and grouped as per the configuration, allowing us to review, test, and merge updates efficiently.\r\n\r\n#### Next Steps\r\nOnce merged, Renovate will begin creating PRs for available dependency updates according to the configured schedule and rules. We can monitor and review these updates through the GitHub dashboard and merge them as appropriate.\r\n\r\n--- \r\n\r\nPlease review and let me know if any adjustments are needed to the configuration before we merge this.\r\n\r\nCloses #89 ",
    "comments_url": "https://api.github.com/repos/jahwag/ClaudeSync/issues/90/comments",
    "author": "crippledgeek",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2024-11-26T02:46:06Z",
        "body": "This pull request has been marked as stale due to 7 days of inactivity. Please remove the stale label or comment to keep it open, otherwise, it will be closed in 3 days."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2024-11-29T02:47:46Z",
        "body": "This pull request was closed due to 3 additional days of inactivity after being marked as stale."
      }
    ]
  },
  {
    "number": 84,
    "title": "Anthropic's Terms of Service",
    "created_at": "2024-10-22T12:30:59Z",
    "closed_at": "2024-10-23T20:24:28Z",
    "labels": [],
    "url": "https://github.com/jahwag/ClaudeSync/issues/84",
    "body": "What does potential violation of Anthropic's Terms of Service mean?",
    "comments_url": "https://api.github.com/repos/jahwag/ClaudeSync/issues/84/comments",
    "author": "gingibash",
    "comments": [
      {
        "user": "jahwag",
        "created_at": "2024-10-23T20:24:28Z",
        "body": "For any questions about Anthropic's Terms of Service, please contact Anthropic directly. ClaudeSync operates independently and is not affiliated with Anthropic. "
      }
    ]
  },
  {
    "number": 80,
    "title": "sometimes it misses files",
    "created_at": "2024-10-17T18:58:58Z",
    "closed_at": "2024-11-06T02:34:41Z",
    "labels": [
      "bug",
      "Stale"
    ],
    "url": "https://github.com/jahwag/ClaudeSync/issues/80",
    "body": "### Operating System\n\nArch Linux\n\n### Python Version\n\nPython 3.12.6\n\n### ClaudeSync Version\n\n0.6.1\n\n### Installation Type\n\nNew\n\n### Configuration\n\n...\n\n### Steps to Reproduce\n\nclaudesync push\n\n### Description\n\nsometimes when I push and there are a lot of small files the web interface shows that some of the files didn't in fact sync. seems kinda random\n\n### Logs\n\n_No response_",
    "comments_url": "https://api.github.com/repos/jahwag/ClaudeSync/issues/80/comments",
    "author": "sirus20x6",
    "comments": [
      {
        "user": "jahwag",
        "created_at": "2024-10-18T19:40:54Z",
        "body": "@sirus20x6  Thank you for filing this issue. Without logs, it's difficult to say what this could be. \r\n\r\nAs a work-around, please try switching to the single-file push mode:\r\n`claudesync config set compression_algorithm pack`\r\n\r\n You will probably want to create a new claude.ai project so the old files are not left.\r\n"
      },
      {
        "user": "sirus20x6",
        "created_at": "2024-10-18T20:02:27Z",
        "body": "I'll see if I can add logs soon. I was in a hurry earlier"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2024-11-02T02:35:35Z",
        "body": "This issue has been marked as stale due to 14 days of inactivity. Please remove the stale label or comment to keep it open, otherwise, it will be closed in 3 days."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2024-11-06T02:34:40Z",
        "body": "This issue was closed due to 3 additional days of inactivity after being marked as stale."
      }
    ]
  },
  {
    "number": 78,
    "title": "Can't paste session key",
    "created_at": "2024-10-14T08:46:22Z",
    "closed_at": "2024-10-17T09:02:08Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/jahwag/ClaudeSync/issues/78",
    "body": "### Operating System\n\nWindows 11\n\n### Python Version\n\n3.12\n\n### ClaudeSync Version\n\n0.6.0\n\n### Installation Type\n\nNew\n\n### Configuration\n\n.\n\n### Steps to Reproduce\n\nMaybe your cmd prompt works different\n\n### Description\n\nI just installed, went to go authenticate and when I copied my key I found I couldn't paste it.\r\n\r\nI then thought \"maybe i can type claudesync auth logic {key}\" and it's not a valid argument.\r\n\r\nDo people manually type in the 50 or so characters? how long does a key last?\n\n### Logs\n\n_No response_",
    "comments_url": "https://api.github.com/repos/jahwag/ClaudeSync/issues/78/comments",
    "author": "ParisMolver",
    "comments": [
      {
        "user": "ParisMolver",
        "created_at": "2024-10-14T09:01:25Z",
        "body": "I was so grumpy about having to punch in all those letters just to use the project that I got the code I needed to do it for me\r\n\r\n```\r\nimport time\r\nimport pyautogui\r\n\r\ndef delayed_typing(text, delay=0.05):\r\n    for char in text:\r\n        pyautogui.write(char)\r\n        print(char, end='')\r\n        time.sleep(delay)\r\n\r\ntext_to_type = \"sk-TMiuVgAA\"\r\nfor i in range(5, 0, -1):\r\n    print(i)\r\n    time.sleep(1)\r\ndelayed_typing(text_to_type)\r\nprint(\"done\")\r\n```"
      },
      {
        "user": "jahwag",
        "created_at": "2024-10-14T16:10:25Z",
        "body": "Did you try pressing Ctrl+V then Enter?"
      },
      {
        "user": "ParisMolver",
        "created_at": "2024-10-17T09:02:08Z",
        "body": "Hi there, I will try this. It possibly worked but without the console feedback I thought it was broken. Is it possible for secure input to show **** instead of nothing?"
      }
    ]
  },
  {
    "number": 69,
    "title": "feat: Encrypt session keys with SSH key for improved security",
    "created_at": "2024-09-14T09:56:48Z",
    "closed_at": "2024-09-14T10:04:38Z",
    "labels": [],
    "url": "https://github.com/jahwag/ClaudeSync/pull/69",
    "body": "# Pull Request Description\r\nThis PR enhances the security of the system by encrypting session keys using an SSH key. With this change, session keys are no longer stored in plaintext, making them more secure and resistant to unauthorized access.\r\n\r\nBy encrypting session keys with an SSH key, the system also becomes ready for securely storing other sensitive credentials, such as API keys, in the future.\r\n\r\n## Checklist\r\n\r\n- [x] Changes are limited to a single goal (avoid scope creep)\r\n- [x] I confirm that I have read any Contribution and Development guidelines (CONTRIBUTING and DEVELOPMENT) and are following their suggestions.\r\n- [x] I confirm that I wrote and/or have the right to submit the contents of my Pull Request, by agreeing to the _Developer Certificate of Origin_, (adding a 'sign-off' to my commits).\r\n",
    "comments_url": "https://api.github.com/repos/jahwag/ClaudeSync/issues/69/comments",
    "author": "jahwag",
    "comments": [
      {
        "user": "sabeer-narula",
        "created_at": "2024-09-17T18:01:38Z",
        "body": "Would you be able to add a step in the directions about needing an RSA SSH key on your device in order to get claudesync to work now? I added it to my new project and it took me a while to figure out why I couldn't set it up on my new project comapred to the one i was working on a week ago."
      }
    ]
  },
  {
    "number": 65,
    "title": ".claudeignore should supersede .gitignore",
    "created_at": "2024-09-09T18:23:17Z",
    "closed_at": "2024-09-27T02:38:30Z",
    "labels": [
      "enhancement",
      "good first issue",
      "Stale"
    ],
    "url": "https://github.com/jahwag/ClaudeSync/issues/65",
    "body": "When .claudeignore is present, .gitignore should not be used.",
    "comments_url": "https://api.github.com/repos/jahwag/ClaudeSync/issues/65/comments",
    "author": "jahwag",
    "comments": [
      {
        "user": "archer-eric",
        "created_at": "2024-09-09T21:55:30Z",
        "body": "Alternative proposal: .claudeignore is applied after .gitignore, but in the same way that the local .gitignore is applied after the global .gitignore. For example, .claudeignore may have lines starting with \"!\" which \"unignore\" specific files and patterns."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2024-09-24T02:37:56Z",
        "body": "This issue has been marked as stale due to 14 days of inactivity. Please remove the stale label or comment to keep it open, otherwise, it will be closed in 3 days."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2024-09-27T02:38:29Z",
        "body": "This issue was closed due to 3 additional days of inactivity after being marked as stale."
      }
    ]
  },
  {
    "number": 54,
    "title": "allow setting config file name via environment variable",
    "created_at": "2024-08-25T10:47:23Z",
    "closed_at": "2024-08-29T03:19:29Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/jahwag/ClaudeSync/issues/54",
    "body": "# Feature Request Template\r\n\r\n## 1. Problem Description\r\n\r\nIf working on multiple projects you want to be able to easily switch between them.\r\n\r\n## 2. Desired Solution\r\n\r\nSet a variable like CLAUDESYNC_CONFIG_PATH that can be set in the IDE for each project.\r\n\r\n## 3. Considered Alternatives\r\n\r\nHave CLAUDESYNC_CONFIG_NAME to be used as the $HOME/.claudesync/$CLAUDESYNC_CONFIG_NAME.json\r\n\r\nOr change CLAUDESYNC_HOME to project home\r\n\r\nOr look for .claudesync/config.json in a project directory - probably not the best idea at risk of accidentally checking it in\r\n\r\n## 4. Use Case\r\nAs above\r\n\r\n## 7. Willingness to Contribute\r\n\r\nYes, I can do that - it's just a few lines of code.",
    "comments_url": "https://api.github.com/repos/jahwag/ClaudeSync/issues/54/comments",
    "author": "ayushin",
    "comments": [
      {
        "user": "jahwag",
        "created_at": "2024-08-25T17:17:55Z",
        "body": "Having multiple ~/claudesync/config.json files would be inconvenient, as users would need to ensure consistency across projects for other configuration options.\r\n\r\nHowever, itâ€™s probably time for ClaudeSync to introduce a ./claudesync/project.json file. While Iâ€™ve tried to avoid cluttering repositoriesâ€”we already have claudesync_chats and .claudeignoreâ€”resolving the nearest project based on the terminalâ€™s working directory (similar to Git) would likely better align with user expectations and reduce the amount of typing required when frequently switching projects."
      },
      {
        "user": "ayushin",
        "created_at": "2024-08-26T09:56:58Z",
        "body": "perhaps a .claudesync with only overrides for the current directory tree\r\n\r\nwith things like active_project_name and local_path"
      }
    ]
  },
  {
    "number": 53,
    "title": "extend to more generic solution to support real-time syncing with a rag database",
    "created_at": "2024-08-25T10:37:44Z",
    "closed_at": "2024-09-13T02:33:00Z",
    "labels": [
      "enhancement",
      "Stale"
    ],
    "url": "https://github.com/jahwag/ClaudeSync/issues/53",
    "body": "This is really awesome. I've been meaning to build something similar and extremely excited to see you've done such a great job @jahwag \r\n\r\nI think this approach is much more sensible than re-invent-the-idea such as cursor.com\r\n\r\nIt would be great to turn this into a more generic project by also allowing to sync your code code with a vector database / RAG and then plug it into any model.\r\n\r\nNext step would be to do the same as a github action to automate the workflow.\r\n\r\nLet me know if you are interested in collaborating on this.",
    "comments_url": "https://api.github.com/repos/jahwag/ClaudeSync/issues/53/comments",
    "author": "ayushin",
    "comments": [
      {
        "user": "jahwag",
        "created_at": "2024-08-25T13:17:00Z",
        "body": "Welcome @ayushin! I'm glad you're enjoying ClaudeSync!\r\n\r\nIt's always great to receive suggestions for new workflows and use cases. Currently, the tool is tailored to what I needed at a particular point in time. However, I hope that through community effort, it can gradually evolve into something more universal. As you mentioned, Cursor takes a more opinionated approach to solving a similar problem, whereas ClaudeSync aims to be more like a toolbox than an excavator.\r\n\r\nThe current architecture has only one extension point: providers. So, the easiest way to implement syncing to a vector database would be to add it as a new provider. That said, since providers were initially envisioned as having LLMs, some surrounding changes would be beneficial for a good integration.\r\n\r\nRunning ClaudeSync as a GitHub action would certainly be easier if we could pass all prompted arguments. This is something I've been meaning to implement but haven't needed yet. Currently, it's inconsistently applied, with some newer arguments like `--category` being exposed while older ones like project ID are only prompted.\r\n\r\nBy the way, which vector database would you find most useful to support?â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹â€‹"
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2024-09-09T02:34:45Z",
        "body": "This issue has been marked as stale due to 14 days of inactivity. Please remove the stale label or comment to keep it open, otherwise, it will be closed in 3 days."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2024-09-13T02:33:00Z",
        "body": "This issue was closed due to 3 additional days of inactivity after being marked as stale."
      }
    ]
  },
  {
    "number": 47,
    "title": "Login Error",
    "created_at": "2024-08-10T19:41:39Z",
    "closed_at": "2024-08-10T21:07:33Z",
    "labels": [
      "invalid"
    ],
    "url": "https://github.com/jahwag/ClaudeSync/issues/47",
    "body": "\r\nWhen trying to login I get this error, the timestamp is directly copied from the `Expires / Max-age` column in Chrome inspect.\r\n```\r\nPlease enter the expires time for the sessionKey [Mon, 09 Sep 2024 19:39:46 UTC]: 2024-09-09T19:33:06.168Z\r\nThe entered date does not match the required format. Please try again.\r\n```\r\n\r\nI'm on Ubuntu",
    "comments_url": "https://api.github.com/repos/jahwag/ClaudeSync/issues/47/comments",
    "author": "CharlesFr",
    "comments": [
      {
        "user": "jahwag",
        "created_at": "2024-08-10T21:07:33Z",
        "body": "The required format is right there: **Mon, 09 Sep 2024 19:39:46 UTC**. The string you entered does not match it, as indicated by the error.\r\n"
      }
    ]
  },
  {
    "number": 46,
    "title": "DRAFT: Allow multiple paths",
    "created_at": "2024-08-09T23:37:47Z",
    "closed_at": "2024-08-22T13:30:26Z",
    "labels": [
      "Stale"
    ],
    "url": "https://github.com/jahwag/ClaudeSync/pull/46",
    "body": "Allow multiple local paths.\r\n\r\nIf you have multiple paths, where should we store the chat history? One thought: the first path added gets saved as the chat history location, but then it can also be set as its own config option.\r\n\r\nThoughts?\r\n\r\n99% of this code is written by Claude.\r\n\r\n(sorry had to resubmit to clean some stuff up)\r\n",
    "comments_url": "https://api.github.com/repos/jahwag/ClaudeSync/issues/46/comments",
    "author": "trippd6",
    "comments": [
      {
        "user": "github-actions[bot]",
        "created_at": "2024-08-18T02:26:54Z",
        "body": "This pull request has been marked as stale due to 7 days of inactivity. Please remove the stale label or comment to keep it open, otherwise, it will be closed in 3 days."
      },
      {
        "user": "github-actions[bot]",
        "created_at": "2024-08-22T13:30:26Z",
        "body": "This pull request was closed due to 3 additional days of inactivity after being marked as stale."
      }
    ]
  },
  {
    "number": 41,
    "title": "File changed watch mode to sync",
    "created_at": "2024-08-07T02:51:06Z",
    "closed_at": "2024-08-07T16:09:00Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/jahwag/ClaudeSync/issues/41",
    "body": "# Feature Request Template\r\n\r\n## 1. Problem Description\r\nI don't like the idea of `claudesync schedule`. It will run all the time, even when I'm not in developing. And what interval is fast enough, but not too frequent to disturb claude.ai and attract the ban on my account?\r\n\r\n## 2. Desired Solution\r\nI wish it can run on watch mode, detect any file changed, then (wait a while) sync automatically. Or it just detects the changed files and list them. Wait for user input to continue a batch sync. Watch mode only update those changed files, not sync all files blindly. It can support accepting user input to trigger full sync.\r\n\r\n## 3. Considered Alternatives\r\nN/A\r\n\r\n## 4. Use Case\r\nI'll keep the watch mode running background, never mind to manual sync. And I don't want to use `claudesync schedule`.\r\n\r\n## 5. Additional Context\r\nN/A\r\n\r\n## 6. Environment (if relevant)\r\nN/A\r\n\r\n## 7. Willingness to Contribute\r\nMaybe I can try, but not confident on this job.",
    "comments_url": "https://api.github.com/repos/jahwag/ClaudeSync/issues/41/comments",
    "author": "ChrisTorng",
    "comments": [
      {
        "user": "jahwag",
        "created_at": "2024-08-07T16:09:00Z",
        "body": "Thank you for your suggestion!\r\n\r\nWe won't be implementing this feature because ClaudeSync is designed as a CLI tool, not a daemon. It is intended to be run manually, not as a background process.\r\n\r\nHowever, nothing stops you from modifying the suggested cron/claudesync schedule to include a ps and grep for your IDE process. This way, you can achieve a similar effect based on your specific setup.\r\n\r\nAdditionally, if you're using Git, you can add a ClaudeSync project sync as a post-commit hook. This will trigger the sync automatically after each commit, potentially meeting your needs without changing the core design of ClaudeSync."
      }
    ]
  },
  {
    "number": 20,
    "title": ".ignore file",
    "created_at": "2024-07-26T14:30:47Z",
    "closed_at": "2024-07-27T18:57:10Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/jahwag/ClaudeSync/issues/20",
    "body": "Is your feature request related to a problem? Please describe.\r\n\r\nWe need a .ignore file to be able to ignore certain files and structures. I just had entire node modules directory synced :D\r\n\r\nA clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\r\n\r\nLack of option to ignore or include certain paths and files\r\n\r\nDescribe the solution you'd like\r\n\r\nA .ignore implementation\r\n\r\nA clear and concise description of what you want to happen.\r\n\r\nA .ignore file that can be configured\r\n\r\nDescribe alternatives you've considered\r\nA clear and concise description of any alternative solutions or features you've considered.\r\nUse case\r\nDescribe how you would use this feature and how it would benefit your workflow with ClaudeSync.\r\nAdditional context\r\nAdd any other context, screenshots, or examples about the feature request here.\r\nEnvironment (if relevant):\r\n\r\nOS: [e.g. Windows 10, macOS 11.4, Ubuntu 20.04]\r\n\r\nMacOS\r\n\r\nPython version: [e.g. 3.8.10]\r\nClaudeSync version: [e.g. 0.3.7]\r\n\r\nAre you willing to contribute to this feature?\r\n\r\nYes\r\n\r\nLet us know if you're interested in helping implement this feature or if you're just suggesting an idea.\r\n\r\nI can help.\r\n",
    "comments_url": "https://api.github.com/repos/jahwag/ClaudeSync/issues/20/comments",
    "author": "sencerburak",
    "comments": [
      {
        "user": "jahwag",
        "created_at": "2024-07-26T20:42:32Z",
        "body": "The functionality youâ€™re referring to is covered in our README, where it states that .gitignore is parsed by ClaudeSync. Please review the documentation, and if you still experience issues after that, let us know with more details."
      }
    ]
  },
  {
    "number": 18,
    "title": "Clarify what is meant by \"sync\"",
    "created_at": "2024-07-24T15:26:05Z",
    "closed_at": "2024-07-25T21:03:06Z",
    "labels": [
      "documentation"
    ],
    "url": "https://github.com/jahwag/ClaudeSync/issues/18",
    "body": "Some tools do two-way syncs with conflict resolution.  Some tools sync local to remote. Others sync remote to local. Others do both without conflict resolution.\r\n\r\nFrom the README it's not apparent what this tool does.",
    "comments_url": "https://api.github.com/repos/jahwag/ClaudeSync/issues/18/comments",
    "author": "dmwyatt",
    "comments": [
      {
        "user": "mnieber",
        "created_at": "2024-08-04T19:26:28Z",
        "body": "First of all, this tool looks amazing, I'm looking forward to trying it!\r\n\r\nI checked the source code to see if this tool would only upload a file if it is different from the remote one. The reason is that I don't want to spam Claude.ai with repeatedly uploading the same files. \r\n\r\nThe tool handles this correctly, which is great. But my suggestion is to explain this directly in the README (e.g. \"ClaudeSync only uploads local files that are absent or different from the files in the remote project\")."
      },
      {
        "user": "jahwag",
        "created_at": "2024-08-04T21:18:00Z",
        "body": "> First of all, this tool looks amazing, I'm looking forward to trying it!\r\n> \r\n> I checked the source code to see if this tool would only upload a file if it is different from the remote one. The reason is that I don't want to spam Claude.ai with repeatedly uploading the same files.\r\n> \r\n> The tool handles this correctly, which is great. But my suggestion is to explain this directly in the README (e.g. \"ClaudeSync only uploads local files that are absent or different from the files in the remote project\").\r\n\r\nWouldn't it have been quicker to submit a PR for your suggested change rather than commenting on a closed issue from two weeks ago?"
      },
      {
        "user": "mnieber",
        "created_at": "2024-08-05T06:27:07Z",
        "body": "No, not quicker (and I wanted to ask if you agree this change would help). But I will create a PR then.\r\n\r\nAlso, I just synced my first project, and I'm psyched. This is amazing, thank you."
      }
    ]
  },
  {
    "number": 14,
    "title": "Add session key obtaining guide to README",
    "created_at": "2024-07-21T21:23:30Z",
    "closed_at": "2024-07-22T10:05:45Z",
    "labels": [],
    "url": "https://github.com/jahwag/ClaudeSync/pull/14",
    "body": "This commit adds a detailed instruction set to the README file, guiding users on how to obtain their session key from Claude.ai. This key is crucial for synchronization between local files and Claude.ai projects.",
    "comments_url": "https://api.github.com/repos/jahwag/ClaudeSync/issues/14/comments",
    "author": "crippledgeek",
    "comments": [
      {
        "user": "jahwag",
        "created_at": "2024-07-22T09:40:31Z",
        "body": "I've reviewed the changes in PR #14 and noticed a couple of issues:\r\n\r\n1. **Duplication of Documentation**: The documentation added duplicates what is already present when executing `claudesync api login claude.ai`. This redundancy should be avoided.\r\n\r\n2. **Provider-Specific Information**: The login procedure described is specific to the `claude.ai` provider. Since this tool is envisioned as multi-provider, we should avoid provider-specific details in the main documentation.\r\n"
      },
      {
        "user": "crippledgeek",
        "created_at": "2024-07-22T10:05:45Z",
        "body": "valid points closing :) "
      }
    ]
  }
]