[
  {
    "number": 234,
    "title": "Audio generation fails",
    "created_at": "2025-01-31T15:04:06Z",
    "closed_at": "2025-02-11T17:21:41Z",
    "labels": [],
    "url": "https://github.com/souzatharsis/podcastfy/issues/234",
    "body": "No matter what I try I can't get the audio files to generate. I've tried all the different tts models but none of the work. I also don't see any files inside `./data/audio`. The script exits with the error below.\n\n```sh\nError merging audio files: Expecting value: line 1 column 1 (char 0)\nError converting text to speech: Expecting value: line 1 column 1 (char 0)\n2025-01-31 16:01:45,871 - __main__ - ERROR - An error occurred in the process_content function: Expecting value: line 1 column 1 (char 0)\nAn error occurred: Expecting value: line 1 column 1 (char 0)\n```\n\nWhen I check my OpenAI API usage, I can see that the TTS HD endpoint is being used, so it seems that something fails when trying to save the audio file(s).\n\nAlso, the `./data/audio` folder gets created correctly but I don't see the `temp_audio_dir` folder. Could this be the issue?\n\nRunning on Ubuntu inside a separate Python env.\n\nAny help is appreciated.",
    "comments_url": "https://api.github.com/repos/souzatharsis/podcastfy/issues/234/comments",
    "author": "flatpackfan",
    "comments": [
      {
        "user": "flatpackfan",
        "created_at": "2025-02-03T14:46:23Z",
        "body": "@souzatharsis do you maybe have any suggestions on how to further debug this and figure out what's going on?"
      },
      {
        "user": "richardcharlesclarke",
        "created_at": "2025-02-10T12:10:06Z",
        "body": "I think i can help.\n\nThe issue is likely due to how the file is being handled by pydub after ffmpeg processes it. \n\nEnsure you have the latest version of pydub and ffmpeg.\n\nYou need to install the system-level ffmpeg binary, which pydub uses to process audio files.\n\nYou may need to explicitly tell pydub where to find both ffmpeg and ffprobe.\n\nYou can do this by setting the environment variables FFMPEG_BINARY and FFPROBE_BINARY in your Python code before using pydub.\n\nIf i can help further let me know."
      },
      {
        "user": "flatpackfan",
        "created_at": "2025-02-11T17:21:26Z",
        "body": "@richardcharlesclarke you're a genius! I've managed to get everything to work.\n\nThe problem was indeed a broken ffmpeg / ffprobe install. \n\nWould be great if Podcastfy would throw this as an error, either at install or during runtime. "
      }
    ]
  },
  {
    "number": 225,
    "title": "Promising but disappointing",
    "created_at": "2025-01-11T13:44:13Z",
    "closed_at": "2025-01-11T13:55:09Z",
    "labels": [],
    "url": "https://github.com/souzatharsis/podcastfy/issues/225",
    "body": "Nice to see you can use local LLMs, but then I see for tts only vampires OpenAI, ElevenLabs, Google and Microsoft are supported when there are many quality open source tts models.",
    "comments_url": "https://api.github.com/repos/souzatharsis/podcastfy/issues/225/comments",
    "author": "fpolli",
    "comments": [
      {
        "user": "souzatharsis",
        "created_at": "2025-01-11T13:55:09Z",
        "body": "I agree enabling fully local generation is important. This perhaps is a good opportunity for you to make a contribution to this project. There is an open issue I'd recommend: #116 \r\n\r\nI'd be happy to help."
      }
    ]
  },
  {
    "number": 174,
    "title": "Gemini podcast is reading markup verbosely",
    "created_at": "2024-11-13T20:05:26Z",
    "closed_at": "2024-11-16T19:30:57Z",
    "labels": [],
    "url": "https://github.com/souzatharsis/podcastfy/issues/174",
    "body": "I noticed a couple of podcast when the hosts were saying \"asterisk\" and \"giggles\". It seems like the Gemini speech to text model is not handling this correctly. ",
    "comments_url": "https://api.github.com/repos/souzatharsis/podcastfy/issues/174/comments",
    "author": "lfnovo",
    "comments": [
      {
        "user": "souzatharsis",
        "created_at": "2024-11-16T19:30:57Z",
        "body": "I am no longer observing this issue in new release v0.4.0"
      }
    ]
  },
  {
    "number": 125,
    "title": "Refactor generate_podcast function to reduce complexity",
    "created_at": "2024-10-28T19:46:47Z",
    "closed_at": "2024-11-15T17:52:52Z",
    "labels": [],
    "url": "https://github.com/souzatharsis/podcastfy/pull/125",
    "body": "- Split `generate_podcast` into smaller helper functions: `load_default_configuration`, `get_conversation_config`, `generate_content_from_sources`, and `handle_transcript_generation`.\r\n- Each helper function now handles a single responsibility, making `generate_podcast` more concise and easier to maintain.\r\n- This refactor enhances readability, reduces code duplication, and isolates key processes for improved debugging and testing.",
    "comments_url": "https://api.github.com/repos/souzatharsis/podcastfy/issues/125/comments",
    "author": "BDadmehr0",
    "comments": [
      {
        "user": "souzatharsis",
        "created_at": "2024-10-29T00:27:40Z",
        "body": "Hi @BDadmehr0 , tests did not pass.\r\nPlease run pytest before commit.\r\nSee log above."
      }
    ]
  },
  {
    "number": 102,
    "title": "include bumper music",
    "created_at": "2024-10-24T14:28:52Z",
    "closed_at": "2024-10-25T04:45:48Z",
    "labels": [],
    "url": "https://github.com/souzatharsis/podcastfy/issues/102",
    "body": "Can I add a fade in and fade out bumper audio clip (ie: soundtrack music of 10 seconds or something)?",
    "comments_url": "https://api.github.com/repos/souzatharsis/podcastfy/issues/102/comments",
    "author": "ralyodio",
    "comments": [
      {
        "user": "souzatharsis",
        "created_at": "2024-10-25T04:45:48Z",
        "body": "This is out-of-scope. Please use any off-the-shelf audio editing tool instead."
      }
    ]
  },
  {
    "number": 66,
    "title": "feat: update pypdf with pymupdf(10x faster then pypdf) #56 check",
    "created_at": "2024-10-15T05:27:43Z",
    "closed_at": "2024-10-15T11:45:57Z",
    "labels": [],
    "url": "https://github.com/souzatharsis/podcastfy/pull/66",
    "body": "**Commit Message:**\r\n\r\nOptimized PDF parsing performance by switching to PyMuPDF\r\n\r\n- Compared PDF extraction performance between PyMuPDF and PyPDF using the same document (`data/pdf/s41598-024-58826-w.pdf` - 14 pages).\r\n- Results: \r\n   - **PyMuPDF** took 0.047 seconds.\r\n   - **PyPDF** took 0.493 seconds.\r\n- Significant improvement in processing time achieved using PyMuPDF, enhancing overall efficiency for PDF handling in the project.\r\n\r\n\r\nI checked for old PR, and that is due to the \"add collab link PR\"",
    "comments_url": "https://api.github.com/repos/souzatharsis/podcastfy/issues/66/comments",
    "author": "Devparihar5",
    "comments": [
      {
        "user": "souzatharsis",
        "created_at": "2024-10-15T11:46:02Z",
        "body": "LGTM!"
      }
    ]
  },
  {
    "number": 61,
    "title": "Lower level api final",
    "created_at": "2024-10-14T12:06:31Z",
    "closed_at": "2024-10-16T16:42:30Z",
    "labels": [],
    "url": "https://github.com/souzatharsis/podcastfy/pull/61",
    "body": null,
    "comments_url": "https://api.github.com/repos/souzatharsis/podcastfy/issues/61/comments",
    "author": "brumar",
    "comments": [
      {
        "user": "souzatharsis",
        "created_at": "2024-10-16T16:43:44Z",
        "body": "Merged! We can work on the above comments in dev branch!"
      }
    ]
  },
  {
    "number": 56,
    "title": "update pypdf with pymupdf(10x faster then pypdf)",
    "created_at": "2024-10-14T07:32:33Z",
    "closed_at": "2024-10-14T22:33:41Z",
    "labels": [],
    "url": "https://github.com/souzatharsis/podcastfy/pull/56",
    "body": "**Commit Message:**\r\n\r\nOptimized PDF parsing performance by switching to PyMuPDF\r\n\r\n- Compared PDF extraction performance between PyMuPDF and PyPDF using the same document (`data/pdf/s41598-024-58826-w.pdf` - 14 pages).\r\n- Results: \r\n   - **PyMuPDF** took 0.047 seconds.\r\n   - **PyPDF** took 0.493 seconds.\r\n- Significant improvement in processing time achieved using PyMuPDF, enhancing overall efficiency for PDF handling in the project.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/souzatharsis/podcastfy/issues/56/comments",
    "author": "Devparihar5",
    "comments": [
      {
        "user": "souzatharsis",
        "created_at": "2024-10-14T09:25:19Z",
        "body": "Thanks! That's an impressive gain in performance for this use case.\n\nYou should also update the pyproject.toml file updating this dependency.\n\nWe will add a contributors guide soon to clarify those steps.\n\nThanks! "
      },
      {
        "user": "Devparihar5",
        "created_at": "2024-10-14T09:54:33Z",
        "body": "> Thanks! That's an impressive gain in performance for this use case.\r\n> \r\n> You should also update the pyproject.toml file updating this dependency.\r\n> \r\n> We will add a contributors guide soon to clarify those steps.\r\n> \r\n> Thanks!\r\n\r\n@souzatharsis \r\nit's done, you can check now"
      },
      {
        "user": "souzatharsis",
        "created_at": "2024-10-14T22:53:14Z",
        "body": "@Devparihar5 this LGTM\r\n\r\nI merged it and for some reason only the toml file was updated.\r\n\r\nCould you please submit PR again? Apologies for the confusion thanks for your contribution."
      }
    ]
  },
  {
    "number": 45,
    "title": "feat: open with colab link",
    "created_at": "2024-10-12T13:36:07Z",
    "closed_at": "2024-10-14T22:55:47Z",
    "labels": [],
    "url": "https://github.com/souzatharsis/podcastfy/pull/45",
    "body": "- fixes #35 \r\n- Adds markdown that helps to open `podcastfy.ipynb` on google colab.",
    "comments_url": "https://api.github.com/repos/souzatharsis/podcastfy/issues/45/comments",
    "author": "PriyanshuPz",
    "comments": [
      {
        "user": "PriyanshuPz",
        "created_at": "2024-10-12T14:01:59Z",
        "body": "@souzatharsis Thanks for updating me in no time.\r\nLet me try to implement required changes and notify you."
      },
      {
        "user": "souzatharsis",
        "created_at": "2024-10-14T22:55:47Z",
        "body": "Solved in #57 "
      }
    ]
  },
  {
    "number": 44,
    "title": "Added contributors and back to top",
    "created_at": "2024-10-12T12:48:09Z",
    "closed_at": "2024-10-12T21:47:42Z",
    "labels": [],
    "url": "https://github.com/souzatharsis/podcastfy/pull/44",
    "body": "## Summary\r\n\r\nAdded the contributors section in the readme and also added the back to top button.",
    "comments_url": "https://api.github.com/repos/souzatharsis/podcastfy/issues/44/comments",
    "author": "barbarian360",
    "comments": [
      {
        "user": "souzatharsis",
        "created_at": "2024-10-12T21:47:45Z",
        "body": "LGTM, thanks!"
      }
    ]
  },
  {
    "number": 43,
    "title": "Lower level api v2",
    "created_at": "2024-10-12T06:14:21Z",
    "closed_at": "2024-10-15T09:14:45Z",
    "labels": [],
    "url": "https://github.com/souzatharsis/podcastfy/pull/43",
    "body": "I preferred a second version to avoid messing with the discussion on the first one.\r\nImprovements: \r\n- optional support for async if the tts backend supports it (I think this is were async has the most benefits), fallback to threads if async not supported and n_jobs > 1\r\n- simplify the podcast_stage_decorator\r\n- finally requires the llm_backend to send tuples so that parsing the string is not the responsibility of the podcast class. That would be less ackward when structured output will be used.\r\n- documentation\r\n- from_transcript method to provide an escape hatch if transcript have been saved or obtained with another method",
    "comments_url": "https://api.github.com/repos/souzatharsis/podcastfy/issues/43/comments",
    "author": "brumar",
    "comments": [
      {
        "user": "brumar",
        "created_at": "2024-10-12T19:45:51Z",
        "body": "@souzatharsis the multiple feature requests like \"integrate with\" make it somehow urgent to abstract away llm and tts backend with well thought ABCs. This way, it will be easy to publish a guide on \"how to integrate with your own <<thing>>\" and probably setup a contribs folder or even repository later on. \r\n\r\nMaybe, to get closer to the domain model, I am starting to think that the concept of Character is central to this podcast thing. I'll go as far as to say that it what's make it unique. Once defined, they could be the second argument for each backend (tts and llm). This way, this design won't feel too generic and closer to the domain model. Characters would then be reusable, they could have multiple voices (to cover multiple tts backend).\r\n\r\nLater on, characters could even play a role in an agentic way, where they don't have the same history, maybe they also did not read the same content and will exchange viewpoints, the discussion would then be generated by real a turn by turn call by as many calls to the llm backend as there are interventions. They could have their own memory of previous readings and discussions etc. Characters attributes could also evolve over time. You can call me the dreamy one ahah.  That's not for today of course, but one can go into this kind of ambitious direction only if the characters are a central class in the design.\r\n\r\nJust to say that I think I could go for a new round of design with this character thing and see how does it look. It would be down to earth, no dreamy stuff ahah."
      },
      {
        "user": "brumar",
        "created_at": "2024-10-13T06:41:52Z",
        "body": "@souzatharsis Great! I think that when this is really integrated in the code, other design consideration would takes place. Did you see my comment about the Character thing? If you think that it's worth a shot, I integrate this aspect into my PR."
      },
      {
        "user": "souzatharsis",
        "created_at": "2024-10-14T00:03:00Z",
        "body": "Yes, please integrate Character. very interesting idea."
      },
      {
        "user": "souzatharsis",
        "created_at": "2024-10-15T00:02:51Z",
        "body": "Should we close this one and consolidate it under #61 ?"
      }
    ]
  },
  {
    "number": 36,
    "title": "Question About Alternate to Gemini",
    "created_at": "2024-10-09T02:17:37Z",
    "closed_at": "2024-10-09T11:19:41Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/souzatharsis/podcastfy/issues/36",
    "body": "Not really an issue, but a question. Is it possible to swap out Gemini with a local LLM?",
    "comments_url": "https://api.github.com/repos/souzatharsis/podcastfy/issues/36/comments",
    "author": "vectrocomputers",
    "comments": [
      {
        "user": "souzatharsis",
        "created_at": "2024-10-09T11:19:41Z",
        "body": "Thanks for the question. Short answer is: No.\r\n\r\nHowever, I am about to push an update that refactor the code to use lang-chain therefore paving the way to enable your request, ability to run local LLMs.\r\n\r\nNote that Gemini was particularly chose as default model due to its ultra-large context window which allows for RAG-style LLM prompting out of the box.\r\n\r\nOnce I push the langchain update, I have plans to enable ease of switch among any LLMs.\r\n\r\nI hope that answers your question. And I'd encourage you to consider becoming a contributor.\r\n\r\nThanks!"
      }
    ]
  },
  {
    "number": 33,
    "title": "generate_podcast should return (audio, transcript)",
    "created_at": "2024-10-08T18:13:31Z",
    "closed_at": "2024-10-12T13:52:41Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/souzatharsis/podcastfy/issues/33",
    "body": null,
    "comments_url": "https://api.github.com/repos/souzatharsis/podcastfy/issues/33/comments",
    "author": "souzatharsis",
    "comments": [
      {
        "user": "PriyanshuPz",
        "created_at": "2024-10-12T13:27:44Z",
        "body": "@souzatharsis May I Can work on this issue"
      },
      {
        "user": "souzatharsis",
        "created_at": "2024-10-12T13:52:15Z",
        "body": "Thanks @priyanshuverma-dev ! After giving it a second thought, I believe we should close this issue. Such a change would break current integrations that expect audio only response. \r\n\r\n@brumar is working a broader issue to have an abstract podcast class to store specific podcast methods and attributes #21 "
      },
      {
        "user": "souzatharsis",
        "created_at": "2024-10-12T13:52:42Z",
        "body": "won't fix"
      }
    ]
  },
  {
    "number": 30,
    "title": "docs: update README.md",
    "created_at": "2024-10-08T15:13:01Z",
    "closed_at": "2024-10-08T15:16:39Z",
    "labels": [],
    "url": "https://github.com/souzatharsis/podcastfy/pull/30",
    "body": "programatic -> programmatic",
    "comments_url": "https://api.github.com/repos/souzatharsis/podcastfy/issues/30/comments",
    "author": "eltociear",
    "comments": [
      {
        "user": "souzatharsis",
        "created_at": "2024-10-08T15:17:57Z",
        "body": "thanks for the catch @eltociear !"
      }
    ]
  },
  {
    "number": 28,
    "title": "Could not run on Mac",
    "created_at": "2024-10-08T03:33:12Z",
    "closed_at": "2024-10-08T15:28:17Z",
    "labels": [],
    "url": "https://github.com/souzatharsis/podcastfy/issues/28",
    "body": "Anyone tried on Mac? I tried this using brew pipx install and did not succeed. Regular pip doesn't seem to work either. pipx shows that it's installed but when run, it throws an error saying podcastfy.client module is not found.",
    "comments_url": "https://api.github.com/repos/souzatharsis/podcastfy/issues/28/comments",
    "author": "seshakiran",
    "comments": [
      {
        "user": "seshakiran",
        "created_at": "2024-10-08T04:14:34Z",
        "body": "Never mind. Got it working. Had to reinstall some packages. You know how it is. Can't sleep till we get this working. Great work in creating this pipeline. "
      },
      {
        "user": "souzatharsis",
        "created_at": "2024-10-08T14:23:01Z",
        "body": "Would you mind sharing what you did to make it working on Mac?\r\nYour experience could help Mac developers get it running out-of-the-box.\r\nThanks @seshakiran "
      }
    ]
  }
]