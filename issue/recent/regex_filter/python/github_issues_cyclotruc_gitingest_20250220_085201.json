[
  {
    "number": 171,
    "title": "Added latin as an encoding",
    "created_at": "2025-02-09T21:48:40Z",
    "closed_at": "2025-02-13T03:48:53Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/171",
    "body": "Added latin as an encoding, it fails to work with french characters without this. We don't all write good english. I had this issue because I got the error message below.\r\n\r\n`\r\ngitingest .\r\nError: 'charmap' codec can't encode characters in position 22-24: character maps to <undefined>\r\nAborted!\r\n`\r\n\r\nNow it works great.",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/171/comments",
    "author": "davidwarshawsky",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2025-02-12T20:15:14Z",
        "body": "@davidwarshawsky Ahah good catch thanks for this addition! \r\nI didn't know of this encoding format, merging now "
      }
    ]
  },
  {
    "number": 167,
    "title": "tweak: add @ to allowed symbols",
    "created_at": "2025-02-07T02:07:22Z",
    "closed_at": "2025-02-10T00:56:46Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/167",
    "body": "Fixes #159 ",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/167/comments",
    "author": "jcserv",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2025-02-10T00:55:27Z",
        "body": "@jcserv Thanks for this fix! merging"
      }
    ]
  },
  {
    "number": 162,
    "title": "Bun lock files are not being ignored",
    "created_at": "2025-02-03T10:58:48Z",
    "closed_at": "2025-02-04T00:50:08Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/issues/162",
    "body": "Bun lock files are named `bun.lock` or `bun.lockb` and are verbose. They should be ignored similarly to how `package-lock.json` and `yarn.lock` are ignored.\n",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/162/comments",
    "author": "Artmann",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2025-02-04T00:50:37Z",
        "body": "Merged!"
      }
    ]
  },
  {
    "number": 159,
    "title": "Allow '@' in Include/Exclude mask",
    "created_at": "2025-01-30T12:02:02Z",
    "closed_at": "2025-02-10T00:56:47Z",
    "labels": [
      "bug",
      "good first issue"
    ],
    "url": "https://github.com/cyclotruc/gitingest/issues/159",
    "body": "I tried to include `n8n/packages/@n8n/nodes-langchain` only folder and it threw `Error: Pattern 'n8n/packages/@n8n/nodes-langchain' contains invalid characters. Only alphanumeric characters, dash (-), underscore (_), dot (.), forward slash (/), plus (+), and asterisk (*) are allowed.`\n\nGithub repo: n8n-io/n8n",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/159/comments",
    "author": "restyler",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2025-02-06T09:37:42Z",
        "body": "Thank you for reporting this, anyone wants to do this easy one?"
      },
      {
        "user": "jcserv",
        "created_at": "2025-02-07T02:08:37Z",
        "body": "@cyclotruc I've raised a PR here: #167 "
      }
    ]
  },
  {
    "number": 153,
    "title": "Resolves #109, File Tree Lines can be Added to Exclude/Include Pattern Through Click",
    "created_at": "2025-01-24T01:35:11Z",
    "closed_at": "2025-02-04T01:46:47Z",
    "labels": [
      "planned"
    ],
    "url": "https://github.com/cyclotruc/gitingest/pull/153",
    "body": "Made a couple of changes to finish the feature:\r\n* Added some javascript code in `result.jinja` to add or remove file names to the patter input.\r\n* Placed an `onchange` handler on the pattern selector to change CSS classes depending on whether \"exclude\" or \"include\" is selected. The simplest way to do this was to toggle all the classes, since it handles already selected files as well without any extra logic.\r\n\r\n@cyclotruc feel free to let me know what you think! You also mentioned wanting to add some kind of notice to users that the items were clickable - do you think adding some text above the file tree would be the best way to do that?",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/153/comments",
    "author": "DavidUlloa6310",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2025-01-24T06:53:15Z",
        "body": "@DavidUlloa6310 Thank you for this PR, taking a look asap"
      },
      {
        "user": "cyclotruc",
        "created_at": "2025-01-24T21:48:34Z",
        "body": "@DavidUlloa6310 great pr, thanks again\r\n\r\nThere has been a recent restructure of the repo which requires a rebase with main\r\nI would do it myself but I can't find a way to push on your branch\r\n\r\nYou can give me access or do it yourself:\r\nsimply move \r\n`git_form.jinja` and `result.jinja` into their new location in `src/server/templates` \r\n\r\n"
      },
      {
        "user": "DavidUlloa6310",
        "created_at": "2025-01-26T04:45:10Z",
        "body": "> @DavidUlloa6310 great pr, thanks again\r\n> \r\n> There has been a recent restructure of the repo which requires a rebase with main I would do it myself but I can't find a way to push on your branch\r\n> \r\n> You can give me access or do it yourself: simply move `git_form.jinja` and `result.jinja` into their new location in `src/server/templates`\r\n\r\n@cyclotruc thank you for the compliments! I went ahead and did the rebase - let me know if everything looks good to merge"
      },
      {
        "user": "DavidUlloa6310",
        "created_at": "2025-01-27T22:37:48Z",
        "body": "Sounds good! Thanks again for the help - I was totally confused as to why the test was failing. I just sent you an invite to my fork of the repo"
      },
      {
        "user": "cyclotruc",
        "created_at": "2025-02-04T01:46:28Z",
        "body": "@DavidUlloa6310 I ran the pre-commit hooks and fixed the issue with the copy button using a hidden field containing the original tree content\r\n\r\nMerging this, Thanks a lot for your contribution! "
      }
    ]
  },
  {
    "number": 148,
    "title": "feat(cli): Add support for multiple file exclusions and .gitingestignore file : issue #147",
    "created_at": "2025-01-21T19:05:59Z",
    "closed_at": "2025-01-21T19:06:49Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/148",
    "body": "### Enhanced CLI File Exclusion Capabilities\r\n\r\n**Description:**\r\n\r\nThis PR significantly improves the `gitingest` CLI tool by introducing two major features for handling file exclusions:\r\n\r\n#### 1. Support for Multiple Exclusion Patterns\r\n- **New Feature:** The CLI now accepts multiple file exclusion patterns via the `-e` option.\r\n- **Enhancements:**\r\n  - Command line pattern parsing has been enhanced to handle space-separated patterns.\r\n  - Users can exclude multiple files in a single command:\r\n    ```bash\r\n    gitingest -e \"LICENSE README.md package.json\"\r\n    ```\r\n    or using multiple flags:\r\n    ```bash\r\n    gitingest -e LICENSE -e README.md -e package.json\r\n    ```\r\n\r\n#### 2. .gitingestignore File Support\r\n- **New Feature:** Introduced support for a `.gitingestignore` file to specify files and directories to be ignored.\r\n- **Details:**\r\n  - The `.gitingestignore` file follows a format similar to `.gitignore`:\r\n    ```\r\n    node_modules/\r\n    LICENSE\r\n    package.json\r\n    pnpm-lock.yaml\r\n    pnpm-workspace.yaml\r\n    tsconfig\r\n    ```\r\n  - Patterns from both command line arguments and the `.gitingestignore` file are combined for comprehensive exclusion.\r\n\r\n\r\n**Impact:**\r\nThese enhancements make the `gitingest` CLI more flexible and user-friendly by providing multiple ways to specify file exclusions. This approach is similar to how other popular tools like `git` handle ignore patterns, thereby improving the user experience and efficiency when working with the `gitingest` tool.\r\n\r\n**Issue Addressed:**\r\nThis PR addresses issue #147 by providing a more user-friendly way to handle file exclusions in the `gitingest` tool.",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/148/comments",
    "author": "AbhiRam162105",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2025-01-21T19:26:52Z",
        "body": "@AbhiRam162105 Hi and thank you for this work\r\nIt seems very promising, any reason why you closed the PR? \r\nI haven't tested your changes yet but I'd really like to merge that one and have your name on it if you're willing to open a new PR (or re-open that one) "
      }
    ]
  },
  {
    "number": 145,
    "title": "Create main.yml",
    "created_at": "2025-01-21T10:49:25Z",
    "closed_at": "2025-01-22T10:49:46Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/145",
    "body": null,
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/145/comments",
    "author": "prechayimmee2412",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2025-01-22T10:49:46Z",
        "body": "I'm almost tempted to keep this open to see if this bot evolves into some kind of consciousness"
      }
    ]
  },
  {
    "number": 142,
    "title": "refactor:  refactor codebase to unify server module and update file paths",
    "created_at": "2025-01-19T14:41:33Z",
    "closed_at": "2025-01-24T06:12:07Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/142",
    "body": "This PR reorganizes the codebase to place all application logic, routers, static files, and templates within a new `server` module. Key changes include:\r\n\r\n- Moving `main.py`, `routers`, `query_processor.py`, and `server_utils.py` into the `server` directory  \r\n- Updating imports and references throughout the code (e.g., `server.routers`, `server.server_utils`)  \r\n- Relocating static assets from `src/static` to `src/server/static` and templates from `src/templates` to `src/server/templates`  \r\n- Updating the Dockerfile `CMD` to point to `server.main:app`  \r\n\r\nThis refactor provides a cleaner, more consistent structure for the FastAPI application and its related components.",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/142/comments",
    "author": "filipchristiansen",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2025-01-24T06:13:06Z",
        "body": "@filipchristiansen  Finally merged, decided to move utils into server and adjusted readme, now we have a strong structure to improve upon!"
      }
    ]
  },
  {
    "number": 140,
    "title": "Comprehensive Integration Test Suite",
    "created_at": "2025-01-18T02:11:14Z",
    "closed_at": "2025-01-24T23:10:58Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/140",
    "body": "_Please read #139_ \r\n\r\n### Overview \r\nThis PR  introduces a robust integration test suite for GitIngest, covering critical functionalities and edge cases. These tests ensure the reliability, scalability, and correctness of the application.\r\n\r\n### What Does This PR Do?\r\n#### 1. Adds Comprehensive Tests\r\n- Tests for analyzing remote repositories (e.g., input validation, processing, and output generation).\r\n- Tests for handling edge cases, including invalid URLs, special characters, and unsupported inputs.\r\n- Tests for analyzing large repositories and handling nested structures.\r\n\r\n#### 2. Simulates Concurrent Requests\r\n- Validates the server’s ability to handle multiple simultaneous requests without failures.\r\n- Tests rate limiting and stability under load.\r\n\r\n#### 3. Mocks Template Rendering\r\n- Bypasses template file dependencies, ensuring faster and isolated testing of core logic.\r\n\r\n#### 4. Improves Code Coverage\r\n- Ensures that all major code paths, including edge cases and error scenarios, are tested.\r\n\r\n#### 5. Ensures Graceful Error Handling\r\n- Validates proper user feedback for invalid inputs and large files.\r\n\r\n### How Does It Work?\r\n- **Test Fixtures**: Mocked templates and a test client simulate real-world scenarios while ensuring fast and isolated tests.\r\n- **Concurrent Requests**: Thread pooling simulates high traffic, validating server stability.\r\n- **Edge Case Tests**: Specific inputs test the system’s robustness against unusual and unsupported cases.\r\n\r\n### What Does It Test?\r\n#### 1. End-to-End Flows\r\n- Repository analysis from form submission to result rendering.\r\n\r\n#### 2. Error Handling\r\n- Invalid inputs, large files, and unsupported patterns.\r\n\r\n#### 3. Performance\r\n- Large repositories and high concurrency.\r\n\r\n#### 4. Scalability\r\n- Stability under simultaneous requests.\r\n\r\n### Why Is This Critical?\r\n1. Reduces the risk of bugs and regressions.\r\n2. Enhances developer confidence in making changes.\r\n3. Improves user experience by validating common and edge-case scenarios.\r\n4. Ensures operational stability under load.\r\n\r\n### Conclusion\r\nThis PR significantly enhances GitIngest’s testing framework, ensuring robustness, reliability, and scalability. It provides a foundation for future development with confidence in the system’s core functionalities.\r\n",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/140/comments",
    "author": "RyanL2004",
    "comments": [
      {
        "user": "RyanL2004",
        "created_at": "2025-01-18T02:33:21Z",
        "body": "I wanted to provide some context regarding the previous failures on this PR:\r\n\r\n1. **Initial Failure**:\r\n   The CI tests initially failed because the application was attempting to mount a `static` directory using this line in `main.py`:\r\n   ```python\r\n   app.mount(\"/static\", StaticFiles(directory=\"static\"), name=\"static\")```\r\nHowever, the static directory was missing in the CI environment, resulting in the following error:\r\n\r\n `RuntimeError: Directory 'static' does not exist`\r\n \r\n 2. **Fix**:\r\n    I corrected the directory path to `src/static` since that’s the actual location of the`static` folder in the project. Here’s the updated line in `main.py`:\r\n ```python\r\n app.mount(\"/static\", StaticFiles(directory=\"src/static\"), name=\"static\")\r\n ```\r\n3. **Resolution**:\r\n  After making this change, I pushed the fix to this branch, which resolved the CI errors. The tests now pass successfully, and the PR is ready for review.\r\n\r\n"
      },
      {
        "user": "RyanL2004",
        "created_at": "2025-01-18T18:39:58Z",
        "body": "Hi @cyclotruc,  \r\nThank you for your feedback and for taking the time to review the work!\r\n\r\nAfter some troubleshooting, \nI’ve resolved the **Internal Server Error (500)** issue that was occurring only in the local environment while the server ran smoothly on Docker.\r\n\r\n**Root Cause:**  \r\nThe issue was related to how the server handled file paths, particularly for:\r\n\r\n- Resolving static files (`src/static`).  \r\n- Locating templates (`src/templates`).  \r\n- In the local environment, the server wasn’t consistently resolving paths correctly unless the application was run explicitly from the root directory. This discrepancy didn’t appear in Docker due to its controlled environment and consistent working directory.\r\n\r\n1. **Issue**:  \r\n   The web server failed to run due to an incorrect path for the `static` directory in the following line:\r\n   ```python\r\n   app.mount(\"/static\", StaticFiles(directory=\"src/static\"), name=\"static\")\r\n   ```\r\n   The directory `static` was assumed to be at the root level, but it was actually located in `/static`.\r\n\r\n**Fix**: I’ve updated `main.py` to dynamically resolve the correct path for the `static` directory relative to `main.py` and added an `if` to handle potential use cases where  if `static` is not found or unrecognized & the server is ran from a different root, it would prevent everything from crashing.\r\n\r\n```python\r\nstatic_dir = Path(__file__).parent / \"static\"\r\nif static_dir.exists():\r\n    app.mount(\"/static\", StaticFiles(directory=static_dir), name=\"static\")\r\nelse:\r\n    print(f\"Warning: Static directory '{static_dir}' does not exist. Skipping static file mount.\")\r\n```\r\n_I may still make some modifications, based on your next feedback_"
      },
      {
        "user": "cyclotruc",
        "created_at": "2025-01-24T23:11:05Z",
        "body": "@RyanL2004 Hi sorry for the delay, finally got back to your PR thank you very much :)"
      }
    ]
  },
  {
    "number": 131,
    "title": "fix: handling of branch names with slashes",
    "created_at": "2025-01-14T06:47:21Z",
    "closed_at": "2025-01-16T19:55:27Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/131",
    "body": "This update addresses issues related to the handling of branch names containing slashes:\r\n\r\n- **Branch Names with Slashes**: Ensures proper handling of branch names like `feature/fix1` without errors.\r\n- **Invalid Branch Names**: Introduces a fallback mechanism to default to the main branch while ignoring invalid subpaths.\r\n- **Branch Fetch Failures**: Implements a robust fallback logic that reverts to the previous approach, assuming the first name after the repository as the branch name.",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/131/comments",
    "author": "gowthamkishore3799",
    "comments": [
      {
        "user": "filipchristiansen",
        "created_at": "2025-01-14T07:32:41Z",
        "body": "Hi @gowthamkishore3799 \r\n\r\nThanks for the changes! Could you please run the following command locally to ensure all `pre-commit` hooks are installed and executed correctly?\r\n\r\n```bash\r\npre-commit install\r\n```\r\n\r\nAfter that, amend your last commit to trigger the hooks:\r\n\r\n```bash\r\ngit commit --amend --no-edit\r\n```\r\n\r\nFinally, push the changes with:\r\n\r\n```bash\r\ngit push --force-with-lease\r\n```\r\n\r\nThis ensures that all necessary checks and formatting are applied. Let me know if you run into any issues! 😊"
      },
      {
        "user": "gowthamkishore3799",
        "created_at": "2025-01-14T08:38:14Z",
        "body": "Thanks for the comments @filipchristiansen, changes have been incorporated"
      }
    ]
  },
  {
    "number": 121,
    "title": "Add test for non-existent file extension pattern (*.qwerty)",
    "created_at": "2025-01-11T19:44:27Z",
    "closed_at": "2025-01-12T07:34:21Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/121",
    "body": "# Old version:\r\nTest that when using a pattern for a non-existent file extension `*.qwerty`,\r\nno files are processed despite other valid files being present in the directory.\r\n\r\n# New version:\r\nTest that when using a pattern for a non-existent file extension `*.qwerty`,\r\nno files are matched or included in the result, but the directory structure\r\ninformation is still captured.\r\n\r\nThis test verifies:\r\n1. The scan completes without errors\r\n2. No files are matched with the non-existent extension\r\n3. Directory structure is still captured but empty since no files match\r\n4. File information is present but content is ignored due to no matches",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/121/comments",
    "author": "RyanL2004",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2025-01-12T07:34:28Z",
        "body": "Thank you very much, merged!"
      }
    ]
  },
  {
    "number": 108,
    "title": "feature: add branch option to ingest and CLI for repository cloning",
    "created_at": "2025-01-07T00:35:42Z",
    "closed_at": "2025-01-24T10:51:26Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/108",
    "body": null,
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/108/comments",
    "author": "javierlinked",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2025-01-21T02:56:04Z",
        "body": "@javierlinked Hi and thank you for your PR\r\n\r\nThere has been some refactor changes that made some conflicts, since you opened this PR as a draft I wanted to know if you whished to continue working on this feature of if I should take it from here?\r\n\r\nI think this feature would be nice to have, I'm not sure it needs to show in the webUI for now (until we have an \"advanced options\" tab) but it's clearly a good one for the CLI\r\n\r\n\r\n"
      },
      {
        "user": "javierlinked",
        "created_at": "2025-01-23T13:15:46Z",
        "body": "@cyclotruc I've been out from the project for a week and base changed much and fast, which is good! :D Also It seems that the scope of this PR was a bit big for me, as I'm new. I will create a new one, only for the CLI. Then remove this branch."
      }
    ]
  },
  {
    "number": 102,
    "title": "chore: add dependabot",
    "created_at": "2025-01-04T05:32:39Z",
    "closed_at": "2025-01-08T23:00:48Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/102",
    "body": null,
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/102/comments",
    "author": "hudsonbrendon",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2025-01-04T07:46:10Z",
        "body": "@hudsonbrendon Thank you that is a good idea, I'm just curious as to why those specific pytest versions are ignored"
      }
    ]
  },
  {
    "number": 99,
    "title": "Clarify project name / capitalization",
    "created_at": "2025-01-03T11:46:03Z",
    "closed_at": "2025-01-07T07:55:28Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/issues/99",
    "body": "Should it be \"Git ingest\", \"GitIngest\", \"Gitingest\", or something else? (These specific instances appear in the website's `<title>` tag, the README title, and the \"Contributing to Gitingest\" section of the README, respectively.)",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/99/comments",
    "author": "waldyrious",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2025-01-04T07:52:36Z",
        "body": "I think the official name should be `Gitingest` with lowercase `i` \r\nBut I don't mind when it's written otherwise like `Git ingest` in two words\r\n\r\nAs for the terminology: \r\nThe action of analyzing a repo is called \"ingest\" \r\nBut the text that comes out is a \"digest\"\r\n\r\nBut, as a non native english-speaker, I'm happy to change my mind if someone thinks something else is more appropriate"
      }
    ]
  },
  {
    "number": 98,
    "title": "feat: Add URL parameters for shareable links",
    "created_at": "2025-01-02T19:07:41Z",
    "closed_at": "2025-01-07T09:39:33Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/98",
    "body": "This PR adds functionality for shareable links by implementing URL parameters. \r\n\r\n## Changes\r\n\r\nAdded support for URL parameters to capture repository links - Implemented handling for include/exclude pattern parameters - This enables users to share specific repository analysis configurations via URL \r\n\r\n## Benefits\r\n\r\nUsers can now share direct links to specific repository analyses - Include/exclude patterns are preserved in the shared URLs - Improves collaboration by allowing users to share exact search configurations \r\n\r\n## Testing The functionality can be tested by: \r\n1. Setting repository and patterns in the UI \r\n2. Using the share link feature \r\n3. Verifying the shared URL contains all parameters \r\n4. Opening the shared URL in a new session to confirm parameters are applied",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/98/comments",
    "author": "johnlindquist",
    "comments": [
      {
        "user": "johnlindquist",
        "created_at": "2025-01-02T19:09:33Z",
        "body": "fyi, this was all done using AI Agents in Cursor. I needed this for myself, so I'm just running it locally. I thought I'd share the idea, so I just had the agent create this PR from the CLI too. I haven't really reviewed/etc any of the code since it's working for me, just wanted to share the idea/potential implementation more than create a proper PR."
      },
      {
        "user": "cyclotruc",
        "created_at": "2025-01-02T20:33:38Z",
        "body": "@johnlindquist Very interesting feature idea, thank you!\r\n\r\nThis is definitly a good idea that could help us towards caching of popular repos/often requested\r\n\r\nI'm going to dig into your changes to see what we can do with it"
      },
      {
        "user": "cyclotruc",
        "created_at": "2025-01-07T09:39:33Z",
        "body": "I'm closing this since it will be addressed with the API implementation\r\n\r\nthanks for your input!"
      }
    ]
  },
  {
    "number": 94,
    "title": "fix: http error",
    "created_at": "2025-01-01T13:48:43Z",
    "closed_at": "2025-01-02T04:31:58Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/94",
    "body": "Closes #92 \r\n\r\nFairly simple fix. Should deal with the problem. \r\nTested it locally and it works.\r\n\r\ncc @cyclotruc ",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/94/comments",
    "author": "joydeep049",
    "comments": [
      {
        "user": "filipchristiansen",
        "created_at": "2025-01-01T19:17:33Z",
        "body": "Could you add a test or two?"
      },
      {
        "user": "cyclotruc",
        "created_at": "2025-01-02T04:32:02Z",
        "body": "Merged! Thank you @joydeep049 "
      },
      {
        "user": "joydeep049",
        "created_at": "2025-01-02T04:34:26Z",
        "body": "Thank you @cyclotruc \r\nActually I wanted to discuss something, could you please check discord at your convenience\r\n\r\nBest"
      }
    ]
  },
  {
    "number": 93,
    "title": "feat: Add intelligent code repository analysis tool",
    "created_at": "2025-01-01T12:00:42Z",
    "closed_at": "2025-01-09T23:09:18Z",
    "labels": [
      "changes requested"
    ],
    "url": "https://github.com/cyclotruc/gitingest/pull/93",
    "body": "1. 添加配置文件管理系统\r\n2. 添加智能分析工具\r\n3. 优化输出路径管理",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/93/comments",
    "author": "clark874",
    "comments": [
      {
        "user": "filipchristiansen",
        "created_at": "2025-01-01T17:54:34Z",
        "body": "### Add intelligent code repository analysis tool\r\n\r\n1. Add configuration file management system\r\n2. Add intelligent analysis tool\r\n3. Optimize output path management\r\n\r\n(English)"
      },
      {
        "user": "cyclotruc",
        "created_at": "2025-01-09T23:09:18Z",
        "body": "@clark874 I'm closing this for now but if you ever want to pursue on this I'd be happy to open it again"
      }
    ]
  },
  {
    "number": 82,
    "title": "test: added unit tests for clone.py",
    "created_at": "2024-12-30T17:25:47Z",
    "closed_at": "2024-12-31T06:41:46Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/82",
    "body": "Part of #55 \r\n\r\nAdded Some tests for clone.py\r\n1. Invalid URL Check\r\n2. Invalid Local Path Check\r\n3. Clone with Custom branch \r\n4. Git command failure check\r\n5. Default Shallow Clone check\r\n\r\ncc @cyclotruc ",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/82/comments",
    "author": "joydeep049",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2024-12-31T06:42:06Z",
        "body": "@joydeep049 Merged, thank you very much!"
      }
    ]
  },
  {
    "number": 81,
    "title": "test: added unit test for parse_query",
    "created_at": "2024-12-30T17:13:23Z",
    "closed_at": "2024-12-31T07:35:03Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/81",
    "body": "Part of #55\r\nAdded Some more unit tests for `parse_query.py`\r\n\r\ncc @cyclotruc ",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/81/comments",
    "author": "joydeep049",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2024-12-31T06:53:05Z",
        "body": "@joydeep049 There's an issue currently with some tests failing on Windows\r\n\r\nSince Gitingest doesn't fully support Windows yet I guess the temporary workaround would be to disable Windows tests for now\r\nI'll think about it and come back to you shortly"
      },
      {
        "user": "joydeep049",
        "created_at": "2024-12-31T06:57:37Z",
        "body": "Should I make a quick PR to disable the windows tests?\r\n"
      },
      {
        "user": "cyclotruc",
        "created_at": "2024-12-31T06:59:13Z",
        "body": "Absolutely thank you"
      },
      {
        "user": "cyclotruc",
        "created_at": "2024-12-31T07:35:20Z",
        "body": "@joydeep049 Merged! Thank you"
      }
    ]
  },
  {
    "number": 80,
    "title": "feat: add support for reading PDF files using pypdf",
    "created_at": "2024-12-30T15:29:58Z",
    "closed_at": "2025-01-13T04:24:31Z",
    "labels": [
      "changes requested"
    ],
    "url": "https://github.com/cyclotruc/gitingest/pull/80",
    "body": "This PR adds functionality to ingest and process PDF files in the repository. It introduces the following changes:\r\n\r\n    Enhancements:\r\n        Added _is_pdf_file to detect .pdf files.\r\n        Implemented _read_pdf_content for extracting text using PyPDF2.\r\n        Updated _read_file_content to call _read_pdf_content for .pdf files.\r\n    Dependencies:\r\n        Updated requirements.txt to include PyPDF2.\r\n   \r\n\r\nPlease let me know if further changes are required!\r\n\r\nCloses #74 ",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/80/comments",
    "author": "Vyaas99",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2024-12-30T18:22:28Z",
        "body": "Thank you so much!\r\nI'll review and test ASAP "
      },
      {
        "user": "joydeep049",
        "created_at": "2025-01-02T14:37:42Z",
        "body": "Hello @Vyaas99,\r\nCould you mention the related issue which you are solving, so that it can auto-merge.\r\nIt would be convenient if the linked pull requests are visible in the issues tab\r\n\r\nThanx!"
      },
      {
        "user": "Vyaas99",
        "created_at": "2025-01-02T16:17:17Z",
        "body": "@joydeep049, thanks for informing me about this. I have linked the pull request to the issue now.\r\n\r\n@cyclotruc, I have written separate functions to check for and read PDF files because more work can be done on it apart from just extracting text if the need arises. I have removed .pdf from ignore_patterns.py as well and ran the pre-commit hooks."
      },
      {
        "user": "cyclotruc",
        "created_at": "2025-01-02T16:48:13Z",
        "body": "> Hello @Vyaas99, Could you mention the related issue which you are solving, so that it can auto-merge. It would be convenient if the linked pull requests are visible in the issues tab\r\n> \r\n> Thanx!\r\n\r\nI didn't know about that thank you for the idea!"
      },
      {
        "user": "joydeep049",
        "created_at": "2025-01-02T16:59:24Z",
        "body": "> > Hello @Vyaas99, Could you mention the related issue which you are solving, so that it can auto-merge. It would be convenient if the linked pull requests are visible in the issues tab\r\n> > Thanx!\r\n> \r\n> I didn't know about that thank you for the idea!\r\n\r\n@cyclotruc I had some more ideas to make the commit structure better, we can discuss about it on discord or I can open a separate issue for discussion."
      },
      {
        "user": "Vyaas99",
        "created_at": "2025-01-02T17:23:10Z",
        "body": "@joydeep049, sure, we can discuss on discord. My username is werwet10."
      },
      {
        "user": "joydeep049",
        "created_at": "2025-01-02T17:45:42Z",
        "body": "> @joydeep049, sure, we can discuss on discord. My username is werwet10.\r\n\r\nOh, I thought I could discuss it with @cyclotruc first and then file an issue"
      },
      {
        "user": "Vyaas99",
        "created_at": "2025-01-02T18:44:17Z",
        "body": "@joydeep049, oh okay. You didn't tag in your original comment and I misunderstood."
      },
      {
        "user": "joydeep049",
        "created_at": "2025-01-02T18:46:46Z",
        "body": "> @joydeep049, oh okay. You didn't tag in your original comment and I misunderstood.\r\n\r\nYeah, I realised it later. My mistake!"
      },
      {
        "user": "cyclotruc",
        "created_at": "2025-01-12T07:36:05Z",
        "body": "@Vyaas99 Do you wish to continue carry on this work? \r\nElse I might archive this until someone has time to make a working implementation of this feature"
      },
      {
        "user": "Vyaas99",
        "created_at": "2025-01-12T17:21:43Z",
        "body": "Sorry, I was preparing for my upcoming interviews and forgot about this. I will be busy for atleast a month or two with interviews but I intend to get back to this after that. So, if you still wish to archive this and have me create a fresh pull request some other time, feel free to do so."
      },
      {
        "user": "cyclotruc",
        "created_at": "2025-01-13T04:24:31Z",
        "body": "@Vyaas99 Thank your for taking the time to answer!\r\n\r\nIt's fine, no rush here\r\nI'll close this Pr for now and you can come back to this anytime you want in the future!\r\nI don't plan on implementing this myself unless it becomes heavily requested, so you can take your time\r\n\r\nGood luck for your interviews!"
      }
    ]
  },
  {
    "number": 73,
    "title": "test: Unit tests for clone() and parse_query()",
    "created_at": "2024-12-29T17:44:35Z",
    "closed_at": "2024-12-30T13:42:08Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/73",
    "body": "1. Changes to `clone.py` : try-except block added for `TimeoutError`\r\n\r\n2. Changes to `test_clone.py` and `test_parse_query.py`: Added some more tests.\r\n\r\nFurthermore, as I observed that we were lacking in maintaining code quality, I ran it through some linters like `flake8` and `black`, which helped organise the files further. I think we should consider adding linters like `flake8`, `black`, `pyupgrade`, `mypy` and `interrogate` in our CI.\r\n\r\ncc @cyclotruc ",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/73/comments",
    "author": "joydeep049",
    "comments": [
      {
        "user": "filipchristiansen",
        "created_at": "2024-12-29T22:33:04Z",
        "body": "> 1. Changes to `clone.py` : try-except block added for `TimeoutError`\r\n> 2. Changes to `test_clone.py` and `test_parse_query.py`: Added some more tests.\r\n> \r\n> Furthermore, as I observed that we were lacking in maintaining code quality, I ran it through some linters like `flake8` and `black`, which helped organise the files further. I think we should consider adding linters like `flake8`, `black`, `pyupgrade`, `mypy` and `interrogate` in our CI.\r\n> \r\n> cc @cyclotruc\r\n\r\nRegarding code quality, I've recently started assisting @cyclotruc in this area. I have already added several linters, including `black`, `pyupgrade`, `pylint`, `pycln`, `isort`, and `absolufy-imports`, via `pre-commit hooks`, and these have been integrated with our CI pipeline. I agree with you on the importance of maintaining strong code quality and test coverage—it’s an ongoing process. I also plan to add `darglint` and have recently included `markdownlint` and `djLint`.\r\n\r\nAnd I’m sure I speak also for @cyclotruc when I say that any contributions or assistance in this area would be much appreciated."
      },
      {
        "user": "filipchristiansen",
        "created_at": "2024-12-29T22:37:52Z",
        "body": "On a separate note, it looks like you need to rebase upon `main`."
      },
      {
        "user": "joydeep049",
        "created_at": "2024-12-30T13:42:08Z",
        "body": "I'm going to close this PR because we have a lot of issues with versions. And re-open a fresh new one so that the working tree isnt as messed up"
      }
    ]
  },
  {
    "number": 58,
    "title": "reducing few lines",
    "created_at": "2024-12-26T10:05:09Z",
    "closed_at": "2024-12-27T22:38:55Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/58",
    "body": null,
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/58/comments",
    "author": "codejay12",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2024-12-26T15:19:39Z",
        "body": "Hello, thank you for the PR\r\n\r\nTo be honest I don't know about click2, could you elaborate on the changes you made?"
      },
      {
        "user": "cyclotruc",
        "created_at": "2024-12-27T22:38:55Z",
        "body": "@codejay12 I'm closing this Pr for now as it is not clear what it aims to do but we can reopen it later if you want to work on it"
      }
    ]
  },
  {
    "number": 55,
    "title": "Improve unit tests",
    "created_at": "2024-12-24T23:13:16Z",
    "closed_at": "2025-01-24T14:37:52Z",
    "labels": [
      "help wanted",
      "good first issue",
      "planned"
    ],
    "url": "https://github.com/cyclotruc/gitingest/issues/55",
    "body": "The global coverage of the current codebase is still very flaky and some tests might not be the most relevant.\r\nMost of them are AI generated and I must confess my light experience on the matter, but I strongly believe in the benefits of unit tests.\r\n\r\nSo I'm calling for help, if any seasoned TDD developer can provide guidance or even contribute to improve the testing on this project, it would greatly help with the stability and the speed at which we can improve this project in the near future\r\n\r\nThanks in advance",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/55/comments",
    "author": "cyclotruc",
    "comments": [
      {
        "user": "joydeep049",
        "created_at": "2024-12-26T06:13:30Z",
        "body": "Can I look into this?\r\n"
      },
      {
        "user": "cyclotruc",
        "created_at": "2024-12-26T06:27:13Z",
        "body": "Sure please do!\r\n"
      },
      {
        "user": "cyclotruc",
        "created_at": "2025-01-24T14:37:52Z",
        "body": "closing this as the most urgent part of this issue has been taken care of, it's now an ongoing process of continuous improvements of the current tests"
      }
    ]
  },
  {
    "number": 53,
    "title": "Add RAG-based chatbot for querying ingested data",
    "created_at": "2024-12-24T21:49:15Z",
    "closed_at": "2024-12-31T08:51:46Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/53",
    "body": "Related to #48\n\nIntegrate a RAG-based chatbot for querying ingested GitHub repository data.\n\n* **Backend Changes**:\n  - Add `src/gitingest/embedding.py` to handle vectorization of repository content.\n  - Add `src/gitingest/rag_chatbot.py` to manage retrieval and generation logic.\n  - Add new API endpoints in `src/routers/chatbot.py` for chatbot communication.\n\n* **Frontend Updates**:\n  - Update `src/templates/index.jinja` and `src/templates/github.jinja` to include a chatbot UI with input and response display elements.\n\n* **Dependencies**:\n  - Update `requirements.txt` to include `sentence-transformers`, `openai`, `langchain`, and `faiss-cpu`.\n\n* **Testing**:\n  - Add test cases in `src/gitingest/tests/test_embedding.py` to validate embedding generation and storage.\n  - Add test cases in `src/gitingest/tests/test_rag_chatbot.py` to validate retrieval accuracy and response quality.\n  - Add test cases in `src/gitingest/tests/test_chatbot_endpoints.py` to validate API endpoint functionality.\n\n",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/53/comments",
    "author": "vishwamartur",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2024-12-24T22:13:05Z",
        "body": "Wow that was fast, very exciting thank you\r\n\r\nUnfortunately from my first tests sending prompts such as \"only docs\" or \"python files please\" didn't seem to change anything to the result,\r\nCould you please provide steps to try out and see a noticeable difference? \r\n\r\nThanks again, I believe quick drafts are a good way to iterate\r\n"
      }
    ]
  },
  {
    "number": 51,
    "title": "replacing github.com's \"hub\" by \"injest\" does not work",
    "created_at": "2024-12-24T14:16:14Z",
    "closed_at": "2024-12-24T17:05:10Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/issues/51",
    "body": "All my browsers said \"Cann't find the Server\". ",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/51/comments",
    "author": "kalufinnle",
    "comments": [
      {
        "user": "DevloperAmanSingh",
        "created_at": "2024-12-24T14:26:21Z",
        "body": "its `ingest`\r\n@kalufinnle "
      },
      {
        "user": "cyclotruc",
        "created_at": "2024-12-24T17:05:10Z",
        "body": "Yes it's ingest with a G\r\nthank you @DevloperAmanSingh \r\nclosing this\r\n"
      }
    ]
  },
  {
    "number": 49,
    "title": "Add support for local repositories",
    "created_at": "2024-12-24T13:25:49Z",
    "closed_at": "2024-12-28T07:43:27Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/49",
    "body": "Related to #30\n\nAdd support for local directories in the UI and backend.\n\n* **UI Changes:**\n  - Add a file input field for selecting local directories in `src/templates/components/github_form.jinja`.\n  - Add checkboxes to select between \"local directory\" and \"remote repo\" options in `src/templates/components/github_form.jinja`.\n\n* **Backend Changes:**\n  - Update `ingest` function in `src/gitingest/ingest.py` to handle local directories by checking if the input is a directory path.\n  - Modify `parse_query` function in `src/gitingest/parse_query.py` to parse local directory paths and set appropriate query parameters.\n  - Ensure the `scan_directory` function in `src/gitingest/ingest_from_query.py` includes safety limits such as `MAX_DIRECTORY_DEPTH`, `MAX_FILES`, and `MAX_TOTAL_SIZE_BYTES` to prevent excessive processing.\n\n* **Documentation:**\n  - Update `README.md` to include instructions for using local directories with the CLI and Python package.\n\n* **User Feedback:**\n  - Provide feedback to the user if the directory exceeds the safety limits in `src/templates/components/result.jinja`.\n\n",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/49/comments",
    "author": "vishwamartur",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2024-12-24T17:19:25Z",
        "body": "Very interesting work, thank you!\r\nI'll take some time to look more into it, but I'm willing to merge this feature at some point.\r\n\r\nOne thing I can tell you already:\r\nSince I host gitingest.com straight from this repo we need at least an option to disable this feature from and env_var and maybe make it enabled by default\r\n\r\nBut if you don't know/don't have time to add this just tell me I can do it myself"
      },
      {
        "user": "vishwamartur",
        "created_at": "2024-12-24T17:23:15Z",
        "body": "@cyclotruc Absolutely please take the task from here. "
      },
      {
        "user": "cyclotruc",
        "created_at": "2024-12-28T07:43:27Z",
        "body": "> @cyclotruc Absolutely please take the task from here.\r\n\r\nTo be honest I think I'm going to close this branch from now\r\nThere's been many refactors in the code and I since I have to finish this it's probably going to be easier to start from scratch\r\n\r\nIf you want you can have another try at it on the updated codebase "
      }
    ]
  },
  {
    "number": 48,
    "title": "Add a RAG based chatbot that helps with ingesting",
    "created_at": "2024-12-24T11:35:05Z",
    "closed_at": "2025-01-08T23:26:10Z",
    "labels": [
      "suggestion"
    ],
    "url": "https://github.com/cyclotruc/gitingest/issues/48",
    "body": "# Proposal: Integration of a Retrieval-Augmented Generation (RAG) Chatbot\r\n\r\n## Overview\r\n\r\nThis proposal outlines the integration of a Retrieval-Augmented Generation (RAG) chatbot into the `cyclotruc-gitingest` repository. The RAG-based chatbot will enhance the repository by providing intelligent query handling and contextual responses derived from ingested GitHub repositories.\r\n\r\n---\r\n\r\n## Problem Statement\r\n\r\nCurrently, the project processes and ingests GitHub repositories efficiently but lacks an interactive and intuitive system for querying ingested data. Users must rely on manual query processes via existing APIs or CLI commands. This limits the usability and accessibility of the tool, especially for non-technical users.\r\n\r\n---\r\n\r\n## Proposed Solution\r\n\r\nIntegrate a RAG-based chatbot that leverages the ingested repository data to:\r\n\r\n1. **Retrieve Contextual Data**: Utilize vector embeddings to fetch relevant content from ingested repositories.\r\n2. **Generate Informative Responses**: Combine retrieved information with a pre-trained language model (e.g., GPT) to produce coherent and contextual answers.\r\n3. **Provide Seamless Interaction**: Enable interaction via:\r\n   - **Web Interface**: Use existing Jinja templates (`index.jinja`, `github.jinja`) to create a chatbot interface.\r\n   - **API Endpoints**: Define new endpoints in `routers/` for chatbot communication.\r\n\r\n---\r\n\r\n## Technical Implementation\r\n\r\n### 1. Backend Changes\r\n\r\n- **Vector Database**: Add support for a vector database (e.g., FAISS, Pinecone) to store and query embeddings of ingested data.\r\n- **New Modules**:\r\n  - `gitingest/embedding.py`: Handle vectorization of repository content.\r\n  - `gitingest/rag_chatbot.py`: Manage retrieval and generation logic.\r\n- **API Integration**:\r\n  - Add routes in `routers/` to handle chatbot requests and responses.\r\n\r\n### 2. Frontend Updates\r\n\r\n- **Chat Interface**:\r\n  - Update `github.jinja` or `index.jinja` to include a chatbot UI.\r\n  - Use a WebSocket or REST API for real-time responses.\r\n- **Static Assets**:\r\n  - Add new JavaScript utilities to `static/js/utils.js` for chatbot interaction.\r\n\r\n### 3. Dependencies\r\n\r\nAdd libraries such as:\r\n- `sentence-transformers` or `openai` for embeddings.\r\n- `langchain` for retrieval-augmented generation pipelines.\r\n- `faiss-cpu` or `pinecone` for vector search.\r\n\r\n### 4. Testing\r\n\r\nInclude test cases in `gitingest/tests/` to validate:\r\n- Embedding generation and storage.\r\n- Retrieval accuracy and response quality.\r\n- API endpoint functionality.\r\n\r\n---\r\n\r\n## Benefits\r\n\r\n- **Enhanced Usability**: Allows users to query and explore repository data conversationally.\r\n- **Improved Accessibility**: Makes the tool approachable for non-technical users.\r\n- **Scalability**: Lays the foundation for future AI-driven features.\r\n\r\n---\r\n\r\n## Next Steps\r\n\r\nIf approved, I can begin drafting a detailed plan for implementation and provide a timeline for each milestone. I will also submit a pull request for initial integration tasks.\r\n\r\n---\r\n\r\n## How to Support\r\n\r\nPlease share your feedback on this proposal by commenting on this issue. Suggestions for additional features or improvements are welcome!\r\n",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/48/comments",
    "author": "HXMAN76",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2024-12-24T20:50:02Z",
        "body": "Very good Issue, thank you for taking the time to write this\r\n\r\nI think we should definitly pursue this idea but go there step by step\r\n\r\nI will open a new branch on this repo to host this dev work while still being able to update main\r\n\r\nBefore typing any code:\r\nI think it would be wise to discuss the features that we aim for and establish a clear vision of the steps to get there\r\nMaybe the first step should be a simple OpenAI/Anthropic api integration\r\nBefore moving on to more refined degrees of interaction\r\n\r\nAnyway, I will glaadly help you build this feature into Gitingest,\r\nFeel free to reach out so we can discuss this further (I prefer discord but I also sent you a Linkedin invite)"
      },
      {
        "user": "HXMAN76",
        "created_at": "2024-12-26T06:06:43Z",
        "body": "@cyclotruc  I couldn't find your Discord username. I am new to the whole open-source contribution thing, but your product idea is pretty good. It could use AI integrations to improve the interaction. Also, just calling ChatGPT API won't be effective, whereas creating an RAG model with ingested content + LLM will make this more flexible and accurate.\r\n\r\nNote: I am new to this but would love to learn and contribute to this project."
      },
      {
        "user": "poltronSuperstar",
        "created_at": "2024-12-26T08:01:33Z",
        "body": "Hi @HXMAN76 .\r\n\r\nI'm working on pretty much exactly that.\r\nCould you think of specific user stories (ie: What you would ask such a RAG Chat bot ?)"
      },
      {
        "user": "cyclotruc",
        "created_at": "2025-01-08T23:26:10Z",
        "body": "Closing this to clean up\r\nFor now gitingest will remain llm-free until it becomes hard to improve using classical programming\r\n\r\n@HXMAN76  you can find me on discord @yasbaltrine "
      }
    ]
  },
  {
    "number": 40,
    "title": "Bug: Branch names with \"/\" in the branch name are not cloned correctly",
    "created_at": "2024-12-21T15:29:45Z",
    "closed_at": "2024-12-28T07:42:04Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/cyclotruc/gitingest/issues/40",
    "body": "The fix involves changing parsing_query.py",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/40/comments",
    "author": "cyclotruc",
    "comments": [
      {
        "user": "harshit-wadhwani",
        "created_at": "2024-12-24T14:33:05Z",
        "body": "can I try to fix this ? @cyclotruc "
      },
      {
        "user": "cyclotruc",
        "created_at": "2024-12-28T07:42:04Z",
        "body": "Closing this, fix is merged 😄 "
      }
    ]
  },
  {
    "number": 39,
    "title": "[ENHANCE] Improve download endpoint robustness and security",
    "created_at": "2024-12-21T05:10:34Z",
    "closed_at": "2024-12-28T00:06:01Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/39",
    "body": "Key improvements:\r\n- Add 50MB file size limit to prevent memory issues\r\n- Implement content validation for empty files\r\n- Add comprehensive error handling with specific HTTP codes\r\n- Add detailed logging throughout for better observability\r\n- Include security checks for directory access\r\n- Add Content-Length header for better client handling\r\n\r\nTechnical details:\r\n- Added validate_file_content() function for content checks\r\n- Enhanced error handling for FileNotFound, Permission, and general errors\r\n- Added comprehensive documentation and security notes\r\n- Improved logging with specific error contexts\r\n\r\nSecurity improvements:\r\n- Directory existence validation before access\r\n- File size validation before memory load\r\n- Content validation before sending\r\n- Prevention of information leakage in error responses",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/39/comments",
    "author": "karawalla",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2024-12-24T02:34:02Z",
        "body": "Hello i noticed your branch just now, this sounds like a good idea, any reason why you deleted it?"
      },
      {
        "user": "cyclotruc",
        "created_at": "2024-12-28T00:06:01Z",
        "body": "@karawalla I'm closing this for now but let me know if you want us to reopen this to finish this work"
      }
    ]
  },
  {
    "number": 38,
    "title": "feat(cli): Add Global CLI Tool for Local Directory Analysis",
    "created_at": "2024-12-19T15:46:53Z",
    "closed_at": "2024-12-20T04:18:22Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/38",
    "body": "## Description\r\nThis PR adds a command-line interface to gitingest, allowing users to analyze local directories without needing to run the web server. The CLI tool can be installed globally and provides similar functionality to the web interface.\r\n\r\n## Features\r\n- Global command-line tool installation via `pip install -e .`\r\n- Analyze any local directory with `gitingest /path/to/directory`\r\n- Configurable output location with `-o` flag\r\n- Support for custom file size limits with `--max-size`\r\n- Additional ignore patterns via `-i` flag\r\n- Maintains compatibility with web app's ingest functionality\r\n- Automatic file type detection and text content extraction\r\n- Directory tree visualization\r\n- File content summary with statistics\r\n\r\n## Usage Examples\r\n\r\n```bash\r\n# Basic usage - outputs to <dirname>.txt\r\ngitingest ~/projects/myproject\r\n\r\n# Custom output location\r\ngitingest ~/projects/myproject -o ~/Desktop/analysis.txt\r\n\r\n# Ignore specific patterns\r\ngitingest ~/projects/myproject -i \"*.csv\" -i \"*.json\"\r\n\r\n# Set maximum file size (e.g., 5MB)\r\ngitingest ~/projects/myproject -s 5000000\r\n```\r\n\r\n## Technical Details\r\n- Uses Click for CLI argument parsing and help documentation\r\n- Shares core functionality with web app through `ingest.py`\r\n- Maintains same ignore patterns and file type detection\r\n- Preserves token counting and size limit features\r\n\r\n## Documentation\r\n- Added CLI usage section to README.md\r\n- Included installation instructions\r\n- Documented all available options\r\n- Added usage examples\r\n\r\n## Testing\r\nThe CLI has been tested with:\r\n- Different directory sizes and structures\r\n- Various file types\r\n- Custom ignore patterns\r\n- Different output locations\r\n- Size limit enforcement",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/38/comments",
    "author": "justinlevi",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2024-12-19T17:15:46Z",
        "body": "Wonderful! very valuable contribution, I'll run my own tests asap, hoping to merge this very soon "
      }
    ]
  },
  {
    "number": 37,
    "title": "Feature Request: Make the URL trick compatible with Gitlab",
    "created_at": "2024-12-19T12:18:26Z",
    "closed_at": "2025-01-19T14:52:33Z",
    "labels": [
      "suggestion"
    ],
    "url": "https://github.com/cyclotruc/gitingest/issues/37",
    "body": "It seems as though Gitlab is not compatible despite being a hub for git repositories.",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/37/comments",
    "author": "0xSero",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2024-12-19T14:54:32Z",
        "body": "So currently the code doesn't handle the \"url trick\" since I kind of need to know where you're coming from \r\nThere's only two ways I could go around this:\r\n- Find a semi-reliable way to get the \"referer\" url \r\n- Test a list of common github alternatives, but that would mean deciding for each new entry in the list\r\n\r\n\r\nHave you tried copy/pasting the url in the form yourself?\r\n\r\n"
      },
      {
        "user": "filipchristiansen",
        "created_at": "2025-01-19T14:52:33Z",
        "body": "@0xSero This has been addressed."
      }
    ]
  },
  {
    "number": 36,
    "title": "added few tags for better seo",
    "created_at": "2024-12-19T08:26:32Z",
    "closed_at": "2024-12-20T04:19:24Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/36",
    "body": "added meta tags for better seo",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/36/comments",
    "author": "safvanck",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2024-12-19T14:55:31Z",
        "body": "Thank you!! Much needed; i'm going to look into to merge it ASAP"
      }
    ]
  },
  {
    "number": 35,
    "title": "Created CODE_OF_CONDUCT.md from GitHub templates",
    "created_at": "2024-12-19T07:47:16Z",
    "closed_at": "2024-12-20T04:19:36Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/35",
    "body": "Created `CODE_OF_CONDUCT.md` from GitHub templates",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/35/comments",
    "author": "safvanck",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2024-12-19T14:56:01Z",
        "body": "Good point; marked this as planned"
      }
    ]
  },
  {
    "number": 31,
    "title": "feat: Make TrustedHostMiddleware configurable via ALLOWED_HOSTS env var",
    "created_at": "2024-12-16T18:54:35Z",
    "closed_at": "2024-12-16T20:41:20Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/31",
    "body": "- Added support for configuring allowed hosts dynamically using the ALLOWED_HOSTS environment variable.\r\n- Fallback to a default list of allowed hosts: [\"gitingest.com\", \"*.gitingest.com\", \"gitdigest.dev\", \"localhost\"]\r\n- Ensures compatibility with custom deployments while maintaining existing defaults.\r\n- Updated src/main.py to implement the changes.\r\n- Updates README.md on usage",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/31/comments",
    "author": "joshuajcoronado",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2024-12-16T20:35:49Z",
        "body": "Perfect, thank you very much!"
      }
    ]
  },
  {
    "number": 30,
    "title": "Feature Request: Allow local repositories",
    "created_at": "2024-12-16T10:42:28Z",
    "closed_at": "2025-01-24T23:32:27Z",
    "labels": [
      "suggestion"
    ],
    "url": "https://github.com/cyclotruc/gitingest/issues/30",
    "body": "In addition to the GitHub Public repo URL, add the support to select the local repositories folder from the UI.\r\nAs the server side reads the repo currently, it is probably easier to read if the repo is already on the disk.",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/30/comments",
    "author": "kunalshah",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2024-12-16T14:55:09Z",
        "body": "Yes! I'm planning to add this\r\nI'm currently thinking about how to do the upload properly\r\n\r\nI imagine: \r\n- drop the code-base folder/archive anywhere on the homepage to ingest\r\n\r\nIf anyone has any idea while this is still in the brainstorming phase"
      },
      {
        "user": "kunalshah",
        "created_at": "2024-12-21T09:23:44Z",
        "body": "How about adding checkboxes \"local directory\" and \"remote repo\"?\r\nand for the repote repo, user would continue to paste the repote repo path (as they are doing today)\r\nwith the local directory, user would paste the directory full path. On the server side, if the directory exists, the contents of the directory would be ingested.\r\n\r\nNote that local directory doesn't have to be a git repo."
      },
      {
        "user": "cyclotruc",
        "created_at": "2025-01-24T23:32:27Z",
        "body": "This use case is now possible through the CLI version of gitingest, so I'm closing this Issue"
      }
    ]
  },
  {
    "number": 15,
    "title": "Allow local repo",
    "created_at": "2024-12-11T14:44:44Z",
    "closed_at": "2025-01-06T23:09:36Z",
    "labels": [
      "planned"
    ],
    "url": "https://github.com/cyclotruc/gitingest/issues/15",
    "body": null,
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/15/comments",
    "author": "rockmandash",
    "comments": [
      {
        "user": "feather812002",
        "created_at": "2024-12-11T22:05:42Z",
        "body": "Yeah, some time , we need the local repo work with gitingest.\r\nThis is good idea."
      },
      {
        "user": "cyclotruc",
        "created_at": "2025-01-06T23:09:36Z",
        "body": "I'm closing this since the PIP package was since released:\r\nYou can scan your local repo with:\r\n```bash\r\npip install gitingest\r\n\r\ngitingest  .\r\n```\r\n"
      }
    ]
  },
  {
    "number": 10,
    "title": "Create SECURITY.md",
    "created_at": "2024-12-10T08:24:41Z",
    "closed_at": "2024-12-10T14:51:35Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/10",
    "body": "Added a security file describing a proper way to report vulnerabilities privately to the maintainer.",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/10/comments",
    "author": "lore-corrias",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2024-12-10T14:51:27Z",
        "body": "thank you, much needed!\r\nMerging this"
      }
    ]
  },
  {
    "number": 9,
    "title": "Add support for running the application with docker",
    "created_at": "2024-12-10T08:11:34Z",
    "closed_at": "2024-12-10T14:56:16Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/9",
    "body": null,
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/9/comments",
    "author": "lore-corrias",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2024-12-10T14:55:24Z",
        "body": "Very much needed as well, merging this!"
      }
    ]
  },
  {
    "number": 8,
    "title": "added click support for local repo ingestion",
    "created_at": "2024-12-09T22:58:08Z",
    "closed_at": "2024-12-11T00:29:33Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/8",
    "body": "It would be nice to have the ability to run the ingestion against a local repository as a command-line script so offering this to the main repo.",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/8/comments",
    "author": "heiho1",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2024-12-10T00:14:46Z",
        "body": "Thank you very much for that contribution, I'll take a look in the details but I'm willing to merge this asap "
      },
      {
        "user": "heiho1",
        "created_at": "2024-12-10T03:33:28Z",
        "body": "For my client they have private repos so having a command line option lets them use the core functionality.  I hope others find it useful."
      },
      {
        "user": "heiho1",
        "created_at": "2024-12-10T05:10:03Z",
        "body": "Pushed a small change to make the cli more shell-script friendly."
      },
      {
        "user": "cyclotruc",
        "created_at": "2024-12-11T00:30:23Z",
        "body": "Finally had time to try this out, it's merged now, thank you for your contribution"
      }
    ]
  },
  {
    "number": 5,
    "title": "Allow filtering out useless paths and files",
    "created_at": "2024-12-06T00:57:04Z",
    "closed_at": "2024-12-16T01:31:39Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/issues/5",
    "body": "Currently it will also include `LISENCE`, `image`, `.git`, etc., which will use a lot of tokens. Although some people might have use for these files, so I think a list of checkboxes to ignore the files based on people's preference.",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/5/comments",
    "author": "FF0E",
    "comments": [
      {
        "user": "FF0E",
        "created_at": "2024-12-06T00:58:54Z",
        "body": "Just found out there is already a PR, so maybe add an option for user instead hard coded? and with custom regex filter?"
      },
      {
        "user": "cyclotruc",
        "created_at": "2024-12-06T09:26:45Z",
        "body": "I merged that PR for now and I'll make it configurable in the UI asap."
      },
      {
        "user": "cyclotruc",
        "created_at": "2024-12-16T01:31:39Z",
        "body": "It is now possible: fb25edff3fd96bdaa2178198460b13dbab047654"
      }
    ]
  },
  {
    "number": 2,
    "title": "docs: update README.md",
    "created_at": "2024-12-02T13:06:25Z",
    "closed_at": "2024-12-05T09:31:38Z",
    "labels": [],
    "url": "https://github.com/cyclotruc/gitingest/pull/2",
    "body": "github -> GitHub",
    "comments_url": "https://api.github.com/repos/cyclotruc/gitingest/issues/2/comments",
    "author": "eltociear",
    "comments": [
      {
        "user": "cyclotruc",
        "created_at": "2024-12-05T09:31:38Z",
        "body": "Hello\r\nThank you for your interest; but I'm afraid this is a little short to count as a real contribution. "
      }
    ]
  }
]