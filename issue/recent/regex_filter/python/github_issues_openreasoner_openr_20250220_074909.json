[
  {
    "number": 92,
    "title": "The current WeChat QR code appears to be invalid. Kindly provide an updated version for further communication. ",
    "created_at": "2024-12-25T15:57:38Z",
    "closed_at": "2025-01-17T13:12:40Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/openreasoner/openr/issues/92",
    "body": "### System Info\n\nNo\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example scripts\n- [ ] My own modified scripts\n\n### Tasks\n\n- [ ] An officially supported task in the codebase (such as scrips/, ...)\n- [ ] My own task or dataset (give details below)\n\n### Reproduction\n\n-\n\n### Expected behavior\n\n-",
    "comments_url": "https://api.github.com/repos/openreasoner/openr/issues/92/comments",
    "author": "baifanxxx",
    "comments": [
      {
        "user": "YanSong97",
        "created_at": "2025-01-17T13:12:40Z",
        "body": "Hi, thanks for your interest! The QR code has been updated."
      }
    ]
  },
  {
    "number": 70,
    "title": "tree.py文件的_expand_leaf_node()函数存在bug",
    "created_at": "2024-12-03T03:25:36Z",
    "closed_at": "2024-12-07T09:45:37Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/openreasoner/openr/issues/70",
    "body": "### System Info\r\n\r\nlinux-ubuntu\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example scripts\r\n- [ ] My own modified scripts\r\n\r\n### Tasks\r\n\r\n- [ ] An officially supported task in the codebase (such as scrips/, ...)\r\n- [ ] My own task or dataset (give details below)\r\n\r\n### Reproduction\r\n`for act, rs in zip(simulate_env.legal_actions, prms):\r\n    if len(simulate_env.action_history) + 1 != len(rs):\r\n        logger.warning(\r\n            \"PRM value length not match with action history. \\\r\n                len(prm)={}, len(act_hist)={} s:\\n {}\\n\\na: \\n{}\\nrs:{}\".format(\r\n                len(prms),\r\n                len(simulate_env.action_history),\r\n                text_state,\r\n                act,\r\n                rs,\r\n            )\r\n        )\r\n        # raise RuntimeError(\"Tokenizer problems\")\r\n        child_values.append(0.0)\r\n\r\n    if len(rs) == 0:\r\n        logger.warning(\r\n            \"Empty PRM value for: \\nState: \\n{} \\naction: \\n{}, will be set to 0.0\".format(\r\n                text_state, act\r\n            )\r\n        )\r\n        child_values.append(0.0)\r\n    else:\r\n        # prm-last\r\n        child_values.append(rs[-1])\r\n        # # prm-min\r\n        # child_values.append(min(rs))\r\n        # # prob-prm\r\n        # child_values.append(act['prob'])`\r\n\r\n   具体而言是这个代码，child_values的结果是是8个值，而非4个值，应该把最上面的child_values.append(0.0)删除\r\n\r\n### Expected behavior\r\n\r\n`for act, rs in zip(simulate_env.legal_actions, prms):\r\n    if len(simulate_env.action_history) + 1 != len(rs):\r\n        logger.warning(\r\n            \"PRM value length not match with action history. \\\r\n                len(prm)={}, len(act_hist)={} s:\\n {}\\n\\na: \\n{}\\nrs:{}\".format(\r\n                len(prms),\r\n                len(simulate_env.action_history),\r\n                text_state,\r\n                act,\r\n                rs,\r\n            )\r\n        )\r\n        # raise RuntimeError(\"Tokenizer problems\")\r\n\r\n    if len(rs) == 0:\r\n        logger.warning(\r\n            \"Empty PRM value for: \\nState: \\n{} \\naction: \\n{}, will be set to 0.0\".format(\r\n                text_state, act\r\n            )\r\n        )\r\n        child_values.append(0.0)\r\n    else:\r\n        # prm-last\r\n        child_values.append(rs[-1])\r\n        # # prm-min\r\n        # child_values.append(min(rs))\r\n        # # prob-prm\r\n        # child_values.append(act['prob'])`",
    "comments_url": "https://api.github.com/repos/openreasoner/openr/issues/70/comments",
    "author": "zhangyanbo2007",
    "comments": [
      {
        "user": "ziyuwan",
        "created_at": "2024-12-06T11:19:56Z",
        "body": "thanks for your suggestion, we will try to fix it"
      },
      {
        "user": "ziyuwan",
        "created_at": "2024-12-06T11:31:27Z",
        "body": "Hi @zhangyanbo2007 ,\r\nHow frequently does this happen? "
      }
    ]
  },
  {
    "number": 61,
    "title": "What's the difference between `openr/data`  and `openr/data/omegaPRM_v2`?",
    "created_at": "2024-11-22T04:04:55Z",
    "closed_at": "2024-12-03T03:21:19Z",
    "labels": [],
    "url": "https://github.com/openreasoner/openr/issues/61",
    "body": "What's the difference between `openr/data`  and `openr/data/omegaPRM_v2`?\r\n\r\nThose python codes both seem to be implementation of OmegaPRM, trying to construct a search tree upon a math problem with MCTS. But I could not find the descriptions of differences between in the README docs, I wonder what's the difference between `openr/data`  and `openr/data/omegaPRM_v2`, and which one is the more recommened implementation.",
    "comments_url": "https://api.github.com/repos/openreasoner/openr/issues/61/comments",
    "author": "ekonwang",
    "comments": [
      {
        "user": "iamlilAJ",
        "created_at": "2024-11-22T15:18:43Z",
        "body": "Hi,\r\n\r\nThe `openr/data` version is now deprecated and is no longer actively maintained. We recommend using `openr/data/omegaPRM_v2` for all new projects and for continued development."
      }
    ]
  },
  {
    "number": 54,
    "title": "Some possible errors in OmegaPRMv2 / omegaprm.py",
    "created_at": "2024-11-12T04:19:02Z",
    "closed_at": "2024-11-12T07:01:05Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/openreasoner/openr/issues/54",
    "body": "### System Info\n\nsame with repo\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example scripts\n- [ ] My own modified scripts\n\n### Tasks\n\n- [ ] An officially supported task in the codebase (such as scrips/, ...)\n- [ ] My own task or dataset (give details below)\n\n### Reproduction\n\nWhy there exists that in OmegaPRMv2 / omegaprm.py\r\n# Perform Monte Carlo estimation for s_new\r\nself.monte_carlo_estimation(s_new)\r\n\r\n# Perform Monte Carlo estimation for s_new\r\nself.monte_carlo_estimation(s_new)\r\n\r\nIt occurs two times, Is it supposed to occur only once?\r\n        \r\n        \n\n### Expected behavior\n\nWhy there exists that in OmegaPRMv2 / omegaprm.py\r\n# Perform Monte Carlo estimation for s_new\r\nself.monte_carlo_estimation(s_new)\r\n\r\n# Perform Monte Carlo estimation for s_new\r\nself.monte_carlo_estimation(s_new)\r\n\r\nIt occurs two times, Is it supposed to occur only once?\r\n        \r\n        ",
    "comments_url": "https://api.github.com/repos/openreasoner/openr/issues/54/comments",
    "author": "FanqingM",
    "comments": [
      {
        "user": "iamlilAJ",
        "created_at": "2024-11-12T04:40:17Z",
        "body": "Hi, \r\n\r\nThe duplication has been removed.\r\n\r\nThanks for your contribution!"
      }
    ]
  },
  {
    "number": 33,
    "title": "Implement rStar MCTS inference PR #30",
    "created_at": "2024-10-30T13:09:49Z",
    "closed_at": "2024-11-02T03:13:02Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/openreasoner/openr/pull/33",
    "body": "PR #30 \r\n\r\nMore testing is needed at the current stage, but feel free to have a try locally. :)",
    "comments_url": "https://api.github.com/repos/openreasoner/openr/issues/33/comments",
    "author": "YanSong97",
    "comments": [
      {
        "user": "windks",
        "created_at": "2024-12-19T10:29:37Z",
        "body": "这里的rStar是不是没有实现论文中的discriminate功能？"
      }
    ]
  },
  {
    "number": 24,
    "title": "[WIP] Implement vanila mcts",
    "created_at": "2024-10-22T02:18:25Z",
    "closed_at": "2024-10-24T14:18:22Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/openreasoner/openr/pull/24",
    "body": "Implementation of vanila MCTS, currently only support two kinds of rollout strategy, greedy_by_prm and random_by_lm_prior_prob",
    "comments_url": "https://api.github.com/repos/openreasoner/openr/issues/24/comments",
    "author": "ziyuwan",
    "comments": [
      {
        "user": "wphtrying",
        "created_at": "2024-10-22T12:16:13Z",
        "body": "When this MR is going to close, would like to try the new MCTS"
      },
      {
        "user": "ziyuwan",
        "created_at": "2024-10-23T03:39:37Z",
        "body": "> When this MR is going to close, would like to try the new MCTS\r\n\r\nHi!\r\nYou can use `bb9b884e0be38e0a99e56e5ee46816d7c0a5365d` currently. We still need some efforts to confirm the hyperparameters of MCTS and improve the code structure."
      }
    ]
  },
  {
    "number": 19,
    "title": "Unable to execute create_service_math_shepherd successfully",
    "created_at": "2024-10-18T09:09:53Z",
    "closed_at": "2024-11-01T02:34:14Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/openreasoner/openr/issues/19",
    "body": "I couldn't execute the following script successfully:\r\n```\r\nsh reason/llm_service/create_service_math_shepherd.sh\r\n```\r\nThe error message is as follows:\r\n```\r\n2024-10-18 17:05:54 | ERROR | stderr | \r\n2024-10-18 17:06:11 | INFO | model_worker | Register to controller\r\n2024-10-18 17:06:11 | INFO | stdout | <Response [503]>\r\n2024-10-18 17:06:11 | ERROR | stderr | Traceback (most recent call last):\r\n2024-10-18 17:06:11 | ERROR | stderr |   File \"/open_reasonser/lib/python3.10/runpy.py\", line 196, in _run_module_as_main\r\n2024-10-18 17:06:11 | ERROR | stderr |     return _run_code(code, main_globals, None,\r\n2024-10-18 17:06:11 | ERROR | stderr |   File \"/open_reasonser/lib/python3.10/runpy.py\", line 86, in _run_code\r\n2024-10-18 17:06:11 | ERROR | stderr |     exec(code, run_globals)\r\n2024-10-18 17:06:11 | ERROR | stderr |   File \"/openr/reason/llm_service/workers/reward_model_worker.py\", line 255, in <module>\r\n2024-10-18 17:06:11 | ERROR | stderr |     args, worker = create_model_worker()\r\n2024-10-18 17:06:11 | ERROR | stderr |   File \"/openr/reason/llm_service/workers/reward_model_worker.py\", line 227, in create_model_worker\r\n2024-10-18 17:06:11 | ERROR | stderr |     worker = ModelWorker(\r\n2024-10-18 17:06:11 | ERROR | stderr |   File \"/openr/reason/llm_service/workers/reward_model_worker.py\", line 109, in __init__\r\n2024-10-18 17:06:11 | ERROR | stderr |     self.init_heart_beat()\r\n2024-10-18 17:06:11 | ERROR | stderr |   File \"/openr/reason/llm_service/workers/base_model_worker.py\", line 79, in init_heart_beat\r\n2024-10-18 17:06:11 | ERROR | stderr |     self.register_to_controller()\r\n2024-10-18 17:06:11 | ERROR | stderr |   File \"/openr/reason/llm_service/workers/base_model_worker.py\", line 98, in register_to_controller\r\n2024-10-18 17:06:11 | ERROR | stderr |     assert r.status_code == 200\r\n2024-10-18 17:06:11 | ERROR | stderr | AssertionError\r\n```\r\n\r\nHow can I resolve this issue?",
    "comments_url": "https://api.github.com/repos/openreasoner/openr/issues/19/comments",
    "author": "rocky-lq",
    "comments": [
      {
        "user": "YanSong97",
        "created_at": "2024-10-18T11:19:01Z",
        "body": "Hi rocky, this seems relevant to #18 ."
      },
      {
        "user": "rocky-lq",
        "created_at": "2024-10-22T02:56:59Z",
        "body": "I am unable to run the following script:\r\n```\r\nsh reason/llm_service/create_service_math_shepherd.sh\r\n```\r\nI’m using 8 * A100 80G GPUs. I encounter the same error even after making the following adjustments:\r\n\r\n1. I’ve modified `POLICY_MODEL_NAME` and `VALUE_MODEL_NAME` to point to my local paths.\r\n2. I’ve installed `vllm=0.6.1.post2`.\r\n\r\nHowever, the issue persists. Could you please advise if there are any additional configurations needed or suggest any debugging steps?"
      },
      {
        "user": "ziyuwan",
        "created_at": "2024-10-22T07:21:48Z",
        "body": "> I am unable to run the following script:\r\n> \r\n> ```\r\n> sh reason/llm_service/create_service_math_shepherd.sh\r\n> ```\r\n> \r\n> I’m using 8 * A100 80G GPUs. I encounter the same error even after making the following adjustments:\r\n> \r\n> 1. I’ve modified `POLICY_MODEL_NAME` and `VALUE_MODEL_NAME` to point to my local paths.\r\n> 2. I’ve installed `vllm=0.6.1.post2`.\r\n> \r\n> However, the issue persists. Could you please advise if there are any additional configurations needed or suggest any debugging steps?\r\n\r\nHi Rocky!\r\n\r\nCan you show me the logs or attach into tmux sessions to check the error message?"
      },
      {
        "user": "rocky-lq",
        "created_at": "2024-11-01T02:34:14Z",
        "body": "It seems to be an issue with the proxy. After unsetting the proxy using the following command, it works:\r\n```\r\ntmux send-keys \"unset http_proxy && unset https_proxy && unset HTTPS_PROXY\" Enter\r\n```"
      }
    ]
  },
  {
    "number": 12,
    "title": "Tutorial typo",
    "created_at": "2024-10-17T07:38:46Z",
    "closed_at": "2024-11-06T02:50:48Z",
    "labels": [
      "documentation"
    ],
    "url": "https://github.com/openreasoner/openr/issues/12",
    "body": "In the classification loss, the label and prediction are reversed.",
    "comments_url": "https://api.github.com/repos/openreasoner/openr/issues/12/comments",
    "author": "LIO-H-ZEN",
    "comments": [
      {
        "user": "YanSong97",
        "created_at": "2024-10-18T10:19:35Z",
        "body": "Hi LIO,\r\n\r\nYes, we've noticed the typo, and thank you so much for pointing it out! We’ll be fixing it soon."
      }
    ]
  },
  {
    "number": 10,
    "title": "您好，请问有2群吗？现在群超过200人，无法扫码加入",
    "created_at": "2024-10-17T06:19:59Z",
    "closed_at": "2024-10-17T08:05:32Z",
    "labels": [],
    "url": "https://github.com/openreasoner/openr/issues/10",
    "body": "如题",
    "comments_url": "https://api.github.com/repos/openreasoner/openr/issues/10/comments",
    "author": "physicsru",
    "comments": [
      {
        "user": "YangLinyi",
        "created_at": "2024-10-17T08:05:32Z",
        "body": "Thanks for your interest. New QRCode provided. If you have any questions, we would be happy to answer in the group chat or Github Issues."
      }
    ]
  },
  {
    "number": 9,
    "title": "openreasoner/Math-psa 这个reward model是lora的模型吗",
    "created_at": "2024-10-16T07:47:50Z",
    "closed_at": "2024-10-17T11:32:45Z",
    "labels": [
      "question"
    ],
    "url": "https://github.com/openreasoner/openr/issues/9",
    "body": null,
    "comments_url": "https://api.github.com/repos/openreasoner/openr/issues/9/comments",
    "author": "wphtrying",
    "comments": [
      {
        "user": "mengfn",
        "created_at": "2024-10-17T07:38:02Z",
        "body": "Yes. It uses Lora training."
      }
    ]
  }
]