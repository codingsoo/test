[
  {
    "number": 591,
    "title": "Headless on Ubuntu server issue",
    "created_at": "2025-02-06T22:18:35Z",
    "closed_at": "2025-02-13T06:01:44Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/browser-use/browser-use/issues/591",
    "body": "### Bug Description\n\nWhen i try to run browser use on ubuntu server, i face with issue headless:true or use with xvfb but while trying to fix this issue with headless:true with the instructions on documentation, it is not working either. I also looked for the issue and see lot of people facing same problem.\n\n### Reproduction Steps\n\n1.pip install browser-use\n2.pip install playwright\n3.playwright install\n4.nano v1.txt\n5.python v1.txt\n\n### Code Sample\n\n```python\nimport asyncio\nfrom browser_use import Agent\nfrom browser_use.agent.views import AgentHistoryList\nfrom langchain_ollama import ChatOllama\nfrom browser_use.browser.browser import Browser, BrowserConfig\n \nconfig = BrowserConfig(\n    headless=True,\n)\n \nbrowser = Browser(config=config)\n \nasync def run_search() -> AgentHistoryList:\n    agent = Agent(\n        task=\"Search for a 'browser use' post on the r/LocalLLaMA subreddit and open it.\",\n        llm=ChatOllama(\n            model=\"qwen2.5:7b\",\n            num_ctx=32000,\n            browser=browser,\n            generate_gif=False,\n        ),\n    )\n \n    result = await agent.run()\n    return result\n \n \nasync def main():\n    result = await run_search()\n    print(\"\\n\\n\", result)\n \n \nif __name__ == \"__main__\":\n    asyncio.run(main())\n```\n\n### Version\n\n0.1.36\n\n### LLM Model\n\nLocal Model (Specify model in description)\n\n### Operating System\n\nUbuntu 22.04\n\n### Relevant Log Output\n\n```shell\n\n```",
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/591/comments",
    "author": "omertascioglu",
    "comments": [
      {
        "user": "jtoy",
        "created_at": "2025-02-12T22:14:45Z",
        "body": "does headless work?"
      },
      {
        "user": "omertascioglu",
        "created_at": "2025-02-13T06:01:18Z",
        "body": "I handle it by using xvfb:\n- sudo apt install xvfb\n\nThen while using browser-use\n- xvfb-run -a python filename"
      }
    ]
  },
  {
    "number": 543,
    "title": "Message Box will not accept text",
    "created_at": "2025-02-04T00:16:45Z",
    "closed_at": "2025-02-12T16:30:12Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/browser-use/browser-use/issues/543",
    "body": "### Bug Description\n\nThe message box will not accept any text both while the operator is running as well as when paused.  The cursor appears, but when you begin typing no text appears.  There is no way to get the Operator back on track when it goes off the rails which is every time it runs.  It renders this completely useless.  Also the pause button often causes the operator to crash with no way to resume it.  \n\n\n### Reproduction Steps\n\nThe message box will not accept any text both while the operator is running as well as when paused.  The cursor appears, but when you begin typing no text appears.  There is no way to get the Operator back on track when it goes off the rails which is every time it runs.  It renders this completely useless.  Also the pause button often causes the operator to crash with no way to resume it.  \n\n\n### Code Sample\n\n```python\nNA\n```\n\n### Version\n\nweb\n\n### LLM Model\n\nOther (specify in description)\n\n### Operating System\n\nWindows 11  browser microsoft edge and chrome\n\n### Relevant Log Output\n\n```shell\nI am using whatever model is used for the web/cloud version.\n```",
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/543/comments",
    "author": "ReduceMyIns",
    "comments": [
      {
        "user": "israelz74",
        "created_at": "2025-02-07T12:19:01Z",
        "body": "Bug still exists in cloud"
      }
    ]
  },
  {
    "number": 534,
    "title": "'NoneType' object has no attribute 'startswith'",
    "created_at": "2025-02-03T14:31:44Z",
    "closed_at": "2025-02-12T04:07:55Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/browser-use/browser-use/issues/534",
    "body": "### Bug Description\n\nAnything above 0.1.30 gives me a `'NoneType' object has no attribute 'startswith'` and won't drive the browser.\nWhat am i doing wrong? What happened between 0.1.30 and newer versions?\n\n\n### Reproduction Steps\n\n```\nINFO     [browser_use] BrowserUse logging setup complete with level info\n\n[...]\n        \nINFO     [agent] üìç Step 1\nERROR    [agent] ‚ùå Result failed 1/3 times:\n 'NoneType' object has no attribute 'startswith'\nINFO     [agent] üìç Step 1\nERROR    [agent] ‚ùå Result failed 2/3 times:\n 'NoneType' object has no attribute 'startswith'\nINFO     [agent] üìç Step 1\nERROR    [agent] ‚ùå Result failed 3/3 times:\n 'NoneType' object has no attribute 'startswith'\nERROR    [agent] ‚ùå Stopping due to 3 consecutive failures\n```\n\n```\n$ pip freeze | grep browser\nbrowser-use==0.1.31\n\n$ playwright --version\nVersion 1.49.1\n\n$ python --version\nPython 3.12.3\n```\n\n### Code Sample\n\n```python\nfrom langchain_openai import AzureChatOpenAI\nfrom browser_use import Agent, Browser, BrowserConfig\nimport asyncio\nfrom dotenv import load_dotenv\nimport os\n\nload_dotenv()\n\nasync def main():\n    # Initialize the model\n    llm = AzureChatOpenAI(\n        azure_deployment=\"[REDACTED]\",\n        api_version=\"2024-05-01-preview\",\n        temperature=0,\n        max_tokens=None,\n        timeout=None,\n        max_retries=2,\n    )\n\n    # Basic configuration for the browser\n    config = BrowserConfig(\n        headless=False,\n        disable_security=True  # Uncomment if you want to disable security\n    )\n\n    # Initialize the browser with the specified configuration\n    browser = Browser(config=config)\n\n    agent = Agent(\n        task=\"What is a dugong?\",\n        llm=llm,\n        browser=browser,\n        use_vision=True,\n        generate_gif=False\n    )\n\n    try:\n        result = await agent.run()\n        # display(result.action_results())\n        print('--------------------------')\n        for action in result.action_results():\n            if action.is_done:\n                print(action.extracted_content)\n        print('--------------------------')\n        # Close the browser after completion\n        await browser.close()\n    except Exception as e:\n        print(f\"Error occurred: {str(e)}\")\n\nif __name__ == \"__main__\":\n    import asyncio\n    asyncio.run(main())\n```\n\n### Version\n\n0.1.31\n\n### LLM Model\n\nGPT-4o in Azure OpenAI\n\n### Operating System\n\nUbuntu 24.04",
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/534/comments",
    "author": "snobu",
    "comments": [
      {
        "user": "abhishekc-bhs",
        "created_at": "2025-02-07T10:17:12Z",
        "body": "Have the same issue but with using MacOS. Can someone confirm if this is an LLM model issue or something internal SDK response handler function. If it works well with ChatGPT API, I can use that instead. \n\nThanks a lot for this project. \n\n## Version\n(venv) ‚ûú  agents-on-steroids pip freeze | grep browser\nbrowser-use==0.1.36\n\n(venv) ‚ûú  agents-on-steroids playwright --version\nVersion 1.50.0\n\n(venv) ‚ûú  agents-on-steroids python --version\nPython 3.13.1\n\n"
      }
    ]
  },
  {
    "number": 477,
    "title": "Rate limit error",
    "created_at": "2025-01-30T06:26:01Z",
    "closed_at": "2025-01-30T06:26:08Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/pull/477",
    "body": null,
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/477/comments",
    "author": "MagMueller",
    "comments": [
      {
        "user": "bhautikpatel1907",
        "created_at": "2025-01-30T19:01:25Z",
        "body": "Is it fixed?"
      }
    ]
  },
  {
    "number": 375,
    "title": "Add button class to click",
    "created_at": "2025-01-24T19:36:31Z",
    "closed_at": "2025-01-24T19:36:52Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/pull/375",
    "body": null,
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/375/comments",
    "author": "MagMueller",
    "comments": [
      {
        "user": "MagMueller",
        "created_at": "2025-01-24T19:36:49Z",
        "body": "This pull request includes a small but important change to the `browser_use/dom/buildDomTree.js` file. The change adds a check for a specific class to determine if an element should be considered interactive.\r\n\r\n* [`browser_use/dom/buildDomTree.js`](diffhunk://#diff-8f70f7a52b8e76e1c2669b77e09c25410507572b842d6503a101290ef135793fR159-R164): Added a check for the `address-input__container__input` class to the `hasInteractiveRole` condition to ensure elements with this class are recognized as interactive."
      },
      {
        "user": "agrudkow",
        "created_at": "2025-01-27T11:45:39Z",
        "body": "@MagMueller could you elaborate on why such a hard-coded check was necessary i.e. why this class?\r\n\r\nbtw. this PR added a redundant whitespace"
      }
    ]
  },
  {
    "number": 272,
    "title": "Briefly explane dom/views.py ",
    "created_at": "2025-01-14T21:32:37Z",
    "closed_at": "2025-01-20T07:57:31Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/issues/272",
    "body": "Hey @GatienBoquet amazing work !!\r\n\r\nJust needed to understand the use of creating custom dom structure .. ? Is that for consistent automation ? Please share a usecase for it ..\r\na brief explanation would be highly appreciated .. \r\n",
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/272/comments",
    "author": "complete-dope",
    "comments": [
      {
        "user": "GatienBoquet",
        "created_at": "2025-01-15T15:14:16Z",
        "body": "Hi\r\nThe two founder are @MagMueller   / @gregpr07 kudos to them !\r\nI'll add this explantation to an article i'm writing.\r\nBut briefly, the custom DOM structure is designed to be easier for LLMs to understand.\r\n"
      },
      {
        "user": "complete-dope",
        "created_at": "2025-01-20T07:57:31Z",
        "body": "No worries , Got through the code and understood it \n\nAuthors used some pretty good methods"
      },
      {
        "user": "MagMueller",
        "created_at": "2025-01-21T15:46:44Z",
        "body": "So the main purpose of the extraction is to reduce Tokens. So that we only present the LLM whats interactable.\n\nGregor did this extraction and by parsing the HTML into this dictionary, we can calculate hashes for paths and attributes to find them later again on the page, if the page is changing. "
      }
    ]
  },
  {
    "number": 264,
    "title": "Suggest using litellm to support more models",
    "created_at": "2025-01-14T12:22:36Z",
    "closed_at": "2025-01-16T02:20:26Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/issues/264",
    "body": "LiteLLM has translated the APIs of many models into OpenAI's format, which simplifies integration across various models. By adopting LiteLLM, this project can benefit from reduced effort in handling multiple models, allowing developers to focus more on core functionalities.\r\n\r\nI believe this can improve development efficiency and reduce maintenance overhead.\r\n\r\nThank you for your amazing work on this project! Looking forward to your thoughts.",
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/264/comments",
    "author": "xlbljz",
    "comments": [
      {
        "user": "shyam-king",
        "created_at": "2025-01-14T14:19:34Z",
        "body": "Langchain also helps in the same way right? In fact since it is a python library, arguably better no? You can  still opt to use LiteLLM by using `langchain-openai` and setting baseUrl etc. since LiteLLM exposes OpenAI layer."
      },
      {
        "user": "MagMueller",
        "created_at": "2025-01-14T14:32:25Z",
        "body": "So you would keep langchain (or replace it?) and call ChatOpenAI with a LiteLLM URL?"
      },
      {
        "user": "xlbljz",
        "created_at": "2025-01-15T09:32:23Z",
        "body": "But why does it say other models like Gemini is coming soon in the doc. \r\nIs it because different models require different tuning?"
      },
      {
        "user": "GatienBoquet",
        "created_at": "2025-01-15T16:02:27Z",
        "body": "I'm using LM Studio locally and use langchain_openai to use browser_use for that reason.\r\nThe think is, with langchain you can make browser_use LLM agnostic.\r\nGemini is already supported and working well too.\r\n"
      },
      {
        "user": "thiswillbeyourgithub",
        "created_at": "2025-01-15T19:57:00Z",
        "body": "Langchain and litellm don't have the same use case. Instead of chatopenai you could use chatlitellm, both by langchain. This way you could minimally change the code but add the support for basically any LLM and providers. Litellm is really nice!"
      },
      {
        "user": "xlbljz",
        "created_at": "2025-01-16T02:20:26Z",
        "body": "> Langchain and litellm don't have the same use case. Instead of chatopenai you could use chatlitellm, both by langchain. This way you could minimally change the code but add the support for basically any LLM and providers. Litellm is really nice!\r\n\r\nLangchain even support litellm! That's amazing. I didn't know that. Thanks for sharing."
      }
    ]
  },
  {
    "number": 260,
    "title": "disable bounding boxes ",
    "created_at": "2025-01-14T06:22:46Z",
    "closed_at": "2025-01-17T08:18:50Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/issues/260",
    "body": "Is there a way to disable the bounding boxes that are displayed on the browser/screenshot ? ( i mean not draw them on the browser/screenshot ) ? \r\n\r\nThanks in advance ",
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/260/comments",
    "author": "DecentMakeover",
    "comments": [
      {
        "user": "shyam-king",
        "created_at": "2025-01-14T14:22:57Z",
        "body": "As in, you want to `use_vision` but not have bounding boxes? I think this is achievable if we remove the highlights after image is taken for AI request. "
      },
      {
        "user": "DecentMakeover",
        "created_at": "2025-01-15T08:23:14Z",
        "body": "@shyam-king let me check"
      },
      {
        "user": "Kolaposki",
        "created_at": "2025-01-16T22:10:38Z",
        "body": "Yes you can\n\n```\n\nasync with await browser.new_context() as context:\n        page = await context.get_current_page()\n\n        agent = Agent(\n            task=\"Go to google.com and search for 'python programming'\",\n            llm=llm,\n            browser_context=context,\n        )\n\n        # Start the agent\n        agent_task = asyncio.create_task(agent.run())\n\n\n        try:\n            while True:\n                # Remove highlights before taking screenshot\n                await context.remove_highlights()\n\n                # Take a clean screenshot\n                screenshot = await page.screenshot(\n                    animations='disabled'\n                )\n\n        except Exception as e:\n            print(f\"Stream error: {e}\")\n            await agent_task.cancel()\n            await browser.close()\n\n```"
      },
      {
        "user": "EssamWisam",
        "created_at": "2025-01-26T01:35:25Z",
        "body": " Be great if this is documented or rather just an argument we pass to `Agent`. The answer above also actually quickly removes them rather than disable them."
      }
    ]
  },
  {
    "number": 249,
    "title": "AgentStepErrorTelemetryEvent",
    "created_at": "2025-01-13T12:03:45Z",
    "closed_at": "2025-01-13T21:01:42Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/issues/249",
    "body": "I get the following error and cannot start.\r\n`ImportError: cannot import name 'AgentStepErrorTelemetryEvent' from 'browser_use.telemetry.views'`",
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/249/comments",
    "author": "KhakiTsubata",
    "comments": [
      {
        "user": "MagMueller",
        "created_at": "2025-01-13T14:28:00Z",
        "body": "Which version are you on?\r\n\r\nDo\r\n`pip install --upgrade browser-use`"
      },
      {
        "user": "apexrpl",
        "created_at": "2025-01-13T16:10:49Z",
        "body": "> Which version are you on?\r\n> \r\n> Do `pip install --upgrade browser-use`\r\n\r\nNot Work"
      },
      {
        "user": "MagMueller",
        "created_at": "2025-01-13T21:01:35Z",
        "body": "But know it must be a different error because AgentStepErrorTelemetryEvent is not there anymore"
      },
      {
        "user": "GatienBoquet",
        "created_at": "2025-01-13T22:43:07Z",
        "body": "Have you tried `pip install --upgrade --force-reinstall browser-use` ?"
      },
      {
        "user": "KhakiTsubata",
        "created_at": "2025-01-14T04:03:30Z",
        "body": "Thanks for the advice, but I tried both with no success."
      }
    ]
  },
  {
    "number": 233,
    "title": "[Enhancement] Improve input state information about the content we cut out",
    "created_at": "2025-01-12T17:37:14Z",
    "closed_at": "2025-01-13T01:53:42Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/issues/233",
    "body": "We do not include the entire website state, because its too big. We only include whats visable on screen and cut the rest.\r\n\r\nTherefore, we should include information inside the state what we cut out. E.g. in the end of the state, we could write things like\r\n- .... 100 words more  or\r\n- ... 5 pages more or\r\n- <cut content> use scroll to see more or\r\n- for more content call extract content\r\n\r\n",
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/233/comments",
    "author": "MagMueller",
    "comments": [
      {
        "user": "shyam-king",
        "created_at": "2025-01-12T21:12:58Z",
        "body": "+1 on the scroll part"
      }
    ]
  },
  {
    "number": 224,
    "title": "[Enhancement] Create issue templates",
    "created_at": "2025-01-11T23:09:54Z",
    "closed_at": "2025-01-20T19:39:45Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/issues/224",
    "body": "Create issue templates for issues to ensure consistency, improve clarity, and streamline communication within your repository.",
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/224/comments",
    "author": "MagMueller",
    "comments": [
      {
        "user": "Cfomodz",
        "created_at": "2025-01-12T03:49:11Z",
        "body": "I was literally just doing this ü§£üëç\r\n\r\nHave any suggestions besides bug and feature request [and 'other']; anything else?"
      }
    ]
  },
  {
    "number": 215,
    "title": "Example for deepseek",
    "created_at": "2025-01-11T19:10:12Z",
    "closed_at": "2025-01-11T19:10:34Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/pull/215",
    "body": null,
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/215/comments",
    "author": "MagMueller",
    "comments": [
      {
        "user": "123asdfghjkli",
        "created_at": "2025-01-19T05:27:38Z",
        "body": "i don't work  Failed to deserialize the JSON body into the target type: response_format: response_format.type `json_schema` is unavailable now at line 1 column 12440"
      }
    ]
  },
  {
    "number": 201,
    "title": "Feature: Disallow Google AI Overview on search",
    "created_at": "2025-01-10T13:04:19Z",
    "closed_at": "2025-01-10T15:19:03Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/pull/201",
    "body": "- Added Google param that turns off the Google AI overview feature\r\nRemoved the overview since browser use agents have a tendency to always use the data from them, thus defeating the purpose of digging deeper into multiple pages. This is especially useful when trying to get data within a certain time period, ie: 2025 where the Google AI overview will cite pages from far before 2020",
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/201/comments",
    "author": "Michaelgathara",
    "comments": [
      {
        "user": "Michaelgathara",
        "created_at": "2025-01-10T13:05:27Z",
        "body": "Could potentially make this a flag the user passes in when they initialize the agent as well, let me know if that is a more preferred approach"
      },
      {
        "user": "gregpr07",
        "created_at": "2025-01-10T15:19:09Z",
        "body": "Agree, makes sense"
      }
    ]
  },
  {
    "number": 179,
    "title": "Added post/reply X functionality",
    "created_at": "2025-01-07T10:23:09Z",
    "closed_at": "2025-01-07T14:12:07Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/pull/179",
    "body": "This PR allows you to automate posting on X\r\n\r\nIt supports:\r\n\r\n- Posting new tweets\r\n- Tagging users\r\n- Replying to tweets\r\n\r\nNote\r\n\r\nAdd your target user and message in the config section.\r\n-- target_user=\"XXXXX\"\r\n-- message=\"XXXXX\"\r\n-- reply_url=\"XXXXX\"\r\n\r\nAny issues, contact me on X @defichemist95",
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/179/comments",
    "author": "Prem95",
    "comments": [
      {
        "user": "gregpr07",
        "created_at": "2025-01-07T14:12:11Z",
        "body": "Good example :)"
      }
    ]
  },
  {
    "number": 167,
    "title": "Create Online_coding_agent.py",
    "created_at": "2025-01-06T15:11:25Z",
    "closed_at": "2025-01-10T16:39:45Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/pull/167",
    "body": "This pull request introduces a new feature that automates the process of opening an online code editor, writing code, and executing it using a browser-based agent system. \r\n\r\nagent1: Opens an online code editor (Programiz).\r\nexecutor: Executes the code written by the coder and suggests updates if there are errors.\r\ncoder: Writes and completes code for a simple calculator on the coding interface.",
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/167/comments",
    "author": "D-Yuva",
    "comments": [
      {
        "user": "gregpr07",
        "created_at": "2025-01-07T14:14:07Z",
        "body": "What‚Äôs the use case?"
      },
      {
        "user": "D-Yuva",
        "created_at": "2025-01-07T17:39:05Z",
        "body": "> What‚Äôs the use case?\r\n\r\nBeginners can use it to practice coding without worrying about setting up an environment, it opens an editor, lets you write code, and runs it automatically. It‚Äôs also helpful for quick prototyping or debugging when you just need to test something small without opening a full IDE. More like a coding assistant in real time "
      },
      {
        "user": "tomahawk000",
        "created_at": "2025-01-07T23:23:29Z",
        "body": "Great idea, I was going to build this for myself, how far along did you get?"
      },
      {
        "user": "D-Yuva",
        "created_at": "2025-01-08T02:28:29Z",
        "body": "> Great idea, I was going to build this for myself, how far along did you get?\r\n\r\nDone with everything, at times the agent has some problem in identifying the coding space that being unrecognisable "
      },
      {
        "user": "gregpr07",
        "created_at": "2025-01-10T15:40:07Z",
        "body": "sure haha, I'll merge it. Just please make the filename lowercase"
      },
      {
        "user": "D-Yuva",
        "created_at": "2025-01-10T15:53:04Z",
        "body": "> sure haha, I'll merge it. Just please make the filename lowercase\r\n\r\ndone mate"
      }
    ]
  },
  {
    "number": 141,
    "title": "Add example files for better documentation and reference",
    "created_at": "2025-01-01T11:16:10Z",
    "closed_at": "2025-01-06T17:45:45Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/pull/141",
    "body": "This PR adds essential example files to the examples directory to improve documentation and provide better reference for users:\r\n\r\n- Added .env.example for environment configuration reference\r\n- Added .gitignore for proper version control setup\r\n- Added cli.py demonstrating CLI implementation\r\n- Added LICENSE file (MIT)\r\n- Added README.md with documentation\r\n- Added requirements.txt for dependency management\r\n\r\nThese files will help new users better understand the project setup and configuration, while providing clear examples of implementation.",
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/141/comments",
    "author": "PierrunoYT",
    "comments": [
      {
        "user": "gregpr07",
        "created_at": "2025-01-01T19:07:40Z",
        "body": "Why did you add all the other files except `cli.py`?"
      },
      {
        "user": "PierrunoYT",
        "created_at": "2025-01-01T19:13:32Z",
        "body": "> Why did you add all the other files except `cli.py`?\r\n\r\nThe cli.py should be there already"
      }
    ]
  },
  {
    "number": 138,
    "title": "docs: include `langchain_openai` and minor doc update",
    "created_at": "2024-12-31T07:32:29Z",
    "closed_at": "2025-01-10T15:49:59Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/pull/138",
    "body": "## Summary\r\n\r\n- added `langchain_openai` as installation dependency since the following code snippets required.\r\n- removed the redundant quote.",
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/138/comments",
    "author": "nekomeowww",
    "comments": [
      {
        "user": "gregpr07",
        "created_at": "2025-01-10T15:49:59Z",
        "body": "`langchain_openai` is already a dependancy of `browser-use`."
      }
    ]
  },
  {
    "number": 128,
    "title": "chore: update service.py",
    "created_at": "2024-12-27T05:42:32Z",
    "closed_at": "2025-01-10T15:50:59Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/pull/128",
    "body": "ouput -> output",
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/128/comments",
    "author": "eltociear",
    "comments": [
      {
        "user": "gregpr07",
        "created_at": "2025-01-10T15:51:03Z",
        "body": "thanks!"
      }
    ]
  },
  {
    "number": 127,
    "title": "Grok Integration?",
    "created_at": "2024-12-26T16:20:22Z",
    "closed_at": "2024-12-26T17:23:34Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/issues/127",
    "body": "Has anybody tried to use this with Groq? I'm getting an `invalid_api_key` error. Please close this issue if it's something stupid I'm doing, and Groq should work fine. Here's a script for reference.\r\n\r\n```\r\nfrom langchain_groq import ChatGroq\r\n#from langchain_openai import ChatOpenAI\r\nfrom browser_use import Agent\r\nimport asyncio\r\n\r\nasync def main():\r\n    agent = Agent(\r\n        task=\"Are there cheap flights from ... to ...?\",\r\n        llm=ChatGroq(model=\"llama3-8b-8192\"),\r\n    )\r\n    result = await agent.run()\r\n    print(result)\r\n\r\nasyncio.run(main())\r\n```\r\nThanks.",
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/127/comments",
    "author": "NathanielComeau",
    "comments": [
      {
        "user": "sbhavani",
        "created_at": "2024-12-26T17:21:02Z",
        "body": "I just checked and it works for me. Try putting the env variable before the script when you run it (e.g. GROQ_API_KEY=XXX python test.py)\r\n\r\nAlso your issue title mentions 'Grok', check if you're referring to the model from xAI or groq.com provider"
      },
      {
        "user": "NathanielComeau",
        "created_at": "2024-12-26T17:23:34Z",
        "body": "Okay, thank you very much for checking it @sbhavani .\r\n\r\nAha! Yes, I was looking to try it out with 'Grok', so that explains why my xAI API key wasn't working.\r\n\r\nThanks very much."
      },
      {
        "user": "akc2267",
        "created_at": "2025-01-14T16:51:05Z",
        "body": "just a note, I got this (kinda) working with Groq with the following. It doesn't complete the full flow but it does open chromium:\r\n\r\n```\r\nfrom langchain_groq import ChatGroq\r\n#from langchain_openai import ChatOpenAI\r\nfrom browser_use import Agent\r\nimport asyncio\r\n\r\nasync def main():\r\n    agent = Agent(\r\n        task=\"Are there cheap flights from AUS to LAX?\",\r\n        llm=ChatGroq(model=\"llama-3.3-70b-versatile\"),\r\n    )\r\n    result = await agent.run()\r\n    print(result)\r\n\r\nif __name__ == \"__main__\":\r\n    asyncio.run(main())\r\n```\r\n\r\nIn terminal, I run:\r\n`GROQ_API_KEY=api_key_here python groqtest.py`\r\n\r\nNote, don't call your python script \"groq.py\" or you'll end up in a circular dependency error\r\n"
      },
      {
        "user": "akc2267",
        "created_at": "2025-01-14T16:52:35Z",
        "body": "looks like it fails because Groq models are not multi-modal"
      }
    ]
  },
  {
    "number": 126,
    "title": "Added Gradio GUI",
    "created_at": "2024-12-26T10:12:21Z",
    "closed_at": "2025-01-10T16:00:53Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/pull/126",
    "body": "#124 ",
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/126/comments",
    "author": "Saksham1387",
    "comments": [
      {
        "user": "Saksham1387",
        "created_at": "2024-12-26T10:13:01Z",
        "body": "@gregpr07  please check this out"
      },
      {
        "user": "gregpr07",
        "created_at": "2024-12-26T11:02:23Z",
        "body": "Oh wait haha, I didn‚Äôt see you already worked on this. THANK YOU! Will merge in a few hours"
      },
      {
        "user": "Saksham1387",
        "created_at": "2024-12-26T11:51:05Z",
        "body": "Cool, let me know if you want any changes\r\n"
      }
    ]
  },
  {
    "number": 85,
    "title": "Fix typo on prompts",
    "created_at": "2024-12-04T11:11:42Z",
    "closed_at": "2024-12-05T16:40:11Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/pull/85",
    "body": "There was a tiny minor typo in the agent prompts.",
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/85/comments",
    "author": "berkantay",
    "comments": [
      {
        "user": "gregpr07",
        "created_at": "2024-12-05T16:40:22Z",
        "body": "haha, thanks man!"
      }
    ]
  },
  {
    "number": 82,
    "title": "Fix support to remote browsers, add documentation and example",
    "created_at": "2024-12-03T20:22:30Z",
    "closed_at": "2025-01-10T16:39:23Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/pull/82",
    "body": "As described in title, small bugfix in connection to wss based remote browser connection, along with clarification in the README and example",
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/82/comments",
    "author": "ramanidan",
    "comments": [
      {
        "user": "gregpr07",
        "created_at": "2024-12-05T16:41:23Z",
        "body": "I will merge this, but first I have to redesign the Browser service a little bit, I will switch back to only 1 context per 1 browser. I though it was gonna be a huge improvement, but well turns out it's pretty bad."
      },
      {
        "user": "ramanidan",
        "created_at": "2024-12-06T09:47:28Z",
        "body": "@gregpr07 \r\nThat's great - We also tend to prefer having a single context"
      }
    ]
  },
  {
    "number": 68,
    "title": "Would love to have integrated into AgentOps",
    "created_at": "2024-11-28T23:06:24Z",
    "closed_at": "2025-01-31T19:11:47Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/issues/68",
    "body": null,
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/68/comments",
    "author": "AtomSilverman",
    "comments": [
      {
        "user": "tropxy",
        "created_at": "2024-12-30T11:25:32Z",
        "body": "you can easily add AgentOps to your project, right?\r\njust add the dependency and initiate it...\r\n\r\nOr you mean that you would like to have a config option to auto enable it?"
      },
      {
        "user": "Cfomodz",
        "created_at": "2025-01-31T19:11:47Z",
        "body": "I took a quick look through their docs and I do not see any issue with init'ing AgentOps within a project utilizing browser-use. To that end I am going to close this issue as there isn't any additional information to go off of, however, if there is something more @AtomSilverman or others, please feel free to open a new issue and share how we can best address any further need üòä"
      }
    ]
  },
  {
    "number": 66,
    "title": "Add the ability to click on iFrames and shadow elements",
    "created_at": "2024-11-28T11:40:11Z",
    "closed_at": "2024-11-28T14:58:47Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/pull/66",
    "body": "This is hugely requested feature.\r\nAlso, increased DOM processing speed by 10x.",
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/66/comments",
    "author": "gregpr07",
    "comments": [
      {
        "user": "cheungseol",
        "created_at": "2025-02-08T07:23:19Z",
        "body": "iframes without same origin seems not work"
      }
    ]
  },
  {
    "number": 43,
    "title": "Allow headless option when initializing controller",
    "created_at": "2024-11-21T20:07:43Z",
    "closed_at": "2024-11-22T12:41:46Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/pull/43",
    "body": "Simple change: allow headless option by making it an optional argument to the Controller class. Headless option is already implemented in the Browser class, so all we have to do is pass that down.",
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/43/comments",
    "author": "jeanmw",
    "comments": [
      {
        "user": "MagMueller",
        "created_at": "2024-11-22T12:43:29Z",
        "body": "Great idea - does it work like expected for you? "
      },
      {
        "user": "jeanmw",
        "created_at": "2024-11-25T15:43:14Z",
        "body": "> Great idea - does it work like expected for you?\r\nyes!"
      }
    ]
  },
  {
    "number": 42,
    "title": "How to run and use this with browser headless mode?",
    "created_at": "2024-11-21T16:50:02Z",
    "closed_at": "2024-12-02T14:29:16Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/issues/42",
    "body": "I plan to run this brilliant soft at remote server and cant.\r\nGot an error:\r\n\r\n`ERROR    [browser] Failed to initialize Chrome driver: Message: session not created: Chrome failed to start: exited normally.\r\n  (session not created: DevToolsActivePort file doesn't exist)\r\n  (The process started from chrome location /opt/google/chrome/chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)`\r\n\r\n`Exception ignored in: <function Browser.__del__ at 0x7fbb65aa6a20>\r\nTraceback (most recent call last):\r\n  File \"/home/zeus/miniconda3/lib/python3.13/site-packages/browser_use/browser/service.py\", line 192, in __del__\r\n    if self.driver is not None:\r\nAttributeError: 'Browser' object has no attribute 'driver'`\r\n\r\nI guess if I run it in headless mode this error will be gone.\r\n\r\nHow to run and use this with browser headless mode?\r\n",
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/42/comments",
    "author": "svirmi",
    "comments": [
      {
        "user": "gregpr07",
        "created_at": "2024-11-22T14:12:15Z",
        "body": "Hey, will address this today. We are working on switching to Playwright which makes things a little bit easier I think.\r\n\r\nThen I will give you example of how to do that!"
      },
      {
        "user": "NickMesser",
        "created_at": "2024-11-23T19:38:24Z",
        "body": "> Hey, will address this today. We are working on switching to Playwright which makes things a little bit easier I think.\r\n> \r\n> Then I will give you example of how to do that!\r\n\r\nAny update on this? I also would need headless mode. "
      },
      {
        "user": "svirmi",
        "created_at": "2024-12-02T14:29:17Z",
        "body": "Issue can be closed as \"headless\" option added to Browser configuration.\r\nThank you!"
      }
    ]
  },
  {
    "number": 39,
    "title": "Update example in README.md to be copy-paste-go",
    "created_at": "2024-11-21T10:57:42Z",
    "closed_at": "2024-11-22T14:59:32Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/pull/39",
    "body": "I had to google what an async function is in python, now one can just copy paste.",
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/39/comments",
    "author": "pietrozullo",
    "comments": [
      {
        "user": "gregpr07",
        "created_at": "2024-11-22T14:59:38Z",
        "body": "Thanks Pietro!"
      }
    ]
  },
  {
    "number": 25,
    "title": "Core function to scroll up and down on page",
    "created_at": "2024-11-17T15:44:34Z",
    "closed_at": "2024-11-17T22:25:29Z",
    "labels": [],
    "url": "https://github.com/browser-use/browser-use/pull/25",
    "body": null,
    "comments_url": "https://api.github.com/repos/browser-use/browser-use/issues/25/comments",
    "author": "MagMueller",
    "comments": [
      {
        "user": "hamzauzumcu",
        "created_at": "2024-12-23T17:05:33Z",
        "body": "Hey @MagMueller, is there a way to scroll up instead of down?"
      }
    ]
  }
]