[
  {
    "number": 233,
    "title": "Bug: boto3 version solving failed",
    "created_at": "2025-02-13T02:46:18Z",
    "closed_at": "2025-02-13T12:56:05Z",
    "labels": [
      "bug",
      "triage"
    ],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/issues/233",
    "body": "### Expected Behaviour\n\nThe `boto3` dependency has been fixed to 1.35.0, causing dependency issues with libraries such as the latest version of `langchain-aws`.\n\n### Current Behaviour\n\n```bash\nBecause no versions of langchain-aws match >0.2.10,<0.2.11 || >0.2.11,<0.2.12 || >0.2.12,<0.3.0\n and langchain-aws (0.2.10) depends on boto3 (>=1.35.74), langchain-aws (>=0.2.10,<0.2.11 || >0.2.11,<0.2.12 || >0.2.12,<0.3.0) requires boto3 (>=1.35.74).\nAnd because langchain-aws (0.2.11) depends on boto3 (>=1.35.74)\n and langchain-aws (0.2.12) depends on boto3 (>=1.35.74), langchain-aws (>=0.2.10,<0.3.0) requires boto3 (>=1.35.74).\nSo, because {project} depends on both langchain_aws (^0.2.10) and boto3 (1.35.0), version solving failed.\n```\n\n### Code snippet\n\n```python\n[options.extras_require]\naws =\n    boto3==1.35.0\n...\n```\n\n### Possible Solution\n\n```\n[options.extras_require]\naws =\n    boto3>=1.35.0\n...\n\n### Steps to Reproduce\n\n```bash\npoetry add langchain langchain-aws\npoetry add \"multi-agent-orchestrator[aws]\"\n```",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/233/comments",
    "author": "ghwany",
    "comments": [
      {
        "user": "cornelcroi",
        "created_at": "2025-02-13T12:56:05Z",
        "body": "Hi @ghwany the issue has been fixed in `0.1.9`"
      }
    ]
  },
  {
    "number": 213,
    "title": "Bug: Unexpected token '<', \"<!DOCTYPE \"... is not valid JSON",
    "created_at": "2025-01-25T15:02:59Z",
    "closed_at": "2025-02-03T20:05:19Z",
    "labels": [
      "bug",
      "triage"
    ],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/issues/213",
    "body": "### Expected Behaviour\n\nExpected Behaviour after chatting the chatbot:\nThe system should process the API response and return valid JSON data for further processing. Specifically:\nThe response from the server should be in a valid JSON format.\nErrors should be properly logged and handled, with meaningful error messages.\n\n### Current Behaviour\n\nCurrent Behaviour\nCurrently, the application throws the following error:\n\nSyntaxError: Unexpected token '<', \"<!DOCTYPE \"... is not valid JSON\n\nThis occurs because the response from the API endpoint is an HTML document (likely an error page) rather than JSON, causing the application to fail.\n\n\n\n### Code snippet\n\n```python\nDeployed as per instructions, but faced with the above error.\n```\n\n### Possible Solution\n\nAdd Content-Type Validation: Before parsing the response as JSON, check the Content-Type header to ensure it's application/json.\n\n### Steps to Reproduce\n\nDeployed as per instructions, but faced with the above error. ",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/213/comments",
    "author": "jiasheng-ctc",
    "comments": [
      {
        "user": "cornelcroi",
        "created_at": "2025-01-26T15:57:27Z",
        "body": "Hi @jiasheng-ctc \nCan you give me some details about how you get these errors?\nFor now, I don't have any context.\nCode examples also could be useful for me to understand what exactly you are trying to do.\nThanks."
      },
      {
        "user": "cornelcroi",
        "created_at": "2025-02-03T20:05:19Z",
        "body": "Closing due to no activity"
      }
    ]
  },
  {
    "number": 211,
    "title": "Bug: AttributeError: 'BedrockInlineAgentOptions' object has no attribute 'region'",
    "created_at": "2025-01-24T10:49:32Z",
    "closed_at": "2025-01-28T13:19:38Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/issues/211",
    "body": "### Expected Behaviour\n\nno error\n\n### Current Behaviour\n\nTraceback (most recent call last):\n  File \"/home/ubuntu/workspace/multi-agent-collaborator-test/04.bedrock_inline_agent.py\", line 52, in <module>\n    bedrock_inline_agent = BedrockInlineAgent(BedrockInlineAgentOptions(\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ubuntu/workspace/llm_model_hub/miniconda3/envs/py312/lib/python3.12/site-packages/multi_agent_orchestrator/agents/bedrock_inline_agent.py\", line 66, in __init__\n    if options.region:\n       ^^^^^^^^^^^^^^\nAttributeError: 'BedrockInlineAgentOptions' object has no attribute 'region'\n\n### Code snippet\n\n```python\nbedrock_inline_agent = BedrockInlineAgent(BedrockInlineAgentOptions(\n    name=\"Inline Agent Creator for Agents for Amazon Bedrock\",\n    description=\"Specalized in creating Agent to solve customer request dynamically. You are provided with a list of Action groups and Knowledge bases which can help you in answering customer request\",\n    # action_groups_list=action_groups_list,\n    knowledge_bases=knowledge_bases,\n))\n```\n\n### Possible Solution\n\n_No response_\n\n### Steps to Reproduce\n\njust inint a BedrockInlineAgent",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/211/comments",
    "author": "xiehust",
    "comments": [
      {
        "user": "cornelcroi",
        "created_at": "2025-01-28T13:19:38Z",
        "body": "Thanks @xiehust.\nThe bug is fixed in the latest release."
      }
    ]
  },
  {
    "number": 210,
    "title": "Bug: AttributeError: 'ComprehendFilterAgentOptions' object has no attribute 'region'",
    "created_at": "2025-01-24T10:37:48Z",
    "closed_at": "2025-01-28T13:19:56Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/issues/210",
    "body": "### Expected Behaviour\n\n  File \"/home/ubuntu/workspace/multi-agent-collaborator-test/03.sequential_agent.py\", line 114, in <module>\n    filter_agent = ComprehendFilterAgent(ComprehendFilterAgentOptions(\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/home/ubuntu/workspace/llm_model_hub/miniconda3/envs/py312/lib/python3.12/site-packages/multi_agent_orchestrator/agents/comprehend_filter_agent.py\", line 34, in __init__\n    config = Config(region_name=options.region) if options.region else None\n                                                   ^^^^^^^^^^^^^^\n\n### Current Behaviour\n\n 'ComprehendFilterAgentOptions' object has no attribute 'region'\n\n### Code snippet\n\n```python\nfilter_agent = ComprehendFilterAgent(ComprehendFilterAgentOptions(\n    name='ContentModerator',\n    description='Analyzes and filters content using Amazon Comprehend',\n    enable_sentiment_check=True,\n    enable_pii_check=True,\n    enable_toxicity_check=True,\n    sentiment_threshold=0.8,\n    toxicity_threshold=0.6,\n    allow_pii=False,\n    language_code='en'\n))\n```\n\n### Possible Solution\n\n_No response_\n\n### Steps to Reproduce\n\njust init a new ComprehendFilterAgent you will encounter the error\nfilter_agent = ComprehendFilterAgent(ComprehendFilterAgentOptions(\n    name='ContentModerator',\n    description='Analyzes and filters content using Amazon Comprehend',\n    enable_sentiment_check=True,\n    enable_pii_check=True,\n    enable_toxicity_check=True,\n    sentiment_threshold=0.8,\n    toxicity_threshold=0.6,\n    allow_pii=False,\n    language_code='en'\n))",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/210/comments",
    "author": "xiehust",
    "comments": [
      {
        "user": "cornelcroi",
        "created_at": "2025-01-28T13:19:56Z",
        "body": "Thanks @xiehust.\nThe bug is fixed in the latest release."
      }
    ]
  },
  {
    "number": 195,
    "title": "Chain agent UI",
    "created_at": "2025-01-07T11:37:33Z",
    "closed_at": "2025-01-09T10:09:46Z",
    "labels": [],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/pull/195",
    "body": "<!-- markdownlint-disable MD041 MD043 -->\r\n**Issue number:**\r\n\r\n## Summary\r\n\r\n### Changes\r\n\r\n> Please provide a summary of what's being changed\r\n\r\n### User experience\r\n\r\n> Please share what the user experience looks like before and after this change\r\n\r\n## Checklist\r\n\r\nIf your change doesn't seem to apply, please leave them unchecked.\r\n\r\n* [ ] I have performed a self-review of this change\r\n* [ ] Changes have been tested\r\n* [ ] Changes are documented\r\n\r\n<details>\r\n<summary>Is this a breaking change?</summary>\r\n\r\n**RFC issue number**:\r\n\r\nChecklist:\r\n\r\n* [ ] Migration process documented\r\n* [ ] Implement warnings (if it can live side by side)\r\n\r\n</details>\r\n\r\n## Acknowledgment\r\n\r\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.\r\n\r\n**Disclaimer**: We value your time and bandwidth. As such, any pull requests created on non-triaged issues might not be successful.\r\n",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/195/comments",
    "author": "aadhi0612",
    "comments": [
      {
        "user": "cornelcroi",
        "created_at": "2025-01-09T10:09:47Z",
        "body": "Thank you  @aadhi0612  for your contribution and interest in the project. \r\nAfter careful review, we feel this demo may not be the best fit for the core framework repository. The React integration example, while valuable for React users, is more React-specific and not really about the framework itself.\r\nAdditionally, including it in the main repository would create ongoing maintenance overhead over time.\r\nFor these reasons we will not merge it but thank you for the interest into this framework. For the future, please raise an issue to discuss new additions before submitting a PR."
      },
      {
        "user": "aadhi0612",
        "created_at": "2025-01-09T10:13:21Z",
        "body": "Thank you for the information can you give something which you would appreciate that will be a good contribution to this project??"
      },
      {
        "user": "cornelcroi",
        "created_at": "2025-01-09T10:32:34Z",
        "body": "If you have an idea about something, open an issue before doing anything, so we can analyze it and tell you if this is a good fit or not.\r\nThere are already multiple open issues that required work. Some issues are about some demos in streamlit.\r\nHave a look and if you find one that you would want to work on, comment in the issue to tell you what we expect to be implemented."
      }
    ]
  },
  {
    "number": 182,
    "title": "fix[typos] - use `Any` from typing instead of `any` (which is a function)",
    "created_at": "2024-12-26T16:09:32Z",
    "closed_at": "2024-12-27T10:22:16Z",
    "labels": [],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/pull/182",
    "body": "## Summary\r\n\r\n`Any` is a type whereas `any` is a function. In some places, `any` is being used instead of `Any`\r\n\r\n### Changes\r\n\r\nReplace `any` with `Any` and import `Any` if not imported.\r\n\r\n### User experience\r\n\r\nNo impact on runtime or user experience because types are optional \r\n\r\n## Checklist\r\n\r\nIf your change doesn't seem to apply, please leave them unchecked.\r\n\r\n* [ x] I have performed a self-review of this change\r\n* [ x] Changes have been tested\r\n* [ ] Changes are documented\r\n\r\n<details>\r\n<summary>Is this a breaking change? No</summary>\r\n\r\n**RFC issue number**:\r\n\r\nChecklist:\r\n\r\n* [ ] Migration process documented\r\n* [ ] Implement warnings (if it can live side by side)\r\n\r\n</details>\r\n\r\n## Acknowledgment\r\n\r\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.\r\n\r\n**Disclaimer**: We value your time and bandwidth. As such, any pull requests created on non-triaged issues might not be successful.\r\n",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/182/comments",
    "author": "ksachdeva",
    "comments": [
      {
        "user": "brnaba-aws",
        "created_at": "2024-12-27T10:22:30Z",
        "body": "thanks @ksachdeva  for looking into this."
      }
    ]
  },
  {
    "number": 165,
    "title": "fixing agent key to accept numbers - issue #80",
    "created_at": "2024-12-22T13:38:49Z",
    "closed_at": "2024-12-26T13:43:27Z",
    "labels": [],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/pull/165",
    "body": "<!-- markdownlint-disable MD041 MD043 -->\r\n**Issue number:**\r\n #80\r\n\r\n## Summary\r\n\r\nChanging  agent id  regex to accept digits  all changes in agent file only in both python and typescript\r\nadded unit test for this new regex\r\n### Changes\r\n**Python**\r\nPrev : ` key = re.sub(r\"[^a-zA-Z\\s-]\", \"\", name)`\r\nNew : `key = re.sub(r\"[^a-zA-Z0-9\\s-]\", \"\", name)`\r\n\r\n **Typescript :**  \r\n\r\nPrev : ` .replace(/[^a-zA-Z\\s-]/g, \"\"))`\r\nNew : `.replace(/[^a-zA-Z0-9\\s-]/g, \"\"))`\r\n\r\n\r\n> Please provide a summary of what's being changed\r\n\r\nAgent id now can have digits in it .\r\n### User experience\r\n\r\n> Please share what the user experience looks like before and after this change\r\n\r\nPreviously, if the user had an agent ID containing digits, the numbers would be removed. Now, the numbers will be retained.\r\n\r\nExamples before  here if user changed the digit it will return agent already exists \r\n```\r\nAgent Name: Image2-You\r\nAgent ID: image-you\r\n\r\nAgent Name: Image4-You\r\nAgent ID: image-you\r\n```\r\n\r\nExample after : \r\n```\r\n Agent Name: Image2-You\r\nAgent ID: image2-you\r\n\r\nAgent Name: Image4-You\r\nAgent ID: image4-you\r\n```\r\n## Checklist\r\n\r\nIf your change doesn't seem to apply, please leave them unchecked.\r\n\r\n* [ 👍 ] I have performed a self-review of this change\r\n* [👍  ] Changes have been tested\r\n* [ ] Changes are documented\r\n\r\n<details>\r\n<summary>Is this a breaking change?</summary>\r\n\r\n**RFC issue number**:\r\n\r\nChecklist:\r\n\r\n* [ ] Migration process documented\r\n* [ ] Implement warnings (if it can live side by side)\r\n\r\n</details>\r\n\r\n## Acknowledgment\r\n\r\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.\r\n\r\n**Disclaimer**: We value your time and bandwidth. As such, any pull requests created on non-triaged issues might not be successful.\r\n",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/165/comments",
    "author": "RanaElwaseef21",
    "comments": [
      {
        "user": "tica3467",
        "created_at": "2024-12-24T23:54:34Z",
        "body": "Hey sorry am.back now I.domt have time f0r born aga8h or shit "
      },
      {
        "user": "tica3467",
        "created_at": "2025-01-14T07:24:10Z",
        "body": "Not possible"
      },
      {
        "user": "tica3467",
        "created_at": "2025-01-14T13:37:58Z",
        "body": "Bring good Charm Charming Charming Good Charming"
      }
    ]
  },
  {
    "number": 158,
    "title": "Bug: BedrockInlineAgent and BedrockInlineAgentOptions not in index.d.ts",
    "created_at": "2024-12-17T13:22:06Z",
    "closed_at": "2024-12-20T13:19:54Z",
    "labels": [
      "bug",
      "triage"
    ],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/issues/158",
    "body": "### Expected Behaviour\n\nI should be able to import BedrockInlineAgent and BedrockInlineAgentOptions using the following:\r\n```ts\r\nimport { BedrockInlineAgent, type BedrockInlineAgentOptions } from 'multi-agent-orchestrator';\r\n```\n\n### Current Behaviour\n\nThis is not working as both BedrockInlineAgent and BedrockInlineAgentOptions are not exxported inside the index.d.ts.\n\n### Code snippet\n\n```python\nimport { BedrockInlineAgent, type BedrockInlineAgentOptions } from 'multi-agent-orchestrator';\n```\n\n\n### Possible Solution\n\nAdding the following to the index.d.ts is solving the issue:\r\n```ts\r\nexport { BedrockInlineAgent, BedrockInlineAgentOptions } from './agents/bedrockInlineAgent';\r\n```\n\n### Steps to Reproduce\n\n- Try to import in a ts file like this:\r\n```ts\r\nexport { BedrockInlineAgent, BedrockInlineAgentOptions } from './agents/bedrockInlineAgent';\r\n```",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/158/comments",
    "author": "Flolight",
    "comments": [
      {
        "user": "brnaba-aws",
        "created_at": "2024-12-17T13:45:09Z",
        "body": "fixed in #159 \r\nit will be release soon"
      }
    ]
  },
  {
    "number": 145,
    "title": "Fix typo in classifier.py",
    "created_at": "2024-12-10T08:32:26Z",
    "closed_at": "2024-12-16T13:00:29Z",
    "labels": [],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/pull/145",
    "body": "<!-- markdownlint-disable MD041 MD043 -->\r\n**Issue number:**\r\n\r\n## Summary\r\n\r\n### Changes\r\n\r\nFix typo in prompt template\r\n\r\n### User experience\r\n\r\nNo expected UX change.\r\n## Checklist\r\n\r\nIf your change doesn't seem to apply, please leave them unchecked.\r\n\r\n* [x] I have performed a self-review of this change\r\n* [x] Changes have been tested\r\n* [x] Changes are documented\r\n\r\n<details>\r\n<summary>Is this a breaking change?</summary>\r\n\r\n**RFC issue number**:\r\n\r\nChecklist:\r\n\r\n* [ ] Migration process documented\r\n* [ ] Implement warnings (if it can live side by side)\r\n\r\n</details>\r\n\r\n## Acknowledgment\r\n\r\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.\r\n\r\n**Disclaimer**: We value your time and bandwidth. As such, any pull requests created on non-triaged issues might not be successful.\r\n",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/145/comments",
    "author": "billcai",
    "comments": [
      {
        "user": "cornelcroi",
        "created_at": "2024-12-16T13:00:35Z",
        "body": "Thank you @billcai for the PR.\r\n"
      }
    ]
  },
  {
    "number": 122,
    "title": "Feature request: Add support for GoLang",
    "created_at": "2024-12-01T16:38:40Z",
    "closed_at": "2024-12-02T09:21:23Z",
    "labels": [
      "triage"
    ],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/issues/122",
    "body": "### Use case\n\nAbility to create an agent in Golang and add it to the orchestrator\n\n### Solution/User Experience\n\nSupport for GoLang\n\n### Alternative solutions\n\n```markdown\nnone\n```\n",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/122/comments",
    "author": "D-sense",
    "comments": [
      {
        "user": "cornelcroi",
        "created_at": "2024-12-02T09:21:23Z",
        "body": "Thank you for your suggestion regarding additional language support. At present, we are focusing our resources on maintaining and improving support for TypeScript and Python, as these are the most commonly used languages in LLM applications. While we appreciate your proposal, we currently don't have the bandwidth to expand our language offerings due to maintenance requirements.\r\nWe'll keep your suggestion in mind for future consideration."
      }
    ]
  },
  {
    "number": 120,
    "title": "docs: update faq.md",
    "created_at": "2024-11-29T03:24:48Z",
    "closed_at": "2024-11-29T12:59:55Z",
    "labels": [],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/pull/120",
    "body": "## Summary\r\n\r\n### Changes\r\n\r\n> framwork -> framework\r\n\r\n\r\n\r\n## Checklist\r\n\r\nIf your change doesn't seem to apply, please leave them unchecked.\r\n\r\n* [ ] I have performed a self-review of this change\r\n* [ ] Changes have been tested\r\n* [ ] Changes are documented\r\n\r\n<details>\r\n<summary>Is this a breaking change?</summary>\r\n\r\n**RFC issue number**:\r\n\r\nChecklist:\r\n\r\n* [ ] Migration process documented\r\n* [ ] Implement warnings (if it can live side by side)\r\n\r\n</details>\r\n\r\n## Acknowledgment\r\n\r\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.\r\n\r\n**Disclaimer**: We value your time and bandwidth. As such, any pull requests created on non-triaged issues might not be successful.\r\n",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/120/comments",
    "author": "eltociear",
    "comments": [
      {
        "user": "cornelcroi",
        "created_at": "2024-11-29T13:00:07Z",
        "body": "Thank you  @eltociear for the PR."
      }
    ]
  },
  {
    "number": 110,
    "title": "Feature request: Built-In SQL Storage Support",
    "created_at": "2024-11-26T18:55:44Z",
    "closed_at": "2024-12-26T10:48:07Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/issues/110",
    "body": "### Use case\r\n\r\nEnable support for SQL-based databases as built-in conversation storage to provide scalability, flexibility, and ease of integration with existing systems. This will cater to users managing large-scale conversations that require efficient querying, indexing, and handling of structured data.\r\n\r\n### Solution/User Experience\r\n\r\nAllow users to configure any SQL-based database (e.g., MySQL, PostgreSQL, SQLite) as the conversation storage backend.\r\n\r\n### Alternative solutions\r\n\r\n```markdown\r\nCustom Storage can be implemented\r\n```",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/110/comments",
    "author": "Rajaniraiyn",
    "comments": [
      {
        "user": "cornelcroi",
        "created_at": "2024-12-26T10:48:08Z",
        "body": "Done."
      }
    ]
  },
  {
    "number": 101,
    "title": "Openai Classifier",
    "created_at": "2024-11-22T13:52:13Z",
    "closed_at": "2024-11-26T14:35:34Z",
    "labels": [
      "python"
    ],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/pull/101",
    "body": "<!-- markdownlint-disable MD041 MD043 -->\r\n**Issue number:** #85\r\n\r\n## Summary\r\n\r\n### Changes\r\n\r\nAdded an OpenAI classifier as an inbuilt feature. Updated the relevant documentation to reflect the new functionality. This change eliminates the need for users to create custom classifiers by enabling seamless integration of OpenAI's classifier.\r\n\r\n### User experience\r\n\r\n**Before:** Users were required to write custom classifiers to integrate OpenAI's functionality, adding additional development effort and complexity.  \r\n**After:** The OpenAI classifier is now available as a built-in feature, improving DX.\r\n\r\n## Checklist\r\n\r\n* [x] I have performed a self-review of this change  \r\n* [x] Changes have been tested  \r\n* [x] Changes are documented  \r\n\r\n## Acknowledgment\r\n\r\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.\r\n\r\n**Disclaimer**: We value your time and bandwidth. As such, any pull requests created on non-triaged issues might not be successful.",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/101/comments",
    "author": "Rajaniraiyn",
    "comments": [
      {
        "user": "brnaba-aws",
        "created_at": "2024-11-22T13:55:07Z",
        "body": "Thanks, I'll try to test it today."
      }
    ]
  },
  {
    "number": 95,
    "title": "docs: update README.md",
    "created_at": "2024-11-21T15:11:03Z",
    "closed_at": "2024-11-21T19:13:44Z",
    "labels": [],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/pull/95",
    "body": "\r\n\r\n## Summary\r\nfixed typo.\r\n\r\n### Changes\r\n\r\n\r\n\r\n> specialiazed -> specialized\r\n\r\n### User experience\r\n\r\n> Please share what the user experience looks like before and after this change\r\n\r\n## Checklist\r\n\r\nIf your change doesn't seem to apply, please leave them unchecked.\r\n\r\n* [ ] I have performed a self-review of this change\r\n* [ ] Changes have been tested\r\n* [ ] Changes are documented\r\n\r\n<details>\r\n<summary>Is this a breaking change?</summary>\r\n\r\n**RFC issue number**:\r\n\r\nChecklist:\r\n\r\n* [ ] Migration process documented\r\n* [ ] Implement warnings (if it can live side by side)\r\n\r\n</details>\r\n\r\n## Acknowledgment\r\n\r\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.\r\n\r\n**Disclaimer**: We value your time and bandwidth. As such, any pull requests created on non-triaged issues might not be successful.\r\n",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/95/comments",
    "author": "eltociear",
    "comments": [
      {
        "user": "cornelcroi",
        "created_at": "2024-11-21T19:13:39Z",
        "body": "Thanks @eltociear for the PR.\r\n"
      }
    ]
  },
  {
    "number": 87,
    "title": "fix broken link",
    "created_at": "2024-11-19T16:20:19Z",
    "closed_at": "2024-11-19T16:27:36Z",
    "labels": [],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/pull/87",
    "body": "<!-- markdownlint-disable MD041 MD043 -->\r\n**Issue number:** n/a\r\n\r\n## Summary\r\n\r\n### Changes\r\n\r\nThe change updates the URL for the Agent Overlap Analysis tool to reflect its new location in the documentation.\r\n\r\n### User experience\r\n\r\nCan follow link in FAQ :) \r\n\r\n## Checklist\r\n\r\nIf your change doesn't seem to apply, please leave them unchecked.\r\n\r\n* [ X ] I have performed a self-review of this change\r\n* [ ] Changes have been tested\r\n* [ ] Changes are documented\r\n\r\n<details>\r\n<summary>Is this a breaking change?</summary>\r\n\r\nno\r\n\r\n</details>\r\n\r\n## Acknowledgment\r\n\r\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.\r\n\r\n**Disclaimer**: We value your time and bandwidth. As such, any pull requests created on non-triaged issues might not be successful.\r\n",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/87/comments",
    "author": "allaway",
    "comments": [
      {
        "user": "cornelcroi",
        "created_at": "2024-11-19T16:27:32Z",
        "body": "Thank you @allaway for the PR."
      }
    ]
  },
  {
    "number": 85,
    "title": "Feature request: OpenAI Classifier",
    "created_at": "2024-11-19T12:13:34Z",
    "closed_at": "2024-11-27T14:27:25Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/issues/85",
    "body": "### Use case\n\nEnable the use of an inbuilt OpenAI classifier without the need to create a custom one.\n\n### Solution/User Experience\n\nHaving an inbuilt OpenAI classifier would eliminate the need to write a custom classifier. This feature would enable seamless integration of OpenAI’s capabilities as a built-in classifier within the system, rather than requiring users to develop custom implementations.\n\n### Alternative solutions\n\n```markdown\nWe can currently create custom classifiers using the OpenAI SDK, but having it pre-integrated would improve usability and reduce overhead.\n```\n",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/85/comments",
    "author": "Rajaniraiyn",
    "comments": [
      {
        "user": "brnaba-aws",
        "created_at": "2024-11-22T10:27:45Z",
        "body": "@Rajaniraiyn Can you also implement the python version of the classifier? "
      }
    ]
  },
  {
    "number": 83,
    "title": "Fix typo",
    "created_at": "2024-11-18T10:29:58Z",
    "closed_at": "2024-11-18T10:53:22Z",
    "labels": [],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/pull/83",
    "body": "<!-- markdownlint-disable MD041 MD043 -->\r\n\r\n## Summary\r\n\r\n### Changes\r\n\r\n> Fix typo\r\n\r\n### User experience\r\n\r\n> Users have better readability.\r\n\r\n## Checklist\r\n\r\n* [x] I have performed a self-review of this change\r\n* [x] Changes have been tested\r\n* [x] Changes are documented\r\n\r\n<details>\r\nChecklist:\r\n\r\n* [x] Migration process documented\r\n* [x] Implement warnings (if it can live side by side)\r\n</details>\r\n\r\n## Acknowledgment\r\n\r\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.\r\n\r\n**Disclaimer**: We value your time and bandwidth. As such, any pull requests created on non-triaged issues might not be successful.\r\n",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/83/comments",
    "author": "sinwoobang",
    "comments": [
      {
        "user": "cornelcroi",
        "created_at": "2024-11-18T10:53:18Z",
        "body": "Thank you for the PR! I really appreciate your contribution and the time you took to submit these changes. "
      }
    ]
  },
  {
    "number": 81,
    "title": "Feature request: Support for Bedrock Agent sessionAttributes and promptSessionAttributes ",
    "created_at": "2024-11-15T15:59:13Z",
    "closed_at": "2024-11-25T10:32:24Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/issues/81",
    "body": "### Use case\n\nIn the invoke_agent method, the sessionAttributes parameter allows us to pass contextual information such as user IDs, JWT etc.. This feature enables the subsequent transmission of these attributes to Lambda functions within the agent's action group. By using sessionAttributes in this manner, we can use the provided data as credentials to interact with customer business APIs. \n\n### Solution/User Experience\n\nThe user provides user ID and JWT data in AmazonBedrockAgentOptions. Subsequently, this data is passed to the Bedrock agent invocation and then to the action group Lambda functions.\n\n### Alternative solutions\n\n_No response_",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/81/comments",
    "author": "yhou-uk",
    "comments": [
      {
        "user": "brnaba-aws",
        "created_at": "2024-11-22T20:57:47Z",
        "body": "@yhou-uk I guess we can close this?"
      },
      {
        "user": "yhou-uk",
        "created_at": "2024-11-25T10:32:24Z",
        "body": "Happy to close this issue.  Thank you @brnaba-aws !"
      }
    ]
  },
  {
    "number": 79,
    "title": "Saving few tokens.",
    "created_at": "2024-11-14T11:03:24Z",
    "closed_at": "2024-11-14T11:05:28Z",
    "labels": [],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/pull/79",
    "body": "<!-- markdownlint-disable MD041 MD043 -->\r\n**Issue number:**\r\n\r\n## Summary\r\n\r\n### Changes\r\n\r\n> Removing duplicated instructions\r\n\r\n### User experience\r\n\r\n> Please share what the user experience looks like before and after this change\r\n\r\n## Checklist\r\n\r\nIf your change doesn't seem to apply, please leave them unchecked.\r\n\r\n* [ ] I have performed a self-review of this change\r\n* [ ] Changes have been tested\r\n* [ ] Changes are documented\r\n\r\n<details>\r\n<summary>Is this a breaking change?</summary>\r\n\r\n**RFC issue number**:\r\n\r\nChecklist:\r\n\r\n* [ ] Migration process documented\r\n* [ ] Implement warnings (if it can live side by side)\r\n\r\n</details>\r\n\r\n## Acknowledgment\r\n\r\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.\r\n\r\n**Disclaimer**: We value your time and bandwidth. As such, any pull requests created on non-triaged issues might not be successful.\r\n",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/79/comments",
    "author": "FabianRami",
    "comments": [
      {
        "user": "cornelcroi",
        "created_at": "2024-11-14T11:05:16Z",
        "body": "Thanks for the PR."
      },
      {
        "user": "cornelcroi",
        "created_at": "2024-11-14T11:05:53Z",
        "body": "Thank you for the PR."
      }
    ]
  },
  {
    "number": 71,
    "title": "Feature request: Option to manually route to specific agent from list of agents available in orchestrator",
    "created_at": "2024-10-22T06:48:38Z",
    "closed_at": "2024-11-15T18:32:10Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/issues/71",
    "body": "### Use case\n\nHaving something like targetAgent will help routing to a specific agent. \r\n\r\n\r\n    const agentResponse = await this.multiAgentOrchestrator.routeRequest(\r\n      JSON.stringify(query),\r\n      this.userId || \"system\",\r\n      this.sessionId || \"system\",\r\n      { targetAgent: agentName }\r\n    );\n\n### Solution/User Experience\n\nThis will be handy when the routing is conditional and we know which agent to be routed to, instead of relying on orchestrator all the time. \n\n### Alternative solutions\n\n```markdown\nThe lambda has to be invoked seperately.\n```\n",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/71/comments",
    "author": "Arun4you",
    "comments": [
      {
        "user": "cornelcroi",
        "created_at": "2024-10-22T15:00:35Z",
        "body": "Hi,\r\n\r\nI'd like to better understand, are you looking to:\r\n\r\n1. Create a direct routing system that handles all requests without using an LLM?\r\n2. Set up targeted routing where specific userIds and sessionIds get directed to particular Agents?\r\n\r\nThanks."
      },
      {
        "user": "cornelcroi",
        "created_at": "2024-11-15T18:32:10Z",
        "body": "Closing this PR due to inactivity. Feel free to reopen if needed. Thanks!"
      }
    ]
  },
  {
    "number": 68,
    "title": "Bug: Multiple instances of the orchestrator with default classifier",
    "created_at": "2024-10-15T16:14:23Z",
    "closed_at": "2024-10-17T13:07:44Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/issues/68",
    "body": "### Expected Behaviour\n\nTo have a new instance of the orchestrator when used with default value for classifier\n\n### Current Behaviour\n\nThe orchestrator becomes static\n\n### Code snippet\n\n```python\norchestrator = MultiAgentOrchestrator(options=OrchestratorConfig(\r\n        LOG_AGENT_CHAT=True,\r\n        LOG_CLASSIFIER_CHAT=True,\r\n        LOG_CLASSIFIER_RAW_OUTPUT=True,\r\n        LOG_CLASSIFIER_OUTPUT=True,\r\n        LOG_EXECUTION_TIMES=True,\r\n        MAX_RETRIES=3,\r\n        USE_DEFAULT_AGENT_IF_NONE_IDENTIFIED=True,\r\n\r\n        MAX_MESSAGE_PAIRS_PER_AGENT=10       \r\n    ))\n```\n\n\n### Possible Solution\n\nBetter handle the default values initialization in the `init` of the orchestrator\n\n### Steps to Reproduce\n\nInstantiate the orchestrator several times. Issue easy to test with FastAPI.",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/68/comments",
    "author": "cornelcroi",
    "comments": [
      {
        "user": "brnaba-aws",
        "created_at": "2024-10-17T13:07:44Z",
        "body": "Fixed in python 0.0.18"
      }
    ]
  },
  {
    "number": 60,
    "title": "Added model router example",
    "created_at": "2024-10-08T23:57:00Z",
    "closed_at": "2024-11-22T03:28:38Z",
    "labels": [],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/pull/60",
    "body": "<!-- markdownlint-disable MD041 MD043 -->\r\n**Issue number:**\r\n\r\n## Summary\r\n\r\nAn inherent capability of MAO is ability to route the request to different models based on the context using its classifier. In this demo, I have showed an example of how to route the route the request to different models based on `cost vs. reliability vs. privacy.`\r\n\r\n## Acknowledgment\r\n\r\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.\r\n\r\n**Disclaimer**: We value your time and bandwidth. As such, any pull requests created on non-triaged issues might not be successful.\r\n",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/60/comments",
    "author": "veeragoni",
    "comments": [
      {
        "user": "cornelcroi",
        "created_at": "2024-10-09T08:08:14Z",
        "body": "Thank you for submitting this PR.\r\nThe concept of utilizing various agents for tasks based on their performance and cost-effectiveness is really good. \r\nHowever, we can enhance this approach by incorporating realistic business scenarios.\r\nI'd like to see a concrete business use case in each example. \r\nAt present, it's unclear how the classifier would effectively route tasks using the descriptions provided in this PR."
      },
      {
        "user": "veeragoni",
        "created_at": "2024-11-22T03:28:38Z",
        "body": "agreed. let me close this for now and add more industry specific use case"
      }
    ]
  },
  {
    "number": 57,
    "title": "Added Chinese translation for README",
    "created_at": "2024-10-06T02:33:08Z",
    "closed_at": "2024-10-13T03:16:08Z",
    "labels": [],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/pull/57",
    "body": "<!-- markdownlint-disable MD041 MD043 -->\r\n**Issue number:**\r\nI haven't found it,but I think it's a constructive change.And I want to contribute to this project!\r\n\r\n## Summary\r\nChinese translation for README\r\n### Changes\r\n\r\nChinese translation for README\r\n\r\n### User experience\r\nAs a new undergraduate student in China, I know that many students can not directly and easily understand the project because of the language. This can make the project provide a better reading experience, help the project spread, and expand the impact of the project.\r\n\r\n## Checklist\r\n\r\nIf your change doesn't seem to apply, please leave them unchecked.\r\n\r\n* [ yes] I have performed a self-review of this change\r\n* [ ] Changes have been tested\r\n* [ yes] Changes are documented\r\n\r\n<details>\r\n<summary>Is this a breaking change?\r\nNo </summary>\r\n\r\n**RFC issue number**:\r\n\r\nChecklist:\r\n\r\n* [ ] Migration process documented\r\n* [ ] Implement warnings (if it can live side by side)\r\n\r\n</details>\r\n\r\n## Acknowledgment\r\n\r\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.\r\n\r\n**Disclaimer**: We value your time and bandwidth. As such, any pull requests created on non-triaged issues might not be successful.\r\n",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/57/comments",
    "author": "zerd1y",
    "comments": [
      {
        "user": "zerd1y",
        "created_at": "2024-10-06T02:39:58Z",
        "body": "I have a passion for this project and this is my first open source contribution. As a freshman, I know there are a lot of things I don't know and a lot of deficiencies. If you can, please give me some advice.\r\n\r\nAt the same time, I would like to know the direction of researching ai agent and multiagent\r\n\r\n1. Where should I start with my open source project?\r\n\r\n2. What cutting-edge knowledge should I learn? What courses do you recommend?"
      },
      {
        "user": "cornelcroi",
        "created_at": "2024-10-09T19:34:42Z",
        "body": "Thank you for your contribution, @zerd1y . \r\n\r\nTo help us evaluate this addition, we'd like to gauge the demand for a Chinese translation:\r\n- Do you have any data or examples demonstrating the need for a Chinese README?\r\n- If you know others who would find this useful, please ask them to comment or upvote this PR."
      }
    ]
  },
  {
    "number": 53,
    "title": "fix streaming for tooluse in ts",
    "created_at": "2024-09-25T20:17:55Z",
    "closed_at": "2024-10-15T10:32:03Z",
    "labels": [],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/pull/53",
    "body": "<!-- markdownlint-disable MD041 MD043 -->\r\n**Issue number:**\r\n\r\n## Summary\r\n\r\n### Changes\r\n\r\n> Please provide a summary of what's being changed\r\n\r\n### User experience\r\n\r\n> Please share what the user experience looks like before and after this change\r\n\r\n## Checklist\r\n\r\nIf your change doesn't seem to apply, please leave them unchecked.\r\n\r\n* [ ] I have performed a self-review of this change\r\n* [ ] Changes have been tested\r\n* [ ] Changes are documented\r\n\r\n<details>\r\n<summary>Is this a breaking change?</summary>\r\n\r\n**RFC issue number**:\r\n\r\nChecklist:\r\n\r\n* [ ] Migration process documented\r\n* [ ] Implement warnings (if it can live side by side)\r\n\r\n</details>\r\n\r\n## Acknowledgment\r\n\r\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.\r\n\r\n**Disclaimer**: We value your time and bandwidth. As such, any pull requests created on non-triaged issues might not be successful.\r\n",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/53/comments",
    "author": "cornelcroi",
    "comments": [
      {
        "user": "brnaba-aws",
        "created_at": "2024-10-15T10:32:03Z",
        "body": "This is now supported"
      }
    ]
  },
  {
    "number": 49,
    "title": "Agent with toolConfig does not works with Streaming",
    "created_at": "2024-09-24T15:18:54Z",
    "closed_at": "2024-09-25T21:14:05Z",
    "labels": [
      "bug",
      "triage"
    ],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/issues/49",
    "body": "### Expected Behaviour\n\nHi,\r\n\r\nI've followed the documentation for Streaming activation on Agent.\r\nIt seems the streaming mode works with Agent does not have tool_config. Once we set tool_config all LLM request are made without streaming mode\n\n### Current Behaviour\n\nWhen we use tool_config, we could not see the message sent by assistant but only tooUse execution.\r\nSometime when the LLM ask for more detail to achieve a task, we could not see the message\n\n### Code snippet\n\n```python\nFile: agent/bedrock_llm_agent.py:L120\r\n\r\n\r\nif self.tool_config:\r\n\r\n\r\n   continue_with_tools = True\r\n   final_message: ConversationMessage = {'role': ParticipantRole.USER.value, 'content': []}\r\n   max_recursions = self.tool_config.get('toolMaxRecursions', self.default_max_recursions)\r\n\r\n   while continue_with_tools and max_recursions > 0:\r\n                \r\n      bedrock_response = await self.handle_single_response(converse_cmd)\n```\n\n\n### Possible Solution\n\nI will push PR\n\n### Steps to Reproduce\n\nJust configure function calling with agent and Streaming mode = True",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/49/comments",
    "author": "hghandri",
    "comments": [
      {
        "user": "brnaba-aws",
        "created_at": "2024-09-25T21:14:02Z",
        "body": "fixed by #50 "
      }
    ]
  },
  {
    "number": 47,
    "title": "Bug: Throttle",
    "created_at": "2024-09-20T19:43:43Z",
    "closed_at": "2024-09-25T20:18:17Z",
    "labels": [
      "bug",
      "triage"
    ],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/issues/47",
    "body": "### Expected Behaviour\n\nThrottling should not occur \n\n### Current Behaviour\n\nERROR:multi_agent_orchestrator.utils.logger:Error processing request:An error occurred (ThrottlingException) when calling the Converse operation (reached max retries: 4): Too many requests, please wait before trying again. You have sent too many requests. Wait before trying again.\r\nERROR:multi_agent_orchestrator.utils.logger:Error during intent classification: An error occurred (ThrottlingException) when calling the Converse operation (reached max retries: 4): Too many requests, please wait before trying again. You have sent too many requests. Wait before trying again.\n\n### Code snippet\n\n```python\nERROR:multi_agent_orchestrator.utils.logger:Error processing request:An error occurred (ThrottlingException) when calling the Converse operation (reached max retries: 4): Too many requests, please wait before trying again. You have sent too many requests. Wait before trying again.\r\nERROR:multi_agent_orchestrator.utils.logger:Error during intent classification: An error occurred (ThrottlingException) when calling the Converse operation (reached max retries: 4): Too many requests, please wait before trying again. You have sent too many requests. Wait before trying again.\n```\n\n\n### Possible Solution\n\n_No response_\n\n### Steps to Reproduce\n\nI created 2 BR agents which are invoked based on the intent. ",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/47/comments",
    "author": "davep76",
    "comments": [
      {
        "user": "brnaba-aws",
        "created_at": "2024-09-23T08:16:44Z",
        "body": "Hi, thanks for the issue.\r\nI'm not sure I understand the reason for this issue. You are throttled by Amazon Bedrock. There is nothing we can do. We won't retry indefinitely. \r\nPlease check your quota and adjust it (increase) if needed based on your use case."
      }
    ]
  },
  {
    "number": 44,
    "title": "add profile for python bedrock classifier",
    "created_at": "2024-09-14T08:46:26Z",
    "closed_at": "2024-09-26T07:21:16Z",
    "labels": [],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/pull/44",
    "body": "<!-- markdownlint-disable MD041 MD043 -->\r\n**Issue number:**\r\n\r\n## Summary\r\n\r\n### Changes\r\n\r\n> Please provide a summary of what's being changed\r\n\r\n### User experience\r\n\r\n> Please share what the user experience looks like before and after this change\r\n\r\n## Checklist\r\n\r\nIf your change doesn't seem to apply, please leave them unchecked.\r\n\r\n* [ ] I have performed a self-review of this change\r\n* [ ] Changes have been tested\r\n* [ ] Changes are documented\r\n\r\n<details>\r\n<summary>Is this a breaking change?</summary>\r\n\r\n**RFC issue number**:\r\n\r\nChecklist:\r\n\r\n* [ ] Migration process documented\r\n* [ ] Implement warnings (if it can live side by side)\r\n\r\n</details>\r\n\r\n## Acknowledgment\r\n\r\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.\r\n\r\n**Disclaimer**: We value your time and bandwidth. As such, any pull requests created on non-triaged issues might not be successful.\r\n",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/44/comments",
    "author": "cornelcroi",
    "comments": [
      {
        "user": "brnaba-aws",
        "created_at": "2024-09-25T21:20:49Z",
        "body": "Do we still needs this? since we can pass a boto3.client now, this can be handled outside of the orchestrator?"
      },
      {
        "user": "brnaba-aws",
        "created_at": "2024-09-26T07:21:16Z",
        "body": "Closing as now a client can be passed to the Agent class."
      }
    ]
  },
  {
    "number": 43,
    "title": "Correct Project Name Reference In Feature Request Issue Template",
    "created_at": "2024-09-13T16:35:59Z",
    "closed_at": "2024-09-14T08:29:17Z",
    "labels": [],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/pull/43",
    "body": "Change \"CloudFront Hosting Toolkit\" to \"multi-agent-orchestrator\"\r\n\r\n<!-- markdownlint-disable MD041 MD043 -->\r\n**Issue number:**  42\r\n\r\n## Summary\r\n\r\nChange \"CloudFront Hosting Toolkit\" to \"multi-agent-orchestrator\" in Feature Request Issue Template\r\n\r\n### Changes\r\n\r\n> Correcting the incorrect project name references in the Feature Request Issue Template.\r\n\r\n### User experience\r\n\r\n> Before: The project name was incorrect. After: The project name is correct.\r\n\r\n## Checklist\r\n\r\nIf your change doesn't seem to apply, please leave them unchecked.\r\n\r\n* [x] I have performed a self-review of this change\r\n* [x] Changes have been tested\r\n\r\n<details>\r\n<summary>Is this a breaking change?</summary>\r\n\r\nThis is not a breaking change.\r\n\r\n</details>\r\n\r\n## Acknowledgment\r\n\r\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.\r\n\r\n**Disclaimer**: We value your time and bandwidth. As such, any pull requests created on non-triaged issues might not be successful.\r\n",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/43/comments",
    "author": "drobbins-ancile",
    "comments": [
      {
        "user": "cornelcroi",
        "created_at": "2024-09-14T08:29:18Z",
        "body": "Hi,\r\n\r\nThanks for pointing this out and providing the fix.\r\nWe must have done a wrong copy/paste (the Cloudfront Hosting Toolkit is another open source project we released this year)."
      }
    ]
  },
  {
    "number": 42,
    "title": "Bug: Issue Template References Incorrect Project Name",
    "created_at": "2024-09-13T16:31:36Z",
    "closed_at": "2024-09-14T08:29:35Z",
    "labels": [
      "bug",
      "triage"
    ],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/issues/42",
    "body": "### Expected Behaviour\n\nThe feature request issue template references the `multi-agent-orchestrator` project instead of the `CloudFront Hosting Toolkit`.\n\n### Current Behaviour\n\nThe template references the `CloudFront Hosting Tookit`.\n\n### Code snippet\n\n```python\nN/A\n```\n\n\n### Possible Solution\n\nUpdate all occurrences of \"CloudFront Hosting Toolkit\" to \"multi-agent-orchestrator\" in the feature request issue template.\n\n### Steps to Reproduce\n\nStart the issue creation workflow and choose \"feature request\".",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/42/comments",
    "author": "drobbins-ancile",
    "comments": [
      {
        "user": "cornelcroi",
        "created_at": "2024-09-14T08:29:35Z",
        "body": "Thank you.\r\nPR Merged."
      }
    ]
  },
  {
    "number": 31,
    "title": "Better error handling",
    "created_at": "2024-08-29T19:35:18Z",
    "closed_at": "2024-10-15T10:32:33Z",
    "labels": [],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/pull/31",
    "body": "<!-- markdownlint-disable MD041 MD043 -->\r\n**Issue number:**\r\n\r\n## Summary\r\n\r\n### Changes\r\n\r\n> Please provide a summary of what's being changed\r\n\r\n### User experience\r\n\r\n> Please share what the user experience looks like before and after this change\r\n\r\n## Checklist\r\n\r\nIf your change doesn't seem to apply, please leave them unchecked.\r\n\r\n* [ ] I have performed a self-review of this change\r\n* [ ] Changes have been tested\r\n* [ ] Changes are documented\r\n\r\n<details>\r\n<summary>Is this a breaking change?</summary>\r\n\r\n**RFC issue number**:\r\n\r\nChecklist:\r\n\r\n* [ ] Migration process documented\r\n* [ ] Implement warnings (if it can live side by side)\r\n\r\n</details>\r\n\r\n## Acknowledgment\r\n\r\nBy submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.\r\n\r\n**Disclaimer**: We value your time and bandwidth. As such, any pull requests created on non-triaged issues might not be successful.\r\n",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/31/comments",
    "author": "cornelcroi",
    "comments": [
      {
        "user": "brnaba-aws",
        "created_at": "2024-10-15T10:32:33Z",
        "body": "Error are thrown and handled at higher level"
      }
    ]
  },
  {
    "number": 30,
    "title": "Bug:  Cannot find module 'sylvester' after updating to multi-agent-orchestrator ^0.0.13",
    "created_at": "2024-08-29T09:37:14Z",
    "closed_at": "2024-09-26T20:33:52Z",
    "labels": [
      "triage"
    ],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/issues/30",
    "body": "### Expected Behaviour\r\n\r\nThe code should work with the updated version of multi-agent-orchestrator (^0.0.13) just as it did with version ^0.0.12, without errors related to missing modules.\r\n\r\n### Current Behaviour\r\n\r\nAfter updating to multi-agent-orchestrator version ^0.0.13, the Lambda function throws an error indicating that the module 'sylvester' cannot be found. The error trace shows that this issue originates from the multi-agent-orchestrator package's dependencies.\r\n\r\n\r\n\r\n`Response\r\n{\r\n  \"errorType\": \"Runtime.ImportModuleError\",\r\n  \"errorMessage\": \"Error: Cannot find module 'sylvester'\\nRequire stack:\\n- /opt/node_modules/apparatus/lib/apparatus/classifier/logistic_regression_classifier.js\\n- /opt/node_modules/apparatus/lib/apparatus/index.js\\n- /opt/node_modules/natural/lib/natural/classifiers/bayes_classifier.js\\n- /opt/node_modules/natural/lib/natural/classifiers/index.js\\n- /opt/node_modules/natural/lib/natural/index.js\\n- /opt/node_modules/multi-agent-orchestrator/dist/agentOverlapAnalyzer.js\\n- /opt/node_modules/multi-agent-orchestrator/dist/orchestrator.js\\n- /opt/node_modules/multi-agent-orchestrator/dist/index.js\",\r\n  \"trace\": [\r\n    **\"Runtime.ImportModuleError: Error: Cannot find module 'sylvester'\",**\r\n    \"Require stack:\",\r\n    \"- /opt/node_modules/apparatus/lib/apparatus/classifier/logistic_regression_classifier.js\",\r\n    \"- /opt/node_modules/apparatus/lib/apparatus/index.js\",\r\n    \"- /opt/node_modules/natural/lib/natural/classifiers/bayes_classifier.js\",\r\n    \"- /opt/node_modules/natural/lib/natural/classifiers/index.js\",\r\n    \"- /opt/node_modules/natural/lib/natural/index.js\",\r\n    \"- /opt/node_modules/multi-agent-orchestrator/dist/agentOverlapAnalyzer.js\",\r\n    \"- /opt/node_modules/multi-agent-orchestrator/dist/orchestrator.js\",\r\n    \"- /opt/node_modules/multi-agent-orchestrator/dist/index.js\",\r\n    \"    at _loadUserApp (file:///var/runtime/index.mjs:1087:17)\",\r\n    \"    at async UserFunction.js.module.exports.load (file:///var/runtime/index.mjs:1119:21)\",\r\n    \"    at async start (file:///var/runtime/index.mjs:1282:23)\",\r\n    \"    at async file:///var/runtime/index.mjs:1288:1\"\r\n  ]\r\n}\r\n\r\nFunction Logs\r\nator/dist/index.js\",\"reason\":{\"errorType\":\"Error\",\"errorMessage\":\"Cannot find module 'sylvester'\\nRequire stack:\\n- /opt/node_modules/apparatus/lib/apparatus/classifier/logistic_regression_classifier.js\\n- /opt/node_modules/apparatus/lib/apparatus/index.js\\n- /opt/node_modules/natural/lib/natural/classifiers/bayes_classifier.js\\n- /opt/node_modules/natural/lib/natural/classifiers/index.js\\n- /opt/node_modules/natural/lib/natural/index.js\\n- /opt/node_modules/multi-agent-orchestrator/dist/agentOverlapAnalyzer.js\\n- /opt/node_modules/multi-agent-orchestrator/dist/orchestrator.js\\n- /opt/node_modules/multi-agent-orchestrator/dist/index.js\",\"code\":\"MODULE_NOT_FOUND\",\"requireStack\":[\"/opt/node_modules/apparatus/lib/apparatus/classifier/logistic_regression_classifier.js\",\"/opt/node_modules/apparatus/lib/apparatus/index.js\",\"/opt/node_modules/natural/lib/natural/classifiers/bayes_classifier.js\",\"/opt/node_modules/natural/lib/natural/classifiers/index.js\",\"/opt/node_modules/natural/lib/natural/index.js\",\"/opt/node_modules/multi-agent-orchestrator/dist/agentOverlapAnalyzer.js\",\"/opt/node_modules/multi-agent-orchestrator/dist/orchestrator.js\",\"/opt/node_modules/multi-agent-orchestrator/dist/index.js\"],\"stack\":[\"Error: Cannot find module 'sylvester'\",\"Require stack:\",\"- /opt/node_modules/apparatus/lib/apparatus/classifier/logistic_regression_classifier.js\",\"- /opt/node_modules/apparatus/lib/apparatus/index.js\",\"- /opt/node_modules/natural/lib/natural/classifiers/bayes_classifier.js\",\"- /opt/node_modules/natural/lib/natural/classifiers/index.js\",\"- /opt/node_modules/natural/lib/natural/index.js\",\"- /opt/node_modules/multi-agent-orchestrator/dist/agentOverlapAnalyzer.js\",\"- /opt/node_modules/multi-agent-orchestrator/dist/orchestrator.js\",\"- /opt/node_modules/multi-agent-orchestrator/dist/index.js\",\"    at Module._resolveFilename (node:internal/modules/cjs/loader:1145:15)\",\"    at Module._load (node:internal/modules/cjs/loader:986:27)\",\"    at Module.require (node:internal/modules/cjs/loader:1233:19)\",\"    at require (node:internal/modules/helpers:179:18)\",\"    at Object.<anonymous> (/opt/node_modules/apparatus/lib/apparatus/classifier/logistic_regression_classifier.js:26:17)\",\"    at Module._compile (node:internal/modules/cjs/loader:1358:14)\",\"    at Module._extensions..js (node:internal/modules/cjs/loader:1416:10)\",\"    at Module.load (node:internal/modules/cjs/loader:1208:32)\",\"    at Module._load (node:internal/modules/cjs/loader:1024:12)\",\"    at Module.require (node:internal/modules/cjs/loader:1233:19)\"]},\"promise\":{},\"stack\":[\"Runtime.UnhandledPromiseRejection: Error: Cannot find module 'sylvester'\",\"Require stack:\",\"- /opt/node_modules/apparatus/lib/apparatus/classifier/logistic_regression_classifier.js\",\"- /opt/node_modules/apparatus/lib/apparatus/index.js\",\"- /opt/node_modules/natural/lib/natural/classifiers/bayes_classifier.js\",\"- /opt/node_modules/natural/lib/natural/classifiers/index.js\",\"- /opt/node_modules/natural/lib/natural/index.js\",\"- /opt/node_modules/multi-agent-orchestrator/dist/agentOverlapAnalyzer.js\",\"- /opt/node_modules/multi-agent-orchestrator/dist/orchestrator.js\",\"- /opt/node_modules/multi-agent-orchestrator/dist/index.js\",\"    at process.<anonymous> (file:///var/runtime/index.mjs:1276:17)\",\"    at process.emit (node:events:519:28)\",\"    at emitUnhandledRejection (node:internal/process/promises:250:13)\",\"    at throwUnhandledRejectionsMode (node:internal/process/promises:385:19)\",\"    at processPromiseRejections (node:internal/process/promises:470:17)\",\"    at process.processTicksAndRejections (node:internal/process/task_queues:96:32)\"]}\r\nINIT_REPORT Init Duration: 12992.17 ms\tPhase: invoke\tStatus: error\tError Type: Runtime.ImportModuleError\r\nSTART RequestId: d0e67262-8d11-48f2-85d3-bf0abe329c74 Version: $LATEST\r\nEND RequestId: d0e67262-8d11-48f2-85d3-bf0abe329c74\r\nREPORT RequestId: d0e67262-8d11-48f2-85d3-bf0abe329c74\tDuration: 13040.25 ms\tBilled Duration: 13041 ms\tMemory Size: 128 MB\tMax Memory Used: 115 MB\tStatus: error\tError Type: Runtime.ImportModuleError\r\n`\r\n\r\n### Code snippet\r\n\r\n```python\r\n// Use ES module syntax to import modules\r\nimport { MultiAgentOrchestrator, BedrockLLMAgent, BedrockClassifier, DynamoDbChatStorage } from 'multi-agent-orchestrator';\r\n\r\nconst customBedrockClassifier = new BedrockClassifier({\r\n  modelId: 'anthropic.claude-3-5-sonnet-20240620-v1:0',\r\n  inferenceConfig: {\r\n    maxTokens: 100,\r\n    temperature: 0.7,\r\n    topP: 0.9\r\n  }\r\n});\r\n\r\nconst tableName = 'chat_history_multi_agent_orchestrator';\r\nconst region = 'us-east-1';\r\nconst TTL_DURATION = 3600; // in seconds\r\nconst dynamoDbStorage = new DynamoDbChatStorage(tableName, region, 'chat_history_multi_agent_orchestrator_ttl', TTL_DURATION);\r\n\r\nconst orchestrator = new MultiAgentOrchestrator({ \r\n    classifier: customBedrockClassifier,  \r\n    storage: dynamoDbStorage\r\n});\r\n\r\n// Initialize the Tech Agent\r\norchestrator.addAgent(\r\n  new BedrockLLMAgent({\r\n    name: \"Tech Agent\",\r\n    description:\r\n      \"Specializes in technology areas including software development, hardware, AI, cybersecurity, blockchain, cloud computing, emerging tech innovations, and pricing/costs related to technology products and services.\",\r\n    streaming: true\r\n  })\r\n);\r\n\r\n// Initialize the Insurance Agent (general inquiries)\r\norchestrator.addAgent(\r\n  new BedrockLLMAgent({\r\n    name: \"Insurance Agent\",\r\n    description:\r\n      \"Specializes in insurance areas including health insurance, auto insurance, life insurance, home insurance, policy comparisons, claims processing, and risk management.\",\r\n    streaming: true\r\n  })\r\n);\r\n\r\n// Initialize the Natural Disaster Agent\r\norchestrator.addAgent(\r\n  new BedrockLLMAgent({\r\n    name: \"Natural Disaster Agent\",\r\n    description:\r\n      \"Specializes to provide Natural Disaster information. So, Reply 'I am the Natural Disaster Agent' and nothing else\",\r\n    streaming: true\r\n  })\r\n);\r\n\r\n// Lambda handler function\r\nexport const handler = async (event) => {\r\n  // Extract request parameters from the event\r\n  const { query, userId, sessionId } = event;\r\n\r\n  try {\r\n    // Route the request using the orchestrator\r\n    const response = await orchestrator.routeRequest(\r\n      query, userId, sessionId\r\n    );\r\n\r\n    // Handle the response (streaming or non-streaming)\r\n    if (response.streaming == true) {\r\n        console.log(\"\\n** RESPONSE STREAMING ** \\n\");\r\n        // Send metadata immediately\r\n        console.log(`> Agent ID: ${response.metadata.agentId}`);\r\n        console.log(`> Agent Name: ${response.metadata.agentName}`);\r\n        console.log(`> User Input: ${response.metadata.userInput}`);\r\n        console.log(`> User ID: ${response.metadata.userId}`);\r\n        console.log(`> Session ID: ${response.metadata.sessionId}`);\r\n        console.log(\r\n          `> Additional Parameters:`,\r\n          response.metadata.additionalParams\r\n        );\r\n        console.log(`\\n> Response: `);\r\n    \r\n        // Stream the content\r\n        for await (const chunk of response.output) {\r\n          if (typeof chunk === \"string\") {\r\n            process.stdout.write(chunk);\r\n          } else {\r\n            console.error(\"Received unexpected chunk type:\", typeof chunk);\r\n          }\r\n        }\r\n    \r\n    } else {\r\n        // Handle non-streaming response (AgentProcessingResult)\r\n        console.log(\"\\n** RESPONSE ** \\n\");\r\n        console.log(`> Agent ID: ${response.metadata.agentId}`);\r\n        console.log(`> Agent Name: ${response.metadata.agentName}`);\r\n        console.log(`> User Input: ${response.metadata.userInput}`);\r\n        console.log(`> User ID: ${response.metadata.userId}`);\r\n        console.log(`> Session ID: ${response.metadata.sessionId}`);\r\n        console.log(\r\n          `> Additional Parameters:`,\r\n          response.metadata.additionalParams\r\n        );\r\n        console.log(`\\n> Response: ${response.output}`);\r\n        return {\r\n          statusCode: 200,\r\n          body: JSON.stringify({\r\n            message: response.output\r\n          }),\r\n        };\r\n    }\r\n  } catch (error) {\r\n    console.error('Error processing request:', error);\r\n    return {\r\n      statusCode: 500,\r\n      body: JSON.stringify({\r\n        message: 'Internal Server Error',\r\n        error: error.message,\r\n      }),\r\n    };\r\n  }\r\n};\r\n```\r\n\r\n\r\n### Possible Solution\r\n\r\nThe error seems to indicate a missing dependency ('sylvester'). The package multi-agent-orchestrator or one of its dependencies might have been updated in a way that introduces a missing dependency.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Update multi-agent-orchestrator to version ^0.0.13.\r\n\r\n`In AWS CloudShell : npm install multi-agent-orchestrator@latest && zip -r multi-agent-orchestrator-layer.zip node_modules && aws lambda publish-layer-version --layer-name multi-agent-orchestrator --zip-file fileb://multi-agent-orchestrator-layer.zip`\r\n\r\n2. Deploy the Lambda function with the updated package.\r\n3. Invoke the Lambda function to trigger the error.",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/30/comments",
    "author": "valentin-dirken",
    "comments": [
      {
        "user": "cornelcroi",
        "created_at": "2024-08-29T15:00:35Z",
        "body": "\r\nIn the code above I see you have a handler function. I don't follow what you are trying to do by looking at the code snippet.\r\nThe code seems to be for a lambda function but you are trying to push the same zip for the lambda function but also for a layer ?"
      },
      {
        "user": "brnaba-aws",
        "created_at": "2024-09-25T20:18:40Z",
        "body": "Can we close this?"
      },
      {
        "user": "cornelcroi",
        "created_at": "2024-09-26T20:33:52Z",
        "body": "This issue is being closed due to inactivity from the original requester.\r\n"
      }
    ]
  },
  {
    "number": 1,
    "title": "OrchestratorConfig definition does not match in docs/src/content/docs/general/quickstart.md  OrchestratorConfig in src/types/index.ts",
    "created_at": "2024-07-25T03:38:25Z",
    "closed_at": "2024-07-25T10:36:51Z",
    "labels": [
      "bug"
    ],
    "url": "https://github.com/awslabs/multi-agent-orchestrator/issues/1",
    "body": "### Expected Behaviour\n\n`npx ts-node quickstart.ts` runs without error\n\n### Current Behaviour\n\n```\r\n$ npx ts-node quickstart.ts\r\n/home/cloudshell-user/.npm/_npx/1bf7c3c15bf47d04/node_modules/ts-node/src/index.ts:859\r\n    return new TSError(diagnosticText, diagnosticCodes, diagnostics);\r\n           ^\r\nTSError: ⨯ Unable to compile TypeScript:\r\nquickstart.ts:5:10 - error TS2304: Cannot find name 'logAgentConversation'.\r\n```\n\n### Code snippet\n\n```python\nnpx ts-node quickstart.ts\n```\n\n\n### Possible Solution\n\nMatch names.\n\n### Steps to Reproduce\n\n`npx ts-node quickstart.ts`",
    "comments_url": "https://api.github.com/repos/awslabs/multi-agent-orchestrator/issues/1/comments",
    "author": "sammpath",
    "comments": [
      {
        "user": "cornelcroi",
        "created_at": "2024-07-25T08:50:57Z",
        "body": "Thank you for reporting this issue. \r\n\r\nThe problem was the outdated `Quickstart` documentation section.\r\n\r\nWe've identified the problem and updated the quickstart documentation with the correct code. \r\n\r\nPlease revisit the quickstart documentation and use the updated code sample and let us know.\r\nThank you."
      },
      {
        "user": "sammpath",
        "created_at": "2024-07-25T10:36:51Z",
        "body": "Fixed."
      }
    ]
  }
]