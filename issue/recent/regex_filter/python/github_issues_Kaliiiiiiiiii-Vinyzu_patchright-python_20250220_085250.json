[
  {
    "number": 22,
    "title": "Fix linux pipeline.  ",
    "created_at": "2025-02-16T07:48:36Z",
    "closed_at": "2025-02-16T13:14:06Z",
    "labels": [],
    "url": "https://github.com/Kaliiiiiiiiii-Vinyzu/patchright-python/pull/22",
    "body": "This commit resolves a parsing issue in the Linux pipeline due to the quoted key \"Release notes\" in pyproject.toml. The error occurred because TOML requires keys with spaces to be explicitly quoted. Adjustments were made to ensure compatibility while preserving the correct format.",
    "comments_url": "https://api.github.com/repos/Kaliiiiiiiiii-Vinyzu/patchright-python/issues/22/comments",
    "author": "Arenatdk",
    "comments": [
      {
        "user": "Vinyzu",
        "created_at": "2025-02-16T13:13:59Z",
        "body": "Thank you for your contribution!"
      }
    ]
  },
  {
    "number": 7,
    "title": "How to specify custom browser arguments?",
    "created_at": "2024-12-08T16:09:48Z",
    "closed_at": "2024-12-08T22:24:18Z",
    "labels": [
      "invalid",
      "wontfix"
    ],
    "url": "https://github.com/Kaliiiiiiiiii-Vinyzu/patchright-python/issues/7",
    "body": "I need to replace WebGL Renderer, WebGL Vendor, Languages and maybe some other fingerprints that might be used to trace you with random values\r\nIs there some kind of in-house implementation on the library level? Or is the only way to make it manually by executing some js on each page? I would like to not do it this way to not add any detects accidentally\r\n\r\nI would also prefer simulating phone if its possible (not necessary but preferably)\r\nThanks",
    "comments_url": "https://api.github.com/repos/Kaliiiiiiiiii-Vinyzu/patchright-python/issues/7/comments",
    "author": "batreller",
    "comments": [
      {
        "user": "kaliiiiiiiiii",
        "created_at": "2024-12-08T16:38:43Z",
        "body": "Doesn't work like that haha...\r\nYou'll need some custom browser for that to be stable\r\nExecuting JS & most other solutions aren't stable and/or detectable."
      },
      {
        "user": "batreller",
        "created_at": "2024-12-08T17:53:00Z",
        "body": "Thanks for quick response!\r\nI need each browser to work with proxy and different fingerprint so it was like completely different user is on the website every time. Can't these details (WebGL Renderer, WebGL Vendor etc.) be used to expose all the \"bots\"?\r\nIs there already implemented solution for this problem? I know there are some antidetect browsers (like dolphin anty) how do they work?"
      },
      {
        "user": "kaliiiiiiiiii",
        "created_at": "2024-12-08T22:24:18Z",
        "body": "> Is there already implemented solution for this problem? I know there are some antidetect browsers (like dolphin anty) how do they work?\r\n\r\nExactly, that's the solution in my view. They've got a modified//patched chromium build."
      },
      {
        "user": "kaliiiiiiiiii",
        "created_at": "2024-12-08T22:25:54Z",
        "body": "> Can't these details (WebGL Renderer, WebGL Vendor etc.) be used to expose all the \"bots\"?\r\n\r\nDepends on your setup. I'd make a difference between \"hard\" bot detection and fingerprinting. This project currently only aims to cover hard detection.\r\n> Is there already implemented solution for this problem? I know there are some antidetect browsers (like dolphin anty) how do they work?\r\n\r\nExactly, that's the solution in my view. They've got a modified//patched chromium build.\r\n\r\n"
      }
    ]
  },
  {
    "number": 4,
    "title": "[Feature request] support relative user data dir",
    "created_at": "2024-11-24T11:25:05Z",
    "closed_at": "2025-02-16T22:26:42Z",
    "labels": [
      "enhancement",
      "help wanted",
      "invalid"
    ],
    "url": "https://github.com/Kaliiiiiiiiii-Vinyzu/patchright-python/issues/4",
    "body": "When launching a persistent context with a relative user data dir,\r\nChromium shows a `can't access user data dir` popup, even though the directory is created sucessfully.\r\n\r\n```py\r\nwith plw.sync_playwright() as patch:\r\n    yield patch.chromium.launch_persistent_context(\r\n        user_data_dir = './chromium',\r\n        channel = 'chrome',\r\n        headless = False\r\n    )\r\n```\r\n\r\nFixable with absolute pathes:\r\n```py\r\nos.path.abspath('./chromium')\r\n```",
    "comments_url": "https://api.github.com/repos/Kaliiiiiiiiii-Vinyzu/patchright-python/issues/4/comments",
    "author": "Egsagon",
    "comments": [
      {
        "user": "Vinyzu",
        "created_at": "2025-02-10T11:49:10Z",
        "body": "Sorry for the late response.\nI cannot reproduce this issue. I dont see any reasons why relative user-data-dirs shouldnt work.\nThe Error you've documented is most likely caused by lacking permissions of the script/chrome to access the user data dir, running with elevated priviliges should resolve this issue.\n\nIf it doesnt, please make sure that the exact same setup works on playwright, so we can isolate this issue to patchright.\nI will not close for now, please confirm, otherwise i will close this issue for inactivity after some time."
      }
    ]
  }
]