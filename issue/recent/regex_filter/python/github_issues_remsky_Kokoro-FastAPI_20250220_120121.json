[
  {
    "number": 155,
    "title": "Update openai_compatible.py to fix lang_code",
    "created_at": "2025-02-11T15:39:28Z",
    "closed_at": "2025-02-13T06:32:24Z",
    "labels": [],
    "url": "https://github.com/remsky/Kokoro-FastAPI/pull/155",
    "body": "Properly sets lang_code from api request, and applies config default if not set\r\n\r\nThanks for adding the override default feature but it still wasn't working for me, even after I added to the actual api request, tracked it to here.\r\n\r\nThis is my very first pull request btw, so sorry if I've messed anything up",
    "comments_url": "https://api.github.com/repos/remsky/Kokoro-FastAPI/issues/155/comments",
    "author": "Krurst",
    "comments": [
      {
        "user": "remsky",
        "created_at": "2025-02-13T06:30:10Z",
        "body": "Looks good, just simplified the expression a touch. "
      },
      {
        "user": "remsky",
        "created_at": "2025-02-13T06:32:27Z",
        "body": "Thanks!"
      }
    ]
  },
  {
    "number": 152,
    "title": "fixed a bunch of stuff",
    "created_at": "2025-02-11T02:50:08Z",
    "closed_at": "2025-02-13T06:21:12Z",
    "labels": [],
    "url": "https://github.com/remsky/Kokoro-FastAPI/pull/152",
    "body": "Made the api use the normalizer, fixed the docker compose not starting on windows because of line endings, fixed the wrong version of espeak, added better normilzation, improved the sentence splitting, fixed some formatting",
    "comments_url": "https://api.github.com/repos/remsky/Kokoro-FastAPI/issues/152/comments",
    "author": "fireblade2534",
    "comments": [
      {
        "user": "fedot",
        "created_at": "2025-02-11T17:04:14Z",
        "body": "Folks, thank you both for the time and effort! 👍❤️\r\nAppreciate the edits, didn't meant to offense anyone, sorry if my comments were a bit off, point taken! "
      }
    ]
  },
  {
    "number": 116,
    "title": "docker compose fails because of `entrypoint.sh` EOL sequence",
    "created_at": "2025-02-03T16:44:23Z",
    "closed_at": "2025-02-07T06:35:12Z",
    "labels": [],
    "url": "https://github.com/remsky/Kokoro-FastAPI/issues/116",
    "body": "**Describe the bug**\nAs the title says, when running `docker compose --up build` on a Windows host, the command fails towards the end.\n\n**Screenshots or console output**\n```\nkokoro-tts-1  | /opt/nvidia/nvidia_entrypoint.sh: /app/docker/scripts/entrypoint.sh: /bin/sh^M: bad interpreter: No such file or directory\nkokoro-tts-1  | /opt/nvidia/nvidia_entrypoint.sh: line 67: /app/docker/scripts/entrypoint.sh: Success\nkokoro-tts-1 exited with code 126\n```\n\n**Branch / Deployment used**\nlatest master commit (e5b79fc27135e4c054eeb7608da26c86ac7f3344)\n\n**Operating System**\nWindows / NVIDIA GPU\n\n**Additional context**\nChanging the EOL sequence from `CRLF` to `LF` fixed the issue for me.",
    "comments_url": "https://api.github.com/repos/remsky/Kokoro-FastAPI/issues/116/comments",
    "author": "Puncia",
    "comments": [
      {
        "user": "remsky",
        "created_at": "2025-02-07T06:35:04Z",
        "body": "Cheers, sorry about that. Swapped around from WSL and Windows and didn't notice. Should be fixed in this version"
      },
      {
        "user": "BenjaminKeating1986",
        "created_at": "2025-02-17T09:33:11Z",
        "body": "I am getting the same problem, \n2025-02-17 09:31:07 /opt/nvidia/nvidia_entrypoint.sh: line 67: /app/entrypoint.sh: cannot execute: required file not found"
      }
    ]
  },
  {
    "number": 112,
    "title": "how to add more language Voices like zf_xiaobei, zf_xiaoni",
    "created_at": "2025-02-02T09:27:32Z",
    "closed_at": "2025-02-02T09:36:30Z",
    "labels": [],
    "url": "https://github.com/remsky/Kokoro-FastAPI/issues/112",
    "body": "I use docker and install it correctly, everything works fine. but I want to use other language Voices like zf_xiaobei, zf_xiaoni, but I can't find it in the choose menu, what shall I do ? can I login to the docker and add some voice by using \ndocker exec -it kokoro-tts-kokoro-tts-1 /bin/bash\nThen What shall I do after login to the docker?\n",
    "comments_url": "https://api.github.com/repos/remsky/Kokoro-FastAPI/issues/112/comments",
    "author": "dg9999cn",
    "comments": [
      {
        "user": "remsky",
        "created_at": "2025-02-02T09:36:26Z",
        "body": "Haven't quite finished the integration of the v1_0 version, but should be quite soon and will include those voices. \n\nBut to use any custom voice, you'd just want to use the git clone -> docker compose (or uv) build version, or modify the run command to mount the voices folder  to a folder you control in your docker run.  It just dynamically checks the voices folder on every call, so anything added to it will be picked up immediately and available. \n\nYou may be able to add them by connection to the running container, but off hand I'm not sure of the commands to do so.\n"
      }
    ]
  },
  {
    "number": 111,
    "title": "Running FastKoko: Error generating speech",
    "created_at": "2025-02-02T05:02:12Z",
    "closed_at": "2025-02-02T09:44:19Z",
    "labels": [],
    "url": "https://github.com/remsky/Kokoro-FastAPI/issues/111",
    "body": "**Describe the bug**\nA clear and concise description of what the bug is.\n\n**Screenshots or console output**\nIf applicable, add screenshots to help explain your problem. When doing so., please ensure you have the first command that triggered the trace and/or the command that started up your build included, otherwise it is difficult to diagnose. \n\n**Branch / Deployment used**\nLet us know if it's the master branch, or the stable branch indicated in the readme, as well as if you're running it locally, in the cloud, via the docker compose (cpu or gpu), or direct docker run commands. Please include the exact commands used to run in the latter cases.\n\n**Operating System**\nInclude the platform, version numbers of your docker, etc. Whether its GPU (Nvidia or other) or CPU, Mac, Linux, Windows, etc. \n\n**Additional context**\nAdd any other context about the problem here.\nRunning FastKoko (gpu): Error generating speech: MediaSource.addSourceBuffer: Type not supported in MediaSource\n\nMain branch.\n\nLinux, Mint.\n\nLatest Docker on Linux Mint 22",
    "comments_url": "https://api.github.com/repos/remsky/Kokoro-FastAPI/issues/111/comments",
    "author": "noorbeast",
    "comments": [
      {
        "user": "MindSetFPS",
        "created_at": "2025-02-02T06:47:39Z",
        "body": "same here\nedit: it is a frontend error, the api works as expected"
      },
      {
        "user": "remsky",
        "created_at": "2025-02-02T09:39:10Z",
        "body": "I've heard this is an issue with FIrefox and can be resolved for some people by switching to Chrome based (though not always), but have a patch shortly which should be more compatible with any browser"
      },
      {
        "user": "remsky",
        "created_at": "2025-02-02T09:44:19Z",
        "body": "Most likely the same as #103 "
      },
      {
        "user": "noorbeast",
        "created_at": "2025-02-02T09:46:15Z",
        "body": "> I've heard this is an issue with FIrefox and can be resolved for some people by switching to Chrome based (though not always), but have a patch shortly which should be more compatible with any browser\n\nInstalled Brave and indeed it does seem to be a browser related issue, though yesterday Fast Kokoro was working fine on LibreWolf, I am looking forward to a patch for a long term resolution."
      }
    ]
  },
  {
    "number": 80,
    "title": "Potential issue with missing check for existing Instance in `TTSBaseModel.setup()` method",
    "created_at": "2025-01-19T16:54:07Z",
    "closed_at": "2025-01-22T06:52:32Z",
    "labels": [],
    "url": "https://github.com/remsky/Kokoro-FastAPI/issues/80",
    "body": "It seems that in the `TTSBaseModel.setup()` method, the model initialization logic does not include a check (smth like `if cls._instance is None`) to ensure that the model is only initialized once. This may cause multiple setup calls if multiple threads attempt to execute the setup concurrently.\n\nBranch: master\n",
    "comments_url": "https://api.github.com/repos/remsky/Kokoro-FastAPI/issues/80/comments",
    "author": "pashok3d",
    "comments": [
      {
        "user": "remsky",
        "created_at": "2025-01-22T06:52:32Z",
        "body": "Should be resolved now, and model handling in general is improved in the release coming up tonight"
      }
    ]
  },
  {
    "number": 61,
    "title": "Apple Silicon support",
    "created_at": "2025-01-15T17:47:21Z",
    "closed_at": "2025-01-24T12:58:58Z",
    "labels": [
      "enhancement",
      "good first issue"
    ],
    "url": "https://github.com/remsky/Kokoro-FastAPI/issues/61",
    "body": "```\r\ndocker run -p 8880:8880 ghcr.io/remsky/kokoro-fastapi-cpu:v0.1.0post1 # CPU\r\nWARNING: The requested image's platform (linux/amd64) does not match the detected host platform (linux/arm64/v8) and no specific platform was requested\r\n<jemalloc>: MADV_DONTNEED does not work (memset will be used instead)\r\n<jemalloc>: (This is the expected behaviour if you are running under QEMU)\r\n```",
    "comments_url": "https://api.github.com/repos/remsky/Kokoro-FastAPI/issues/61/comments",
    "author": "awdemos",
    "comments": [
      {
        "user": "remsky",
        "created_at": "2025-01-16T04:08:15Z",
        "body": "Should be able to add a build for arm64, will aim to add it on the next release. I was able to build it from source on an M3 without issue earlier\r\n"
      },
      {
        "user": "remsky",
        "created_at": "2025-01-24T12:58:58Z",
        "body": "Should be good to go with the latest tags, v0.1.3 and up. \n\n```\ndocker run -p 8880:8880 ghcr.io/remsky/kokoro-fastapi-cpu:latest # CPU\n```"
      }
    ]
  },
  {
    "number": 60,
    "title": "Instructions to use with openai compatible API",
    "created_at": "2025-01-15T17:35:27Z",
    "closed_at": "2025-01-17T09:21:59Z",
    "labels": [],
    "url": "https://github.com/remsky/Kokoro-FastAPI/issues/60",
    "body": "Please provide instructions on how to use with a private LLM service with an OpenAI compatible API.",
    "comments_url": "https://api.github.com/repos/remsky/Kokoro-FastAPI/issues/60/comments",
    "author": "awdemos",
    "comments": [
      {
        "user": "fireblade2534",
        "created_at": "2025-01-15T18:16:57Z",
        "body": "> Please provide instructions on how to use with a private LLM service with an OpenAI compatible API.\r\n\r\nDo you mean running something like ollama and Kokoro-FastAPI at the same time and accessing them through the same url?"
      }
    ]
  },
  {
    "number": 47,
    "title": "Why is there no Chinese in the sound? I remember kokoro has Chinese.",
    "created_at": "2025-01-14T03:56:03Z",
    "closed_at": "2025-01-18T01:21:36Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/remsky/Kokoro-FastAPI/issues/47",
    "body": "Please tell me what to do. Thank you very much.",
    "comments_url": "https://api.github.com/repos/remsky/Kokoro-FastAPI/issues/47/comments",
    "author": "aklws",
    "comments": [
      {
        "user": "remsky",
        "created_at": "2025-01-14T06:31:29Z",
        "body": "It shouldn't be too bad to add, they just weren't in the original hexxgrad/Kokoro-82M repo. Can take a look once I'm finished up with the latest release "
      },
      {
        "user": "soul667",
        "created_at": "2025-01-15T17:25:09Z",
        "body": "i also want how to do that,thanks you very much.\r\n"
      },
      {
        "user": "lovetian1991",
        "created_at": "2025-01-16T09:07:02Z",
        "body": "请帮忙添加下中文"
      },
      {
        "user": "gitchat1",
        "created_at": "2025-01-17T18:40:57Z",
        "body": "The chinese voice packs have not been open sourced yet. They are part of version 0.23 only version 0.19 has been open sourced so far."
      }
    ]
  },
  {
    "number": 43,
    "title": "GPU image does not use GPU",
    "created_at": "2025-01-13T12:12:31Z",
    "closed_at": "2025-01-13T12:53:46Z",
    "labels": [],
    "url": "https://github.com/remsky/Kokoro-FastAPI/issues/43",
    "body": "I am using following image: ghcr.io/remsky/kokoro-fastapi-gpu:v0.0.5post1 with unmodified `docker-compose.yml` from repo.\r\n```\r\nkokoro-tts-1     | INFO:     Started server process [1]\r\nkokoro-tts-1     | INFO:     Waiting for application startup.\r\nkokoro-tts-1     | 11:30:33 AM | INFO     | Loading TTS model and voice packs...\r\nkokoro-tts-1     | 11:30:33 AM | INFO     | CUDA available: False\r\nkokoro-tts-1     | 11:30:33 AM | INFO     | Initializing model on cpu\r\n```\r\n\r\nImage runs as `appuser` instead of root and on linux you need to be in proper group to use NVIDIA driver (even when using nvidia-container-toolkit).\r\n```\r\ndevilan@darkstar:~/git/Kokoro-FastAPI (master) $ docker exec -it b5ed10b82d7f /bin/bash\r\nappuser@b5ed10b82d7f:/app$ nvidia-smi \r\nFailed to initialize NVML: Insufficient Permissions\r\n```\r\n\r\nYou should at least point this out clearly in README if this app should not work as root user.\r\nThere are some methods to resolve this problem, but each of them compromises system a bit.\r\nYou can chmod 666 /dev/nvidia* so no access restriction for this device (but not everyone would like to do so).",
    "comments_url": "https://api.github.com/repos/remsky/Kokoro-FastAPI/issues/43/comments",
    "author": "DevilaN",
    "comments": [
      {
        "user": "remsky",
        "created_at": "2025-01-13T12:53:46Z",
        "body": "Hey @DevilaN. Thanks for the info. I'm not seeing that issue, though as mentioned in the readme, it's only been tested on Windows 11 w/WSL2 and the HuggingFace A100's for CUDA support + a Mac M3 for CPU (also may require a build from source for arm compatibility, though looking to add the multiplatform image shortly)\r\n\r\nAdded a note in the readme for linux users with this issue, feel free to modify it with a PR with any brief specifics I miss, so they can build from source with the config they'd want. \r\n\r\nbfe2dd522f5eef196973c2c95a0416bc314f17e4"
      },
      {
        "user": "DevilaN",
        "created_at": "2025-01-13T13:21:06Z",
        "body": "Nice!\r\nThere might be a little catch with `add_group:` for users.\r\nIf numerical group id exists in container it is not added, so for me `video` group is the proper one on Gentoo. But it has id: 27 which is also id of `sudo` group inside image `/etc/groups`. Only when I specify id of group instead of it's name it is working great.\r\n\r\nOf course different systems / distros have different permissions / id's so there is no one proper way of doing this.\r\n\r\nIt might be worth mentioning that instead of tinkering with `docker-compose.yml` file it might be better to create `docker-compose.override.yml` and place changes there, so it will not conflict with further repo pulling.\r\n\r\nThank you for your support!"
      }
    ]
  },
  {
    "number": 41,
    "title": "Previous Outputs drop down: list of files is not sorted",
    "created_at": "2025-01-13T07:46:14Z",
    "closed_at": "2025-01-15T02:23:36Z",
    "labels": [
      "good first issue"
    ],
    "url": "https://github.com/remsky/Kokoro-FastAPI/issues/41",
    "body": "The already generated file list in the drop down is not sorted. This makes it difficult to find recently generated clips.\r\n\r\nSuggestion: sort the files by generation date and have most recent first.",
    "comments_url": "https://api.github.com/repos/remsky/Kokoro-FastAPI/issues/41/comments",
    "author": "cduk",
    "comments": [
      {
        "user": "remsky",
        "created_at": "2025-01-13T11:51:19Z",
        "body": "Can add a fix for that in the next update, there's a few other UI improvements in the pipe"
      },
      {
        "user": "remsky",
        "created_at": "2025-01-15T02:23:36Z",
        "body": "Should be resolved in latest version, though I'd give it till later today till the bugfix on model paths is out if you're working from images. From source I think it should build up fine with the compose"
      }
    ]
  },
  {
    "number": 24,
    "title": "can we use custom voices?",
    "created_at": "2025-01-11T14:05:24Z",
    "closed_at": "2025-01-12T10:48:06Z",
    "labels": [],
    "url": "https://github.com/remsky/Kokoro-FastAPI/issues/24",
    "body": "can we use custom voices with text using api?",
    "comments_url": "https://api.github.com/repos/remsky/Kokoro-FastAPI/issues/24/comments",
    "author": "Manancode",
    "comments": [
      {
        "user": "fireblade2534",
        "created_at": "2025-01-11T14:19:17Z",
        "body": "if you mean combining voices in the voicefield add a + bettween each voice you want to combine eg: af+af_sky"
      },
      {
        "user": "Manancode",
        "created_at": "2025-01-12T07:10:00Z",
        "body": "no actually not combining them. I Mean adding more voices? I know i can add actually but I dont have proper hardware for it so cant host it. It would be good if they have an api inference for that "
      },
      {
        "user": "remsky",
        "created_at": "2025-01-12T08:54:59Z",
        "body": "@Manancode Can you explain what you mean? \r\n\r\nIf you already have a .pt, you can just add it in the voices directory. Adding the names via '+' will generate the same. I do have a mixer coming once I finish with some of general deployment and stability improvements, though it doesn't sound like thats what you mean either. "
      },
      {
        "user": "Manancode",
        "created_at": "2025-01-12T15:25:55Z",
        "body": "Hi, thanks for the response! I don't have a custom .pt model. What I'm looking for is the ability to upload custom voice files, like myvoice.mp3, and have the TTS system generate output in that voice. Does your system support this kind of functionality? If not, do you have plans to implement a feature where we can provide audio samples to create custom TTS voices?"
      },
      {
        "user": "remsky",
        "created_at": "2025-01-12T22:15:48Z",
        "body": "Oh gotchya. We have an update loosely planned to incorporate lightweight voice cloning post processing, but it's a little bit away. It's a very small model and each voice comes in from pre-trained voice pack"
      },
      {
        "user": "rowellz",
        "created_at": "2025-01-20T20:19:11Z",
        "body": "@remsky any chance do you know how/where one could train or acquire .pt voice models? Even just a link to the ideal documentation would be super helpful! "
      }
    ]
  },
  {
    "number": 23,
    "title": "Best place to host remotely or possible runpod serverless worker",
    "created_at": "2025-01-11T06:59:05Z",
    "closed_at": "2025-01-16T04:21:14Z",
    "labels": [
      "enhancement"
    ],
    "url": "https://github.com/remsky/Kokoro-FastAPI/issues/23",
    "body": "what do you recommend would be a good way to make this like an end point where they can connect to it as needed with other AI's\n\nI'm not sure if it's best to just push it over to a docker image and run pond serverless or if you all know something a little easier to do this \n\nTrying to build a little project to provide open source to trying to be as budget friendly as I can. Any advice is much appreciated thank you. I was planning on using live kit if it makes sense and possibly a. Eliza framework",
    "comments_url": "https://api.github.com/repos/remsky/Kokoro-FastAPI/issues/23/comments",
    "author": "TheMindExpansionNetwork",
    "comments": [
      {
        "user": "anujnayyar1",
        "created_at": "2025-01-12T00:33:42Z",
        "body": "@remsky firstly thank you for this awesome repo.\r\n\r\n A Runpod Serverless compatible container would be extremely helpful!"
      },
      {
        "user": "remsky",
        "created_at": "2025-01-12T00:43:58Z",
        "body": "@anujnayyar1 @TheMindExpansionNetwork \n\nThat sounds like a great idea, glad it's been helpful. I'll take a look, just finishing up some restructuring to simplify container setup which should make it more deployable "
      },
      {
        "user": "TheMindExpansionNetwork",
        "created_at": "2025-01-12T06:43:17Z",
        "body": "yeah, it's super awesome. I'll tell you. I guess the stack that I'm looking to push with.\n\nServerless-runpod>kokoro>possible rvc but I like your voices > live kit > eliza>to machine or like avatar have a little Meta corner idea for digital entity that lives \n\nI been looking something stable sounds decent because plans start deploying this stuff give people from homeless to learn free education\n\nThrow partys and raves to fund it all\n\nSuper impressed quality amazing how you did it to super transparent \n\nWhat if we did this just idea love to help \n\nWe can have AI even got the pro ai to generate a basic synthetic dataset \n\nOf just midi notes \n\nThen we take that bad boy with all native instruments or other stuff purchased \n\nThen in theory we be legal train ai on it release apache or what ever \n\nIdk how hard be but its and idea \n\nThink we need more open source quality music models \n"
      },
      {
        "user": "quetzalsly",
        "created_at": "2025-01-15T00:39:35Z",
        "body": "Hey sorry to ask this question here but, how does this version of kokoro differ from replicate/jaaari/kokoro-82m?\r\n\r\nI really love the simplicity of using replicate in my workflow but thinking of switching to this one, but also not sure where to host it, how about huggingface dedicated endpoints?"
      },
      {
        "user": "remsky",
        "created_at": "2025-01-15T22:15:15Z",
        "body": "Not sure to be honest, they have it always live and hosted there for cloud use, but I don't know know what source code they're using, just the same base model. This repo is geared more towards local use and development, source files so it can be modified if needed and built on over time. \r\n\r\nFor an equivalent endpoint on local hardware, or any cloud endpoints (haven't tested yet, so if you do manage to, feel free to submit a PR with instructions/mods), you'd probably want to run these to just get the voice server up fast. \r\n\r\n`docker run -p 8880:8880 ghcr.io/remsky/kokoro-fastapi-cpu:v0.1.0post1 # CPU` or\r\n`docker run --gpus all -p 8880:8880 ghcr.io/remsky/kokoro-fastapi-gpu:v0.1.0post1 # Nvidia GPU`\r\n\r\nIf HF doesn't already have a drop in hosting for the voice images, I can take a look around to try and include a guide along with RunPod/etc instructions, just gotta finish up getting the quantized versions and model selection update worked into the code first \r\n\r\n\r\n"
      }
    ]
  },
  {
    "number": 20,
    "title": "Failed to run in docker wsl",
    "created_at": "2025-01-10T17:47:56Z",
    "closed_at": "2025-01-10T17:52:54Z",
    "labels": [],
    "url": "https://github.com/remsky/Kokoro-FastAPI/issues/20",
    "body": "Trying to run it on docker on wsl and I keep getting this error:\r\n``` bash\r\nkokoro-fastapi-kokoro-tts-1     | ERROR:    Traceback (most recent call last):\r\nkokoro-fastapi-kokoro-tts-1     |   File \"/usr/local/lib/python3.10/dist-packages/starlette/routing.py\", line 693, in lifespan\r\nkokoro-fastapi-kokoro-tts-1     |     async with self.lifespan_context(app) as maybe_state:\r\nkokoro-fastapi-kokoro-tts-1     |   File \"/usr/lib/python3.10/contextlib.py\", line 199, in __aenter__\r\nkokoro-fastapi-kokoro-tts-1     |     return await anext(self.gen)\r\nkokoro-fastapi-kokoro-tts-1     |   File \"/usr/local/lib/python3.10/dist-packages/fastapi/routing.py\", line 133, in merged_lifespan\r\nkokoro-fastapi-kokoro-tts-1     |     async with original_context(app) as maybe_original_state:\r\nkokoro-fastapi-kokoro-tts-1     |   File \"/usr/lib/python3.10/contextlib.py\", line 199, in __aenter__\r\nkokoro-fastapi-kokoro-tts-1     |     return await anext(self.gen)\r\nkokoro-fastapi-kokoro-tts-1     |   File \"/usr/local/lib/python3.10/dist-packages/fastapi/routing.py\", line 133, in merged_lifespan\r\nkokoro-fastapi-kokoro-tts-1     |     async with original_context(app) as maybe_original_state:\r\nkokoro-fastapi-kokoro-tts-1     |   File \"/usr/lib/python3.10/contextlib.py\", line 199, in __aenter__\r\nkokoro-fastapi-kokoro-tts-1     |     return await anext(self.gen)\r\nkokoro-fastapi-kokoro-tts-1     |   File \"/app/api/src/main.py\", line 52, in lifespan\r\nkokoro-fastapi-kokoro-tts-1     |     voicepack_count = await TTSModel.setup()\r\nkokoro-fastapi-kokoro-tts-1     |   File \"/app/api/src/services/tts_base.py\", line 46, in setup\r\nkokoro-fastapi-kokoro-tts-1     |     os.makedirs(cls.VOICES_DIR, exist_ok=True)\r\nkokoro-fastapi-kokoro-tts-1     |   File \"/usr/lib/python3.10/os.py\", line 225, in makedirs\r\nkokoro-fastapi-kokoro-tts-1     |     mkdir(name, mode)\r\nkokoro-fastapi-kokoro-tts-1     | PermissionError: [Errno 13] Permission denied: '/app/api/src/voices'\r\nkokoro-fastapi-kokoro-tts-1     |\r\nkokoro-fastapi-kokoro-tts-1     | ERROR:    Application startup failed. Exiting.\r\nkokoro-fastapi-kokoro-tts-1 exited with code 3\r\n```\r\n\r\nThe model-fetcher and gradio-ui containers seem to be running fine but the kokoro-tts container crashes as soon as it starts.\r\nAlso in gradio, I just see a message saying \"TTS service: Waiting for service...\"",
    "comments_url": "https://api.github.com/repos/remsky/Kokoro-FastAPI/issues/20/comments",
    "author": "ronneldavis",
    "comments": [
      {
        "user": "lsnch",
        "created_at": "2025-01-14T04:41:30Z",
        "body": "had the same issue on arch.\r\nreconnected ssh, restarted tmux = resolved. \r\nit was probably permissions at some level, even though i was root."
      },
      {
        "user": "ronneldavis",
        "created_at": "2025-01-16T14:40:56Z",
        "body": "Yeap that's exactly what fixed my issue as well, not sure why it was happening even as root but a restart fixed it"
      }
    ]
  },
  {
    "number": 16,
    "title": "Dynamic trim gap",
    "created_at": "2025-01-09T04:47:15Z",
    "closed_at": "2025-02-11T16:00:10Z",
    "labels": [],
    "url": "https://github.com/remsky/Kokoro-FastAPI/pull/16",
    "body": "changes the system for combining chunks so it ensures there is a consistent gap between chunk speaking ",
    "comments_url": "https://api.github.com/repos/remsky/Kokoro-FastAPI/issues/16/comments",
    "author": "fireblade2534",
    "comments": [
      {
        "user": "fireblade2534",
        "created_at": "2025-01-10T03:09:01Z",
        "body": "@remsky  I think i'm done implementing the dynamic trim code"
      },
      {
        "user": "fireblade2534",
        "created_at": "2025-01-10T03:15:50Z",
        "body": "btw about the conflict in audio.py I think what I have works the best as without it the end of the whole concatenated audio gets normalized which means that the dynamic gap system doesn't work cause it just gets the full audio and not each chunk. "
      },
      {
        "user": "remsky",
        "created_at": "2025-01-10T05:49:50Z",
        "body": "Makes sense. I'll check it out "
      },
      {
        "user": "remsky",
        "created_at": "2025-01-10T10:06:14Z",
        "body": "@fireblade2534 Working a few conflicts through with the implementation, a few bugs on the tests. But will check it out more tomorrow, and add some CI/CD "
      },
      {
        "user": "fireblade2534",
        "created_at": "2025-01-14T17:35:24Z",
        "body": "@remsky"
      },
      {
        "user": "remsky",
        "created_at": "2025-01-16T06:07:58Z",
        "body": "Hey @fireblade2534 , sorry for the delay. Just been adjusting the structure to protect against some of the docker issues, and to make things more modular so different strategies for chunking, etc, can be swapped around more easily. Getting to this soon though"
      },
      {
        "user": "fireblade2534",
        "created_at": "2025-01-16T06:28:33Z",
        "body": "> Hey @fireblade2534 , sorry for the delay. Just been adjusting the structure to protect against some of the docker issues, and to make things more modular so different strategies for chunking, etc, can be swapped around more easily. Getting to this soon though\r\n\r\nGot it"
      },
      {
        "user": "fireblade2534",
        "created_at": "2025-02-10T15:08:41Z",
        "body": "@remsky  is the master branch in a stable state so I can port this over to it?"
      },
      {
        "user": "fireblade2534",
        "created_at": "2025-02-11T16:00:10Z",
        "body": "Continued in #152 "
      }
    ]
  },
  {
    "number": 11,
    "title": "No voices found",
    "created_at": "2025-01-07T23:12:43Z",
    "closed_at": "2025-01-08T04:54:49Z",
    "labels": [],
    "url": "https://github.com/remsky/Kokoro-FastAPI/issues/11",
    "body": "When starting the latest version I get this error when loading the webui:\r\napi.src.services.tts_service:list_voices:265 - Error listing voices: module 'aiofiles' has no attribute 'scandir'\r\n\r\nI am running it on windows through docker build",
    "comments_url": "https://api.github.com/repos/remsky/Kokoro-FastAPI/issues/11/comments",
    "author": "fireblade2534",
    "comments": [
      {
        "user": "fireblade2534",
        "created_at": "2025-01-07T23:15:35Z",
        "body": "Changing the list_voices function to\r\n```\r\n    async def list_voices(self) -> List[str]:\r\n        \"\"\"List all available voices\"\"\"\r\n        voices = []\r\n        try:\r\n\r\n            for entry in os.scandir(TTSModel.VOICES_DIR):\r\n                if entry.name.endswith(\".pt\"):\r\n                    voices.append(entry.name[:-3])  # Remove .pt extension\r\n        except Exception as e:\r\n            logger.error(f\"Error listing voices: {str(e)}\")\r\n        return sorted(voices)\r\n```       \r\n \r\n fixes the issue"
      },
      {
        "user": "remsky",
        "created_at": "2025-01-08T04:45:33Z",
        "body": "Thanks for the catch. Should be fixed on e7ffcf49f526b1e405421d50442c1f8d6f62d627. Had to use the aiofiles scandir a bit differently to get non-blocking file io\r\n"
      }
    ]
  },
  {
    "number": 10,
    "title": "Make urls readable",
    "created_at": "2025-01-07T00:42:25Z",
    "closed_at": "2025-01-07T07:21:53Z",
    "labels": [],
    "url": "https://github.com/remsky/Kokoro-FastAPI/pull/10",
    "body": "Added a function that will take a url and convert alot of the symbols to text so it can be read properly",
    "comments_url": "https://api.github.com/repos/remsky/Kokoro-FastAPI/issues/10/comments",
    "author": "fireblade2534",
    "comments": [
      {
        "user": "remsky",
        "created_at": "2025-01-07T07:21:45Z",
        "body": "Looks good, added some tests and minor changes "
      }
    ]
  },
  {
    "number": 8,
    "title": "No models",
    "created_at": "2025-01-05T09:19:36Z",
    "closed_at": "2025-01-05T10:57:37Z",
    "labels": [],
    "url": "https://github.com/remsky/Kokoro-FastAPI/issues/8",
    "body": "im new with docker. i build it but when i tried to run i had an error:\r\n\r\n`docker run --gpus all -it -p 8888:8888 kokoro:latest\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/uvicorn\", line 8, in <module>\r\n    sys.exit(main())\r\n  File \"/usr/local/lib/python3.10/dist-packages/click/core.py\", line 1161, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.10/dist-packages/click/core.py\", line 1082, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/usr/local/lib/python3.10/dist-packages/click/core.py\", line 1443, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/usr/local/lib/python3.10/dist-packages/click/core.py\", line 788, in invoke\r\n    return __callback(*args, **kwargs)\r\n  File \"/usr/local/lib/python3.10/dist-packages/uvicorn/main.py\", line 412, in main\r\n    run(\r\n  File \"/usr/local/lib/python3.10/dist-packages/uvicorn/main.py\", line 579, in run\r\n    server.run()\r\n  File \"/usr/local/lib/python3.10/dist-packages/uvicorn/server.py\", line 66, in run\r\n    return asyncio.run(self.serve(sockets=sockets))\r\n  File \"/usr/lib/python3.10/asyncio/runners.py\", line 44, in run\r\n    return loop.run_until_complete(main)\r\n  File \"/usr/lib/python3.10/asyncio/base_events.py\", line 649, in run_until_complete\r\n    return future.result()\r\n  File \"/usr/local/lib/python3.10/dist-packages/uvicorn/server.py\", line 70, in serve\r\n    await self._serve(sockets)\r\n  File \"/usr/local/lib/python3.10/dist-packages/uvicorn/server.py\", line 77, in _serve\r\n    config.load()\r\n  File \"/usr/local/lib/python3.10/dist-packages/uvicorn/config.py\", line 435, in load\r\n    self.loaded_app = import_from_string(self.app)\r\n  File \"/usr/local/lib/python3.10/dist-packages/uvicorn/importer.py\", line 22, in import_from_string\r\n    raise exc from None\r\n  File \"/usr/local/lib/python3.10/dist-packages/uvicorn/importer.py\", line 19, in import_from_string\r\n    module = importlib.import_module(module_str)\r\n  File \"/usr/lib/python3.10/importlib/__init__.py\", line 126, in import_module\r\n    return _bootstrap._gcd_import(name[level:], package, level)\r\n  File \"<frozen importlib._bootstrap>\", line 1050, in _gcd_import\r\n  File \"<frozen importlib._bootstrap>\", line 1027, in _find_and_load\r\n  File \"<frozen importlib._bootstrap>\", line 1006, in _find_and_load_unlocked\r\n  File \"<frozen importlib._bootstrap>\", line 688, in _load_unlocked\r\n  File \"<frozen importlib._bootstrap_external>\", line 883, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed\r\n  File \"/app/api/src/main.py\", line 13, in <module>\r\n    from .services.tts_model import TTSModel\r\n  File \"/app/api/src/services/__init__.py\", line 1, in <module>\r\n    from .tts_service import TTSService\r\n  File \"/app/api/src/services/tts_service.py\", line 14, in <module>\r\n    from .tts_model import TTSModel\r\n  File \"/app/api/src/services/tts_model.py\", line 4, in <module>\r\n    from .tts_gpu import TTSGPUModel as TTSModel\r\n  File \"/app/api/src/services/tts_gpu.py\", line 5, in <module>\r\n    from models import build_model\r\nModuleNotFoundError: No module named 'models'\r\n`",
    "comments_url": "https://api.github.com/repos/remsky/Kokoro-FastAPI/issues/8/comments",
    "author": "m4jki",
    "comments": [
      {
        "user": "CodePothunter",
        "created_at": "2025-01-14T05:38:09Z",
        "body": "Same issue, how do you solve it?\r\n"
      }
    ]
  },
  {
    "number": 6,
    "title": "Enhance Audio Converter",
    "created_at": "2025-01-02T19:21:30Z",
    "closed_at": "2025-01-02T22:38:37Z",
    "labels": [],
    "url": "https://github.com/remsky/Kokoro-FastAPI/pull/6",
    "body": "## issue: #3 \r\nKey changes made to the `convert_audio` function:\r\n\r\n* **Normalization before int16 conversion:**  Added normalization to the WAV and PCM conversion paths to prevent clipping and overflow.  The audio data is scaled to the -1 to 1 range before being converted to `np.int16`.\r\n\r\n* **Improved error handling:** Replaced the redundant `ValueError` re-raise with `logger.exception()` to log the full traceback for better debugging. The original exception is then re-raised.\r\n\r\n",
    "comments_url": "https://api.github.com/repos/remsky/Kokoro-FastAPI/issues/6/comments",
    "author": "dino65-dev",
    "comments": [
      {
        "user": "remsky",
        "created_at": "2025-01-02T22:38:32Z",
        "body": "Looks great. Just added some tests and validation plot"
      }
    ]
  },
  {
    "number": 3,
    "title": " Enhance Audio Conversion Service",
    "created_at": "2025-01-01T15:34:05Z",
    "closed_at": "2025-01-02T22:43:17Z",
    "labels": [],
    "url": "https://github.com/remsky/Kokoro-FastAPI/issues/3",
    "body": "#### **Description**\r\nThe `AudioService` class provides functionality for converting audio data to various formats. However, there are several areas where the code can be improved for better functionality, maintainability, and robustness.\r\n\r\n#### **Proposed Changes**\r\n1. **Consistency in Audio Conversion**\r\n   - Use `soundfile` for all format conversions instead of mixing `scipy.io.wavfile` and `soundfile`.\r\n   - Remove unnecessary intermediate steps (e.g., converting to WAV before MP3).\r\n\r\n2. **Support for Additional Formats**\r\n   - Add support for PCM format by directly extracting raw audio data.\r\n   - Consider adding support for other formats like AIFF or ALAC if `soundfile` supports them.\r\n\r\n3. **Data Type Handling**\r\n   - Ensure proper data type conversion for specific formats (e.g., `int16` for WAV and PCM).\r\n\r\n4. **Error Handling**\r\n   - Add specific exception handling for each format to provide more detailed error messages.\r\n   - Log errors with context for easier debugging.\r\n\r\n5. **Logging Improvements**\r\n   - Add detailed logging for each step of the conversion process.\r\n   - Include information about the input and output formats.\r\n\r\n6. **Code Simplification**\r\n   - Remove redundant code and streamline the conversion process.\r\n   - Use a single library (`soundfile`) for all conversions.\r\n\r\n7. **Buffer Management**\r\n   - Ensure proper buffer handling by resetting the buffer position after writing data.\r\n\r\n8. **Type Hints**\r\n   - Add type hints for function parameters and return types for better code readability.\r\n\r\n9. **Format Validation**\r\n   - Validate the `output_format` parameter to ensure only supported formats are processed.",
    "comments_url": "https://api.github.com/repos/remsky/Kokoro-FastAPI/issues/3/comments",
    "author": "dino65-dev",
    "comments": [
      {
        "user": "remsky",
        "created_at": "2025-01-02T09:12:41Z",
        "body": "Sounds like great improvements. If you are able, feel free to make a PR, or I can likely make the adjustment sometime this week"
      },
      {
        "user": "dino65-dev",
        "created_at": "2025-01-02T16:05:24Z",
        "body": "Okk..bro..thanks..."
      },
      {
        "user": "remsky",
        "created_at": "2025-01-02T22:43:04Z",
        "body": "Cheers, merged in 👍\r\n\r\nee5be655969a7087deb34705ca5846605816a391"
      },
      {
        "user": "Shadowfita",
        "created_at": "2025-01-28T06:25:08Z",
        "body": "I'm testing out the web UI and it seems when selecting PCM in the UI, it still sends and receives MP3? Is the MP3 container raw PCM audio data still?"
      },
      {
        "user": "dino65-dev",
        "created_at": "2025-01-30T12:39:44Z",
        "body": "The MP3 container does not contain raw PCM data. If the UI is sending/receiving MP3 instead of PCM, it’s likely due to a miscommunication between the UI and backend."
      },
      {
        "user": "Shadowfita",
        "created_at": "2025-01-30T23:14:46Z",
        "body": "@dino65-dev thanks for confirming! I did confirm that the API endpoint is passing PCM / MP3 accordingly. Must be a UI issue!"
      }
    ]
  },
  {
    "number": 1,
    "title": "add speed",
    "created_at": "2024-12-30T18:39:48Z",
    "closed_at": "2024-12-30T19:39:50Z",
    "labels": [],
    "url": "https://github.com/remsky/Kokoro-FastAPI/pull/1",
    "body": null,
    "comments_url": "https://api.github.com/repos/remsky/Kokoro-FastAPI/issues/1/comments",
    "author": "eschmidbauer",
    "comments": [
      {
        "user": "remsky",
        "created_at": "2024-12-30T19:40:47Z",
        "body": "Tested and looks good, thanks!"
      }
    ]
  }
]